{
  "errors": [],
  "generated_at": "2024-10-27T18:01:08Z",
  "metrics": {
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\docs\\conf.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 52,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\docs\\examples\\native_spa_pkce_auth0.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 1,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 13,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 14,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 8,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\douban.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 1,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 11,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\ebay.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 1,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 12,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\facebook.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 1,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 18,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\fitbit.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 18,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\instagram.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 13,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\mailchimp.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 17,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\plentymarkets.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 20,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\slack.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 20,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\weibo.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 2,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 10,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\oauth1_auth.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 86,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\oauth1_session.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 338,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\oauth2_auth.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 30,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\oauth2_session.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 491,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\setup.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 53,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 0,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\examples\\__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 2,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\examples\\base.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 113,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\examples\\test_native_spa_pkce_auth0.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 33,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_compliance_fixes.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 5,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 8,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 325,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_core.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 4,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 4,
      "SEVERITY.UNDEFINED": 0,
      "loc": 132,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth1_session.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 2,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 287,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_auth.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 2,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 46,
      "nosec": 0,
      "skipped_tests": 0
    },
    "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 20,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 20,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 447,
      "nosec": 0,
      "skipped_tests": 0
    },
    "_totals": {
      "CONFIDENCE.HIGH": 7,
      "CONFIDENCE.LOW": 4,
      "CONFIDENCE.MEDIUM": 35,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 42,
      "SEVERITY.MEDIUM": 4,
      "SEVERITY.UNDEFINED": 0,
      "loc": 2609,
      "nosec": 0,
      "skipped_tests": 0
    }
  },
  "results": [
    {
      "code": "4 authorization_base_url = \"https://OAUTH_IDP_DOMAIN/authorize\"\n5 token_url = \"https://OAUTH_IDP_DOMAIN/oauth/token\"\n6 scope = [\"openid\"]\n",
      "col_offset": 12,
      "end_col_offset": 50,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\docs\\examples\\native_spa_pkce_auth0.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'https://OAUTH_IDP_DOMAIN/oauth/token'",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "11 \n12     session._client_default_token_placement = \"query\"\n13     session.register_compliance_hook(\"access_token_response\", fix_token_type)\n",
      "col_offset": 46,
      "end_col_offset": 53,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\douban.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'query'",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "12         if token.get(\"token_type\") in [\"Application Access Token\", \"User Access Token\"]:\n13             token[\"token_type\"] = \"Bearer\"\n14             fixed_token = json.dumps(token)\n",
      "col_offset": 18,
      "end_col_offset": 30,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\ebay.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'Bearer'",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "21             token[\"expires_in\"] = expires\n22         token[\"token_type\"] = \"Bearer\"\n23         r._content = dumps(token).encode()\n",
      "col_offset": 14,
      "end_col_offset": 26,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\facebook.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'Bearer'",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "6         token = loads(r.text)\n7         token[\"token_type\"] = \"Bearer\"\n8         r._content = dumps(token).encode()\n",
      "col_offset": 14,
      "end_col_offset": 26,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\weibo.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'Bearer'",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "10 \n11     session._client.default_token_placement = \"query\"\n12     session.register_compliance_hook(\"access_token_response\", _missing_token_type)\n",
      "col_offset": 46,
      "end_col_offset": 53,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\requests_oauthlib\\compliance_fixes\\weibo.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'query'",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "26 if sys.argv[-1] == \"publish\":\n27     os.system(\"python setup.py sdist upload\")\n28     sys.exit()\n",
      "col_offset": 4,
      "end_col_offset": 45,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\setup.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 27,
      "line_range": [
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "26 if sys.argv[-1] == \"publish\":\n27     os.system(\"python setup.py sdist upload\")\n28     sys.exit()\n",
      "col_offset": 4,
      "end_col_offset": 45,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\setup.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 27,
      "line_range": [
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "2 import os\n3 import subprocess\n4 import shlex\n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\examples\\base.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "49 \n50         self.proc = subprocess.Popen(\n51             [shutil.which(\"python\"),\n52              outpath],\n53             text=True, bufsize=1,\n54             stdin=subprocess.PIPE,\n55             stdout=subprocess.PIPE\n56         )\n57 \n",
      "col_offset": 20,
      "end_col_offset": 9,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\examples\\base.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 50,
      "line_range": [
        50,
        51,
        52,
        53,
        54,
        55,
        56
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "35     def test_fetch_access_token(self):\n36         token = self.session.fetch_token(\n37             \"https://graph.facebook.com/oauth/access_token\",\n38             client_secret=\"someclientsecret\",\n39             authorization_response=\"https://i.b/?code=hello\",\n40         )\n41         self.assertEqual(token, {\"access_token\": \"urlencoded\", \"token_type\": \"Bearer\"})\n",
      "col_offset": 16,
      "end_col_offset": 9,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_compliance_fixes.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'someclientsecret'",
      "line_number": 36,
      "line_range": [
        36,
        37,
        38,
        39,
        40
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "57     def test_fetch_access_token(self):\n58         self.assertRaises(\n59             InvalidGrantError,\n60             self.session.fetch_token,\n61             \"https://api.fitbit.com/oauth2/token\",\n62             client_secret=\"someclientsecret\",\n63             authorization_response=\"https://i.b/?code=hello\",\n64         )\n65 \n",
      "col_offset": 8,
      "end_col_offset": 9,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_compliance_fixes.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'someclientsecret'",
      "line_number": 58,
      "line_range": [
        58,
        59,
        60,
        61,
        62,
        63,
        64
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "69 \n70         token = self.session.fetch_token(\n71             \"https://api.fitbit.com/oauth2/token\", client_secret=\"good\"\n72         )\n73 \n",
      "col_offset": 16,
      "end_col_offset": 9,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_compliance_fixes.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'good'",
      "line_number": 70,
      "line_range": [
        70,
        71,
        72
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "111     def test_fetch_access_token(self):\n112         token = self.session.fetch_token(\n113             \"https://login.mailchimp.com/oauth2/token\",\n114             client_secret=\"someclientsecret\",\n115             authorization_response=\"https://i.b/?code=hello\",\n116         )\n117         # Times should be close\n",
      "col_offset": 16,
      "end_col_offset": 9,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_compliance_fixes.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'someclientsecret'",
      "line_number": 112,
      "line_range": [
        112,
        113,
        114,
        115,
        116
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "141     def test_fetch_access_token(self):\n142         token = self.session.fetch_token(\n143             \"https://api.weibo.com/oauth2/access_token\",\n144             client_secret=\"someclientsecret\",\n145             authorization_response=\"https://i.b/?code=hello\",\n146         )\n147         self.assertEqual(token, {\"access_token\": \"weibo\", \"token_type\": \"Bearer\"})\n",
      "col_offset": 16,
      "end_col_offset": 9,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_compliance_fixes.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'someclientsecret'",
      "line_number": 142,
      "line_range": [
        142,
        143,
        144,
        145,
        146
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "329         )\n330         assert token[\"token_type\"] == \"Bearer\"\n331 \n",
      "col_offset": 8,
      "end_col_offset": 46,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_compliance_fixes.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 330,
      "line_range": [
        330
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "380         )\n381         assert token[\"token_type\"] == \"Bearer\"\n382 \n",
      "col_offset": 8,
      "end_col_offset": 46,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_compliance_fixes.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 381,
      "line_range": [
        381
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "386         )\n387         assert token[\"token_type\"] == \"Bearer\"\n",
      "col_offset": 8,
      "end_col_offset": 46,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_compliance_fixes.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 387,
      "line_range": [
        387
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "94         with open(fname, \"rb\") as f:\n95             r = requests.post(\n96                 \"http://httpbin.org/post\",\n97                 data={\"hi\": \"there\"},\n98                 files={\"media\": (os.path.basename(f.name), f)},\n99                 headers={\"content-type\": \"application/octet-stream\"},\n100                 auth=oauth,\n101             )\n102             self.assertEqual(r.status_code, 200)\n",
      "col_offset": 16,
      "end_col_offset": 13,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_core.py",
      "issue_confidence": "LOW",
      "issue_cwe": {
        "id": 400,
        "link": "https://cwe.mitre.org/data/definitions/400.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Call to requests without timeout",
      "line_number": 95,
      "line_range": [
        95,
        96,
        97,
        98,
        99,
        100,
        101
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b113_request_without_timeout.html",
      "test_id": "B113",
      "test_name": "request_without_timeout"
    },
    {
      "code": "111 \n112         r = requests.get(\"http://httpbin.org/get\", auth=oauth)\n113         self.assertIsInstance(r.request.url, str)\n",
      "col_offset": 12,
      "end_col_offset": 62,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_core.py",
      "issue_confidence": "LOW",
      "issue_cwe": {
        "id": 400,
        "link": "https://cwe.mitre.org/data/definitions/400.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Call to requests without timeout",
      "line_number": 112,
      "line_range": [
        112
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b113_request_without_timeout.html",
      "test_id": "B113",
      "test_name": "request_without_timeout"
    },
    {
      "code": "122         data = \"a\"\n123         r = requests.post(\"http://httpbin.org/get\", data=data, auth=oauth)\n124         self.assertEqual(\n",
      "col_offset": 12,
      "end_col_offset": 74,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_core.py",
      "issue_confidence": "LOW",
      "issue_cwe": {
        "id": 400,
        "link": "https://cwe.mitre.org/data/definitions/400.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Call to requests without timeout",
      "line_number": 123,
      "line_range": [
        123
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b113_request_without_timeout.html",
      "test_id": "B113",
      "test_name": "request_without_timeout"
    },
    {
      "code": "126         )\n127         r = requests.post(\n128             \"http://httpbin.org/get\",\n129             auth=oauth,\n130             data=data,\n131             headers={\"Content-type\": \"application/json\"},\n132         )\n133         self.assertEqual(r.request.headers.get(\"Content-Type\"), b\"application/json\")\n",
      "col_offset": 12,
      "end_col_offset": 9,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_core.py",
      "issue_confidence": "LOW",
      "issue_cwe": {
        "id": 400,
        "link": "https://cwe.mitre.org/data/definitions/400.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Call to requests without timeout",
      "line_number": 127,
      "line_range": [
        127,
        128,
        129,
        130,
        131,
        132
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b113_request_without_timeout.html",
      "test_id": "B113",
      "test_name": "request_without_timeout"
    },
    {
      "code": "145         url = \"https://example.comm/authorize\"\n146         token = \"asluif023sf\"\n147         auth_url = auth.authorization_url(url, request_token=token)\n",
      "col_offset": 16,
      "end_col_offset": 29,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth1_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'asluif023sf'",
      "line_number": 146,
      "line_range": [
        146
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "262         sess._client.client.resource_owner_key = \"different-key\"\n263         token[\"oauth_token\"] = \"different-key\"\n264 \n",
      "col_offset": 14,
      "end_col_offset": 27,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth1_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'different-key'",
      "line_number": 263,
      "line_range": [
        263
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "27         for client in self.clients:\n28             client.default_token_placement = \"query\"\n29             auth = OAuth2(client=client, token=self.token)\n",
      "col_offset": 45,
      "end_col_offset": 52,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_auth.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'query'",
      "line_number": 28,
      "line_range": [
        28
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "43         for client in self.clients:\n44             client.default_token_placement = \"body\"\n45             auth = OAuth2(client=client, token=self.token)\n",
      "col_offset": 45,
      "end_col_offset": 51,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_auth.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'body'",
      "line_number": 44,
      "line_range": [
        44
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "47         self.client_id = \"someclientid\"\n48         self.client_secret = \"someclientsecret\"\n49         self.user_username = \"user_username\"\n",
      "col_offset": 29,
      "end_col_offset": 47,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'someclientsecret'",
      "line_number": 48,
      "line_range": [
        48
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "49         self.user_username = \"user_username\"\n50         self.user_password = \"user_password\"\n51         self.client_WebApplication = WebApplicationClient(self.client_id, code=CODE)\n",
      "col_offset": 29,
      "end_col_offset": 44,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'user_password'",
      "line_number": 50,
      "line_range": [
        50
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "95             if isinstance(client, LegacyApplicationClient):\n96                 sess.fetch_token(\n97                     \"https://i.b\",\n98                     include_client_id=True,\n99                     cert=cert,\n100                     username=\"username1\",\n101                     password=\"password1\",\n102                 )\n103             else:\n",
      "col_offset": 16,
      "end_col_offset": 17,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'password1'",
      "line_number": 96,
      "line_range": [
        96,
        97,
        98,
        99,
        100,
        101,
        102
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "234                 )\n235                 self.assertRaises(\n236                     ValueError, sess.fetch_token, url, password=\"password1\"\n237                 )\n238                 # otherwise it will pass\n",
      "col_offset": 16,
      "end_col_offset": 17,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'password1'",
      "line_number": 235,
      "line_range": [
        235,
        236,
        237
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "239                 self.assertEqual(\n240                     sess.fetch_token(url, username=\"username1\", password=\"password1\"),\n241                     self.token,\n",
      "col_offset": 20,
      "end_col_offset": 85,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'password1'",
      "line_number": 240,
      "line_range": [
        240
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "256                 )\n257                 self.assertRaises(\n258                     ValueError, sess.fetch_token, url, password=\"password1\"\n259                 )\n260                 # otherwise it will pass\n",
      "col_offset": 16,
      "end_col_offset": 17,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'password1'",
      "line_number": 257,
      "line_range": [
        257,
        258,
        259
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "260                 # otherwise it will pass\n261                 self.assertRaises(\n262                     OAuth2Error,\n263                     sess.fetch_token,\n264                     url,\n265                     username=\"username1\",\n266                     password=\"password1\",\n267                 )\n268             else:\n",
      "col_offset": 16,
      "end_col_offset": 17,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'password1'",
      "line_number": 261,
      "line_range": [
        261,
        262,
        263,
        264,
        265,
        266,
        267
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "297         self.assertEqual(\n298             sess.fetch_token(url, client_secret=\"someclientsecret\"), self.token\n299         )\n",
      "col_offset": 12,
      "end_col_offset": 67,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'someclientsecret'",
      "line_number": 298,
      "line_range": [
        298
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "312         self.assertEqual(\n313             sess.fetch_token(\n314                 url, client_secret=\"someclientsecret\", include_client_id=True\n315             ),\n316             self.token,\n",
      "col_offset": 12,
      "end_col_offset": 13,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'someclientsecret'",
      "line_number": 313,
      "line_range": [
        313,
        314,
        315
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "362         self.assertEqual(\n363             sess.fetch_token(url, client_secret=\"somesecret\", force_querystring=True),\n364             self.token,\n",
      "col_offset": 12,
      "end_col_offset": 85,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'somesecret'",
      "line_number": 363,
      "line_range": [
        363
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "385         self.assertEqual(\n386             sess.fetch_token(url, client_secret=\"\", include_client_id=True), self.token\n387         )\n",
      "col_offset": 12,
      "end_col_offset": 75,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: ''",
      "line_number": 386,
      "line_range": [
        386
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "420                     )\n421                     self.assertRaises(\n422                         ValueError, sess.fetch_token, url, password=\"password1\"\n423                     )\n424                     # otherwise it will pass\n",
      "col_offset": 20,
      "end_col_offset": 21,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'password1'",
      "line_number": 421,
      "line_range": [
        421,
        422,
        423
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "425                     self.assertEqual(\n426                         sess.fetch_token(\n427                             url, username=\"username1\", password=\"password1\"\n428                         ),\n429                         new_token,\n",
      "col_offset": 24,
      "end_col_offset": 25,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'password1'",
      "line_number": 426,
      "line_range": [
        426,
        427,
        428
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "466         self.assertIsNone(sess.access_token)\n467         sess.access_token = \"test-token\"\n468         self.assertEqual(sess.access_token, \"test-token\")\n",
      "col_offset": 28,
      "end_col_offset": 40,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'test-token'",
      "line_number": 467,
      "line_range": [
        467
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "468         self.assertEqual(sess.access_token, \"test-token\")\n469         sess._client.access_token = \"different-token\"\n470         self.assertEqual(sess.access_token, \"different-token\")\n",
      "col_offset": 36,
      "end_col_offset": 53,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'different-token'",
      "line_number": 469,
      "line_range": [
        469
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "478         self.assertEqual(sess.token, token)\n479         token[\"access_token\"] = \"something-else\"\n480         sess.token = token\n",
      "col_offset": 14,
      "end_col_offset": 28,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'something-else'",
      "line_number": 479,
      "line_range": [
        479
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "482         self.assertEqual(sess.token, token)\n483         sess._client.access_token = \"different-token\"\n484         token[\"access_token\"] = \"different-token\"\n",
      "col_offset": 36,
      "end_col_offset": 53,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'different-token'",
      "line_number": 483,
      "line_range": [
        483
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "483         sess._client.access_token = \"different-token\"\n484         token[\"access_token\"] = \"different-token\"\n485         self.assertEqual(sess.access_token, \"different-token\")\n",
      "col_offset": 14,
      "end_col_offset": 28,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'different-token'",
      "line_number": 484,
      "line_range": [
        484
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "517                 )\n518                 self.assertRaises(\n519                     ValueError, sess.fetch_token, url, password=\"password1\"\n520                 )\n521                 # otherwise it will pass\n",
      "col_offset": 16,
      "end_col_offset": 17,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'password1'",
      "line_number": 518,
      "line_range": [
        518,
        519,
        520
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "521                 # otherwise it will pass\n522                 sess.fetch_token(url, username=\"username1\", password=\"password1\")\n523             else:\n",
      "col_offset": 16,
      "end_col_offset": 81,
      "filename": "D:\\bandit\\upstream-repos\\py3-requests-oauthlib\\tests\\test_oauth2_session.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'password1'",
      "line_number": 522,
      "line_range": [
        522
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    }
  ]
}