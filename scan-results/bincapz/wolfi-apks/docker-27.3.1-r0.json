{
    "Files": {
        "/tmp/docker-27.3.1-r0.apk1700014584/.SIGN.RSA.wolfi-signing.rsa.pub": {
            "Path": "/tmp/docker-27.3.1-r0.apk1700014584/.SIGN.RSA.wolfi-signing.rsa.pub",
            "SHA256": "",
            "Size": 0,
            "Skipped": "data file",
            "RiskScore": 0
        },
        "/tmp/docker-27.3.1-r0.apk1700014584/usr/bin/docker-init": {
            "Path": "/tmp/docker-27.3.1-r0.apk1700014584/usr/bin/docker-init",
            "SHA256": "",
            "Size": 0,
            "Skipped": "data file",
            "RiskScore": 0
        },
        "/tmp/docker-27.3.1-r0.apk1700014584/usr/bin/docker-proxy": {
            "Path": "/tmp/docker-27.3.1-r0.apk1700014584/usr/bin/docker-proxy",
            "SHA256": "",
            "Size": 0,
            "RiskScore": 0
        },
        "/tmp/docker-27.3.1-r0.apk1700014584/usr/bin/dockerd": {
            "Path": "datasets/apk/docker-27.3.1-r0.apk âˆ´ /usr/bin/dockerd",
            "SHA256": "3eecaf82d5bf799928f3c3f326fb9815ecbeafc6d3fcb23b9a4c028cadb1b9f2",
            "Size": 108268224,
            "Behaviors": [
                {
                    "Description": "pseudoterminal and tunnel support",
                    "MatchStrings": [
                        "ipsec_tunnel",
                        "ptsname",
                        "rrreclassifytunnel_keyTEI",
                        "sstaticroute2tunneldir",
                        "tunnelEndpointIp",
                        "tunnel_endpoint_ip",
                        "tunnel_kH9",
                        "tunnel_kL",
                        "tunnelingsetCext",
                        "tunneltimestampingocsp"
                    ],
                    "RiskScore": 3,
                    "RiskLevel": "HIGH",
                    "RuleURL": "https://github.com/chainguard-dev/malcontent/blob/main/rules/combo/backdoor/net_term.yara#pseudoterminal_tunnel",
                    "ID": "combo/backdoor/net_term",
                    "RuleName": "pseudoterminal_tunnel"
                },
                {
                    "Description": "selinux firewall",
                    "MatchStrings": [
                        "SELINUXread",
                        "getInterfacesskipping firewalld",
                        "iptables %s: %sUnknown addr t",
                        "iptables --wait -L -n': `%s`failed to de",
                        "iptables FILTER chain %s on cleanup: %vc",
                        "iptables NAT chain %s on cleanup: %vFail",
                        "iptables chains on firewall reloadbridge",
                        "iptables chainscould not find interface",
                        "iptables entries in table %s chain %s :",
                        "iptables failed: %s %v: %s (%s)invalid l",
                        "iptables insteadfailed to create a new c",
                        "iptables is disabledLinked container %s",
                        "iptables is disabledfailed to check brid",
                        "iptables is disablednot enough resources",
                        "iptables not foundinvalid join tokenforw",
                        "iptables rule after failure (%v): %veach",
                        "iptables rules during overla",
                        "iptables rules for bridge network: %vlib",
                        "iptables rules for port mapping %s: %wfa",
                        "iptables rules on cleanup: %v",
                        "iptables rulesPath to the userland pro",
                        "iptables supports",
                        "iptables to function. Please set --icc o",
                        "iptables to truegrpc: no transport secur",
                        "iptables,omitempt",
                        "iptables.(*ChainError).Error",
                        "iptables.(*ChainInfo).Link",
                        "iptables.(*ChainInfo).Output",
                        "iptables.(*ChainInfo).Prerouting",
                        "iptables.(*ChainInfo).Remove",
                        "iptables.(*IPTable).AddReturnRule",
                        "iptables.(*IPTable).EnsureJumpRule",
                        "iptables.(*IPTable).NewChain",
                        "iptables.(*IPTable).ProgramChain",
                        "iptables.(*IPTable).ProgramRule",
                        "iptables.(*IPTable).RawCombinedOutputNat",
                        "iptables.(*IPTable).RemoveE",
                        "iptables.(*IPTable).SetDefaultPolic",
                        "iptables.(*IPTable).e",
                        "iptables.(*IPTable).raw",
                        "iptables.(*interfaceNotFound).Error",
                        "iptables.(*interfaceNotFound).NotFound",
                        "iptables..stmp_0",
                        "iptables..stmp_10",
                        "iptables..stmp_23",
                        "iptables..stmp_9",
                        "iptables..t",
                        "iptables.Action, ...string) error",
                        "iptables.Action, []string) error",
                        "iptables.Action, net.IP, net.IP, int, st",
                        "iptables.AddInterfaceFirewalld",
                        "iptables.ChainError,error",
                        "iptables.ChainError.Error",
                        "iptables.ChainInfo, *iptables.ChainInfo,",
                        "iptables.ChainInfo, error)",
                        "iptables.ChainInfo, string, bool, bool)",
                        "iptables.ChainInfo; X2 *bridge.networkCo",
                        "iptables.Conn",
                        "iptables.DelInterfaceFirewalld",
                        "iptables.DeleteConntrackEntriesB",
                        "iptables.GetIptable",
                        "iptables.IPTable, error)",
                        "iptables.IPTable.AddReturnRule",
                        "iptables.IPTable.EnsureJumpRule",
                        "iptables.IPTable.NewChain",
                        "iptables.IPTable.ProgramChain",
                        "iptables.IPTable.ProgramRule",
                        "iptables.IPTable.Raw-fm",
                        "iptables.IPTable.RawCombinedOutputNative",
                        "iptables.IPTable.RemoveE",
                        "iptables.IPTable.SetDefaultPolic",
                        "iptables.IPTable.e",
                        "iptables.IPTable.raw-fm",
                        "iptables.IPTable.raw.deferwrap1",
                        "iptables.IPTable; X1 *iptables.ChainInfo",
                        "iptables.IPTable; X2 *error; X3 []*libne",
                        "iptables.IPTable; X4 *[][]string; X5 *er",
                        "iptables.IPVersion) (*iptables.ChainInfo",
                        "iptables.IPVersion) (bool, error)",
                        "iptables.IPVersion, *net.IPNet, *bridge.",
                        "iptables.IPVersion; X1 *bridge.networkCo",
                        "iptables.OnReloaded",
                        "iptables.Passthrough",
                        "iptables.Table) (*iptables.ChainInfo, er",
                        "iptables.Table) bool",
                        "iptables.Table) error",
                        "iptables.Table, string, ...string) bool",
                        "iptables.Table, string, iptables.Action,",
                        "iptables.Table, string, iptables.Polic",
                        "iptables.bestEffortLock",
                        "iptables.checkConntrackProgrammable",
                        "iptables.checkRunning",
                        "iptables.connectionEstablished",
                        "iptables.contains",
                        "iptables.dbusConnectionChanged",
                        "iptables.detectIptables",
                        "iptables.filterOutput",
                        "iptables.firewalldInit",
                        "iptables.firewalldRunning",
                        "iptables.firewalldZone.settings",
                        "iptables.initCheck",
                        "iptables.initDependencies",
                        "iptables.initFirewalld",
                        "iptables.initOnce",
                        "iptables.interfaceNotFound,error",
                        "iptables.interfaceNotFound.Error",
                        "iptables.interfaceNotFound.NotFound",
                        "iptables.ip6tablesPath",
                        "iptables.iptablesPath",
                        "iptables.loopbackAddress",
                        "iptables.newConnection",
                        "iptables.onReloaded",
                        "iptables.purgeConntrackState",
                        "iptables.reloaded",
                        "iptables.setupDockerForwardingPolic",
                        "iptables.setupDockerZone",
                        "iptables.signalHandler",
                        "iptables.supportsXlock",
                        "iptables/conntrack.go",
                        "iptables/firewalld.go",
                        "iptables/iptables.go",
                        "iptables=false with --icc=false. ICC=fal",
                        "iptablesCleanFuncs",
                        "iptablesEnabled.deferwrap1",
                        "iptablesEnabled.deferwrap2",
                        "iptablesapplication/vnd.docker.image.roo",
                        "iptablesrootlesslistenerbuildkitNO_PROXY",
                        "iptablesv6Listenable=false (%v)invalid s",
                        "me specifiedno need to register firewalld",
                        "returningfirewalld",
                        "returningunable to initialize firewalld",
                        "setup_firewalld",
                        "t IP addressno need to register firewalld"
                    ],
                    "RiskScore": 3,
                    "RiskLevel": "HIGH",
                    "RuleURL": "https://github.com/chainguard-dev/malcontent/blob/main/rules/combo/degrader/selinux_firewall.yara#selinux_firewall",
                    "ID": "combo/degrader/selinux_firewall",
                    "RuleName": "selinux_firewall"
                },
                {
                    "Description": "probable container escape",
                    "MatchStrings": [
                        "/sys/kernel/security/apparmor",
                        "CAP_SYS_ADMIN",
                        "cgroup.procs",
                        "docker.sock"
                    ],
                    "RiskScore": 3,
                    "RiskLevel": "HIGH",
                    "RuleURL": "https://github.com/chainguard-dev/malcontent/blob/main/rules/combo/exploit/breakout.yara#probable_container_breakout",
                    "ID": "combo/exploit/breakout",
                    "RuleName": "probable_container_breakout"
                },
                {
                    "Description": "commands obfuscated using xor",
                    "MatchStrings": [
                        "\u001f\f\u001b\u0016R::$b_eval2"
                    ],
                    "RiskScore": 3,
                    "RiskLevel": "HIGH",
                    "RuleURL": "https://github.com/chainguard-dev/malcontent/blob/main/rules/evasion/xor-commands.yara#xor_commands",
                    "ID": "evasion/xor/commands",
                    "RuleName": "xor_commands"
                },
                {
                    "Description": "accesses file descriptors of other processes",
                    "MatchStrings": [
                        "/proc/%d/fd"
                    ],
                    "RiskScore": 3,
                    "RiskLevel": "HIGH",
                    "RuleURL": "https://github.com/chainguard-dev/malcontent/blob/main/rules/procfs/pid-fd.yara#proc_fd_high",
                    "ReferenceURL": "https://s.tencent.com/research/report/1219.html",
                    "ID": "procfs/pid/fd",
                    "RuleName": "proc_fd_high"
                }
            ],
            "RiskScore": 3,
            "RiskLevel": "HIGH"
        },
        "/tmp/docker-27.3.1-r0.apk1700014584/var/lib/db/sbom/docker-27.3.1-r0.spdx.json": {
            "Path": "/tmp/docker-27.3.1-r0.apk1700014584/var/lib/db/sbom/docker-27.3.1-r0.spdx.json",
            "SHA256": "",
            "Size": 0,
            "RiskScore": 0
        }
    },
    "Filter": "false_positive,ignore"
}
