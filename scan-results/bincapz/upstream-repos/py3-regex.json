{
    "Files": {
        "/tmp/py3-regex.zip2051847092/LICENSE.txt": {
            "Path": "/tmp/py3-regex.zip2051847092/LICENSE.txt",
            "SHA256": "",
            "Size": 0,
            "Skipped": "data file",
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/MANIFEST.in": {
            "Path": "/tmp/py3-regex.zip2051847092/MANIFEST.in",
            "SHA256": "",
            "Size": 0,
            "Skipped": "data file",
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/README.rst": {
            "Path": "/tmp/py3-regex.zip2051847092/README.rst",
            "SHA256": "",
            "Size": 0,
            "Skipped": "data file",
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/changelog.txt": {
            "Path": "/tmp/py3-regex.zip2051847092/changelog.txt",
            "SHA256": "",
            "Size": 0,
            "Skipped": "data file",
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/docs/Features.html": {
            "Path": "/tmp/py3-regex.zip2051847092/docs/Features.html",
            "SHA256": "",
            "Size": 0,
            "Skipped": "data file",
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/docs/UnicodeProperties.rst": {
            "Path": "/tmp/py3-regex.zip2051847092/docs/UnicodeProperties.rst",
            "SHA256": "",
            "Size": 0,
            "Skipped": "data file",
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/pyproject.toml": {
            "Path": "/tmp/py3-regex.zip2051847092/pyproject.toml",
            "SHA256": "",
            "Size": 0,
            "Skipped": "data file",
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/regex_3/__init__.py": {
            "Path": "/tmp/py3-regex.zip2051847092/regex_3/__init__.py",
            "SHA256": "",
            "Size": 0,
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/regex_3/_regex.c": {
            "Path": "datasets/repo/py3-regex.zip âˆ´ /regex_3/_regex.c",
            "SHA256": "19bd023bfbc13da7d07577c9478ee260f8726ad9f2afa823d54597237989e016",
            "Size": 822083,
            "Behaviors": [
                {
                    "Description": "excessive references to hexadecimal values",
                    "MatchStrings": [
                        "0x001",
                        "0x002",
                        "0x004",
                        "0x008",
                        "0x010",
                        "0x0130",
                        "0x0131",
                        "0x020",
                        "0x03090000",
                        "0x040",
                        "0x080",
                        "0x0A",
                        "0x0D",
                        "0x10000",
                        "0x130",
                        "0x131",
                        "0x20000",
                        "0x2019",
                        "0x2028",
                        "0x2029",
                        "0x27",
                        "0x40000000",
                        "0x7F",
                        "0x80",
                        "0x85",
                        "0xE0",
                        "0xE1",
                        "0xE2",
                        "0xE8",
                        "0xE9",
                        "0xEA",
                        "0xEC",
                        "0xED",
                        "0xEE",
                        "0xF2",
                        "0xF3",
                        "0xF4",
                        "0xF9",
                        "0xFA",
                        "0xFB",
                        "0xFFFF"
                    ],
                    "RiskScore": 3,
                    "RiskLevel": "HIGH",
                    "RuleURL": "https://github.com/chainguard-dev/malcontent/blob/main/rules/obfuscation/generic/hex.yara#excessive_hex_refs",
                    "ID": "obfuscation/generic/hex",
                    "RuleName": "excessive_hex_refs"
                }
            ],
            "RiskScore": 3,
            "RiskLevel": "HIGH"
        },
        "/tmp/py3-regex.zip2051847092/regex_3/_regex.h": {
            "Path": "/tmp/py3-regex.zip2051847092/regex_3/_regex.h",
            "SHA256": "",
            "Size": 0,
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/regex_3/_regex_core.py": {
            "Path": "/tmp/py3-regex.zip2051847092/regex_3/_regex_core.py",
            "SHA256": "",
            "Size": 0,
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/regex_3/_regex_unicode.c": {
            "Path": "/tmp/py3-regex.zip2051847092/regex_3/_regex_unicode.c",
            "SHA256": "",
            "Size": 0,
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/regex_3/_regex_unicode.h": {
            "Path": "/tmp/py3-regex.zip2051847092/regex_3/_regex_unicode.h",
            "SHA256": "",
            "Size": 0,
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/regex_3/regex.py": {
            "Path": "/tmp/py3-regex.zip2051847092/regex_3/regex.py",
            "SHA256": "",
            "Size": 0,
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/regex_3/test_regex.py": {
            "Path": "/tmp/py3-regex.zip2051847092/regex_3/test_regex.py",
            "SHA256": "",
            "Size": 0,
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/setup.py": {
            "Path": "/tmp/py3-regex.zip2051847092/setup.py",
            "SHA256": "",
            "Size": 0,
            "RiskScore": 0
        },
        "/tmp/py3-regex.zip2051847092/tools/build_regex_unicode.py": {
            "Path": "/tmp/py3-regex.zip2051847092/tools/build_regex_unicode.py",
            "SHA256": "",
            "Size": 0,
            "RiskScore": 0
        }
    },
    "Filter": "false_positive,ignore"
}
