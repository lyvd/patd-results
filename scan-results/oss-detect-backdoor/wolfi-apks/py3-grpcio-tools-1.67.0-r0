{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/empty.proto"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 6,
                  "endLine": 47,
                  "endColumn": 15,
                  "snippet": {
                    "text": "// empty messages in your APIs. A typical example is to use it as the request\n// or the response type of an API method. For instance:\n//\n//     service Foo {\n//       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n//     }\n//\n",
                    "rendered": {
                      "text": "// empty messages in your APIs. A typical example is to use it as the request\n// or the response type of an API method. For instance:\n//\n//     service Foo {\n//       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n//     }\n//\n",
                      "markdown": "`// empty messages in your APIs. A typical example is to use it as the request\n// or the response type of an API method. For instance:\n//\n//     service Foo {\n//       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n//     }\n//\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/python_version.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/command.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/timestamp.proto"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 39,
                  "endLine": 139,
                  "endColumn": 43,
                  "snippet": {
                    "text": "  // 9999-12-31T23:59:59Z inclusive.\n  int64 seconds = 1;\n\n  // Non-negative fractions of a second at nanosecond resolution. Negative\n  // second values with fractions must still have non-negative nanos values\n  // that count forward in time. Must be from 0 to 999,999,999\n  // inclusive.\n",
                    "rendered": {
                      "text": "  // 9999-12-31T23:59:59Z inclusive.\n  int64 seconds = 1;\n\n  // Non-negative fractions of a second at nanosecond resolution. Negative\n  // second values with fractions must still have non-negative nanos values\n  // that count forward in time. Must be from 0 to 999,999,999\n  // inclusive.\n",
                      "markdown": "`  // 9999-12-31T23:59:59Z inclusive.\n  int64 seconds = 1;\n\n  // Non-negative fractions of a second at nanosecond resolution. Negative\n  // second values with fractions must still have non-negative nanos values\n  // that count forward in time. Must be from 0 to 999,999,999\n  // inclusive.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/timestamp.proto"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 59,
                  "endLine": 45,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n// A Timestamp represents a point in time independent of any time zone or local\n// calendar, encoded as a count of seconds and fractions of seconds at\n// nanosecond resolution. The count is relative to an epoch at UTC midnight on\n// January 1, 1970, in the proleptic Gregorian calendar which extends the\n// Gregorian calendar backwards to year one.\n//\n",
                    "rendered": {
                      "text": "\n// A Timestamp represents a point in time independent of any time zone or local\n// calendar, encoded as a count of seconds and fractions of seconds at\n// nanosecond resolution. The count is relative to an epoch at UTC midnight on\n// January 1, 1970, in the proleptic Gregorian calendar which extends the\n// Gregorian calendar backwards to year one.\n//\n",
                      "markdown": "`\n// A Timestamp represents a point in time independent of any time zone or local\n// calendar, encoded as a count of seconds and fractions of seconds at\n// nanosecond resolution. The count is relative to an epoch at UTC midnight on\n// January 1, 1970, in the proleptic Gregorian calendar which extends the\n// Gregorian calendar backwards to year one.\n//\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/timestamp.proto"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 67,
                  "endLine": 45,
                  "snippet": {
                    "text": "option csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Timestamp represents a point in time independent of any time zone or local\n// calendar, encoded as a count of seconds and fractions of seconds at\n// nanosecond resolution. The count is relative to an epoch at UTC midnight on\n// January 1, 1970, in the proleptic Gregorian calendar which extends the\n// Gregorian calendar backwards to year one.\n//\n",
                    "rendered": {
                      "text": "option csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Timestamp represents a point in time independent of any time zone or local\n// calendar, encoded as a count of seconds and fractions of seconds at\n// nanosecond resolution. The count is relative to an epoch at UTC midnight on\n// January 1, 1970, in the proleptic Gregorian calendar which extends the\n// Gregorian calendar backwards to year one.\n//\n",
                      "markdown": "`option csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Timestamp represents a point in time independent of any time zone or local\n// calendar, encoded as a count of seconds and fractions of seconds at\n// nanosecond resolution. The count is relative to an epoch at UTC midnight on\n// January 1, 1970, in the proleptic Gregorian calendar which extends the\n// Gregorian calendar backwards to year one.\n//\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/timestamp.proto"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 30,
                  "endLine": 134,
                  "endColumn": 36,
                  "snippet": {
                    "text": "// ) to obtain a formatter capable of generating timestamps in this format.\n//\nmessage Timestamp {\n  // Represents seconds of UTC time since Unix epoch\n  // 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n  // 9999-12-31T23:59:59Z inclusive.\n  int64 seconds = 1;\n",
                    "rendered": {
                      "text": "// ) to obtain a formatter capable of generating timestamps in this format.\n//\nmessage Timestamp {\n  // Represents seconds of UTC time since Unix epoch\n  // 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n  // 9999-12-31T23:59:59Z inclusive.\n  int64 seconds = 1;\n",
                      "markdown": "`// ) to obtain a formatter capable of generating timestamps in this format.\n//\nmessage Timestamp {\n  // Represents seconds of UTC time since Unix epoch\n  // 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n  // 9999-12-31T23:59:59Z inclusive.\n  int64 seconds = 1;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/timestamp.proto"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 6,
                  "endLine": 128,
                  "endColumn": 12,
                  "snippet": {
                    "text": "// method. In Python, a standard `datetime.datetime` object can be converted\n// to this format using\n// [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n// the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n// the Joda Time's [`ISODateTimeFormat.dateTime()`](\n// http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()\n// ) to obtain a formatter capable of generating timestamps in this format.\n",
                    "rendered": {
                      "text": "// method. In Python, a standard `datetime.datetime` object can be converted\n// to this format using\n// [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n// the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n// the Joda Time's [`ISODateTimeFormat.dateTime()`](\n// http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()\n// ) to obtain a formatter capable of generating timestamps in this format.\n",
                      "markdown": "`// method. In Python, a standard `datetime.datetime` object can be converted\n// to this format using\n// [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n// the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n// the Joda Time's [`ISODateTimeFormat.dateTime()`](\n// http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()\n// ) to obtain a formatter capable of generating timestamps in this format.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/timestamp.proto"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 44,
                  "endLine": 101,
                  "endColumn": 50,
                  "snippet": {
                    "text": "//         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n//             .setNanos(now.getNano()).build();\n//\n// Example 6: Compute Timestamp from current time in Python.\n//\n//     timestamp = Timestamp()\n//     timestamp.GetCurrentTime()\n",
                    "rendered": {
                      "text": "//         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n//             .setNanos(now.getNano()).build();\n//\n// Example 6: Compute Timestamp from current time in Python.\n//\n//     timestamp = Timestamp()\n//     timestamp.GetCurrentTime()\n",
                      "markdown": "`//         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n//             .setNanos(now.getNano()).build();\n//\n// Example 6: Compute Timestamp from current time in Python.\n//\n//     timestamp = Timestamp()\n//     timestamp.GetCurrentTime()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/timestamp.proto"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 60,
                  "endLine": 43,
                  "endColumn": 66,
                  "snippet": {
                    "text": "option objc_class_prefix = \"GPB\";\noption csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Timestamp represents a point in time independent of any time zone or local\n// calendar, encoded as a count of seconds and fractions of seconds at\n// nanosecond resolution. The count is relative to an epoch at UTC midnight on\n// January 1, 1970, in the proleptic Gregorian calendar which extends the\n",
                    "rendered": {
                      "text": "option objc_class_prefix = \"GPB\";\noption csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Timestamp represents a point in time independent of any time zone or local\n// calendar, encoded as a count of seconds and fractions of seconds at\n// nanosecond resolution. The count is relative to an epoch at UTC midnight on\n// January 1, 1970, in the proleptic Gregorian calendar which extends the\n",
                      "markdown": "`option objc_class_prefix = \"GPB\";\noption csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Timestamp represents a point in time independent of any time zone or local\n// calendar, encoded as a count of seconds and fractions of seconds at\n// nanosecond resolution. The count is relative to an epoch at UTC midnight on\n// January 1, 1970, in the proleptic Gregorian calendar which extends the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/timestamp.proto"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 36,
                  "endLine": 43,
                  "endColumn": 42,
                  "snippet": {
                    "text": "option objc_class_prefix = \"GPB\";\noption csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Timestamp represents a point in time independent of any time zone or local\n// calendar, encoded as a count of seconds and fractions of seconds at\n// nanosecond resolution. The count is relative to an epoch at UTC midnight on\n// January 1, 1970, in the proleptic Gregorian calendar which extends the\n",
                    "rendered": {
                      "text": "option objc_class_prefix = \"GPB\";\noption csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Timestamp represents a point in time independent of any time zone or local\n// calendar, encoded as a count of seconds and fractions of seconds at\n// nanosecond resolution. The count is relative to an epoch at UTC midnight on\n// January 1, 1970, in the proleptic Gregorian calendar which extends the\n",
                      "markdown": "`option objc_class_prefix = \"GPB\";\noption csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Timestamp represents a point in time independent of any time zone or local\n// calendar, encoded as a count of seconds and fractions of seconds at\n// nanosecond resolution. The count is relative to an epoch at UTC midnight on\n// January 1, 1970, in the proleptic Gregorian calendar which extends the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/protoc.py"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 62,
                  "endLine": 164,
                  "endColumn": 66,
                  "snippet": {
                    "text": "                    # NOTE: The files are returned in topological order of dependencies. Each\n                    # entry is guaranteed to depend only on the modules preceding it in the\n                    # list and the last entry is guaranteed to be our requested module. We\n                    # cache the code from the first invocation at module-scope so that we\n                    # don't have to regenerate code that has already been generated by protoc.\n                    for f in files[:-1]:\n                        module_name = self._generated_file_to_module_name(\n",
                    "rendered": {
                      "text": "                    # NOTE: The files are returned in topological order of dependencies. Each\n                    # entry is guaranteed to depend only on the modules preceding it in the\n                    # list and the last entry is guaranteed to be our requested module. We\n                    # cache the code from the first invocation at module-scope so that we\n                    # don't have to regenerate code that has already been generated by protoc.\n                    for f in files[:-1]:\n                        module_name = self._generated_file_to_module_name(\n",
                      "markdown": "`                    # NOTE: The files are returned in topological order of dependencies. Each\n                    # entry is guaranteed to depend only on the modules preceding it in the\n                    # list and the last entry is guaranteed to be our requested module. We\n                    # cache the code from the first invocation at module-scope so that we\n                    # don't have to regenerate code that has already been generated by protoc.\n                    for f in files[:-1]:\n                        module_name = self._generated_file_to_module_name(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/protoc.py"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 38,
                  "endLine": 8,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/grpc_version.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/duration.proto"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 33,
                  "endLine": 108,
                  "endColumn": 37,
                  "snippet": {
                    "text": "  // 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n  int64 seconds = 1;\n\n  // Signed fractions of a second at nanosecond resolution of the span\n  // of time. Durations less than one second are represented with a 0\n  // `seconds` field and a positive or negative `nanos` field. For durations\n  // of one second or more, a non-zero value for the `nanos` field must be\n",
                    "rendered": {
                      "text": "  // 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n  int64 seconds = 1;\n\n  // Signed fractions of a second at nanosecond resolution of the span\n  // of time. Durations less than one second are represented with a 0\n  // `seconds` field and a positive or negative `nanos` field. For durations\n  // of one second or more, a non-zero value for the `nanos` field must be\n",
                      "markdown": "`  // 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n  int64 seconds = 1;\n\n  // Signed fractions of a second at nanosecond resolution of the span\n  // of time. Durations less than one second are represented with a 0\n  // `seconds` field and a positive or negative `nanos` field. For durations\n  // of one second or more, a non-zero value for the `nanos` field must be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/duration.proto"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 49,
                  "endLine": 44,
                  "endColumn": 53,
                  "snippet": {
                    "text": "option csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Duration represents a signed, fixed-length span of time represented\n// as a count of seconds and fractions of seconds at nanosecond\n// resolution. It is independent of any calendar and concepts like \"day\"\n// or \"month\". It is related to Timestamp in that the difference between\n// two Timestamp values is a Duration and it can be added or subtracted\n",
                    "rendered": {
                      "text": "option csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Duration represents a signed, fixed-length span of time represented\n// as a count of seconds and fractions of seconds at nanosecond\n// resolution. It is independent of any calendar and concepts like \"day\"\n// or \"month\". It is related to Timestamp in that the difference between\n// two Timestamp values is a Duration and it can be added or subtracted\n",
                      "markdown": "`option csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Duration represents a signed, fixed-length span of time represented\n// as a count of seconds and fractions of seconds at nanosecond\n// resolution. It is independent of any calendar and concepts like \"day\"\n// or \"month\". It is related to Timestamp in that the difference between\n// two Timestamp values is a Duration and it can be added or subtracted\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/duration.proto"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 55,
                  "endLine": 43,
                  "endColumn": 61,
                  "snippet": {
                    "text": "option objc_class_prefix = \"GPB\";\noption csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Duration represents a signed, fixed-length span of time represented\n// as a count of seconds and fractions of seconds at nanosecond\n// resolution. It is independent of any calendar and concepts like \"day\"\n// or \"month\". It is related to Timestamp in that the difference between\n",
                    "rendered": {
                      "text": "option objc_class_prefix = \"GPB\";\noption csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Duration represents a signed, fixed-length span of time represented\n// as a count of seconds and fractions of seconds at nanosecond\n// resolution. It is independent of any calendar and concepts like \"day\"\n// or \"month\". It is related to Timestamp in that the difference between\n",
                      "markdown": "`option objc_class_prefix = \"GPB\";\noption csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\n\n// A Duration represents a signed, fixed-length span of time represented\n// as a count of seconds and fractions of seconds at nanosecond\n// resolution. It is independent of any calendar and concepts like \"day\"\n// or \"month\". It is related to Timestamp in that the difference between\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/any.proto"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 54,
                  "endLine": 130,
                  "endColumn": 58,
                  "snippet": {
                    "text": "//\nmessage Any {\n  // A URL/resource name that uniquely identifies the type of the serialized\n  // protocol buffer message. This string must contain at least\n  // one \"/\" character. The last segment of the URL's path must represent\n  // the fully qualified name of the type (as in\n  // `path/google.protobuf.Duration`). The name should be in a canonical form\n",
                    "rendered": {
                      "text": "//\nmessage Any {\n  // A URL/resource name that uniquely identifies the type of the serialized\n  // protocol buffer message. This string must contain at least\n  // one \"/\" character. The last segment of the URL's path must represent\n  // the fully qualified name of the type (as in\n  // `path/google.protobuf.Duration`). The name should be in a canonical form\n",
                      "markdown": "`//\nmessage Any {\n  // A URL/resource name that uniquely identifies the type of the serialized\n  // protocol buffer message. This string must contain at least\n  // one \"/\" character. The last segment of the URL's path must represent\n  // the fully qualified name of the type (as in\n  // `path/google.protobuf.Duration`). The name should be in a canonical form\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/any.proto"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 4,
                  "endLine": 137,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  // (e.g., leading \".\" is not accepted).\n  //\n  // In practice, teams usually precompile into the binary all types that they\n  // expect it to use in the context of Any. However, for URLs which use the\n  // scheme `http`, `https`, or no scheme, one can optionally set up a type\n  // server that maps type URLs to message definitions as follows:\n  //\n",
                    "rendered": {
                      "text": "  // (e.g., leading \".\" is not accepted).\n  //\n  // In practice, teams usually precompile into the binary all types that they\n  // expect it to use in the context of Any. However, for URLs which use the\n  // scheme `http`, `https`, or no scheme, one can optionally set up a type\n  // server that maps type URLs to message definitions as follows:\n  //\n",
                      "markdown": "`  // (e.g., leading \".\" is not accepted).\n  //\n  // In practice, teams usually precompile into the binary all types that they\n  // expect it to use in the context of Any. However, for URLs which use the\n  // scheme `http`, `https`, or no scheme, one can optionally set up a type\n  // server that maps type URLs to message definitions as follows:\n  //\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpcio_tools-1.67.0-py3.12.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 68,
                  "endLine": 123,
                  "endColumn": 72,
                  "snippet": {
                    "text": "    static const Type kPosMax = SIGNED_INT_MAX(Type); \\\\\n                               ^\n\n  And your toolchain is GCC (at the time of this writing, up through at least\n  GCC 6.0), this is probably a bug where GCC chokes on constant expressions\n  when the :code:`-fwrapv` flag is specified. You should consider setting your\n  environment with :code:`CFLAGS=-fno-wrapv` or using clang (:code:`CC=clang`).\n",
                    "rendered": {
                      "text": "    static const Type kPosMax = SIGNED_INT_MAX(Type); \\\\\n                               ^\n\n  And your toolchain is GCC (at the time of this writing, up through at least\n  GCC 6.0), this is probably a bug where GCC chokes on constant expressions\n  when the :code:`-fwrapv` flag is specified. You should consider setting your\n  environment with :code:`CFLAGS=-fno-wrapv` or using clang (:code:`CC=clang`).\n",
                      "markdown": "`    static const Type kPosMax = SIGNED_INT_MAX(Type); \\\\\n                               ^\n\n  And your toolchain is GCC (at the time of this writing, up through at least\n  GCC 6.0), this is probably a bug where GCC chokes on constant expressions\n  when the :code:`-fwrapv` flag is specified. You should consider setting your\n  environment with :code:`CFLAGS=-fno-wrapv` or using clang (:code:`CC=clang`).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpcio_tools-1.67.0-py3.12.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 9,
                  "endLine": 91,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nYou cannot currently install Python from source on Windows. Things might work\nout for you in MSYS2 (follow the Linux instructions), but it isn't officially\nsupported at the moment.\n\nTroubleshooting\n~~~~~~~~~~~~~~~\n",
                    "rendered": {
                      "text": "\nYou cannot currently install Python from source on Windows. Things might work\nout for you in MSYS2 (follow the Linux instructions), but it isn't officially\nsupported at the moment.\n\nTroubleshooting\n~~~~~~~~~~~~~~~\n",
                      "markdown": "`\nYou cannot currently install Python from source on Windows. Things might work\nout for you in MSYS2 (follow the Linux instructions), but it isn't officially\nsupported at the moment.\n\nTroubleshooting\n~~~~~~~~~~~~~~~\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpcio_tools-1.67.0-py3.12.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 17,
                  "endLine": 81,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  $ export REPO_ROOT=grpc  # REPO_ROOT can be any directory of your choice\n  $ git clone -b RELEASE_TAG_HERE https://github.com/grpc/grpc $REPO_ROOT\n  $ cd $REPO_ROOT\n  $ git submodule update --init\n\n  $ cd tools/distrib/python/grpcio_tools\n  $ python ../make_grpcio_tools.py\n",
                    "rendered": {
                      "text": "  $ export REPO_ROOT=grpc  # REPO_ROOT can be any directory of your choice\n  $ git clone -b RELEASE_TAG_HERE https://github.com/grpc/grpc $REPO_ROOT\n  $ cd $REPO_ROOT\n  $ git submodule update --init\n\n  $ cd tools/distrib/python/grpcio_tools\n  $ python ../make_grpcio_tools.py\n",
                      "markdown": "`  $ export REPO_ROOT=grpc  # REPO_ROOT can be any directory of your choice\n  $ git clone -b RELEASE_TAG_HERE https://github.com/grpc/grpc $REPO_ROOT\n  $ cd $REPO_ROOT\n  $ git submodule update --init\n\n  $ cd tools/distrib/python/grpcio_tools\n  $ python ../make_grpcio_tools.py\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpcio_tools-1.67.0-py3.12.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 41,
                  "endLine": 155,
                  "endColumn": 49,
                  "snippet": {
                    "text": ":code:`.proto` file into a :code:`_pb2.py` file in the same directory.\n\nNote that this particular approach requires :code:`grpcio-tools` to be\ninstalled on the machine before the setup script is invoked (i.e. no\ncombination of :code:`setup_requires` or :code:`install_requires` will provide\naccess to :code:`grpc_tools.command.BuildPackageProtos` if it isn't already\ninstalled). One way to work around this can be found in our\n",
                    "rendered": {
                      "text": ":code:`.proto` file into a :code:`_pb2.py` file in the same directory.\n\nNote that this particular approach requires :code:`grpcio-tools` to be\ninstalled on the machine before the setup script is invoked (i.e. no\ncombination of :code:`setup_requires` or :code:`install_requires` will provide\naccess to :code:`grpc_tools.command.BuildPackageProtos` if it isn't already\ninstalled). One way to work around this can be found in our\n",
                      "markdown": "`:code:`.proto` file into a :code:`_pb2.py` file in the same directory.\n\nNote that this particular approach requires :code:`grpcio-tools` to be\ninstalled on the machine before the setup script is invoked (i.e. no\ncombination of :code:`setup_requires` or :code:`install_requires` will provide\naccess to :code:`grpc_tools.command.BuildPackageProtos` if it isn't already\ninstalled). One way to work around this can be found in our\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpcio_tools-1.67.0-py3.12.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 35,
                  "endLine": 123,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    static const Type kPosMax = SIGNED_INT_MAX(Type); \\\\\n                               ^\n\n  And your toolchain is GCC (at the time of this writing, up through at least\n  GCC 6.0), this is probably a bug where GCC chokes on constant expressions\n  when the :code:`-fwrapv` flag is specified. You should consider setting your\n  environment with :code:`CFLAGS=-fno-wrapv` or using clang (:code:`CC=clang`).\n",
                    "rendered": {
                      "text": "    static const Type kPosMax = SIGNED_INT_MAX(Type); \\\\\n                               ^\n\n  And your toolchain is GCC (at the time of this writing, up through at least\n  GCC 6.0), this is probably a bug where GCC chokes on constant expressions\n  when the :code:`-fwrapv` flag is specified. You should consider setting your\n  environment with :code:`CFLAGS=-fno-wrapv` or using clang (:code:`CC=clang`).\n",
                      "markdown": "`    static const Type kPosMax = SIGNED_INT_MAX(Type); \\\\\n                               ^\n\n  And your toolchain is GCC (at the time of this writing, up through at least\n  GCC 6.0), this is probably a bug where GCC chokes on constant expressions\n  when the :code:`-fwrapv` flag is specified. You should consider setting your\n  environment with :code:`CFLAGS=-fno-wrapv` or using clang (:code:`CC=clang`).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpcio_tools-1.67.0-py3.12.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 8,
                  "endLine": 113,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n  ::\n\n    sudo apt-get install python-dev\n\n  If you see something similar to:\n\n",
                    "rendered": {
                      "text": "\n  ::\n\n    sudo apt-get install python-dev\n\n  If you see something similar to:\n\n",
                      "markdown": "`\n  ::\n\n    sudo apt-get install python-dev\n\n  If you see something similar to:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpcio_tools-1.67.0-py3.12.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 35,
                  "endLine": 87,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  $ python ../make_grpcio_tools.py\n\n  # For the next command do `sudo pip install` if you get permission-denied errors\n  $ GRPC_PYTHON_BUILD_WITH_CYTHON=1 pip install .\n\nYou cannot currently install Python from source on Windows. Things might work\nout for you in MSYS2 (follow the Linux instructions), but it isn't officially\n",
                    "rendered": {
                      "text": "  $ python ../make_grpcio_tools.py\n\n  # For the next command do `sudo pip install` if you get permission-denied errors\n  $ GRPC_PYTHON_BUILD_WITH_CYTHON=1 pip install .\n\nYou cannot currently install Python from source on Windows. Things might work\nout for you in MSYS2 (follow the Linux instructions), but it isn't officially\n",
                      "markdown": "`  $ python ../make_grpcio_tools.py\n\n  # For the next command do `sudo pip install` if you get permission-denied errors\n  $ GRPC_PYTHON_BUILD_WITH_CYTHON=1 pip install .\n\nYou cannot currently install Python from source on Windows. Things might work\nout for you in MSYS2 (follow the Linux instructions), but it isn't officially\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpcio_tools-1.67.0-py3.12.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 33,
                  "endLine": 86,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  $ cd tools/distrib/python/grpcio_tools\n  $ python ../make_grpcio_tools.py\n\n  # For the next command do `sudo pip install` if you get permission-denied errors\n  $ GRPC_PYTHON_BUILD_WITH_CYTHON=1 pip install .\n\nYou cannot currently install Python from source on Windows. Things might work\n",
                    "rendered": {
                      "text": "  $ cd tools/distrib/python/grpcio_tools\n  $ python ../make_grpcio_tools.py\n\n  # For the next command do `sudo pip install` if you get permission-denied errors\n  $ GRPC_PYTHON_BUILD_WITH_CYTHON=1 pip install .\n\nYou cannot currently install Python from source on Windows. Things might work\n",
                      "markdown": "`  $ cd tools/distrib/python/grpcio_tools\n  $ python ../make_grpcio_tools.py\n\n  # For the next command do `sudo pip install` if you get permission-denied errors\n  $ GRPC_PYTHON_BUILD_WITH_CYTHON=1 pip install .\n\nYou cannot currently install Python from source on Windows. Things might work\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpcio_tools-1.67.0-py3.12.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 3,
                  "endLine": 81,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  $ export REPO_ROOT=grpc  # REPO_ROOT can be any directory of your choice\n  $ git clone -b RELEASE_TAG_HERE https://github.com/grpc/grpc $REPO_ROOT\n  $ cd $REPO_ROOT\n  $ git submodule update --init\n\n  $ cd tools/distrib/python/grpcio_tools\n  $ python ../make_grpcio_tools.py\n",
                    "rendered": {
                      "text": "  $ export REPO_ROOT=grpc  # REPO_ROOT can be any directory of your choice\n  $ git clone -b RELEASE_TAG_HERE https://github.com/grpc/grpc $REPO_ROOT\n  $ cd $REPO_ROOT\n  $ git submodule update --init\n\n  $ cd tools/distrib/python/grpcio_tools\n  $ python ../make_grpcio_tools.py\n",
                      "markdown": "`  $ export REPO_ROOT=grpc  # REPO_ROOT can be any directory of your choice\n  $ git clone -b RELEASE_TAG_HERE https://github.com/grpc/grpc $REPO_ROOT\n  $ cd $REPO_ROOT\n  $ git submodule update --init\n\n  $ cd tools/distrib/python/grpcio_tools\n  $ python ../make_grpcio_tools.py\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpcio_tools-1.67.0-py3.12.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 3,
                  "endLine": 79,
                  "endColumn": 8,
                  "snippet": {
                    "text": "::\n\n  $ export REPO_ROOT=grpc  # REPO_ROOT can be any directory of your choice\n  $ git clone -b RELEASE_TAG_HERE https://github.com/grpc/grpc $REPO_ROOT\n  $ cd $REPO_ROOT\n  $ git submodule update --init\n\n",
                    "rendered": {
                      "text": "::\n\n  $ export REPO_ROOT=grpc  # REPO_ROOT can be any directory of your choice\n  $ git clone -b RELEASE_TAG_HERE https://github.com/grpc/grpc $REPO_ROOT\n  $ cd $REPO_ROOT\n  $ git submodule update --init\n\n",
                      "markdown": "`::\n\n  $ export REPO_ROOT=grpc  # REPO_ROOT can be any directory of your choice\n  $ git clone -b RELEASE_TAG_HERE https://github.com/grpc/grpc $REPO_ROOT\n  $ cd $REPO_ROOT\n  $ git submodule update --init\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpcio_tools-1.67.0-py3.12.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 8,
                  "endLine": 48,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n::\n\n  $ sudo pip install grpcio-tools\n\nIf you're on Windows make sure that you installed the :code:`pip.exe` component\nwhen you installed Python (if not go back and install it!) then invoke:\n",
                    "rendered": {
                      "text": "\n::\n\n  $ sudo pip install grpcio-tools\n\nIf you're on Windows make sure that you installed the :code:`pip.exe` component\nwhen you installed Python (if not go back and install it!) then invoke:\n",
                      "markdown": "`\n::\n\n  $ sudo pip install grpcio-tools\n\nIf you're on Windows make sure that you installed the :code:`pip.exe` component\nwhen you installed Python (if not go back and install it!) then invoke:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpcio_tools-1.67.0-py3.12.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 3,
                  "endLine": 42,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n::\n\n  $ pip install grpcio-tools\n\nElse system wide (on Ubuntu)...\n\n",
                    "rendered": {
                      "text": "\n::\n\n  $ pip install grpcio-tools\n\nElse system wide (on Ubuntu)...\n\n",
                      "markdown": "`\n::\n\n  $ pip install grpcio-tools\n\nElse system wide (on Ubuntu)...\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/field_mask.proto"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 22,
                  "endLine": 176,
                  "endColumn": 30,
                  "snippet": {
                    "text": "//\n// ## Considerations for HTTP REST\n//\n// The HTTP kind of an update operation which uses a field mask must\n// be set to PATCH instead of PUT in order to satisfy HTTP semantics\n// (PUT must only be used for full updates).\n//\n",
                    "rendered": {
                      "text": "//\n// ## Considerations for HTTP REST\n//\n// The HTTP kind of an update operation which uses a field mask must\n// be set to PATCH instead of PUT in order to satisfy HTTP semantics\n// (PUT must only be used for full updates).\n//\n",
                      "markdown": "`//\n// ## Considerations for HTTP REST\n//\n// The HTTP kind of an update operation which uses a field mask must\n// be set to PATCH instead of PUT in order to satisfy HTTP semantics\n// (PUT must only be used for full updates).\n//\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/field_mask.proto"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 9,
                  "endLine": 129,
                  "endColumn": 17,
                  "snippet": {
                    "text": "//       c: [1]\n//     }\n//\n// And an update message:\n//\n//     f {\n//       b {\n",
                    "rendered": {
                      "text": "//       c: [1]\n//     }\n//\n// And an update message:\n//\n//     f {\n//       b {\n",
                      "markdown": "`//       c: [1]\n//     }\n//\n// And an update message:\n//\n//     f {\n//       b {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/field_mask.proto"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 2,
                  "endLine": 116,
                  "endColumn": 10,
                  "snippet": {
                    "text": "// a repeated field is only allowed in the last position of a `paths` string.\n//\n// If a sub-message is specified in the last position of the field mask for an\n// update operation, then new value will be merged into the existing sub-message\n// in the target resource.\n//\n// For example, given the target message:\n",
                    "rendered": {
                      "text": "// a repeated field is only allowed in the last position of a `paths` string.\n//\n// If a sub-message is specified in the last position of the field mask for an\n// update operation, then new value will be merged into the existing sub-message\n// in the target resource.\n//\n// For example, given the target message:\n",
                      "markdown": "`// a repeated field is only allowed in the last position of a `paths` string.\n//\n// If a sub-message is specified in the last position of the field mask for an\n// update operation, then new value will be merged into the existing sub-message\n// in the target resource.\n//\n// For example, given the target message:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/field_mask.proto"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 42,
                  "endLine": 111,
                  "endColumn": 50,
                  "snippet": {
                    "text": "// describe the updated values, the API ignores the values of all\n// fields not covered by the mask.\n//\n// If a repeated field is specified for an update operation, new values will\n// be appended to the existing repeated field in the target resource. Note that\n// a repeated field is only allowed in the last position of a `paths` string.\n//\n",
                    "rendered": {
                      "text": "// describe the updated values, the API ignores the values of all\n// fields not covered by the mask.\n//\n// If a repeated field is specified for an update operation, new values will\n// be appended to the existing repeated field in the target resource. Note that\n// a repeated field is only allowed in the last position of a `paths` string.\n//\n",
                      "markdown": "`// describe the updated values, the API ignores the values of all\n// fields not covered by the mask.\n//\n// If a repeated field is specified for an update operation, new values will\n// be appended to the existing repeated field in the target resource. Note that\n// a repeated field is only allowed in the last position of a `paths` string.\n//\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/field_mask.proto"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 18,
                  "endLine": 104,
                  "endColumn": 26,
                  "snippet": {
                    "text": "//\n// # Field Masks in Update Operations\n//\n// A field mask in update operations specifies which fields of the\n// targeted resource are going to be updated. The API is required\n// to only change the values of the fields as specified in the mask\n// and leave the others untouched. If a resource is passed in to\n",
                    "rendered": {
                      "text": "//\n// # Field Masks in Update Operations\n//\n// A field mask in update operations specifies which fields of the\n// targeted resource are going to be updated. The API is required\n// to only change the values of the fields as specified in the mask\n// and leave the others untouched. If a resource is passed in to\n",
                      "markdown": "`//\n// # Field Masks in Update Operations\n//\n// A field mask in update operations specifies which fields of the\n// targeted resource are going to be updated. The API is required\n// to only change the values of the fields as specified in the mask\n// and leave the others untouched. If a resource is passed in to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/field_mask.proto"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 19,
                  "endLine": 102,
                  "endColumn": 27,
                  "snippet": {
                    "text": "// any case, the effect on the returned resource/resources is required\n// behavior for APIs.\n//\n// # Field Masks in Update Operations\n//\n// A field mask in update operations specifies which fields of the\n// targeted resource are going to be updated. The API is required\n",
                    "rendered": {
                      "text": "// any case, the effect on the returned resource/resources is required\n// behavior for APIs.\n//\n// # Field Masks in Update Operations\n//\n// A field mask in update operations specifies which fields of the\n// targeted resource are going to be updated. The API is required\n",
                      "markdown": "`// any case, the effect on the returned resource/resources is required\n// behavior for APIs.\n//\n// # Field Masks in Update Operations\n//\n// A field mask in update operations specifies which fields of the\n// targeted resource are going to be updated. The API is required\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/field_mask.proto"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 41,
                  "endLine": 85,
                  "endColumn": 45,
                  "snippet": {
                    "text": "//       }\n//     }\n//\n// A repeated field is not allowed except at the last position of a\n// paths string.\n//\n// If a FieldMask object is not present in a get operation, the\n",
                    "rendered": {
                      "text": "//       }\n//     }\n//\n// A repeated field is not allowed except at the last position of a\n// paths string.\n//\n// If a FieldMask object is not present in a get operation, the\n",
                      "markdown": "`//       }\n//     }\n//\n// A repeated field is not allowed except at the last position of a\n// paths string.\n//\n// If a FieldMask object is not present in a get operation, the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/field_mask.proto"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 48,
                  "endLine": 53,
                  "endColumn": 56,
                  "snippet": {
                    "text": "// message in `f.b`.\n//\n// Field masks are used to specify a subset of fields that should be\n// returned by a get operation or modified by an update operation.\n// Field masks also have a custom JSON encoding (see below).\n//\n// # Field Masks in Projections\n",
                    "rendered": {
                      "text": "// message in `f.b`.\n//\n// Field masks are used to specify a subset of fields that should be\n// returned by a get operation or modified by an update operation.\n// Field masks also have a custom JSON encoding (see below).\n//\n// # Field Masks in Projections\n",
                      "markdown": "`// message in `f.b`.\n//\n// Field masks are used to specify a subset of fields that should be\n// returned by a get operation or modified by an update operation.\n// Field masks also have a custom JSON encoding (see below).\n//\n// # Field Masks in Projections\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/field_mask.proto"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 23,
                  "endLine": 166,
                  "endColumn": 32,
                  "snippet": {
                    "text": "// Note that in the presence of schema evolution, this may mean that\n// fields the client does not know and has therefore not filled into\n// the request will be reset to their default. If this is unwanted\n// behavior, a specific service may require a client to always specify\n// a field mask, producing an error if not.\n//\n// As with get operations, the location of the resource which\n",
                    "rendered": {
                      "text": "// Note that in the presence of schema evolution, this may mean that\n// fields the client does not know and has therefore not filled into\n// the request will be reset to their default. If this is unwanted\n// behavior, a specific service may require a client to always specify\n// a field mask, producing an error if not.\n//\n// As with get operations, the location of the resource which\n",
                      "markdown": "`// Note that in the presence of schema evolution, this may mean that\n// fields the client does not know and has therefore not filled into\n// the request will be reset to their default. If this is unwanted\n// behavior, a specific service may require a client to always specify\n// a field mask, producing an error if not.\n//\n// As with get operations, the location of the resource which\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/compiler/plugin.proto"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 45,
                  "endLine": 142,
                  "endColumn": 49,
                  "snippet": {
                    "text": "    // The annotation can have arbitrary text before and after it on the line,\n    // which allows it to be placed in a comment.  NAME should be replaced with\n    // an identifier naming the point -- this is what other generators will use\n    // as the insertion_point.  Code inserted at this point will be placed\n    // immediately above the line containing the insertion point (thus multiple\n    // insertions to the same point will come out in the order they were added).\n    // The double-@ is intended to make it unlikely that the generated code\n",
                    "rendered": {
                      "text": "    // The annotation can have arbitrary text before and after it on the line,\n    // which allows it to be placed in a comment.  NAME should be replaced with\n    // an identifier naming the point -- this is what other generators will use\n    // as the insertion_point.  Code inserted at this point will be placed\n    // immediately above the line containing the insertion point (thus multiple\n    // insertions to the same point will come out in the order they were added).\n    // The double-@ is intended to make it unlikely that the generated code\n",
                      "markdown": "`    // The annotation can have arbitrary text before and after it on the line,\n    // which allows it to be placed in a comment.  NAME should be replaced with\n    // an identifier naming the point -- this is what other generators will use\n    // as the insertion_point.  Code inserted at this point will be placed\n    // immediately above the line containing the insertion point (thus multiple\n    // insertions to the same point will come out in the order they were added).\n    // The double-@ is intended to make it unlikely that the generated code\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/compiler/plugin.proto"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 52,
                  "endLine": 133,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    optional string name = 1;\n\n    // If non-empty, indicates that the named file should already exist, and the\n    // content here is to be inserted into that file at a defined insertion\n    // point.  This feature allows a code generator to extend the output\n    // produced by another code generator.  The original generator may provide\n    // insertion points by placing special annotations in the file that look\n",
                    "rendered": {
                      "text": "    optional string name = 1;\n\n    // If non-empty, indicates that the named file should already exist, and the\n    // content here is to be inserted into that file at a defined insertion\n    // point.  This feature allows a code generator to extend the output\n    // produced by another code generator.  The original generator may provide\n    // insertion points by placing special annotations in the file that look\n",
                      "markdown": "`    optional string name = 1;\n\n    // If non-empty, indicates that the named file should already exist, and the\n    // content here is to be inserted into that file at a defined insertion\n    // point.  This feature allows a code generator to extend the output\n    // produced by another code generator.  The original generator may provide\n    // insertion points by placing special annotations in the file that look\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/compiler/plugin.proto"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 49,
                  "endLine": 127,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    // If the name is omitted, the content will be appended to the previous\n    // file.  This allows the generator to break large files into small chunks,\n    // and allows the generated text to be streamed back to protoc so that large\n    // files need not reside completely in memory at one time.  Note that as of\n    // this writing protoc does not optimize for this -- it will read the entire\n    // CodeGeneratorResponse before writing files to disk.\n    optional string name = 1;\n",
                    "rendered": {
                      "text": "    // If the name is omitted, the content will be appended to the previous\n    // file.  This allows the generator to break large files into small chunks,\n    // and allows the generated text to be streamed back to protoc so that large\n    // files need not reside completely in memory at one time.  Note that as of\n    // this writing protoc does not optimize for this -- it will read the entire\n    // CodeGeneratorResponse before writing files to disk.\n    optional string name = 1;\n",
                      "markdown": "`    // If the name is omitted, the content will be appended to the previous\n    // file.  This allows the generator to break large files into small chunks,\n    // and allows the generated text to be streamed back to protoc so that large\n    // files need not reside completely in memory at one time.  Note that as of\n    // this writing protoc does not optimize for this -- it will read the entire\n    // CodeGeneratorResponse before writing files to disk.\n    optional string name = 1;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/compiler/plugin.proto"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 11,
                  "endLine": 67,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  // in the FileDescriptorProtos and handle them one by one rather than read\n  // the entire set into memory at once.  However, as of this writing, this\n  // is not similarly optimized on protoc's end -- it will store all fields in\n  // memory at once before sending them to the plugin.\n  //\n  // Type names of fields and extensions in the FileDescriptorProto are always\n  // fully qualified.\n",
                    "rendered": {
                      "text": "  // in the FileDescriptorProtos and handle them one by one rather than read\n  // the entire set into memory at once.  However, as of this writing, this\n  // is not similarly optimized on protoc's end -- it will store all fields in\n  // memory at once before sending them to the plugin.\n  //\n  // Type names of fields and extensions in the FileDescriptorProto are always\n  // fully qualified.\n",
                      "markdown": "`  // in the FileDescriptorProtos and handle them one by one rather than read\n  // the entire set into memory at once.  However, as of this writing, this\n  // is not similarly optimized on protoc's end -- it will store all fields in\n  // memory at once before sending them to the plugin.\n  //\n  // Type names of fields and extensions in the FileDescriptorProto are always\n  // fully qualified.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/compiler/plugin.proto"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 31,
                  "endLine": 65,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  // the fields above, even though this is not technically guaranteed by the\n  // protobuf wire format.  This theoretically could allow a plugin to stream\n  // in the FileDescriptorProtos and handle them one by one rather than read\n  // the entire set into memory at once.  However, as of this writing, this\n  // is not similarly optimized on protoc's end -- it will store all fields in\n  // memory at once before sending them to the plugin.\n  //\n",
                    "rendered": {
                      "text": "  // the fields above, even though this is not technically guaranteed by the\n  // protobuf wire format.  This theoretically could allow a plugin to stream\n  // in the FileDescriptorProtos and handle them one by one rather than read\n  // the entire set into memory at once.  However, as of this writing, this\n  // is not similarly optimized on protoc's end -- it will store all fields in\n  // memory at once before sending them to the plugin.\n  //\n",
                      "markdown": "`  // the fields above, even though this is not technically guaranteed by the\n  // protobuf wire format.  This theoretically could allow a plugin to stream\n  // in the FileDescriptorProtos and handle them one by one rather than read\n  // the entire set into memory at once.  However, as of this writing, this\n  // is not similarly optimized on protoc's end -- it will store all fields in\n  // memory at once before sending them to the plugin.\n  //\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/compiler/plugin.proto"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 51,
                  "endLine": 6,
                  "snippet": {
                    "text": "// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file or at\n// https://developers.google.com/open-source/licenses/bsd\n\n// Author: kenton@google.com (Kenton Varda)\n//\n",
                    "rendered": {
                      "text": "// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file or at\n// https://developers.google.com/open-source/licenses/bsd\n\n// Author: kenton@google.com (Kenton Varda)\n//\n",
                      "markdown": "`// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file or at\n// https://developers.google.com/open-source/licenses/bsd\n\n// Author: kenton@google.com (Kenton Varda)\n//\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/api.proto"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 6,
                  "endLine": 193,
                  "endColumn": 15,
                  "snippet": {
                    "text": "//\n// This implies the following inherited HTTP annotation:\n//\n//     service Storage {\n//       // Get the underlying ACL object.\n//       rpc GetAcl(GetAclRequest) returns (Acl) {\n//         option (google.api.http).get = \"/v2/acls/{resource=**}:getAcl\";\n",
                    "rendered": {
                      "text": "//\n// This implies the following inherited HTTP annotation:\n//\n//     service Storage {\n//       // Get the underlying ACL object.\n//       rpc GetAcl(GetAclRequest) returns (Acl) {\n//         option (google.api.http).get = \"/v2/acls/{resource=**}:getAcl\";\n",
                      "markdown": "`//\n// This implies the following inherited HTTP annotation:\n//\n//     service Storage {\n//       // Get the underlying ACL object.\n//       rpc GetAcl(GetAclRequest) returns (Acl) {\n//         option (google.api.http).get = \"/v2/acls/{resource=**}:getAcl\";\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/api.proto"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 6,
                  "endLine": 172,
                  "endColumn": 15,
                  "snippet": {
                    "text": "// see the effective `Storage.GetAcl` method after inherting\n// documentation and annotations as follows:\n//\n//     service Storage {\n//       // Get the underlying ACL object.\n//       rpc GetAcl(GetAclRequest) returns (Acl) {\n//         option (google.api.http).get = \"/v2/{resource=**}:getAcl\";\n",
                    "rendered": {
                      "text": "// see the effective `Storage.GetAcl` method after inherting\n// documentation and annotations as follows:\n//\n//     service Storage {\n//       // Get the underlying ACL object.\n//       rpc GetAcl(GetAclRequest) returns (Acl) {\n//         option (google.api.http).get = \"/v2/{resource=**}:getAcl\";\n",
                      "markdown": "`// see the effective `Storage.GetAcl` method after inherting\n// documentation and annotations as follows:\n//\n//     service Storage {\n//       // Get the underlying ACL object.\n//       rpc GetAcl(GetAclRequest) returns (Acl) {\n//         option (google.api.http).get = \"/v2/{resource=**}:getAcl\";\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/api.proto"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 6,
                  "endLine": 150,
                  "endColumn": 15,
                  "snippet": {
                    "text": "//     }\n//\n//     package google.storage.v2;\n//     service Storage {\n//       rpc GetAcl(GetAclRequest) returns (Acl);\n//\n//       // Get a data record.\n",
                    "rendered": {
                      "text": "//     }\n//\n//     package google.storage.v2;\n//     service Storage {\n//       rpc GetAcl(GetAclRequest) returns (Acl);\n//\n//       // Get a data record.\n",
                      "markdown": "`//     }\n//\n//     package google.storage.v2;\n//     service Storage {\n//       rpc GetAcl(GetAclRequest) returns (Acl);\n//\n//       // Get a data record.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/api.proto"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 6,
                  "endLine": 142,
                  "endColumn": 15,
                  "snippet": {
                    "text": "// Example of a simple mixin:\n//\n//     package google.acl.v1;\n//     service AccessControl {\n//       // Get the underlying ACL object.\n//       rpc GetAcl(GetAclRequest) returns (Acl) {\n//         option (google.api.http).get = \"/v1/{resource=**}:getAcl\";\n",
                    "rendered": {
                      "text": "// Example of a simple mixin:\n//\n//     package google.acl.v1;\n//     service AccessControl {\n//       // Get the underlying ACL object.\n//       rpc GetAcl(GetAclRequest) returns (Acl) {\n//         option (google.api.http).get = \"/v1/{resource=**}:getAcl\";\n",
                      "markdown": "`// Example of a simple mixin:\n//\n//     package google.acl.v1;\n//     service AccessControl {\n//       // Get the underlying ACL object.\n//       rpc GetAcl(GetAclRequest) returns (Acl) {\n//         option (google.api.http).get = \"/v1/{resource=**}:getAcl\";\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/api.proto"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 37,
                  "endLine": 130,
                  "endColumn": 46,
                  "snippet": {
                    "text": "//   string of the redeclared method is empty, it will be inherited\n//   from the original method.\n//\n// - Each annotation belonging to the service config (http,\n//   visibility) which is not set in the redeclared method will be\n//   inherited.\n//\n",
                    "rendered": {
                      "text": "//   string of the redeclared method is empty, it will be inherited\n//   from the original method.\n//\n// - Each annotation belonging to the service config (http,\n//   visibility) which is not set in the redeclared method will be\n//   inherited.\n//\n",
                      "markdown": "`//   string of the redeclared method is empty, it will be inherited\n//   from the original method.\n//\n// - Each annotation belonging to the service config (http,\n//   visibility) which is not set in the redeclared method will be\n//   inherited.\n//\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/api.proto"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 43,
                  "endLine": 87,
                  "endColumn": 52,
                  "snippet": {
                    "text": "  //\n  string version = 4;\n\n  // Source context for the protocol buffer service represented by this\n  // message.\n  SourceContext source_context = 5;\n\n",
                    "rendered": {
                      "text": "  //\n  string version = 4;\n\n  // Source context for the protocol buffer service represented by this\n  // message.\n  SourceContext source_context = 5;\n\n",
                      "markdown": "`  //\n  string version = 4;\n\n  // Source context for the protocol buffer service represented by this\n  // message.\n  SourceContext source_context = 5;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/api.proto"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 12,
                  "endLine": 76,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  // versioning](http://semver.org) where the major version number\n  // indicates a breaking change and the minor version an additive,\n  // non-breaking change. Both version numbers are signals to users\n  // what to expect from different versions, and should be carefully\n  // chosen based on the product plan.\n  //\n  // The major version is also reflected in the package name of the\n",
                    "rendered": {
                      "text": "  // versioning](http://semver.org) where the major version number\n  // indicates a breaking change and the minor version an additive,\n  // non-breaking change. Both version numbers are signals to users\n  // what to expect from different versions, and should be carefully\n  // chosen based on the product plan.\n  //\n  // The major version is also reflected in the package name of the\n",
                      "markdown": "`  // versioning](http://semver.org) where the major version number\n  // indicates a breaking change and the minor version an additive,\n  // non-breaking change. Both version numbers are signals to users\n  // what to expect from different versions, and should be carefully\n  // chosen based on the product plan.\n  //\n  // The major version is also reflected in the package name of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 1180,
                  "startColumn": 67,
                  "endLine": 1180,
                  "endColumn": 71,
                  "snippet": {
                    "text": "  //   be recorded in the future.\n  repeated Location location = 1;\n  message Location {\n    // Identifies which part of the FileDescriptorProto was defined at this\n    // location.\n    //\n    // Each element is a field number or an index.  They form a path from\n",
                    "rendered": {
                      "text": "  //   be recorded in the future.\n  repeated Location location = 1;\n  message Location {\n    // Identifies which part of the FileDescriptorProto was defined at this\n    // location.\n    //\n    // Each element is a field number or an index.  They form a path from\n",
                      "markdown": "`  //   be recorded in the future.\n  repeated Location location = 1;\n  message Location {\n    // Identifies which part of the FileDescriptorProto was defined at this\n    // location.\n    //\n    // Each element is a field number or an index.  They form a path from\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 1168,
                  "startColumn": 66,
                  "endLine": 1168,
                  "endColumn": 70,
                  "snippet": {
                    "text": "  //   obvious example is the \"extend\" block again -- there may be multiple\n  //   extend blocks in the same scope, each of which will have the same path.\n  // - A location's span is not always a subset of its parent's span.  For\n  //   example, the \"extendee\" of an extension declaration appears at the\n  //   beginning of the \"extend\" block and is shared by all extensions within\n  //   the block.\n  // - Just because a location's span is a subset of some other location's span\n",
                    "rendered": {
                      "text": "  //   obvious example is the \"extend\" block again -- there may be multiple\n  //   extend blocks in the same scope, each of which will have the same path.\n  // - A location's span is not always a subset of its parent's span.  For\n  //   example, the \"extendee\" of an extension declaration appears at the\n  //   beginning of the \"extend\" block and is shared by all extensions within\n  //   the block.\n  // - Just because a location's span is a subset of some other location's span\n",
                      "markdown": "`  //   obvious example is the \"extend\" block again -- there may be multiple\n  //   extend blocks in the same scope, each of which will have the same path.\n  // - A location's span is not always a subset of its parent's span.  For\n  //   example, the \"extendee\" of an extension declaration appears at the\n  //   beginning of the \"extend\" block and is shared by all extensions within\n  //   the block.\n  // - Just because a location's span is a subset of some other location's span\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 1144,
                  "startColumn": 15,
                  "endLine": 1144,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  //   message Foo {\n  //     optional string foo = 1;\n  //   }\n  // Let's look at just the field definition:\n  //   optional string foo = 1;\n  //   ^       ^^     ^^  ^  ^^^\n  //   a       bc     de  f  ghi\n",
                    "rendered": {
                      "text": "  //   message Foo {\n  //     optional string foo = 1;\n  //   }\n  // Let's look at just the field definition:\n  //   optional string foo = 1;\n  //   ^       ^^     ^^  ^  ^^^\n  //   a       bc     de  f  ghi\n",
                      "markdown": "`  //   message Foo {\n  //     optional string foo = 1;\n  //   }\n  // Let's look at just the field definition:\n  //   optional string foo = 1;\n  //   ^       ^^     ^^  ^  ^^^\n  //   a       bc     de  f  ghi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 1104,
                  "startColumn": 57,
                  "endLine": 1104,
                  "endColumn": 61,
                  "snippet": {
                    "text": "message FeatureSetDefaults {\n  // A map from every known edition with a unique set of defaults to its\n  // defaults. Not all editions may be contained here.  For a given edition,\n  // the defaults at the closest matching edition ordered at or before it should\n  // be used.  This field must be in strict ascending order by edition.\n  message FeatureSetEditionDefault {\n    optional Edition edition = 3;\n",
                    "rendered": {
                      "text": "message FeatureSetDefaults {\n  // A map from every known edition with a unique set of defaults to its\n  // defaults. Not all editions may be contained here.  For a given edition,\n  // the defaults at the closest matching edition ordered at or before it should\n  // be used.  This field must be in strict ascending order by edition.\n  message FeatureSetEditionDefault {\n    optional Edition edition = 3;\n",
                      "markdown": "`message FeatureSetDefaults {\n  // A map from every known edition with a unique set of defaults to its\n  // defaults. Not all editions may be contained here.  For a given edition,\n  // the defaults at the closest matching edition ordered at or before it should\n  // be used.  This field must be in strict ascending order by edition.\n  message FeatureSetEditionDefault {\n    optional Edition edition = 3;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 1104,
                  "startColumn": 17,
                  "endLine": 1104,
                  "endColumn": 21,
                  "snippet": {
                    "text": "message FeatureSetDefaults {\n  // A map from every known edition with a unique set of defaults to its\n  // defaults. Not all editions may be contained here.  For a given edition,\n  // the defaults at the closest matching edition ordered at or before it should\n  // be used.  This field must be in strict ascending order by edition.\n  message FeatureSetEditionDefault {\n    optional Edition edition = 3;\n",
                    "rendered": {
                      "text": "message FeatureSetDefaults {\n  // A map from every known edition with a unique set of defaults to its\n  // defaults. Not all editions may be contained here.  For a given edition,\n  // the defaults at the closest matching edition ordered at or before it should\n  // be used.  This field must be in strict ascending order by edition.\n  message FeatureSetEditionDefault {\n    optional Edition edition = 3;\n",
                      "markdown": "`message FeatureSetDefaults {\n  // A map from every known edition with a unique set of defaults to its\n  // defaults. Not all editions may be contained here.  For a given edition,\n  // the defaults at the closest matching edition ordered at or before it should\n  // be used.  This field must be in strict ascending order by edition.\n  message FeatureSetEditionDefault {\n    optional Edition edition = 3;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 664,
                  "startColumn": 71,
                  "endLine": 665,
                  "snippet": {
                    "text": "  // writing the tag and type for each element, the entire array is encoded as\n  // a single length-delimited blob. In proto3, only explicit setting it to\n  // false will avoid using packed encoding.  This option is prohibited in\n  // Editions, but the `repeated_field_encoding` feature can be used to control\n  // the behavior.\n  optional bool packed = 2;\n\n  // The jstype option determines the JavaScript type used for values of the\n",
                    "rendered": {
                      "text": "  // writing the tag and type for each element, the entire array is encoded as\n  // a single length-delimited blob. In proto3, only explicit setting it to\n  // false will avoid using packed encoding.  This option is prohibited in\n  // Editions, but the `repeated_field_encoding` feature can be used to control\n  // the behavior.\n  optional bool packed = 2;\n\n  // The jstype option determines the JavaScript type used for values of the\n",
                      "markdown": "`  // writing the tag and type for each element, the entire array is encoded as\n  // a single length-delimited blob. In proto3, only explicit setting it to\n  // false will avoid using packed encoding.  This option is prohibited in\n  // Editions, but the `repeated_field_encoding` feature can be used to control\n  // the behavior.\n  optional bool packed = 2;\n\n  // The jstype option determines the JavaScript type used for values of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 460,
                  "startColumn": 20,
                  "endLine": 460,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  // assigned to a string field.\n  //\n  // TODO: clarify exactly what kinds of field types this option\n  // applies to, and update these docs accordingly.\n  //\n  // Proto3 files already perform these checks. Setting the option explicitly to\n  // false has no effect: it cannot be used to opt proto3 files out of UTF-8\n",
                    "rendered": {
                      "text": "  // assigned to a string field.\n  //\n  // TODO: clarify exactly what kinds of field types this option\n  // applies to, and update these docs accordingly.\n  //\n  // Proto3 files already perform these checks. Setting the option explicitly to\n  // false has no effect: it cannot be used to opt proto3 files out of UTF-8\n",
                      "markdown": "`  // assigned to a string field.\n  //\n  // TODO: clarify exactly what kinds of field types this option\n  // applies to, and update these docs accordingly.\n  //\n  // Proto3 files already perform these checks. Setting the option explicitly to\n  // false has no effect: it cannot be used to opt proto3 files out of UTF-8\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 409,
                  "startColumn": 41,
                  "endLine": 409,
                  "endColumn": 45,
                  "snippet": {
                    "text": "// store the values in them.  Instead it stores them in a field in the *Options\n// message called uninterpreted_option. This field must have the same name\n// across all *Options messages. We then use this field to populate the\n// extensions when we build a descriptor, at which point all protos have been\n// parsed and so all extensions are known.\n//\n// Extension numbers for custom options may be chosen as follows:\n",
                    "rendered": {
                      "text": "// store the values in them.  Instead it stores them in a field in the *Options\n// message called uninterpreted_option. This field must have the same name\n// across all *Options messages. We then use this field to populate the\n// extensions when we build a descriptor, at which point all protos have been\n// parsed and so all extensions are known.\n//\n// Extension numbers for custom options may be chosen as follows:\n",
                      "markdown": "`// store the values in them.  Instead it stores them in a field in the *Options\n// message called uninterpreted_option. This field must have the same name\n// across all *Options messages. We then use this field to populate the\n// extensions when we build a descriptor, at which point all protos have been\n// parsed and so all extensions are known.\n//\n// Extension numbers for custom options may be chosen as follows:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 405,
                  "startColumn": 40,
                  "endLine": 405,
                  "endColumn": 44,
                  "snippet": {
                    "text": "// or may contain hints for code that manipulates protocol messages.\n//\n// Clients may define custom options as extensions of the *Options messages.\n// These extensions may not yet be known at parsing time, so the parser cannot\n// store the values in them.  Instead it stores them in a field in the *Options\n// message called uninterpreted_option. This field must have the same name\n// across all *Options messages. We then use this field to populate the\n",
                    "rendered": {
                      "text": "// or may contain hints for code that manipulates protocol messages.\n//\n// Clients may define custom options as extensions of the *Options messages.\n// These extensions may not yet be known at parsing time, so the parser cannot\n// store the values in them.  Instead it stores them in a field in the *Options\n// message called uninterpreted_option. This field must have the same name\n// across all *Options messages. We then use this field to populate the\n",
                      "markdown": "`// or may contain hints for code that manipulates protocol messages.\n//\n// Clients may define custom options as extensions of the *Options messages.\n// These extensions may not yet be known at parsing time, so the parser cannot\n// store the values in them.  Instead it stores them in a field in the *Options\n// message called uninterpreted_option. This field must have the same name\n// across all *Options messages. We then use this field to populate the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 882,
                  "startColumn": 12,
                  "endLine": 882,
                  "endColumn": 21,
                  "snippet": {
                    "text": "  //   we were already using them long before we decided to release Protocol\n  //   Buffers.\n\n  // Is this service deprecated?\n  // Depending on the target platform, this can emit Deprecated annotations\n  // for the service, or it will be completely ignored; in the very least,\n  // this is a formalization for deprecating services.\n",
                    "rendered": {
                      "text": "  //   we were already using them long before we decided to release Protocol\n  //   Buffers.\n\n  // Is this service deprecated?\n  // Depending on the target platform, this can emit Deprecated annotations\n  // for the service, or it will be completely ignored; in the very least,\n  // this is a formalization for deprecating services.\n",
                      "markdown": "`  //   we were already using them long before we decided to release Protocol\n  //   Buffers.\n\n  // Is this service deprecated?\n  // Depending on the target platform, this can emit Deprecated annotations\n  // for the service, or it will be completely ignored; in the very least,\n  // this is a formalization for deprecating services.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 834,
                  "startColumn": 8,
                  "endLine": 834,
                  "endColumn": 14,
                  "snippet": {
                    "text": "  // The new behavior takes `json_name` into account and applies to proto2 as\n  // well.\n  // TODO Remove this legacy behavior once downstream teams have\n  // had time to migrate.\n  optional bool deprecated_legacy_json_field_conflicts = 6 [deprecated = true];\n\n  // Any features defined in the specific edition.\n",
                    "rendered": {
                      "text": "  // The new behavior takes `json_name` into account and applies to proto2 as\n  // well.\n  // TODO Remove this legacy behavior once downstream teams have\n  // had time to migrate.\n  optional bool deprecated_legacy_json_field_conflicts = 6 [deprecated = true];\n\n  // Any features defined in the specific edition.\n",
                      "markdown": "`  // The new behavior takes `json_name` into account and applies to proto2 as\n  // well.\n  // TODO Remove this legacy behavior once downstream teams have\n  // had time to migrate.\n  optional bool deprecated_legacy_json_field_conflicts = 6 [deprecated = true];\n\n  // Any features defined in the specific edition.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 624,
                  "startColumn": 19,
                  "endLine": 624,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  // to the change in behavior for JSON field name conflicts.\n  //\n  // TODO This is legacy behavior we plan to remove once downstream\n  // teams have had time to migrate.\n  optional bool deprecated_legacy_json_field_conflicts = 11 [deprecated = true];\n\n  // Any features defined in the specific edition.\n",
                    "rendered": {
                      "text": "  // to the change in behavior for JSON field name conflicts.\n  //\n  // TODO This is legacy behavior we plan to remove once downstream\n  // teams have had time to migrate.\n  optional bool deprecated_legacy_json_field_conflicts = 11 [deprecated = true];\n\n  // Any features defined in the specific edition.\n",
                      "markdown": "`  // to the change in behavior for JSON field name conflicts.\n  //\n  // TODO This is legacy behavior we plan to remove once downstream\n  // teams have had time to migrate.\n  optional bool deprecated_legacy_json_field_conflicts = 11 [deprecated = true];\n\n  // Any features defined in the specific edition.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 538,
                  "startColumn": 20,
                  "endLine": 538,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n  // Use this option to change the package of ruby generated classes. Default\n  // is empty. When this option is not set, the package name will be used for\n  // determining the ruby package.\n  optional string ruby_package = 45;\n\n  // Any features defined in the specific edition.\n",
                    "rendered": {
                      "text": "\n  // Use this option to change the package of ruby generated classes. Default\n  // is empty. When this option is not set, the package name will be used for\n  // determining the ruby package.\n  optional string ruby_package = 45;\n\n  // Any features defined in the specific edition.\n",
                      "markdown": "`\n  // Use this option to change the package of ruby generated classes. Default\n  // is empty. When this option is not set, the package name will be used for\n  // determining the ruby package.\n  optional string ruby_package = 45;\n\n  // Any features defined in the specific edition.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 536,
                  "startColumn": 45,
                  "endLine": 536,
                  "endColumn": 51,
                  "snippet": {
                    "text": "  // used for determining the namespace.\n  optional string php_metadata_namespace = 44;\n\n  // Use this option to change the package of ruby generated classes. Default\n  // is empty. When this option is not set, the package name will be used for\n  // determining the ruby package.\n  optional string ruby_package = 45;\n",
                    "rendered": {
                      "text": "  // used for determining the namespace.\n  optional string php_metadata_namespace = 44;\n\n  // Use this option to change the package of ruby generated classes. Default\n  // is empty. When this option is not set, the package name will be used for\n  // determining the ruby package.\n  optional string ruby_package = 45;\n",
                      "markdown": "`  // used for determining the namespace.\n  optional string php_metadata_namespace = 44;\n\n  // Use this option to change the package of ruby generated classes. Default\n  // is empty. When this option is not set, the package name will be used for\n  // determining the ruby package.\n  optional string ruby_package = 45;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 531,
                  "startColumn": 47,
                  "endLine": 531,
                  "endColumn": 52,
                  "snippet": {
                    "text": "  // determining the namespace.\n  optional string php_namespace = 41;\n\n  // Use this option to change the namespace of php generated metadata classes.\n  // Default is empty. When this option is empty, the proto file name will be\n  // used for determining the namespace.\n  optional string php_metadata_namespace = 44;\n",
                    "rendered": {
                      "text": "  // determining the namespace.\n  optional string php_namespace = 41;\n\n  // Use this option to change the namespace of php generated metadata classes.\n  // Default is empty. When this option is empty, the proto file name will be\n  // used for determining the namespace.\n  optional string php_metadata_namespace = 44;\n",
                      "markdown": "`  // determining the namespace.\n  optional string php_namespace = 41;\n\n  // Use this option to change the namespace of php generated metadata classes.\n  // Default is empty. When this option is empty, the proto file name will be\n  // used for determining the namespace.\n  optional string php_metadata_namespace = 44;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 526,
                  "startColumn": 47,
                  "endLine": 526,
                  "endColumn": 52,
                  "snippet": {
                    "text": "  // from this .proto. Default is empty.\n  optional string php_class_prefix = 40;\n\n  // Use this option to change the namespace of php generated classes. Default\n  // is empty. When this option is empty, the package name will be used for\n  // determining the namespace.\n  optional string php_namespace = 41;\n",
                    "rendered": {
                      "text": "  // from this .proto. Default is empty.\n  optional string php_class_prefix = 40;\n\n  // Use this option to change the namespace of php generated classes. Default\n  // is empty. When this option is empty, the package name will be used for\n  // determining the namespace.\n  optional string php_namespace = 41;\n",
                      "markdown": "`  // from this .proto. Default is empty.\n  optional string php_class_prefix = 40;\n\n  // Use this option to change the namespace of php generated classes. Default\n  // is empty. When this option is empty, the package name will be used for\n  // determining the namespace.\n  optional string php_namespace = 41;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 522,
                  "startColumn": 56,
                  "endLine": 522,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  // to prefix the types/symbols defined.\n  optional string swift_prefix = 39;\n\n  // Sets the php class prefix which is prepended to all php generated classes\n  // from this .proto. Default is empty.\n  optional string php_class_prefix = 40;\n\n",
                    "rendered": {
                      "text": "  // to prefix the types/symbols defined.\n  optional string swift_prefix = 39;\n\n  // Sets the php class prefix which is prepended to all php generated classes\n  // from this .proto. Default is empty.\n  optional string php_class_prefix = 40;\n\n",
                      "markdown": "`  // to prefix the types/symbols defined.\n  optional string swift_prefix = 39;\n\n  // Sets the php class prefix which is prepended to all php generated classes\n  // from this .proto. Default is empty.\n  optional string php_class_prefix = 40;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 522,
                  "startColumn": 13,
                  "endLine": 522,
                  "endColumn": 18,
                  "snippet": {
                    "text": "  // to prefix the types/symbols defined.\n  optional string swift_prefix = 39;\n\n  // Sets the php class prefix which is prepended to all php generated classes\n  // from this .proto. Default is empty.\n  optional string php_class_prefix = 40;\n\n",
                    "rendered": {
                      "text": "  // to prefix the types/symbols defined.\n  optional string swift_prefix = 39;\n\n  // Sets the php class prefix which is prepended to all php generated classes\n  // from this .proto. Default is empty.\n  optional string php_class_prefix = 40;\n\n",
                      "markdown": "`  // to prefix the types/symbols defined.\n  optional string swift_prefix = 39;\n\n  // Sets the php class prefix which is prepended to all php generated classes\n  // from this .proto. Default is empty.\n  optional string php_class_prefix = 40;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 43,
                  "endLine": 486,
                  "endColumn": 52,
                  "snippet": {
                    "text": "  // Should generic services be generated in each language?  \"Generic\" services\n  // are not specific to any particular RPC system.  They are generated by the\n  // main code generators in each language (without additional plugins).\n  // Generic services were the only kind of service generation supported by\n  // early versions of google.protobuf.\n  //\n  // Generic services are now considered deprecated in favor of using plugins\n",
                    "rendered": {
                      "text": "  // Should generic services be generated in each language?  \"Generic\" services\n  // are not specific to any particular RPC system.  They are generated by the\n  // main code generators in each language (without additional plugins).\n  // Generic services were the only kind of service generation supported by\n  // early versions of google.protobuf.\n  //\n  // Generic services are now considered deprecated in favor of using plugins\n",
                      "markdown": "`  // Should generic services be generated in each language?  \"Generic\" services\n  // are not specific to any particular RPC system.  They are generated by the\n  // main code generators in each language (without additional plugins).\n  // Generic services were the only kind of service generation supported by\n  // early versions of google.protobuf.\n  //\n  // Generic services are now considered deprecated in favor of using plugins\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 445,
                  "startColumn": 47,
                  "endLine": 445,
                  "endColumn": 56,
                  "snippet": {
                    "text": "  optional string java_outer_classname = 8;\n\n  // If enabled, then the Java code generator will generate a separate .java\n  // file for each top-level message, enum, and service defined in the .proto\n  // file.  Thus, these types will *not* be nested inside the wrapper class\n  // named by java_outer_classname.  However, the wrapper class will still be\n  // generated to contain the file's getDescriptor() method as well as any\n",
                    "rendered": {
                      "text": "  optional string java_outer_classname = 8;\n\n  // If enabled, then the Java code generator will generate a separate .java\n  // file for each top-level message, enum, and service defined in the .proto\n  // file.  Thus, these types will *not* be nested inside the wrapper class\n  // named by java_outer_classname.  However, the wrapper class will still be\n  // generated to contain the file's getDescriptor() method as well as any\n",
                      "markdown": "`  optional string java_outer_classname = 8;\n\n  // If enabled, then the Java code generator will generate a separate .java\n  // file for each top-level message, enum, and service defined in the .proto\n  // file.  Thus, these types will *not* be nested inside the wrapper class\n  // named by java_outer_classname.  However, the wrapper class will still be\n  // generated to contain the file's getDescriptor() method as well as any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 426,
                  "startColumn": 43,
                  "endLine": 426,
                  "endColumn": 52,
                  "snippet": {
                    "text": "//   number by putting them in a sub-message. See the Custom Options section of\n//   the docs for examples:\n//   https://developers.google.com/protocol-buffers/docs/proto#options\n//   If this turns out to be popular, a web service will be set up\n//   to automatically assign option numbers.\n\nmessage FileOptions {\n",
                    "rendered": {
                      "text": "//   number by putting them in a sub-message. See the Custom Options section of\n//   the docs for examples:\n//   https://developers.google.com/protocol-buffers/docs/proto#options\n//   If this turns out to be popular, a web service will be set up\n//   to automatically assign option numbers.\n\nmessage FileOptions {\n",
                      "markdown": "`//   number by putting them in a sub-message. See the Custom Options section of\n//   the docs for examples:\n//   https://developers.google.com/protocol-buffers/docs/proto#options\n//   If this turns out to be popular, a web service will be set up\n//   to automatically assign option numbers.\n\nmessage FileOptions {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 22,
                  "endLine": 278,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n  // For message and enum types, this is the name of the type.  If the name\n  // starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping\n  // rules are used to find the type (i.e. first the nested types within this\n  // message are searched, then within the parent, on up to the root\n  // namespace).\n  optional string type_name = 6;\n",
                    "rendered": {
                      "text": "\n  // For message and enum types, this is the name of the type.  If the name\n  // starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping\n  // rules are used to find the type (i.e. first the nested types within this\n  // message are searched, then within the parent, on up to the root\n  // namespace).\n  optional string type_name = 6;\n",
                      "markdown": "`\n  // For message and enum types, this is the name of the type.  If the name\n  // starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping\n  // rules are used to find the type (i.e. first the nested types within this\n  // message are searched, then within the parent, on up to the root\n  // namespace).\n  optional string type_name = 6;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 33,
                  "endLine": 112,
                  "endColumn": 42,
                  "snippet": {
                    "text": "  // All top-level definitions in this file.\n  repeated DescriptorProto message_type = 4;\n  repeated EnumDescriptorProto enum_type = 5;\n  repeated ServiceDescriptorProto service = 6;\n  repeated FieldDescriptorProto extension = 7;\n\n  optional FileOptions options = 8;\n",
                    "rendered": {
                      "text": "  // All top-level definitions in this file.\n  repeated DescriptorProto message_type = 4;\n  repeated EnumDescriptorProto enum_type = 5;\n  repeated ServiceDescriptorProto service = 6;\n  repeated FieldDescriptorProto extension = 7;\n\n  optional FileOptions options = 8;\n",
                      "markdown": "`  // All top-level definitions in this file.\n  repeated DescriptorProto message_type = 4;\n  repeated EnumDescriptorProto enum_type = 5;\n  repeated ServiceDescriptorProto service = 6;\n  repeated FieldDescriptorProto extension = 7;\n\n  optional FileOptions options = 8;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/_proto/google/protobuf/descriptor.proto"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 37,
                  "endLine": 91,
                  "endColumn": 45,
                  "snippet": {
                    "text": "  EDITION_99999_TEST_ONLY = 99999;\n\n  // Placeholder for specifying unbounded edition support.  This should only\n  // ever be used by plugins that can expect to never require any changes to\n  // support a new edition.\n  EDITION_MAX = 0x7FFFFFFF;\n}\n",
                    "rendered": {
                      "text": "  EDITION_99999_TEST_ONLY = 99999;\n\n  // Placeholder for specifying unbounded edition support.  This should only\n  // ever be used by plugins that can expect to never require any changes to\n  // support a new edition.\n  EDITION_MAX = 0x7FFFFFFF;\n}\n",
                      "markdown": "`  EDITION_99999_TEST_ONLY = 99999;\n\n  // Placeholder for specifying unbounded edition support.  This should only\n  // ever be used by plugins that can expect to never require any changes to\n  // support a new edition.\n  EDITION_MAX = 0x7FFFFFFF;\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-grpcio-tools-1.67.0-r0.apk/py3-grpcio-tools-1.67.0-r0/usr/lib/python3.12/site-packages/grpc_tools/__init__.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}