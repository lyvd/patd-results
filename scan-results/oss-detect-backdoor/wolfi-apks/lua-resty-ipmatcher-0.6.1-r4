{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 30,
                  "endLine": 380,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n    local inets_ipv6 = parse_bin_ipv6(bin_ip)\n    if not inets_ipv6 then\n        return false, \"invalid ip address, not ipv4 and ipv6\"\n    end\n\n    return match_ipv6(self, inets_ipv6)\n",
                    "rendered": {
                      "text": "\n    local inets_ipv6 = parse_bin_ipv6(bin_ip)\n    if not inets_ipv6 then\n        return false, \"invalid ip address, not ipv4 and ipv6\"\n    end\n\n    return match_ipv6(self, inets_ipv6)\n",
                      "markdown": "`\n    local inets_ipv6 = parse_bin_ipv6(bin_ip)\n    if not inets_ipv6 then\n        return false, \"invalid ip address, not ipv4 and ipv6\"\n    end\n\n    return match_ipv6(self, inets_ipv6)\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 30,
                  "endLine": 359,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n    local inets_ipv6 = parse_ipv6(ip)\n    if not inets_ipv6 then\n        return false, \"invalid ip address, not ipv4 and ipv6\"\n    end\n\n    local ipv6s = self.ipv6\n",
                    "rendered": {
                      "text": "\n    local inets_ipv6 = parse_ipv6(ip)\n    if not inets_ipv6 then\n        return false, \"invalid ip address, not ipv4 and ipv6\"\n    end\n\n    local ipv6s = self.ipv6\n",
                      "markdown": "`\n    local inets_ipv6 = parse_ipv6(ip)\n    if not inets_ipv6 then\n        return false, \"invalid ip address, not ipv4 and ipv6\"\n    end\n\n    local ipv6s = self.ipv6\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 18,
                  "endLine": 337,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                break\n            else\n                node = node[inet]\n                if node == true then\n                    return true\n                end\n                if type(node) == \"number\" then\n",
                    "rendered": {
                      "text": "                break\n            else\n                node = node[inet]\n                if node == true then\n                    return true\n                end\n                if type(node) == \"number\" then\n",
                      "markdown": "`                break\n            else\n                node = node[inet]\n                if node == true then\n                    return true\n                end\n                if type(node) == \"number\" then\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 336,
                  "startColumn": 15,
                  "endLine": 336,
                  "endColumn": 21,
                  "snippet": {
                    "text": "            if not node[inet] then\n                break\n            else\n                node = node[inet]\n                if node == true then\n                    return true\n                end\n",
                    "rendered": {
                      "text": "            if not node[inet] then\n                break\n            else\n                node = node[inet]\n                if node == true then\n                    return true\n                end\n",
                      "markdown": "`            if not node[inet] then\n                break\n            else\n                node = node[inet]\n                if node == true then\n                    return true\n                end\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 13,
                  "endLine": 330,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    end\n\n    for _, mask in ipairs(self.ipv6_mask_arr) do\n        local node = ipv6s[mask]\n        local inet_idxs = gen_ipv6_idxs(ip, mask)\n        for _, inet in ipairs(inet_idxs) do\n            if not node[inet] then\n",
                    "rendered": {
                      "text": "    end\n\n    for _, mask in ipairs(self.ipv6_mask_arr) do\n        local node = ipv6s[mask]\n        local inet_idxs = gen_ipv6_idxs(ip, mask)\n        for _, inet in ipairs(inet_idxs) do\n            if not node[inet] then\n",
                      "markdown": "`    end\n\n    for _, mask in ipairs(self.ipv6_mask_arr) do\n        local node = ipv6s[mask]\n        local inet_idxs = gen_ipv6_idxs(ip, mask)\n        for _, inet in ipairs(inet_idxs) do\n            if not node[inet] then\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 53,
                  "endLine": 327,
                  "snippet": {
                    "text": "local function match_ipv6(self, ip)\n    local ipv6s = self.ipv6\n    if self.ipv6_match_all_value ~= nil then\n        return self.ipv6_match_all_value -- match any ip\n    end\n\n    for _, mask in ipairs(self.ipv6_mask_arr) do\n        local node = ipv6s[mask]\n",
                    "rendered": {
                      "text": "local function match_ipv6(self, ip)\n    local ipv6s = self.ipv6\n    if self.ipv6_match_all_value ~= nil then\n        return self.ipv6_match_all_value -- match any ip\n    end\n\n    for _, mask in ipairs(self.ipv6_mask_arr) do\n        local node = ipv6s[mask]\n",
                      "markdown": "`local function match_ipv6(self, ip)\n    local ipv6s = self.ipv6\n    if self.ipv6_match_all_value ~= nil then\n        return self.ipv6_match_all_value -- match any ip\n    end\n\n    for _, mask in ipairs(self.ipv6_mask_arr) do\n        local node = ipv6s[mask]\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 53,
                  "endLine": 306,
                  "snippet": {
                    "text": "\n    local ipv4_mask = self.ipv4_mask\n    if self.ipv4_match_all_value ~= nil then\n        return self.ipv4_match_all_value -- match any ip\n    end\n\n    for _, mask in ipairs(self.ipv4_mask_arr) do\n        local valid_inet_addr = bit.rshift(ip, 32 - mask)\n",
                    "rendered": {
                      "text": "\n    local ipv4_mask = self.ipv4_mask\n    if self.ipv4_match_all_value ~= nil then\n        return self.ipv4_match_all_value -- match any ip\n    end\n\n    for _, mask in ipairs(self.ipv4_mask_arr) do\n        local valid_inet_addr = bit.rshift(ip, 32 - mask)\n",
                      "markdown": "`\n    local ipv4_mask = self.ipv4_mask\n    if self.ipv4_match_all_value ~= nil then\n        return self.ipv4_match_all_value -- match any ip\n    end\n\n    for _, mask in ipairs(self.ipv4_mask_arr) do\n        local valid_inet_addr = bit.rshift(ip, 32 - mask)\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 32,
                  "endLine": 257,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        end\n\n        if not inet_ipv4 and not inets_ipv6 then\n            return nil, \"invalid ip address: \" .. ip_addr\n        end\n\n        ::continue::\n",
                    "rendered": {
                      "text": "        end\n\n        if not inet_ipv4 and not inets_ipv6 then\n            return nil, \"invalid ip address: \" .. ip_addr\n        end\n\n        ::continue::\n",
                      "markdown": "`        end\n\n        if not inet_ipv4 and not inets_ipv6 then\n            return nil, \"invalid ip address: \" .. ip_addr\n        end\n\n        ::continue::\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 15,
                  "endLine": 248,
                  "endColumn": 21,
                  "snippet": {
                    "text": "                    end\n                end\n                node[inet] = node[inet] or {}\n                node = node[inet]\n            end\n\n            parsed_ipv6s_mask[ip_addr_mask] = true\n",
                    "rendered": {
                      "text": "                    end\n                end\n                node[inet] = node[inet] or {}\n                node = node[inet]\n            end\n\n            parsed_ipv6s_mask[ip_addr_mask] = true\n",
                      "markdown": "`                    end\n                end\n                node[inet] = node[inet] or {}\n                node = node[inet]\n            end\n\n            parsed_ipv6s_mask[ip_addr_mask] = true\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 17,
                  "endLine": 236,
                  "endColumn": 23,
                  "snippet": {
                    "text": "            parsed_ipv6s[ip_addr_mask] = parsed_ipv6s[ip_addr_mask] or {}\n\n            local inets_idxs = gen_ipv6_idxs(inets_ipv6, ip_addr_mask)\n            local node = parsed_ipv6s[ip_addr_mask]\n            for i, inet in ipairs(inets_idxs) do\n                if i == #inets_idxs then\n                    if with_value then\n",
                    "rendered": {
                      "text": "            parsed_ipv6s[ip_addr_mask] = parsed_ipv6s[ip_addr_mask] or {}\n\n            local inets_idxs = gen_ipv6_idxs(inets_ipv6, ip_addr_mask)\n            local node = parsed_ipv6s[ip_addr_mask]\n            for i, inet in ipairs(inets_idxs) do\n                if i == #inets_idxs then\n                    if with_value then\n",
                      "markdown": "`            parsed_ipv6s[ip_addr_mask] = parsed_ipv6s[ip_addr_mask] or {}\n\n            local inets_idxs = gen_ipv6_idxs(inets_ipv6, ip_addr_mask)\n            local node = parsed_ipv6s[ip_addr_mask]\n            for i, inet in ipairs(inets_idxs) do\n                if i == #inets_idxs then\n                    if with_value then\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 28,
                  "endLine": 175,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\nlocal function new(ips, with_value)\n    if not ips or type(ips) ~= \"table\" then\n        error(\"missing valid ip argument\", 2)\n    end\n\n    local parsed_ipv4s = {}\n",
                    "rendered": {
                      "text": "\nlocal function new(ips, with_value)\n    if not ips or type(ips) ~= \"table\" then\n        error(\"missing valid ip argument\", 2)\n    end\n\n    local parsed_ipv4s = {}\n",
                      "markdown": "`\nlocal function new(ips, with_value)\n    if not ips or type(ips) ~= \"table\" then\n        error(\"missing valid ip argument\", 2)\n    end\n\n    local parsed_ipv4s = {}\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 14,
                  "endLine": 106,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    local inets = ffi_new(\"unsigned int [4]\")\n\n    function parse_bin_ipv6(ip)\n        if not ip or #ip ~= 16 then\n            return false\n        end\n\n",
                    "rendered": {
                      "text": "    local inets = ffi_new(\"unsigned int [4]\")\n\n    function parse_bin_ipv6(ip)\n        if not ip or #ip ~= 16 then\n            return false\n        end\n\n",
                      "markdown": "`    local inets = ffi_new(\"unsigned int [4]\")\n\n    function parse_bin_ipv6(ip)\n        if not ip or #ip ~= 16 then\n            return false\n        end\n\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 11,
                  "endLine": 85,
                  "endColumn": 15,
                  "snippet": {
                    "text": "            and str_byte(ip, #ip) == str_byte(']') then\n\n            -- strip square brackets around IPv6 literal if present\n            ip = str_sub(ip, 2, #ip - 1)\n        end\n\n        if C.inet_pton(AF_INET6, ip, inets) ~= 1 then\n",
                    "rendered": {
                      "text": "            and str_byte(ip, #ip) == str_byte(']') then\n\n            -- strip square brackets around IPv6 literal if present\n            ip = str_sub(ip, 2, #ip - 1)\n        end\n\n        if C.inet_pton(AF_INET6, ip, inets) ~= 1 then\n",
                      "markdown": "`            and str_byte(ip, #ip) == str_byte(']') then\n\n            -- strip square brackets around IPv6 literal if present\n            ip = str_sub(ip, 2, #ip - 1)\n        end\n\n        if C.inet_pton(AF_INET6, ip, inets) ~= 1 then\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 14,
                  "endLine": 77,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    local inets = ffi_new(\"unsigned int [4]\")\n\n    function parse_ipv6(ip)\n        if not ip then\n            return false\n        end\n\n",
                    "rendered": {
                      "text": "    local inets = ffi_new(\"unsigned int [4]\")\n\n    function parse_ipv6(ip)\n        if not ip then\n            return false\n        end\n\n",
                      "markdown": "`    local inets = ffi_new(\"unsigned int [4]\")\n\n    function parse_ipv6(ip)\n        if not ip then\n            return false\n        end\n\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 14,
                  "endLine": 63,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    local inet = ffi_new(\"unsigned int [1]\")\n\n    function parse_bin_ipv4(ip)\n        if not ip or #ip ~= 4 then\n            return false\n        end\n\n",
                    "rendered": {
                      "text": "    local inet = ffi_new(\"unsigned int [1]\")\n\n    function parse_bin_ipv4(ip)\n        if not ip or #ip ~= 4 then\n            return false\n        end\n\n",
                      "markdown": "`    local inet = ffi_new(\"unsigned int [1]\")\n\n    function parse_bin_ipv4(ip)\n        if not ip or #ip ~= 4 then\n            return false\n        end\n\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/usr/share/lua/resty/ipmatcher.lua"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 14,
                  "endLine": 45,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    local inet = ffi_new(\"unsigned int [1]\")\n\n    function parse_ipv4(ip)\n        if not ip then\n            return false\n        end\n\n",
                    "rendered": {
                      "text": "    local inet = ffi_new(\"unsigned int [1]\")\n\n    function parse_ipv4(ip)\n        if not ip then\n            return false\n        end\n\n",
                      "markdown": "`    local inet = ffi_new(\"unsigned int [1]\")\n\n    function parse_ipv4(ip)\n        if not ip then\n            return false\n        end\n\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/.PKGINFO"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 55,
                  "endLine": 8,
                  "snippet": {
                    "text": "arch = x86_64\nsize = 48030\norigin = lua-resty-ipmatcher\npkgdesc = High-performance match IP address for Nginx + Lua\nurl = \ncommit = a2a945d8bd8072fc045a09aaea81d961e719e641\nbuilddate = 1719259078\nlicense = Apache-2.0\n",
                    "rendered": {
                      "text": "arch = x86_64\nsize = 48030\norigin = lua-resty-ipmatcher\npkgdesc = High-performance match IP address for Nginx + Lua\nurl = \ncommit = a2a945d8bd8072fc045a09aaea81d961e719e641\nbuilddate = 1719259078\nlicense = Apache-2.0\n",
                      "markdown": "`arch = x86_64\nsize = 48030\norigin = lua-resty-ipmatcher\npkgdesc = High-performance match IP address for Nginx + Lua\nurl = \ncommit = a2a945d8bd8072fc045a09aaea81d961e719e641\nbuilddate = 1719259078\nlicense = Apache-2.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/lua-resty-ipmatcher-0.6.1-r4.apk/lua-resty-ipmatcher-0.6.1-r4/.PKGINFO"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 32,
                  "endLine": 7,
                  "endColumn": 36,
                  "snippet": {
                    "text": "arch = x86_64\nsize = 48030\norigin = lua-resty-ipmatcher\npkgdesc = High-performance match IP address for Nginx + Lua\nurl = \ncommit = a2a945d8bd8072fc045a09aaea81d961e719e641\nbuilddate = 1719259078\n",
                    "rendered": {
                      "text": "arch = x86_64\nsize = 48030\norigin = lua-resty-ipmatcher\npkgdesc = High-performance match IP address for Nginx + Lua\nurl = \ncommit = a2a945d8bd8072fc045a09aaea81d961e719e641\nbuilddate = 1719259078\n",
                      "markdown": "`arch = x86_64\nsize = 48030\norigin = lua-resty-ipmatcher\npkgdesc = High-performance match IP address for Nginx + Lua\nurl = \ncommit = a2a945d8bd8072fc045a09aaea81d961e719e641\nbuilddate = 1719259078\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}