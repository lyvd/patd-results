{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/schema/definition.py"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 42,
                  "endLine": 100,
                  "endColumn": 46,
                  "snippet": {
                    "text": "                        dic[mapKey] = copied\n                    self.__setattr__(k, dic)\n                else:\n                    # Value was overridden at constructor\n                    self.__setattr__(k, kwargs[k])\n            elif isinstance(value, Record):\n                # Value is a subrecord\n",
                    "rendered": {
                      "text": "                        dic[mapKey] = copied\n                    self.__setattr__(k, dic)\n                else:\n                    # Value was overridden at constructor\n                    self.__setattr__(k, kwargs[k])\n            elif isinstance(value, Record):\n                # Value is a subrecord\n",
                      "markdown": "`                        dic[mapKey] = copied\n                    self.__setattr__(k, dic)\n                else:\n                    # Value was overridden at constructor\n                    self.__setattr__(k, kwargs[k])\n            elif isinstance(value, Record):\n                # Value is a subrecord\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/schema/definition.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 57,
                  "endLine": 9,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/schema/definition.py"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 20,
                  "endLine": 55,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            if issubclass(type(value), EnumMeta):\n                value = CustomEnum(value)\n            elif type(value) == RecordMeta:\n                # We expect an instance of a record rather than the class itself\n                value = value()\n\n            if isinstance(value, Record) or isinstance(value, Field):\n",
                    "rendered": {
                      "text": "            if issubclass(type(value), EnumMeta):\n                value = CustomEnum(value)\n            elif type(value) == RecordMeta:\n                # We expect an instance of a record rather than the class itself\n                value = value()\n\n            if isinstance(value, Record) or isinstance(value, Field):\n",
                      "markdown": "`            if issubclass(type(value), EnumMeta):\n                value = CustomEnum(value)\n            elif type(value) == RecordMeta:\n                # We expect an instance of a record rather than the class itself\n                value = value()\n\n            if isinstance(value, Record) or isinstance(value, Field):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/functions/function.py"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 57,
                  "endLine": 29,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/functions/function.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 57,
                  "endLine": 9,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/functions/__init__.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 57,
                  "endLine": 9,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/schema/schema_avro.py"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 55,
                  "endLine": 101,
                  "endColumn": 60,
                  "snippet": {
                    "text": "        def _get_writer_schema(self, topic: str, version: int) -> 'dict':\n            if self._writer_schemas.get(topic) is None:\n                self._writer_schemas[topic] = dict()\n            writer_schema = self._writer_schemas[topic].get(version)\n            if writer_schema is not None:\n                return writer_schema\n            if self._client is None:\n",
                    "rendered": {
                      "text": "        def _get_writer_schema(self, topic: str, version: int) -> 'dict':\n            if self._writer_schemas.get(topic) is None:\n                self._writer_schemas[topic] = dict()\n            writer_schema = self._writer_schemas[topic].get(version)\n            if writer_schema is not None:\n                return writer_schema\n            if self._client is None:\n",
                      "markdown": "`        def _get_writer_schema(self, topic: str, version: int) -> 'dict':\n            if self._writer_schemas.get(topic) is None:\n                self._writer_schemas[topic] = dict()\n            writer_schema = self._writer_schemas[topic].get(version)\n            if writer_schema is not None:\n                return writer_schema\n            if self._client is None:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/schema/schema_avro.py"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 35,
                  "endLine": 99,
                  "endColumn": 40,
                  "snippet": {
                    "text": "                return self._decode_bytes(msg.data(), self._schema)\n\n        def _get_writer_schema(self, topic: str, version: int) -> 'dict':\n            if self._writer_schemas.get(topic) is None:\n                self._writer_schemas[topic] = dict()\n            writer_schema = self._writer_schemas[topic].get(version)\n            if writer_schema is not None:\n",
                    "rendered": {
                      "text": "                return self._decode_bytes(msg.data(), self._schema)\n\n        def _get_writer_schema(self, topic: str, version: int) -> 'dict':\n            if self._writer_schemas.get(topic) is None:\n                self._writer_schemas[topic] = dict()\n            writer_schema = self._writer_schemas[topic].get(version)\n            if writer_schema is not None:\n",
                      "markdown": "`                return self._decode_bytes(msg.data(), self._schema)\n\n        def _get_writer_schema(self, topic: str, version: int) -> 'dict':\n            if self._writer_schemas.get(topic) is None:\n                self._writer_schemas[topic] = dict()\n            writer_schema = self._writer_schemas[topic].get(version)\n            if writer_schema is not None:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/schema/schema_avro.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 57,
                  "endLine": 9,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/schema/schema.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 57,
                  "endLine": 9,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/functions/context.py"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 47,
                  "endLine": 46,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n\nclass Context(object):\n    \"\"\"Interface defining information available at process time\"\"\"\n\n    @abstractmethod\n    def get_message_id(self):\n",
                    "rendered": {
                      "text": "\n\nclass Context(object):\n    \"\"\"Interface defining information available at process time\"\"\"\n\n    @abstractmethod\n    def get_message_id(self):\n",
                      "markdown": "`\n\nclass Context(object):\n    \"\"\"Interface defining information available at process time\"\"\"\n\n    @abstractmethod\n    def get_message_id(self):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/functions/context.py"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 57,
                  "endLine": 29,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/functions/context.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 57,
                  "endLine": 9,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/functions/context.py"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 27,
                  "endLine": 60,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n    @abstractmethod\n    def get_message_eventtime(self):\n        \"\"\"Return the event time of the current message that we are processing\"\"\"\n        pass\n\n    @abstractmethod\n",
                    "rendered": {
                      "text": "\n    @abstractmethod\n    def get_message_eventtime(self):\n        \"\"\"Return the event time of the current message that we are processing\"\"\"\n        pass\n\n    @abstractmethod\n",
                      "markdown": "`\n    @abstractmethod\n    def get_message_eventtime(self):\n        \"\"\"Return the event time of the current message that we are processing\"\"\"\n        pass\n\n    @abstractmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 72,
                  "endLine": 467,
                  "endColumn": 83,
                  "snippet": {
                    "text": "        \"\"\"\n        _check_type(str, public_key_path, 'public_key_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.cryptoKeyReader = _pulsar.CryptoKeyReader(public_key_path, private_key_path)\n\nclass Client:\n    \"\"\"\n",
                    "rendered": {
                      "text": "        \"\"\"\n        _check_type(str, public_key_path, 'public_key_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.cryptoKeyReader = _pulsar.CryptoKeyReader(public_key_path, private_key_path)\n\nclass Client:\n    \"\"\"\n",
                      "markdown": "`        \"\"\"\n        _check_type(str, public_key_path, 'public_key_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.cryptoKeyReader = _pulsar.CryptoKeyReader(public_key_path, private_key_path)\n\nclass Client:\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 466,
                  "startColumn": 44,
                  "endLine": 466,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            Path to private key\n        \"\"\"\n        _check_type(str, public_key_path, 'public_key_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.cryptoKeyReader = _pulsar.CryptoKeyReader(public_key_path, private_key_path)\n\nclass Client:\n",
                    "rendered": {
                      "text": "            Path to private key\n        \"\"\"\n        _check_type(str, public_key_path, 'public_key_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.cryptoKeyReader = _pulsar.CryptoKeyReader(public_key_path, private_key_path)\n\nclass Client:\n",
                      "markdown": "`            Path to private key\n        \"\"\"\n        _check_type(str, public_key_path, 'public_key_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.cryptoKeyReader = _pulsar.CryptoKeyReader(public_key_path, private_key_path)\n\nclass Client:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 466,
                  "startColumn": 25,
                  "endLine": 466,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            Path to private key\n        \"\"\"\n        _check_type(str, public_key_path, 'public_key_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.cryptoKeyReader = _pulsar.CryptoKeyReader(public_key_path, private_key_path)\n\nclass Client:\n",
                    "rendered": {
                      "text": "            Path to private key\n        \"\"\"\n        _check_type(str, public_key_path, 'public_key_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.cryptoKeyReader = _pulsar.CryptoKeyReader(public_key_path, private_key_path)\n\nclass Client:\n",
                      "markdown": "`            Path to private key\n        \"\"\"\n        _check_type(str, public_key_path, 'public_key_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.cryptoKeyReader = _pulsar.CryptoKeyReader(public_key_path, private_key_path)\n\nclass Client:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 462,
                  "startColumn": 8,
                  "endLine": 462,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n        public_key_path: str\n            Path to the public key\n        private_key_path: str\n            Path to private key\n        \"\"\"\n        _check_type(str, public_key_path, 'public_key_path')\n",
                    "rendered": {
                      "text": "\n        public_key_path: str\n            Path to the public key\n        private_key_path: str\n            Path to private key\n        \"\"\"\n        _check_type(str, public_key_path, 'public_key_path')\n",
                      "markdown": "`\n        public_key_path: str\n            Path to the public key\n        private_key_path: str\n            Path to private key\n        \"\"\"\n        _check_type(str, public_key_path, 'public_key_path')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 453,
                  "startColumn": 40,
                  "endLine": 453,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    \"\"\"\n    Default crypto key reader implementation\n    \"\"\"\n    def __init__(self, public_key_path, private_key_path):\n        \"\"\"\n        Create crypto key reader.\n\n",
                    "rendered": {
                      "text": "    \"\"\"\n    Default crypto key reader implementation\n    \"\"\"\n    def __init__(self, public_key_path, private_key_path):\n        \"\"\"\n        Create crypto key reader.\n\n",
                      "markdown": "`    \"\"\"\n    Default crypto key reader implementation\n    \"\"\"\n    def __init__(self, public_key_path, private_key_path):\n        \"\"\"\n        Create crypto key reader.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 388,
                  "startColumn": 69,
                  "endLine": 388,
                  "endColumn": 77,
                  "snippet": {
                    "text": "            _check_type(str, username, 'username')\n            _check_type(str, password, 'password')\n            _check_type(str, method, 'method')\n            self.auth = _pulsar.AuthenticationBasic.create(username, password, method)\n\nclass ConsumerDeadLetterPolicy:\n    \"\"\"\n",
                    "rendered": {
                      "text": "            _check_type(str, username, 'username')\n            _check_type(str, password, 'password')\n            _check_type(str, method, 'method')\n            self.auth = _pulsar.AuthenticationBasic.create(username, password, method)\n\nclass ConsumerDeadLetterPolicy:\n    \"\"\"\n",
                      "markdown": "`            _check_type(str, username, 'username')\n            _check_type(str, password, 'password')\n            _check_type(str, method, 'method')\n            self.auth = _pulsar.AuthenticationBasic.create(username, password, method)\n\nclass ConsumerDeadLetterPolicy:\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 40,
                  "endLine": 386,
                  "endColumn": 48,
                  "snippet": {
                    "text": "            self.auth = _pulsar.AuthenticationBasic.create(auth_params_string)\n        else:\n            _check_type(str, username, 'username')\n            _check_type(str, password, 'password')\n            _check_type(str, method, 'method')\n            self.auth = _pulsar.AuthenticationBasic.create(username, password, method)\n\n",
                    "rendered": {
                      "text": "            self.auth = _pulsar.AuthenticationBasic.create(auth_params_string)\n        else:\n            _check_type(str, username, 'username')\n            _check_type(str, password, 'password')\n            _check_type(str, method, 'method')\n            self.auth = _pulsar.AuthenticationBasic.create(username, password, method)\n\n",
                      "markdown": "`            self.auth = _pulsar.AuthenticationBasic.create(auth_params_string)\n        else:\n            _check_type(str, username, 'username')\n            _check_type(str, password, 'password')\n            _check_type(str, method, 'method')\n            self.auth = _pulsar.AuthenticationBasic.create(username, password, method)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 29,
                  "endLine": 386,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            self.auth = _pulsar.AuthenticationBasic.create(auth_params_string)\n        else:\n            _check_type(str, username, 'username')\n            _check_type(str, password, 'password')\n            _check_type(str, method, 'method')\n            self.auth = _pulsar.AuthenticationBasic.create(username, password, method)\n\n",
                    "rendered": {
                      "text": "            self.auth = _pulsar.AuthenticationBasic.create(auth_params_string)\n        else:\n            _check_type(str, username, 'username')\n            _check_type(str, password, 'password')\n            _check_type(str, method, 'method')\n            self.auth = _pulsar.AuthenticationBasic.create(username, password, method)\n\n",
                      "markdown": "`            self.auth = _pulsar.AuthenticationBasic.create(auth_params_string)\n        else:\n            _check_type(str, username, 'username')\n            _check_type(str, password, 'password')\n            _check_type(str, method, 'method')\n            self.auth = _pulsar.AuthenticationBasic.create(username, password, method)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 35,
                  "endLine": 378,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n                {\"username\": \"my-user\", \"password\": \"my-pass\", \"method\": \"oms3.0\"}\n\n            The ``username`` and ``password`` fields are required. If the \"method\" field is not set, it will be\n            \"basic\" by default.\n        \"\"\"\n        if auth_params_string is not None:\n",
                    "rendered": {
                      "text": "\n                {\"username\": \"my-user\", \"password\": \"my-pass\", \"method\": \"oms3.0\"}\n\n            The ``username`` and ``password`` fields are required. If the \"method\" field is not set, it will be\n            \"basic\" by default.\n        \"\"\"\n        if auth_params_string is not None:\n",
                      "markdown": "`\n                {\"username\": \"my-user\", \"password\": \"my-pass\", \"method\": \"oms3.0\"}\n\n            The ``username`` and ``password`` fields are required. If the \"method\" field is not set, it will be\n            \"basic\" by default.\n        \"\"\"\n        if auth_params_string is not None:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 41,
                  "endLine": 376,
                  "endColumn": 49,
                  "snippet": {
                    "text": "            The JSON presentation of all fields above. If it's not None, the other parameters will be ignored.\n            Here is an example JSON presentation:\n\n                {\"username\": \"my-user\", \"password\": \"my-pass\", \"method\": \"oms3.0\"}\n\n            The ``username`` and ``password`` fields are required. If the \"method\" field is not set, it will be\n            \"basic\" by default.\n",
                    "rendered": {
                      "text": "            The JSON presentation of all fields above. If it's not None, the other parameters will be ignored.\n            Here is an example JSON presentation:\n\n                {\"username\": \"my-user\", \"password\": \"my-pass\", \"method\": \"oms3.0\"}\n\n            The ``username`` and ``password`` fields are required. If the \"method\" field is not set, it will be\n            \"basic\" by default.\n",
                      "markdown": "`            The JSON presentation of all fields above. If it's not None, the other parameters will be ignored.\n            Here is an example JSON presentation:\n\n                {\"username\": \"my-user\", \"password\": \"my-pass\", \"method\": \"oms3.0\"}\n\n            The ``username`` and ``password`` fields are required. If the \"method\" field is not set, it will be\n            \"basic\" by default.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 8,
                  "endLine": 369,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        Parameters\n        ----------\n        username : str, optional\n        password : str, optional\n        method : str, default='basic'\n            The authentication method name\n        auth_params_string : str, optional\n",
                    "rendered": {
                      "text": "        Parameters\n        ----------\n        username : str, optional\n        password : str, optional\n        method : str, default='basic'\n            The authentication method name\n        auth_params_string : str, optional\n",
                      "markdown": "`        Parameters\n        ----------\n        username : str, optional\n        password : str, optional\n        method : str, default='basic'\n            The authentication method name\n        auth_params_string : str, optional\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 363,
                  "startColumn": 84,
                  "endLine": 363,
                  "endColumn": 92,
                  "snippet": {
                    "text": "        .. code-block:: python\n\n            auth = AuthenticationBasic('my-user', 'my-pass')\n            auth = AuthenticationBasic(auth_params_string='{\"username\": \"my-user\", \"password\": \"my-pass\"}')\n\n\n        Parameters\n",
                    "rendered": {
                      "text": "        .. code-block:: python\n\n            auth = AuthenticationBasic('my-user', 'my-pass')\n            auth = AuthenticationBasic(auth_params_string='{\"username\": \"my-user\", \"password\": \"my-pass\"}')\n\n\n        Parameters\n",
                      "markdown": "`        .. code-block:: python\n\n            auth = AuthenticationBasic('my-user', 'my-pass')\n            auth = AuthenticationBasic(auth_params_string='{\"username\": \"my-user\", \"password\": \"my-pass\"}')\n\n\n        Parameters\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 34,
                  "endLine": 358,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        Create the Basic authentication provider instance.\n\n        For example, if you want to create a basic authentication instance whose\n        username is \"my-user\" and password is \"my-pass\", there are two ways:\n\n        .. code-block:: python\n\n",
                    "rendered": {
                      "text": "        Create the Basic authentication provider instance.\n\n        For example, if you want to create a basic authentication instance whose\n        username is \"my-user\" and password is \"my-pass\", there are two ways:\n\n        .. code-block:: python\n\n",
                      "markdown": "`        Create the Basic authentication provider instance.\n\n        For example, if you want to create a basic authentication instance whose\n        username is \"my-user\" and password is \"my-pass\", there are two ways:\n\n        .. code-block:: python\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 38,
                  "endLine": 353,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    \"\"\"\n    Basic Authentication implementation\n    \"\"\"\n    def __init__(self, username=None, password=None, method='basic', auth_params_string=None):\n        \"\"\"\n        Create the Basic authentication provider instance.\n\n",
                    "rendered": {
                      "text": "    \"\"\"\n    Basic Authentication implementation\n    \"\"\"\n    def __init__(self, username=None, password=None, method='basic', auth_params_string=None):\n        \"\"\"\n        Create the Basic authentication provider instance.\n\n",
                      "markdown": "`    \"\"\"\n    Basic Authentication implementation\n    \"\"\"\n    def __init__(self, username=None, password=None, method='basic', auth_params_string=None):\n        \"\"\"\n        Create the Basic authentication provider instance.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 10,
                  "endLine": 322,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        * issuer_url (required)\n            The URL of the authentication provider which allows the Pulsar client to obtain an\n            access token.\n        * private_key (required)\n            The URL to the JSON credentials file. It supports the following pattern formats:\n\n            * ``/path/to/file``\n",
                    "rendered": {
                      "text": "        * issuer_url (required)\n            The URL of the authentication provider which allows the Pulsar client to obtain an\n            access token.\n        * private_key (required)\n            The URL to the JSON credentials file. It supports the following pattern formats:\n\n            * ``/path/to/file``\n",
                      "markdown": "`        * issuer_url (required)\n            The URL of the authentication provider which allows the Pulsar client to obtain an\n            access token.\n        * private_key (required)\n            The URL to the JSON credentials file. It supports the following pattern formats:\n\n            * ``/path/to/file``\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 64,
                  "endLine": 315,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\n        .. code-block:: python\n\n            auth = AuthenticationOauth2('{\"issuer_url\": \"xxx\", \"private_key\": \"yyy\"}')\n\n        The valid JSON fields are:\n\n",
                    "rendered": {
                      "text": "\n        .. code-block:: python\n\n            auth = AuthenticationOauth2('{\"issuer_url\": \"xxx\", \"private_key\": \"yyy\"}')\n\n        The valid JSON fields are:\n\n",
                      "markdown": "`\n        .. code-block:: python\n\n            auth = AuthenticationOauth2('{\"issuer_url\": \"xxx\", \"private_key\": \"yyy\"}')\n\n        The valid JSON fields are:\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 71,
                  "endLine": 264,
                  "endColumn": 82,
                  "snippet": {
                    "text": "        \"\"\"\n        _check_type(str, certificate_path, 'certificate_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.auth = _pulsar.AuthenticationTLS.create(certificate_path, private_key_path)\n\n\nclass AuthenticationToken(Authentication):\n",
                    "rendered": {
                      "text": "        \"\"\"\n        _check_type(str, certificate_path, 'certificate_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.auth = _pulsar.AuthenticationTLS.create(certificate_path, private_key_path)\n\n\nclass AuthenticationToken(Authentication):\n",
                      "markdown": "`        \"\"\"\n        _check_type(str, certificate_path, 'certificate_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.auth = _pulsar.AuthenticationTLS.create(certificate_path, private_key_path)\n\n\nclass AuthenticationToken(Authentication):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 44,
                  "endLine": 263,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            Path to private TLS key\n        \"\"\"\n        _check_type(str, certificate_path, 'certificate_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.auth = _pulsar.AuthenticationTLS.create(certificate_path, private_key_path)\n\n\n",
                    "rendered": {
                      "text": "            Path to private TLS key\n        \"\"\"\n        _check_type(str, certificate_path, 'certificate_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.auth = _pulsar.AuthenticationTLS.create(certificate_path, private_key_path)\n\n\n",
                      "markdown": "`            Path to private TLS key\n        \"\"\"\n        _check_type(str, certificate_path, 'certificate_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.auth = _pulsar.AuthenticationTLS.create(certificate_path, private_key_path)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 25,
                  "endLine": 263,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            Path to private TLS key\n        \"\"\"\n        _check_type(str, certificate_path, 'certificate_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.auth = _pulsar.AuthenticationTLS.create(certificate_path, private_key_path)\n\n\n",
                    "rendered": {
                      "text": "            Path to private TLS key\n        \"\"\"\n        _check_type(str, certificate_path, 'certificate_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.auth = _pulsar.AuthenticationTLS.create(certificate_path, private_key_path)\n\n\n",
                      "markdown": "`            Path to private TLS key\n        \"\"\"\n        _check_type(str, certificate_path, 'certificate_path')\n        _check_type(str, private_key_path, 'private_key_path')\n        self.auth = _pulsar.AuthenticationTLS.create(certificate_path, private_key_path)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 8,
                  "endLine": 259,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n        certificate_path: str\n            Path to the public certificate\n        private_key_path: str\n            Path to private TLS key\n        \"\"\"\n        _check_type(str, certificate_path, 'certificate_path')\n",
                    "rendered": {
                      "text": "\n        certificate_path: str\n            Path to the public certificate\n        private_key_path: str\n            Path to private TLS key\n        \"\"\"\n        _check_type(str, certificate_path, 'certificate_path')\n",
                      "markdown": "`\n        certificate_path: str\n            Path to the public certificate\n        private_key_path: str\n            Path to private TLS key\n        \"\"\"\n        _check_type(str, certificate_path, 'certificate_path')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 41,
                  "endLine": 250,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    \"\"\"\n    TLS Authentication implementation\n    \"\"\"\n    def __init__(self, certificate_path, private_key_path):\n        \"\"\"\n        Create the TLS authentication provider instance.\n\n",
                    "rendered": {
                      "text": "    \"\"\"\n    TLS Authentication implementation\n    \"\"\"\n    def __init__(self, certificate_path, private_key_path):\n        \"\"\"\n        Create the TLS authentication provider instance.\n\n",
                      "markdown": "`    \"\"\"\n    TLS Authentication implementation\n    \"\"\"\n    def __init__(self, certificate_path, private_key_path):\n        \"\"\"\n        Create the TLS authentication provider instance.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 597,
                  "startColumn": 48,
                  "endLine": 597,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            import certifi\n            conf.tls_trust_certs_file_path(certifi.where())\n        conf.tls_allow_insecure_connection(tls_allow_insecure_connection)\n        conf.tls_validate_hostname(tls_validate_hostname)\n        self._client = _pulsar.Client(service_url, conf)\n        self._consumers = []\n\n",
                    "rendered": {
                      "text": "            import certifi\n            conf.tls_trust_certs_file_path(certifi.where())\n        conf.tls_allow_insecure_connection(tls_allow_insecure_connection)\n        conf.tls_validate_hostname(tls_validate_hostname)\n        self._client = _pulsar.Client(service_url, conf)\n        self._consumers = []\n\n",
                      "markdown": "`            import certifi\n            conf.tls_trust_certs_file_path(certifi.where())\n        conf.tls_allow_insecure_connection(tls_allow_insecure_connection)\n        conf.tls_validate_hostname(tls_validate_hostname)\n        self._client = _pulsar.Client(service_url, conf)\n        self._consumers = []\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 597,
                  "startColumn": 26,
                  "endLine": 597,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            import certifi\n            conf.tls_trust_certs_file_path(certifi.where())\n        conf.tls_allow_insecure_connection(tls_allow_insecure_connection)\n        conf.tls_validate_hostname(tls_validate_hostname)\n        self._client = _pulsar.Client(service_url, conf)\n        self._consumers = []\n\n",
                    "rendered": {
                      "text": "            import certifi\n            conf.tls_trust_certs_file_path(certifi.where())\n        conf.tls_allow_insecure_connection(tls_allow_insecure_connection)\n        conf.tls_validate_hostname(tls_validate_hostname)\n        self._client = _pulsar.Client(service_url, conf)\n        self._consumers = []\n\n",
                      "markdown": "`            import certifi\n            conf.tls_trust_certs_file_path(certifi.where())\n        conf.tls_allow_insecure_connection(tls_allow_insecure_connection)\n        conf.tls_validate_hostname(tls_validate_hostname)\n        self._client = _pulsar.Client(service_url, conf)\n        self._consumers = []\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 566,
                  "startColumn": 63,
                  "endLine": 566,
                  "endColumn": 71,
                  "snippet": {
                    "text": "        _check_type(bool, use_tls, 'use_tls')\n        _check_type_or_none(str, tls_trust_certs_file_path, 'tls_trust_certs_file_path')\n        _check_type(bool, tls_allow_insecure_connection, 'tls_allow_insecure_connection')\n        _check_type(bool, tls_validate_hostname, 'tls_validate_hostname')\n        _check_type_or_none(str, listener_name, 'listener_name')\n\n        conf = _pulsar.ClientConfiguration()\n",
                    "rendered": {
                      "text": "        _check_type(bool, use_tls, 'use_tls')\n        _check_type_or_none(str, tls_trust_certs_file_path, 'tls_trust_certs_file_path')\n        _check_type(bool, tls_allow_insecure_connection, 'tls_allow_insecure_connection')\n        _check_type(bool, tls_validate_hostname, 'tls_validate_hostname')\n        _check_type_or_none(str, listener_name, 'listener_name')\n\n        conf = _pulsar.ClientConfiguration()\n",
                      "markdown": "`        _check_type(bool, use_tls, 'use_tls')\n        _check_type_or_none(str, tls_trust_certs_file_path, 'tls_trust_certs_file_path')\n        _check_type(bool, tls_allow_insecure_connection, 'tls_allow_insecure_connection')\n        _check_type(bool, tls_validate_hostname, 'tls_validate_hostname')\n        _check_type_or_none(str, listener_name, 'listener_name')\n\n        conf = _pulsar.ClientConfiguration()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 566,
                  "startColumn": 39,
                  "endLine": 566,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        _check_type(bool, use_tls, 'use_tls')\n        _check_type_or_none(str, tls_trust_certs_file_path, 'tls_trust_certs_file_path')\n        _check_type(bool, tls_allow_insecure_connection, 'tls_allow_insecure_connection')\n        _check_type(bool, tls_validate_hostname, 'tls_validate_hostname')\n        _check_type_or_none(str, listener_name, 'listener_name')\n\n        conf = _pulsar.ClientConfiguration()\n",
                    "rendered": {
                      "text": "        _check_type(bool, use_tls, 'use_tls')\n        _check_type_or_none(str, tls_trust_certs_file_path, 'tls_trust_certs_file_path')\n        _check_type(bool, tls_allow_insecure_connection, 'tls_allow_insecure_connection')\n        _check_type(bool, tls_validate_hostname, 'tls_validate_hostname')\n        _check_type_or_none(str, listener_name, 'listener_name')\n\n        conf = _pulsar.ClientConfiguration()\n",
                      "markdown": "`        _check_type(bool, use_tls, 'use_tls')\n        _check_type_or_none(str, tls_trust_certs_file_path, 'tls_trust_certs_file_path')\n        _check_type(bool, tls_allow_insecure_connection, 'tls_allow_insecure_connection')\n        _check_type(bool, tls_validate_hostname, 'tls_validate_hostname')\n        _check_type_or_none(str, listener_name, 'listener_name')\n\n        conf = _pulsar.ClientConfiguration()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 531,
                  "startColumn": 67,
                  "endLine": 531,
                  "endColumn": 75,
                  "snippet": {
                    "text": "        tls_allow_insecure_connection: bool, default=False\n            Configure whether the Pulsar client accepts untrusted TLS certificates from the broker.\n        tls_validate_hostname: bool, default=False\n            Configure whether the Pulsar client validates that the hostname of the endpoint,\n            matches the common name on the TLS certificate presented by the endpoint.\n        logger: optional\n            Set a Python logger for this Pulsar client. Should be an instance of `logging.Logger`.\n",
                    "rendered": {
                      "text": "        tls_allow_insecure_connection: bool, default=False\n            Configure whether the Pulsar client accepts untrusted TLS certificates from the broker.\n        tls_validate_hostname: bool, default=False\n            Configure whether the Pulsar client validates that the hostname of the endpoint,\n            matches the common name on the TLS certificate presented by the endpoint.\n        logger: optional\n            Set a Python logger for this Pulsar client. Should be an instance of `logging.Logger`.\n",
                      "markdown": "`        tls_allow_insecure_connection: bool, default=False\n            Configure whether the Pulsar client accepts untrusted TLS certificates from the broker.\n        tls_validate_hostname: bool, default=False\n            Configure whether the Pulsar client validates that the hostname of the endpoint,\n            matches the common name on the TLS certificate presented by the endpoint.\n        logger: optional\n            Set a Python logger for this Pulsar client. Should be an instance of `logging.Logger`.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 530,
                  "startColumn": 21,
                  "endLine": 530,
                  "endColumn": 29,
                  "snippet": {
                    "text": "            Set the path to the trusted TLS certificate file. If empty defaults to certifi.\n        tls_allow_insecure_connection: bool, default=False\n            Configure whether the Pulsar client accepts untrusted TLS certificates from the broker.\n        tls_validate_hostname: bool, default=False\n            Configure whether the Pulsar client validates that the hostname of the endpoint,\n            matches the common name on the TLS certificate presented by the endpoint.\n        logger: optional\n",
                    "rendered": {
                      "text": "            Set the path to the trusted TLS certificate file. If empty defaults to certifi.\n        tls_allow_insecure_connection: bool, default=False\n            Configure whether the Pulsar client accepts untrusted TLS certificates from the broker.\n        tls_validate_hostname: bool, default=False\n            Configure whether the Pulsar client validates that the hostname of the endpoint,\n            matches the common name on the TLS certificate presented by the endpoint.\n        logger: optional\n",
                      "markdown": "`            Set the path to the trusted TLS certificate file. If empty defaults to certifi.\n        tls_allow_insecure_connection: bool, default=False\n            Configure whether the Pulsar client accepts untrusted TLS certificates from the broker.\n        tls_validate_hostname: bool, default=False\n            Configure whether the Pulsar client validates that the hostname of the endpoint,\n            matches the common name on the TLS certificate presented by the endpoint.\n        logger: optional\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 488,
                  "startColumn": 30,
                  "endLine": 488,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                 use_tls=False,\n                 tls_trust_certs_file_path=None,\n                 tls_allow_insecure_connection=False,\n                 tls_validate_hostname=False,\n                 logger=None,\n                 connection_timeout_ms=10000,\n                 listener_name=None\n",
                    "rendered": {
                      "text": "                 use_tls=False,\n                 tls_trust_certs_file_path=None,\n                 tls_allow_insecure_connection=False,\n                 tls_validate_hostname=False,\n                 logger=None,\n                 connection_timeout_ms=10000,\n                 listener_name=None\n",
                      "markdown": "`                 use_tls=False,\n                 tls_trust_certs_file_path=None,\n                 tls_allow_insecure_connection=False,\n                 tls_validate_hostname=False,\n                 logger=None,\n                 connection_timeout_ms=10000,\n                 listener_name=None\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 1072,
                  "startColumn": 54,
                  "endLine": 1072,
                  "endColumn": 58,
                  "snippet": {
                    "text": "        receiver_queue_size: int, default=1000\n            Sets the size of the reader receive queue. The reader receive queue controls how many messages can be\n            accumulated by the reader before the application calls `read_next()`. Using a higher value could\n            potentially increase the reader throughput at the expense of higher memory utilization.\n        reader_name: str, optional\n            Sets the reader name.\n        subscription_role_prefix: str, optional\n",
                    "rendered": {
                      "text": "        receiver_queue_size: int, default=1000\n            Sets the size of the reader receive queue. The reader receive queue controls how many messages can be\n            accumulated by the reader before the application calls `read_next()`. Using a higher value could\n            potentially increase the reader throughput at the expense of higher memory utilization.\n        reader_name: str, optional\n            Sets the reader name.\n        subscription_role_prefix: str, optional\n",
                      "markdown": "`        receiver_queue_size: int, default=1000\n            Sets the size of the reader receive queue. The reader receive queue controls how many messages can be\n            accumulated by the reader before the application calls `read_next()`. Using a higher value could\n            potentially increase the reader throughput at the expense of higher memory utilization.\n        reader_name: str, optional\n            Sets the reader name.\n        subscription_role_prefix: str, optional\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 887,
                  "startColumn": 31,
                  "endLine": 887,
                  "endColumn": 35,
                  "snippet": {
                    "text": "            Selects whether to read the compacted version of the topic\n        properties: dict, optional\n            Sets the properties for the consumer. The properties associated with a consumer can be used for\n            identify a consumer at broker side.\n        pattern_auto_discovery_period: int, default=60\n            Periods of seconds for consumer to auto discover match topics.\n        initial_position: InitialPosition, default=InitialPosition.Latest\n",
                    "rendered": {
                      "text": "            Selects whether to read the compacted version of the topic\n        properties: dict, optional\n            Sets the properties for the consumer. The properties associated with a consumer can be used for\n            identify a consumer at broker side.\n        pattern_auto_discovery_period: int, default=60\n            Periods of seconds for consumer to auto discover match topics.\n        initial_position: InitialPosition, default=InitialPosition.Latest\n",
                      "markdown": "`            Selects whether to read the compacted version of the topic\n        properties: dict, optional\n            Sets the properties for the consumer. The properties associated with a consumer can be used for\n            identify a consumer at broker side.\n        pattern_auto_discovery_period: int, default=60\n            Periods of seconds for consumer to auto discover match topics.\n        initial_position: InitialPosition, default=InitialPosition.Latest\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 862,
                  "startColumn": 44,
                  "endLine": 862,
                  "endColumn": 48,
                  "snippet": {
                    "text": "nt, default=1000\n            Sets the size of the consumer receive queue. The consumer receive queue controls how many messages can be\n            accumulated by the consumer before the application calls `receive()`. Using a higher value could potentially\n            increase the consumer throughput at the expense of higher memory utilization. Setting the consumer queue\n            size to zero decreases the throughput of the consumer by disabling pre-fetching of messages.\n\n            This approach improves the message distribution on shared subscription by pushing messages only to those\n        ",
                    "rendered": {
                      "text": "nt, default=1000\n            Sets the size of the consumer receive queue. The consumer receive queue controls how many messages can be\n            accumulated by the consumer before the application calls `receive()`. Using a higher value could potentially\n            increase the consumer throughput at the expense of higher memory utilization. Setting the consumer queue\n            size to zero decreases the throughput of the consumer by disabling pre-fetching of messages.\n\n            This approach improves the message distribution on shared subscription by pushing messages only to those\n        ",
                      "markdown": "`nt, default=1000\n            Sets the size of the consumer receive queue. The consumer receive queue controls how many messages can be\n            accumulated by the consumer before the application calls `receive()`. Using a higher value could potentially\n            increase the consumer throughput at the expense of higher memory utilization. Setting the consumer queue\n            size to zero decreases the throughput of the consumer by disabling pre-fetching of messages.\n\n            This approach improves the message distribution on shared subscription by pushing messages only to those\n        `"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 712,
                  "startColumn": 22,
                  "endLine": 712,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            on demand, this can produce extra send latency for the first messages of a given partition.\n        properties: dict, optional\n            Sets the properties for the producer. The properties associated with a producer can be used for identify\n            a producer at broker side.\n        batching_type: BatchingType, default=BatchingType.Default\n            Sets the batching type for the producer.\n\n",
                    "rendered": {
                      "text": "            on demand, this can produce extra send latency for the first messages of a given partition.\n        properties: dict, optional\n            Sets the properties for the producer. The properties associated with a producer can be used for identify\n            a producer at broker side.\n        batching_type: BatchingType, default=BatchingType.Default\n            Sets the batching type for the producer.\n\n",
                      "markdown": "`            on demand, this can produce extra send latency for the first messages of a given partition.\n        properties: dict, optional\n            Sets the properties for the producer. The properties associated with a producer can be used for identify\n            a producer at broker side.\n        batching_type: BatchingType, default=BatchingType.Default\n            Sets the batching type for the producer.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 671,
                  "startColumn": 84,
                  "endLine": 671,
                  "endColumn": 88,
                  "snippet": {
                    "text": "            ZSTD is supported since Pulsar 2.3. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with ZSTD.\n\n            SNAPPY is supported since Pulsar 2.4. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with SNAPPY.\n        batching_enabled: bool, default=False\n            When automatic batching is enabled, multiple calls to `send` can result in a single batch to be sent to the\n",
                    "rendered": {
                      "text": "            ZSTD is supported since Pulsar 2.3. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with ZSTD.\n\n            SNAPPY is supported since Pulsar 2.4. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with SNAPPY.\n        batching_enabled: bool, default=False\n            When automatic batching is enabled, multiple calls to `send` can result in a single batch to be sent to the\n",
                      "markdown": "`            ZSTD is supported since Pulsar 2.3. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with ZSTD.\n\n            SNAPPY is supported since Pulsar 2.4. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with SNAPPY.\n        batching_enabled: bool, default=False\n            When automatic batching is enabled, multiple calls to `send` can result in a single batch to be sent to the\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 671,
                  "startColumn": 75,
                  "endLine": 671,
                  "endColumn": 79,
                  "snippet": {
                    "text": "            ZSTD is supported since Pulsar 2.3. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with ZSTD.\n\n            SNAPPY is supported since Pulsar 2.4. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with SNAPPY.\n        batching_enabled: bool, default=False\n            When automatic batching is enabled, multiple calls to `send` can result in a single batch to be sent to the\n",
                    "rendered": {
                      "text": "            ZSTD is supported since Pulsar 2.3. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with ZSTD.\n\n            SNAPPY is supported since Pulsar 2.4. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with SNAPPY.\n        batching_enabled: bool, default=False\n            When automatic batching is enabled, multiple calls to `send` can result in a single batch to be sent to the\n",
                      "markdown": "`            ZSTD is supported since Pulsar 2.3. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with ZSTD.\n\n            SNAPPY is supported since Pulsar 2.4. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with SNAPPY.\n        batching_enabled: bool, default=False\n            When automatic batching is enabled, multiple calls to `send` can result in a single batch to be sent to the\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 668,
                  "startColumn": 82,
                  "endLine": 668,
                  "endColumn": 86,
                  "snippet": {
                    "text": "            * CompressionType.ZSTD\n            * CompressionType.SNAPPY\n\n            ZSTD is supported since Pulsar 2.3. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with ZSTD.\n\n            SNAPPY is supported since Pulsar 2.4. Consumers will need to be at least at that release in order to\n",
                    "rendered": {
                      "text": "            * CompressionType.ZSTD\n            * CompressionType.SNAPPY\n\n            ZSTD is supported since Pulsar 2.3. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with ZSTD.\n\n            SNAPPY is supported since Pulsar 2.4. Consumers will need to be at least at that release in order to\n",
                      "markdown": "`            * CompressionType.ZSTD\n            * CompressionType.SNAPPY\n\n            ZSTD is supported since Pulsar 2.3. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with ZSTD.\n\n            SNAPPY is supported since Pulsar 2.4. Consumers will need to be at least at that release in order to\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 668,
                  "startColumn": 73,
                  "endLine": 668,
                  "endColumn": 77,
                  "snippet": {
                    "text": "            * CompressionType.ZSTD\n            * CompressionType.SNAPPY\n\n            ZSTD is supported since Pulsar 2.3. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with ZSTD.\n\n            SNAPPY is supported since Pulsar 2.4. Consumers will need to be at least at that release in order to\n",
                    "rendered": {
                      "text": "            * CompressionType.ZSTD\n            * CompressionType.SNAPPY\n\n            ZSTD is supported since Pulsar 2.3. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with ZSTD.\n\n            SNAPPY is supported since Pulsar 2.4. Consumers will need to be at least at that release in order to\n",
                      "markdown": "`            * CompressionType.ZSTD\n            * CompressionType.SNAPPY\n\n            ZSTD is supported since Pulsar 2.3. Consumers will need to be at least at that release in order to\n            be able to receive messages compressed with ZSTD.\n\n            SNAPPY is supported since Pulsar 2.4. Consumers will need to be at least at that release in order to\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 57,
                  "endLine": 9,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 46,
                  "endLine": 328,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            * ``/path/to/file``\n            * ``file:///path/to/file``\n            * ``file:/path/to/file``\n            * ``data:application/json;base64,<base64-encoded-value>``\n\n            The file content or the based64 encoded value is the encoded JSON string that contains\n            the following fields:\n",
                    "rendered": {
                      "text": "            * ``/path/to/file``\n            * ``file:///path/to/file``\n            * ``file:/path/to/file``\n            * ``data:application/json;base64,<base64-encoded-value>``\n\n            The file content or the based64 encoded value is the encoded JSON string that contains\n            the following fields:\n",
                      "markdown": "`            * ``/path/to/file``\n            * ``file:///path/to/file``\n            * ``file:/path/to/file``\n            * ``data:application/json;base64,<base64-encoded-value>``\n\n            The file content or the based64 encoded value is the encoded JSON string that contains\n            the following fields:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 38,
                  "endLine": 328,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            * ``/path/to/file``\n            * ``file:///path/to/file``\n            * ``file:/path/to/file``\n            * ``data:application/json;base64,<base64-encoded-value>``\n\n            The file content or the based64 encoded value is the encoded JSON string that contains\n            the following fields:\n",
                    "rendered": {
                      "text": "            * ``/path/to/file``\n            * ``file:///path/to/file``\n            * ``file:/path/to/file``\n            * ``data:application/json;base64,<base64-encoded-value>``\n\n            The file content or the based64 encoded value is the encoded JSON string that contains\n            the following fields:\n",
                      "markdown": "`            * ``/path/to/file``\n            * ``file:///path/to/file``\n            * ``file:/path/to/file``\n            * ``data:application/json;base64,<base64-encoded-value>``\n\n            The file content or the based64 encoded value is the encoded JSON string that contains\n            the following fields:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 1759,
                  "startColumn": 56,
                  "endLine": 1759,
                  "endColumn": 62,
                  "snippet": {
                    "text": "        ----------\n\n        messageid:\n            The message id for seek, OR an integer event time to seek to\n        \"\"\"\n        self._reader.seek(messageid)\n\n",
                    "rendered": {
                      "text": "        ----------\n\n        messageid:\n            The message id for seek, OR an integer event time to seek to\n        \"\"\"\n        self._reader.seek(messageid)\n\n",
                      "markdown": "`        ----------\n\n        messageid:\n            The message id for seek, OR an integer event time to seek to\n        \"\"\"\n        self._reader.seek(messageid)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 1619,
                  "startColumn": 39,
                  "endLine": 1619,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    and can specify a timeout for waiting for enough messages for this batch.\n\n    A batch receive action is completed as long as any one of the conditions (the batch has enough number\n    or size of messages, or the waiting timeout is passed) are met.\n    \"\"\"\n    def __init__(self, max_num_message, max_num_bytes, timeout_ms):\n        \"\"\"\n",
                    "rendered": {
                      "text": "    and can specify a timeout for waiting for enough messages for this batch.\n\n    A batch receive action is completed as long as any one of the conditions (the batch has enough number\n    or size of messages, or the waiting timeout is passed) are met.\n    \"\"\"\n    def __init__(self, max_num_message, max_num_bytes, timeout_ms):\n        \"\"\"\n",
                      "markdown": "`    and can specify a timeout for waiting for enough messages for this batch.\n\n    A batch receive action is completed as long as any one of the conditions (the batch has enough number\n    or size of messages, or the waiting timeout is passed) are met.\n    \"\"\"\n    def __init__(self, max_num_message, max_num_bytes, timeout_ms):\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 1616,
                  "startColumn": 21,
                  "endLine": 1616,
                  "endColumn": 30,
                  "snippet": {
                    "text": "class ConsumerBatchReceivePolicy:\n    \"\"\"\n    Batch receive policy can limit the number and bytes of messages in a single batch,\n    and can specify a timeout for waiting for enough messages for this batch.\n\n    A batch receive action is completed as long as any one of the conditions (the batch has enough number\n    or size of messages, or the waiting timeout is passed) are met.\n",
                    "rendered": {
                      "text": "class ConsumerBatchReceivePolicy:\n    \"\"\"\n    Batch receive policy can limit the number and bytes of messages in a single batch,\n    and can specify a timeout for waiting for enough messages for this batch.\n\n    A batch receive action is completed as long as any one of the conditions (the batch has enough number\n    or size of messages, or the waiting timeout is passed) are met.\n",
                      "markdown": "`class ConsumerBatchReceivePolicy:\n    \"\"\"\n    Batch receive policy can limit the number and bytes of messages in a single batch,\n    and can specify a timeout for waiting for enough messages for this batch.\n\n    A batch receive action is completed as long as any one of the conditions (the batch has enough number\n    or size of messages, or the waiting timeout is passed) are met.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 1590,
                  "startColumn": 56,
                  "endLine": 1590,
                  "endColumn": 62,
                  "snippet": {
                    "text": "        ----------\n\n        messageid:\n            The message id for seek, OR an integer event time to seek to\n        \"\"\"\n        self._consumer.seek(messageid)\n\n",
                    "rendered": {
                      "text": "        ----------\n\n        messageid:\n            The message id for seek, OR an integer event time to seek to\n        \"\"\"\n        self._consumer.seek(messageid)\n\n",
                      "markdown": "`        ----------\n\n        messageid:\n            The message id for seek, OR an integer event time to seek to\n        \"\"\"\n        self._consumer.seek(messageid)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 1563,
                  "startColumn": 65,
                  "endLine": 1564,
                  "snippet": {
                    "text": "    def resume_message_listener(self):\n        \"\"\"\n        Resume receiving the messages via the message listener.\n        Asynchronously receive all the messages enqueued from the time\n        `pause_message_listener()` was called.\n        \"\"\"\n        self._consumer.resume_message_listener()\n\n",
                    "rendered": {
                      "text": "    def resume_message_listener(self):\n        \"\"\"\n        Resume receiving the messages via the message listener.\n        Asynchronously receive all the messages enqueued from the time\n        `pause_message_listener()` was called.\n        \"\"\"\n        self._consumer.resume_message_listener()\n\n",
                      "markdown": "`    def resume_message_listener(self):\n        \"\"\"\n        Resume receiving the messages via the message listener.\n        Asynchronously receive all the messages enqueued from the time\n        `pause_message_listener()` was called.\n        \"\"\"\n        self._consumer.resume_message_listener()\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 882,
                  "startColumn": 20,
                  "endLine": 882,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            The delay after which to redeliver the messages that failed to be processed\n            (with the ``consumer.negative_acknowledge()``)\n        broker_consumer_stats_cache_time_ms: int, default=30000\n            Sets the time duration for which the broker-side consumer stats will be cached in the client.\n        is_read_compacted: bool, default=False\n            Selects whether to read the compacted version of the topic\n        properties: dict, optional\n",
                    "rendered": {
                      "text": "            The delay after which to redeliver the messages that failed to be processed\n            (with the ``consumer.negative_acknowledge()``)\n        broker_consumer_stats_cache_time_ms: int, default=30000\n            Sets the time duration for which the broker-side consumer stats will be cached in the client.\n        is_read_compacted: bool, default=False\n            Selects whether to read the compacted version of the topic\n        properties: dict, optional\n",
                      "markdown": "`            The delay after which to redeliver the messages that failed to be processed\n            (with the ``consumer.negative_acknowledge()``)\n        broker_consumer_stats_cache_time_ms: int, default=30000\n            Sets the time duration for which the broker-side consumer stats will be cached in the client.\n        is_read_compacted: bool, default=False\n            Selects whether to read the compacted version of the topic\n        properties: dict, optional\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 875,
                  "startColumn": 77,
                  "endLine": 875,
                  "endColumn": 86,
                  "snippet": {
                    "text": "        consumer_name: str, optional\n            Sets the consumer name.\n        unacked_messages_timeout_ms: int, optional\n            Sets the timeout in milliseconds for unacknowledged messages. The timeout needs to be greater than\n            10 seconds. An exception is thrown if the given value is less than 10 seconds. If a successful\n            acknowledgement is not sent within the timeout, all the unacknowledged messages are redelivered.\n        negative_ack_redelivery_delay_ms: int, default=60000\n",
                    "rendered": {
                      "text": "        consumer_name: str, optional\n            Sets the consumer name.\n        unacked_messages_timeout_ms: int, optional\n            Sets the timeout in milliseconds for unacknowledged messages. The timeout needs to be greater than\n            10 seconds. An exception is thrown if the given value is less than 10 seconds. If a successful\n            acknowledgement is not sent within the timeout, all the unacknowledged messages are redelivered.\n        negative_ack_redelivery_delay_ms: int, default=60000\n",
                      "markdown": "`        consumer_name: str, optional\n            Sets the consumer name.\n        unacked_messages_timeout_ms: int, optional\n            Sets the timeout in milliseconds for unacknowledged messages. The timeout needs to be greater than\n            10 seconds. An exception is thrown if the given value is less than 10 seconds. If a successful\n            acknowledgement is not sent within the timeout, all the unacknowledged messages are redelivered.\n        negative_ack_redelivery_delay_ms: int, default=60000\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 875,
                  "startColumn": 20,
                  "endLine": 875,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        consumer_name: str, optional\n            Sets the consumer name.\n        unacked_messages_timeout_ms: int, optional\n            Sets the timeout in milliseconds for unacknowledged messages. The timeout needs to be greater than\n            10 seconds. An exception is thrown if the given value is less than 10 seconds. If a successful\n            acknowledgement is not sent within the timeout, all the unacknowledged messages are redelivered.\n        negative_ack_redelivery_delay_ms: int, default=60000\n",
                    "rendered": {
                      "text": "        consumer_name: str, optional\n            Sets the consumer name.\n        unacked_messages_timeout_ms: int, optional\n            Sets the timeout in milliseconds for unacknowledged messages. The timeout needs to be greater than\n            10 seconds. An exception is thrown if the given value is less than 10 seconds. If a successful\n            acknowledgement is not sent within the timeout, all the unacknowledged messages are redelivered.\n        negative_ack_redelivery_delay_ms: int, default=60000\n",
                      "markdown": "`        consumer_name: str, optional\n            Sets the consumer name.\n        unacked_messages_timeout_ms: int, optional\n            Sets the timeout in milliseconds for unacknowledged messages. The timeout needs to be greater than\n            10 seconds. An exception is thrown if the given value is less than 10 seconds. If a successful\n            acknowledgement is not sent within the timeout, all the unacknowledged messages are redelivered.\n        negative_ack_redelivery_delay_ms: int, default=60000\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 866,
                  "startColumn": 74,
                  "endLine": 866,
                  "endColumn": 83,
                  "snippet": {
                    "text": "ue\n            size to zero decreases the throughput of the consumer by disabling pre-fetching of messages.\n\n            This approach improves the message distribution on shared subscription by pushing messages only to those\n            consumers that are ready to process them. Neither receive with timeout nor partitioned topics can be used\n            if the consumer queue size is zero. The `receive()` function call should not be interrupted when the\n            consumer queue size is zero. The default value is 1000 messages and should work well for most use cases.\n        max_total_receiver_queue_si",
                    "rendered": {
                      "text": "ue\n            size to zero decreases the throughput of the consumer by disabling pre-fetching of messages.\n\n            This approach improves the message distribution on shared subscription by pushing messages only to those\n            consumers that are ready to process them. Neither receive with timeout nor partitioned topics can be used\n            if the consumer queue size is zero. The `receive()` function call should not be interrupted when the\n            consumer queue size is zero. The default value is 1000 messages and should work well for most use cases.\n        max_total_receiver_queue_si",
                      "markdown": "`ue\n            size to zero decreases the throughput of the consumer by disabling pre-fetching of messages.\n\n            This approach improves the message distribution on shared subscription by pushing messages only to those\n            consumers that are ready to process them. Neither receive with timeout nor partitioned topics can be used\n            if the consumer queue size is zero. The `receive()` function call should not be interrupted when the\n            consumer queue size is zero. The default value is 1000 messages and should work well for most use cases.\n        max_total_receiver_queue_si`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 552,
                  "startColumn": 15,
                  "endLine": 552,
                  "endColumn": 24,
                  "snippet": {
                    "text": "            Set timeout in milliseconds on TCP connections.\n        listener_name: str, optional\n            Listener name for lookup. Clients can use listenerName to choose one of the listeners as\n            the service URL to create a connection to the broker as long as the network is accessible.\n            ``advertisedListeners`` must be enabled in broker side.\n        \"\"\"\n        _check_type(str, service_url, 'service_url')\n",
                    "rendered": {
                      "text": "            Set timeout in milliseconds on TCP connections.\n        listener_name: str, optional\n            Listener name for lookup. Clients can use listenerName to choose one of the listeners as\n            the service URL to create a connection to the broker as long as the network is accessible.\n            ``advertisedListeners`` must be enabled in broker side.\n        \"\"\"\n        _check_type(str, service_url, 'service_url')\n",
                      "markdown": "`            Set timeout in milliseconds on TCP connections.\n        listener_name: str, optional\n            Listener name for lookup. Clients can use listenerName to choose one of the listeners as\n            the service URL to create a connection to the broker as long as the network is accessible.\n            ``advertisedListeners`` must be enabled in broker side.\n        \"\"\"\n        _check_type(str, service_url, 'service_url')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 549,
                  "startColumn": 15,
                  "endLine": 549,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                del client\n\n        connection_timeout_ms: int, default=10000\n            Set timeout in milliseconds on TCP connections.\n        listener_name: str, optional\n            Listener name for lookup. Clients can use listenerName to choose one of the listeners as\n            the service URL to create a connection to the broker as long as the network is accessible.\n",
                    "rendered": {
                      "text": "                del client\n\n        connection_timeout_ms: int, default=10000\n            Set timeout in milliseconds on TCP connections.\n        listener_name: str, optional\n            Listener name for lookup. Clients can use listenerName to choose one of the listeners as\n            the service URL to create a connection to the broker as long as the network is accessible.\n",
                      "markdown": "`                del client\n\n        connection_timeout_ms: int, default=10000\n            Set timeout in milliseconds on TCP connections.\n        listener_name: str, optional\n            Listener name for lookup. Clients can use listenerName to choose one of the listeners as\n            the service URL to create a connection to the broker as long as the network is accessible.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 509,
                  "startColumn": 15,
                  "endLine": 509,
                  "endColumn": 24,
                  "snippet": {
                    "text": "            * `AuthenticationAthenz`\n            * `AuthenticationOauth2`\n        operation_timeout_seconds: int, default=30\n            Set timeout on client operations (subscribe, create producer, close, unsubscribe).\n        io_threads: int, default=1\n            Set the number of IO threads to be used by the Pulsar client.\n        message_listener_threads: int, default=1\n",
                    "rendered": {
                      "text": "            * `AuthenticationAthenz`\n            * `AuthenticationOauth2`\n        operation_timeout_seconds: int, default=30\n            Set timeout on client operations (subscribe, create producer, close, unsubscribe).\n        io_threads: int, default=1\n            Set the number of IO threads to be used by the Pulsar client.\n        message_listener_threads: int, default=1\n",
                      "markdown": "`            * `AuthenticationAthenz`\n            * `AuthenticationOauth2`\n        operation_timeout_seconds: int, default=30\n            Set timeout on client operations (subscribe, create producer, close, unsubscribe).\n        io_threads: int, default=1\n            Set the number of IO threads to be used by the Pulsar client.\n        message_listener_threads: int, default=1\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 500,
                  "startColumn": 22,
                  "endLine": 500,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        ----------\n\n        service_url: str\n            The Pulsar service url eg: pulsar://my-broker.com:6650/\n        authentication: Authentication, optional\n            Set the authentication provider to be used with the broker. Supported methods:\n\n",
                    "rendered": {
                      "text": "        ----------\n\n        service_url: str\n            The Pulsar service url eg: pulsar://my-broker.com:6650/\n        authentication: Authentication, optional\n            Set the authentication provider to be used with the broker. Supported methods:\n\n",
                      "markdown": "`        ----------\n\n        service_url: str\n            The Pulsar service url eg: pulsar://my-broker.com:6650/\n        authentication: Authentication, optional\n            Set the authentication provider to be used with the broker. Supported methods:\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__init__.py"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 8,
                  "endLine": 35,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n.. code-block:: shell\n\n    sudo pip install pulsar-client\n\n========================\nInstall from source code\n",
                    "rendered": {
                      "text": "\n.. code-block:: shell\n\n    sudo pip install pulsar-client\n\n========================\nInstall from source code\n",
                      "markdown": "`\n.. code-block:: shell\n\n    sudo pip install pulsar-client\n\n========================\nInstall from source code\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar_client-3.5.0.dist-info/NOTICE"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 40,
                  "endLine": 5,
                  "snippet": {
                    "text": "Apache Pulsar\nCopyright 2017-2022 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n",
                    "rendered": {
                      "text": "Apache Pulsar\nCopyright 2017-2022 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n",
                      "markdown": "`Apache Pulsar\nCopyright 2017-2022 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/schema/__init__.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 57,
                  "endLine": 9,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/functions/serde.py"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 57,
                  "endLine": 29,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/functions/serde.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 57,
                  "endLine": 9,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/exceptions.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 57,
                  "endLine": 9,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/asyncio.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 57,
                  "endLine": 9,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pulsar-client-3.5.0-r1.apk/py3-pulsar-client-3.5.0-r1/usr/lib/python3.12/site-packages/pulsar/__about__.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 57,
                  "endLine": 9,
                  "snippet": {
                    "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                    "rendered": {
                      "text": "# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n",
                      "markdown": "`# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}