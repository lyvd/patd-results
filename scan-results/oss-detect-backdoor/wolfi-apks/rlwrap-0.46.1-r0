{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 628,
                  "startColumn": 30,
                  "endLine": 628,
                  "endColumn": 35,
                  "snippet": {
                    "text": "                    write_message(tag,REJECT_PROMPT);\n                    # don't update <previous_tag> and don't reset <cumulative_input>\n                    next\n                if (os.environ.get('RLWRAP_IMPATIENT') and not re.search('\\n$', self.cumulative_output)):\n                    # cumulative output contains prompt: chop it off!\n                    # s/[^\\n]*$// takes way too long on big strings,\n                    # what is the optimal regex to do this?\n",
                    "rendered": {
                      "text": "                    write_message(tag,REJECT_PROMPT);\n                    # don't update <previous_tag> and don't reset <cumulative_input>\n                    next\n                if (os.environ.get('RLWRAP_IMPATIENT') and not re.search('\\n$', self.cumulative_output)):\n                    # cumulative output contains prompt: chop it off!\n                    # s/[^\\n]*$// takes way too long on big strings,\n                    # what is the optimal regex to do this?\n",
                      "markdown": "`                    write_message(tag,REJECT_PROMPT);\n                    # don't update <previous_tag> and don't reset <cumulative_input>\n                    next\n                if (os.environ.get('RLWRAP_IMPATIENT') and not re.search('\\n$', self.cumulative_output)):\n                    # cumulative output contains prompt: chop it off!\n                    # s/[^\\n]*$// takes way too long on big strings,\n                    # what is the optimal regex to do this?\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 594,
                  "startColumn": 21,
                  "endLine": 594,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n            write_message(TAG_OUTPUT_OUT_OF_BAND, self.help_text + '\\n')\n        while(True):\n            tag, message = read_message()\n",
                    "rendered": {
                      "text": "        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n            write_message(TAG_OUTPUT_OUT_OF_BAND, self.help_text + '\\n')\n        while(True):\n            tag, message = read_message()\n",
                      "markdown": "`        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n            write_message(TAG_OUTPUT_OUT_OF_BAND, self.help_text + '\\n')\n        while(True):\n            tag, message = read_message()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 38,
                  "endLine": 442,
                  "endColumn": 43,
                  "snippet": {
                    "text": "        self.saved_output = ''\n        self.cumulative_output = ''\n        self.minimal_rlwrap_version = rlwrap_version\n        self.command_line = os.environ.get('RLWRAP_COMMAND_LINE')\n        self.running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n        self.name = os.path.basename(sys.argv[0])\n\n",
                    "rendered": {
                      "text": "        self.saved_output = ''\n        self.cumulative_output = ''\n        self.minimal_rlwrap_version = rlwrap_version\n        self.command_line = os.environ.get('RLWRAP_COMMAND_LINE')\n        self.running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n        self.name = os.path.basename(sys.argv[0])\n\n",
                      "markdown": "`        self.saved_output = ''\n        self.cumulative_output = ''\n        self.minimal_rlwrap_version = rlwrap_version\n        self.command_line = os.environ.get('RLWRAP_COMMAND_LINE')\n        self.running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n        self.name = os.path.basename(sys.argv[0])\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 35,
                  "endLine": 77,
                  "endColumn": 40,
                  "snippet": {
                    "text": "we_are_running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n\n# rlwrap version\nrlwrap_version_string  = os.environ.get('RLWRAP_VERSION', \"0.41\") # e.g. 0.45.2b\nmajor, rest            = rlwrap_version_string.split('.', 1)      # 0, 45.2b\nrest                   = re.sub(r'[^\\d]','', rest)                # 452\nrlwrap_version         = float(major + '.' + rest)                # 0.452\n",
                    "rendered": {
                      "text": "we_are_running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n\n# rlwrap version\nrlwrap_version_string  = os.environ.get('RLWRAP_VERSION', \"0.41\") # e.g. 0.45.2b\nmajor, rest            = rlwrap_version_string.split('.', 1)      # 0, 45.2b\nrest                   = re.sub(r'[^\\d]','', rest)                # 452\nrlwrap_version         = float(major + '.' + rest)                # 0.452\n",
                      "markdown": "`we_are_running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n\n# rlwrap version\nrlwrap_version_string  = os.environ.get('RLWRAP_VERSION', \"0.41\") # e.g. 0.45.2b\nmajor, rest            = rlwrap_version_string.split('.', 1)      # 0, 45.2b\nrest                   = re.sub(r'[^\\d]','', rest)                # 452\nrlwrap_version         = float(major + '.' + rest)                # 0.452\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 628,
                  "startColumn": 23,
                  "endLine": 628,
                  "endColumn": 34,
                  "snippet": {
                    "text": "                    write_message(tag,REJECT_PROMPT);\n                    # don't update <previous_tag> and don't reset <cumulative_input>\n                    next\n                if (os.environ.get('RLWRAP_IMPATIENT') and not re.search('\\n$', self.cumulative_output)):\n                    # cumulative output contains prompt: chop it off!\n                    # s/[^\\n]*$// takes way too long on big strings,\n                    # what is the optimal regex to do this?\n",
                    "rendered": {
                      "text": "                    write_message(tag,REJECT_PROMPT);\n                    # don't update <previous_tag> and don't reset <cumulative_input>\n                    next\n                if (os.environ.get('RLWRAP_IMPATIENT') and not re.search('\\n$', self.cumulative_output)):\n                    # cumulative output contains prompt: chop it off!\n                    # s/[^\\n]*$// takes way too long on big strings,\n                    # what is the optimal regex to do this?\n",
                      "markdown": "`                    write_message(tag,REJECT_PROMPT);\n                    # don't update <previous_tag> and don't reset <cumulative_input>\n                    next\n                if (os.environ.get('RLWRAP_IMPATIENT') and not re.search('\\n$', self.cumulative_output)):\n                    # cumulative output contains prompt: chop it off!\n                    # s/[^\\n]*$// takes way too long on big strings,\n                    # what is the optimal regex to do this?\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 594,
                  "startColumn": 14,
                  "endLine": 594,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n            write_message(TAG_OUTPUT_OUT_OF_BAND, self.help_text + '\\n')\n        while(True):\n            tag, message = read_message()\n",
                    "rendered": {
                      "text": "        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n            write_message(TAG_OUTPUT_OUT_OF_BAND, self.help_text + '\\n')\n        while(True):\n            tag, message = read_message()\n",
                      "markdown": "`        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n            write_message(TAG_OUTPUT_OUT_OF_BAND, self.help_text + '\\n')\n        while(True):\n            tag, message = read_message()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 31,
                  "endLine": 442,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        self.saved_output = ''\n        self.cumulative_output = ''\n        self.minimal_rlwrap_version = rlwrap_version\n        self.command_line = os.environ.get('RLWRAP_COMMAND_LINE')\n        self.running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n        self.name = os.path.basename(sys.argv[0])\n\n",
                    "rendered": {
                      "text": "        self.saved_output = ''\n        self.cumulative_output = ''\n        self.minimal_rlwrap_version = rlwrap_version\n        self.command_line = os.environ.get('RLWRAP_COMMAND_LINE')\n        self.running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n        self.name = os.path.basename(sys.argv[0])\n\n",
                      "markdown": "`        self.saved_output = ''\n        self.cumulative_output = ''\n        self.minimal_rlwrap_version = rlwrap_version\n        self.command_line = os.environ.get('RLWRAP_COMMAND_LINE')\n        self.running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n        self.name = os.path.basename(sys.argv[0])\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 28,
                  "endLine": 77,
                  "endColumn": 39,
                  "snippet": {
                    "text": "we_are_running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n\n# rlwrap version\nrlwrap_version_string  = os.environ.get('RLWRAP_VERSION', \"0.41\") # e.g. 0.45.2b\nmajor, rest            = rlwrap_version_string.split('.', 1)      # 0, 45.2b\nrest                   = re.sub(r'[^\\d]','', rest)                # 452\nrlwrap_version         = float(major + '.' + rest)                # 0.452\n",
                    "rendered": {
                      "text": "we_are_running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n\n# rlwrap version\nrlwrap_version_string  = os.environ.get('RLWRAP_VERSION', \"0.41\") # e.g. 0.45.2b\nmajor, rest            = rlwrap_version_string.split('.', 1)      # 0, 45.2b\nrest                   = re.sub(r'[^\\d]','', rest)                # 452\nrlwrap_version         = float(major + '.' + rest)                # 0.452\n",
                      "markdown": "`we_are_running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n\n# rlwrap version\nrlwrap_version_string  = os.environ.get('RLWRAP_VERSION', \"0.41\") # e.g. 0.45.2b\nmajor, rest            = rlwrap_version_string.split('.', 1)      # 0, 45.2b\nrest                   = re.sub(r'[^\\d]','', rest)                # 452\nrlwrap_version         = float(major + '.' + rest)                # 0.452\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 626,
                  "startColumn": 27,
                  "endLine": 626,
                  "endColumn": 35,
                  "snippet": {
                    "text": "                if (message == REJECT_PROMPT or\n                    (self.prompts_are_never_empty is not None and message == '')):\n                    write_message(tag,REJECT_PROMPT);\n                    # don't update <previous_tag> and don't reset <cumulative_input>\n                    next\n                if (os.environ.get('RLWRAP_IMPATIENT') and not re.search('\\n$', self.cumulative_output)):\n                    # cumulative output contains prompt: chop it off!\n",
                    "rendered": {
                      "text": "                if (message == REJECT_PROMPT or\n                    (self.prompts_are_never_empty is not None and message == '')):\n                    write_message(tag,REJECT_PROMPT);\n                    # don't update <previous_tag> and don't reset <cumulative_input>\n                    next\n                if (os.environ.get('RLWRAP_IMPATIENT') and not re.search('\\n$', self.cumulative_output)):\n                    # cumulative output contains prompt: chop it off!\n",
                      "markdown": "`                if (message == REJECT_PROMPT or\n                    (self.prompts_are_never_empty is not None and message == '')):\n                    write_message(tag,REJECT_PROMPT);\n                    # don't update <previous_tag> and don't reset <cumulative_input>\n                    next\n                if (os.environ.get('RLWRAP_IMPATIENT') and not re.search('\\n$', self.cumulative_output)):\n                    # cumulative output contains prompt: chop it off!\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 507,
                  "startColumn": 36,
                  "endLine": 507,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        \"\"\"\n        Some command returns messages asynchronously\n        and tends to delay message when invoking multiple `cloak_and_dagger`.\n        You may want to drop message at such time.\n\n        rlwrap_filter.cloak_and_dagger(command1, prompt, timeout)\n        rlwrap_filter.cloak_and_dagger(command2, prompt, timeout)\n",
                    "rendered": {
                      "text": "        \"\"\"\n        Some command returns messages asynchronously\n        and tends to delay message when invoking multiple `cloak_and_dagger`.\n        You may want to drop message at such time.\n\n        rlwrap_filter.cloak_and_dagger(command1, prompt, timeout)\n        rlwrap_filter.cloak_and_dagger(command2, prompt, timeout)\n",
                      "markdown": "`        \"\"\"\n        Some command returns messages asynchronously\n        and tends to delay message when invoking multiple `cloak_and_dagger`.\n        You may want to drop message at such time.\n\n        rlwrap_filter.cloak_and_dagger(command1, prompt, timeout)\n        rlwrap_filter.cloak_and_dagger(command2, prompt, timeout)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 3,
                  "endLine": 299,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    A decorator (-factory) to intercept an exception, send the message\n    to rlwrap, print a message and exit (or re-raise the exception, if\n    message = None) N.B: decorators, hence also <message> are evaluated\n    at compile time. @intercept_error_with_message (f\"This script\n    crashed after {sec} seconds\") doesn't make sense.\n    \"\"\"\n    def intercept_error_closure(func):\n",
                    "rendered": {
                      "text": "    A decorator (-factory) to intercept an exception, send the message\n    to rlwrap, print a message and exit (or re-raise the exception, if\n    message = None) N.B: decorators, hence also <message> are evaluated\n    at compile time. @intercept_error_with_message (f\"This script\n    crashed after {sec} seconds\") doesn't make sense.\n    \"\"\"\n    def intercept_error_closure(func):\n",
                      "markdown": "`    A decorator (-factory) to intercept an exception, send the message\n    to rlwrap, print a message and exit (or re-raise the exception, if\n    message = None) N.B: decorators, hence also <message> are evaluated\n    at compile time. @intercept_error_with_message (f\"This script\n    crashed after {sec} seconds\") doesn't make sense.\n    \"\"\"\n    def intercept_error_closure(func):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 21,
                  "endLine": 187,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    tag = int.from_bytes(read_patiently(FILTER_IN,1), sys.byteorder)\n    length = int.from_bytes(read_patiently(FILTER_IN,4), sys.byteorder)\n    message = read_patiently(FILTER_IN, length).decode(sys.stdin.encoding, errors = \"ignore\")\n    # \\Z matches only at the end of the string in python\n    message = re.sub(r'\\n\\Z', '', str(message or \"\"))\n    return tag, message\n\n",
                    "rendered": {
                      "text": "    tag = int.from_bytes(read_patiently(FILTER_IN,1), sys.byteorder)\n    length = int.from_bytes(read_patiently(FILTER_IN,4), sys.byteorder)\n    message = read_patiently(FILTER_IN, length).decode(sys.stdin.encoding, errors = \"ignore\")\n    # \\Z matches only at the end of the string in python\n    message = re.sub(r'\\n\\Z', '', str(message or \"\"))\n    return tag, message\n\n",
                      "markdown": "`    tag = int.from_bytes(read_patiently(FILTER_IN,1), sys.byteorder)\n    length = int.from_bytes(read_patiently(FILTER_IN,4), sys.byteorder)\n    message = read_patiently(FILTER_IN, length).decode(sys.stdin.encoding, errors = \"ignore\")\n    # \\Z matches only at the end of the string in python\n    message = re.sub(r'\\n\\Z', '', str(message or \"\"))\n    return tag, message\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 95,
                  "endLine": 121,
                  "endColumn": 99,
                  "snippet": {
                    "text": "def read_until(fh, stoptext, timeout,\n               prompt_search_from=0, prompt_search_to=None):\n    \"\"\"\n    read chunks from pty pointed to by fh until either inactive for timeout or stoptext is seen at end-of-chunk\n    \"\"\"\n    res = ''\n    while (True):\n",
                    "rendered": {
                      "text": "def read_until(fh, stoptext, timeout,\n               prompt_search_from=0, prompt_search_to=None):\n    \"\"\"\n    read chunks from pty pointed to by fh until either inactive for timeout or stoptext is seen at end-of-chunk\n    \"\"\"\n    res = ''\n    while (True):\n",
                      "markdown": "`def read_until(fh, stoptext, timeout,\n               prompt_search_from=0, prompt_search_to=None):\n    \"\"\"\n    read chunks from pty pointed to by fh until either inactive for timeout or stoptext is seen at end-of-chunk\n    \"\"\"\n    res = ''\n    while (True):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 642,
                  "startColumn": 58,
                  "endLine": 643,
                  "snippet": {
                    "text": "            elif (tag == TAG_WHAT_ARE_YOUR_INTERESTS):\n                response = self.add_interests(message)\n            else:\n                # No error message, compatible with future rlwrap\n                # versions that may define new tag types\n                response = message\n\n            if (not (out_of_band(tag) and (tag == TAG_PROMPT and response == REJECT_PROMPT))):\n",
                    "rendered": {
                      "text": "            elif (tag == TAG_WHAT_ARE_YOUR_INTERESTS):\n                response = self.add_interests(message)\n            else:\n                # No error message, compatible with future rlwrap\n                # versions that may define new tag types\n                response = message\n\n            if (not (out_of_band(tag) and (tag == TAG_PROMPT and response == REJECT_PROMPT))):\n",
                      "markdown": "`            elif (tag == TAG_WHAT_ARE_YOUR_INTERESTS):\n                response = self.add_interests(message)\n            else:\n                # No error message, compatible with future rlwrap\n                # versions that may define new tag types\n                response = message\n\n            if (not (out_of_band(tag) and (tag == TAG_PROMPT and response == REJECT_PROMPT))):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 592,
                  "startColumn": 74,
                  "endLine": 592,
                  "endColumn": 82,
                  "snippet": {
                    "text": "        \"\"\"\n\n        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n            write_message(TAG_OUTPUT_OUT_OF_BAND, self.help_text + '\\n')\n",
                    "rendered": {
                      "text": "        \"\"\"\n\n        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n            write_message(TAG_OUTPUT_OUT_OF_BAND, self.help_text + '\\n')\n",
                      "markdown": "`        \"\"\"\n\n        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n            write_message(TAG_OUTPUT_OUT_OF_BAND, self.help_text + '\\n')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 592,
                  "startColumn": 25,
                  "endLine": 592,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        \"\"\"\n\n        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n            write_message(TAG_OUTPUT_OUT_OF_BAND, self.help_text + '\\n')\n",
                    "rendered": {
                      "text": "        \"\"\"\n\n        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n            write_message(TAG_OUTPUT_OUT_OF_BAND, self.help_text + '\\n')\n",
                      "markdown": "`        \"\"\"\n\n        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n            write_message(TAG_OUTPUT_OUT_OF_BAND, self.help_text + '\\n')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 591,
                  "startColumn": 85,
                  "endLine": 591,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        event loop\n        \"\"\"\n\n        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n",
                    "rendered": {
                      "text": "        event loop\n        \"\"\"\n\n        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n",
                      "markdown": "`        event loop\n        \"\"\"\n\n        # $RLWRAP_COMMAND_PID can be undefined (e.g. when run interactively, or under rlwrap -z listing\n        # or == \"0\" (when rlwrap is called without a command name, like in rlwrap -z filter.py)\n        # In both cases: print help text\n        if os.environ.get('RLWRAP_COMMAND_PID') in [None, '0']:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 32,
                  "endLine": 390,
                  "endColumn": 40,
                  "snippet": {
                    "text": "            self.warn(\"{0} should not be '{1}'\\n\".format(name, type(value)))\n\n        if name == 'minimal_rlwrap_version' and (value > rlwrap_version):\n            self.error(\"requires rlwrap version {0} or newer.\\n\".format(str(value)))\n        self.__dict__[name] = value\n\n\n",
                    "rendered": {
                      "text": "            self.warn(\"{0} should not be '{1}'\\n\".format(name, type(value)))\n\n        if name == 'minimal_rlwrap_version' and (value > rlwrap_version):\n            self.error(\"requires rlwrap version {0} or newer.\\n\".format(str(value)))\n        self.__dict__[name] = value\n\n\n",
                      "markdown": "`            self.warn(\"{0} should not be '{1}'\\n\".format(name, type(value)))\n\n        if name == 'minimal_rlwrap_version' and (value > rlwrap_version):\n            self.error(\"requires rlwrap version {0} or newer.\\n\".format(str(value)))\n        self.__dict__[name] = value\n\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 13,
                  "endLine": 378,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\nclass RlwrapFilter:\n    \"\"\"\n    class for rlwrap filters\n    \"\"\"\n\n    def __setattr__(self, name, value):\n",
                    "rendered": {
                      "text": "\nclass RlwrapFilter:\n    \"\"\"\n    class for rlwrap filters\n    \"\"\"\n\n    def __setattr__(self, name, value):\n",
                      "markdown": "`\nclass RlwrapFilter:\n    \"\"\"\n    class for rlwrap filters\n    \"\"\"\n\n    def __setattr__(self, name, value):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 26,
                  "endLine": 371,
                  "snippet": {
                    "text": "\nclass RlwrapFilterError(Exception):\n    \"\"\"\n    A custom exception for rlwrap\n    \"\"\"\n    def __init__(self, *args):\n        super().__init__(args)\n\n",
                    "rendered": {
                      "text": "\nclass RlwrapFilterError(Exception):\n    \"\"\"\n    A custom exception for rlwrap\n    \"\"\"\n    def __init__(self, *args):\n        super().__init__(args)\n\n",
                      "markdown": "`\nclass RlwrapFilterError(Exception):\n    \"\"\"\n    A custom exception for rlwrap\n    \"\"\"\n    def __init__(self, *args):\n        super().__init__(args)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 58,
                  "endLine": 300,
                  "snippet": {
                    "text": "    A decorator (-factory) to intercept an exception, send the message\n    to rlwrap, print a message and exit (or re-raise the exception, if\n    message = None) N.B: decorators, hence also <message> are evaluated\n    at compile time. @intercept_error_with_message (f\"This script\n    crashed after {sec} seconds\") doesn't make sense.\n    \"\"\"\n    def intercept_error_closure(func):\n        def wrapper(*args, **kwargs):\n",
                    "rendered": {
                      "text": "    A decorator (-factory) to intercept an exception, send the message\n    to rlwrap, print a message and exit (or re-raise the exception, if\n    message = None) N.B: decorators, hence also <message> are evaluated\n    at compile time. @intercept_error_with_message (f\"This script\n    crashed after {sec} seconds\") doesn't make sense.\n    \"\"\"\n    def intercept_error_closure(func):\n        def wrapper(*args, **kwargs):\n",
                      "markdown": "`    A decorator (-factory) to intercept an exception, send the message\n    to rlwrap, print a message and exit (or re-raise the exception, if\n    message = None) N.B: decorators, hence also <message> are evaluated\n    at compile time. @intercept_error_with_message (f\"This script\n    crashed after {sec} seconds\") doesn't make sense.\n    \"\"\"\n    def intercept_error_closure(func):\n        def wrapper(*args, **kwargs):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 58,
                  "endLine": 274,
                  "endColumn": 66,
                  "snippet": {
                    "text": "    if e:\n       raise e\n    else:\n       time.sleep(2) # timeout doesn't matter much because rlwrap will kill us anyway\n       exit()\n\ndef intercept_error(func):\n",
                    "rendered": {
                      "text": "    if e:\n       raise e\n    else:\n       time.sleep(2) # timeout doesn't matter much because rlwrap will kill us anyway\n       exit()\n\ndef intercept_error(func):\n",
                      "markdown": "`    if e:\n       raise e\n    else:\n       time.sleep(2) # timeout doesn't matter much because rlwrap will kill us anyway\n       exit()\n\ndef intercept_error(func):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 22,
                  "endLine": 274,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    if e:\n       raise e\n    else:\n       time.sleep(2) # timeout doesn't matter much because rlwrap will kill us anyway\n       exit()\n\ndef intercept_error(func):\n",
                    "rendered": {
                      "text": "    if e:\n       raise e\n    else:\n       time.sleep(2) # timeout doesn't matter much because rlwrap will kill us anyway\n       exit()\n\ndef intercept_error(func):\n",
                      "markdown": "`    if e:\n       raise e\n    else:\n       time.sleep(2) # timeout doesn't matter much because rlwrap will kill us anyway\n       exit()\n\ndef intercept_error(func):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 43,
                  "endLine": 174,
                  "endColumn": 51,
                  "snippet": {
                    "text": "            if (nwritten <= 0):\n                send_error(\"error writing: {0}\".format(str(buffer)))\n            already_written = already_written + nwritten\n        except BrokenPipeError: # quit when rlwrap dies\n            sys.exit(1)\n\ndef read_message():\n",
                    "rendered": {
                      "text": "            if (nwritten <= 0):\n                send_error(\"error writing: {0}\".format(str(buffer)))\n            already_written = already_written + nwritten\n        except BrokenPipeError: # quit when rlwrap dies\n            sys.exit(1)\n\ndef read_message():\n",
                      "markdown": "`            if (nwritten <= 0):\n                send_error(\"error writing: {0}\".format(str(buffer)))\n            already_written = already_written + nwritten\n        except BrokenPipeError: # quit when rlwrap dies\n            sys.exit(1)\n\ndef read_message():\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 45,
                  "endLine": 139,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\ndef read_chunk(fh, timeout):\n    \"\"\"\n    read chunk from pty pointed to by fh with timeout if timed out, returns 0-length string\n    \"\"\"\n    if (len(select.select([fh], [], [], timeout)[0]) > 0):\n        chunk = os.read(fh, 2**16); # read up-to 2^16=65536 bytes\n",
                    "rendered": {
                      "text": "\ndef read_chunk(fh, timeout):\n    \"\"\"\n    read chunk from pty pointed to by fh with timeout if timed out, returns 0-length string\n    \"\"\"\n    if (len(select.select([fh], [], [], timeout)[0]) > 0):\n        chunk = os.read(fh, 2**16); # read up-to 2^16=65536 bytes\n",
                      "markdown": "`\ndef read_chunk(fh, timeout):\n    \"\"\"\n    read chunk from pty pointed to by fh with timeout if timed out, returns 0-length string\n    \"\"\"\n    if (len(select.select([fh], [], [], timeout)[0]) > 0):\n        chunk = os.read(fh, 2**16); # read up-to 2^16=65536 bytes\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 47,
                  "endLine": 131,
                  "endColumn": 53,
                  "snippet": {
                    "text": "            #send_warn(\"read_until: timeout\")\n            return res\n        res = res + chunk\n        # multi-line mode so that \"^\" matches a head of each line\n        slice = res[prompt_search_from:prompt_search_to]\n        if re.search(stoptext, slice, re.MULTILINE):\n            return res\n",
                    "rendered": {
                      "text": "            #send_warn(\"read_until: timeout\")\n            return res\n        res = res + chunk\n        # multi-line mode so that \"^\" matches a head of each line\n        slice = res[prompt_search_from:prompt_search_to]\n        if re.search(stoptext, slice, re.MULTILINE):\n            return res\n",
                      "markdown": "`            #send_warn(\"read_until: timeout\")\n            return res\n        res = res + chunk\n        # multi-line mode so that \"^\" matches a head of each line\n        slice = res[prompt_search_from:prompt_search_to]\n        if re.search(stoptext, slice, re.MULTILINE):\n            return res\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 26,
                  "endLine": 128,
                  "snippet": {
                    "text": "    while (True):\n        chunk = read_chunk(fh, timeout);\n        if(not chunk):\n            # got \"\" back: timeout\n            #send_warn(\"read_until: timeout\")\n            return res\n        res = res + chunk\n        # multi-line mode so that \"^\" matches a head of each line\n",
                    "rendered": {
                      "text": "    while (True):\n        chunk = read_chunk(fh, timeout);\n        if(not chunk):\n            # got \"\" back: timeout\n            #send_warn(\"read_until: timeout\")\n            return res\n        res = res + chunk\n        # multi-line mode so that \"^\" matches a head of each line\n",
                      "markdown": "`    while (True):\n        chunk = read_chunk(fh, timeout);\n        if(not chunk):\n            # got \"\" back: timeout\n            #send_warn(\"read_until: timeout\")\n            return res\n        res = res + chunk\n        # multi-line mode so that \"^\" matches a head of each line\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 67,
                  "endLine": 121,
                  "endColumn": 76,
                  "snippet": {
                    "text": "def read_until(fh, stoptext, timeout,\n               prompt_search_from=0, prompt_search_to=None):\n    \"\"\"\n    read chunks from pty pointed to by fh until either inactive for timeout or stoptext is seen at end-of-chunk\n    \"\"\"\n    res = ''\n    while (True):\n",
                    "rendered": {
                      "text": "def read_until(fh, stoptext, timeout,\n               prompt_search_from=0, prompt_search_to=None):\n    \"\"\"\n    read chunks from pty pointed to by fh until either inactive for timeout or stoptext is seen at end-of-chunk\n    \"\"\"\n    res = ''\n    while (True):\n",
                      "markdown": "`def read_until(fh, stoptext, timeout,\n               prompt_search_from=0, prompt_search_to=None):\n    \"\"\"\n    read chunks from pty pointed to by fh until either inactive for timeout or stoptext is seen at end-of-chunk\n    \"\"\"\n    res = ''\n    while (True):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 31,
                  "endLine": 83,
                  "endColumn": 39,
                  "snippet": {
                    "text": "rlwrap_version         = float(major + '.' + rest)                # 0.452\n\n\n# open communication lines with rlwrap (or with the terminal when not running under rlwrap)\nif (we_are_running_under_rlwrap):\n    CMD_IN = int(os.environ['RLWRAP_MASTER_PTY_FD'])\n    CMD_OUT = int(os.environ['RLWRAP_MASTER_PTY_FD'])\n",
                    "rendered": {
                      "text": "rlwrap_version         = float(major + '.' + rest)                # 0.452\n\n\n# open communication lines with rlwrap (or with the terminal when not running under rlwrap)\nif (we_are_running_under_rlwrap):\n    CMD_IN = int(os.environ['RLWRAP_MASTER_PTY_FD'])\n    CMD_OUT = int(os.environ['RLWRAP_MASTER_PTY_FD'])\n",
                      "markdown": "`rlwrap_version         = float(major + '.' + rest)                # 0.452\n\n\n# open communication lines with rlwrap (or with the terminal when not running under rlwrap)\nif (we_are_running_under_rlwrap):\n    CMD_IN = int(os.environ['RLWRAP_MASTER_PTY_FD'])\n    CMD_OUT = int(os.environ['RLWRAP_MASTER_PTY_FD'])\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 1,
                  "endLine": 76,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# we want to behave differently when running outside rlwrap\nwe_are_running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n\n# rlwrap version\nrlwrap_version_string  = os.environ.get('RLWRAP_VERSION', \"0.41\") # e.g. 0.45.2b\nmajor, rest            = rlwrap_version_string.split('.', 1)      # 0, 45.2b\nrest                   = re.sub(r'[^\\d]','', rest)                # 452\n",
                    "rendered": {
                      "text": "# we want to behave differently when running outside rlwrap\nwe_are_running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n\n# rlwrap version\nrlwrap_version_string  = os.environ.get('RLWRAP_VERSION', \"0.41\") # e.g. 0.45.2b\nmajor, rest            = rlwrap_version_string.split('.', 1)      # 0, 45.2b\nrest                   = re.sub(r'[^\\d]','', rest)                # 452\n",
                      "markdown": "`# we want to behave differently when running outside rlwrap\nwe_are_running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n\n# rlwrap version\nrlwrap_version_string  = os.environ.get('RLWRAP_VERSION', \"0.41\") # e.g. 0.45.2b\nmajor, rest            = rlwrap_version_string.split('.', 1)      # 0, 45.2b\nrest                   = re.sub(r'[^\\d]','', rest)                # 452\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 52,
                  "endLine": 74,
                  "snippet": {
                    "text": "REJECT_PROMPT = '_THIS_CANNOT_BE_A_PROMPT_'\n\n\n# we want to behave differently when running outside rlwrap\nwe_are_running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n\n# rlwrap version\nrlwrap_version_string  = os.environ.get('RLWRAP_VERSION', \"0.41\") # e.g. 0.45.2b\n",
                    "rendered": {
                      "text": "REJECT_PROMPT = '_THIS_CANNOT_BE_A_PROMPT_'\n\n\n# we want to behave differently when running outside rlwrap\nwe_are_running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n\n# rlwrap version\nrlwrap_version_string  = os.environ.get('RLWRAP_VERSION', \"0.41\") # e.g. 0.45.2b\n",
                      "markdown": "`REJECT_PROMPT = '_THIS_CANNOT_BE_A_PROMPT_'\n\n\n# we want to behave differently when running outside rlwrap\nwe_are_running_under_rlwrap = 'RLWRAP_COMMAND_PID' in os.environ\n\n# rlwrap version\nrlwrap_version_string  = os.environ.get('RLWRAP_VERSION', \"0.41\") # e.g. 0.45.2b\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 6,
                  "endLine": 44,
                  "snippet": {
                    "text": "import os\nimport io\nimport types\nimport time\nimport struct\nimport select\nimport re\nimport traceback\n",
                    "rendered": {
                      "text": "import os\nimport io\nimport types\nimport time\nimport struct\nimport select\nimport re\nimport traceback\n",
                      "markdown": "`import os\nimport io\nimport types\nimport time\nimport struct\nimport select\nimport re\nimport traceback\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 45,
                  "endLine": 33,
                  "snippet": {
                    "text": "re-writing output and input, calling a pager or computing completion\nword lists from the current input.\n\nrlwrapfilter.py makes it very simple to write rlwrap\nfilters in Python 3. A filter only needs to instantiate a RlwrapFilter\nobject, change a few of its default handlers and then call its 'run'\nmethod.\n\"\"\"\n",
                    "rendered": {
                      "text": "re-writing output and input, calling a pager or computing completion\nword lists from the current input.\n\nrlwrapfilter.py makes it very simple to write rlwrap\nfilters in Python 3. A filter only needs to instantiate a RlwrapFilter\nobject, change a few of its default handlers and then call its 'run'\nmethod.\n\"\"\"\n",
                      "markdown": "`re-writing output and input, calling a pager or computing completion\nword lists from the current input.\n\nrlwrapfilter.py makes it very simple to write rlwrap\nfilters in Python 3. A filter only needs to instantiate a RlwrapFilter\nobject, change a few of its default handlers and then call its 'run'\nmethod.\n\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 45,
                  "endLine": 27,
                  "endColumn": 53,
                  "snippet": {
                    "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                    "rendered": {
                      "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                      "markdown": "`to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 19,
                  "endLine": 27,
                  "endColumn": 27,
                  "snippet": {
                    "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                    "rendered": {
                      "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                      "markdown": "`to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/rlwrapfilter.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 16,
                  "endLine": 19,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\nThis is an [RlwrapFilter](https://github.com/hanslub42/rlwrap/wiki/RlwrapFilter.pm-manpage)\nclone written in Python 3. The focus is on providing the same API's\nand usage of the Perl version of [RlwrapFilter](https://github.com/hanslub42/rlwrap/wiki/RlwrapFilter.pm-manpage)\nas possible.\n\n[rlwrap](https://github.com/hanslub42/rlwrap) is a tiny\n",
                    "rendered": {
                      "text": "\nThis is an [RlwrapFilter](https://github.com/hanslub42/rlwrap/wiki/RlwrapFilter.pm-manpage)\nclone written in Python 3. The focus is on providing the same API's\nand usage of the Perl version of [RlwrapFilter](https://github.com/hanslub42/rlwrap/wiki/RlwrapFilter.pm-manpage)\nas possible.\n\n[rlwrap](https://github.com/hanslub42/rlwrap) is a tiny\n",
                      "markdown": "`\nThis is an [RlwrapFilter](https://github.com/hanslub42/rlwrap/wiki/RlwrapFilter.pm-manpage)\nclone written in Python 3. The focus is on providing the same API's\nand usage of the Perl version of [RlwrapFilter](https://github.com/hanslub42/rlwrap/wiki/RlwrapFilter.pm-manpage)\nas possible.\n\n[rlwrap](https://github.com/hanslub42/rlwrap) is a tiny\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 615,
                  "startColumn": 29,
                  "endLine": 615,
                  "endColumn": 37,
                  "snippet": {
                    "text": "It is important to note that the filter, and hence all its handlers,\nare bypassed when I<command> is in direct mode, i.e. when it asks for\nsingle keystrokes (and also, for security reasons, when it doesn't\necho, e.g. when asking for a password). If you don't want this to happen, use\nB<rlwrap -a> to force B<rlwrap> to remain in readline mode and to\napply the filter to I<all> of I<command>'s in- and output. This will\nmake editors and pagers (which respond to single keystrokes) unusable,\n",
                    "rendered": {
                      "text": "It is important to note that the filter, and hence all its handlers,\nare bypassed when I<command> is in direct mode, i.e. when it asks for\nsingle keystrokes (and also, for security reasons, when it doesn't\necho, e.g. when asking for a password). If you don't want this to happen, use\nB<rlwrap -a> to force B<rlwrap> to remain in readline mode and to\napply the filter to I<all> of I<command>'s in- and output. This will\nmake editors and pagers (which respond to single keystrokes) unusable,\n",
                      "markdown": "`It is important to note that the filter, and hence all its handlers,\nare bypassed when I<command> is in direct mode, i.e. when it asks for\nsingle keystrokes (and also, for security reasons, when it doesn't\necho, e.g. when asking for a password). If you don't want this to happen, use\nB<rlwrap -a> to force B<rlwrap> to remain in readline mode and to\napply the filter to I<all> of I<command>'s in- and output. This will\nmake editors and pagers (which respond to single keystrokes) unusable,\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 540,
                  "startColumn": 88,
                  "endLine": 540,
                  "endColumn": 96,
                  "snippet": {
                    "text": "\n  $filter -> output_handler(sub {s/apple/orange/; $_}); # re-write output\n  $filter -> prompt_handler(\\&pimp_the_prompt); # change prompt\n  $filter -> history_handler(sub {s/with password \\w+/with password ****/; $_}); # keep passwords out of history\n\n  $filter -> run;\n\n",
                    "rendered": {
                      "text": "\n  $filter -> output_handler(sub {s/apple/orange/; $_}); # re-write output\n  $filter -> prompt_handler(\\&pimp_the_prompt); # change prompt\n  $filter -> history_handler(sub {s/with password \\w+/with password ****/; $_}); # keep passwords out of history\n\n  $filter -> run;\n\n",
                      "markdown": "`\n  $filter -> output_handler(sub {s/apple/orange/; $_}); # re-write output\n  $filter -> prompt_handler(\\&pimp_the_prompt); # change prompt\n  $filter -> history_handler(sub {s/with password \\w+/with password ****/; $_}); # keep passwords out of history\n\n  $filter -> run;\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 540,
                  "startColumn": 59,
                  "endLine": 540,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n  $filter -> output_handler(sub {s/apple/orange/; $_}); # re-write output\n  $filter -> prompt_handler(\\&pimp_the_prompt); # change prompt\n  $filter -> history_handler(sub {s/with password \\w+/with password ****/; $_}); # keep passwords out of history\n\n  $filter -> run;\n\n",
                    "rendered": {
                      "text": "\n  $filter -> output_handler(sub {s/apple/orange/; $_}); # re-write output\n  $filter -> prompt_handler(\\&pimp_the_prompt); # change prompt\n  $filter -> history_handler(sub {s/with password \\w+/with password ****/; $_}); # keep passwords out of history\n\n  $filter -> run;\n\n",
                      "markdown": "`\n  $filter -> output_handler(sub {s/apple/orange/; $_}); # re-write output\n  $filter -> prompt_handler(\\&pimp_the_prompt); # change prompt\n  $filter -> history_handler(sub {s/with password \\w+/with password ****/; $_}); # keep passwords out of history\n\n  $filter -> run;\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 540,
                  "startColumn": 41,
                  "endLine": 540,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n  $filter -> output_handler(sub {s/apple/orange/; $_}); # re-write output\n  $filter -> prompt_handler(\\&pimp_the_prompt); # change prompt\n  $filter -> history_handler(sub {s/with password \\w+/with password ****/; $_}); # keep passwords out of history\n\n  $filter -> run;\n\n",
                    "rendered": {
                      "text": "\n  $filter -> output_handler(sub {s/apple/orange/; $_}); # re-write output\n  $filter -> prompt_handler(\\&pimp_the_prompt); # change prompt\n  $filter -> history_handler(sub {s/with password \\w+/with password ****/; $_}); # keep passwords out of history\n\n  $filter -> run;\n\n",
                      "markdown": "`\n  $filter -> output_handler(sub {s/apple/orange/; $_}); # re-write output\n  $filter -> prompt_handler(\\&pimp_the_prompt); # change prompt\n  $filter -> history_handler(sub {s/with password \\w+/with password ****/; $_}); # keep passwords out of history\n\n  $filter -> run;\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 957,
                  "startColumn": 24,
                  "endLine": 957,
                  "endColumn": 28,
                  "snippet": {
                    "text": "as long as B<rlwrap> runs. Filter methods are immediately usable. When\nI<command> exits, the filter stays around for a little longer in order\nto process I<command>'s last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n\nIf a filter calls die() it will send an (out-of-band) TAG_ERROR\n",
                    "rendered": {
                      "text": "as long as B<rlwrap> runs. Filter methods are immediately usable. When\nI<command> exits, the filter stays around for a little longer in order\nto process I<command>'s last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n\nIf a filter calls die() it will send an (out-of-band) TAG_ERROR\n",
                      "markdown": "`as long as B<rlwrap> runs. Filter methods are immediately usable. When\nI<command> exits, the filter stays around for a little longer in order\nto process I<command>'s last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n\nIf a filter calls die() it will send an (out-of-band) TAG_ERROR\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 937,
                  "startColumn": 17,
                  "endLine": 937,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\nTAG_WHAT_ARE_YOUR_INTERESTS is only ever used internally, to prevent the exchange of messages that\nwon't be handled by the filter anyway. It will be seen by the general message handler, and therefore show\nup (exactly once, at program start) in the output of e.g. the B<logger> filter.\n\n=head1 SIGNALS\n\n",
                    "rendered": {
                      "text": "\nTAG_WHAT_ARE_YOUR_INTERESTS is only ever used internally, to prevent the exchange of messages that\nwon't be handled by the filter anyway. It will be seen by the general message handler, and therefore show\nup (exactly once, at program start) in the output of e.g. the B<logger> filter.\n\n=head1 SIGNALS\n\n",
                      "markdown": "`\nTAG_WHAT_ARE_YOUR_INTERESTS is only ever used internally, to prevent the exchange of messages that\nwon't be handled by the filter anyway. It will be seen by the general message handler, and therefore show\nup (exactly once, at program start) in the output of e.g. the B<logger> filter.\n\n=head1 SIGNALS\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 845,
                  "startColumn": 35,
                  "endLine": 845,
                  "endColumn": 39,
                  "snippet": {
                    "text": "=item $f -> cloak_and_dagger($question, $prompt, $timeout);\n\nSend C<$question> to I<command>'s input and read back everything that\ncomes back until C<$prompt> is seen at \"end-of-chunk\", or no new\nchunks arrive for $timeout seconds, whichever comes first.  Return the\nresponse (without the final C<$prompt>).  B<rlwrap> remains completely\nunaware of this conversation.\n",
                    "rendered": {
                      "text": "=item $f -> cloak_and_dagger($question, $prompt, $timeout);\n\nSend C<$question> to I<command>'s input and read back everything that\ncomes back until C<$prompt> is seen at \"end-of-chunk\", or no new\nchunks arrive for $timeout seconds, whichever comes first.  Return the\nresponse (without the final C<$prompt>).  B<rlwrap> remains completely\nunaware of this conversation.\n",
                      "markdown": "`=item $f -> cloak_and_dagger($question, $prompt, $timeout);\n\nSend C<$question> to I<command>'s input and read back everything that\ncomes back until C<$prompt> is seen at \"end-of-chunk\", or no new\nchunks arrive for $timeout seconds, whichever comes first.  Return the\nresponse (without the final C<$prompt>).  B<rlwrap> remains completely\nunaware of this conversation.\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 833,
                  "startColumn": 90,
                  "endLine": 833,
                  "endColumn": 94,
                  "snippet": {
                    "text": "    $filter -> tweak_readline_oob(\"rl_completer_quote_characters\", $chars);\n    $filter -> tweak_readline_oob(\"rl_filename_completion_desired\", \"0\" or \"1\");\n\nThe parameters should not contain \"::\" (two consecutive colons). This method can be called at any\nmoment, even before $filter -> run\n\n=item $f -> add_to_completion_list(@words)\n",
                    "rendered": {
                      "text": "    $filter -> tweak_readline_oob(\"rl_completer_quote_characters\", $chars);\n    $filter -> tweak_readline_oob(\"rl_filename_completion_desired\", \"0\" or \"1\");\n\nThe parameters should not contain \"::\" (two consecutive colons). This method can be called at any\nmoment, even before $filter -> run\n\n=item $f -> add_to_completion_list(@words)\n",
                      "markdown": "`    $filter -> tweak_readline_oob(\"rl_completer_quote_characters\", $chars);\n    $filter -> tweak_readline_oob(\"rl_filename_completion_desired\", \"0\" or \"1\");\n\nThe parameters should not contain \"::\" (two consecutive colons). This method can be called at any\nmoment, even before $filter -> run\n\n=item $f -> add_to_completion_list(@words)\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 824,
                  "endLine": 825,
                  "endColumn": 3,
                  "snippet": {
                    "text": "Send a specially formatted out-of-band message in order to tweak\nreadline (i.e. to make B<rlwrap> call a B<readline> function or set a\nB<readline> variable). See the GNU B<Readline> documentation for details.\n\nAt this moment, the following tweaks are recognised:\n\n    $filter -> tweak_readline_oob(\"rl_variable_bind\", $rl_variable_name, $value);\n    # ... only for bindable readline variables like those in .inputrc\n",
                    "rendered": {
                      "text": "Send a specially formatted out-of-band message in order to tweak\nreadline (i.e. to make B<rlwrap> call a B<readline> function or set a\nB<readline> variable). See the GNU B<Readline> documentation for details.\n\nAt this moment, the following tweaks are recognised:\n\n    $filter -> tweak_readline_oob(\"rl_variable_bind\", $rl_variable_name, $value);\n    # ... only for bindable readline variables like those in .inputrc\n",
                      "markdown": "`Send a specially formatted out-of-band message in order to tweak\nreadline (i.e. to make B<rlwrap> call a B<readline> function or set a\nB<readline> variable). See the GNU B<Readline> documentation for details.\n\nAt this moment, the following tweaks are recognised:\n\n    $filter -> tweak_readline_oob(\"rl_variable_bind\", $rl_variable_name, $value);\n    # ... only for bindable readline variables like those in .inputrc\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 588,
                  "startColumn": 45,
                  "endLine": 588,
                  "endColumn": 49,
                  "snippet": {
                    "text": "They get called from the 'run' method in response to a message sent\nfrom B<rlwrap>.  Messages consist of a tag indicating which handler\nshould be called (e.g. TAG_INPUT, TAG_HISTORY) and the message\ntext. Usually, a filter overrides only one or at most two methods.\n\n=head2 CALLING CONVENTIONS\n\n",
                    "rendered": {
                      "text": "They get called from the 'run' method in response to a message sent\nfrom B<rlwrap>.  Messages consist of a tag indicating which handler\nshould be called (e.g. TAG_INPUT, TAG_HISTORY) and the message\ntext. Usually, a filter overrides only one or at most two methods.\n\n=head2 CALLING CONVENTIONS\n\n",
                      "markdown": "`They get called from the 'run' method in response to a message sent\nfrom B<rlwrap>.  Messages consist of a tag indicating which handler\nshould be called (e.g. TAG_INPUT, TAG_HISTORY) and the message\ntext. Usually, a filter overrides only one or at most two methods.\n\n=head2 CALLING CONVENTIONS\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 391,
                  "startColumn": 26,
                  "endLine": 391,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n# Commands return messages asynchronously and may time out\n# when invoked by multiple `cloak_and_dagger`. You may want to\n# drop their unused output at some later time:\n\n# rlwrap_filter.cloak_and_dagger($command1, $prompt, $timeout)\n# rlwrap_filter.cloak_and_dagger($command2, $prompt, $timeout) ...\n",
                    "rendered": {
                      "text": "\n# Commands return messages asynchronously and may time out\n# when invoked by multiple `cloak_and_dagger`. You may want to\n# drop their unused output at some later time:\n\n# rlwrap_filter.cloak_and_dagger($command1, $prompt, $timeout)\n# rlwrap_filter.cloak_and_dagger($command2, $prompt, $timeout) ...\n",
                      "markdown": "`\n# Commands return messages asynchronously and may time out\n# when invoked by multiple `cloak_and_dagger`. You may want to\n# drop their unused output at some later time:\n\n# rlwrap_filter.cloak_and_dagger($command1, $prompt, $timeout)\n# rlwrap_filter.cloak_and_dagger($command2, $prompt, $timeout) ...\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 36,
                  "endLine": 250,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n\nsub read_until { # read chunks from pty pointed to by $fh until either inactive for $timeout or\n                 # $stoptext is seen at end-of-chunk\n  my ($fh, $stoptext, $timeout) = @_;\n  my ($res);\n  while (1){\n",
                    "rendered": {
                      "text": "\n\nsub read_until { # read chunks from pty pointed to by $fh until either inactive for $timeout or\n                 # $stoptext is seen at end-of-chunk\n  my ($fh, $stoptext, $timeout) = @_;\n  my ($res);\n  while (1){\n",
                      "markdown": "`\n\nsub read_until { # read chunks from pty pointed to by $fh until either inactive for $timeout or\n                 # $stoptext is seen at end-of-chunk\n  my ($fh, $stoptext, $timeout) = @_;\n  my ($res);\n  while (1){\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 24,
                  "endLine": 193,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# When the filter starts, it tells rlwrap its interests as a string 'yyny..' (1 + TAG_MAX chars, 1 for each tag)\n# when receiving a message 'nnynn...' the follwoing function changes 'n' to 'y' for those message types that the\n# filter handles,so that at the end of the pipeline the message reflects the interests of all filters in the\n# pipeline\nsub add_interests {\n  my ($self, $message) = @_;\n",
                    "rendered": {
                      "text": "\n# When the filter starts, it tells rlwrap its interests as a string 'yyny..' (1 + TAG_MAX chars, 1 for each tag)\n# when receiving a message 'nnynn...' the follwoing function changes 'n' to 'y' for those message types that the\n# filter handles,so that at the end of the pipeline the message reflects the interests of all filters in the\n# pipeline\nsub add_interests {\n  my ($self, $message) = @_;\n",
                      "markdown": "`\n# When the filter starts, it tells rlwrap its interests as a string 'yyny..' (1 + TAG_MAX chars, 1 for each tag)\n# when receiving a message 'nnynn...' the follwoing function changes 'n' to 'y' for those message types that the\n# filter handles,so that at the end of the pipeline the message reflects the interests of all filters in the\n# pipeline\nsub add_interests {\n  my ($self, $message) = @_;\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 10,
                  "endLine": 148,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t  if ($message eq REJECT_PROMPT or\n\t      ($self -> {prompts_are_never_empty} and $message eq \"\")) {\n\t\t\twrite_message($tag, REJECT_PROMPT);\n\t\t\t# don't update <previous_tag> and don't reset <cumulative_input>\n\t\t\tnext;\n                      }\n\n",
                    "rendered": {
                      "text": "\t  if ($message eq REJECT_PROMPT or\n\t      ($self -> {prompts_are_never_empty} and $message eq \"\")) {\n\t\t\twrite_message($tag, REJECT_PROMPT);\n\t\t\t# don't update <previous_tag> and don't reset <cumulative_input>\n\t\t\tnext;\n                      }\n\n",
                      "markdown": "`\t  if ($message eq REJECT_PROMPT or\n\t      ($self -> {prompts_are_never_empty} and $message eq \"\")) {\n\t\t\twrite_message($tag, REJECT_PROMPT);\n\t\t\t# don't update <previous_tag> and don't reset <cumulative_input>\n\t\t\tnext;\n                      }\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 1028,
                  "startColumn": 1,
                  "endLine": 1028,
                  "endColumn": 9,
                  "snippet": {
                    "text": "same way on its standard output. Of course, B<rlwrap> can help with the\ntedious typing of tag names:\n\n  rlwrap -f tagnames filter_to_be_debugged\n\nBecause B<rlwrap> cannot put TABs and newlines in input lines, filters will\nconvert '\\t' and '\\n' into TAB and newline when run directly from the command line.\n",
                    "rendered": {
                      "text": "same way on its standard output. Of course, B<rlwrap> can help with the\ntedious typing of tag names:\n\n  rlwrap -f tagnames filter_to_be_debugged\n\nBecause B<rlwrap> cannot put TABs and newlines in input lines, filters will\nconvert '\\t' and '\\n' into TAB and newline when run directly from the command line.\n",
                      "markdown": "`same way on its standard output. Of course, B<rlwrap> can help with the\ntedious typing of tag names:\n\n  rlwrap -f tagnames filter_to_be_debugged\n\nBecause B<rlwrap> cannot put TABs and newlines in input lines, filters will\nconvert '\\t' and '\\n' into TAB and newline when run directly from the command line.\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 1013,
                  "startColumn": 27,
                  "endLine": 1013,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\nWhen called by rlwrap, filters get their input from\n$RLWRAP_INPUT_PIPE_FD and write their output to\n$RLWRAP_OUTPUT_PIPE_FD, and expect and write messages consisting of a\ntag byte, a 32-bit length and the message proper. This is not terribly\nuseful when running a filter directly from the command line (outside\nrlwrap), even if we set the RLWRAP_*_FD ourselves.\n",
                    "rendered": {
                      "text": "\nWhen called by rlwrap, filters get their input from\n$RLWRAP_INPUT_PIPE_FD and write their output to\n$RLWRAP_OUTPUT_PIPE_FD, and expect and write messages consisting of a\ntag byte, a 32-bit length and the message proper. This is not terribly\nuseful when running a filter directly from the command line (outside\nrlwrap), even if we set the RLWRAP_*_FD ourselves.\n",
                      "markdown": "`\nWhen called by rlwrap, filters get their input from\n$RLWRAP_INPUT_PIPE_FD and write their output to\n$RLWRAP_OUTPUT_PIPE_FD, and expect and write messages consisting of a\ntag byte, a 32-bit length and the message proper. This is not terribly\nuseful when running a filter directly from the command line (outside\nrlwrap), even if we set the RLWRAP_*_FD ourselves.\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 1006,
                  "startColumn": 1,
                  "endLine": 1006,
                  "endColumn": 9,
                  "snippet": {
                    "text": "When running a filter, the in- and outgoing messages can be logged by\nthe B<logger> filter, using a pipeline:\n\n  rlwrap -z 'pipeline logger incoming : my_filter : logger outgoing' command\n\n\n=head2 RUNNING WITHOUT B<rlwrap>\n",
                    "rendered": {
                      "text": "When running a filter, the in- and outgoing messages can be logged by\nthe B<logger> filter, using a pipeline:\n\n  rlwrap -z 'pipeline logger incoming : my_filter : logger outgoing' command\n\n\n=head2 RUNNING WITHOUT B<rlwrap>\n",
                      "markdown": "`When running a filter, the in- and outgoing messages can be logged by\nthe B<logger> filter, using a pipeline:\n\n  rlwrap -z 'pipeline logger incoming : my_filter : logger outgoing' command\n\n\n=head2 RUNNING WITHOUT B<rlwrap>\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 994,
                  "startColumn": 71,
                  "endLine": 995,
                  "snippet": {
                    "text": "\n    RLWRAP_BREAK_CHARS    The characters rlwrap considers word-breaking (cf. the --break-chars option in rlwrap (1))\n\n    RLWRAP_DEBUG          The value of the --debug (-d) option given to rlwrap\n\n=head1 DEBUGGING FILTERS\n\nWhile RlwrapFilter.pm makes it easy to write simple filters, debugging\n",
                    "rendered": {
                      "text": "\n    RLWRAP_BREAK_CHARS    The characters rlwrap considers word-breaking (cf. the --break-chars option in rlwrap (1))\n\n    RLWRAP_DEBUG          The value of the --debug (-d) option given to rlwrap\n\n=head1 DEBUGGING FILTERS\n\nWhile RlwrapFilter.pm makes it easy to write simple filters, debugging\n",
                      "markdown": "`\n    RLWRAP_BREAK_CHARS    The characters rlwrap considers word-breaking (cf. the --break-chars option in rlwrap (1))\n\n    RLWRAP_DEBUG          The value of the --debug (-d) option given to rlwrap\n\n=head1 DEBUGGING FILTERS\n\nWhile RlwrapFilter.pm makes it easy to write simple filters, debugging\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 992,
                  "startColumn": 104,
                  "endLine": 992,
                  "endColumn": 112,
                  "snippet": {
                    "text": "\n    RLWRAP_MASTER_PTY_FD  File descriptor of command's pty.\n\n    RLWRAP_BREAK_CHARS    The characters rlwrap considers word-breaking (cf. the --break-chars option in rlwrap (1))\n\n    RLWRAP_DEBUG          The value of the --debug (-d) option given to rlwrap\n\n",
                    "rendered": {
                      "text": "\n    RLWRAP_MASTER_PTY_FD  File descriptor of command's pty.\n\n    RLWRAP_BREAK_CHARS    The characters rlwrap considers word-breaking (cf. the --break-chars option in rlwrap (1))\n\n    RLWRAP_DEBUG          The value of the --debug (-d) option given to rlwrap\n\n",
                      "markdown": "`\n    RLWRAP_MASTER_PTY_FD  File descriptor of command's pty.\n\n    RLWRAP_BREAK_CHARS    The characters rlwrap considers word-breaking (cf. the --break-chars option in rlwrap (1))\n\n    RLWRAP_DEBUG          The value of the --debug (-d) option given to rlwrap\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 992,
                  "startColumn": 40,
                  "endLine": 992,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n    RLWRAP_MASTER_PTY_FD  File descriptor of command's pty.\n\n    RLWRAP_BREAK_CHARS    The characters rlwrap considers word-breaking (cf. the --break-chars option in rlwrap (1))\n\n    RLWRAP_DEBUG          The value of the --debug (-d) option given to rlwrap\n\n",
                    "rendered": {
                      "text": "\n    RLWRAP_MASTER_PTY_FD  File descriptor of command's pty.\n\n    RLWRAP_BREAK_CHARS    The characters rlwrap considers word-breaking (cf. the --break-chars option in rlwrap (1))\n\n    RLWRAP_DEBUG          The value of the --debug (-d) option given to rlwrap\n\n",
                      "markdown": "`\n    RLWRAP_MASTER_PTY_FD  File descriptor of command's pty.\n\n    RLWRAP_BREAK_CHARS    The characters rlwrap considers word-breaking (cf. the --break-chars option in rlwrap (1))\n\n    RLWRAP_DEBUG          The value of the --debug (-d) option given to rlwrap\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 982,
                  "startColumn": 67,
                  "endLine": 982,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\n    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\n    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n                          the candidate prompt is filtered through the output handler (and displayed before\n                          being overwritten by the cooked prompt).\n\n",
                    "rendered": {
                      "text": "\n    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\n    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n                          the candidate prompt is filtered through the output handler (and displayed before\n                          being overwritten by the cooked prompt).\n\n",
                      "markdown": "`\n    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\n    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n                          the candidate prompt is filtered through the output handler (and displayed before\n                          being overwritten by the cooked prompt).\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 982,
                  "startColumn": 33,
                  "endLine": 982,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\n    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n                          the candidate prompt is filtered through the output handler (and displayed before\n                          being overwritten by the cooked prompt).\n\n",
                    "rendered": {
                      "text": "\n    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\n    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n                          the candidate prompt is filtered through the output handler (and displayed before\n                          being overwritten by the cooked prompt).\n\n",
                      "markdown": "`\n    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\n    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n                          the candidate prompt is filtered through the output handler (and displayed before\n                          being overwritten by the cooked prompt).\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 976,
                  "startColumn": 25,
                  "endLine": 976,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n    PATH\t          rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter's PATH\n\n    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\n    RLWRAP_COMMAND_PID    process ID of the rlwrapped command\n\n",
                    "rendered": {
                      "text": "\n    PATH\t          rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter's PATH\n\n    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\n    RLWRAP_COMMAND_PID    process ID of the rlwrapped command\n\n",
                      "markdown": "`\n    PATH\t          rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter's PATH\n\n    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\n    RLWRAP_COMMAND_PID    process ID of the rlwrapped command\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 974,
                  "startColumn": 18,
                  "endLine": 974,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    RLWRAP_FILTERDIR      directory where RlwrapFilter.pm and most filters live (set by rlwrap, can be\n                          overridden by the user before calling rlwrap)\n\n    PATH\t          rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter's PATH\n\n    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\n",
                    "rendered": {
                      "text": "    RLWRAP_FILTERDIR      directory where RlwrapFilter.pm and most filters live (set by rlwrap, can be\n                          overridden by the user before calling rlwrap)\n\n    PATH\t          rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter's PATH\n\n    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\n",
                      "markdown": "`    RLWRAP_FILTERDIR      directory where RlwrapFilter.pm and most filters live (set by rlwrap, can be\n                          overridden by the user before calling rlwrap)\n\n    PATH\t          rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter's PATH\n\n    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 961,
                  "startColumn": 33,
                  "endLine": 961,
                  "endColumn": 41,
                  "snippet": {
                    "text": "error, it may be advisable to wrap those calls in eval{}\n\nIf a filter calls die() it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message - out-of-band messages\nare not always processed immediately)\n\n",
                    "rendered": {
                      "text": "error, it may be advisable to wrap those calls in eval{}\n\nIf a filter calls die() it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message - out-of-band messages\nare not always processed immediately)\n\n",
                      "markdown": "`error, it may be advisable to wrap those calls in eval{}\n\nIf a filter calls die() it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message - out-of-band messages\nare not always processed immediately)\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 961,
                  "startColumn": 10,
                  "endLine": 961,
                  "endColumn": 18,
                  "snippet": {
                    "text": "error, it may be advisable to wrap those calls in eval{}\n\nIf a filter calls die() it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message - out-of-band messages\nare not always processed immediately)\n\n",
                    "rendered": {
                      "text": "error, it may be advisable to wrap those calls in eval{}\n\nIf a filter calls die() it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message - out-of-band messages\nare not always processed immediately)\n\n",
                      "markdown": "`error, it may be advisable to wrap those calls in eval{}\n\nIf a filter calls die() it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message - out-of-band messages\nare not always processed immediately)\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 957,
                  "startColumn": 32,
                  "endLine": 957,
                  "endColumn": 38,
                  "snippet": {
                    "text": "as long as B<rlwrap> runs. Filter methods are immediately usable. When\nI<command> exits, the filter stays around for a little longer in order\nto process I<command>'s last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n\nIf a filter calls die() it will send an (out-of-band) TAG_ERROR\n",
                    "rendered": {
                      "text": "as long as B<rlwrap> runs. Filter methods are immediately usable. When\nI<command> exits, the filter stays around for a little longer in order\nto process I<command>'s last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n\nIf a filter calls die() it will send an (out-of-band) TAG_ERROR\n",
                      "markdown": "`as long as B<rlwrap> runs. Filter methods are immediately usable. When\nI<command> exits, the filter stays around for a little longer in order\nto process I<command>'s last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n\nIf a filter calls die() it will send an (out-of-band) TAG_ERROR\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 941,
                  "startColumn": 59,
                  "endLine": 941,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n=head1 SIGNALS\n\nAs STDIN is still connected to the users teminal, one might expect the filter\nto receive SIGINT, SIGTERM, SIGTSTP directly from the terminal driver if\nthe user presses CTRL-C, CTRL-Z etc Normally, we don't want this - it\nwould confuse rlwrap, and the user (who thinks she is talking straight\n",
                    "rendered": {
                      "text": "\n=head1 SIGNALS\n\nAs STDIN is still connected to the users teminal, one might expect the filter\nto receive SIGINT, SIGTERM, SIGTSTP directly from the terminal driver if\nthe user presses CTRL-C, CTRL-Z etc Normally, we don't want this - it\nwould confuse rlwrap, and the user (who thinks she is talking straight\n",
                      "markdown": "`\n=head1 SIGNALS\n\nAs STDIN is still connected to the users teminal, one might expect the filter\nto receive SIGINT, SIGTERM, SIGTSTP directly from the terminal driver if\nthe user presses CTRL-C, CTRL-Z etc Normally, we don't want this - it\nwould confuse rlwrap, and the user (who thinks she is talking straight\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 906,
                  "startColumn": 42,
                  "endLine": 906,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\nMessages are received and sent via two pipes. STDIN, STDOUT and STDERR\nare still connected to the user's terminal, and you can read and write\nthem directly, though this may mess up the screen and confuse the user\nunless you are careful. A filter can even communicate with the\nrlwrapped command behind rlwrap's back (cf the cloak_and_dagger()\nmethod)\n",
                    "rendered": {
                      "text": "\nMessages are received and sent via two pipes. STDIN, STDOUT and STDERR\nare still connected to the user's terminal, and you can read and write\nthem directly, though this may mess up the screen and confuse the user\nunless you are careful. A filter can even communicate with the\nrlwrapped command behind rlwrap's back (cf the cloak_and_dagger()\nmethod)\n",
                      "markdown": "`\nMessages are received and sent via two pipes. STDIN, STDOUT and STDERR\nare still connected to the user's terminal, and you can read and write\nthem directly, though this may mess up the screen and confuse the user\nunless you are careful. A filter can even communicate with the\nrlwrapped command behind rlwrap's back (cf the cloak_and_dagger()\nmethod)\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 894,
                  "startColumn": 5,
                  "endLine": 894,
                  "endColumn": 13,
                  "snippet": {
                    "text": "byte (TAG_OUTPUT, TAG_PROMPT etc. - to inform the filter of what is\nbeing sent), an unsigned 32-bit integer containing the length of the\nmessage, the message text and an extra newline. For every message\nsent, rlwrap expects, and waits for an answer message with the same\ntag. Sending back a different (in-band) tag is an error and instantly\nkills rlwrap, though filters may precede their answer message with\n\"out-of-band\" messages to output text (TAG_OUTPUT_OUT_OF_BAND), report\n",
                    "rendered": {
                      "text": "byte (TAG_OUTPUT, TAG_PROMPT etc. - to inform the filter of what is\nbeing sent), an unsigned 32-bit integer containing the length of the\nmessage, the message text and an extra newline. For every message\nsent, rlwrap expects, and waits for an answer message with the same\ntag. Sending back a different (in-band) tag is an error and instantly\nkills rlwrap, though filters may precede their answer message with\n\"out-of-band\" messages to output text (TAG_OUTPUT_OUT_OF_BAND), report\n",
                      "markdown": "`byte (TAG_OUTPUT, TAG_PROMPT etc. - to inform the filter of what is\nbeing sent), an unsigned 32-bit integer containing the length of the\nmessage, the message text and an extra newline. For every message\nsent, rlwrap expects, and waits for an answer message with the same\ntag. Sending back a different (in-band) tag is an error and instantly\nkills rlwrap, though filters may precede their answer message with\n\"out-of-band\" messages to output text (TAG_OUTPUT_OUT_OF_BAND), report\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 861,
                  "startColumn": 53,
                  "endLine": 861,
                  "endColumn": 61,
                  "snippet": {
                    "text": "=item $self -> prompt_rejected\n\nA special text (\"_THIS_CANNOT_BE_A_PROMPT_\") to be returned by a\nprompt handler to \"reject\" the prompt. This will make rlwrap skip\ncooking the prompt.  $self->previous_tag and $self->cumulative_output\nwill not be touched.\n\n",
                    "rendered": {
                      "text": "=item $self -> prompt_rejected\n\nA special text (\"_THIS_CANNOT_BE_A_PROMPT_\") to be returned by a\nprompt handler to \"reject\" the prompt. This will make rlwrap skip\ncooking the prompt.  $self->previous_tag and $self->cumulative_output\nwill not be touched.\n\n",
                      "markdown": "`=item $self -> prompt_rejected\n\nA special text (\"_THIS_CANNOT_BE_A_PROMPT_\") to be returned by a\nprompt handler to \"reject\" the prompt. This will make rlwrap skip\ncooking the prompt.  $self->previous_tag and $self->cumulative_output\nwill not be touched.\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 855,
                  "startColumn": 18,
                  "endLine": 855,
                  "endColumn": 26,
                  "snippet": {
                    "text": "If $verbosity evaluates to a true value, make rlwrap print all\nquestions sent to I<command> by the C<cloak_and_dagger> method, and\nI<command>'s responses. By default, $verbosity = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\nC<cloak_and_dagger>\n\n=item $self -> prompt_rejected\n",
                    "rendered": {
                      "text": "If $verbosity evaluates to a true value, make rlwrap print all\nquestions sent to I<command> by the C<cloak_and_dagger> method, and\nI<command>'s responses. By default, $verbosity = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\nC<cloak_and_dagger>\n\n=item $self -> prompt_rejected\n",
                      "markdown": "`If $verbosity evaluates to a true value, make rlwrap print all\nquestions sent to I<command> by the C<cloak_and_dagger> method, and\nI<command>'s responses. By default, $verbosity = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\nC<cloak_and_dagger>\n\n=item $self -> prompt_rejected\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 852,
                  "startColumn": 45,
                  "endLine": 852,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n=item $f -> cloak_and_dagger_verbose($verbosity)\n\nIf $verbosity evaluates to a true value, make rlwrap print all\nquestions sent to I<command> by the C<cloak_and_dagger> method, and\nI<command>'s responses. By default, $verbosity = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n",
                    "rendered": {
                      "text": "\n=item $f -> cloak_and_dagger_verbose($verbosity)\n\nIf $verbosity evaluates to a true value, make rlwrap print all\nquestions sent to I<command> by the C<cloak_and_dagger> method, and\nI<command>'s responses. By default, $verbosity = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n",
                      "markdown": "`\n=item $f -> cloak_and_dagger_verbose($verbosity)\n\nIf $verbosity evaluates to a true value, make rlwrap print all\nquestions sent to I<command> by the C<cloak_and_dagger> method, and\nI<command>'s responses. By default, $verbosity = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 809,
                  "startColumn": 4,
                  "endLine": 809,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n=item $f -> send_output_oob($text)\n\nMake rlwrap display C<$text>. C<$text> is sent \"out-of-band\" :\nB<rlwrap> will not see it until just  after it has sent the next\nmessage to the filter\n\n",
                    "rendered": {
                      "text": "\n=item $f -> send_output_oob($text)\n\nMake rlwrap display C<$text>. C<$text> is sent \"out-of-band\" :\nB<rlwrap> will not see it until just  after it has sent the next\nmessage to the filter\n\n",
                      "markdown": "`\n=item $f -> send_output_oob($text)\n\nMake rlwrap display C<$text>. C<$text> is sent \"out-of-band\" :\nB<rlwrap> will not see it until just  after it has sent the next\nmessage to the filter\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 791,
                  "startColumn": 49,
                  "endLine": 791,
                  "endColumn": 55,
                  "snippet": {
                    "text": "messages and rejected prompts)\n\nWhen necessary (i.e. when B<rlwrap> is in \"impatient mode\") the prompt\nis removed from $filter->cumulative_output by the time the prompt\nhandler is called.\n\n=item $tag = $f -> previous_tag\n",
                    "rendered": {
                      "text": "messages and rejected prompts)\n\nWhen necessary (i.e. when B<rlwrap> is in \"impatient mode\") the prompt\nis removed from $filter->cumulative_output by the time the prompt\nhandler is called.\n\n=item $tag = $f -> previous_tag\n",
                      "markdown": "`messages and rejected prompts)\n\nWhen necessary (i.e. when B<rlwrap> is in \"impatient mode\") the prompt\nis removed from $filter->cumulative_output by the time the prompt\nhandler is called.\n\n=item $tag = $f -> previous_tag\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 778,
                  "startColumn": 28,
                  "endLine": 778,
                  "endColumn": 34,
                  "snippet": {
                    "text": "return the name of I<command>'s current working directory. This uses\nthe /proc filesystem, and may only work on newer linux systems (on\nolder linux and on Solaris, it will return something like\n\"/proc/12345/cwd\", useful to find the contents of I<command>'s working\ndirectory, but not its name)\n\n\n",
                    "rendered": {
                      "text": "return the name of I<command>'s current working directory. This uses\nthe /proc filesystem, and may only work on newer linux systems (on\nolder linux and on Solaris, it will return something like\n\"/proc/12345/cwd\", useful to find the contents of I<command>'s working\ndirectory, but not its name)\n\n\n",
                      "markdown": "`return the name of I<command>'s current working directory. This uses\nthe /proc filesystem, and may only work on newer linux systems (on\nolder linux and on Solaris, it will return something like\n\"/proc/12345/cwd\", useful to find the contents of I<command>'s working\ndirectory, but not its name)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 771,
                  "startColumn": 10,
                  "endLine": 771,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n=item $f -> minimal_rlwrap_version(\"x.yy\")\n\nDie unless rlwrap is version x.yy or newer\n\n=item $dir = $f -> cwd\n\n",
                    "rendered": {
                      "text": "\n=item $f -> minimal_rlwrap_version(\"x.yy\")\n\nDie unless rlwrap is version x.yy or newer\n\n=item $dir = $f -> cwd\n\n",
                      "markdown": "`\n=item $f -> minimal_rlwrap_version(\"x.yy\")\n\nDie unless rlwrap is version x.yy or newer\n\n=item $dir = $f -> cwd\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 765,
                  "startColumn": 58,
                  "endLine": 765,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n=item $f -> help_text(\"Usage...\")\n\nSet the help text for this filter. It will be displayed by rlwrap -z\n<filter>. The second line of the help text is used by C<rlwrap -z listing>;\nit should be a short description of what the filter does.\n\n",
                    "rendered": {
                      "text": "\n=item $f -> help_text(\"Usage...\")\n\nSet the help text for this filter. It will be displayed by rlwrap -z\n<filter>. The second line of the help text is used by C<rlwrap -z listing>;\nit should be a short description of what the filter does.\n\n",
                      "markdown": "`\n=item $f -> help_text(\"Usage...\")\n\nSet the help text for this filter. It will be displayed by rlwrap -z\n<filter>. The second line of the help text is used by C<rlwrap -z listing>;\nit should be a short description of what the filter does.\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 730,
                  "startColumn": 14,
                  "endLine": 730,
                  "endColumn": 22,
                  "snippet": {
                    "text": "                     });\n\n\nNote that when rlwrap is run in --multi-line mode the echo handler will still\nonly handle the first echo line.  The remainder will generally\nbe echoed back preceded by a continuation prompt; it is up to the\noutput handler what to do with it.\n",
                    "rendered": {
                      "text": "                     });\n\n\nNote that when rlwrap is run in --multi-line mode the echo handler will still\nonly handle the first echo line.  The remainder will generally\nbe echoed back preceded by a continuation prompt; it is up to the\noutput handler what to do with it.\n",
                      "markdown": "`                     });\n\n\nNote that when rlwrap is run in --multi-line mode the echo handler will still\nonly handle the first echo line.  The remainder will generally\nbe echoed back preceded by a continuation prompt; it is up to the\noutput handler what to do with it.\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 704,
                  "startColumn": 10,
                  "endLine": 704,
                  "endColumn": 18,
                  "snippet": {
                    "text": "to confuse the user, use an echo handler that returns your original\ninput.\n\nIf you use rlwrap in --multi-line mode, additional echo lines will\nhave to be handled by the output handler\n\n\n",
                    "rendered": {
                      "text": "to confuse the user, use an echo handler that returns your original\ninput.\n\nIf you use rlwrap in --multi-line mode, additional echo lines will\nhave to be handled by the output handler\n\n\n",
                      "markdown": "`to confuse the user, use an echo handler that returns your original\ninput.\n\nIf you use rlwrap in --multi-line mode, additional echo lines will\nhave to be handled by the output handler\n\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 635,
                  "startColumn": 69,
                  "endLine": 636,
                  "endColumn": 5,
                  "snippet": {
                    "text": "the last output has arrived. Of course, B<rlwrap> cannot read the mind\nof I<command>, so what looks like a prompt to B<rlwrap> may actually\nbe the beginning of an output line that took I<command> a little\nlonger to formulate. If this is a problem, specify a longer \"cooking\"\ntime with rlwrap's B<-w> option, use the B<prompts_are_never_empty>\nmethod or \"reject\" the prompt (cf. the B<prompt_rejected> method)\n\n\n",
                    "rendered": {
                      "text": "the last output has arrived. Of course, B<rlwrap> cannot read the mind\nof I<command>, so what looks like a prompt to B<rlwrap> may actually\nbe the beginning of an output line that took I<command> a little\nlonger to formulate. If this is a problem, specify a longer \"cooking\"\ntime with rlwrap's B<-w> option, use the B<prompts_are_never_empty>\nmethod or \"reject\" the prompt (cf. the B<prompt_rejected> method)\n\n\n",
                      "markdown": "`the last output has arrived. Of course, B<rlwrap> cannot read the mind\nof I<command>, so what looks like a prompt to B<rlwrap> may actually\nbe the beginning of an output line that took I<command> a little\nlonger to formulate. If this is a problem, specify a longer \"cooking\"\ntime with rlwrap's B<-w> option, use the B<prompts_are_never_empty>\nmethod or \"reject\" the prompt (cf. the B<prompt_rejected> method)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 631,
                  "startColumn": 13,
                  "endLine": 631,
                  "endColumn": 19,
                  "snippet": {
                    "text": "=item $handler = $f -> prompt_handler, $f -> prompt_handler(\\&handler)\n\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, B<rlwrap> cannot read the mind\nof I<command>, so what looks like a prompt to B<rlwrap> may actually\nbe the beginning of an output line that took I<command> a little\n",
                    "rendered": {
                      "text": "=item $handler = $f -> prompt_handler, $f -> prompt_handler(\\&handler)\n\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, B<rlwrap> cannot read the mind\nof I<command>, so what looks like a prompt to B<rlwrap> may actually\nbe the beginning of an output line that took I<command> a little\n",
                      "markdown": "`=item $handler = $f -> prompt_handler, $f -> prompt_handler(\\&handler)\n\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, B<rlwrap> cannot read the mind\nof I<command>, so what looks like a prompt to B<rlwrap> may actually\nbe the beginning of an output line that took I<command> a little\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 630,
                  "startColumn": 57,
                  "endLine": 631,
                  "snippet": {
                    "text": "\n=item $handler = $f -> prompt_handler, $f -> prompt_handler(\\&handler)\n\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, B<rlwrap> cannot read the mind\nof I<command>, so what looks like a prompt to B<rlwrap> may actually\nbe the beginning of an output line that took I<command> a little\n",
                    "rendered": {
                      "text": "\n=item $handler = $f -> prompt_handler, $f -> prompt_handler(\\&handler)\n\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, B<rlwrap> cannot read the mind\nof I<command>, so what looks like a prompt to B<rlwrap> may actually\nbe the beginning of an output line that took I<command> a little\n",
                      "markdown": "`\n=item $handler = $f -> prompt_handler, $f -> prompt_handler(\\&handler)\n\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, B<rlwrap> cannot read the mind\nof I<command>, so what looks like a prompt to B<rlwrap> may actually\nbe the beginning of an output line that took I<command> a little\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 606,
                  "startColumn": 10,
                  "endLine": 606,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\nThe message handlers are called in a fixed cyclic order: prompt,\ncompletion, history, input, echo, output, prompt, ... etc ad\ninfinitum. Rlwrap may always skip a handler when in direct mode; on\nthe other hand, completion and output handlers may get called more\nthan once in succession. If a handler is left undefined, the result is\nas if the message text were returned unaltered (in fact, B<rlwrap> knows\n",
                    "rendered": {
                      "text": "\nThe message handlers are called in a fixed cyclic order: prompt,\ncompletion, history, input, echo, output, prompt, ... etc ad\ninfinitum. Rlwrap may always skip a handler when in direct mode; on\nthe other hand, completion and output handlers may get called more\nthan once in succession. If a handler is left undefined, the result is\nas if the message text were returned unaltered (in fact, B<rlwrap> knows\n",
                      "markdown": "`\nThe message handlers are called in a fixed cyclic order: prompt,\ncompletion, history, input, echo, output, prompt, ... etc ad\ninfinitum. Rlwrap may always skip a handler when in direct mode; on\nthe other hand, completion and output handlers may get called more\nthan once in succession. If a handler is left undefined, the result is\nas if the message text were returned unaltered (in fact, B<rlwrap> knows\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 558,
                  "startColumn": 45,
                  "endLine": 559,
                  "snippet": {
                    "text": "\nFilters can be combined in a pipeline using the special B<pipeline> filter.\n\nB<RlwrapFilter> makes it very simple to write rlwrap\nfilters in perl. A filter only needs to instantiate a RlwrapFilter\nobject, change a few of its default handlers and then call its 'run'\nmethod.\n\n",
                    "rendered": {
                      "text": "\nFilters can be combined in a pipeline using the special B<pipeline> filter.\n\nB<RlwrapFilter> makes it very simple to write rlwrap\nfilters in perl. A filter only needs to instantiate a RlwrapFilter\nobject, change a few of its default handlers and then call its 'run'\nmethod.\n\n",
                      "markdown": "`\nFilters can be combined in a pipeline using the special B<pipeline> filter.\n\nB<RlwrapFilter> makes it very simple to write rlwrap\nfilters in perl. A filter only needs to instantiate a RlwrapFilter\nobject, change a few of its default handlers and then call its 'run'\nmethod.\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 551,
                  "startColumn": 45,
                  "endLine": 551,
                  "endColumn": 53,
                  "snippet": {
                    "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                    "rendered": {
                      "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                      "markdown": "`to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 551,
                  "startColumn": 19,
                  "endLine": 551,
                  "endColumn": 27,
                  "snippet": {
                    "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                    "rendered": {
                      "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                      "markdown": "`to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 529,
                  "startColumn": 14,
                  "endLine": 529,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n=head1 NAME\n\nRlwrapFilter - Perl class for B<rlwrap> filters\n\n=head1 SYNOPSIS\n\n",
                    "rendered": {
                      "text": "\n=head1 NAME\n\nRlwrapFilter - Perl class for B<rlwrap> filters\n\n=head1 SYNOPSIS\n\n",
                      "markdown": "`\n=head1 NAME\n\nRlwrapFilter - Perl class for B<rlwrap> filters\n\n=head1 SYNOPSIS\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 27,
                  "endLine": 468,
                  "endColumn": 35,
                  "snippet": {
                    "text": "sub minimal_rlwrap_version {\n  my ($self, $wanted) = @_;\n  my $found = $ENV{RLWRAP_VERSION} || \"0.34\";\n  die \"This filter requires rlwrap version $wanted or newer!\\n\"\n    unless !$we_are_running_under_rlwrap or $wanted le $found;\n}\n\n",
                    "rendered": {
                      "text": "sub minimal_rlwrap_version {\n  my ($self, $wanted) = @_;\n  my $found = $ENV{RLWRAP_VERSION} || \"0.34\";\n  die \"This filter requires rlwrap version $wanted or newer!\\n\"\n    unless !$we_are_running_under_rlwrap or $wanted le $found;\n}\n\n",
                      "markdown": "`sub minimal_rlwrap_version {\n  my ($self, $wanted) = @_;\n  my $found = $ENV{RLWRAP_VERSION} || \"0.34\";\n  die \"This filter requires rlwrap version $wanted or newer!\\n\"\n    unless !$we_are_running_under_rlwrap or $wanted le $found;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 389,
                  "startColumn": 49,
                  "endLine": 389,
                  "endColumn": 55,
                  "snippet": {
                    "text": "}\n\n\n# Commands return messages asynchronously and may time out\n# when invoked by multiple `cloak_and_dagger`. You may want to\n# drop their unused output at some later time:\n\n",
                    "rendered": {
                      "text": "}\n\n\n# Commands return messages asynchronously and may time out\n# when invoked by multiple `cloak_and_dagger`. You may want to\n# drop their unused output at some later time:\n\n",
                      "markdown": "`}\n\n\n# Commands return messages asynchronously and may time out\n# when invoked by multiple `cloak_and_dagger`. You may want to\n# drop their unused output at some later time:\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 24,
                  "endLine": 285,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  my $result;\n  while($already_read < $count) {\n    my $nread = sysread($fh, $result, $count-$already_read, $already_read);\n    if ($nread == 0) { # rlwrap (or the rlwrapped command) has put down the\n                       # telephone - we're going to die anyway. Don't complain.\n      exit(0);\n    } elsif ($nread < 0) {\n",
                    "rendered": {
                      "text": "  my $result;\n  while($already_read < $count) {\n    my $nread = sysread($fh, $result, $count-$already_read, $already_read);\n    if ($nread == 0) { # rlwrap (or the rlwrapped command) has put down the\n                       # telephone - we're going to die anyway. Don't complain.\n      exit(0);\n    } elsif ($nread < 0) {\n",
                      "markdown": "`  my $result;\n  while($already_read < $count) {\n    my $nread = sysread($fh, $result, $count-$already_read, $already_read);\n    if ($nread == 0) { # rlwrap (or the rlwrapped command) has put down the\n                       # telephone - we're going to die anyway. Don't complain.\n      exit(0);\n    } elsif ($nread < 0) {\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 44,
                  "endLine": 262,
                  "endColumn": 53,
                  "snippet": {
                    "text": "}\n\n\n# read chunk from pty pointed to by $fh with timeout $timeout\nsub read_chunk {\n  my ($fh, $timeout) = @_;\n  my ($rin, $rout, $chunk);\n",
                    "rendered": {
                      "text": "}\n\n\n# read chunk from pty pointed to by $fh with timeout $timeout\nsub read_chunk {\n  my ($fh, $timeout) = @_;\n  my ($rin, $rout, $chunk);\n",
                      "markdown": "`}\n\n\n# read chunk from pty pointed to by $fh with timeout $timeout\nsub read_chunk {\n  my ($fh, $timeout) = @_;\n  my ($rin, $rout, $chunk);\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 45,
                  "endLine": 256,
                  "snippet": {
                    "text": "  my ($res);\n  while (1){\n    my $chunk = read_chunk($fh, $timeout);\n    return $res unless $chunk; # got \"\" back: timeout\n    $res .= $chunk;\n    return $res if $res =~ /$stoptext$/;\n  }\n}\n",
                    "rendered": {
                      "text": "  my ($res);\n  while (1){\n    my $chunk = read_chunk($fh, $timeout);\n    return $res unless $chunk; # got \"\" back: timeout\n    $res .= $chunk;\n    return $res if $res =~ /$stoptext$/;\n  }\n}\n",
                      "markdown": "`  my ($res);\n  while (1){\n    my $chunk = read_chunk($fh, $timeout);\n    return $res unless $chunk; # got \"\" back: timeout\n    $res .= $chunk;\n    return $res if $res =~ /$stoptext$/;\n  }\n}\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 34,
                  "endLine": 191,
                  "endColumn": 42,
                  "snippet": {
                    "text": "  }\n}\n\n# When the filter starts, it tells rlwrap its interests as a string 'yyny..' (1 + TAG_MAX chars, 1 for each tag)\n# when receiving a message 'nnynn...' the follwoing function changes 'n' to 'y' for those message types that the\n# filter handles,so that at the end of the pipeline the message reflects the interests of all filters in the\n# pipeline\n",
                    "rendered": {
                      "text": "  }\n}\n\n# When the filter starts, it tells rlwrap its interests as a string 'yyny..' (1 + TAG_MAX chars, 1 for each tag)\n# when receiving a message 'nnynn...' the follwoing function changes 'n' to 'y' for those message types that the\n# filter handles,so that at the end of the pipeline the message reflects the interests of all filters in the\n# pipeline\n",
                      "markdown": "`  }\n}\n\n# When the filter starts, it tells rlwrap its interests as a string 'yyny..' (1 + TAG_MAX chars, 1 for each tag)\n# when receiving a message 'nnynn...' the follwoing function changes 'n' to 'y' for those message types that the\n# filter handles,so that at the end of the pipeline the message reflects the interests of all filters in the\n# pipeline\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 56,
                  "endLine": 121,
                  "endColumn": 64,
                  "snippet": {
                    "text": "sub run {\n    my ($self) = @_;\n\n    if($ENV{RLWRAP_COMMAND_PID} == 0) { # when called as rlwrap -z <filter> (with no command) ..\n      write_message(TAG_OUTPUT_OUT_OF_BAND, $self -> help_text . \"\\n\"); # ... send help text\n    }\n\n",
                    "rendered": {
                      "text": "sub run {\n    my ($self) = @_;\n\n    if($ENV{RLWRAP_COMMAND_PID} == 0) { # when called as rlwrap -z <filter> (with no command) ..\n      write_message(TAG_OUTPUT_OUT_OF_BAND, $self -> help_text . \"\\n\"); # ... send help text\n    }\n\n",
                      "markdown": "`sub run {\n    my ($self) = @_;\n\n    if($ENV{RLWRAP_COMMAND_PID} == 0) { # when called as rlwrap -z <filter> (with no command) ..\n      write_message(TAG_OUTPUT_OUT_OF_BAND, $self -> help_text . \"\\n\"); # ... send help text\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 31,
                  "endLine": 77,
                  "endColumn": 39,
                  "snippet": {
                    "text": "  }\n}\n\n# open communication lines with rlwrap (or with the terminal when not running under rlwrap)\nif ($we_are_running_under_rlwrap) {\n\n  open CMD_IN,     \">&\" . $ENV{RLWRAP_MASTER_PTY_FD};\n",
                    "rendered": {
                      "text": "  }\n}\n\n# open communication lines with rlwrap (or with the terminal when not running under rlwrap)\nif ($we_are_running_under_rlwrap) {\n\n  open CMD_IN,     \">&\" . $ENV{RLWRAP_MASTER_PTY_FD};\n",
                      "markdown": "`  }\n}\n\n# open communication lines with rlwrap (or with the terminal when not running under rlwrap)\nif ($we_are_running_under_rlwrap) {\n\n  open CMD_IN,     \">&\" . $ENV{RLWRAP_MASTER_PTY_FD};\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 90,
                  "endLine": 51,
                  "endColumn": 96,
                  "snippet": {
                    "text": "my $we_are_running_under_rlwrap = defined $ENV{RLWRAP_COMMAND_PID};\n\n\n# die() and warn() must communicate via rlwrap, not via STDERR (unless we're running under perl -c)\nunless ($^C){\n  $SIG{__DIE__}  = \\&die_with_error_message;\n  $SIG{__WARN__} = \\&warn_with_info_message;\n",
                    "rendered": {
                      "text": "my $we_are_running_under_rlwrap = defined $ENV{RLWRAP_COMMAND_PID};\n\n\n# die() and warn() must communicate via rlwrap, not via STDERR (unless we're running under perl -c)\nunless ($^C){\n  $SIG{__DIE__}  = \\&die_with_error_message;\n  $SIG{__WARN__} = \\&warn_with_info_message;\n",
                      "markdown": "`my $we_are_running_under_rlwrap = defined $ENV{RLWRAP_COMMAND_PID};\n\n\n# die() and warn() must communicate via rlwrap, not via STDERR (unless we're running under perl -c)\nunless ($^C){\n  $SIG{__DIE__}  = \\&die_with_error_message;\n  $SIG{__WARN__} = \\&warn_with_info_message;\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 52,
                  "endLine": 48,
                  "snippet": {
                    "text": "\n\n\n# we want to behave differently when running outside rlwrap\nmy $we_are_running_under_rlwrap = defined $ENV{RLWRAP_COMMAND_PID};\n\n\n# die() and warn() must communicate via rlwrap, not via STDERR (unless we're running under perl -c)\n",
                    "rendered": {
                      "text": "\n\n\n# we want to behave differently when running outside rlwrap\nmy $we_are_running_under_rlwrap = defined $ENV{RLWRAP_COMMAND_PID};\n\n\n# die() and warn() must communicate via rlwrap, not via STDERR (unless we're running under perl -c)\n",
                      "markdown": "`\n\n\n# we want to behave differently when running outside rlwrap\nmy $we_are_running_under_rlwrap = defined $ENV{RLWRAP_COMMAND_PID};\n\n\n# die() and warn() must communicate via rlwrap, not via STDERR (unless we're running under perl -c)\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.pm"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 58,
                  "endLine": 39,
                  "endColumn": 66,
                  "snippet": {
                    "text": "use constant TAG_OUTPUT_OUT_OF_BAND            => 254;\nuse constant TAG_ERROR                         => 255;\n\n# to bitwise AND with $ENV{RLWRAP_DEBUG}, the value of the rlwrap --debug option:\nuse constant DEBUG_FILTERING                   => 16;\nuse constant DEBUG_RANDOM_DELAY                => 1024;\n\n",
                    "rendered": {
                      "text": "use constant TAG_OUTPUT_OUT_OF_BAND            => 254;\nuse constant TAG_ERROR                         => 255;\n\n# to bitwise AND with $ENV{RLWRAP_DEBUG}, the value of the rlwrap --debug option:\nuse constant DEBUG_FILTERING                   => 16;\nuse constant DEBUG_RANDOM_DELAY                => 1024;\n\n",
                      "markdown": "`use constant TAG_OUTPUT_OUT_OF_BAND            => 254;\nuse constant TAG_ERROR                         => 255;\n\n# to bitwise AND with $ENV{RLWRAP_DEBUG}, the value of the rlwrap --debug option:\nuse constant DEBUG_FILTERING                   => 16;\nuse constant DEBUG_RANDOM_DELAY                => 1024;\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 37,
                  "endLine": 295,
                  "endColumn": 45,
                  "snippet": {
                    "text": ".B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n.TP \nWrap \\fBgauche\\fP (a Scheme interpreter) with a bold blue prompt, enable multi\\-line editing (using .scm as filename extension) and don't consider single quotes as quotes (so that the parentheses in e.g. (print 'q) match)  \n.B rlwrap\\ \\-pBlue \\-m\\ \\-M\\ .scm\\ \\-q'\"' gosh     \"\n",
                    "rendered": {
                      "text": ".B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n.TP \nWrap \\fBgauche\\fP (a Scheme interpreter) with a bold blue prompt, enable multi\\-line editing (using .scm as filename extension) and don't consider single quotes as quotes (so that the parentheses in e.g. (print 'q) match)  \n.B rlwrap\\ \\-pBlue \\-m\\ \\-M\\ .scm\\ \\-q'\"' gosh     \"\n",
                      "markdown": "`.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n.TP \nWrap \\fBgauche\\fP (a Scheme interpreter) with a bold blue prompt, enable multi\\-line editing (using .scm as filename extension) and don't consider single quotes as quotes (so that the parentheses in e.g. (print 'q) match)  \n.B rlwrap\\ \\-pBlue \\-m\\ \\-M\\ .scm\\ \\-q'\"' gosh     \"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 31,
                  "endLine": 294,
                  "endColumn": 39,
                  "snippet": {
                    "text": " with command\\-line editing and history\n.B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n.TP \nWrap \\fBgauche\\fP (a Scheme interpreter) with a bold blue prompt, enable multi\\-line editing (using .scm as filename extension) and ",
                    "rendered": {
                      "text": " with command\\-line editing and history\n.B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n.TP \nWrap \\fBgauche\\fP (a Scheme interpreter) with a bold blue prompt, enable multi\\-line editing (using .scm as filename extension) and ",
                      "markdown": "` with command\\-line editing and history\n.B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n.TP \nWrap \\fBgauche\\fP (a Scheme interpreter) with a bold blue prompt, enable multi\\-line editing (using .scm as filename extension) and `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 14,
                  "endLine": 292,
                  "endColumn": 22,
                  "snippet": {
                    "text": ".B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n",
                    "rendered": {
                      "text": ".B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n",
                      "markdown": "`.B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 291,
                  "startColumn": 56,
                  "endLine": 291,
                  "endColumn": 64,
                  "snippet": {
                    "text": "Run \\fBnc\\fP (netcat) with command\\-line editing and history\n.B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n",
                    "rendered": {
                      "text": "Run \\fBnc\\fP (netcat) with command\\-line editing and history\n.B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n",
                      "markdown": "`Run \\fBnc\\fP (netcat) with command\\-line editing and history\n.B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 60,
                  "endLine": 232,
                  "endColumn": 68,
                  "snippet": {
                    "text": ".TP\n.OL \\-U \\-\\-mirror-arguments\n(linux only) Keep track of \\fIcommand\\fP's arguments as seen by the \\fBps (1)\\fP command, and mirror them in \\fBrlwrap\\fP's own arguments\nThis can be useful for commands that overwrite command-line password arguments that would be exposed by \\fBrlwrap\\fP without this option. The mirroring takes place\nafter the first user input, or every few milliseconds, if you use the \\fB\\-\\-polling\\fp option.\n\n.TP\n",
                    "rendered": {
                      "text": ".TP\n.OL \\-U \\-\\-mirror-arguments\n(linux only) Keep track of \\fIcommand\\fP's arguments as seen by the \\fBps (1)\\fP command, and mirror them in \\fBrlwrap\\fP's own arguments\nThis can be useful for commands that overwrite command-line password arguments that would be exposed by \\fBrlwrap\\fP without this option. The mirroring takes place\nafter the first user input, or every few milliseconds, if you use the \\fB\\-\\-polling\\fp option.\n\n.TP\n",
                      "markdown": "`.TP\n.OL \\-U \\-\\-mirror-arguments\n(linux only) Keep track of \\fIcommand\\fP's arguments as seen by the \\fBps (1)\\fP command, and mirror them in \\fBrlwrap\\fP's own arguments\nThis can be useful for commands that overwrite command-line password arguments that would be exposed by \\fBrlwrap\\fP without this option. The mirroring takes place\nafter the first user input, or every few milliseconds, if you use the \\fB\\-\\-polling\\fp option.\n\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 40,
                  "endLine": 113,
                  "endColumn": 48,
                  "snippet": {
                    "text": ".OL \\-E \\-\\-always-echo\nBy default, \\fBrlwrap\\fP avoids displaying passwords by echoing '***' whenever the client\nclears the ECHO flag on its input. This option will make \\fBrlwrap\\fP ignore this ECHO flag\nand always echo the user's input. (\\fB-aPassword:\\fP will still work as expected)\n\n\n.TP\n",
                    "rendered": {
                      "text": ".OL \\-E \\-\\-always-echo\nBy default, \\fBrlwrap\\fP avoids displaying passwords by echoing '***' whenever the client\nclears the ECHO flag on its input. This option will make \\fBrlwrap\\fP ignore this ECHO flag\nand always echo the user's input. (\\fB-aPassword:\\fP will still work as expected)\n\n\n.TP\n",
                      "markdown": "`.OL \\-E \\-\\-always-echo\nBy default, \\fBrlwrap\\fP avoids displaying passwords by echoing '***' whenever the client\nclears the ECHO flag on its input. This option will make \\fBrlwrap\\fP ignore this ECHO flag\nand always echo the user's input. (\\fB-aPassword:\\fP will still work as expected)\n\n\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 43,
                  "endLine": 111,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n.TP\n.OL \\-E \\-\\-always-echo\nBy default, \\fBrlwrap\\fP avoids displaying passwords by echoing '***' whenever the client\nclears the ECHO flag on its input. This option will make \\fBrlwrap\\fP ignore this ECHO flag\nand always echo the user's input. (\\fB-aPassword:\\fP will still work as expected)\n\n",
                    "rendered": {
                      "text": "\n.TP\n.OL \\-E \\-\\-always-echo\nBy default, \\fBrlwrap\\fP avoids displaying passwords by echoing '***' whenever the client\nclears the ECHO flag on its input. This option will make \\fBrlwrap\\fP ignore this ECHO flag\nand always echo the user's input. (\\fB-aPassword:\\fP will still work as expected)\n\n",
                      "markdown": "`\n.TP\n.OL \\-E \\-\\-always-echo\nBy default, \\fBrlwrap\\fP avoids displaying passwords by echoing '***' whenever the client\nclears the ECHO flag on its input. This option will make \\fBrlwrap\\fP ignore this ECHO flag\nand always echo the user's input. (\\fB-aPassword:\\fP will still work as expected)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 30,
                  "endLine": 56,
                  "endColumn": 38,
                  "snippet": {
                    "text": "option, rlwrap will echo (and save) passwords, unless you give \\fIcommand\\fP's\npassword prompt as an argument.\n\n.OA \\-a \\-\\-always\\-readline  Password:  brumbleslurgh\n\nThe \\fB\\-N\\fP (\\fB\\-\\-no\\-children\\fP) option can be used to avoid wrapping \npagers and editors called from \\fIcommand\\fP; this should make them much more usable\n",
                    "rendered": {
                      "text": "option, rlwrap will echo (and save) passwords, unless you give \\fIcommand\\fP's\npassword prompt as an argument.\n\n.OA \\-a \\-\\-always\\-readline  Password:  brumbleslurgh\n\nThe \\fB\\-N\\fP (\\fB\\-\\-no\\-children\\fP) option can be used to avoid wrapping \npagers and editors called from \\fIcommand\\fP; this should make them much more usable\n",
                      "markdown": "`option, rlwrap will echo (and save) passwords, unless you give \\fIcommand\\fP's\npassword prompt as an argument.\n\n.OA \\-a \\-\\-always\\-readline  Password:  brumbleslurgh\n\nThe \\fB\\-N\\fP (\\fB\\-\\-no\\-children\\fP) option can be used to avoid wrapping \npagers and editors called from \\fIcommand\\fP; this should make them much more usable\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 8,
                  "snippet": {
                    "text": "doing its own line editing. \n\\fBNB\\fP: With this\noption, rlwrap will echo (and save) passwords, unless you give \\fIcommand\\fP's\npassword prompt as an argument.\n\n.OA \\-a \\-\\-always\\-readline  Password:  brumbleslurgh\n\n",
                    "rendered": {
                      "text": "doing its own line editing. \n\\fBNB\\fP: With this\noption, rlwrap will echo (and save) passwords, unless you give \\fIcommand\\fP's\npassword prompt as an argument.\n\n.OA \\-a \\-\\-always\\-readline  Password:  brumbleslurgh\n\n",
                      "markdown": "`doing its own line editing. \n\\fBNB\\fP: With this\noption, rlwrap will echo (and save) passwords, unless you give \\fIcommand\\fP's\npassword prompt as an argument.\n\n.OA \\-a \\-\\-always\\-readline  Password:  brumbleslurgh\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 36,
                  "endLine": 53,
                  "endColumn": 44,
                  "snippet": {
                    "text": "If \\fBrlwrap\\fP \"does nothing\" this is the option to use, as \\fIcommand\\fP is apparently already\ndoing its own line editing. \n\\fBNB\\fP: With this\noption, rlwrap will echo (and save) passwords, unless you give \\fIcommand\\fP's\npassword prompt as an argument.\n\n.OA \\-a \\-\\-always\\-readline  Password:  brumbleslurgh\n",
                    "rendered": {
                      "text": "If \\fBrlwrap\\fP \"does nothing\" this is the option to use, as \\fIcommand\\fP is apparently already\ndoing its own line editing. \n\\fBNB\\fP: With this\noption, rlwrap will echo (and save) passwords, unless you give \\fIcommand\\fP's\npassword prompt as an argument.\n\n.OA \\-a \\-\\-always\\-readline  Password:  brumbleslurgh\n",
                      "markdown": "`If \\fBrlwrap\\fP \"does nothing\" this is the option to use, as \\fIcommand\\fP is apparently already\ndoing its own line editing. \n\\fBNB\\fP: With this\noption, rlwrap will echo (and save) passwords, unless you give \\fIcommand\\fP's\npassword prompt as an argument.\n\n.OA \\-a \\-\\-always\\-readline  Password:  brumbleslurgh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 32,
                  "endLine": 48,
                  "endColumn": 40,
                  "snippet": {
                    "text": "comfortable...\n.SH OPTIONS\n.TP\n.OB \\-a \\-\\-always\\-readline \\fIpassword_prompt\\fP \nAlways remain in \"readline mode\" (see below), regardless of \\fIcommand\\fP's terminal settings.\nIf \\fBrlwrap\\fP \"does nothing\" this is the option to use, as \\fIcommand\\fP is apparently already\ndoing its own line editing. \n",
                    "rendered": {
                      "text": "comfortable...\n.SH OPTIONS\n.TP\n.OB \\-a \\-\\-always\\-readline \\fIpassword_prompt\\fP \nAlways remain in \"readline mode\" (see below), regardless of \\fIcommand\\fP's terminal settings.\nIf \\fBrlwrap\\fP \"does nothing\" this is the option to use, as \\fIcommand\\fP is apparently already\ndoing its own line editing. \n",
                      "markdown": "`comfortable...\n.SH OPTIONS\n.TP\n.OB \\-a \\-\\-always\\-readline \\fIpassword_prompt\\fP \nAlways remain in \"readline mode\" (see below), regardless of \\fIcommand\\fP's terminal settings.\nIf \\fBrlwrap\\fP \"does nothing\" this is the option to use, as \\fIcommand\\fP is apparently already\ndoing its own line editing. \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 515,
                  "startColumn": 69,
                  "endLine": 516,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\"cooking\" and filtering, when suddenly (and unpredictably) prompts or\ncommand output are garbled or incorrectly coloured.\n \n\\fBrlwrap\\fP can try, but often fails to, handle prompts that contain\ncontrol characters (prompts, and the effect of \\fB-A\\fP and \\fB\\-t\\fP, can be analysed by\nthe filter \\fBdissect_prompt\\fP). If  \\fB\\-A\\fP\n(\\fB--ansi-colour-aware\\fP) doesn't help, a\nfilter may be needed to clean up the prompt.  Specifying\n",
                    "rendered": {
                      "text": "\"cooking\" and filtering, when suddenly (and unpredictably) prompts or\ncommand output are garbled or incorrectly coloured.\n \n\\fBrlwrap\\fP can try, but often fails to, handle prompts that contain\ncontrol characters (prompts, and the effect of \\fB-A\\fP and \\fB\\-t\\fP, can be analysed by\nthe filter \\fBdissect_prompt\\fP). If  \\fB\\-A\\fP\n(\\fB--ansi-colour-aware\\fP) doesn't help, a\nfilter may be needed to clean up the prompt.  Specifying\n",
                      "markdown": "`\"cooking\" and filtering, when suddenly (and unpredictably) prompts or\ncommand output are garbled or incorrectly coloured.\n \n\\fBrlwrap\\fP can try, but often fails to, handle prompts that contain\ncontrol characters (prompts, and the effect of \\fB-A\\fP and \\fB\\-t\\fP, can be analysed by\nthe filter \\fBdissect_prompt\\fP). If  \\fB\\-A\\fP\n(\\fB--ansi-colour-aware\\fP) doesn't help, a\nfilter may be needed to clean up the prompt.  Specifying\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 432,
                  "startColumn": 181,
                  "endLine": 432,
                  "endColumn": 185,
                  "snippet": {
                    "text": "A number of signals are forwarded to \\fIcommand\\fP:\nHUP INT QUIT USR1 USR2 TERM and (by way of resizing \n\\fIcommand\\fP's terminal) WINCH. Some care is taken to handle\nTSTP (usually a result of a CTRL\\-Z from the terminal) sensibly \\- for example, after suspending \\fBrlwrap\\fP in the middle of a line edit, continuing (by typing 'fg') will land you at the exact spot where you suspended it.\n\nA filter can be used to modify/ignore signals, or send output \"out of band\" to the rlwrapped command.\n\n",
                    "rendered": {
                      "text": "A number of signals are forwarded to \\fIcommand\\fP:\nHUP INT QUIT USR1 USR2 TERM and (by way of resizing \n\\fIcommand\\fP's terminal) WINCH. Some care is taken to handle\nTSTP (usually a result of a CTRL\\-Z from the terminal) sensibly \\- for example, after suspending \\fBrlwrap\\fP in the middle of a line edit, continuing (by typing 'fg') will land you at the exact spot where you suspended it.\n\nA filter can be used to modify/ignore signals, or send output \"out of band\" to the rlwrapped command.\n\n",
                      "markdown": "`A number of signals are forwarded to \\fIcommand\\fP:\nHUP INT QUIT USR1 USR2 TERM and (by way of resizing \n\\fIcommand\\fP's terminal) WINCH. Some care is taken to handle\nTSTP (usually a result of a CTRL\\-Z from the terminal) sensibly \\- for example, after suspending \\fBrlwrap\\fP in the middle of a line edit, continuing (by typing 'fg') will land you at the exact spot where you suspended it.\n\nA filter can be used to modify/ignore signals, or send output \"out of band\" to the rlwrapped command.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 210,
                  "endLine": 380,
                  "endColumn": 218,
                  "snippet": {
                    "text": "d to the \\fBreadline\\fP command \\fIrlwrap-hotkey\\fP. This key will then cause the current\ninput line and the current history to be filtered (cf. \\fBRlwrapFilter(3pm)\\fP) through the current filter (hence be a no-op when there is no filter), which then can re-write the input line, move the cursor and update the history. After that, the user can still edit the resulting input.\n.TP\n.B (Not currently bound)\n\\fIrlwrap-hotkey-without-history\\fP acts like \\fIrlwrap-hotkey\\fP, but the history (which can be quite large) is not passed to the filter. This is more efficient if the filter wouldn't do anything usef",
                    "rendered": {
                      "text": "d to the \\fBreadline\\fP command \\fIrlwrap-hotkey\\fP. This key will then cause the current\ninput line and the current history to be filtered (cf. \\fBRlwrapFilter(3pm)\\fP) through the current filter (hence be a no-op when there is no filter), which then can re-write the input line, move the cursor and update the history. After that, the user can still edit the resulting input.\n.TP\n.B (Not currently bound)\n\\fIrlwrap-hotkey-without-history\\fP acts like \\fIrlwrap-hotkey\\fP, but the history (which can be quite large) is not passed to the filter. This is more efficient if the filter wouldn't do anything usef",
                      "markdown": "`d to the \\fBreadline\\fP command \\fIrlwrap-hotkey\\fP. This key will then cause the current\ninput line and the current history to be filtered (cf. \\fBRlwrapFilter(3pm)\\fP) through the current filter (hence be a no-op when there is no filter), which then can re-write the input line, move the cursor and update the history. After that, the user can still edit the resulting input.\n.TP\n.B (Not currently bound)\n\\fIrlwrap-hotkey-without-history\\fP acts like \\fIrlwrap-hotkey\\fP, but the history (which can be quite large) is not passed to the filter. This is more efficient if the filter wouldn't do anything usef`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 2,
                  "endLine": 366,
                  "endColumn": 11,
                  "snippet": {
                    "text": "Accept the current line, but don't put it in the history list. This action\nhas a \\fBreadline\\fP command name \\fIrlwrap\\-accept\\-line\\-and\\-forget\\fP\n.TP\n.B Control + ^\nUse an external editor (see RLWRAP_EDITOR below) to edit the current input (this will only work if the \\-m\noption is set). This action has a \\fBreadline\\fP command name \\fIrlwrap\\-call\\-editor\\fP\n.TP\n",
                    "rendered": {
                      "text": "Accept the current line, but don't put it in the history list. This action\nhas a \\fBreadline\\fP command name \\fIrlwrap\\-accept\\-line\\-and\\-forget\\fP\n.TP\n.B Control + ^\nUse an external editor (see RLWRAP_EDITOR below) to edit the current input (this will only work if the \\-m\noption is set). This action has a \\fBreadline\\fP command name \\fIrlwrap\\-call\\-editor\\fP\n.TP\n",
                      "markdown": "`Accept the current line, but don't put it in the history list. This action\nhas a \\fBreadline\\fP command name \\fIrlwrap\\-accept\\-line\\-and\\-forget\\fP\n.TP\n.B Control + ^\nUse an external editor (see RLWRAP_EDITOR below) to edit the current input (this will only work if the \\-m\noption is set). This action has a \\fBreadline\\fP command name \\fIrlwrap\\-call\\-editor\\fP\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 362,
                  "startColumn": 2,
                  "endLine": 362,
                  "endColumn": 11,
                  "snippet": {
                    "text": "printed (after erasing the \"raw\" prompt, if necessary)\n.SH SPECIAL KEYS AND BINDABLE COMMANDS\n.TP\n.B Control + O\nAccept the current line, but don't put it in the history list. This action\nhas a \\fBreadline\\fP command name \\fIrlwrap\\-accept\\-line\\-and\\-forget\\fP\n.TP\n",
                    "rendered": {
                      "text": "printed (after erasing the \"raw\" prompt, if necessary)\n.SH SPECIAL KEYS AND BINDABLE COMMANDS\n.TP\n.B Control + O\nAccept the current line, but don't put it in the history list. This action\nhas a \\fBreadline\\fP command name \\fIrlwrap\\-accept\\-line\\-and\\-forget\\fP\n.TP\n",
                      "markdown": "`printed (after erasing the \"raw\" prompt, if necessary)\n.SH SPECIAL KEYS AND BINDABLE COMMANDS\n.TP\n.B Control + O\nAccept the current line, but don't put it in the history list. This action\nhas a \\fBreadline\\fP command name \\fIrlwrap\\-accept\\-line\\-and\\-forget\\fP\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 41,
                  "endLine": 332,
                  "endColumn": 45,
                  "snippet": {
                    "text": "time.  With those commands, \\fBrlwrap\\fP will appear to \"do nothing\".\nTherefore, if \\fBrlwrap\\fP is in direct mode when the user presses\nENTER for the first time it will give a warning that it needs\n\\fB\\-\\-always\\-readline\\fP to do anything at all (warnings can be\nsuppressed with the \\fB\\-n\\fP option)\n\n\n",
                    "rendered": {
                      "text": "time.  With those commands, \\fBrlwrap\\fP will appear to \"do nothing\".\nTherefore, if \\fBrlwrap\\fP is in direct mode when the user presses\nENTER for the first time it will give a warning that it needs\n\\fB\\-\\-always\\-readline\\fP to do anything at all (warnings can be\nsuppressed with the \\fB\\-n\\fP option)\n\n\n",
                      "markdown": "`time.  With those commands, \\fBrlwrap\\fP will appear to \"do nothing\".\nTherefore, if \\fBrlwrap\\fP is in direct mode when the user presses\nENTER for the first time it will give a warning that it needs\n\\fB\\-\\-always\\-readline\\fP to do anything at all (warnings can be\nsuppressed with the \\fB\\-n\\fP option)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 92,
                  "endLine": 227,
                  "endColumn": 101,
                  "snippet": {
                    "text": "\n.TP\n.OL \\-t \\-\\-set\\-term\\-name \\fIname\\fP\nSet \\fIcommand\\fP's TERM to \\fIname\\fP. Programs that confuse \\fBrlwrap\\fP with fancy screen control codes can sometimes be tamed by specifying \\fB\\-t dumb\\fP \n\n.TP\n.OL \\-U \\-\\-mirror-arguments\n",
                    "rendered": {
                      "text": "\n.TP\n.OL \\-t \\-\\-set\\-term\\-name \\fIname\\fP\nSet \\fIcommand\\fP's TERM to \\fIname\\fP. Programs that confuse \\fBrlwrap\\fP with fancy screen control codes can sometimes be tamed by specifying \\fB\\-t dumb\\fP \n\n.TP\n.OL \\-U \\-\\-mirror-arguments\n",
                      "markdown": "`\n.TP\n.OL \\-t \\-\\-set\\-term\\-name \\fIname\\fP\nSet \\fIcommand\\fP's TERM to \\fIname\\fP. Programs that confuse \\fBrlwrap\\fP with fancy screen control codes can sometimes be tamed by specifying \\fB\\-t dumb\\fP \n\n.TP\n.OL \\-U \\-\\-mirror-arguments\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 54,
                  "endLine": 64,
                  "endColumn": 58,
                  "snippet": {
                    "text": ".TP\n.OB \\-A \\-\\-ansi\\-colour\\-aware \\fI!\\fP \nPrompts that use colour, or use other CSI codes to e.g. set window titles or\nenable bracketed-paste will confuse rlwrap, especially at the end of\nlong input lines. This option will usually (but by no means always) make rlwrap better behaved in such\ncases.\n\n",
                    "rendered": {
                      "text": ".TP\n.OB \\-A \\-\\-ansi\\-colour\\-aware \\fI!\\fP \nPrompts that use colour, or use other CSI codes to e.g. set window titles or\nenable bracketed-paste will confuse rlwrap, especially at the end of\nlong input lines. This option will usually (but by no means always) make rlwrap better behaved in such\ncases.\n\n",
                      "markdown": "`.TP\n.OB \\-A \\-\\-ansi\\-colour\\-aware \\fI!\\fP \nPrompts that use colour, or use other CSI codes to e.g. set window titles or\nenable bracketed-paste will confuse rlwrap, especially at the end of\nlong input lines. This option will usually (but by no means always) make rlwrap better behaved in such\ncases.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 37,
                  "endLine": 63,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n.TP\n.OB \\-A \\-\\-ansi\\-colour\\-aware \\fI!\\fP \nPrompts that use colour, or use other CSI codes to e.g. set window titles or\nenable bracketed-paste will confuse rlwrap, especially at the end of\nlong input lines. This option will usually (but by no means always) make rlwrap better behaved in such\ncases.\n",
                    "rendered": {
                      "text": "\n.TP\n.OB \\-A \\-\\-ansi\\-colour\\-aware \\fI!\\fP \nPrompts that use colour, or use other CSI codes to e.g. set window titles or\nenable bracketed-paste will confuse rlwrap, especially at the end of\nlong input lines. This option will usually (but by no means always) make rlwrap better behaved in such\ncases.\n",
                      "markdown": "`\n.TP\n.OB \\-A \\-\\-ansi\\-colour\\-aware \\fI!\\fP \nPrompts that use colour, or use other CSI codes to e.g. set window titles or\nenable bracketed-paste will confuse rlwrap, especially at the end of\nlong input lines. This option will usually (but by no means always) make rlwrap better behaved in such\ncases.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 527,
                  "startColumn": 22,
                  "endLine": 527,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n\n.SH VERSION\nThis manpage documents rlwrap version 0.46.1\n.SH AUTHORS\n\nThe GNU Readline library (written by Brian Fox and Chet Ramey) does\n",
                    "rendered": {
                      "text": "\n\n.SH VERSION\nThis manpage documents rlwrap version 0.46.1\n.SH AUTHORS\n\nThe GNU Readline library (written by Brian Fox and Chet Ramey) does\n",
                      "markdown": "`\n\n.SH VERSION\nThis manpage documents rlwrap version 0.46.1\n.SH AUTHORS\n\nThe GNU Readline library (written by Brian Fox and Chet Ramey) does\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 453,
                  "startColumn": 50,
                  "endLine": 453,
                  "endColumn": 58,
                  "snippet": {
                    "text": "When the standard input is not a terminal (or when run inside an emacs\nbuffer), editing input doesn't make sense, so \\fBrlwrap\\fP\nwill ignore all options and simply execute \\fIcommand\\fP in place of\nitself. When stdout (or stderr) is not a terminal, rlwrap will\nre\\-open it to /dev/tty (the users terminal) after it has started\n\\fIcommand\\fP, so that \\fIcommand\\fP's output is redirected as\nexpected, but keyboard input and \\fBrlwrap\\fP error messages are still\n",
                    "rendered": {
                      "text": "When the standard input is not a terminal (or when run inside an emacs\nbuffer), editing input doesn't make sense, so \\fBrlwrap\\fP\nwill ignore all options and simply execute \\fIcommand\\fP in place of\nitself. When stdout (or stderr) is not a terminal, rlwrap will\nre\\-open it to /dev/tty (the users terminal) after it has started\n\\fIcommand\\fP, so that \\fIcommand\\fP's output is redirected as\nexpected, but keyboard input and \\fBrlwrap\\fP error messages are still\n",
                      "markdown": "`When the standard input is not a terminal (or when run inside an emacs\nbuffer), editing input doesn't make sense, so \\fBrlwrap\\fP\nwill ignore all options and simply execute \\fIcommand\\fP in place of\nitself. When stdout (or stderr) is not a terminal, rlwrap will\nre\\-open it to /dev/tty (the users terminal) after it has started\n\\fIcommand\\fP, so that \\fIcommand\\fP's output is redirected as\nexpected, but keyboard input and \\fBrlwrap\\fP error messages are still\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 450,
                  "startColumn": 64,
                  "endLine": 451,
                  "snippet": {
                    "text": "would have seen without \\fBrlwrap\\fP. \n\n.SH REDIRECTION\nWhen the standard input is not a terminal (or when run inside an emacs\nbuffer), editing input doesn't make sense, so \\fBrlwrap\\fP\nwill ignore all options and simply execute \\fIcommand\\fP in place of\nitself. When stdout (or stderr) is not a terminal, rlwrap will\nre\\-open it to /dev/tty (the users terminal) after it has started\n",
                    "rendered": {
                      "text": "would have seen without \\fBrlwrap\\fP. \n\n.SH REDIRECTION\nWhen the standard input is not a terminal (or when run inside an emacs\nbuffer), editing input doesn't make sense, so \\fBrlwrap\\fP\nwill ignore all options and simply execute \\fIcommand\\fP in place of\nitself. When stdout (or stderr) is not a terminal, rlwrap will\nre\\-open it to /dev/tty (the users terminal) after it has started\n",
                      "markdown": "`would have seen without \\fBrlwrap\\fP. \n\n.SH REDIRECTION\nWhen the standard input is not a terminal (or when run inside an emacs\nbuffer), editing input doesn't make sense, so \\fBrlwrap\\fP\nwill ignore all options and simply execute \\fIcommand\\fP in place of\nitself. When stdout (or stderr) is not a terminal, rlwrap will\nre\\-open it to /dev/tty (the users terminal) after it has started\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 32,
                  "endLine": 442,
                  "endColumn": 40,
                  "snippet": {
                    "text": "If \\fIcommand\\fP changes the keystrokes that send a particular signal\nfrom the keyboard (like emacs, which uses CTRL\\-G instead of CTRL\\-C)\n\\fBrlwrap\\fP will do the same (but only after the next keystroke - use the \n\\fB\\-\\-polling\\fP option to make rlwrap more transparent in this respect)\n\nWhen \\fIcommand\\fP is killed by a signal, \\fBrlwrap\\fP will clean up,\nreset its signal handlers an then commit suicide by sending the same\n",
                    "rendered": {
                      "text": "If \\fIcommand\\fP changes the keystrokes that send a particular signal\nfrom the keyboard (like emacs, which uses CTRL\\-G instead of CTRL\\-C)\n\\fBrlwrap\\fP will do the same (but only after the next keystroke - use the \n\\fB\\-\\-polling\\fP option to make rlwrap more transparent in this respect)\n\nWhen \\fIcommand\\fP is killed by a signal, \\fBrlwrap\\fP will clean up,\nreset its signal handlers an then commit suicide by sending the same\n",
                      "markdown": "`If \\fIcommand\\fP changes the keystrokes that send a particular signal\nfrom the keyboard (like emacs, which uses CTRL\\-G instead of CTRL\\-C)\n\\fBrlwrap\\fP will do the same (but only after the next keystroke - use the \n\\fB\\-\\-polling\\fP option to make rlwrap more transparent in this respect)\n\nWhen \\fIcommand\\fP is killed by a signal, \\fBrlwrap\\fP will clean up,\nreset its signal handlers an then commit suicide by sending the same\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 101,
                  "endLine": 348,
                  "endColumn": 109,
                  "snippet": {
                    "text": "d, replacing it with a \"cooked\" version after the wait\ntime. This is called \"impatient\" mode. If you don't like the flashing\neffect (which can become annoying when you \"cook\" the prompt heavily) you\ncan put \\fBrlwrap\\fP in \"patient mode\" by specifying a negative value with \\fB\\-w\\fP (e.g. \\-w \\-40). Rlwrap \nwill then hold back the prompt and only print if after cooking.\nIf prompts always match some regular expression you can specify \"confident mode\" with \\fB--only-cook='!<regexp>'\\fP (note the exclamation mark).\nThen all candidate prompts that match (and only those) will be cooked immediately. They wi",
                    "rendered": {
                      "text": "d, replacing it with a \"cooked\" version after the wait\ntime. This is called \"impatient\" mode. If you don't like the flashing\neffect (which can become annoying when you \"cook\" the prompt heavily) you\ncan put \\fBrlwrap\\fP in \"patient mode\" by specifying a negative value with \\fB\\-w\\fP (e.g. \\-w \\-40). Rlwrap \nwill then hold back the prompt and only print if after cooking.\nIf prompts always match some regular expression you can specify \"confident mode\" with \\fB--only-cook='!<regexp>'\\fP (note the exclamation mark).\nThen all candidate prompts that match (and only those) will be cooked immediately. They wi",
                      "markdown": "`d, replacing it with a \"cooked\" version after the wait\ntime. This is called \"impatient\" mode. If you don't like the flashing\neffect (which can become annoying when you \"cook\" the prompt heavily) you\ncan put \\fBrlwrap\\fP in \"patient mode\" by specifying a negative value with \\fB\\-w\\fP (e.g. \\-w \\-40). Rlwrap \nwill then hold back the prompt and only print if after cooking.\nIf prompts always match some regular expression you can specify \"confident mode\" with \\fB--only-cook='!<regexp>'\\fP (note the exclamation mark).\nThen all candidate prompts that match (and only those) will be cooked immediately. They wi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 19,
                  "endLine": 331,
                  "endColumn": 25,
                  "snippet": {
                    "text": "commands have their own line editor and hence use raw mode all the\ntime.  With those commands, \\fBrlwrap\\fP will appear to \"do nothing\".\nTherefore, if \\fBrlwrap\\fP is in direct mode when the user presses\nENTER for the first time it will give a warning that it needs\n\\fB\\-\\-always\\-readline\\fP to do anything at all (warnings can be\nsuppressed with the \\fB\\-n\\fP option)\n\n",
                    "rendered": {
                      "text": "commands have their own line editor and hence use raw mode all the\ntime.  With those commands, \\fBrlwrap\\fP will appear to \"do nothing\".\nTherefore, if \\fBrlwrap\\fP is in direct mode when the user presses\nENTER for the first time it will give a warning that it needs\n\\fB\\-\\-always\\-readline\\fP to do anything at all (warnings can be\nsuppressed with the \\fB\\-n\\fP option)\n\n",
                      "markdown": "`commands have their own line editor and hence use raw mode all the\ntime.  With those commands, \\fBrlwrap\\fP will appear to \"do nothing\".\nTherefore, if \\fBrlwrap\\fP is in direct mode when the user presses\nENTER for the first time it will give a warning that it needs\n\\fB\\-\\-always\\-readline\\fP to do anything at all (warnings can be\nsuppressed with the \\fB\\-n\\fP option)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 2,
                  "endLine": 295,
                  "endColumn": 10,
                  "snippet": {
                    "text": ".B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n.TP \nWrap \\fBgauche\\fP (a Scheme interpreter) with a bold blue prompt, enable multi\\-line editing (using .scm as filename extension) and don't consider single quotes as quotes (so that the parentheses in e.g. (print 'q) match)  \n.B rlwrap\\ \\-pBlue \\-m\\ \\-M\\ .scm\\ \\-q'\"' gosh     \"\n",
                    "rendered": {
                      "text": ".B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n.TP \nWrap \\fBgauche\\fP (a Scheme interpreter) with a bold blue prompt, enable multi\\-line editing (using .scm as filename extension) and don't consider single quotes as quotes (so that the parentheses in e.g. (print 'q) match)  \n.B rlwrap\\ \\-pBlue \\-m\\ \\-M\\ .scm\\ \\-q'\"' gosh     \"\n",
                      "markdown": "`.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n.TP \nWrap \\fBgauche\\fP (a Scheme interpreter) with a bold blue prompt, enable multi\\-line editing (using .scm as filename extension) and don't consider single quotes as quotes (so that the parentheses in e.g. (print 'q) match)  \n.B rlwrap\\ \\-pBlue \\-m\\ \\-M\\ .scm\\ \\-q'\"' gosh     \"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 29,
                  "endLine": 292,
                  "endColumn": 40,
                  "snippet": {
                    "text": ".B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n",
                    "rendered": {
                      "text": ".B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n",
                      "markdown": "`.B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\nWrap \\fIsensitive_app\\fP, hide password from \\fBps\\fP (if \\fIsensitive_app\\fP does so) and keep all input that starts with a space out of history:\n.B rlwrap -g '^ ' -U sensitive_app --password MySeCrEt\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 10,
                  "endLine": 290,
                  "snippet": {
                    "text": ".SH EXAMPLES\n.TP 3\nRun \\fBnc\\fP (netcat) with command\\-line editing and history\n.B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\n",
                    "rendered": {
                      "text": ".SH EXAMPLES\n.TP 3\nRun \\fBnc\\fP (netcat) with command\\-line editing and history\n.B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\n",
                      "markdown": "`.SH EXAMPLES\n.TP 3\nRun \\fBnc\\fP (netcat) with command\\-line editing and history\n.B rlwrap\\ nc\n.TP\nWrap \\fBsmbclient\\fP (which uses readline itself), keep passwords out of the history and don't interfere with pagers (like \\fBless\\fP) called by smbclient.\n.B rlwrap\\ \\-aPassword:\\ \\-N\\ smbclient //PEANUT/C\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 49,
                  "endLine": 281,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\nwill color all occurrences of \"error\" (or \"Error\")  in \\fIcommand\\fP's output, while\n\n    rlwrap \\-z 'makefilter --message-type history sed -e s\"/whisky/lemonade/\"' command\n\nsanitises your drinking history. Both filters can be combined using the \\fBpipeline\\fP filter, of course.\n\n",
                    "rendered": {
                      "text": "\nwill color all occurrences of \"error\" (or \"Error\")  in \\fIcommand\\fP's output, while\n\n    rlwrap \\-z 'makefilter --message-type history sed -e s\"/whisky/lemonade/\"' command\n\nsanitises your drinking history. Both filters can be combined using the \\fBpipeline\\fP filter, of course.\n\n",
                      "markdown": "`\nwill color all occurrences of \"error\" (or \"Error\")  in \\fIcommand\\fP's output, while\n\n    rlwrap \\-z 'makefilter --message-type history sed -e s\"/whisky/lemonade/\"' command\n\nsanitises your drinking history. Both filters can be combined using the \\fBpipeline\\fP filter, of course.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 3,
                  "endLine": 281,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nwill color all occurrences of \"error\" (or \"Error\")  in \\fIcommand\\fP's output, while\n\n    rlwrap \\-z 'makefilter --message-type history sed -e s\"/whisky/lemonade/\"' command\n\nsanitises your drinking history. Both filters can be combined using the \\fBpipeline\\fP filter, of course.\n\n",
                    "rendered": {
                      "text": "\nwill color all occurrences of \"error\" (or \"Error\")  in \\fIcommand\\fP's output, while\n\n    rlwrap \\-z 'makefilter --message-type history sed -e s\"/whisky/lemonade/\"' command\n\nsanitises your drinking history. Both filters can be combined using the \\fBpipeline\\fP filter, of course.\n\n",
                      "markdown": "`\nwill color all occurrences of \"error\" (or \"Error\")  in \\fIcommand\\fP's output, while\n\n    rlwrap \\-z 'makefilter --message-type history sed -e s\"/whisky/lemonade/\"' command\n\nsanitises your drinking history. Both filters can be combined using the \\fBpipeline\\fP filter, of course.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 3,
                  "endLine": 277,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nAs filters have to follow a special protocol, shell commands like \\fBsed\\fP and \\fBgrep\\fP cannot be used as \\fBrwlrap\\fP filters. They can, however, be converted into filters by the \\fBmakefilter\\fP filter:\n\n    rlwrap \\-z 'makefilter egrep \\-i \\-\\-color \"error|$\"' command\n\nwill color all occurrences of \"error\" (or \"Error\")  in \\fIcommand\\fP's output, while\n\n",
                    "rendered": {
                      "text": "\nAs filters have to follow a special protocol, shell commands like \\fBsed\\fP and \\fBgrep\\fP cannot be used as \\fBrwlrap\\fP filters. They can, however, be converted into filters by the \\fBmakefilter\\fP filter:\n\n    rlwrap \\-z 'makefilter egrep \\-i \\-\\-color \"error|$\"' command\n\nwill color all occurrences of \"error\" (or \"Error\")  in \\fIcommand\\fP's output, while\n\n",
                      "markdown": "`\nAs filters have to follow a special protocol, shell commands like \\fBsed\\fP and \\fBgrep\\fP cannot be used as \\fBrwlrap\\fP filters. They can, however, be converted into filters by the \\fBmakefilter\\fP filter:\n\n    rlwrap \\-z 'makefilter egrep \\-i \\-\\-color \"error|$\"' command\n\nwill color all occurrences of \"error\" (or \"Error\")  in \\fIcommand\\fP's output, while\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 3,
                  "endLine": 269,
                  "endColumn": 11,
                  "snippet": {
                    "text": ".nf\n\n    rlwrap \\-z 'some_filter args' command ...\n    rlwrap \\-z 'pipeline filter1 ... : filter2 ... : ...' command ... \n    \n.fi\n\n",
                    "rendered": {
                      "text": ".nf\n\n    rlwrap \\-z 'some_filter args' command ...\n    rlwrap \\-z 'pipeline filter1 ... : filter2 ... : ...' command ... \n    \n.fi\n\n",
                      "markdown": "`.nf\n\n    rlwrap \\-z 'some_filter args' command ...\n    rlwrap \\-z 'pipeline filter1 ... : filter2 ... : ...' command ... \n    \n.fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 3,
                  "endLine": 268,
                  "endColumn": 11,
                  "snippet": {
                    "text": "If \\fIsome_filter\\fP needs arguments, you should quote the whole filter command line: \n.nf\n\n    rlwrap \\-z 'some_filter args' command ...\n    rlwrap \\-z 'pipeline filter1 ... : filter2 ... : ...' command ... \n    \n.fi\n",
                    "rendered": {
                      "text": "If \\fIsome_filter\\fP needs arguments, you should quote the whole filter command line: \n.nf\n\n    rlwrap \\-z 'some_filter args' command ...\n    rlwrap \\-z 'pipeline filter1 ... : filter2 ... : ...' command ... \n    \n.fi\n",
                      "markdown": "`If \\fIsome_filter\\fP needs arguments, you should quote the whole filter command line: \n.nf\n\n    rlwrap \\-z 'some_filter args' command ...\n    rlwrap \\-z 'pipeline filter1 ... : filter2 ... : ...' command ... \n    \n.fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 3,
                  "endLine": 260,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nlists all currently installed filters, while\n\n    rlwrap \\-z some_filter\n\ndisplays information about \\fIsome_filter\\fP\n\n",
                    "rendered": {
                      "text": "\nlists all currently installed filters, while\n\n    rlwrap \\-z some_filter\n\ndisplays information about \\fIsome_filter\\fP\n\n",
                      "markdown": "`\nlists all currently installed filters, while\n\n    rlwrap \\-z some_filter\n\ndisplays information about \\fIsome_filter\\fP\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 3,
                  "endLine": 256,
                  "endColumn": 11,
                  "snippet": {
                    "text": "to change the prompt, to implement simple macros, programmable hotkeys for e.g. fuzzy history search, and programmable completion. \\fBrlwrap\\fP comes with a \\fBperl\\fP and a \\fBpython\\fP module\nto make filter writing easy. (cf. \\fBRlwrapFilter(3pm)\\fP for the perl module, the python one is very similar) A number of example filters are installed in the directory /usr/share/rlwrap/filters.\n\n    rlwrap \\-z listing\n\nlists all currently installed filters, while\n\n",
                    "rendered": {
                      "text": "to change the prompt, to implement simple macros, programmable hotkeys for e.g. fuzzy history search, and programmable completion. \\fBrlwrap\\fP comes with a \\fBperl\\fP and a \\fBpython\\fP module\nto make filter writing easy. (cf. \\fBRlwrapFilter(3pm)\\fP for the perl module, the python one is very similar) A number of example filters are installed in the directory /usr/share/rlwrap/filters.\n\n    rlwrap \\-z listing\n\nlists all currently installed filters, while\n\n",
                      "markdown": "`to change the prompt, to implement simple macros, programmable hotkeys for e.g. fuzzy history search, and programmable completion. \\fBrlwrap\\fP comes with a \\fBperl\\fP and a \\fBpython\\fP module\nto make filter writing easy. (cf. \\fBRlwrapFilter(3pm)\\fP for the perl module, the python one is very similar) A number of example filters are installed in the directory /usr/share/rlwrap/filters.\n\n    rlwrap \\-z listing\n\nlists all currently installed filters, while\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 65,
                  "endLine": 254,
                  "endColumn": 71,
                  "snippet": {
                    "text": ".OL \\-z \\-\\-filter \\fIsome_filter\\fP\nUse \\fIsome_filter\\fP to change \\fBrlwrap\\fP's behaviour. Filters can be used to keep certain input out of the history, \nto change the prompt, to implement simple macros, programmable hotkeys for e.g. fuzzy history search, and programmable completion. \\fBrlwrap\\fP comes with a \\fBperl\\fP and a \\fBpython\\fP module\nto make filter writing easy. (cf. \\fBRlwrapFilter(3pm)\\fP for the perl module, the python one is very similar) A number of example filters are installed in the directory /usr/share/rlwrap/filters.\n\n    rlwrap \\-z listing\n\n",
                    "rendered": {
                      "text": ".OL \\-z \\-\\-filter \\fIsome_filter\\fP\nUse \\fIsome_filter\\fP to change \\fBrlwrap\\fP's behaviour. Filters can be used to keep certain input out of the history, \nto change the prompt, to implement simple macros, programmable hotkeys for e.g. fuzzy history search, and programmable completion. \\fBrlwrap\\fP comes with a \\fBperl\\fP and a \\fBpython\\fP module\nto make filter writing easy. (cf. \\fBRlwrapFilter(3pm)\\fP for the perl module, the python one is very similar) A number of example filters are installed in the directory /usr/share/rlwrap/filters.\n\n    rlwrap \\-z listing\n\n",
                      "markdown": "`.OL \\-z \\-\\-filter \\fIsome_filter\\fP\nUse \\fIsome_filter\\fP to change \\fBrlwrap\\fP's behaviour. Filters can be used to keep certain input out of the history, \nto change the prompt, to implement simple macros, programmable hotkeys for e.g. fuzzy history search, and programmable completion. \\fBrlwrap\\fP comes with a \\fBperl\\fP and a \\fBpython\\fP module\nto make filter writing easy. (cf. \\fBRlwrapFilter(3pm)\\fP for the perl module, the python one is very similar) A number of example filters are installed in the directory /usr/share/rlwrap/filters.\n\n    rlwrap \\-z listing\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 6,
                  "endLine": 244,
                  "endColumn": 14,
                  "snippet": {
                    "text": "s after receiving it.\nOnly when no more output has arrived, it is cooked (coloured, filtered and/or replaced by a substitute prompt) and displayed as a prompt.\nBefore this the prompt is displayed \"uncooked\". Most users won't notice, but heavy cookers can prepend the timeout with a minus sign,\nmaking rlwrap hold back the prompt until it has been cooked (\"patient mode\"). This will prevent flashing of the prompt, but it will also interfere with long output lines and make switches from direct to readline mode less reliable. Default timeout: 40 ms \n\n.TP\n.OL \\-W \\-\\-polling \nEXPERIMENTAL: Wake up every \\fIt",
                    "rendered": {
                      "text": "s after receiving it.\nOnly when no more output has arrived, it is cooked (coloured, filtered and/or replaced by a substitute prompt) and displayed as a prompt.\nBefore this the prompt is displayed \"uncooked\". Most users won't notice, but heavy cookers can prepend the timeout with a minus sign,\nmaking rlwrap hold back the prompt until it has been cooked (\"patient mode\"). This will prevent flashing of the prompt, but it will also interfere with long output lines and make switches from direct to readline mode less reliable. Default timeout: 40 ms \n\n.TP\n.OL \\-W \\-\\-polling \nEXPERIMENTAL: Wake up every \\fIt",
                      "markdown": "`s after receiving it.\nOnly when no more output has arrived, it is cooked (coloured, filtered and/or replaced by a substitute prompt) and displayed as a prompt.\nBefore this the prompt is displayed \"uncooked\". Most users won't notice, but heavy cookers can prepend the timeout with a minus sign,\nmaking rlwrap hold back the prompt until it has been cooked (\"patient mode\"). This will prevent flashing of the prompt, but it will also interfere with long output lines and make switches from direct to readline mode less reliable. Default timeout: 40 ms \n\n.TP\n.OL \\-W \\-\\-polling \nEXPERIMENTAL: Wake up every \\fIt`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 106,
                  "endLine": 243,
                  "endColumn": 115,
                  "snippet": {
                    "text": "fP waits \\fItimeout\\fP milliseconds after receiving it.\nOnly when no more output has arrived, it is cooked (coloured, filtered and/or replaced by a substitute prompt) and displayed as a prompt.\nBefore this the prompt is displayed \"uncooked\". Most users won't notice, but heavy cookers can prepend the timeout with a minus sign,\nmaking rlwrap hold back the prompt until it has been cooked (\"patient mode\"). This will prevent flashing of the prompt, but it will also interfere with long output lines and make switches from direct to readline mode less reliable. Default timeout: 40 ms \n\n.TP\n.OL \\-W \\-\\-polling ",
                    "rendered": {
                      "text": "fP waits \\fItimeout\\fP milliseconds after receiving it.\nOnly when no more output has arrived, it is cooked (coloured, filtered and/or replaced by a substitute prompt) and displayed as a prompt.\nBefore this the prompt is displayed \"uncooked\". Most users won't notice, but heavy cookers can prepend the timeout with a minus sign,\nmaking rlwrap hold back the prompt until it has been cooked (\"patient mode\"). This will prevent flashing of the prompt, but it will also interfere with long output lines and make switches from direct to readline mode less reliable. Default timeout: 40 ms \n\n.TP\n.OL \\-W \\-\\-polling ",
                      "markdown": "`fP waits \\fItimeout\\fP milliseconds after receiving it.\nOnly when no more output has arrived, it is cooked (coloured, filtered and/or replaced by a substitute prompt) and displayed as a prompt.\nBefore this the prompt is displayed \"uncooked\". Most users won't notice, but heavy cookers can prepend the timeout with a minus sign,\nmaking rlwrap hold back the prompt until it has been cooked (\"patient mode\"). This will prevent flashing of the prompt, but it will also interfere with long output lines and make switches from direct to readline mode less reliable. Default timeout: 40 ms \n\n.TP\n.OL \\-W \\-\\-polling `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 5,
                  "endLine": 237,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n.TP\n.OL \\-v \\-\\-version\nPrint rlwrap version.\n\n.TP\n.OL \\-w \\-\\-wait\\-before\\-prompt \\fItimeout\\fP\n",
                    "rendered": {
                      "text": "\n.TP\n.OL \\-v \\-\\-version\nPrint rlwrap version.\n\n.TP\n.OL \\-w \\-\\-wait\\-before\\-prompt \\fItimeout\\fP\n",
                      "markdown": "`\n.TP\n.OL \\-v \\-\\-version\nPrint rlwrap version.\n\n.TP\n.OL \\-w \\-\\-wait\\-before\\-prompt \\fItimeout\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 85,
                  "endLine": 227,
                  "endColumn": 93,
                  "snippet": {
                    "text": "\n.TP\n.OL \\-t \\-\\-set\\-term\\-name \\fIname\\fP\nSet \\fIcommand\\fP's TERM to \\fIname\\fP. Programs that confuse \\fBrlwrap\\fP with fancy screen control codes can sometimes be tamed by specifying \\fB\\-t dumb\\fP \n\n.TP\n.OL \\-U \\-\\-mirror-arguments\n",
                    "rendered": {
                      "text": "\n.TP\n.OL \\-t \\-\\-set\\-term\\-name \\fIname\\fP\nSet \\fIcommand\\fP's TERM to \\fIname\\fP. Programs that confuse \\fBrlwrap\\fP with fancy screen control codes can sometimes be tamed by specifying \\fB\\-t dumb\\fP \n\n.TP\n.OL \\-U \\-\\-mirror-arguments\n",
                      "markdown": "`\n.TP\n.OL \\-t \\-\\-set\\-term\\-name \\fIname\\fP\nSet \\fIcommand\\fP's TERM to \\fIname\\fP. Programs that confuse \\fBrlwrap\\fP with fancy screen control codes can sometimes be tamed by specifying \\fB\\-t dumb\\fP \n\n.TP\n.OL \\-U \\-\\-mirror-arguments\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 59,
                  "endLine": 191,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\\fIcommand\\fP. An uppercase colour name (\\fIYellow\\fP or \\fIYELLOW\\fP ) gives a bold prompt. Prompts that already contain\n(colour) escape sequences or one of the readline \"ignore markers\" (ASCII 0x01 and 0x02) are not coloured. This option implies \\-\\-ansi\\-colour\\-aware.\nYou can also use a \\fIcolour spec\\fP of the form\n<attr>;<fg>[;<bg>], for example  \\-p'1;31' will give a bold red prompt on the\ncurrent background (this is the default when no argument is\ngiven). Google for 'ANSI color' to learn more about colour codes.\n.OA \\-p \\-\\-prompt\\-colour 'Red' 'Red'\n",
                    "rendered": {
                      "text": "\\fIcommand\\fP. An uppercase colour name (\\fIYellow\\fP or \\fIYELLOW\\fP ) gives a bold prompt. Prompts that already contain\n(colour) escape sequences or one of the readline \"ignore markers\" (ASCII 0x01 and 0x02) are not coloured. This option implies \\-\\-ansi\\-colour\\-aware.\nYou can also use a \\fIcolour spec\\fP of the form\n<attr>;<fg>[;<bg>], for example  \\-p'1;31' will give a bold red prompt on the\ncurrent background (this is the default when no argument is\ngiven). Google for 'ANSI color' to learn more about colour codes.\n.OA \\-p \\-\\-prompt\\-colour 'Red' 'Red'\n",
                      "markdown": "`\\fIcommand\\fP. An uppercase colour name (\\fIYellow\\fP or \\fIYELLOW\\fP ) gives a bold prompt. Prompts that already contain\n(colour) escape sequences or one of the readline \"ignore markers\" (ASCII 0x01 and 0x02) are not coloured. This option implies \\-\\-ansi\\-colour\\-aware.\nYou can also use a \\fIcolour spec\\fP of the form\n<attr>;<fg>[;<bg>], for example  \\-p'1;31' will give a bold red prompt on the\ncurrent background (this is the default when no argument is\ngiven). Google for 'ANSI color' to learn more about colour codes.\n.OA \\-p \\-\\-prompt\\-colour 'Red' 'Red'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 11,
                  "endLine": 106,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n.TP\n.OL \\-e \\-\\-extra-char-after-completion \\fIchar\\fP\nBy default, rlwrap appends a space after any inserted completion text. Use this \noption to change this to '' (don't insert anything) or some other character.\n\n.TP\n",
                    "rendered": {
                      "text": "\n.TP\n.OL \\-e \\-\\-extra-char-after-completion \\fIchar\\fP\nBy default, rlwrap appends a space after any inserted completion text. Use this \noption to change this to '' (don't insert anything) or some other character.\n\n.TP\n",
                      "markdown": "`\n.TP\n.OL \\-e \\-\\-extra-char-after-completion \\fIchar\\fP\nBy default, rlwrap appends a space after any inserted completion text. Use this \noption to change this to '' (don't insert anything) or some other character.\n\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 79,
                  "endLine": 79,
                  "endColumn": 86,
                  "snippet": {
                    "text": "always word\\-breaking). This determines what is considered a \"word\",\nboth when completing and when building a completion word list from\nfiles specified by \\fB\\-f\\fP options following (not preceding!) it.\nDefault list (){}[],'+\\-=&^%$#@\";|\\\\ Unless \\-c is specified, \\\" \"quote to keep emacs happy\n/ and \\. (period) are included in the default list.\n\n.TP\n",
                    "rendered": {
                      "text": "always word\\-breaking). This determines what is considered a \"word\",\nboth when completing and when building a completion word list from\nfiles specified by \\fB\\-f\\fP options following (not preceding!) it.\nDefault list (){}[],'+\\-=&^%$#@\";|\\\\ Unless \\-c is specified, \\\" \"quote to keep emacs happy\n/ and \\. (period) are included in the default list.\n\n.TP\n",
                      "markdown": "`always word\\-breaking). This determines what is considered a \"word\",\nboth when completing and when building a completion word list from\nfiles specified by \\fB\\-f\\fP options following (not preceding!) it.\nDefault list (){}[],'+\\-=&^%$#@\";|\\\\ Unless \\-c is specified, \\\" \"quote to keep emacs happy\n/ and \\. (period) are included in the default list.\n\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 72,
                  "endLine": 65,
                  "endColumn": 80,
                  "snippet": {
                    "text": ".OB \\-A \\-\\-ansi\\-colour\\-aware \\fI!\\fP \nPrompts that use colour, or use other CSI codes to e.g. set window titles or\nenable bracketed-paste will confuse rlwrap, especially at the end of\nlong input lines. This option will usually (but by no means always) make rlwrap better behaved in such\ncases.\n\nGiving '!' as an argument will make \\fBrlwrap\\fP remove all color codes\n",
                    "rendered": {
                      "text": ".OB \\-A \\-\\-ansi\\-colour\\-aware \\fI!\\fP \nPrompts that use colour, or use other CSI codes to e.g. set window titles or\nenable bracketed-paste will confuse rlwrap, especially at the end of\nlong input lines. This option will usually (but by no means always) make rlwrap better behaved in such\ncases.\n\nGiving '!' as an argument will make \\fBrlwrap\\fP remove all color codes\n",
                      "markdown": "`.OB \\-A \\-\\-ansi\\-colour\\-aware \\fI!\\fP \nPrompts that use colour, or use other CSI codes to e.g. set window titles or\nenable bracketed-paste will confuse rlwrap, especially at the end of\nlong input lines. This option will usually (but by no means always) make rlwrap better behaved in such\ncases.\n\nGiving '!' as an argument will make \\fBrlwrap\\fP remove all color codes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 7,
                  "endLine": 53,
                  "endColumn": 15,
                  "snippet": {
                    "text": "If \\fBrlwrap\\fP \"does nothing\" this is the option to use, as \\fIcommand\\fP is apparently already\ndoing its own line editing. \n\\fBNB\\fP: With this\noption, rlwrap will echo (and save) passwords, unless you give \\fIcommand\\fP's\npassword prompt as an argument.\n\n.OA \\-a \\-\\-always\\-readline  Password:  brumbleslurgh\n",
                    "rendered": {
                      "text": "If \\fBrlwrap\\fP \"does nothing\" this is the option to use, as \\fIcommand\\fP is apparently already\ndoing its own line editing. \n\\fBNB\\fP: With this\noption, rlwrap will echo (and save) passwords, unless you give \\fIcommand\\fP's\npassword prompt as an argument.\n\n.OA \\-a \\-\\-always\\-readline  Password:  brumbleslurgh\n",
                      "markdown": "`If \\fBrlwrap\\fP \"does nothing\" this is the option to use, as \\fIcommand\\fP is apparently already\ndoing its own line editing. \n\\fBNB\\fP: With this\noption, rlwrap will echo (and save) passwords, unless you give \\fIcommand\\fP's\npassword prompt as an argument.\n\n.OA \\-a \\-\\-always\\-readline  Password:  brumbleslurgh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 2,
                  "endLine": 27,
                  "snippet": {
                    "text": "..\n\n.SH SYNOPSIS\n.B rlwrap\n.I [rlwrap\\-options]\n.I command \\.\\.\\.\n.SH DESCRIPTION\n\\fBrlwrap\\fP runs the specified \\fIcommand\\fP, intercepting user input\n",
                    "rendered": {
                      "text": "..\n\n.SH SYNOPSIS\n.B rlwrap\n.I [rlwrap\\-options]\n.I command \\.\\.\\.\n.SH DESCRIPTION\n\\fBrlwrap\\fP runs the specified \\fIcommand\\fP, intercepting user input\n",
                      "markdown": "`..\n\n.SH SYNOPSIS\n.B rlwrap\n.I [rlwrap\\-options]\n.I command \\.\\.\\.\n.SH DESCRIPTION\n\\fBrlwrap\\fP runs the specified \\fIcommand\\fP, intercepting user input\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 8,
                  "endLine": 3,
                  "endColumn": 7,
                  "snippet": {
                    "text": ".TH rlwrap 1 \"October 20, 2022\"\n.SH NAME\nrlwrap \\- readline wrapper\n.de OP\n.ie \\\\n(.$-1 .RI \"[\\ \\fB\\\\$1\\fP \" \"\\\\$2\" \"\\ ]\"\n.el .RB \"[\\ \" \"\\\\$1\" \"\\ ]\"\n",
                    "rendered": {
                      "text": ".TH rlwrap 1 \"October 20, 2022\"\n.SH NAME\nrlwrap \\- readline wrapper\n.de OP\n.ie \\\\n(.$-1 .RI \"[\\ \\fB\\\\$1\\fP \" \"\\\\$2\" \"\\ ]\"\n.el .RB \"[\\ \" \"\\\\$1\" \"\\ ]\"\n",
                      "markdown": "`.TH rlwrap 1 \"October 20, 2022\"\n.SH NAME\nrlwrap \\- readline wrapper\n.de OP\n.ie \\\\n(.$-1 .RI \"[\\ \\fB\\\\$1\\fP \" \"\\\\$2\" \"\\ ]\"\n.el .RB \"[\\ \" \"\\\\$1\" \"\\ ]\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man1/rlwrap.1"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 3,
                  "endLine": 1,
                  "endColumn": 11,
                  "snippet": {
                    "text": ".TH rlwrap 1 \"October 20, 2022\"\n.SH NAME\nrlwrap \\- readline wrapper\n.de OP\n",
                    "rendered": {
                      "text": ".TH rlwrap 1 \"October 20, 2022\"\n.SH NAME\nrlwrap \\- readline wrapper\n.de OP\n",
                      "markdown": "`.TH rlwrap 1 \"October 20, 2022\"\n.SH NAME\nrlwrap \\- readline wrapper\n.de OP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/template"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 28,
                  "endLine": 11,
                  "endColumn": 36,
                  "snippet": {
                    "text": "my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z $name <command>\\n\".\n\t\t     \"filter template\");\n\n$filter -> run;\n",
                    "rendered": {
                      "text": "my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z $name <command>\\n\".\n\t\t     \"filter template\");\n\n$filter -> run;\n",
                      "markdown": "`my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z $name <command>\\n\".\n\t\t     \"filter template\");\n\n$filter -> run;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/template"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                      "markdown": "`#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/makefilter"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 34,
                  "endLine": 62,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    command_line = args.command_line\n    if args.stick_around:\n        # replace \"<command> <line>\" by \"sh -c '<command> <line>' || sleep 1\"\n        # in order to see messages at <command> death\n        quoted_command_line  = list(map(lambda s : shlex.quote(s), args.command_line))\n        quoted_command_line += ['||', 'sleep', '1']\n        command_as_string = \" \".join(quoted_command_line) \n",
                    "rendered": {
                      "text": "    command_line = args.command_line\n    if args.stick_around:\n        # replace \"<command> <line>\" by \"sh -c '<command> <line>' || sleep 1\"\n        # in order to see messages at <command> death\n        quoted_command_line  = list(map(lambda s : shlex.quote(s), args.command_line))\n        quoted_command_line += ['||', 'sleep', '1']\n        command_as_string = \" \".join(quoted_command_line) \n",
                      "markdown": "`    command_line = args.command_line\n    if args.stick_around:\n        # replace \"<command> <line>\" by \"sh -c '<command> <line>' || sleep 1\"\n        # in order to see messages at <command> death\n        quoted_command_line  = list(map(lambda s : shlex.quote(s), args.command_line))\n        quoted_command_line += ['||', 'sleep', '1']\n        command_as_string = \" \".join(quoted_command_line) \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/makefilter"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 22,
                  "endLine": 38,
                  "endColumn": 30,
                  "snippet": {
                    "text": "filter = rlwrapfilter.RlwrapFilter()\nfilter.help_text = \"\"\"\\\nUsage:  rlwrap [-options] -z 'makefilter <command> [-options]' ...\nconvert <command> into rlwrap filter (e.g. to colourise output or censor history)\nimportant: <command> *must* output exactly *one*  line for each input line.\n(except possibly a startup message)\nfilter \"\"\" + parser.format_help() \n",
                    "rendered": {
                      "text": "filter = rlwrapfilter.RlwrapFilter()\nfilter.help_text = \"\"\"\\\nUsage:  rlwrap [-options] -z 'makefilter <command> [-options]' ...\nconvert <command> into rlwrap filter (e.g. to colourise output or censor history)\nimportant: <command> *must* output exactly *one*  line for each input line.\n(except possibly a startup message)\nfilter \"\"\" + parser.format_help() \n",
                      "markdown": "`filter = rlwrapfilter.RlwrapFilter()\nfilter.help_text = \"\"\"\\\nUsage:  rlwrap [-options] -z 'makefilter <command> [-options]' ...\nconvert <command> into rlwrap filter (e.g. to colourise output or censor history)\nimportant: <command> *must* output exactly *one*  line for each input line.\n(except possibly a startup message)\nfilter \"\"\" + parser.format_help() \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/makefilter"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 7,
                  "endLine": 37,
                  "endColumn": 15,
                  "snippet": {
                    "text": "######### instantiate a RlwrapFilter ############\nfilter = rlwrapfilter.RlwrapFilter()\nfilter.help_text = \"\"\"\\\nUsage:  rlwrap [-options] -z 'makefilter <command> [-options]' ...\nconvert <command> into rlwrap filter (e.g. to colourise output or censor history)\nimportant: <command> *must* output exactly *one*  line for each input line.\n(except possibly a startup message)\n",
                    "rendered": {
                      "text": "######### instantiate a RlwrapFilter ############\nfilter = rlwrapfilter.RlwrapFilter()\nfilter.help_text = \"\"\"\\\nUsage:  rlwrap [-options] -z 'makefilter <command> [-options]' ...\nconvert <command> into rlwrap filter (e.g. to colourise output or censor history)\nimportant: <command> *must* output exactly *one*  line for each input line.\n(except possibly a startup message)\n",
                      "markdown": "`######### instantiate a RlwrapFilter ############\nfilter = rlwrapfilter.RlwrapFilter()\nfilter.help_text = \"\"\"\\\nUsage:  rlwrap [-options] -z 'makefilter <command> [-options]' ...\nconvert <command> into rlwrap filter (e.g. to colourise output or censor history)\nimportant: <command> *must* output exactly *one*  line for each input line.\n(except possibly a startup message)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/makefilter"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 60,
                  "endLine": 27,
                  "endColumn": 68,
                  "snippet": {
                    "text": "parser.add_argument('--timeout', nargs='?', type=float, default = 0.5,\n          help=\"timeout for <command> response\")\nparser.add_argument('--stick-around',\n          help = \"don't die immediately after error, so that rlwrap can show the error message\",  action='store_true')\nparser.add_argument('command_line', metavar='<command> [args...]', nargs=argparse.REMAINDER,\n          help='external filter_command to turn into filter')\nargs = parser.parse_args()\n",
                    "rendered": {
                      "text": "parser.add_argument('--timeout', nargs='?', type=float, default = 0.5,\n          help=\"timeout for <command> response\")\nparser.add_argument('--stick-around',\n          help = \"don't die immediately after error, so that rlwrap can show the error message\",  action='store_true')\nparser.add_argument('command_line', metavar='<command> [args...]', nargs=argparse.REMAINDER,\n          help='external filter_command to turn into filter')\nargs = parser.parse_args()\n",
                      "markdown": "`parser.add_argument('--timeout', nargs='?', type=float, default = 0.5,\n          help=\"timeout for <command> response\")\nparser.add_argument('--stick-around',\n          help = \"don't die immediately after error, so that rlwrap can show the error message\",  action='store_true')\nparser.add_argument('command_line', metavar='<command> [args...]', nargs=argparse.REMAINDER,\n          help='external filter_command to turn into filter')\nargs = parser.parse_args()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/makefilter"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 6,
                  "endLine": 11,
                  "snippet": {
                    "text": "import signal\nimport argparse\nimport pexpect\nimport time\nimport shlex\n\nsys.path.append(os.environ['RLWRAP_FILTERDIR'])\nimport rlwrapfilter\n",
                    "rendered": {
                      "text": "import signal\nimport argparse\nimport pexpect\nimport time\nimport shlex\n\nsys.path.append(os.environ['RLWRAP_FILTERDIR'])\nimport rlwrapfilter\n",
                      "markdown": "`import signal\nimport argparse\nimport pexpect\nimport time\nimport shlex\n\nsys.path.append(os.environ['RLWRAP_FILTERDIR'])\nimport rlwrapfilter\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/makefilter"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 37,
                  "endLine": 3,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#!/usr/bin/env python3\n\n\"\"\"a filter that uses pexpect to send rlwrap filter messages through an external command\"\"\"\n\nimport sys\nimport os\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python3\n\n\"\"\"a filter that uses pexpect to send rlwrap filter messages through an external command\"\"\"\n\nimport sys\nimport os\n",
                      "markdown": "`#!/usr/bin/env python3\n\n\"\"\"a filter that uses pexpect to send rlwrap filter messages through an external command\"\"\"\n\nimport sys\nimport os\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 29,
                  "endLine": 146,
                  "endColumn": 37,
                  "snippet": {
                    "text": "It is important to note that the filter, and hence all its handlers,\nare bypassed when \\fIcommand\\fR is in direct mode, i.e. when it asks for\nsingle keystrokes (and also, for security reasons, when it doesn't\necho, e.g. when asking for a password). If you don't want this to happen, use\n\\&\\fBrlwrap \\-a\\fR to force \\fBrlwrap\\fR to remain in readline mode and to\napply the filter to \\fIall\\fR of \\fIcommand\\fR's in\\- and output. This will\nmake editors and pagers (which respond to single keystrokes) unusable,\n",
                    "rendered": {
                      "text": "It is important to note that the filter, and hence all its handlers,\nare bypassed when \\fIcommand\\fR is in direct mode, i.e. when it asks for\nsingle keystrokes (and also, for security reasons, when it doesn't\necho, e.g. when asking for a password). If you don't want this to happen, use\n\\&\\fBrlwrap \\-a\\fR to force \\fBrlwrap\\fR to remain in readline mode and to\napply the filter to \\fIall\\fR of \\fIcommand\\fR's in\\- and output. This will\nmake editors and pagers (which respond to single keystrokes) unusable,\n",
                      "markdown": "`It is important to note that the filter, and hence all its handlers,\nare bypassed when \\fIcommand\\fR is in direct mode, i.e. when it asks for\nsingle keystrokes (and also, for security reasons, when it doesn't\necho, e.g. when asking for a password). If you don't want this to happen, use\n\\&\\fBrlwrap \\-a\\fR to force \\fBrlwrap\\fR to remain in readline mode and to\napply the filter to \\fIall\\fR of \\fIcommand\\fR's in\\- and output. This will\nmake editors and pagers (which respond to single keystrokes) unusable,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 92,
                  "endLine": 75,
                  "endColumn": 100,
                  "snippet": {
                    "text": "\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n",
                    "rendered": {
                      "text": "\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n",
                      "markdown": "`\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 63,
                  "endLine": 75,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n",
                    "rendered": {
                      "text": "\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n",
                      "markdown": "`\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 44,
                  "endLine": 75,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n",
                    "rendered": {
                      "text": "\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n",
                      "markdown": "`\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 473,
                  "startColumn": 24,
                  "endLine": 473,
                  "endColumn": 28,
                  "snippet": {
                    "text": "as long as \\fBrlwrap\\fR runs. Filter methods are immediately usable. When\n\\&\\fIcommand\\fR exits, the filter stays around for a little longer in order\nto process \\fIcommand\\fR's last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\n",
                    "rendered": {
                      "text": "as long as \\fBrlwrap\\fR runs. Filter methods are immediately usable. When\n\\&\\fIcommand\\fR exits, the filter stays around for a little longer in order\nto process \\fIcommand\\fR's last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\n",
                      "markdown": "`as long as \\fBrlwrap\\fR runs. Filter methods are immediately usable. When\n\\&\\fIcommand\\fR exits, the filter stays around for a little longer in order\nto process \\fIcommand\\fR's last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 455,
                  "startColumn": 17,
                  "endLine": 455,
                  "endColumn": 21,
                  "snippet": {
                    "text": ".PP\nTAG_WHAT_ARE_YOUR_INTERESTS is only ever used internally, to prevent the exchange of messages that\nwon't be handled by the filter anyway. It will be seen by the general message handler, and therefore show\nup (exactly once, at program start) in the output of e.g. the \\fBlogger\\fR filter.\n.SH SIGNALS\n.IX Header \"SIGNALS\"\nAs STDIN is still connected to the users teminal, one might expect the filter\n",
                    "rendered": {
                      "text": ".PP\nTAG_WHAT_ARE_YOUR_INTERESTS is only ever used internally, to prevent the exchange of messages that\nwon't be handled by the filter anyway. It will be seen by the general message handler, and therefore show\nup (exactly once, at program start) in the output of e.g. the \\fBlogger\\fR filter.\n.SH SIGNALS\n.IX Header \"SIGNALS\"\nAs STDIN is still connected to the users teminal, one might expect the filter\n",
                      "markdown": "`.PP\nTAG_WHAT_ARE_YOUR_INTERESTS is only ever used internally, to prevent the exchange of messages that\nwon't be handled by the filter anyway. It will be seen by the general message handler, and therefore show\nup (exactly once, at program start) in the output of e.g. the \\fBlogger\\fR filter.\n.SH SIGNALS\n.IX Header \"SIGNALS\"\nAs STDIN is still connected to the users teminal, one might expect the filter\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 40,
                  "endLine": 367,
                  "endColumn": 44,
                  "snippet": {
                    "text": ".el .IP \"\\f(CW$f\\fR \\-> cloak_and_dagger($question, \\f(CW$prompt\\fR, \\f(CW$timeout\\fR);\" 4\n.IX Item \"$f -> cloak_and_dagger($question, $prompt, $timeout);\"\nSend \\f(CW$question\\fR to \\fIcommand\\fR's input and read back everything that\ncomes back until \\f(CW$prompt\\fR is seen at \"end-of-chunk\", or no new\nchunks arrive for \\f(CW$timeout\\fR seconds, whichever comes first.  Return the\nresponse (without the final \\f(CW$prompt\\fR).  \\fBrlwrap\\fR remains completely\nunaware of this conversation.\n",
                    "rendered": {
                      "text": ".el .IP \"\\f(CW$f\\fR \\-> cloak_and_dagger($question, \\f(CW$prompt\\fR, \\f(CW$timeout\\fR);\" 4\n.IX Item \"$f -> cloak_and_dagger($question, $prompt, $timeout);\"\nSend \\f(CW$question\\fR to \\fIcommand\\fR's input and read back everything that\ncomes back until \\f(CW$prompt\\fR is seen at \"end-of-chunk\", or no new\nchunks arrive for \\f(CW$timeout\\fR seconds, whichever comes first.  Return the\nresponse (without the final \\f(CW$prompt\\fR).  \\fBrlwrap\\fR remains completely\nunaware of this conversation.\n",
                      "markdown": "`.el .IP \"\\f(CW$f\\fR \\-> cloak_and_dagger($question, \\f(CW$prompt\\fR, \\f(CW$timeout\\fR);\" 4\n.IX Item \"$f -> cloak_and_dagger($question, $prompt, $timeout);\"\nSend \\f(CW$question\\fR to \\fIcommand\\fR's input and read back everything that\ncomes back until \\f(CW$prompt\\fR is seen at \"end-of-chunk\", or no new\nchunks arrive for \\f(CW$timeout\\fR seconds, whichever comes first.  Return the\nresponse (without the final \\f(CW$prompt\\fR).  \\fBrlwrap\\fR remains completely\nunaware of this conversation.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 90,
                  "endLine": 352,
                  "endColumn": 94,
                  "snippet": {
                    "text": "\\&    $filter \\-> tweak_readline_oob(\"rl_filename_completion_desired\", \"0\" or \"1\");\n.Ve\n.Sp\nThe parameters should not contain \"::\" (two consecutive colons). This method can be called at any\nmoment, even before \\f(CW$filter\\fR \\-> run\n.ie n .IP \"$f \\-> add_to_completion_list(@words)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> add_to_completion_list(@words)\" 4\n",
                    "rendered": {
                      "text": "\\&    $filter \\-> tweak_readline_oob(\"rl_filename_completion_desired\", \"0\" or \"1\");\n.Ve\n.Sp\nThe parameters should not contain \"::\" (two consecutive colons). This method can be called at any\nmoment, even before \\f(CW$filter\\fR \\-> run\n.ie n .IP \"$f \\-> add_to_completion_list(@words)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> add_to_completion_list(@words)\" 4\n",
                      "markdown": "`\\&    $filter \\-> tweak_readline_oob(\"rl_filename_completion_desired\", \"0\" or \"1\");\n.Ve\n.Sp\nThe parameters should not contain \"::\" (two consecutive colons). This method can be called at any\nmoment, even before \\f(CW$filter\\fR \\-> run\n.ie n .IP \"$f \\-> add_to_completion_list(@words)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> add_to_completion_list(@words)\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 3,
                  "endLine": 342,
                  "endColumn": 3,
                  "snippet": {
                    "text": "Send a specially formatted out-of-band message in order to tweak\nreadline (i.e. to make \\fBrlwrap\\fR call a \\fBreadline\\fR function or set a\n\\&\\fBreadline\\fR variable). See the GNU \\fBReadline\\fR documentation for details.\n.Sp\nAt this moment, the following tweaks are recognised:\n.Sp\n.Vb 5\n\\&    $filter \\-> tweak_readline_oob(\"rl_variable_bind\", $rl_variable_name, $value);\n",
                    "rendered": {
                      "text": "Send a specially formatted out-of-band message in order to tweak\nreadline (i.e. to make \\fBrlwrap\\fR call a \\fBreadline\\fR function or set a\n\\&\\fBreadline\\fR variable). See the GNU \\fBReadline\\fR documentation for details.\n.Sp\nAt this moment, the following tweaks are recognised:\n.Sp\n.Vb 5\n\\&    $filter \\-> tweak_readline_oob(\"rl_variable_bind\", $rl_variable_name, $value);\n",
                      "markdown": "`Send a specially formatted out-of-band message in order to tweak\nreadline (i.e. to make \\fBrlwrap\\fR call a \\fBreadline\\fR function or set a\n\\&\\fBreadline\\fR variable). See the GNU \\fBReadline\\fR documentation for details.\n.Sp\nAt this moment, the following tweaks are recognised:\n.Sp\n.Vb 5\n\\&    $filter \\-> tweak_readline_oob(\"rl_variable_bind\", $rl_variable_name, $value);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 45,
                  "endLine": 121,
                  "endColumn": 49,
                  "snippet": {
                    "text": "They get called from the 'run' method in response to a message sent\nfrom \\fBrlwrap\\fR.  Messages consist of a tag indicating which handler\nshould be called (e.g. TAG_INPUT, TAG_HISTORY) and the message\ntext. Usually, a filter overrides only one or at most two methods.\n.SS \"CALLING CONVENTIONS\"\n.IX Subsection \"CALLING CONVENTIONS\"\nIn many cases (e.g. TAG_INPUT, TAG_OUTPUT, TAG_PROMPT) the message\n",
                    "rendered": {
                      "text": "They get called from the 'run' method in response to a message sent\nfrom \\fBrlwrap\\fR.  Messages consist of a tag indicating which handler\nshould be called (e.g. TAG_INPUT, TAG_HISTORY) and the message\ntext. Usually, a filter overrides only one or at most two methods.\n.SS \"CALLING CONVENTIONS\"\n.IX Subsection \"CALLING CONVENTIONS\"\nIn many cases (e.g. TAG_INPUT, TAG_OUTPUT, TAG_PROMPT) the message\n",
                      "markdown": "`They get called from the 'run' method in response to a message sent\nfrom \\fBrlwrap\\fR.  Messages consist of a tag indicating which handler\nshould be called (e.g. TAG_INPUT, TAG_HISTORY) and the message\ntext. Usually, a filter overrides only one or at most two methods.\n.SS \"CALLING CONVENTIONS\"\n.IX Subsection \"CALLING CONVENTIONS\"\nIn many cases (e.g. TAG_INPUT, TAG_OUTPUT, TAG_PROMPT) the message\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 546,
                  "startColumn": 3,
                  "endLine": 546,
                  "endColumn": 11,
                  "snippet": {
                    "text": "tedious typing of tag names:\n.PP\n.Vb 1\n\\&  rlwrap \\-f tagnames filter_to_be_debugged\n.Ve\n.PP\nBecause \\fBrlwrap\\fR cannot put TABs and newlines in input lines, filters will\n",
                    "rendered": {
                      "text": "tedious typing of tag names:\n.PP\n.Vb 1\n\\&  rlwrap \\-f tagnames filter_to_be_debugged\n.Ve\n.PP\nBecause \\fBrlwrap\\fR cannot put TABs and newlines in input lines, filters will\n",
                      "markdown": "`tedious typing of tag names:\n.PP\n.Vb 1\n\\&  rlwrap \\-f tagnames filter_to_be_debugged\n.Ve\n.PP\nBecause \\fBrlwrap\\fR cannot put TABs and newlines in input lines, filters will\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 528,
                  "startColumn": 37,
                  "endLine": 528,
                  "endColumn": 45,
                  "snippet": {
                    "text": ".IX Subsection \"RUNNING WITHOUT rlwrap\"\nWhen called by rlwrap, filters get their input from\n\\&\\f(CW$RLWRAP_INPUT_PIPE_FD\\fR and write their output to\n\\&\\f(CW$RLWRAP_OUTPUT_PIPE_FD\\fR, and expect and write messages consisting of a\ntag byte, a 32\\-bit length and the message proper. This is not terribly\nuseful when running a filter directly from the command line (outside\nrlwrap), even if we set the RLWRAP_*_FD ourselves.\n",
                    "rendered": {
                      "text": ".IX Subsection \"RUNNING WITHOUT rlwrap\"\nWhen called by rlwrap, filters get their input from\n\\&\\f(CW$RLWRAP_INPUT_PIPE_FD\\fR and write their output to\n\\&\\f(CW$RLWRAP_OUTPUT_PIPE_FD\\fR, and expect and write messages consisting of a\ntag byte, a 32\\-bit length and the message proper. This is not terribly\nuseful when running a filter directly from the command line (outside\nrlwrap), even if we set the RLWRAP_*_FD ourselves.\n",
                      "markdown": "`.IX Subsection \"RUNNING WITHOUT rlwrap\"\nWhen called by rlwrap, filters get their input from\n\\&\\f(CW$RLWRAP_INPUT_PIPE_FD\\fR and write their output to\n\\&\\f(CW$RLWRAP_OUTPUT_PIPE_FD\\fR, and expect and write messages consisting of a\ntag byte, a 32\\-bit length and the message proper. This is not terribly\nuseful when running a filter directly from the command line (outside\nrlwrap), even if we set the RLWRAP_*_FD ourselves.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 522,
                  "startColumn": 3,
                  "endLine": 522,
                  "endColumn": 11,
                  "snippet": {
                    "text": "the \\fBlogger\\fR filter, using a pipeline:\n.PP\n.Vb 1\n\\&  rlwrap \\-z \\*(Aqpipeline logger incoming : my_filter : logger outgoing\\*(Aq command\n.Ve\n.SS \"RUNNING WITHOUT \\fBrlwrap\\fP\"\n.IX Subsection \"RUNNING WITHOUT rlwrap\"\n",
                    "rendered": {
                      "text": "the \\fBlogger\\fR filter, using a pipeline:\n.PP\n.Vb 1\n\\&  rlwrap \\-z \\*(Aqpipeline logger incoming : my_filter : logger outgoing\\*(Aq command\n.Ve\n.SS \"RUNNING WITHOUT \\fBrlwrap\\fP\"\n.IX Subsection \"RUNNING WITHOUT rlwrap\"\n",
                      "markdown": "`the \\fBlogger\\fR filter, using a pipeline:\n.PP\n.Vb 1\n\\&  rlwrap \\-z \\*(Aqpipeline logger incoming : my_filter : logger outgoing\\*(Aq command\n.Ve\n.SS \"RUNNING WITHOUT \\fBrlwrap\\fP\"\n.IX Subsection \"RUNNING WITHOUT rlwrap\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 510,
                  "startColumn": 76,
                  "endLine": 511,
                  "snippet": {
                    "text": "\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n.SH \"DEBUGGING FILTERS\"\n.IX Header \"DEBUGGING FILTERS\"\nWhile RlwrapFilter.pm makes it easy to write simple filters, debugging\n",
                    "rendered": {
                      "text": "\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n.SH \"DEBUGGING FILTERS\"\n.IX Header \"DEBUGGING FILTERS\"\nWhile RlwrapFilter.pm makes it easy to write simple filters, debugging\n",
                      "markdown": "`\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n.SH \"DEBUGGING FILTERS\"\n.IX Header \"DEBUGGING FILTERS\"\nWhile RlwrapFilter.pm makes it easy to write simple filters, debugging\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 110,
                  "endLine": 508,
                  "endColumn": 118,
                  "snippet": {
                    "text": "\\&\n\\&    RLWRAP_MASTER_PTY_FD  File descriptor of command\\*(Aqs pty.\n\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n",
                    "rendered": {
                      "text": "\\&\n\\&    RLWRAP_MASTER_PTY_FD  File descriptor of command\\*(Aqs pty.\n\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n",
                      "markdown": "`\\&\n\\&    RLWRAP_MASTER_PTY_FD  File descriptor of command\\*(Aqs pty.\n\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 42,
                  "endLine": 508,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\\&\n\\&    RLWRAP_MASTER_PTY_FD  File descriptor of command\\*(Aqs pty.\n\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n",
                    "rendered": {
                      "text": "\\&\n\\&    RLWRAP_MASTER_PTY_FD  File descriptor of command\\*(Aqs pty.\n\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n",
                      "markdown": "`\\&\n\\&    RLWRAP_MASTER_PTY_FD  File descriptor of command\\*(Aqs pty.\n\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 498,
                  "startColumn": 69,
                  "endLine": 498,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\\&\n\\&    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\\&\n\\&    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n\\&                          the candidate prompt is filtered through the output handler (and displayed before\n\\&                          being overwritten by the cooked prompt).\n\\&\n",
                    "rendered": {
                      "text": "\\&\n\\&    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\\&\n\\&    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n\\&                          the candidate prompt is filtered through the output handler (and displayed before\n\\&                          being overwritten by the cooked prompt).\n\\&\n",
                      "markdown": "`\\&\n\\&    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\\&\n\\&    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n\\&                          the candidate prompt is filtered through the output handler (and displayed before\n\\&                          being overwritten by the cooked prompt).\n\\&\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 498,
                  "startColumn": 35,
                  "endLine": 498,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\\&\n\\&    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\\&\n\\&    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n\\&                          the candidate prompt is filtered through the output handler (and displayed before\n\\&                          being overwritten by the cooked prompt).\n\\&\n",
                    "rendered": {
                      "text": "\\&\n\\&    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\\&\n\\&    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n\\&                          the candidate prompt is filtered through the output handler (and displayed before\n\\&                          being overwritten by the cooked prompt).\n\\&\n",
                      "markdown": "`\\&\n\\&    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\\&\n\\&    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n\\&                          the candidate prompt is filtered through the output handler (and displayed before\n\\&                          being overwritten by the cooked prompt).\n\\&\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 27,
                  "endLine": 492,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\\&\n\\&    PATH                  rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter\\*(Aqs PATH\n\\&\n\\&    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\\&\n\\&    RLWRAP_COMMAND_PID    process ID of the rlwrapped command\n\\&\n",
                    "rendered": {
                      "text": "\\&\n\\&    PATH                  rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter\\*(Aqs PATH\n\\&\n\\&    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\\&\n\\&    RLWRAP_COMMAND_PID    process ID of the rlwrapped command\n\\&\n",
                      "markdown": "`\\&\n\\&    PATH                  rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter\\*(Aqs PATH\n\\&\n\\&    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\\&\n\\&    RLWRAP_COMMAND_PID    process ID of the rlwrapped command\n\\&\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 490,
                  "startColumn": 27,
                  "endLine": 490,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\\&    RLWRAP_FILTERDIR      directory where RlwrapFilter.pm and most filters live (set by rlwrap, can be\n\\&                          overridden by the user before calling rlwrap)\n\\&\n\\&    PATH                  rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter\\*(Aqs PATH\n\\&\n\\&    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\\&\n",
                    "rendered": {
                      "text": "\\&    RLWRAP_FILTERDIR      directory where RlwrapFilter.pm and most filters live (set by rlwrap, can be\n\\&                          overridden by the user before calling rlwrap)\n\\&\n\\&    PATH                  rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter\\*(Aqs PATH\n\\&\n\\&    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\\&\n",
                      "markdown": "`\\&    RLWRAP_FILTERDIR      directory where RlwrapFilter.pm and most filters live (set by rlwrap, can be\n\\&                          overridden by the user before calling rlwrap)\n\\&\n\\&    PATH                  rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter\\*(Aqs PATH\n\\&\n\\&    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\\&\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 477,
                  "startColumn": 33,
                  "endLine": 477,
                  "endColumn": 41,
                  "snippet": {
                    "text": "error, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message \\- out-of-band messages\nare not always processed immediately)\n.PP\n",
                    "rendered": {
                      "text": "error, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message \\- out-of-band messages\nare not always processed immediately)\n.PP\n",
                      "markdown": "`error, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message \\- out-of-band messages\nare not always processed immediately)\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 477,
                  "startColumn": 10,
                  "endLine": 477,
                  "endColumn": 18,
                  "snippet": {
                    "text": "error, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message \\- out-of-band messages\nare not always processed immediately)\n.PP\n",
                    "rendered": {
                      "text": "error, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message \\- out-of-band messages\nare not always processed immediately)\n.PP\n",
                      "markdown": "`error, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message \\- out-of-band messages\nare not always processed immediately)\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 473,
                  "startColumn": 32,
                  "endLine": 473,
                  "endColumn": 38,
                  "snippet": {
                    "text": "as long as \\fBrlwrap\\fR runs. Filter methods are immediately usable. When\n\\&\\fIcommand\\fR exits, the filter stays around for a little longer in order\nto process \\fIcommand\\fR's last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\n",
                    "rendered": {
                      "text": "as long as \\fBrlwrap\\fR runs. Filter methods are immediately usable. When\n\\&\\fIcommand\\fR exits, the filter stays around for a little longer in order\nto process \\fIcommand\\fR's last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\n",
                      "markdown": "`as long as \\fBrlwrap\\fR runs. Filter methods are immediately usable. When\n\\&\\fIcommand\\fR exits, the filter stays around for a little longer in order\nto process \\fIcommand\\fR's last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 458,
                  "startColumn": 59,
                  "endLine": 458,
                  "endColumn": 67,
                  "snippet": {
                    "text": "up (exactly once, at program start) in the output of e.g. the \\fBlogger\\fR filter.\n.SH SIGNALS\n.IX Header \"SIGNALS\"\nAs STDIN is still connected to the users teminal, one might expect the filter\nto receive SIGINT, SIGTERM, SIGTSTP directly from the terminal driver if\nthe user presses CTRL-C, CTRL-Z etc Normally, we don't want this \\- it\nwould confuse rlwrap, and the user (who thinks she is talking straight\n",
                    "rendered": {
                      "text": "up (exactly once, at program start) in the output of e.g. the \\fBlogger\\fR filter.\n.SH SIGNALS\n.IX Header \"SIGNALS\"\nAs STDIN is still connected to the users teminal, one might expect the filter\nto receive SIGINT, SIGTERM, SIGTSTP directly from the terminal driver if\nthe user presses CTRL-C, CTRL-Z etc Normally, we don't want this \\- it\nwould confuse rlwrap, and the user (who thinks she is talking straight\n",
                      "markdown": "`up (exactly once, at program start) in the output of e.g. the \\fBlogger\\fR filter.\n.SH SIGNALS\n.IX Header \"SIGNALS\"\nAs STDIN is still connected to the users teminal, one might expect the filter\nto receive SIGINT, SIGTERM, SIGTSTP directly from the terminal driver if\nthe user presses CTRL-C, CTRL-Z etc Normally, we don't want this \\- it\nwould confuse rlwrap, and the user (who thinks she is talking straight\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 423,
                  "startColumn": 42,
                  "endLine": 423,
                  "endColumn": 50,
                  "snippet": {
                    "text": ".PP\nMessages are received and sent via two pipes. STDIN, STDOUT and STDERR\nare still connected to the user's terminal, and you can read and write\nthem directly, though this may mess up the screen and confuse the user\nunless you are careful. A filter can even communicate with the\nrlwrapped command behind rlwrap's back (cf the \\fBcloak_and_dagger()\\fR\nmethod)\n",
                    "rendered": {
                      "text": ".PP\nMessages are received and sent via two pipes. STDIN, STDOUT and STDERR\nare still connected to the user's terminal, and you can read and write\nthem directly, though this may mess up the screen and confuse the user\nunless you are careful. A filter can even communicate with the\nrlwrapped command behind rlwrap's back (cf the \\fBcloak_and_dagger()\\fR\nmethod)\n",
                      "markdown": "`.PP\nMessages are received and sent via two pipes. STDIN, STDOUT and STDERR\nare still connected to the user's terminal, and you can read and write\nthem directly, though this may mess up the screen and confuse the user\nunless you are careful. A filter can even communicate with the\nrlwrapped command behind rlwrap's back (cf the \\fBcloak_and_dagger()\\fR\nmethod)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 411,
                  "startColumn": 5,
                  "endLine": 411,
                  "endColumn": 13,
                  "snippet": {
                    "text": "byte (TAG_OUTPUT, TAG_PROMPT etc. \\- to inform the filter of what is\nbeing sent), an unsigned 32\\-bit integer containing the length of the\nmessage, the message text and an extra newline. For every message\nsent, rlwrap expects, and waits for an answer message with the same\ntag. Sending back a different (in-band) tag is an error and instantly\nkills rlwrap, though filters may precede their answer message with\n\"out-of-band\" messages to output text (TAG_OUTPUT_OUT_OF_BAND), report\n",
                    "rendered": {
                      "text": "byte (TAG_OUTPUT, TAG_PROMPT etc. \\- to inform the filter of what is\nbeing sent), an unsigned 32\\-bit integer containing the length of the\nmessage, the message text and an extra newline. For every message\nsent, rlwrap expects, and waits for an answer message with the same\ntag. Sending back a different (in-band) tag is an error and instantly\nkills rlwrap, though filters may precede their answer message with\n\"out-of-band\" messages to output text (TAG_OUTPUT_OUT_OF_BAND), report\n",
                      "markdown": "`byte (TAG_OUTPUT, TAG_PROMPT etc. \\- to inform the filter of what is\nbeing sent), an unsigned 32\\-bit integer containing the length of the\nmessage, the message text and an extra newline. For every message\nsent, rlwrap expects, and waits for an answer message with the same\ntag. Sending back a different (in-band) tag is an error and instantly\nkills rlwrap, though filters may precede their answer message with\n\"out-of-band\" messages to output text (TAG_OUTPUT_OUT_OF_BAND), report\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 383,
                  "startColumn": 53,
                  "endLine": 383,
                  "endColumn": 61,
                  "snippet": {
                    "text": ".el .IP \"\\f(CW$self\\fR \\-> prompt_rejected\" 4\n.IX Item \"$self -> prompt_rejected\"\nA special text (\"_THIS_CANNOT_BE_A_PROMPT_\") to be returned by a\nprompt handler to \"reject\" the prompt. This will make rlwrap skip\ncooking the prompt.  \\f(CW$self\\fR\\->previous_tag and \\f(CW$self\\fR\\->cumulative_output\nwill not be touched.\n.ie n .IP \"$text = $f \\-> prompts_are_never_empty($val)\" 4\n",
                    "rendered": {
                      "text": ".el .IP \"\\f(CW$self\\fR \\-> prompt_rejected\" 4\n.IX Item \"$self -> prompt_rejected\"\nA special text (\"_THIS_CANNOT_BE_A_PROMPT_\") to be returned by a\nprompt handler to \"reject\" the prompt. This will make rlwrap skip\ncooking the prompt.  \\f(CW$self\\fR\\->previous_tag and \\f(CW$self\\fR\\->cumulative_output\nwill not be touched.\n.ie n .IP \"$text = $f \\-> prompts_are_never_empty($val)\" 4\n",
                      "markdown": "`.el .IP \"\\f(CW$self\\fR \\-> prompt_rejected\" 4\n.IX Item \"$self -> prompt_rejected\"\nA special text (\"_THIS_CANNOT_BE_A_PROMPT_\") to be returned by a\nprompt handler to \"reject\" the prompt. This will make rlwrap skip\ncooking the prompt.  \\f(CW$self\\fR\\->previous_tag and \\f(CW$self\\fR\\->cumulative_output\nwill not be touched.\n.ie n .IP \"$text = $f \\-> prompts_are_never_empty($val)\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 18,
                  "endLine": 377,
                  "endColumn": 26,
                  "snippet": {
                    "text": "If \\f(CW$verbosity\\fR evaluates to a true value, make rlwrap print all\nquestions sent to \\fIcommand\\fR by the \\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR method, and\n\\&\\fIcommand\\fR's responses. By default, \\f(CW$verbosity\\fR = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n\\&\\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR\n.ie n .IP \"$self \\-> prompt_rejected\" 4\n.el .IP \"\\f(CW$self\\fR \\-> prompt_rejected\" 4\n",
                    "rendered": {
                      "text": "If \\f(CW$verbosity\\fR evaluates to a true value, make rlwrap print all\nquestions sent to \\fIcommand\\fR by the \\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR method, and\n\\&\\fIcommand\\fR's responses. By default, \\f(CW$verbosity\\fR = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n\\&\\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR\n.ie n .IP \"$self \\-> prompt_rejected\" 4\n.el .IP \"\\f(CW$self\\fR \\-> prompt_rejected\" 4\n",
                      "markdown": "`If \\f(CW$verbosity\\fR evaluates to a true value, make rlwrap print all\nquestions sent to \\fIcommand\\fR by the \\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR method, and\n\\&\\fIcommand\\fR's responses. By default, \\f(CW$verbosity\\fR = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n\\&\\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR\n.ie n .IP \"$self \\-> prompt_rejected\" 4\n.el .IP \"\\f(CW$self\\fR \\-> prompt_rejected\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 374,
                  "startColumn": 53,
                  "endLine": 374,
                  "endColumn": 61,
                  "snippet": {
                    "text": ".ie n .IP \"$f \\-> cloak_and_dagger_verbose($verbosity)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> cloak_and_dagger_verbose($verbosity)\" 4\n.IX Item \"$f -> cloak_and_dagger_verbose($verbosity)\"\nIf \\f(CW$verbosity\\fR evaluates to a true value, make rlwrap print all\nquestions sent to \\fIcommand\\fR by the \\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR method, and\n\\&\\fIcommand\\fR's responses. By default, \\f(CW$verbosity\\fR = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n",
                    "rendered": {
                      "text": ".ie n .IP \"$f \\-> cloak_and_dagger_verbose($verbosity)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> cloak_and_dagger_verbose($verbosity)\" 4\n.IX Item \"$f -> cloak_and_dagger_verbose($verbosity)\"\nIf \\f(CW$verbosity\\fR evaluates to a true value, make rlwrap print all\nquestions sent to \\fIcommand\\fR by the \\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR method, and\n\\&\\fIcommand\\fR's responses. By default, \\f(CW$verbosity\\fR = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n",
                      "markdown": "`.ie n .IP \"$f \\-> cloak_and_dagger_verbose($verbosity)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> cloak_and_dagger_verbose($verbosity)\" 4\n.IX Item \"$f -> cloak_and_dagger_verbose($verbosity)\"\nIf \\f(CW$verbosity\\fR evaluates to a true value, make rlwrap print all\nquestions sent to \\fIcommand\\fR by the \\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR method, and\n\\&\\fIcommand\\fR's responses. By default, \\f(CW$verbosity\\fR = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 4,
                  "endLine": 327,
                  "endColumn": 12,
                  "snippet": {
                    "text": ".ie n .IP \"$f \\-> send_output_oob($text)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> send_output_oob($text)\" 4\n.IX Item \"$f -> send_output_oob($text)\"\nMake rlwrap display \\f(CW$text\\fR. \\f(CW$text\\fR is sent \"out-of-band\" :\n\\&\\fBrlwrap\\fR will not see it until just  after it has sent the next\nmessage to the filter\n.ie n .IP \"$f \\-> send_ignore_oob($text)\" 4\n",
                    "rendered": {
                      "text": ".ie n .IP \"$f \\-> send_output_oob($text)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> send_output_oob($text)\" 4\n.IX Item \"$f -> send_output_oob($text)\"\nMake rlwrap display \\f(CW$text\\fR. \\f(CW$text\\fR is sent \"out-of-band\" :\n\\&\\fBrlwrap\\fR will not see it until just  after it has sent the next\nmessage to the filter\n.ie n .IP \"$f \\-> send_ignore_oob($text)\" 4\n",
                      "markdown": "`.ie n .IP \"$f \\-> send_output_oob($text)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> send_output_oob($text)\" 4\n.IX Item \"$f -> send_output_oob($text)\"\nMake rlwrap display \\f(CW$text\\fR. \\f(CW$text\\fR is sent \"out-of-band\" :\n\\&\\fBrlwrap\\fR will not see it until just  after it has sent the next\nmessage to the filter\n.ie n .IP \"$f \\-> send_ignore_oob($text)\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 58,
                  "endLine": 309,
                  "endColumn": 64,
                  "snippet": {
                    "text": "messages and rejected prompts)\n.Sp\nWhen necessary (i.e. when \\fBrlwrap\\fR is in \"impatient mode\") the prompt\nis removed from \\f(CW$filter\\fR\\->cumulative_output by the time the prompt\nhandler is called.\n.ie n .IP \"$tag = $f \\-> previous_tag\" 4\n.el .IP \"\\f(CW$tag\\fR = \\f(CW$f\\fR \\-> previous_tag\" 4\n",
                    "rendered": {
                      "text": "messages and rejected prompts)\n.Sp\nWhen necessary (i.e. when \\fBrlwrap\\fR is in \"impatient mode\") the prompt\nis removed from \\f(CW$filter\\fR\\->cumulative_output by the time the prompt\nhandler is called.\n.ie n .IP \"$tag = $f \\-> previous_tag\" 4\n.el .IP \"\\f(CW$tag\\fR = \\f(CW$f\\fR \\-> previous_tag\" 4\n",
                      "markdown": "`messages and rejected prompts)\n.Sp\nWhen necessary (i.e. when \\fBrlwrap\\fR is in \"impatient mode\") the prompt\nis removed from \\f(CW$filter\\fR\\->cumulative_output by the time the prompt\nhandler is called.\n.ie n .IP \"$tag = $f \\-> previous_tag\" 4\n.el .IP \"\\f(CW$tag\\fR = \\f(CW$f\\fR \\-> previous_tag\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 28,
                  "endLine": 297,
                  "endColumn": 34,
                  "snippet": {
                    "text": "return the name of \\fIcommand\\fR's current working directory. This uses\nthe /proc filesystem, and may only work on newer linux systems (on\nolder linux and on Solaris, it will return something like\n\"/proc/12345/cwd\", useful to find the contents of \\fIcommand\\fR's working\ndirectory, but not its name)\n.ie n .IP \"$text = $f \\-> cumulative_output\" 4\n.el .IP \"\\f(CW$text\\fR = \\f(CW$f\\fR \\-> cumulative_output\" 4\n",
                    "rendered": {
                      "text": "return the name of \\fIcommand\\fR's current working directory. This uses\nthe /proc filesystem, and may only work on newer linux systems (on\nolder linux and on Solaris, it will return something like\n\"/proc/12345/cwd\", useful to find the contents of \\fIcommand\\fR's working\ndirectory, but not its name)\n.ie n .IP \"$text = $f \\-> cumulative_output\" 4\n.el .IP \"\\f(CW$text\\fR = \\f(CW$f\\fR \\-> cumulative_output\" 4\n",
                      "markdown": "`return the name of \\fIcommand\\fR's current working directory. This uses\nthe /proc filesystem, and may only work on newer linux systems (on\nolder linux and on Solaris, it will return something like\n\"/proc/12345/cwd\", useful to find the contents of \\fIcommand\\fR's working\ndirectory, but not its name)\n.ie n .IP \"$text = $f \\-> cumulative_output\" 4\n.el .IP \"\\f(CW$text\\fR = \\f(CW$f\\fR \\-> cumulative_output\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 10,
                  "endLine": 290,
                  "endColumn": 18,
                  "snippet": {
                    "text": ".ie n .IP \"$f \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n.el .IP \"\\f(CW$f\\fR \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n.IX Item \"$f -> minimal_rlwrap_version(\"\"x.yy\"\")\"\nDie unless rlwrap is version x.yy or newer\n.ie n .IP \"$dir = $f \\-> cwd\" 4\n.el .IP \"\\f(CW$dir\\fR = \\f(CW$f\\fR \\-> cwd\" 4\n.IX Item \"$dir = $f -> cwd\"\n",
                    "rendered": {
                      "text": ".ie n .IP \"$f \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n.el .IP \"\\f(CW$f\\fR \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n.IX Item \"$f -> minimal_rlwrap_version(\"\"x.yy\"\")\"\nDie unless rlwrap is version x.yy or newer\n.ie n .IP \"$dir = $f \\-> cwd\" 4\n.el .IP \"\\f(CW$dir\\fR = \\f(CW$f\\fR \\-> cwd\" 4\n.IX Item \"$dir = $f -> cwd\"\n",
                      "markdown": "`.ie n .IP \"$f \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n.el .IP \"\\f(CW$f\\fR \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n.IX Item \"$f -> minimal_rlwrap_version(\"\"x.yy\"\")\"\nDie unless rlwrap is version x.yy or newer\n.ie n .IP \"$dir = $f \\-> cwd\" 4\n.el .IP \"\\f(CW$dir\\fR = \\f(CW$f\\fR \\-> cwd\" 4\n.IX Item \"$dir = $f -> cwd\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 58,
                  "endLine": 284,
                  "endColumn": 66,
                  "snippet": {
                    "text": ".ie n .IP \"$f \\-> help_text(\"\"Usage...\"\")\" 4\n.el .IP \"\\f(CW$f\\fR \\-> help_text(\"\"Usage...\"\")\" 4\n.IX Item \"$f -> help_text(\"\"Usage...\"\")\"\nSet the help text for this filter. It will be displayed by rlwrap \\-z\n<filter>. The second line of the help text is used by \\f(CW\\*(C`rlwrap \\-z listing\\*(C'\\fR;\nit should be a short description of what the filter does.\n.ie n .IP \"$f \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n",
                    "rendered": {
                      "text": ".ie n .IP \"$f \\-> help_text(\"\"Usage...\"\")\" 4\n.el .IP \"\\f(CW$f\\fR \\-> help_text(\"\"Usage...\"\")\" 4\n.IX Item \"$f -> help_text(\"\"Usage...\"\")\"\nSet the help text for this filter. It will be displayed by rlwrap \\-z\n<filter>. The second line of the help text is used by \\f(CW\\*(C`rlwrap \\-z listing\\*(C'\\fR;\nit should be a short description of what the filter does.\n.ie n .IP \"$f \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n",
                      "markdown": "`.ie n .IP \"$f \\-> help_text(\"\"Usage...\"\")\" 4\n.el .IP \"\\f(CW$f\\fR \\-> help_text(\"\"Usage...\"\")\" 4\n.IX Item \"$f -> help_text(\"\"Usage...\"\")\"\nSet the help text for this filter. It will be displayed by rlwrap \\-z\n<filter>. The second line of the help text is used by \\f(CW\\*(C`rlwrap \\-z listing\\*(C'\\fR;\nit should be a short description of what the filter does.\n.ie n .IP \"$f \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 14,
                  "endLine": 258,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\\&                     });\n.Ve\n.Sp\nNote that when rlwrap is run in \\-\\-multi\\-line mode the echo handler will still\nonly handle the first echo line.  The remainder will generally\nbe echoed back preceded by a continuation prompt; it is up to the\noutput handler what to do with it.\n",
                    "rendered": {
                      "text": "\\&                     });\n.Ve\n.Sp\nNote that when rlwrap is run in \\-\\-multi\\-line mode the echo handler will still\nonly handle the first echo line.  The remainder will generally\nbe echoed back preceded by a continuation prompt; it is up to the\noutput handler what to do with it.\n",
                      "markdown": "`\\&                     });\n.Ve\n.Sp\nNote that when rlwrap is run in \\-\\-multi\\-line mode the echo handler will still\nonly handle the first echo line.  The remainder will generally\nbe echoed back preceded by a continuation prompt; it is up to the\noutput handler what to do with it.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 10,
                  "endLine": 232,
                  "endColumn": 18,
                  "snippet": {
                    "text": "to confuse the user, use an echo handler that returns your original\ninput.\n.Sp\nIf you use rlwrap in \\-\\-multi\\-line mode, additional echo lines will\nhave to be handled by the output handler\n.ie n .IP \"$handler = $f \\-> output_handler, $f \\-> output_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> output_handler, \\f(CW$f\\fR \\-> output_handler(\\e&handler)\" 4\n",
                    "rendered": {
                      "text": "to confuse the user, use an echo handler that returns your original\ninput.\n.Sp\nIf you use rlwrap in \\-\\-multi\\-line mode, additional echo lines will\nhave to be handled by the output handler\n.ie n .IP \"$handler = $f \\-> output_handler, $f \\-> output_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> output_handler, \\f(CW$f\\fR \\-> output_handler(\\e&handler)\" 4\n",
                      "markdown": "`to confuse the user, use an echo handler that returns your original\ninput.\n.Sp\nIf you use rlwrap in \\-\\-multi\\-line mode, additional echo lines will\nhave to be handled by the output handler\n.ie n .IP \"$handler = $f \\-> output_handler, $f \\-> output_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> output_handler, \\f(CW$f\\fR \\-> output_handler(\\e&handler)\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 69,
                  "endLine": 162,
                  "endColumn": 5,
                  "snippet": {
                    "text": "e 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\nlonger to formulate. If this is a problem, specify a longer \"cooking\"\ntime with rlwrap's \\fB\\-w\\fR option, use the \\fBprompts_are_never_empty\\fR\nmethod or \"reject\" the prompt (cf. the \\fBprompt_rejected\\fR method)\n.ie n .IP \"$handler = $f \\-> completion_handler, $f \\-> completion_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> completion_handler, \\f(CW$f\\",
                    "rendered": {
                      "text": "e 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\nlonger to formulate. If this is a problem, specify a longer \"cooking\"\ntime with rlwrap's \\fB\\-w\\fR option, use the \\fBprompts_are_never_empty\\fR\nmethod or \"reject\" the prompt (cf. the \\fBprompt_rejected\\fR method)\n.ie n .IP \"$handler = $f \\-> completion_handler, $f \\-> completion_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> completion_handler, \\f(CW$f\\",
                      "markdown": "`e 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\nlonger to formulate. If this is a problem, specify a longer \"cooking\"\ntime with rlwrap's \\fB\\-w\\fR option, use the \\fBprompts_are_never_empty\\fR\nmethod or \"reject\" the prompt (cf. the \\fBprompt_rejected\\fR method)\n.ie n .IP \"$handler = $f \\-> completion_handler, $f \\-> completion_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> completion_handler, \\f(CW$f\\`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 13,
                  "endLine": 157,
                  "endColumn": 19,
                  "snippet": {
                    "text": ".el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> prompt_handler, \\f(CW$f\\fR \\-> prompt_handler(\\e&handler)\" 4\n.IX Item \"$handler = $f -> prompt_handler, $f -> prompt_handler(&handler)\"\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\n",
                    "rendered": {
                      "text": ".el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> prompt_handler, \\f(CW$f\\fR \\-> prompt_handler(\\e&handler)\" 4\n.IX Item \"$handler = $f -> prompt_handler, $f -> prompt_handler(&handler)\"\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\n",
                      "markdown": "`.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> prompt_handler, \\f(CW$f\\fR \\-> prompt_handler(\\e&handler)\" 4\n.IX Item \"$handler = $f -> prompt_handler, $f -> prompt_handler(&handler)\"\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 57,
                  "endLine": 157,
                  "snippet": {
                    "text": "r = $f \\-> prompt_handler, $f \\-> prompt_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> prompt_handler, \\f(CW$f\\fR \\-> prompt_handler(\\e&handler)\" 4\n.IX Item \"$handler = $f -> prompt_handler, $f -> prompt_handler(&handler)\"\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\nlonger to form",
                    "rendered": {
                      "text": "r = $f \\-> prompt_handler, $f \\-> prompt_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> prompt_handler, \\f(CW$f\\fR \\-> prompt_handler(\\e&handler)\" 4\n.IX Item \"$handler = $f -> prompt_handler, $f -> prompt_handler(&handler)\"\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\nlonger to form",
                      "markdown": "`r = $f \\-> prompt_handler, $f \\-> prompt_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> prompt_handler, \\f(CW$f\\fR \\-> prompt_handler(\\e&handler)\" 4\n.IX Item \"$handler = $f -> prompt_handler, $f -> prompt_handler(&handler)\"\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\nlonger to form`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 10,
                  "endLine": 137,
                  "endColumn": 18,
                  "snippet": {
                    "text": ".PP\nThe message handlers are called in a fixed cyclic order: prompt,\ncompletion, history, input, echo, output, prompt, ... etc ad\ninfinitum. Rlwrap may always skip a handler when in direct mode; on\nthe other hand, completion and output handlers may get called more\nthan once in succession. If a handler is left undefined, the result is\nas if the message text were returned unaltered (in fact, \\fBrlwrap\\fR knows\n",
                    "rendered": {
                      "text": ".PP\nThe message handlers are called in a fixed cyclic order: prompt,\ncompletion, history, input, echo, output, prompt, ... etc ad\ninfinitum. Rlwrap may always skip a handler when in direct mode; on\nthe other hand, completion and output handlers may get called more\nthan once in succession. If a handler is left undefined, the result is\nas if the message text were returned unaltered (in fact, \\fBrlwrap\\fR knows\n",
                      "markdown": "`.PP\nThe message handlers are called in a fixed cyclic order: prompt,\ncompletion, history, input, echo, output, prompt, ... etc ad\ninfinitum. Rlwrap may always skip a handler when in direct mode; on\nthe other hand, completion and output handlers may get called more\nthan once in succession. If a handler is left undefined, the result is\nas if the message text were returned unaltered (in fact, \\fBrlwrap\\fR knows\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 50,
                  "endLine": 94,
                  "snippet": {
                    "text": ".PP\nFilters can be combined in a pipeline using the special \\fBpipeline\\fR filter.\n.PP\n\\&\\fBRlwrapFilter\\fR makes it very simple to write rlwrap\nfilters in perl. A filter only needs to instantiate a RlwrapFilter\nobject, change a few of its default handlers and then call its 'run'\nmethod.\n.PP\n",
                    "rendered": {
                      "text": ".PP\nFilters can be combined in a pipeline using the special \\fBpipeline\\fR filter.\n.PP\n\\&\\fBRlwrapFilter\\fR makes it very simple to write rlwrap\nfilters in perl. A filter only needs to instantiate a RlwrapFilter\nobject, change a few of its default handlers and then call its 'run'\nmethod.\n.PP\n",
                      "markdown": "`.PP\nFilters can be combined in a pipeline using the special \\fBpipeline\\fR filter.\n.PP\n\\&\\fBRlwrapFilter\\fR makes it very simple to write rlwrap\nfilters in perl. A filter only needs to instantiate a RlwrapFilter\nobject, change a few of its default handlers and then call its 'run'\nmethod.\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 45,
                  "endLine": 86,
                  "endColumn": 53,
                  "snippet": {
                    "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n.PP\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                    "rendered": {
                      "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n.PP\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                      "markdown": "`to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n.PP\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 19,
                  "endLine": 86,
                  "endColumn": 27,
                  "snippet": {
                    "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n.PP\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                    "rendered": {
                      "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n.PP\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                      "markdown": "`to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n.PP\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 30,
                  "endLine": 64,
                  "endColumn": 38,
                  "snippet": {
                    "text": ".if n .ad l\n.nh\n.SH NAME\nRlwrapFilter \\- Perl class for rlwrap filters\n.SH SYNOPSIS\n.IX Header \"SYNOPSIS\"\n.Vb 2\n",
                    "rendered": {
                      "text": ".if n .ad l\n.nh\n.SH NAME\nRlwrapFilter \\- Perl class for rlwrap filters\n.SH SYNOPSIS\n.IX Header \"SYNOPSIS\"\n.Vb 2\n",
                      "markdown": "`.if n .ad l\n.nh\n.SH NAME\nRlwrapFilter \\- Perl class for rlwrap filters\n.SH SYNOPSIS\n.IX Header \"SYNOPSIS\"\n.Vb 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 15,
                  "endLine": 64,
                  "endColumn": 21,
                  "snippet": {
                    "text": ".if n .ad l\n.nh\n.SH NAME\nRlwrapFilter \\- Perl class for rlwrap filters\n.SH SYNOPSIS\n.IX Header \"SYNOPSIS\"\n.Vb 2\n",
                    "rendered": {
                      "text": ".if n .ad l\n.nh\n.SH NAME\nRlwrapFilter \\- Perl class for rlwrap filters\n.SH SYNOPSIS\n.IX Header \"SYNOPSIS\"\n.Vb 2\n",
                      "markdown": "`.if n .ad l\n.nh\n.SH NAME\nRlwrapFilter \\- Perl class for rlwrap filters\n.SH SYNOPSIS\n.IX Header \"SYNOPSIS\"\n.Vb 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 64,
                  "endLine": 58,
                  "endColumn": 70,
                  "snippet": {
                    "text": ".\\\" ========================================================================\n.\\\"\n.IX Title \"RlwrapFilter 3pm\"\n.TH RlwrapFilter 3pm 2024-01-15 \"perl v5.38.2\" \"User Contributed Perl Documentation\"\n.\\\" For nroff, turn off justification.  Always turn off hyphenation; it makes\n.\\\" way too many mistakes in technical documents.\n.if n .ad l\n",
                    "rendered": {
                      "text": ".\\\" ========================================================================\n.\\\"\n.IX Title \"RlwrapFilter 3pm\"\n.TH RlwrapFilter 3pm 2024-01-15 \"perl v5.38.2\" \"User Contributed Perl Documentation\"\n.\\\" For nroff, turn off justification.  Always turn off hyphenation; it makes\n.\\\" way too many mistakes in technical documents.\n.if n .ad l\n",
                      "markdown": "`.\\\" ========================================================================\n.\\\"\n.IX Title \"RlwrapFilter 3pm\"\n.TH RlwrapFilter 3pm 2024-01-15 \"perl v5.38.2\" \"User Contributed Perl Documentation\"\n.\\\" For nroff, turn off justification.  Always turn off hyphenation; it makes\n.\\\" way too many mistakes in technical documents.\n.if n .ad l\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/paint_prompt.py"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11,
                  "endLine": 40,
                  "endColumn": 19,
                  "snippet": {
                    "text": "filter = rlwrapfilter.RlwrapFilter()\nname = filter.name\nfilter.help_text = '\\n'.join([\n    \"Usage: rlwrap -z '$name <colour1>--<colour2> <command>\",\n    \"paint the prompt in colour gradient between colours <colour1> and <colour2>\",\n    \"colour names must be a 6 digit hex code of rgb,\",\n    \"e.g. 00ff00--ff0000\"\n",
                    "rendered": {
                      "text": "filter = rlwrapfilter.RlwrapFilter()\nname = filter.name\nfilter.help_text = '\\n'.join([\n    \"Usage: rlwrap -z '$name <colour1>--<colour2> <command>\",\n    \"paint the prompt in colour gradient between colours <colour1> and <colour2>\",\n    \"colour names must be a 6 digit hex code of rgb,\",\n    \"e.g. 00ff00--ff0000\"\n",
                      "markdown": "`filter = rlwrapfilter.RlwrapFilter()\nname = filter.name\nfilter.help_text = '\\n'.join([\n    \"Usage: rlwrap -z '$name <colour1>--<colour2> <command>\",\n    \"paint the prompt in colour gradient between colours <colour1> and <colour2>\",\n    \"colour names must be a 6 digit hex code of rgb,\",\n    \"e.g. 00ff00--ff0000\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/paint_prompt"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 38,
                  "endLine": 51,
                  "endColumn": 72,
                  "snippet": {
                    "text": "      }\n    }\n    die \"cound not find readable rgb.txt\\n\" unless  $X11_colour_table;\n    $filter -> send_output_oob(\"Edit $ENV{RLWRAP_FILTERDIR}/$name to get rid of these messages\\n\");\n  }\n  while (<COLOURS>) {\n    my ($R, $G, $B) = /(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+$colourname/i;\n",
                    "rendered": {
                      "text": "      }\n    }\n    die \"cound not find readable rgb.txt\\n\" unless  $X11_colour_table;\n    $filter -> send_output_oob(\"Edit $ENV{RLWRAP_FILTERDIR}/$name to get rid of these messages\\n\");\n  }\n  while (<COLOURS>) {\n    my ($R, $G, $B) = /(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+$colourname/i;\n",
                      "markdown": "`      }\n    }\n    die \"cound not find readable rgb.txt\\n\" unless  $X11_colour_table;\n    $filter -> send_output_oob(\"Edit $ENV{RLWRAP_FILTERDIR}/$name to get rid of these messages\\n\");\n  }\n  while (<COLOURS>) {\n    my ($R, $G, $B) = /(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+$colourname/i;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/paint_prompt"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 18,
                  "endLine": 50,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\tlast;\n      }\n    }\n    die \"cound not find readable rgb.txt\\n\" unless  $X11_colour_table;\n    $filter -> send_output_oob(\"Edit $ENV{RLWRAP_FILTERDIR}/$name to get rid of these messages\\n\");\n  }\n  while (<COLOURS>) {\n",
                    "rendered": {
                      "text": "\tlast;\n      }\n    }\n    die \"cound not find readable rgb.txt\\n\" unless  $X11_colour_table;\n    $filter -> send_output_oob(\"Edit $ENV{RLWRAP_FILTERDIR}/$name to get rid of these messages\\n\");\n  }\n  while (<COLOURS>) {\n",
                      "markdown": "`\tlast;\n      }\n    }\n    die \"cound not find readable rgb.txt\\n\" unless  $X11_colour_table;\n    $filter -> send_output_oob(\"Edit $ENV{RLWRAP_FILTERDIR}/$name to get rid of these messages\\n\");\n  }\n  while (<COLOURS>) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/paint_prompt"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 65,
                  "endLine": 40,
                  "endColumn": 71,
                  "snippet": {
                    "text": "  if (not open COLOURS, $X11_colour_table) {\n    warn \"Cannot read $X11_colour_table: trying to find another rgb.txt\\n\";\n    undef $X11_colour_table;\n    my $rgbs = `locate rgb.txt` or die \"cound not use 'locate' to find rgb.txt\\n\";\n    my @rgbs = split /\\r?\\n/, $rgbs;\n    foreach my $rgb (sort {length($a) <=> length($b) } @rgbs) {\n      next unless $rgb; # skip empty list element\n",
                    "rendered": {
                      "text": "  if (not open COLOURS, $X11_colour_table) {\n    warn \"Cannot read $X11_colour_table: trying to find another rgb.txt\\n\";\n    undef $X11_colour_table;\n    my $rgbs = `locate rgb.txt` or die \"cound not use 'locate' to find rgb.txt\\n\";\n    my @rgbs = split /\\r?\\n/, $rgbs;\n    foreach my $rgb (sort {length($a) <=> length($b) } @rgbs) {\n      next unless $rgb; # skip empty list element\n",
                      "markdown": "`  if (not open COLOURS, $X11_colour_table) {\n    warn \"Cannot read $X11_colour_table: trying to find another rgb.txt\\n\";\n    undef $X11_colour_table;\n    my $rgbs = `locate rgb.txt` or die \"cound not use 'locate' to find rgb.txt\\n\";\n    my @rgbs = split /\\r?\\n/, $rgbs;\n    foreach my $rgb (sort {length($a) <=> length($b) } @rgbs) {\n      next unless $rgb; # skip empty list element\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/paint_prompt"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 50,
                  "endLine": 38,
                  "endColumn": 56,
                  "snippet": {
                    "text": "sub colour2rgb {\n  my ($colourname) = @_;\n  if (not open COLOURS, $X11_colour_table) {\n    warn \"Cannot read $X11_colour_table: trying to find another rgb.txt\\n\";\n    undef $X11_colour_table;\n    my $rgbs = `locate rgb.txt` or die \"cound not use 'locate' to find rgb.txt\\n\";\n    my @rgbs = split /\\r?\\n/, $rgbs;\n",
                    "rendered": {
                      "text": "sub colour2rgb {\n  my ($colourname) = @_;\n  if (not open COLOURS, $X11_colour_table) {\n    warn \"Cannot read $X11_colour_table: trying to find another rgb.txt\\n\";\n    undef $X11_colour_table;\n    my $rgbs = `locate rgb.txt` or die \"cound not use 'locate' to find rgb.txt\\n\";\n    my @rgbs = split /\\r?\\n/, $rgbs;\n",
                      "markdown": "`sub colour2rgb {\n  my ($colourname) = @_;\n  if (not open COLOURS, $X11_colour_table) {\n    warn \"Cannot read $X11_colour_table: trying to find another rgb.txt\\n\";\n    undef $X11_colour_table;\n    my $rgbs = `locate rgb.txt` or die \"cound not use 'locate' to find rgb.txt\\n\";\n    my @rgbs = split /\\r?\\n/, $rgbs;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/paint_prompt"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 58,
                  "endLine": 30,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\nsub paint {\n  my ($bland) = @_;\n  die \"unpainted prompt contains ESC codes, consider using rlwrap --ansi-aware (-A)\\n\" if $bland =~ /\\e/;\n  init() unless $colours_were_declared;\n  return apply_ramp($bland, $rampsize);\n}\n",
                    "rendered": {
                      "text": "\nsub paint {\n  my ($bland) = @_;\n  die \"unpainted prompt contains ESC codes, consider using rlwrap --ansi-aware (-A)\\n\" if $bland =~ /\\e/;\n  init() unless $colours_were_declared;\n  return apply_ramp($bland, $rampsize);\n}\n",
                      "markdown": "`\nsub paint {\n  my ($bland) = @_;\n  die \"unpainted prompt contains ESC codes, consider using rlwrap --ansi-aware (-A)\\n\" if $bland =~ /\\e/;\n  init() unless $colours_were_declared;\n  return apply_ramp($bland, $rampsize);\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/paint_prompt"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 28,
                  "endLine": 19,
                  "endColumn": 36,
                  "snippet": {
                    "text": "my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z '$name <colour1>--<colour2>' <command>\\n\".\n\t\t     \"paint the prompt in colour gradient between X11 colours <colour1> and <colour2>\\n\".\n\t\t     \"spaces in colour names must be replaced by underscores, e.g. lemon_chiffon--pale_turquoise\");\n\n",
                    "rendered": {
                      "text": "my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z '$name <colour1>--<colour2>' <command>\\n\".\n\t\t     \"paint the prompt in colour gradient between X11 colours <colour1> and <colour2>\\n\".\n\t\t     \"spaces in colour names must be replaced by underscores, e.g. lemon_chiffon--pale_turquoise\");\n\n",
                      "markdown": "`my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z '$name <colour1>--<colour2>' <command>\\n\".\n\t\t     \"paint the prompt in colour gradient between X11 colours <colour1> and <colour2>\\n\".\n\t\t     \"spaces in colour names must be replaced by underscores, e.g. lemon_chiffon--pale_turquoise\");\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/paint_prompt"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\n# this filter tests rlwrap's tolerance for very heavily cooked prompts.\n# it uses the seldom-used xterm 256-colour mode (which may or may not work in your \n# other terminal emulators like rxvt) \n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\n# this filter tests rlwrap's tolerance for very heavily cooked prompts.\n# it uses the seldom-used xterm 256-colour mode (which may or may not work in your \n# other terminal emulators like rxvt) \n",
                      "markdown": "`#!/usr/bin/env perl\n\n# this filter tests rlwrap's tolerance for very heavily cooked prompts.\n# it uses the seldom-used xterm 256-colour mode (which may or may not work in your \n# other terminal emulators like rxvt) \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/listing"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");;\nuse RlwrapFilter;\nuse strict;\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");;\nuse RlwrapFilter;\nuse strict;\n",
                      "markdown": "`#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");;\nuse RlwrapFilter;\nuse strict;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/dissect_prompt"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 33,
                  "endLine": 18,
                  "endColumn": 42,
                  "snippet": {
                    "text": "filter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"Usage: rlwrap [-options] -z dissect_prompt.py <command>\\n\"\\\n                   + \"show hidden control codes in a <command>'s prompt\"\n\n\ndef dissect_prompt(prompt):\n",
                    "rendered": {
                      "text": "filter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"Usage: rlwrap [-options] -z dissect_prompt.py <command>\\n\"\\\n                   + \"show hidden control codes in a <command>'s prompt\"\n\n\ndef dissect_prompt(prompt):\n",
                      "markdown": "`filter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"Usage: rlwrap [-options] -z dissect_prompt.py <command>\\n\"\\\n                   + \"show hidden control codes in a <command>'s prompt\"\n\n\ndef dissect_prompt(prompt):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/dissect_prompt"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 73,
                  "endLine": 24,
                  "endColumn": 81,
                  "snippet": {
                    "text": "def dissect_prompt(prompt):\n    filter.send_output_oob(\"Prompt as ASCII, including non-printable characters: \" + ascii(prompt) + \"\\n\")\n    if '\\x01' in list(prompt):\n       filter.send_output_oob(\"N.B.: '\\\\x01' and  '\\\\x02' are added by to rlwrap to inform readline that the enclosed codes don't take up space\\n\")        \n    return prompt\n\n                   \n",
                    "rendered": {
                      "text": "def dissect_prompt(prompt):\n    filter.send_output_oob(\"Prompt as ASCII, including non-printable characters: \" + ascii(prompt) + \"\\n\")\n    if '\\x01' in list(prompt):\n       filter.send_output_oob(\"N.B.: '\\\\x01' and  '\\\\x02' are added by to rlwrap to inform readline that the enclosed codes don't take up space\\n\")        \n    return prompt\n\n                   \n",
                      "markdown": "`def dissect_prompt(prompt):\n    filter.send_output_oob(\"Prompt as ASCII, including non-printable characters: \" + ascii(prompt) + \"\\n\")\n    if '\\x01' in list(prompt):\n       filter.send_output_oob(\"N.B.: '\\\\x01' and  '\\\\x02' are added by to rlwrap to inform readline that the enclosed codes don't take up space\\n\")        \n    return prompt\n\n                   \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/dissect_prompt"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 26,
                  "endLine": 17,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"Usage: rlwrap [-options] -z dissect_prompt.py <command>\\n\"\\\n                   + \"show hidden control codes in a <command>'s prompt\"\n\n\n",
                    "rendered": {
                      "text": "\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"Usage: rlwrap [-options] -z dissect_prompt.py <command>\\n\"\\\n                   + \"show hidden control codes in a <command>'s prompt\"\n\n\n",
                      "markdown": "`\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"Usage: rlwrap [-options] -z dissect_prompt.py <command>\\n\"\\\n                   + \"show hidden control codes in a <command>'s prompt\"\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords.py"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 16,
                  "endLine": 40,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# uid: user3\n# cn: user3\n# sn: user3\n# userpassword: password\n\nfilter.run()\n",
                    "rendered": {
                      "text": "# uid: user3\n# cn: user3\n# sn: user3\n# userpassword: password\n\nfilter.run()\n",
                      "markdown": "`# uid: user3\n# cn: user3\n# sn: user3\n# userpassword: password\n\nfilter.run()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords.py"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 6,
                  "endLine": 40,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# uid: user3\n# cn: user3\n# sn: user3\n# userpassword: password\n\nfilter.run()\n",
                    "rendered": {
                      "text": "# uid: user3\n# cn: user3\n# sn: user3\n# userpassword: password\n\nfilter.run()\n",
                      "markdown": "`# uid: user3\n# cn: user3\n# sn: user3\n# userpassword: password\n\nfilter.run()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords.py"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 70,
                  "endLine": 34,
                  "endColumn": 78,
                  "snippet": {
                    "text": "# uncomment the following line for ldapmodify\n#filter.history_handler = lambda x: re.sub(r'(userpassword:\\s+)(\\S+)', r'\\1xXxXxXxX', x, flags=re.IGNORECASE)\n# Sample usage:\n# rlwrap -H history -f censor_passwords.py ldapmodify -D <bindDN> -w <password>\n# dn: uid=user1, ou=people, dc=redhat, dc=com\n# objectclass: inetOrgPerson\n# uid: user3\n",
                    "rendered": {
                      "text": "# uncomment the following line for ldapmodify\n#filter.history_handler = lambda x: re.sub(r'(userpassword:\\s+)(\\S+)', r'\\1xXxXxXxX', x, flags=re.IGNORECASE)\n# Sample usage:\n# rlwrap -H history -f censor_passwords.py ldapmodify -D <bindDN> -w <password>\n# dn: uid=user1, ou=people, dc=redhat, dc=com\n# objectclass: inetOrgPerson\n# uid: user3\n",
                      "markdown": "`# uncomment the following line for ldapmodify\n#filter.history_handler = lambda x: re.sub(r'(userpassword:\\s+)(\\S+)', r'\\1xXxXxXxX', x, flags=re.IGNORECASE)\n# Sample usage:\n# rlwrap -H history -f censor_passwords.py ldapmodify -D <bindDN> -w <password>\n# dn: uid=user1, ou=people, dc=redhat, dc=com\n# objectclass: inetOrgPerson\n# uid: user3\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords.py"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 30,
                  "endLine": 34,
                  "endColumn": 38,
                  "snippet": {
                    "text": "# uncomment the following line for ldapmodify\n#filter.history_handler = lambda x: re.sub(r'(userpassword:\\s+)(\\S+)', r'\\1xXxXxXxX', x, flags=re.IGNORECASE)\n# Sample usage:\n# rlwrap -H history -f censor_passwords.py ldapmodify -D <bindDN> -w <password>\n# dn: uid=user1, ou=people, dc=redhat, dc=com\n# objectclass: inetOrgPerson\n# uid: user3\n",
                    "rendered": {
                      "text": "# uncomment the following line for ldapmodify\n#filter.history_handler = lambda x: re.sub(r'(userpassword:\\s+)(\\S+)', r'\\1xXxXxXxX', x, flags=re.IGNORECASE)\n# Sample usage:\n# rlwrap -H history -f censor_passwords.py ldapmodify -D <bindDN> -w <password>\n# dn: uid=user1, ou=people, dc=redhat, dc=com\n# objectclass: inetOrgPerson\n# uid: user3\n",
                      "markdown": "`# uncomment the following line for ldapmodify\n#filter.history_handler = lambda x: re.sub(r'(userpassword:\\s+)(\\S+)', r'\\1xXxXxXxX', x, flags=re.IGNORECASE)\n# Sample usage:\n# rlwrap -H history -f censor_passwords.py ldapmodify -D <bindDN> -w <password>\n# dn: uid=user1, ou=people, dc=redhat, dc=com\n# objectclass: inetOrgPerson\n# uid: user3\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords.py"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 50,
                  "endLine": 32,
                  "endColumn": 58,
                  "snippet": {
                    "text": "filter.history_handler = lambda x: re.sub(r'(identified\\s+by\\s+)(\\S+)', r'\\1xXxXxXxX', x)\n\n# uncomment the following line for ldapmodify\n#filter.history_handler = lambda x: re.sub(r'(userpassword:\\s+)(\\S+)', r'\\1xXxXxXxX', x, flags=re.IGNORECASE)\n# Sample usage:\n# rlwrap -H history -f censor_passwords.py ldapmodify -D <bindDN> -w <password>\n# dn: uid=user1, ou=people, dc=redhat, dc=com\n",
                    "rendered": {
                      "text": "filter.history_handler = lambda x: re.sub(r'(identified\\s+by\\s+)(\\S+)', r'\\1xXxXxXxX', x)\n\n# uncomment the following line for ldapmodify\n#filter.history_handler = lambda x: re.sub(r'(userpassword:\\s+)(\\S+)', r'\\1xXxXxXxX', x, flags=re.IGNORECASE)\n# Sample usage:\n# rlwrap -H history -f censor_passwords.py ldapmodify -D <bindDN> -w <password>\n# dn: uid=user1, ou=people, dc=redhat, dc=com\n",
                      "markdown": "`filter.history_handler = lambda x: re.sub(r'(identified\\s+by\\s+)(\\S+)', r'\\1xXxXxXxX', x)\n\n# uncomment the following line for ldapmodify\n#filter.history_handler = lambda x: re.sub(r'(userpassword:\\s+)(\\S+)', r'\\1xXxXxXxX', x, flags=re.IGNORECASE)\n# Sample usage:\n# rlwrap -H history -f censor_passwords.py ldapmodify -D <bindDN> -w <password>\n# dn: uid=user1, ou=people, dc=redhat, dc=com\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords.py"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 45,
                  "endLine": 27,
                  "endColumn": 53,
                  "snippet": {
                    "text": "filter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"rlwrap -H history -z censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\\n\"\\\n                   +\"This filter removes the password from SQL 'identified by' clauses\\n\"\n\nfilter.history_handler = lambda x: re.sub(r'(identified\\s+by\\s+)(\\S+)', r'\\1xXxXxXxX', x)\n\n",
                    "rendered": {
                      "text": "filter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"rlwrap -H history -z censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\\n\"\\\n                   +\"This filter removes the password from SQL 'identified by' clauses\\n\"\n\nfilter.history_handler = lambda x: re.sub(r'(identified\\s+by\\s+)(\\S+)', r'\\1xXxXxXxX', x)\n\n",
                      "markdown": "`filter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"rlwrap -H history -z censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\\n\"\\\n                   +\"This filter removes the password from SQL 'identified by' clauses\\n\"\n\nfilter.history_handler = lambda x: re.sub(r'(identified\\s+by\\s+)(\\S+)', r'\\1xXxXxXxX', x)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords.py"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 48,
                  "endLine": 26,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"rlwrap -H history -z censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\\n\"\\\n                   +\"This filter removes the password from SQL 'identified by' clauses\\n\"\n\nfilter.history_handler = lambda x: re.sub(r'(identified\\s+by\\s+)(\\S+)', r'\\1xXxXxXxX', x)\n",
                    "rendered": {
                      "text": "\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"rlwrap -H history -z censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\\n\"\\\n                   +\"This filter removes the password from SQL 'identified by' clauses\\n\"\n\nfilter.history_handler = lambda x: re.sub(r'(identified\\s+by\\s+)(\\S+)', r'\\1xXxXxXxX', x)\n",
                      "markdown": "`\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"rlwrap -H history -z censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\\n\"\\\n                   +\"This filter removes the password from SQL 'identified by' clauses\\n\"\n\nfilter.history_handler = lambda x: re.sub(r'(identified\\s+by\\s+)(\\S+)', r'\\1xXxXxXxX', x)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 28,
                  "endLine": 8,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\nUsage:\n\nrlwrap -H history -f censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\nSQL > create user test identified by secret;\n\n\"\"\"\n",
                    "rendered": {
                      "text": "\nUsage:\n\nrlwrap -H history -f censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\nSQL > create user test identified by secret;\n\n\"\"\"\n",
                      "markdown": "`\nUsage:\n\nrlwrap -H history -f censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\nSQL > create user test identified by secret;\n\n\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords.py"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 76,
                  "endLine": 26,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"rlwrap -H history -z censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\\n\"\\\n                   +\"This filter removes the password from SQL 'identified by' clauses\\n\"\n\nfilter.history_handler = lambda x: re.sub(r'(identified\\s+by\\s+)(\\S+)', r'\\1xXxXxXxX', x)\n",
                    "rendered": {
                      "text": "\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"rlwrap -H history -z censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\\n\"\\\n                   +\"This filter removes the password from SQL 'identified by' clauses\\n\"\n\nfilter.history_handler = lambda x: re.sub(r'(identified\\s+by\\s+)(\\S+)', r'\\1xXxXxXxX', x)\n",
                      "markdown": "`\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"rlwrap -H history -z censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\\n\"\\\n                   +\"This filter removes the password from SQL 'identified by' clauses\\n\"\n\nfilter.history_handler = lambda x: re.sub(r'(identified\\s+by\\s+)(\\S+)', r'\\1xXxXxXxX', x)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 56,
                  "endLine": 8,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\nUsage:\n\nrlwrap -H history -f censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\nSQL > create user test identified by secret;\n\n\"\"\"\n",
                    "rendered": {
                      "text": "\nUsage:\n\nrlwrap -H history -f censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\nSQL > create user test identified by secret;\n\n\"\"\"\n",
                      "markdown": "`\nUsage:\n\nrlwrap -H history -f censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\nSQL > create user test identified by secret;\n\n\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords.py"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 1,
                  "endLine": 34,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# uncomment the following line for ldapmodify\n#filter.history_handler = lambda x: re.sub(r'(userpassword:\\s+)(\\S+)', r'\\1xXxXxXxX', x, flags=re.IGNORECASE)\n# Sample usage:\n# rlwrap -H history -f censor_passwords.py ldapmodify -D <bindDN> -w <password>\n# dn: uid=user1, ou=people, dc=redhat, dc=com\n# objectclass: inetOrgPerson\n# uid: user3\n",
                    "rendered": {
                      "text": "# uncomment the following line for ldapmodify\n#filter.history_handler = lambda x: re.sub(r'(userpassword:\\s+)(\\S+)', r'\\1xXxXxXxX', x, flags=re.IGNORECASE)\n# Sample usage:\n# rlwrap -H history -f censor_passwords.py ldapmodify -D <bindDN> -w <password>\n# dn: uid=user1, ou=people, dc=redhat, dc=com\n# objectclass: inetOrgPerson\n# uid: user3\n",
                      "markdown": "`# uncomment the following line for ldapmodify\n#filter.history_handler = lambda x: re.sub(r'(userpassword:\\s+)(\\S+)', r'\\1xXxXxXxX', x, flags=re.IGNORECASE)\n# Sample usage:\n# rlwrap -H history -f censor_passwords.py ldapmodify -D <bindDN> -w <password>\n# dn: uid=user1, ou=people, dc=redhat, dc=com\n# objectclass: inetOrgPerson\n# uid: user3\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords.py"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 8,
                  "endColumn": 7,
                  "snippet": {
                    "text": "a demo for masking sensitive input in the history\n\nUsage:\n\nrlwrap -H history -f censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\nSQL > create user test identified by secret;\n\n\"\"\"\n",
                    "rendered": {
                      "text": "a demo for masking sensitive input in the history\n\nUsage:\n\nrlwrap -H history -f censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\nSQL > create user test identified by secret;\n\n\"\"\"\n",
                      "markdown": "`a demo for masking sensitive input in the history\n\nUsage:\n\nrlwrap -H history -f censor_passwords.py sqlplus scott@<hostname>:1521/ORCL\nSQL > create user test identified by secret;\n\n\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/simple_macro"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 20,
                  "endLine": 75,
                  "endColumn": 28,
                  "snippet": {
                    "text": "Usage: rlwrap -z '$name [<saved_macros>]' <command>\nsimple on-the-fly macro processing\ntype \\$macro to use a macro\ntype \\$macro<TAB> to expand it right now ('\\$' should not be word-breaking, so you may need to call rlwrap with -b '')\n\\$macro((ex pan sion)) to (re-)define\nmacros are kept in <saved_macros> between sessions\nEOF\n",
                    "rendered": {
                      "text": "Usage: rlwrap -z '$name [<saved_macros>]' <command>\nsimple on-the-fly macro processing\ntype \\$macro to use a macro\ntype \\$macro<TAB> to expand it right now ('\\$' should not be word-breaking, so you may need to call rlwrap with -b '')\n\\$macro((ex pan sion)) to (re-)define\nmacros are kept in <saved_macros> between sessions\nEOF\n",
                      "markdown": "`Usage: rlwrap -z '$name [<saved_macros>]' <command>\nsimple on-the-fly macro processing\ntype \\$macro to use a macro\ntype \\$macro<TAB> to expand it right now ('\\$' should not be word-breaking, so you may need to call rlwrap with -b '')\n\\$macro((ex pan sion)) to (re-)define\nmacros are kept in <saved_macros> between sessions\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/simple_macro"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 55,
                  "endLine": 21,
                  "endColumn": 63,
                  "snippet": {
                    "text": "my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n$filter -> help_text(help());\n$filter -> input_handler(\\&expand_and_record_macros); # expand macros in input\n$filter -> echo_handler(sub {$last_raw_input});   # but echo the raw (un-expanded) input\n$filter -> completion_handler(\\&complete_macro);\n$filter -> run;\n",
                    "rendered": {
                      "text": "my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n$filter -> help_text(help());\n$filter -> input_handler(\\&expand_and_record_macros); # expand macros in input\n$filter -> echo_handler(sub {$last_raw_input});   # but echo the raw (un-expanded) input\n$filter -> completion_handler(\\&complete_macro);\n$filter -> run;\n",
                      "markdown": "`my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n$filter -> help_text(help());\n$filter -> input_handler(\\&expand_and_record_macros); # expand macros in input\n$filter -> echo_handler(sub {$last_raw_input});   # but echo the raw (un-expanded) input\n$filter -> completion_handler(\\&complete_macro);\n$filter -> run;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/simple_macro"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 99,
                  "endLine": 75,
                  "endColumn": 107,
                  "snippet": {
                    "text": "Usage: rlwrap -z '$name [<saved_macros>]' <command>\nsimple on-the-fly macro processing\ntype \\$macro to use a macro\ntype \\$macro<TAB> to expand it right now ('\\$' should not be word-breaking, so you may need to call rlwrap with -b '')\n\\$macro((ex pan sion)) to (re-)define\nmacros are kept in <saved_macros> between sessions\nEOF\n",
                    "rendered": {
                      "text": "Usage: rlwrap -z '$name [<saved_macros>]' <command>\nsimple on-the-fly macro processing\ntype \\$macro to use a macro\ntype \\$macro<TAB> to expand it right now ('\\$' should not be word-breaking, so you may need to call rlwrap with -b '')\n\\$macro((ex pan sion)) to (re-)define\nmacros are kept in <saved_macros> between sessions\nEOF\n",
                      "markdown": "`Usage: rlwrap -z '$name [<saved_macros>]' <command>\nsimple on-the-fly macro processing\ntype \\$macro to use a macro\ntype \\$macro<TAB> to expand it right now ('\\$' should not be word-breaking, so you may need to call rlwrap with -b '')\n\\$macro((ex pan sion)) to (re-)define\nmacros are kept in <saved_macros> between sessions\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/simple_macro"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 20,
                  "endLine": 75,
                  "endColumn": 28,
                  "snippet": {
                    "text": "Usage: rlwrap -z '$name [<saved_macros>]' <command>\nsimple on-the-fly macro processing\ntype \\$macro to use a macro\ntype \\$macro<TAB> to expand it right now ('\\$' should not be word-breaking, so you may need to call rlwrap with -b '')\n\\$macro((ex pan sion)) to (re-)define\nmacros are kept in <saved_macros> between sessions\nEOF\n",
                    "rendered": {
                      "text": "Usage: rlwrap -z '$name [<saved_macros>]' <command>\nsimple on-the-fly macro processing\ntype \\$macro to use a macro\ntype \\$macro<TAB> to expand it right now ('\\$' should not be word-breaking, so you may need to call rlwrap with -b '')\n\\$macro((ex pan sion)) to (re-)define\nmacros are kept in <saved_macros> between sessions\nEOF\n",
                      "markdown": "`Usage: rlwrap -z '$name [<saved_macros>]' <command>\nsimple on-the-fly macro processing\ntype \\$macro to use a macro\ntype \\$macro<TAB> to expand it right now ('\\$' should not be word-breaking, so you may need to call rlwrap with -b '')\n\\$macro((ex pan sion)) to (re-)define\nmacros are kept in <saved_macros> between sessions\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/simple_macro"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 6,
                  "endLine": 72,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\nsub help {\n\treturn <<EOF;\nUsage: rlwrap -z '$name [<saved_macros>]' <command>\nsimple on-the-fly macro processing\ntype \\$macro to use a macro\ntype \\$macro<TAB> to expand it right now ('\\$' should not be word-breaking, so you may need to call rlwrap with -b '')\n",
                    "rendered": {
                      "text": "\nsub help {\n\treturn <<EOF;\nUsage: rlwrap -z '$name [<saved_macros>]' <command>\nsimple on-the-fly macro processing\ntype \\$macro to use a macro\ntype \\$macro<TAB> to expand it right now ('\\$' should not be word-breaking, so you may need to call rlwrap with -b '')\n",
                      "markdown": "`\nsub help {\n\treturn <<EOF;\nUsage: rlwrap -z '$name [<saved_macros>]' <command>\nsimple on-the-fly macro processing\ntype \\$macro to use a macro\ntype \\$macro<TAB> to expand it right now ('\\$' should not be word-breaking, so you may need to call rlwrap with -b '')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/simple_macro"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 55,
                  "endLine": 21,
                  "endColumn": 63,
                  "snippet": {
                    "text": "my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n$filter -> help_text(help());\n$filter -> input_handler(\\&expand_and_record_macros); # expand macros in input\n$filter -> echo_handler(sub {$last_raw_input});   # but echo the raw (un-expanded) input\n$filter -> completion_handler(\\&complete_macro);\n$filter -> run;\n",
                    "rendered": {
                      "text": "my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n$filter -> help_text(help());\n$filter -> input_handler(\\&expand_and_record_macros); # expand macros in input\n$filter -> echo_handler(sub {$last_raw_input});   # but echo the raw (un-expanded) input\n$filter -> completion_handler(\\&complete_macro);\n$filter -> run;\n",
                      "markdown": "`my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n$filter -> help_text(help());\n$filter -> input_handler(\\&expand_and_record_macros); # expand macros in input\n$filter -> echo_handler(sub {$last_raw_input});   # but echo the raw (un-expanded) input\n$filter -> completion_handler(\\&complete_macro);\n$filter -> run;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/simple_macro"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\n# this filter tests the use of echo, completion and input handlers\n# it completes by returning a macro expansion which doens't need to start with the prefix\n# (zsh users are used to this)\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\n# this filter tests the use of echo, completion and input handlers\n# it completes by returning a macro expansion which doens't need to start with the prefix\n# (zsh users are used to this)\n",
                      "markdown": "`#!/usr/bin/env perl\n\n# this filter tests the use of echo, completion and input handlers\n# it completes by returning a macro expansion which doens't need to start with the prefix\n# (zsh users are used to this)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/scrub_prompt"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 55,
                  "endLine": 26,
                  "endColumn": 64,
                  "snippet": {
                    "text": "    my ($dirty) = @_;\n    my $clean = $dirty;\n    $clean =~ s/^.*\\r//; \n    $clean =~ s/\\x1b]0;.*?\\x07//g; # remove xterm title control sequence\n    $clean =~ s/\\x1b.*?m//g; # remove colour codes\n    $clean =~ s/\\x1b\\[K//g; # clear to end of line in xterm\n    $clean =~ s/[\\x01-\\x1f]//g;\n",
                    "rendered": {
                      "text": "    my ($dirty) = @_;\n    my $clean = $dirty;\n    $clean =~ s/^.*\\r//; \n    $clean =~ s/\\x1b]0;.*?\\x07//g; # remove xterm title control sequence\n    $clean =~ s/\\x1b.*?m//g; # remove colour codes\n    $clean =~ s/\\x1b\\[K//g; # clear to end of line in xterm\n    $clean =~ s/[\\x01-\\x1f]//g;\n",
                      "markdown": "`    my ($dirty) = @_;\n    my $clean = $dirty;\n    $clean =~ s/^.*\\r//; \n    $clean =~ s/\\x1b]0;.*?\\x07//g; # remove xterm title control sequence\n    $clean =~ s/\\x1b.*?m//g; # remove colour codes\n    $clean =~ s/\\x1b\\[K//g; # clear to end of line in xterm\n    $clean =~ s/[\\x01-\\x1f]//g;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/scrub_prompt"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 28,
                  "endLine": 13,
                  "endColumn": 36,
                  "snippet": {
                    "text": "my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z '$name [-o]' <command>\\n\".\n\t\t     \"removes all junk from prompt\\n\"\n);\n\n",
                    "rendered": {
                      "text": "my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z '$name [-o]' <command>\\n\".\n\t\t     \"removes all junk from prompt\\n\"\n);\n\n",
                      "markdown": "`my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z '$name [-o]' <command>\\n\".\n\t\t     \"removes all junk from prompt\\n\"\n);\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/scrub_prompt"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\n# simple filter to remove colour codes, xterm titles and 'el' \n# (clear to end-of-line) sequences from prompt\n\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\n# simple filter to remove colour codes, xterm titles and 'el' \n# (clear to end-of-line) sequences from prompt\n\n",
                      "markdown": "`#!/usr/bin/env perl\n\n# simple filter to remove colour codes, xterm titles and 'el' \n# (clear to end-of-line) sequences from prompt\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/null"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 28,
                  "endLine": 11,
                  "endColumn": 36,
                  "snippet": {
                    "text": "# Filter version of \"Hello World\":\nmy $filter = new RlwrapFilter;\n\n$filter -> help_text(\"Usage: rlwrap [-options] -z null <command>\\n\".\n\t\t     \"a filter that does nothing\");\n\n$filter -> run;\n",
                    "rendered": {
                      "text": "# Filter version of \"Hello World\":\nmy $filter = new RlwrapFilter;\n\n$filter -> help_text(\"Usage: rlwrap [-options] -z null <command>\\n\".\n\t\t     \"a filter that does nothing\");\n\n$filter -> run;\n",
                      "markdown": "`# Filter version of \"Hello World\":\nmy $filter = new RlwrapFilter;\n\n$filter -> help_text(\"Usage: rlwrap [-options] -z null <command>\\n\".\n\t\t     \"a filter that does nothing\");\n\n$filter -> run;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/null"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                      "markdown": "`#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys.py"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 95,
                  "endLine": 38,
                  "endColumn": 99,
                  "snippet": {
                    "text": "# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n\n# generic hotkey handler, that dispatches on the value of $key (using the hash %$keymap defined at the top of this file\n\n@rlwrapfilter.intercept_error\ndef hotkey(key, *other_params): # key = e.g.  \"<CTRL-Y>\"\n",
                    "rendered": {
                      "text": "# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n\n# generic hotkey handler, that dispatches on the value of $key (using the hash %$keymap defined at the top of this file\n\n@rlwrapfilter.intercept_error\ndef hotkey(key, *other_params): # key = e.g.  \"<CTRL-Y>\"\n",
                      "markdown": "`# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n\n# generic hotkey handler, that dispatches on the value of $key (using the hash %$keymap defined at the top of this file\n\n@rlwrapfilter.intercept_error\ndef hotkey(key, *other_params): # key = e.g.  \"<CTRL-Y>\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys.py"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 60,
                  "endLine": 33,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# returned list are ignored.\n#\n# If the postfix is returned with a concluding newline, the resulting input line is accepted immediately, otherwise\n# it is put in readlines input buffer again, with the cursor at the beginning of the returned postfix \n#\n# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n",
                    "rendered": {
                      "text": "# returned list are ignored.\n#\n# If the postfix is returned with a concluding newline, the resulting input line is accepted immediately, otherwise\n# it is put in readlines input buffer again, with the cursor at the beginning of the returned postfix \n#\n# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n",
                      "markdown": "`# returned list are ignored.\n#\n# If the postfix is returned with a concluding newline, the resulting input line is accepted immediately, otherwise\n# it is put in readlines input buffer again, with the cursor at the beginning of the returned postfix \n#\n# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 27,
                  "endLine": 24,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#   2: the prefix, i.e. the input line up to (but not including) the cursor\n#   3: the postfix: the rest of the input line (without a concluding newline, of course)\n#   4: the whole history (all lines, oldest first, interspersed with newlines: \"line 1\\nline2\\n ...line N\")\n#   5: the history position at the moment of the hotkey press (oldest line = 0)\n#\n# If the hotkey was bound to \"rlwrap-hotkey-without-history\" the last two parameters will be empty and can be ignored\n# The return value is a similar list (where all values may be changed: the input line could be re-written,\n",
                    "rendered": {
                      "text": "#   2: the prefix, i.e. the input line up to (but not including) the cursor\n#   3: the postfix: the rest of the input line (without a concluding newline, of course)\n#   4: the whole history (all lines, oldest first, interspersed with newlines: \"line 1\\nline2\\n ...line N\")\n#   5: the history position at the moment of the hotkey press (oldest line = 0)\n#\n# If the hotkey was bound to \"rlwrap-hotkey-without-history\" the last two parameters will be empty and can be ignored\n# The return value is a similar list (where all values may be changed: the input line could be re-written,\n",
                      "markdown": "`#   2: the prefix, i.e. the input line up to (but not including) the cursor\n#   3: the postfix: the rest of the input line (without a concluding newline, of course)\n#   4: the whole history (all lines, oldest first, interspersed with newlines: \"line 1\\nline2\\n ...line N\")\n#   5: the history position at the moment of the hotkey press (oldest line = 0)\n#\n# If the hotkey was bound to \"rlwrap-hotkey-without-history\" the last two parameters will be empty and can be ignored\n# The return value is a similar list (where all values may be changed: the input line could be re-written,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys.py"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 15,
                  "endLine": 207,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    rlwrap_filter = rlwrapfilter.RlwrapFilter()\n    name = rlwrap_filter.name\n    rlwrap_filter.help_text = '\\n'.join([\n        \"Usage: rlwrap -z {0} <command>\\n\".format(name),\n        \"handle hotkeys (but only if bound to 'rlwrap-hotkey' in your .inputrc):\\n\",\n        document_all_hotkeys()\n    ])\n",
                    "rendered": {
                      "text": "    rlwrap_filter = rlwrapfilter.RlwrapFilter()\n    name = rlwrap_filter.name\n    rlwrap_filter.help_text = '\\n'.join([\n        \"Usage: rlwrap -z {0} <command>\\n\".format(name),\n        \"handle hotkeys (but only if bound to 'rlwrap-hotkey' in your .inputrc):\\n\",\n        document_all_hotkeys()\n    ])\n",
                      "markdown": "`    rlwrap_filter = rlwrapfilter.RlwrapFilter()\n    name = rlwrap_filter.name\n    rlwrap_filter.help_text = '\\n'.join([\n        \"Usage: rlwrap -z {0} <command>\\n\".format(name),\n        \"handle hotkeys (but only if bound to 'rlwrap-hotkey' in your .inputrc):\\n\",\n        document_all_hotkeys()\n    ])\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys.py"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 107,
                  "endLine": 124,
                  "endColumn": 115,
                  "snippet": {
                    "text": "\ndef split_off_last_word(string):\n    '''split_off_last_word(\"In the gener\") = (\"In the \", \"gener\") '''\n    break_chars = os.environ['RLWRAP_BREAK_CHARS'] if 'RLWRAP_BREAK_CHARS' in os.environ else \" \\t\\n\" # old rlwrap with newer filter - use a sensible default\n    break_chars =  re.sub(r'([\\[\\]])', r'\\\\1', break_chars)      \n    break_chars = break_chars or ' ' # prevent python from choking on a bad regex '[]' in the next line\n    words       = re.split('[{}]'.format(break_chars), string)\n",
                    "rendered": {
                      "text": "\ndef split_off_last_word(string):\n    '''split_off_last_word(\"In the gener\") = (\"In the \", \"gener\") '''\n    break_chars = os.environ['RLWRAP_BREAK_CHARS'] if 'RLWRAP_BREAK_CHARS' in os.environ else \" \\t\\n\" # old rlwrap with newer filter - use a sensible default\n    break_chars =  re.sub(r'([\\[\\]])', r'\\\\1', break_chars)      \n    break_chars = break_chars or ' ' # prevent python from choking on a bad regex '[]' in the next line\n    words       = re.split('[{}]'.format(break_chars), string)\n",
                      "markdown": "`\ndef split_off_last_word(string):\n    '''split_off_last_word(\"In the gener\") = (\"In the \", \"gener\") '''\n    break_chars = os.environ['RLWRAP_BREAK_CHARS'] if 'RLWRAP_BREAK_CHARS' in os.environ else \" \\t\\n\" # old rlwrap with newer filter - use a sensible default\n    break_chars =  re.sub(r'([\\[\\]])', r'\\\\1', break_chars)      \n    break_chars = break_chars or ' ' # prevent python from choking on a bad regex '[]' in the next line\n    words       = re.split('[{}]'.format(break_chars), string)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys.py"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 28,
                  "endLine": 69,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\ndef date_in_echo_area(doc, *boring):\n    if doc:\n        return \"show current time in echo area\"\n    date = safe_backtick(qw('date +%H:%M'))\n    return (\"({0}) \".format(date), *boring)\n\n",
                    "rendered": {
                      "text": "\ndef date_in_echo_area(doc, *boring):\n    if doc:\n        return \"show current time in echo area\"\n    date = safe_backtick(qw('date +%H:%M'))\n    return (\"({0}) \".format(date), *boring)\n\n",
                      "markdown": "`\ndef date_in_echo_area(doc, *boring):\n    if doc:\n        return \"show current time in echo area\"\n    date = safe_backtick(qw('date +%H:%M'))\n    return (\"({0}) \".format(date), *boring)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys.py"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 102,
                  "endLine": 38,
                  "endColumn": 107,
                  "snippet": {
                    "text": "# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n\n# generic hotkey handler, that dispatches on the value of $key (using the hash %$keymap defined at the top of this file\n\n@rlwrapfilter.intercept_error\ndef hotkey(key, *other_params): # key = e.g.  \"<CTRL-Y>\"\n",
                    "rendered": {
                      "text": "# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n\n# generic hotkey handler, that dispatches on the value of $key (using the hash %$keymap defined at the top of this file\n\n@rlwrapfilter.intercept_error\ndef hotkey(key, *other_params): # key = e.g.  \"<CTRL-Y>\"\n",
                      "markdown": "`# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n\n# generic hotkey handler, that dispatches on the value of $key (using the hash %$keymap defined at the top of this file\n\n@rlwrapfilter.intercept_error\ndef hotkey(key, *other_params): # key = e.g.  \"<CTRL-Y>\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/edit_history"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 6,
                  "endLine": 33,
                  "endColumn": 14,
                  "snippet": {
                    "text": "my $name = $filter -> name;\n\n$filter -> help_text(<<DOC);\nUsage: rlwrap -z $name <command>\nAny hotkey bound to 'rlwrap-hotkey' will blah...\nDOC\n\n",
                    "rendered": {
                      "text": "my $name = $filter -> name;\n\n$filter -> help_text(<<DOC);\nUsage: rlwrap -z $name <command>\nAny hotkey bound to 'rlwrap-hotkey' will blah...\nDOC\n\n",
                      "markdown": "`my $name = $filter -> name;\n\n$filter -> help_text(<<DOC);\nUsage: rlwrap -z $name <command>\nAny hotkey bound to 'rlwrap-hotkey' will blah...\nDOC\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/edit_history"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 36,
                  "endLine": 12,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n# We want any editor to receive SIGWINCH.\n# SIGWINCH is not in POSIX, which means that POSIX.pm doesn't\n# know about it. We use 'kill -l' to find it.\n\nmy $raw_input;\n\n",
                    "rendered": {
                      "text": "\n# We want any editor to receive SIGWINCH.\n# SIGWINCH is not in POSIX, which means that POSIX.pm doesn't\n# know about it. We use 'kill -l' to find it.\n\nmy $raw_input;\n\n",
                      "markdown": "`\n# We want any editor to receive SIGWINCH.\n# SIGWINCH is not in POSIX, which means that POSIX.pm doesn't\n# know about it. We use 'kill -l' to find it.\n\nmy $raw_input;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/edit_history"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\n",
                      "markdown": "`#!/usr/bin/env perl\n\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/completions/testclient"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 51,
                  "endLine": 7,
                  "endColumn": 55,
                  "snippet": {
                    "text": "exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex\nea commodi consequatur? Quis autem vel eum iure reprehenderit qui in\nea voluptate velit esse quam nihil molestiae consequatur, vel illum\nqui dolorem eum fugiat quo voluptas nulla pariatur? At vero eos et\naccusamus et iusto odio dignissimos ducimus qui blanditiis praesentium\nvoluptatum deleniti atque corrupti quos dolores et quas molestias\nexcepturi sint occaccati cupiditate non provident, similique sunt in\n",
                    "rendered": {
                      "text": "exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex\nea commodi consequatur? Quis autem vel eum iure reprehenderit qui in\nea voluptate velit esse quam nihil molestiae consequatur, vel illum\nqui dolorem eum fugiat quo voluptas nulla pariatur? At vero eos et\naccusamus et iusto odio dignissimos ducimus qui blanditiis praesentium\nvoluptatum deleniti atque corrupti quos dolores et quas molestias\nexcepturi sint occaccati cupiditate non provident, similique sunt in\n",
                      "markdown": "`exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex\nea commodi consequatur? Quis autem vel eum iure reprehenderit qui in\nea voluptate velit esse quam nihil molestiae consequatur, vel illum\nqui dolorem eum fugiat quo voluptas nulla pariatur? At vero eos et\naccusamus et iusto odio dignissimos ducimus qui blanditiis praesentium\nvoluptatum deleniti atque corrupti quos dolores et quas molestias\nexcepturi sint occaccati cupiditate non provident, similique sunt in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/completions/testclient"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 61,
                  "endLine": 1,
                  "endColumn": 66,
                  "snippet": {
                    "text": "lorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia\nnonnumquam eiusmodi tempora incidunt ut labore et dolore magnam\naliquam quaerat voluptatem. Ut enim ad minima veniam, quia nostrum\nexercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex\n",
                    "rendered": {
                      "text": "lorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia\nnonnumquam eiusmodi tempora incidunt ut labore et dolore magnam\naliquam quaerat voluptatem. Ut enim ad minima veniam, quia nostrum\nexercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex\n",
                      "markdown": "`lorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia\nnonnumquam eiusmodi tempora incidunt ut labore et dolore magnam\naliquam quaerat voluptatem. Ut enim ad minima veniam, quia nostrum\nexercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/unbackspace"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 38,
                  "endLine": 22,
                  "endColumn": 45,
                  "snippet": {
                    "text": "sub eat_backspaces {\n  while(s/.\\x08//g) {} # let them eat\n  s/\\x08//g;           # remove the rest\n  s/\\r<//g;            # specially for mysql (hrmpf...!)\n  s/\\r//g;\n  return $_;\n}\n",
                    "rendered": {
                      "text": "sub eat_backspaces {\n  while(s/.\\x08//g) {} # let them eat\n  s/\\x08//g;           # remove the rest\n  s/\\r<//g;            # specially for mysql (hrmpf...!)\n  s/\\r//g;\n  return $_;\n}\n",
                      "markdown": "`sub eat_backspaces {\n  while(s/.\\x08//g) {} # let them eat\n  s/\\x08//g;           # remove the rest\n  s/\\r<//g;            # specially for mysql (hrmpf...!)\n  s/\\r//g;\n  return $_;\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/unbackspace"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 28,
                  "endLine": 11,
                  "endColumn": 36,
                  "snippet": {
                    "text": "my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z $name <command>\\n\".\n\t\t     \"remove backspaces from output\\n\".\n\t\t     \"(after letting them 'eat' their preceding characters)\");\n\n",
                    "rendered": {
                      "text": "my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z $name <command>\\n\".\n\t\t     \"remove backspaces from output\\n\".\n\t\t     \"(after letting them 'eat' their preceding characters)\");\n\n",
                      "markdown": "`my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z $name <command>\\n\".\n\t\t     \"remove backspaces from output\\n\".\n\t\t     \"(after letting them 'eat' their preceding characters)\");\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/unbackspace"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                      "markdown": "`#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/outfilter"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 50,
                  "endLine": 11,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n$filter->help_text(\"Usage: rlwrap -z '$name <filter-command> [<filter-command-args> ... ]' <command>\\n\"\n                   . \"Filter <command> output through <filter-command>\\n\"\n                   . \"e.g. 'rlwrap  -z \\\"outfilter grep -E --color 'blah|\\$'\\\" command' will colour all blah's in commands output\");\n\n\n# prevent quoting headaches\n",
                    "rendered": {
                      "text": "\n$filter->help_text(\"Usage: rlwrap -z '$name <filter-command> [<filter-command-args> ... ]' <command>\\n\"\n                   . \"Filter <command> output through <filter-command>\\n\"\n                   . \"e.g. 'rlwrap  -z \\\"outfilter grep -E --color 'blah|\\$'\\\" command' will colour all blah's in commands output\");\n\n\n# prevent quoting headaches\n",
                      "markdown": "`\n$filter->help_text(\"Usage: rlwrap -z '$name <filter-command> [<filter-command-args> ... ]' <command>\\n\"\n                   . \"Filter <command> output through <filter-command>\\n\"\n                   . \"e.g. 'rlwrap  -z \\\"outfilter grep -E --color 'blah|\\$'\\\" command' will colour all blah's in commands output\");\n\n\n# prevent quoting headaches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/outfilter"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 26,
                  "endLine": 9,
                  "endColumn": 34,
                  "snippet": {
                    "text": "my $filter = new RlwrapFilter;\nmy $name = $filter->name;\n\n$filter->help_text(\"Usage: rlwrap -z '$name <filter-command> [<filter-command-args> ... ]' <command>\\n\"\n                   . \"Filter <command> output through <filter-command>\\n\"\n                   . \"e.g. 'rlwrap  -z \\\"outfilter grep -E --color 'blah|\\$'\\\" command' will colour all blah's in commands output\");\n\n",
                    "rendered": {
                      "text": "my $filter = new RlwrapFilter;\nmy $name = $filter->name;\n\n$filter->help_text(\"Usage: rlwrap -z '$name <filter-command> [<filter-command-args> ... ]' <command>\\n\"\n                   . \"Filter <command> output through <filter-command>\\n\"\n                   . \"e.g. 'rlwrap  -z \\\"outfilter grep -E --color 'blah|\\$'\\\" command' will colour all blah's in commands output\");\n\n",
                      "markdown": "`my $filter = new RlwrapFilter;\nmy $name = $filter->name;\n\n$filter->help_text(\"Usage: rlwrap -z '$name <filter-command> [<filter-command-args> ... ]' <command>\\n\"\n                   . \"Filter <command> output through <filter-command>\\n\"\n                   . \"e.g. 'rlwrap  -z \\\"outfilter grep -E --color 'blah|\\$'\\\" command' will colour all blah's in commands output\");\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/outfilter"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 15,
                  "endLine": 2,
                  "snippet": {
                    "text": "#! /usr/bin/env perl\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n\n",
                    "rendered": {
                      "text": "#! /usr/bin/env perl\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n\n",
                      "markdown": "`#! /usr/bin/env perl\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/logger"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 16,
                  "snippet": {
                    "text": "my $filter = new RlwrapFilter(message_handler => \\&logit);\n\n$filter -> help_text(\n\t\"Usage: rlwrap -z 'logger [-l] logfile' <command>\\n\" .\n\t\"log messages to a file (for debugging)\\n\".\n\t\"give logfile name as an argument, -l for long format\\n\" .\n  \"useful in a pipeline (rlwrap -z 'pipeline logger in:filter:logger out')\");\n",
                    "rendered": {
                      "text": "my $filter = new RlwrapFilter(message_handler => \\&logit);\n\n$filter -> help_text(\n\t\"Usage: rlwrap -z 'logger [-l] logfile' <command>\\n\" .\n\t\"log messages to a file (for debugging)\\n\".\n\t\"give logfile name as an argument, -l for long format\\n\" .\n  \"useful in a pipeline (rlwrap -z 'pipeline logger in:filter:logger out')\");\n",
                      "markdown": "`my $filter = new RlwrapFilter(message_handler => \\&logit);\n\n$filter -> help_text(\n\t\"Usage: rlwrap -z 'logger [-l] logfile' <command>\\n\" .\n\t\"log messages to a file (for debugging)\\n\".\n\t\"give logfile name as an argument, -l for long format\\n\" .\n  \"useful in a pipeline (rlwrap -z 'pipeline logger in:filter:logger out')\");\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/logger"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                      "markdown": "`#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 32,
                  "endLine": 107,
                  "endColumn": 76,
                  "snippet": {
                    "text": "  $doc and return \"edit current history with '$editor' - add empty line (lines) to select (accept) the following line\";\n  $histpos =~ /\\d/ or die \"$histpos is not a number - did you bind this key to 'rlwrap-hotkey-without-history'?\";\n  $instance++;\n  my $editfile = ($ENV{TMP} || $ENV{TEMP} || \"/tmp\") . \"/history.$$.$instance.txt\";\n  push @tempfiles, $editfile;\n  my $lineno = $histpos + 1;\n  my $colno = length($prefix) + 1;\n",
                    "rendered": {
                      "text": "  $doc and return \"edit current history with '$editor' - add empty line (lines) to select (accept) the following line\";\n  $histpos =~ /\\d/ or die \"$histpos is not a number - did you bind this key to 'rlwrap-hotkey-without-history'?\";\n  $instance++;\n  my $editfile = ($ENV{TMP} || $ENV{TEMP} || \"/tmp\") . \"/history.$$.$instance.txt\";\n  push @tempfiles, $editfile;\n  my $lineno = $histpos + 1;\n  my $colno = length($prefix) + 1;\n",
                      "markdown": "`  $doc and return \"edit current history with '$editor' - add empty line (lines) to select (accept) the following line\";\n  $histpos =~ /\\d/ or die \"$histpos is not a number - did you bind this key to 'rlwrap-hotkey-without-history'?\";\n  $instance++;\n  my $editfile = ($ENV{TMP} || $ENV{TEMP} || \"/tmp\") . \"/history.$$.$instance.txt\";\n  push @tempfiles, $editfile;\n  my $lineno = $histpos + 1;\n  my $colno = length($prefix) + 1;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 95,
                  "endLine": 64,
                  "endColumn": 99,
                  "snippet": {
                    "text": "# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n\n# generic hotkey handler, that dispatches on the value of $key (using the hash %$keymap defined at the top of this file\nsub hotkey {\n    my ($keyseq, @other_params) = @_;                                  # key = e.g.  \"<CTRL-Y>\"\n    my $handler = $handlers -> {$keyseq};\n",
                    "rendered": {
                      "text": "# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n\n# generic hotkey handler, that dispatches on the value of $key (using the hash %$keymap defined at the top of this file\nsub hotkey {\n    my ($keyseq, @other_params) = @_;                                  # key = e.g.  \"<CTRL-Y>\"\n    my $handler = $handlers -> {$keyseq};\n",
                      "markdown": "`# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n\n# generic hotkey handler, that dispatches on the value of $key (using the hash %$keymap defined at the top of this file\nsub hotkey {\n    my ($keyseq, @other_params) = @_;                                  # key = e.g.  \"<CTRL-Y>\"\n    my $handler = $handlers -> {$keyseq};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 61,
                  "endLine": 59,
                  "endColumn": 65,
                  "snippet": {
                    "text": "# history is not passed to the handler, and the last two elements of the returned list are ignored.\n#\n# If the postfix is returned with a concluding newline, the resulting input line is accepted immediately, otherwise\n# it is put in readline's input buffer again, with the cursor at the beginning of the returned postfix\n#\n# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n",
                    "rendered": {
                      "text": "# history is not passed to the handler, and the last two elements of the returned list are ignored.\n#\n# If the postfix is returned with a concluding newline, the resulting input line is accepted immediately, otherwise\n# it is put in readline's input buffer again, with the cursor at the beginning of the returned postfix\n#\n# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n",
                      "markdown": "`# history is not passed to the handler, and the last two elements of the returned list are ignored.\n#\n# If the postfix is returned with a concluding newline, the resulting input line is accepted immediately, otherwise\n# it is put in readline's input buffer again, with the cursor at the beginning of the returned postfix\n#\n# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 46,
                  "endLine": 50,
                  "endColumn": 50,
                  "snippet": {
                    "text": "i.e. the input line up to (but not including) the cursor\n#   3: the postfix: the rest of the input line (without a concluding newline, of course)\n#   4: the whole history (all lines, oldest first, interspersed with newlines: \"line 1\\nline2\\n ...line N\")\n#   5: the history position (as a line number) at the moment of the hotkey press (oldest line = 0)\n#\n# If the hotkey was bound to \"rlwrap-hotkey-without-history\" the last two parameters will be empty and can be ignored\n# The return value is a similar list (where all values may be changed: the input line could be re-written, the history\n# revised, e",
                    "rendered": {
                      "text": "i.e. the input line up to (but not including) the cursor\n#   3: the postfix: the rest of the input line (without a concluding newline, of course)\n#   4: the whole history (all lines, oldest first, interspersed with newlines: \"line 1\\nline2\\n ...line N\")\n#   5: the history position (as a line number) at the moment of the hotkey press (oldest line = 0)\n#\n# If the hotkey was bound to \"rlwrap-hotkey-without-history\" the last two parameters will be empty and can be ignored\n# The return value is a similar list (where all values may be changed: the input line could be re-written, the history\n# revised, e",
                      "markdown": "`i.e. the input line up to (but not including) the cursor\n#   3: the postfix: the rest of the input line (without a concluding newline, of course)\n#   4: the whole history (all lines, oldest first, interspersed with newlines: \"line 1\\nline2\\n ...line N\")\n#   5: the history position (as a line number) at the moment of the hotkey press (oldest line = 0)\n#\n# If the hotkey was bound to \"rlwrap-hotkey-without-history\" the last two parameters will be empty and can be ignored\n# The return value is a similar list (where all values may be changed: the input line could be re-written, the history\n# revised, e`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 35,
                  "endLine": 150,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    my ($string) = @_;\n    my $break_chars = $ENV{RLWRAP_BREAK_CHARS};\n    $break_chars =~ s/([\\[\\]])/\\\\$1/g; # escape any [ and ]\n    $break_chars ||= ' '; # prevent perl from choking on the regex /[]/ in the next line\n    my @words = split /[$break_chars]/, $string;\n    my $last_word = $words[-1];\n    return [substr($string, 0,  length($string) - length($last_word)), $last_word];\n",
                    "rendered": {
                      "text": "    my ($string) = @_;\n    my $break_chars = $ENV{RLWRAP_BREAK_CHARS};\n    $break_chars =~ s/([\\[\\]])/\\\\$1/g; # escape any [ and ]\n    $break_chars ||= ' '; # prevent perl from choking on the regex /[]/ in the next line\n    my @words = split /[$break_chars]/, $string;\n    my $last_word = $words[-1];\n    return [substr($string, 0,  length($string) - length($last_word)), $last_word];\n",
                      "markdown": "`    my ($string) = @_;\n    my $break_chars = $ENV{RLWRAP_BREAK_CHARS};\n    $break_chars =~ s/([\\[\\]])/\\\\$1/g; # escape any [ and ]\n    $break_chars ||= ' '; # prevent perl from choking on the regex /[]/ in the next line\n    my @words = split /[$break_chars]/, $string;\n    my $last_word = $words[-1];\n    return [substr($string, 0,  length($string) - length($last_word)), $last_word];\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 31,
                  "endLine": 94,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nsub date_in_echo_area {\n  my ($doc, @boring) = @_;\n  $doc and return \"show current time in echo area\";\n  my $date = safe_backtick(qw(date +%H:%M));\n  return (\"($date) \", @boring);\n}\n",
                    "rendered": {
                      "text": "\nsub date_in_echo_area {\n  my ($doc, @boring) = @_;\n  $doc and return \"show current time in echo area\";\n  my $date = safe_backtick(qw(date +%H:%M));\n  return (\"($date) \", @boring);\n}\n",
                      "markdown": "`\nsub date_in_echo_area {\n  my ($doc, @boring) = @_;\n  $doc and return \"show current time in echo area\";\n  my $date = safe_backtick(qw(date +%H:%M));\n  return (\"($date) \", @boring);\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 102,
                  "endLine": 64,
                  "endColumn": 107,
                  "snippet": {
                    "text": "# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n\n# generic hotkey handler, that dispatches on the value of $key (using the hash %$keymap defined at the top of this file\nsub hotkey {\n    my ($keyseq, @other_params) = @_;                                  # key = e.g.  \"<CTRL-Y>\"\n    my $handler = $handlers -> {$keyseq};\n",
                    "rendered": {
                      "text": "# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n\n# generic hotkey handler, that dispatches on the value of $key (using the hash %$keymap defined at the top of this file\nsub hotkey {\n    my ($keyseq, @other_params) = @_;                                  # key = e.g.  \"<CTRL-Y>\"\n    my $handler = $handlers -> {$keyseq};\n",
                      "markdown": "`# Summary: ($echo, $prefix, $postfix, $history, $histpos) = handler($key, $prefix, $postfix, $history, $histpos)\n\n\n# generic hotkey handler, that dispatches on the value of $key (using the hash %$keymap defined at the top of this file\nsub hotkey {\n    my ($keyseq, @other_params) = @_;                                  # key = e.g.  \"<CTRL-Y>\"\n    my $handler = $handlers -> {$keyseq};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 28,
                  "endLine": 35,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z $name <command>\\n\".\n\t\t     \"handle hotkeys (but only if bound to 'rlwrap-hotkey' in your .inputrc):\\n\" .\n                     document_all_hotkeys());\n\n",
                    "rendered": {
                      "text": "\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z $name <command>\\n\".\n\t\t     \"handle hotkeys (but only if bound to 'rlwrap-hotkey' in your .inputrc):\\n\" .\n                     document_all_hotkeys());\n\n",
                      "markdown": "`\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z $name <command>\\n\".\n\t\t     \"handle hotkeys (but only if bound to 'rlwrap-hotkey' in your .inputrc):\\n\" .\n                     document_all_hotkeys());\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_hotkeys"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                      "markdown": "`#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/debug_null"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 87,
                  "endLine": 25,
                  "endColumn": 93,
                  "snippet": {
                    "text": "sub wait_a_little_and_return {\n    my($retval) = @_;\n    if ($delay_all_responses) { \n        select(undef, undef, undef, 0.1*rand()); # Emulate a filter that takes a lot of time to respond\n    }\n    return($retval);\n}\n",
                    "rendered": {
                      "text": "sub wait_a_little_and_return {\n    my($retval) = @_;\n    if ($delay_all_responses) { \n        select(undef, undef, undef, 0.1*rand()); # Emulate a filter that takes a lot of time to respond\n    }\n    return($retval);\n}\n",
                      "markdown": "`sub wait_a_little_and_return {\n    my($retval) = @_;\n    if ($delay_all_responses) { \n        select(undef, undef, undef, 0.1*rand()); # Emulate a filter that takes a lot of time to respond\n    }\n    return($retval);\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/debug_null"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 28,
                  "endLine": 12,
                  "endColumn": 36,
                  "snippet": {
                    "text": "my $filter = new RlwrapFilter;\n\n\n$filter -> help_text(\"Usage: rlwrap [-options] -z null <command>\\n\".\n\t\t     \"a filter that does nothing, but can test the effect of (slow) filters\\n\".\n                     \"(only if debug flags 'filtering' and 'random delay' are set\" );\n\n",
                    "rendered": {
                      "text": "my $filter = new RlwrapFilter;\n\n\n$filter -> help_text(\"Usage: rlwrap [-options] -z null <command>\\n\".\n\t\t     \"a filter that does nothing, but can test the effect of (slow) filters\\n\".\n                     \"(only if debug flags 'filtering' and 'random delay' are set\" );\n\n",
                      "markdown": "`my $filter = new RlwrapFilter;\n\n\n$filter -> help_text(\"Usage: rlwrap [-options] -z null <command>\\n\".\n\t\t     \"a filter that does nothing, but can test the effect of (slow) filters\\n\".\n                     \"(only if debug flags 'filtering' and 'random delay' are set\" );\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/debug_null"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                      "markdown": "`#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 29,
                  "endLine": 146,
                  "endColumn": 37,
                  "snippet": {
                    "text": "It is important to note that the filter, and hence all its handlers,\nare bypassed when \\fIcommand\\fR is in direct mode, i.e. when it asks for\nsingle keystrokes (and also, for security reasons, when it doesn't\necho, e.g. when asking for a password). If you don't want this to happen, use\n\\&\\fBrlwrap \\-a\\fR to force \\fBrlwrap\\fR to remain in readline mode and to\napply the filter to \\fIall\\fR of \\fIcommand\\fR's in\\- and output. This will\nmake editors and pagers (which respond to single keystrokes) unusable,\n",
                    "rendered": {
                      "text": "It is important to note that the filter, and hence all its handlers,\nare bypassed when \\fIcommand\\fR is in direct mode, i.e. when it asks for\nsingle keystrokes (and also, for security reasons, when it doesn't\necho, e.g. when asking for a password). If you don't want this to happen, use\n\\&\\fBrlwrap \\-a\\fR to force \\fBrlwrap\\fR to remain in readline mode and to\napply the filter to \\fIall\\fR of \\fIcommand\\fR's in\\- and output. This will\nmake editors and pagers (which respond to single keystrokes) unusable,\n",
                      "markdown": "`It is important to note that the filter, and hence all its handlers,\nare bypassed when \\fIcommand\\fR is in direct mode, i.e. when it asks for\nsingle keystrokes (and also, for security reasons, when it doesn't\necho, e.g. when asking for a password). If you don't want this to happen, use\n\\&\\fBrlwrap \\-a\\fR to force \\fBrlwrap\\fR to remain in readline mode and to\napply the filter to \\fIall\\fR of \\fIcommand\\fR's in\\- and output. This will\nmake editors and pagers (which respond to single keystrokes) unusable,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 92,
                  "endLine": 75,
                  "endColumn": 100,
                  "snippet": {
                    "text": "\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n",
                    "rendered": {
                      "text": "\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n",
                      "markdown": "`\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 63,
                  "endLine": 75,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n",
                    "rendered": {
                      "text": "\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n",
                      "markdown": "`\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 44,
                  "endLine": 75,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n",
                    "rendered": {
                      "text": "\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n",
                      "markdown": "`\\&\n\\&  $filter \\-> output_handler(sub {s/apple/orange/; $_}); # re\\-write output\n\\&  $filter \\-> prompt_handler(\\e&pimp_the_prompt); # change prompt\n\\&  $filter \\-> history_handler(sub {s/with password \\ew+/with password ****/; $_}); # keep passwords out of history\n\\&\n\\&  $filter \\-> run;\n.Ve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 473,
                  "startColumn": 24,
                  "endLine": 473,
                  "endColumn": 28,
                  "snippet": {
                    "text": "as long as \\fBrlwrap\\fR runs. Filter methods are immediately usable. When\n\\&\\fIcommand\\fR exits, the filter stays around for a little longer in order\nto process \\fIcommand\\fR's last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\n",
                    "rendered": {
                      "text": "as long as \\fBrlwrap\\fR runs. Filter methods are immediately usable. When\n\\&\\fIcommand\\fR exits, the filter stays around for a little longer in order\nto process \\fIcommand\\fR's last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\n",
                      "markdown": "`as long as \\fBrlwrap\\fR runs. Filter methods are immediately usable. When\n\\&\\fIcommand\\fR exits, the filter stays around for a little longer in order\nto process \\fIcommand\\fR's last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 455,
                  "startColumn": 17,
                  "endLine": 455,
                  "endColumn": 21,
                  "snippet": {
                    "text": ".PP\nTAG_WHAT_ARE_YOUR_INTERESTS is only ever used internally, to prevent the exchange of messages that\nwon't be handled by the filter anyway. It will be seen by the general message handler, and therefore show\nup (exactly once, at program start) in the output of e.g. the \\fBlogger\\fR filter.\n.SH SIGNALS\n.IX Header \"SIGNALS\"\nAs STDIN is still connected to the users teminal, one might expect the filter\n",
                    "rendered": {
                      "text": ".PP\nTAG_WHAT_ARE_YOUR_INTERESTS is only ever used internally, to prevent the exchange of messages that\nwon't be handled by the filter anyway. It will be seen by the general message handler, and therefore show\nup (exactly once, at program start) in the output of e.g. the \\fBlogger\\fR filter.\n.SH SIGNALS\n.IX Header \"SIGNALS\"\nAs STDIN is still connected to the users teminal, one might expect the filter\n",
                      "markdown": "`.PP\nTAG_WHAT_ARE_YOUR_INTERESTS is only ever used internally, to prevent the exchange of messages that\nwon't be handled by the filter anyway. It will be seen by the general message handler, and therefore show\nup (exactly once, at program start) in the output of e.g. the \\fBlogger\\fR filter.\n.SH SIGNALS\n.IX Header \"SIGNALS\"\nAs STDIN is still connected to the users teminal, one might expect the filter\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 40,
                  "endLine": 367,
                  "endColumn": 44,
                  "snippet": {
                    "text": ".el .IP \"\\f(CW$f\\fR \\-> cloak_and_dagger($question, \\f(CW$prompt\\fR, \\f(CW$timeout\\fR);\" 4\n.IX Item \"$f -> cloak_and_dagger($question, $prompt, $timeout);\"\nSend \\f(CW$question\\fR to \\fIcommand\\fR's input and read back everything that\ncomes back until \\f(CW$prompt\\fR is seen at \"end-of-chunk\", or no new\nchunks arrive for \\f(CW$timeout\\fR seconds, whichever comes first.  Return the\nresponse (without the final \\f(CW$prompt\\fR).  \\fBrlwrap\\fR remains completely\nunaware of this conversation.\n",
                    "rendered": {
                      "text": ".el .IP \"\\f(CW$f\\fR \\-> cloak_and_dagger($question, \\f(CW$prompt\\fR, \\f(CW$timeout\\fR);\" 4\n.IX Item \"$f -> cloak_and_dagger($question, $prompt, $timeout);\"\nSend \\f(CW$question\\fR to \\fIcommand\\fR's input and read back everything that\ncomes back until \\f(CW$prompt\\fR is seen at \"end-of-chunk\", or no new\nchunks arrive for \\f(CW$timeout\\fR seconds, whichever comes first.  Return the\nresponse (without the final \\f(CW$prompt\\fR).  \\fBrlwrap\\fR remains completely\nunaware of this conversation.\n",
                      "markdown": "`.el .IP \"\\f(CW$f\\fR \\-> cloak_and_dagger($question, \\f(CW$prompt\\fR, \\f(CW$timeout\\fR);\" 4\n.IX Item \"$f -> cloak_and_dagger($question, $prompt, $timeout);\"\nSend \\f(CW$question\\fR to \\fIcommand\\fR's input and read back everything that\ncomes back until \\f(CW$prompt\\fR is seen at \"end-of-chunk\", or no new\nchunks arrive for \\f(CW$timeout\\fR seconds, whichever comes first.  Return the\nresponse (without the final \\f(CW$prompt\\fR).  \\fBrlwrap\\fR remains completely\nunaware of this conversation.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 90,
                  "endLine": 352,
                  "endColumn": 94,
                  "snippet": {
                    "text": "\\&    $filter \\-> tweak_readline_oob(\"rl_filename_completion_desired\", \"0\" or \"1\");\n.Ve\n.Sp\nThe parameters should not contain \"::\" (two consecutive colons). This method can be called at any\nmoment, even before \\f(CW$filter\\fR \\-> run\n.ie n .IP \"$f \\-> add_to_completion_list(@words)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> add_to_completion_list(@words)\" 4\n",
                    "rendered": {
                      "text": "\\&    $filter \\-> tweak_readline_oob(\"rl_filename_completion_desired\", \"0\" or \"1\");\n.Ve\n.Sp\nThe parameters should not contain \"::\" (two consecutive colons). This method can be called at any\nmoment, even before \\f(CW$filter\\fR \\-> run\n.ie n .IP \"$f \\-> add_to_completion_list(@words)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> add_to_completion_list(@words)\" 4\n",
                      "markdown": "`\\&    $filter \\-> tweak_readline_oob(\"rl_filename_completion_desired\", \"0\" or \"1\");\n.Ve\n.Sp\nThe parameters should not contain \"::\" (two consecutive colons). This method can be called at any\nmoment, even before \\f(CW$filter\\fR \\-> run\n.ie n .IP \"$f \\-> add_to_completion_list(@words)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> add_to_completion_list(@words)\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 3,
                  "endLine": 342,
                  "endColumn": 3,
                  "snippet": {
                    "text": "Send a specially formatted out-of-band message in order to tweak\nreadline (i.e. to make \\fBrlwrap\\fR call a \\fBreadline\\fR function or set a\n\\&\\fBreadline\\fR variable). See the GNU \\fBReadline\\fR documentation for details.\n.Sp\nAt this moment, the following tweaks are recognised:\n.Sp\n.Vb 5\n\\&    $filter \\-> tweak_readline_oob(\"rl_variable_bind\", $rl_variable_name, $value);\n",
                    "rendered": {
                      "text": "Send a specially formatted out-of-band message in order to tweak\nreadline (i.e. to make \\fBrlwrap\\fR call a \\fBreadline\\fR function or set a\n\\&\\fBreadline\\fR variable). See the GNU \\fBReadline\\fR documentation for details.\n.Sp\nAt this moment, the following tweaks are recognised:\n.Sp\n.Vb 5\n\\&    $filter \\-> tweak_readline_oob(\"rl_variable_bind\", $rl_variable_name, $value);\n",
                      "markdown": "`Send a specially formatted out-of-band message in order to tweak\nreadline (i.e. to make \\fBrlwrap\\fR call a \\fBreadline\\fR function or set a\n\\&\\fBreadline\\fR variable). See the GNU \\fBReadline\\fR documentation for details.\n.Sp\nAt this moment, the following tweaks are recognised:\n.Sp\n.Vb 5\n\\&    $filter \\-> tweak_readline_oob(\"rl_variable_bind\", $rl_variable_name, $value);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 45,
                  "endLine": 121,
                  "endColumn": 49,
                  "snippet": {
                    "text": "They get called from the 'run' method in response to a message sent\nfrom \\fBrlwrap\\fR.  Messages consist of a tag indicating which handler\nshould be called (e.g. TAG_INPUT, TAG_HISTORY) and the message\ntext. Usually, a filter overrides only one or at most two methods.\n.SS \"CALLING CONVENTIONS\"\n.IX Subsection \"CALLING CONVENTIONS\"\nIn many cases (e.g. TAG_INPUT, TAG_OUTPUT, TAG_PROMPT) the message\n",
                    "rendered": {
                      "text": "They get called from the 'run' method in response to a message sent\nfrom \\fBrlwrap\\fR.  Messages consist of a tag indicating which handler\nshould be called (e.g. TAG_INPUT, TAG_HISTORY) and the message\ntext. Usually, a filter overrides only one or at most two methods.\n.SS \"CALLING CONVENTIONS\"\n.IX Subsection \"CALLING CONVENTIONS\"\nIn many cases (e.g. TAG_INPUT, TAG_OUTPUT, TAG_PROMPT) the message\n",
                      "markdown": "`They get called from the 'run' method in response to a message sent\nfrom \\fBrlwrap\\fR.  Messages consist of a tag indicating which handler\nshould be called (e.g. TAG_INPUT, TAG_HISTORY) and the message\ntext. Usually, a filter overrides only one or at most two methods.\n.SS \"CALLING CONVENTIONS\"\n.IX Subsection \"CALLING CONVENTIONS\"\nIn many cases (e.g. TAG_INPUT, TAG_OUTPUT, TAG_PROMPT) the message\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 546,
                  "startColumn": 3,
                  "endLine": 546,
                  "endColumn": 11,
                  "snippet": {
                    "text": "tedious typing of tag names:\n.PP\n.Vb 1\n\\&  rlwrap \\-f tagnames filter_to_be_debugged\n.Ve\n.PP\nBecause \\fBrlwrap\\fR cannot put TABs and newlines in input lines, filters will\n",
                    "rendered": {
                      "text": "tedious typing of tag names:\n.PP\n.Vb 1\n\\&  rlwrap \\-f tagnames filter_to_be_debugged\n.Ve\n.PP\nBecause \\fBrlwrap\\fR cannot put TABs and newlines in input lines, filters will\n",
                      "markdown": "`tedious typing of tag names:\n.PP\n.Vb 1\n\\&  rlwrap \\-f tagnames filter_to_be_debugged\n.Ve\n.PP\nBecause \\fBrlwrap\\fR cannot put TABs and newlines in input lines, filters will\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 528,
                  "startColumn": 37,
                  "endLine": 528,
                  "endColumn": 45,
                  "snippet": {
                    "text": ".IX Subsection \"RUNNING WITHOUT rlwrap\"\nWhen called by rlwrap, filters get their input from\n\\&\\f(CW$RLWRAP_INPUT_PIPE_FD\\fR and write their output to\n\\&\\f(CW$RLWRAP_OUTPUT_PIPE_FD\\fR, and expect and write messages consisting of a\ntag byte, a 32\\-bit length and the message proper. This is not terribly\nuseful when running a filter directly from the command line (outside\nrlwrap), even if we set the RLWRAP_*_FD ourselves.\n",
                    "rendered": {
                      "text": ".IX Subsection \"RUNNING WITHOUT rlwrap\"\nWhen called by rlwrap, filters get their input from\n\\&\\f(CW$RLWRAP_INPUT_PIPE_FD\\fR and write their output to\n\\&\\f(CW$RLWRAP_OUTPUT_PIPE_FD\\fR, and expect and write messages consisting of a\ntag byte, a 32\\-bit length and the message proper. This is not terribly\nuseful when running a filter directly from the command line (outside\nrlwrap), even if we set the RLWRAP_*_FD ourselves.\n",
                      "markdown": "`.IX Subsection \"RUNNING WITHOUT rlwrap\"\nWhen called by rlwrap, filters get their input from\n\\&\\f(CW$RLWRAP_INPUT_PIPE_FD\\fR and write their output to\n\\&\\f(CW$RLWRAP_OUTPUT_PIPE_FD\\fR, and expect and write messages consisting of a\ntag byte, a 32\\-bit length and the message proper. This is not terribly\nuseful when running a filter directly from the command line (outside\nrlwrap), even if we set the RLWRAP_*_FD ourselves.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 522,
                  "startColumn": 3,
                  "endLine": 522,
                  "endColumn": 11,
                  "snippet": {
                    "text": "the \\fBlogger\\fR filter, using a pipeline:\n.PP\n.Vb 1\n\\&  rlwrap \\-z \\*(Aqpipeline logger incoming : my_filter : logger outgoing\\*(Aq command\n.Ve\n.SS \"RUNNING WITHOUT \\fBrlwrap\\fP\"\n.IX Subsection \"RUNNING WITHOUT rlwrap\"\n",
                    "rendered": {
                      "text": "the \\fBlogger\\fR filter, using a pipeline:\n.PP\n.Vb 1\n\\&  rlwrap \\-z \\*(Aqpipeline logger incoming : my_filter : logger outgoing\\*(Aq command\n.Ve\n.SS \"RUNNING WITHOUT \\fBrlwrap\\fP\"\n.IX Subsection \"RUNNING WITHOUT rlwrap\"\n",
                      "markdown": "`the \\fBlogger\\fR filter, using a pipeline:\n.PP\n.Vb 1\n\\&  rlwrap \\-z \\*(Aqpipeline logger incoming : my_filter : logger outgoing\\*(Aq command\n.Ve\n.SS \"RUNNING WITHOUT \\fBrlwrap\\fP\"\n.IX Subsection \"RUNNING WITHOUT rlwrap\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 510,
                  "startColumn": 76,
                  "endLine": 511,
                  "snippet": {
                    "text": "\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n.SH \"DEBUGGING FILTERS\"\n.IX Header \"DEBUGGING FILTERS\"\nWhile RlwrapFilter.pm makes it easy to write simple filters, debugging\n",
                    "rendered": {
                      "text": "\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n.SH \"DEBUGGING FILTERS\"\n.IX Header \"DEBUGGING FILTERS\"\nWhile RlwrapFilter.pm makes it easy to write simple filters, debugging\n",
                      "markdown": "`\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n.SH \"DEBUGGING FILTERS\"\n.IX Header \"DEBUGGING FILTERS\"\nWhile RlwrapFilter.pm makes it easy to write simple filters, debugging\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 110,
                  "endLine": 508,
                  "endColumn": 118,
                  "snippet": {
                    "text": "\\&\n\\&    RLWRAP_MASTER_PTY_FD  File descriptor of command\\*(Aqs pty.\n\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n",
                    "rendered": {
                      "text": "\\&\n\\&    RLWRAP_MASTER_PTY_FD  File descriptor of command\\*(Aqs pty.\n\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n",
                      "markdown": "`\\&\n\\&    RLWRAP_MASTER_PTY_FD  File descriptor of command\\*(Aqs pty.\n\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 42,
                  "endLine": 508,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\\&\n\\&    RLWRAP_MASTER_PTY_FD  File descriptor of command\\*(Aqs pty.\n\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n",
                    "rendered": {
                      "text": "\\&\n\\&    RLWRAP_MASTER_PTY_FD  File descriptor of command\\*(Aqs pty.\n\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n",
                      "markdown": "`\\&\n\\&    RLWRAP_MASTER_PTY_FD  File descriptor of command\\*(Aqs pty.\n\\&\n\\&    RLWRAP_BREAK_CHARS    The characters rlwrap considers word\\-breaking (cf. the \\-\\-break\\-chars option in rlwrap (1))\n\\&\n\\&    RLWRAP_DEBUG          The value of the \\-\\-debug (\\-d) option given to rlwrap\n.Ve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 498,
                  "startColumn": 69,
                  "endLine": 498,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\\&\n\\&    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\\&\n\\&    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n\\&                          the candidate prompt is filtered through the output handler (and displayed before\n\\&                          being overwritten by the cooked prompt).\n\\&\n",
                    "rendered": {
                      "text": "\\&\n\\&    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\\&\n\\&    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n\\&                          the candidate prompt is filtered through the output handler (and displayed before\n\\&                          being overwritten by the cooked prompt).\n\\&\n",
                      "markdown": "`\\&\n\\&    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\\&\n\\&    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n\\&                          the candidate prompt is filtered through the output handler (and displayed before\n\\&                          being overwritten by the cooked prompt).\n\\&\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 498,
                  "startColumn": 35,
                  "endLine": 498,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\\&\n\\&    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\\&\n\\&    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n\\&                          the candidate prompt is filtered through the output handler (and displayed before\n\\&                          being overwritten by the cooked prompt).\n\\&\n",
                    "rendered": {
                      "text": "\\&\n\\&    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\\&\n\\&    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n\\&                          the candidate prompt is filtered through the output handler (and displayed before\n\\&                          being overwritten by the cooked prompt).\n\\&\n",
                      "markdown": "`\\&\n\\&    RLWRAP_COMMAND_LINE   command line of the rlwrapped command\n\\&\n\\&    RLWRAP_IMPATIENT      whether rlwrap is in \"impatient mode\" (cf rlwrap (1)). In impatient mode,\n\\&                          the candidate prompt is filtered through the output handler (and displayed before\n\\&                          being overwritten by the cooked prompt).\n\\&\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 27,
                  "endLine": 492,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\\&\n\\&    PATH                  rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter\\*(Aqs PATH\n\\&\n\\&    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\\&\n\\&    RLWRAP_COMMAND_PID    process ID of the rlwrapped command\n\\&\n",
                    "rendered": {
                      "text": "\\&\n\\&    PATH                  rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter\\*(Aqs PATH\n\\&\n\\&    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\\&\n\\&    RLWRAP_COMMAND_PID    process ID of the rlwrapped command\n\\&\n",
                      "markdown": "`\\&\n\\&    PATH                  rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter\\*(Aqs PATH\n\\&\n\\&    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\\&\n\\&    RLWRAP_COMMAND_PID    process ID of the rlwrapped command\n\\&\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 490,
                  "startColumn": 27,
                  "endLine": 490,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\\&    RLWRAP_FILTERDIR      directory where RlwrapFilter.pm and most filters live (set by rlwrap, can be\n\\&                          overridden by the user before calling rlwrap)\n\\&\n\\&    PATH                  rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter\\*(Aqs PATH\n\\&\n\\&    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\\&\n",
                    "rendered": {
                      "text": "\\&    RLWRAP_FILTERDIR      directory where RlwrapFilter.pm and most filters live (set by rlwrap, can be\n\\&                          overridden by the user before calling rlwrap)\n\\&\n\\&    PATH                  rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter\\*(Aqs PATH\n\\&\n\\&    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\\&\n",
                      "markdown": "`\\&    RLWRAP_FILTERDIR      directory where RlwrapFilter.pm and most filters live (set by rlwrap, can be\n\\&                          overridden by the user before calling rlwrap)\n\\&\n\\&    PATH                  rlwrap automatically adds $RLWRAP_FILTERDIR to the front of filter\\*(Aqs PATH\n\\&\n\\&    RLWRAP_VERSION        rlwrap version (e.g. \"0.35\")\n\\&\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 477,
                  "startColumn": 33,
                  "endLine": 477,
                  "endColumn": 41,
                  "snippet": {
                    "text": "error, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message \\- out-of-band messages\nare not always processed immediately)\n.PP\n",
                    "rendered": {
                      "text": "error, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message \\- out-of-band messages\nare not always processed immediately)\n.PP\n",
                      "markdown": "`error, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message \\- out-of-band messages\nare not always processed immediately)\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 477,
                  "startColumn": 10,
                  "endLine": 477,
                  "endColumn": 18,
                  "snippet": {
                    "text": "error, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message \\- out-of-band messages\nare not always processed immediately)\n.PP\n",
                    "rendered": {
                      "text": "error, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message \\- out-of-band messages\nare not always processed immediately)\n.PP\n",
                      "markdown": "`error, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\nmessage to rlwrap before exiting. rlwrap will then report the message\nand exit (just after its next in-band message \\- out-of-band messages\nare not always processed immediately)\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 473,
                  "startColumn": 32,
                  "endLine": 473,
                  "endColumn": 38,
                  "snippet": {
                    "text": "as long as \\fBrlwrap\\fR runs. Filter methods are immediately usable. When\n\\&\\fIcommand\\fR exits, the filter stays around for a little longer in order\nto process \\fIcommand\\fR's last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\n",
                    "rendered": {
                      "text": "as long as \\fBrlwrap\\fR runs. Filter methods are immediately usable. When\n\\&\\fIcommand\\fR exits, the filter stays around for a little longer in order\nto process \\fIcommand\\fR's last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\n",
                      "markdown": "`as long as \\fBrlwrap\\fR runs. Filter methods are immediately usable. When\n\\&\\fIcommand\\fR exits, the filter stays around for a little longer in order\nto process \\fIcommand\\fR's last words. As calling the cwd and\ncloak_and_dagger methods at that time will make the filter die with an\nerror, it may be advisable to wrap those calls in eval{}\n.PP\nIf a filter calls \\fBdie()\\fR it will send an (out-of-band) TAG_ERROR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 458,
                  "startColumn": 59,
                  "endLine": 458,
                  "endColumn": 67,
                  "snippet": {
                    "text": "up (exactly once, at program start) in the output of e.g. the \\fBlogger\\fR filter.\n.SH SIGNALS\n.IX Header \"SIGNALS\"\nAs STDIN is still connected to the users teminal, one might expect the filter\nto receive SIGINT, SIGTERM, SIGTSTP directly from the terminal driver if\nthe user presses CTRL-C, CTRL-Z etc Normally, we don't want this \\- it\nwould confuse rlwrap, and the user (who thinks she is talking straight\n",
                    "rendered": {
                      "text": "up (exactly once, at program start) in the output of e.g. the \\fBlogger\\fR filter.\n.SH SIGNALS\n.IX Header \"SIGNALS\"\nAs STDIN is still connected to the users teminal, one might expect the filter\nto receive SIGINT, SIGTERM, SIGTSTP directly from the terminal driver if\nthe user presses CTRL-C, CTRL-Z etc Normally, we don't want this \\- it\nwould confuse rlwrap, and the user (who thinks she is talking straight\n",
                      "markdown": "`up (exactly once, at program start) in the output of e.g. the \\fBlogger\\fR filter.\n.SH SIGNALS\n.IX Header \"SIGNALS\"\nAs STDIN is still connected to the users teminal, one might expect the filter\nto receive SIGINT, SIGTERM, SIGTSTP directly from the terminal driver if\nthe user presses CTRL-C, CTRL-Z etc Normally, we don't want this \\- it\nwould confuse rlwrap, and the user (who thinks she is talking straight\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 423,
                  "startColumn": 42,
                  "endLine": 423,
                  "endColumn": 50,
                  "snippet": {
                    "text": ".PP\nMessages are received and sent via two pipes. STDIN, STDOUT and STDERR\nare still connected to the user's terminal, and you can read and write\nthem directly, though this may mess up the screen and confuse the user\nunless you are careful. A filter can even communicate with the\nrlwrapped command behind rlwrap's back (cf the \\fBcloak_and_dagger()\\fR\nmethod)\n",
                    "rendered": {
                      "text": ".PP\nMessages are received and sent via two pipes. STDIN, STDOUT and STDERR\nare still connected to the user's terminal, and you can read and write\nthem directly, though this may mess up the screen and confuse the user\nunless you are careful. A filter can even communicate with the\nrlwrapped command behind rlwrap's back (cf the \\fBcloak_and_dagger()\\fR\nmethod)\n",
                      "markdown": "`.PP\nMessages are received and sent via two pipes. STDIN, STDOUT and STDERR\nare still connected to the user's terminal, and you can read and write\nthem directly, though this may mess up the screen and confuse the user\nunless you are careful. A filter can even communicate with the\nrlwrapped command behind rlwrap's back (cf the \\fBcloak_and_dagger()\\fR\nmethod)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 411,
                  "startColumn": 5,
                  "endLine": 411,
                  "endColumn": 13,
                  "snippet": {
                    "text": "byte (TAG_OUTPUT, TAG_PROMPT etc. \\- to inform the filter of what is\nbeing sent), an unsigned 32\\-bit integer containing the length of the\nmessage, the message text and an extra newline. For every message\nsent, rlwrap expects, and waits for an answer message with the same\ntag. Sending back a different (in-band) tag is an error and instantly\nkills rlwrap, though filters may precede their answer message with\n\"out-of-band\" messages to output text (TAG_OUTPUT_OUT_OF_BAND), report\n",
                    "rendered": {
                      "text": "byte (TAG_OUTPUT, TAG_PROMPT etc. \\- to inform the filter of what is\nbeing sent), an unsigned 32\\-bit integer containing the length of the\nmessage, the message text and an extra newline. For every message\nsent, rlwrap expects, and waits for an answer message with the same\ntag. Sending back a different (in-band) tag is an error and instantly\nkills rlwrap, though filters may precede their answer message with\n\"out-of-band\" messages to output text (TAG_OUTPUT_OUT_OF_BAND), report\n",
                      "markdown": "`byte (TAG_OUTPUT, TAG_PROMPT etc. \\- to inform the filter of what is\nbeing sent), an unsigned 32\\-bit integer containing the length of the\nmessage, the message text and an extra newline. For every message\nsent, rlwrap expects, and waits for an answer message with the same\ntag. Sending back a different (in-band) tag is an error and instantly\nkills rlwrap, though filters may precede their answer message with\n\"out-of-band\" messages to output text (TAG_OUTPUT_OUT_OF_BAND), report\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 383,
                  "startColumn": 53,
                  "endLine": 383,
                  "endColumn": 61,
                  "snippet": {
                    "text": ".el .IP \"\\f(CW$self\\fR \\-> prompt_rejected\" 4\n.IX Item \"$self -> prompt_rejected\"\nA special text (\"_THIS_CANNOT_BE_A_PROMPT_\") to be returned by a\nprompt handler to \"reject\" the prompt. This will make rlwrap skip\ncooking the prompt.  \\f(CW$self\\fR\\->previous_tag and \\f(CW$self\\fR\\->cumulative_output\nwill not be touched.\n.ie n .IP \"$text = $f \\-> prompts_are_never_empty($val)\" 4\n",
                    "rendered": {
                      "text": ".el .IP \"\\f(CW$self\\fR \\-> prompt_rejected\" 4\n.IX Item \"$self -> prompt_rejected\"\nA special text (\"_THIS_CANNOT_BE_A_PROMPT_\") to be returned by a\nprompt handler to \"reject\" the prompt. This will make rlwrap skip\ncooking the prompt.  \\f(CW$self\\fR\\->previous_tag and \\f(CW$self\\fR\\->cumulative_output\nwill not be touched.\n.ie n .IP \"$text = $f \\-> prompts_are_never_empty($val)\" 4\n",
                      "markdown": "`.el .IP \"\\f(CW$self\\fR \\-> prompt_rejected\" 4\n.IX Item \"$self -> prompt_rejected\"\nA special text (\"_THIS_CANNOT_BE_A_PROMPT_\") to be returned by a\nprompt handler to \"reject\" the prompt. This will make rlwrap skip\ncooking the prompt.  \\f(CW$self\\fR\\->previous_tag and \\f(CW$self\\fR\\->cumulative_output\nwill not be touched.\n.ie n .IP \"$text = $f \\-> prompts_are_never_empty($val)\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 18,
                  "endLine": 377,
                  "endColumn": 26,
                  "snippet": {
                    "text": "If \\f(CW$verbosity\\fR evaluates to a true value, make rlwrap print all\nquestions sent to \\fIcommand\\fR by the \\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR method, and\n\\&\\fIcommand\\fR's responses. By default, \\f(CW$verbosity\\fR = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n\\&\\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR\n.ie n .IP \"$self \\-> prompt_rejected\" 4\n.el .IP \"\\f(CW$self\\fR \\-> prompt_rejected\" 4\n",
                    "rendered": {
                      "text": "If \\f(CW$verbosity\\fR evaluates to a true value, make rlwrap print all\nquestions sent to \\fIcommand\\fR by the \\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR method, and\n\\&\\fIcommand\\fR's responses. By default, \\f(CW$verbosity\\fR = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n\\&\\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR\n.ie n .IP \"$self \\-> prompt_rejected\" 4\n.el .IP \"\\f(CW$self\\fR \\-> prompt_rejected\" 4\n",
                      "markdown": "`If \\f(CW$verbosity\\fR evaluates to a true value, make rlwrap print all\nquestions sent to \\fIcommand\\fR by the \\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR method, and\n\\&\\fIcommand\\fR's responses. By default, \\f(CW$verbosity\\fR = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n\\&\\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR\n.ie n .IP \"$self \\-> prompt_rejected\" 4\n.el .IP \"\\f(CW$self\\fR \\-> prompt_rejected\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 374,
                  "startColumn": 53,
                  "endLine": 374,
                  "endColumn": 61,
                  "snippet": {
                    "text": ".ie n .IP \"$f \\-> cloak_and_dagger_verbose($verbosity)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> cloak_and_dagger_verbose($verbosity)\" 4\n.IX Item \"$f -> cloak_and_dagger_verbose($verbosity)\"\nIf \\f(CW$verbosity\\fR evaluates to a true value, make rlwrap print all\nquestions sent to \\fIcommand\\fR by the \\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR method, and\n\\&\\fIcommand\\fR's responses. By default, \\f(CW$verbosity\\fR = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n",
                    "rendered": {
                      "text": ".ie n .IP \"$f \\-> cloak_and_dagger_verbose($verbosity)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> cloak_and_dagger_verbose($verbosity)\" 4\n.IX Item \"$f -> cloak_and_dagger_verbose($verbosity)\"\nIf \\f(CW$verbosity\\fR evaluates to a true value, make rlwrap print all\nquestions sent to \\fIcommand\\fR by the \\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR method, and\n\\&\\fIcommand\\fR's responses. By default, \\f(CW$verbosity\\fR = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n",
                      "markdown": "`.ie n .IP \"$f \\-> cloak_and_dagger_verbose($verbosity)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> cloak_and_dagger_verbose($verbosity)\" 4\n.IX Item \"$f -> cloak_and_dagger_verbose($verbosity)\"\nIf \\f(CW$verbosity\\fR evaluates to a true value, make rlwrap print all\nquestions sent to \\fIcommand\\fR by the \\f(CW\\*(C`cloak_and_dagger\\*(C'\\fR method, and\n\\&\\fIcommand\\fR's responses. By default, \\f(CW$verbosity\\fR = 0; setting it to\n1 will mess up the screen but greatly facilitate the (otherwise rather tricky) use of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 4,
                  "endLine": 327,
                  "endColumn": 12,
                  "snippet": {
                    "text": ".ie n .IP \"$f \\-> send_output_oob($text)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> send_output_oob($text)\" 4\n.IX Item \"$f -> send_output_oob($text)\"\nMake rlwrap display \\f(CW$text\\fR. \\f(CW$text\\fR is sent \"out-of-band\" :\n\\&\\fBrlwrap\\fR will not see it until just  after it has sent the next\nmessage to the filter\n.ie n .IP \"$f \\-> send_ignore_oob($text)\" 4\n",
                    "rendered": {
                      "text": ".ie n .IP \"$f \\-> send_output_oob($text)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> send_output_oob($text)\" 4\n.IX Item \"$f -> send_output_oob($text)\"\nMake rlwrap display \\f(CW$text\\fR. \\f(CW$text\\fR is sent \"out-of-band\" :\n\\&\\fBrlwrap\\fR will not see it until just  after it has sent the next\nmessage to the filter\n.ie n .IP \"$f \\-> send_ignore_oob($text)\" 4\n",
                      "markdown": "`.ie n .IP \"$f \\-> send_output_oob($text)\" 4\n.el .IP \"\\f(CW$f\\fR \\-> send_output_oob($text)\" 4\n.IX Item \"$f -> send_output_oob($text)\"\nMake rlwrap display \\f(CW$text\\fR. \\f(CW$text\\fR is sent \"out-of-band\" :\n\\&\\fBrlwrap\\fR will not see it until just  after it has sent the next\nmessage to the filter\n.ie n .IP \"$f \\-> send_ignore_oob($text)\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 58,
                  "endLine": 309,
                  "endColumn": 64,
                  "snippet": {
                    "text": "messages and rejected prompts)\n.Sp\nWhen necessary (i.e. when \\fBrlwrap\\fR is in \"impatient mode\") the prompt\nis removed from \\f(CW$filter\\fR\\->cumulative_output by the time the prompt\nhandler is called.\n.ie n .IP \"$tag = $f \\-> previous_tag\" 4\n.el .IP \"\\f(CW$tag\\fR = \\f(CW$f\\fR \\-> previous_tag\" 4\n",
                    "rendered": {
                      "text": "messages and rejected prompts)\n.Sp\nWhen necessary (i.e. when \\fBrlwrap\\fR is in \"impatient mode\") the prompt\nis removed from \\f(CW$filter\\fR\\->cumulative_output by the time the prompt\nhandler is called.\n.ie n .IP \"$tag = $f \\-> previous_tag\" 4\n.el .IP \"\\f(CW$tag\\fR = \\f(CW$f\\fR \\-> previous_tag\" 4\n",
                      "markdown": "`messages and rejected prompts)\n.Sp\nWhen necessary (i.e. when \\fBrlwrap\\fR is in \"impatient mode\") the prompt\nis removed from \\f(CW$filter\\fR\\->cumulative_output by the time the prompt\nhandler is called.\n.ie n .IP \"$tag = $f \\-> previous_tag\" 4\n.el .IP \"\\f(CW$tag\\fR = \\f(CW$f\\fR \\-> previous_tag\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 28,
                  "endLine": 297,
                  "endColumn": 34,
                  "snippet": {
                    "text": "return the name of \\fIcommand\\fR's current working directory. This uses\nthe /proc filesystem, and may only work on newer linux systems (on\nolder linux and on Solaris, it will return something like\n\"/proc/12345/cwd\", useful to find the contents of \\fIcommand\\fR's working\ndirectory, but not its name)\n.ie n .IP \"$text = $f \\-> cumulative_output\" 4\n.el .IP \"\\f(CW$text\\fR = \\f(CW$f\\fR \\-> cumulative_output\" 4\n",
                    "rendered": {
                      "text": "return the name of \\fIcommand\\fR's current working directory. This uses\nthe /proc filesystem, and may only work on newer linux systems (on\nolder linux and on Solaris, it will return something like\n\"/proc/12345/cwd\", useful to find the contents of \\fIcommand\\fR's working\ndirectory, but not its name)\n.ie n .IP \"$text = $f \\-> cumulative_output\" 4\n.el .IP \"\\f(CW$text\\fR = \\f(CW$f\\fR \\-> cumulative_output\" 4\n",
                      "markdown": "`return the name of \\fIcommand\\fR's current working directory. This uses\nthe /proc filesystem, and may only work on newer linux systems (on\nolder linux and on Solaris, it will return something like\n\"/proc/12345/cwd\", useful to find the contents of \\fIcommand\\fR's working\ndirectory, but not its name)\n.ie n .IP \"$text = $f \\-> cumulative_output\" 4\n.el .IP \"\\f(CW$text\\fR = \\f(CW$f\\fR \\-> cumulative_output\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 10,
                  "endLine": 290,
                  "endColumn": 18,
                  "snippet": {
                    "text": ".ie n .IP \"$f \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n.el .IP \"\\f(CW$f\\fR \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n.IX Item \"$f -> minimal_rlwrap_version(\"\"x.yy\"\")\"\nDie unless rlwrap is version x.yy or newer\n.ie n .IP \"$dir = $f \\-> cwd\" 4\n.el .IP \"\\f(CW$dir\\fR = \\f(CW$f\\fR \\-> cwd\" 4\n.IX Item \"$dir = $f -> cwd\"\n",
                    "rendered": {
                      "text": ".ie n .IP \"$f \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n.el .IP \"\\f(CW$f\\fR \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n.IX Item \"$f -> minimal_rlwrap_version(\"\"x.yy\"\")\"\nDie unless rlwrap is version x.yy or newer\n.ie n .IP \"$dir = $f \\-> cwd\" 4\n.el .IP \"\\f(CW$dir\\fR = \\f(CW$f\\fR \\-> cwd\" 4\n.IX Item \"$dir = $f -> cwd\"\n",
                      "markdown": "`.ie n .IP \"$f \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n.el .IP \"\\f(CW$f\\fR \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n.IX Item \"$f -> minimal_rlwrap_version(\"\"x.yy\"\")\"\nDie unless rlwrap is version x.yy or newer\n.ie n .IP \"$dir = $f \\-> cwd\" 4\n.el .IP \"\\f(CW$dir\\fR = \\f(CW$f\\fR \\-> cwd\" 4\n.IX Item \"$dir = $f -> cwd\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 58,
                  "endLine": 284,
                  "endColumn": 66,
                  "snippet": {
                    "text": ".ie n .IP \"$f \\-> help_text(\"\"Usage...\"\")\" 4\n.el .IP \"\\f(CW$f\\fR \\-> help_text(\"\"Usage...\"\")\" 4\n.IX Item \"$f -> help_text(\"\"Usage...\"\")\"\nSet the help text for this filter. It will be displayed by rlwrap \\-z\n<filter>. The second line of the help text is used by \\f(CW\\*(C`rlwrap \\-z listing\\*(C'\\fR;\nit should be a short description of what the filter does.\n.ie n .IP \"$f \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n",
                    "rendered": {
                      "text": ".ie n .IP \"$f \\-> help_text(\"\"Usage...\"\")\" 4\n.el .IP \"\\f(CW$f\\fR \\-> help_text(\"\"Usage...\"\")\" 4\n.IX Item \"$f -> help_text(\"\"Usage...\"\")\"\nSet the help text for this filter. It will be displayed by rlwrap \\-z\n<filter>. The second line of the help text is used by \\f(CW\\*(C`rlwrap \\-z listing\\*(C'\\fR;\nit should be a short description of what the filter does.\n.ie n .IP \"$f \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n",
                      "markdown": "`.ie n .IP \"$f \\-> help_text(\"\"Usage...\"\")\" 4\n.el .IP \"\\f(CW$f\\fR \\-> help_text(\"\"Usage...\"\")\" 4\n.IX Item \"$f -> help_text(\"\"Usage...\"\")\"\nSet the help text for this filter. It will be displayed by rlwrap \\-z\n<filter>. The second line of the help text is used by \\f(CW\\*(C`rlwrap \\-z listing\\*(C'\\fR;\nit should be a short description of what the filter does.\n.ie n .IP \"$f \\-> minimal_rlwrap_version(\"\"x.yy\"\")\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 14,
                  "endLine": 258,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\\&                     });\n.Ve\n.Sp\nNote that when rlwrap is run in \\-\\-multi\\-line mode the echo handler will still\nonly handle the first echo line.  The remainder will generally\nbe echoed back preceded by a continuation prompt; it is up to the\noutput handler what to do with it.\n",
                    "rendered": {
                      "text": "\\&                     });\n.Ve\n.Sp\nNote that when rlwrap is run in \\-\\-multi\\-line mode the echo handler will still\nonly handle the first echo line.  The remainder will generally\nbe echoed back preceded by a continuation prompt; it is up to the\noutput handler what to do with it.\n",
                      "markdown": "`\\&                     });\n.Ve\n.Sp\nNote that when rlwrap is run in \\-\\-multi\\-line mode the echo handler will still\nonly handle the first echo line.  The remainder will generally\nbe echoed back preceded by a continuation prompt; it is up to the\noutput handler what to do with it.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 10,
                  "endLine": 232,
                  "endColumn": 18,
                  "snippet": {
                    "text": "to confuse the user, use an echo handler that returns your original\ninput.\n.Sp\nIf you use rlwrap in \\-\\-multi\\-line mode, additional echo lines will\nhave to be handled by the output handler\n.ie n .IP \"$handler = $f \\-> output_handler, $f \\-> output_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> output_handler, \\f(CW$f\\fR \\-> output_handler(\\e&handler)\" 4\n",
                    "rendered": {
                      "text": "to confuse the user, use an echo handler that returns your original\ninput.\n.Sp\nIf you use rlwrap in \\-\\-multi\\-line mode, additional echo lines will\nhave to be handled by the output handler\n.ie n .IP \"$handler = $f \\-> output_handler, $f \\-> output_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> output_handler, \\f(CW$f\\fR \\-> output_handler(\\e&handler)\" 4\n",
                      "markdown": "`to confuse the user, use an echo handler that returns your original\ninput.\n.Sp\nIf you use rlwrap in \\-\\-multi\\-line mode, additional echo lines will\nhave to be handled by the output handler\n.ie n .IP \"$handler = $f \\-> output_handler, $f \\-> output_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> output_handler, \\f(CW$f\\fR \\-> output_handler(\\e&handler)\" 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 69,
                  "endLine": 162,
                  "endColumn": 5,
                  "snippet": {
                    "text": "e 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\nlonger to formulate. If this is a problem, specify a longer \"cooking\"\ntime with rlwrap's \\fB\\-w\\fR option, use the \\fBprompts_are_never_empty\\fR\nmethod or \"reject\" the prompt (cf. the \\fBprompt_rejected\\fR method)\n.ie n .IP \"$handler = $f \\-> completion_handler, $f \\-> completion_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> completion_handler, \\f(CW$f\\",
                    "rendered": {
                      "text": "e 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\nlonger to formulate. If this is a problem, specify a longer \"cooking\"\ntime with rlwrap's \\fB\\-w\\fR option, use the \\fBprompts_are_never_empty\\fR\nmethod or \"reject\" the prompt (cf. the \\fBprompt_rejected\\fR method)\n.ie n .IP \"$handler = $f \\-> completion_handler, $f \\-> completion_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> completion_handler, \\f(CW$f\\",
                      "markdown": "`e 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\nlonger to formulate. If this is a problem, specify a longer \"cooking\"\ntime with rlwrap's \\fB\\-w\\fR option, use the \\fBprompts_are_never_empty\\fR\nmethod or \"reject\" the prompt (cf. the \\fBprompt_rejected\\fR method)\n.ie n .IP \"$handler = $f \\-> completion_handler, $f \\-> completion_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> completion_handler, \\f(CW$f\\`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 13,
                  "endLine": 157,
                  "endColumn": 19,
                  "snippet": {
                    "text": ".el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> prompt_handler, \\f(CW$f\\fR \\-> prompt_handler(\\e&handler)\" 4\n.IX Item \"$handler = $f -> prompt_handler, $f -> prompt_handler(&handler)\"\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\n",
                    "rendered": {
                      "text": ".el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> prompt_handler, \\f(CW$f\\fR \\-> prompt_handler(\\e&handler)\" 4\n.IX Item \"$handler = $f -> prompt_handler, $f -> prompt_handler(&handler)\"\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\n",
                      "markdown": "`.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> prompt_handler, \\f(CW$f\\fR \\-> prompt_handler(\\e&handler)\" 4\n.IX Item \"$handler = $f -> prompt_handler, $f -> prompt_handler(&handler)\"\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 57,
                  "endLine": 157,
                  "snippet": {
                    "text": "r = $f \\-> prompt_handler, $f \\-> prompt_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> prompt_handler, \\f(CW$f\\fR \\-> prompt_handler(\\e&handler)\" 4\n.IX Item \"$handler = $f -> prompt_handler, $f -> prompt_handler(&handler)\"\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\nlonger to form",
                    "rendered": {
                      "text": "r = $f \\-> prompt_handler, $f \\-> prompt_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> prompt_handler, \\f(CW$f\\fR \\-> prompt_handler(\\e&handler)\" 4\n.IX Item \"$handler = $f -> prompt_handler, $f -> prompt_handler(&handler)\"\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\nlonger to form",
                      "markdown": "`r = $f \\-> prompt_handler, $f \\-> prompt_handler(\\e&handler)\" 4\n.el .IP \"\\f(CW$handler\\fR = \\f(CW$f\\fR \\-> prompt_handler, \\f(CW$f\\fR \\-> prompt_handler(\\e&handler)\" 4\n.IX Item \"$handler = $f -> prompt_handler, $f -> prompt_handler(&handler)\"\nThe prompt handler re-writes prompts and gets called when rlwrap\ndecides it is time to \"cook\" the prompt, by default some 40 ms after\nthe last output has arrived. Of course, \\fBrlwrap\\fR cannot read the mind\nof \\fIcommand\\fR, so what looks like a prompt to \\fBrlwrap\\fR may actually\nbe the beginning of an output line that took \\fIcommand\\fR a little\nlonger to form`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 10,
                  "endLine": 137,
                  "endColumn": 18,
                  "snippet": {
                    "text": ".PP\nThe message handlers are called in a fixed cyclic order: prompt,\ncompletion, history, input, echo, output, prompt, ... etc ad\ninfinitum. Rlwrap may always skip a handler when in direct mode; on\nthe other hand, completion and output handlers may get called more\nthan once in succession. If a handler is left undefined, the result is\nas if the message text were returned unaltered (in fact, \\fBrlwrap\\fR knows\n",
                    "rendered": {
                      "text": ".PP\nThe message handlers are called in a fixed cyclic order: prompt,\ncompletion, history, input, echo, output, prompt, ... etc ad\ninfinitum. Rlwrap may always skip a handler when in direct mode; on\nthe other hand, completion and output handlers may get called more\nthan once in succession. If a handler is left undefined, the result is\nas if the message text were returned unaltered (in fact, \\fBrlwrap\\fR knows\n",
                      "markdown": "`.PP\nThe message handlers are called in a fixed cyclic order: prompt,\ncompletion, history, input, echo, output, prompt, ... etc ad\ninfinitum. Rlwrap may always skip a handler when in direct mode; on\nthe other hand, completion and output handlers may get called more\nthan once in succession. If a handler is left undefined, the result is\nas if the message text were returned unaltered (in fact, \\fBrlwrap\\fR knows\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 50,
                  "endLine": 94,
                  "snippet": {
                    "text": ".PP\nFilters can be combined in a pipeline using the special \\fBpipeline\\fR filter.\n.PP\n\\&\\fBRlwrapFilter\\fR makes it very simple to write rlwrap\nfilters in perl. A filter only needs to instantiate a RlwrapFilter\nobject, change a few of its default handlers and then call its 'run'\nmethod.\n.PP\n",
                    "rendered": {
                      "text": ".PP\nFilters can be combined in a pipeline using the special \\fBpipeline\\fR filter.\n.PP\n\\&\\fBRlwrapFilter\\fR makes it very simple to write rlwrap\nfilters in perl. A filter only needs to instantiate a RlwrapFilter\nobject, change a few of its default handlers and then call its 'run'\nmethod.\n.PP\n",
                      "markdown": "`.PP\nFilters can be combined in a pipeline using the special \\fBpipeline\\fR filter.\n.PP\n\\&\\fBRlwrapFilter\\fR makes it very simple to write rlwrap\nfilters in perl. A filter only needs to instantiate a RlwrapFilter\nobject, change a few of its default handlers and then call its 'run'\nmethod.\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 45,
                  "endLine": 86,
                  "endColumn": 53,
                  "snippet": {
                    "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n.PP\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                    "rendered": {
                      "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n.PP\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                      "markdown": "`to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n.PP\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 19,
                  "endLine": 86,
                  "endColumn": 27,
                  "snippet": {
                    "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n.PP\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                    "rendered": {
                      "text": "to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n.PP\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n",
                      "markdown": "`to bestow readline capabilities (line editing, history recall) to\ncommands that don't have them.\n.PP\nSince version 0.32, rlwrap can use filters to script almost every\naspect of rlwrap's interaction with the user: changing the history,\nre-writing output and input, calling a pager or computing completion\nword lists from the current input.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 30,
                  "endLine": 64,
                  "endColumn": 38,
                  "snippet": {
                    "text": ".if n .ad l\n.nh\n.SH NAME\nRlwrapFilter \\- Perl class for rlwrap filters\n.SH SYNOPSIS\n.IX Header \"SYNOPSIS\"\n.Vb 2\n",
                    "rendered": {
                      "text": ".if n .ad l\n.nh\n.SH NAME\nRlwrapFilter \\- Perl class for rlwrap filters\n.SH SYNOPSIS\n.IX Header \"SYNOPSIS\"\n.Vb 2\n",
                      "markdown": "`.if n .ad l\n.nh\n.SH NAME\nRlwrapFilter \\- Perl class for rlwrap filters\n.SH SYNOPSIS\n.IX Header \"SYNOPSIS\"\n.Vb 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 15,
                  "endLine": 64,
                  "endColumn": 21,
                  "snippet": {
                    "text": ".if n .ad l\n.nh\n.SH NAME\nRlwrapFilter \\- Perl class for rlwrap filters\n.SH SYNOPSIS\n.IX Header \"SYNOPSIS\"\n.Vb 2\n",
                    "rendered": {
                      "text": ".if n .ad l\n.nh\n.SH NAME\nRlwrapFilter \\- Perl class for rlwrap filters\n.SH SYNOPSIS\n.IX Header \"SYNOPSIS\"\n.Vb 2\n",
                      "markdown": "`.if n .ad l\n.nh\n.SH NAME\nRlwrapFilter \\- Perl class for rlwrap filters\n.SH SYNOPSIS\n.IX Header \"SYNOPSIS\"\n.Vb 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/man/man3/RlwrapFilter.3pm"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 64,
                  "endLine": 58,
                  "endColumn": 70,
                  "snippet": {
                    "text": ".\\\" ========================================================================\n.\\\"\n.IX Title \"RlwrapFilter 3pm\"\n.TH RlwrapFilter 3pm 2024-01-15 \"perl v5.38.2\" \"User Contributed Perl Documentation\"\n.\\\" For nroff, turn off justification.  Always turn off hyphenation; it makes\n.\\\" way too many mistakes in technical documents.\n.if n .ad l\n",
                    "rendered": {
                      "text": ".\\\" ========================================================================\n.\\\"\n.IX Title \"RlwrapFilter 3pm\"\n.TH RlwrapFilter 3pm 2024-01-15 \"perl v5.38.2\" \"User Contributed Perl Documentation\"\n.\\\" For nroff, turn off justification.  Always turn off hyphenation; it makes\n.\\\" way too many mistakes in technical documents.\n.if n .ad l\n",
                      "markdown": "`.\\\" ========================================================================\n.\\\"\n.IX Title \"RlwrapFilter 3pm\"\n.TH RlwrapFilter 3pm 2024-01-15 \"perl v5.38.2\" \"User Contributed Perl Documentation\"\n.\\\" For nroff, turn off justification.  Always turn off hyphenation; it makes\n.\\\" way too many mistakes in technical documents.\n.if n .ad l\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/pipeto.py"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endLine": 4,
                  "endColumn": 5,
                  "snippet": {
                    "text": "#!/usr/bin/env python3\n\n# this is maybe the most practical of the filter examples. Is is also a test for rlwraps signal handling.\n# At present, a CTRL-C in a pager will also kill rlwrap (bad)\n\nimport sys\nimport os\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python3\n\n# this is maybe the most practical of the filter examples. Is is also a test for rlwraps signal handling.\n# At present, a CTRL-C in a pager will also kill rlwrap (bad)\n\nimport sys\nimport os\n",
                      "markdown": "`#!/usr/bin/env python3\n\n# this is maybe the most practical of the filter examples. Is is also a test for rlwraps signal handling.\n# At present, a CTRL-C in a pager will also kill rlwrap (bad)\n\nimport sys\nimport os\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/pipeto.py"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 11,
                  "endLine": 23,
                  "endColumn": 19,
                  "snippet": {
                    "text": "raw_input = ''\n\nfilter.help_text = '\\n'.join([\n    \"Usage: rlwrap -z {0} <command>\".format(me),\n    \"Allow piping of <command>'s interactive output through pagers or other shell commands.\",\n    \"When input of the form \\\"| shell pipeline\\\" is seen, <command>'s following output is sent through the pipeline\\n\"\n    ])\n",
                    "rendered": {
                      "text": "raw_input = ''\n\nfilter.help_text = '\\n'.join([\n    \"Usage: rlwrap -z {0} <command>\".format(me),\n    \"Allow piping of <command>'s interactive output through pagers or other shell commands.\",\n    \"When input of the form \\\"| shell pipeline\\\" is seen, <command>'s following output is sent through the pipeline\\n\"\n    ])\n",
                      "markdown": "`raw_input = ''\n\nfilter.help_text = '\\n'.join([\n    \"Usage: rlwrap -z {0} <command>\".format(me),\n    \"Allow piping of <command>'s interactive output through pagers or other shell commands.\",\n    \"When input of the form \\\"| shell pipeline\\\" is seen, <command>'s following output is sent through the pipeline\\n\"\n    ])\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/pipeto.py"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 48,
                  "endLine": 4,
                  "endColumn": 56,
                  "snippet": {
                    "text": "#!/usr/bin/env python3\n\n# this is maybe the most practical of the filter examples. Is is also a test for rlwraps signal handling.\n# At present, a CTRL-C in a pager will also kill rlwrap (bad)\n\nimport sys\nimport os\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python3\n\n# this is maybe the most practical of the filter examples. Is is also a test for rlwraps signal handling.\n# At present, a CTRL-C in a pager will also kill rlwrap (bad)\n\nimport sys\nimport os\n",
                      "markdown": "`#!/usr/bin/env python3\n\n# this is maybe the most practical of the filter examples. Is is also a test for rlwraps signal handling.\n# At present, a CTRL-C in a pager will also kill rlwrap (bad)\n\nimport sys\nimport os\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/logger.py"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 26,
                  "endLine": 55,
                  "endColumn": 34,
                  "snippet": {
                    "text": "filter = rlwrapfilter.RlwrapFilter(message_handler=logit);\n\n\nfilter.help_text = \"Usage: rlwrap -z 'logger [-l] logfile' <command>\\n\"\\\n                   + \"log messages to a file (for debugging)\\n\"\\\n                   + \"give logfile name as an argument, -l for long format\\n\"\\\n                   + \"useful in a pipeline \"\\\n",
                    "rendered": {
                      "text": "filter = rlwrapfilter.RlwrapFilter(message_handler=logit);\n\n\nfilter.help_text = \"Usage: rlwrap -z 'logger [-l] logfile' <command>\\n\"\\\n                   + \"log messages to a file (for debugging)\\n\"\\\n                   + \"give logfile name as an argument, -l for long format\\n\"\\\n                   + \"useful in a pipeline \"\\\n",
                      "markdown": "`filter = rlwrapfilter.RlwrapFilter(message_handler=logit);\n\n\nfilter.help_text = \"Usage: rlwrap -z 'logger [-l] logfile' <command>\\n\"\\\n                   + \"log messages to a file (for debugging)\\n\"\\\n                   + \"give logfile name as an argument, -l for long format\\n\"\\\n                   + \"useful in a pipeline \"\\\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/logger.py"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 37,
                  "endLine": 8,
                  "snippet": {
                    "text": "a demo for logging communcations between rlrwap and filter\n\nUsage:\nrlwrap -z './logger.py -l logger.log' telnet\n\"\"\"\n\nimport os\nimport sys\n",
                    "rendered": {
                      "text": "a demo for logging communcations between rlrwap and filter\n\nUsage:\nrlwrap -z './logger.py -l logger.log' telnet\n\"\"\"\n\nimport os\nimport sys\n",
                      "markdown": "`a demo for logging communcations between rlrwap and filter\n\nUsage:\nrlwrap -z './logger.py -l logger.log' telnet\n\"\"\"\n\nimport os\nimport sys\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/logger.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 6,
                  "endLine": 7,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\"\"\"\na demo for logging communcations between rlrwap and filter\n\nUsage:\nrlwrap -z './logger.py -l logger.log' telnet\n\"\"\"\n\nimport os\n",
                    "rendered": {
                      "text": "\"\"\"\na demo for logging communcations between rlrwap and filter\n\nUsage:\nrlwrap -z './logger.py -l logger.log' telnet\n\"\"\"\n\nimport os\n",
                      "markdown": "`\"\"\"\na demo for logging communcations between rlrwap and filter\n\nUsage:\nrlwrap -z './logger.py -l logger.log' telnet\n\"\"\"\n\nimport os\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 63,
                  "endLine": 150,
                  "endColumn": 71,
                  "snippet": {
                    "text": "    #dir_filename_column['remote'] = None\n    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n",
                    "rendered": {
                      "text": "    #dir_filename_column['remote'] = None\n    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n",
                      "markdown": "`    #dir_filename_column['remote'] = None\n    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 25,
                  "endLine": 151,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n    filter.completion_handler = complete_handler\n",
                    "rendered": {
                      "text": "    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n    filter.completion_handler = complete_handler\n",
                      "markdown": "`    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n    filter.completion_handler = complete_handler\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 52,
                  "endLine": 150,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    #dir_filename_column['remote'] = None\n    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n",
                    "rendered": {
                      "text": "    #dir_filename_column['remote'] = None\n    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n",
                      "markdown": "`    #dir_filename_column['remote'] = None\n    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 25,
                  "endLine": 102,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n    nwords = len(re.split('\\s+', line))\n    if prefix == None:\n        nwords += 1 # TAB at start of a new (empty) argument\n\n    if nwords <= 1:\n        completions.extend([c for c in ftp_commands if re.search(r'^' + prefix, c)])\n",
                    "rendered": {
                      "text": "\n    nwords = len(re.split('\\s+', line))\n    if prefix == None:\n        nwords += 1 # TAB at start of a new (empty) argument\n\n    if nwords <= 1:\n        completions.extend([c for c in ftp_commands if re.search(r'^' + prefix, c)])\n",
                      "markdown": "`\n    nwords = len(re.split('\\s+', line))\n    if prefix == None:\n        nwords += 1 # TAB at start of a new (empty) argument\n\n    if nwords <= 1:\n        completions.extend([c for c in ftp_commands if re.search(r'^' + prefix, c)])\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 38,
                  "endLine": 23,
                  "endColumn": 43,
                  "snippet": {
                    "text": "        /lib64/ld-linux-x86-64.so.2 (0x00007fd2139dd000)\n\nHowever, the feature can be disabled by '-e' option in Fedora case.\nThis example was tested on the pair of ftp bundled in RHEL6/7, Fedora21 and vsftpd in RHEL6.\nPlease see `man ftp` to find out how to disable it, if this filter does not work for you.\n\"\"\"\n\n",
                    "rendered": {
                      "text": "        /lib64/ld-linux-x86-64.so.2 (0x00007fd2139dd000)\n\nHowever, the feature can be disabled by '-e' option in Fedora case.\nThis example was tested on the pair of ftp bundled in RHEL6/7, Fedora21 and vsftpd in RHEL6.\nPlease see `man ftp` to find out how to disable it, if this filter does not work for you.\n\"\"\"\n\n",
                      "markdown": "`        /lib64/ld-linux-x86-64.so.2 (0x00007fd2139dd000)\n\nHowever, the feature can be disabled by '-e' option in Fedora case.\nThis example was tested on the pair of ftp bundled in RHEL6/7, Fedora21 and vsftpd in RHEL6.\nPlease see `man ftp` to find out how to disable it, if this filter does not work for you.\n\"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n\"\"\"\nA vanilla ftp is not bundled in modern Linux today.\nFor example, ftp on Fedora 21 is readline-enabled.\n\n$ ldd /usr/bin/ftp \n        linux-vdso.so.1 =>  (0x00007ffd015e7000)\n",
                    "rendered": {
                      "text": "\n\"\"\"\nA vanilla ftp is not bundled in modern Linux today.\nFor example, ftp on Fedora 21 is readline-enabled.\n\n$ ldd /usr/bin/ftp \n        linux-vdso.so.1 =>  (0x00007ffd015e7000)\n",
                      "markdown": "`\n\"\"\"\nA vanilla ftp is not bundled in modern Linux today.\nFor example, ftp on Fedora 21 is readline-enabled.\n\n$ ldd /usr/bin/ftp \n        linux-vdso.so.1 =>  (0x00007ffd015e7000)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 9,
                  "endLine": 10,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#   - completing (local or remote) filenames and directories\n\n\"\"\"\nA vanilla ftp is not bundled in modern Linux today.\nFor example, ftp on Fedora 21 is readline-enabled.\n\n$ ldd /usr/bin/ftp \n",
                    "rendered": {
                      "text": "#   - completing (local or remote) filenames and directories\n\n\"\"\"\nA vanilla ftp is not bundled in modern Linux today.\nFor example, ftp on Fedora 21 is readline-enabled.\n\n$ ldd /usr/bin/ftp \n",
                      "markdown": "`#   - completing (local or remote) filenames and directories\n\n\"\"\"\nA vanilla ftp is not bundled in modern Linux today.\nFor example, ftp on Fedora 21 is readline-enabled.\n\n$ ldd /usr/bin/ftp \n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 28,
                  "snippet": {
                    "text": "# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n#   - finding the legal ftp commands\n#   - completing (local or remote) filenames and directories\n\n\"\"\"\n",
                    "rendered": {
                      "text": "# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n#   - finding the legal ftp commands\n#   - completing (local or remote) filenames and directories\n\n\"\"\"\n",
                      "markdown": "`# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n#   - finding the legal ftp commands\n#   - completing (local or remote) filenames and directories\n\n\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 25,
                  "endLine": 151,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n    filter.completion_handler = complete_handler\n",
                    "rendered": {
                      "text": "    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n    filter.completion_handler = complete_handler\n",
                      "markdown": "`    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n    filter.completion_handler = complete_handler\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 52,
                  "endLine": 150,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    #dir_filename_column['remote'] = None\n    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n",
                    "rendered": {
                      "text": "    #dir_filename_column['remote'] = None\n    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n",
                      "markdown": "`    #dir_filename_column['remote'] = None\n    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 15,
                  "endLine": 150,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    #dir_filename_column['remote'] = None\n    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n",
                    "rendered": {
                      "text": "    #dir_filename_column['remote'] = None\n    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n",
                      "markdown": "`    #dir_filename_column['remote'] = None\n    \n    filter.help_text = '\\n'.join([\n        \"usage: rlwrap -c [-aword:] -z ftp_filter.py ftp (-e) [hostname]\",\n        \"run plain Netkit ftp with completion for commands, local and remote files\",\n        \"(demo filter to show the use of the cloak_and_dagger method)\"])\n    filter.prompt_handler = prompt_handler\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 44,
                  "endLine": 46,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\n    command = '!ls -la {0}|cat'.format(dir) if where == 'local' else 'ls -la'\n    lines = re.split(r'\\r?\\n', filter.cloak_and_dagger(command, ftp_prompt, 2))\n    if dir_filename_column[where] == None: # find out which column of listing has the filename\n        dotdotline = [l for l in lines if re.search(r'(^|\\s+)\\.\\.(\\s|$)', l)][0]; # .. should always be there \n        fields = re.split(r'\\s+', dotdotline)\n        try:\n",
                    "rendered": {
                      "text": "\n    command = '!ls -la {0}|cat'.format(dir) if where == 'local' else 'ls -la'\n    lines = re.split(r'\\r?\\n', filter.cloak_and_dagger(command, ftp_prompt, 2))\n    if dir_filename_column[where] == None: # find out which column of listing has the filename\n        dotdotline = [l for l in lines if re.search(r'(^|\\s+)\\.\\.(\\s|$)', l)][0]; # .. should always be there \n        fields = re.split(r'\\s+', dotdotline)\n        try:\n",
                      "markdown": "`\n    command = '!ls -la {0}|cat'.format(dir) if where == 'local' else 'ls -la'\n    lines = re.split(r'\\r?\\n', filter.cloak_and_dagger(command, ftp_prompt, 2))\n    if dir_filename_column[where] == None: # find out which column of listing has the filename\n        dotdotline = [l for l in lines if re.search(r'(^|\\s+)\\.\\.(\\s|$)', l)][0]; # .. should always be there \n        fields = re.split(r'\\s+', dotdotline)\n        try:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 23,
                  "endLine": 24,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\nHowever, the feature can be disabled by '-e' option in Fedora case.\nThis example was tested on the pair of ftp bundled in RHEL6/7, Fedora21 and vsftpd in RHEL6.\nPlease see `man ftp` to find out how to disable it, if this filter does not work for you.\n\"\"\"\n\nimport sys\n",
                    "rendered": {
                      "text": "\nHowever, the feature can be disabled by '-e' option in Fedora case.\nThis example was tested on the pair of ftp bundled in RHEL6/7, Fedora21 and vsftpd in RHEL6.\nPlease see `man ftp` to find out how to disable it, if this filter does not work for you.\n\"\"\"\n\nimport sys\n",
                      "markdown": "`\nHowever, the feature can be disabled by '-e' option in Fedora case.\nThis example was tested on the pair of ftp bundled in RHEL6/7, Fedora21 and vsftpd in RHEL6.\nPlease see `man ftp` to find out how to disable it, if this filter does not work for you.\n\"\"\"\n\nimport sys\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 38,
                  "endLine": 23,
                  "endColumn": 43,
                  "snippet": {
                    "text": "        /lib64/ld-linux-x86-64.so.2 (0x00007fd2139dd000)\n\nHowever, the feature can be disabled by '-e' option in Fedora case.\nThis example was tested on the pair of ftp bundled in RHEL6/7, Fedora21 and vsftpd in RHEL6.\nPlease see `man ftp` to find out how to disable it, if this filter does not work for you.\n\"\"\"\n\n",
                    "rendered": {
                      "text": "        /lib64/ld-linux-x86-64.so.2 (0x00007fd2139dd000)\n\nHowever, the feature can be disabled by '-e' option in Fedora case.\nThis example was tested on the pair of ftp bundled in RHEL6/7, Fedora21 and vsftpd in RHEL6.\nPlease see `man ftp` to find out how to disable it, if this filter does not work for you.\n\"\"\"\n\n",
                      "markdown": "`        /lib64/ld-linux-x86-64.so.2 (0x00007fd2139dd000)\n\nHowever, the feature can be disabled by '-e' option in Fedora case.\nThis example was tested on the pair of ftp bundled in RHEL6/7, Fedora21 and vsftpd in RHEL6.\nPlease see `man ftp` to find out how to disable it, if this filter does not work for you.\n\"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n\"\"\"\nA vanilla ftp is not bundled in modern Linux today.\nFor example, ftp on Fedora 21 is readline-enabled.\n\n$ ldd /usr/bin/ftp \n        linux-vdso.so.1 =>  (0x00007ffd015e7000)\n",
                    "rendered": {
                      "text": "\n\"\"\"\nA vanilla ftp is not bundled in modern Linux today.\nFor example, ftp on Fedora 21 is readline-enabled.\n\n$ ldd /usr/bin/ftp \n        linux-vdso.so.1 =>  (0x00007ffd015e7000)\n",
                      "markdown": "`\n\"\"\"\nA vanilla ftp is not bundled in modern Linux today.\nFor example, ftp on Fedora 21 is readline-enabled.\n\n$ ldd /usr/bin/ftp \n        linux-vdso.so.1 =>  (0x00007ffd015e7000)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 9,
                  "endLine": 10,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#   - completing (local or remote) filenames and directories\n\n\"\"\"\nA vanilla ftp is not bundled in modern Linux today.\nFor example, ftp on Fedora 21 is readline-enabled.\n\n$ ldd /usr/bin/ftp \n",
                    "rendered": {
                      "text": "#   - completing (local or remote) filenames and directories\n\n\"\"\"\nA vanilla ftp is not bundled in modern Linux today.\nFor example, ftp on Fedora 21 is readline-enabled.\n\n$ ldd /usr/bin/ftp \n",
                      "markdown": "`#   - completing (local or remote) filenames and directories\n\n\"\"\"\nA vanilla ftp is not bundled in modern Linux today.\nFor example, ftp on Fedora 21 is readline-enabled.\n\n$ ldd /usr/bin/ftp \n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 28,
                  "snippet": {
                    "text": "# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n#   - finding the legal ftp commands\n#   - completing (local or remote) filenames and directories\n\n\"\"\"\n",
                    "rendered": {
                      "text": "# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n#   - finding the legal ftp commands\n#   - completing (local or remote) filenames and directories\n\n\"\"\"\n",
                      "markdown": "`# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n#   - finding the legal ftp commands\n#   - completing (local or remote) filenames and directories\n\n\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/.PKGINFO"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 8,
                  "endLine": 7,
                  "snippet": {
                    "text": "pkgver = 0.46.1-r0\narch = x86_64\nsize = 436174\norigin = rlwrap\npkgdesc = A readline wrapper\nurl = \ncommit = 460efc8cf48043171fe2757ea69a21663d726998\nbuilddate = 1705284702\n",
                    "rendered": {
                      "text": "pkgver = 0.46.1-r0\narch = x86_64\nsize = 436174\norigin = rlwrap\npkgdesc = A readline wrapper\nurl = \ncommit = 460efc8cf48043171fe2757ea69a21663d726998\nbuilddate = 1705284702\n",
                      "markdown": "`pkgver = 0.46.1-r0\narch = x86_64\nsize = 436174\norigin = rlwrap\npkgdesc = A readline wrapper\nurl = \ncommit = 460efc8cf48043171fe2757ea69a21663d726998\nbuilddate = 1705284702\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/.PKGINFO"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 9,
                  "endLine": 3,
                  "snippet": {
                    "text": "# Generated by melange.\npkgname = rlwrap\npkgver = 0.46.1-r0\narch = x86_64\nsize = 436174\norigin = rlwrap\n",
                    "rendered": {
                      "text": "# Generated by melange.\npkgname = rlwrap\npkgver = 0.46.1-r0\narch = x86_64\nsize = 436174\norigin = rlwrap\n",
                      "markdown": "`# Generated by melange.\npkgname = rlwrap\npkgver = 0.46.1-r0\narch = x86_64\nsize = 436174\norigin = rlwrap\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 854,
                  "startColumn": 77,
                  "endLine": 854,
                  "endColumn": 85,
                  "snippet": {
                    "text": "    {\n      \"spdxElementId\": \"SPDXRef-Package-rlwrap-0.46.1-r0\",\n      \"relationshipType\": \"CONTAINS\",\n      \"relatedSpdxElement\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\"\n    },\n    {\n      \"spdxElementId\": \"SPDXRef-Package-rlwrap-0.46.1-r0\",\n",
                    "rendered": {
                      "text": "    {\n      \"spdxElementId\": \"SPDXRef-Package-rlwrap-0.46.1-r0\",\n      \"relationshipType\": \"CONTAINS\",\n      \"relatedSpdxElement\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\"\n    },\n    {\n      \"spdxElementId\": \"SPDXRef-Package-rlwrap-0.46.1-r0\",\n",
                      "markdown": "`    {\n      \"spdxElementId\": \"SPDXRef-Package-rlwrap-0.46.1-r0\",\n      \"relationshipType\": \"CONTAINS\",\n      \"relatedSpdxElement\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\"\n    },\n    {\n      \"spdxElementId\": \"SPDXRef-Package-rlwrap-0.46.1-r0\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 849,
                  "startColumn": 77,
                  "endLine": 849,
                  "endColumn": 85,
                  "snippet": {
                    "text": "    {\n      \"spdxElementId\": \"SPDXRef-Package-rlwrap-0.46.1-r0\",\n      \"relationshipType\": \"CONTAINS\",\n      \"relatedSpdxElement\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\"\n    },\n    {\n      \"spdxElementId\": \"SPDXRef-Package-rlwrap-0.46.1-r0\",\n",
                    "rendered": {
                      "text": "    {\n      \"spdxElementId\": \"SPDXRef-Package-rlwrap-0.46.1-r0\",\n      \"relationshipType\": \"CONTAINS\",\n      \"relatedSpdxElement\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\"\n    },\n    {\n      \"spdxElementId\": \"SPDXRef-Package-rlwrap-0.46.1-r0\",\n",
                      "markdown": "`    {\n      \"spdxElementId\": \"SPDXRef-Package-rlwrap-0.46.1-r0\",\n      \"relationshipType\": \"CONTAINS\",\n      \"relatedSpdxElement\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\"\n    },\n    {\n      \"spdxElementId\": \"SPDXRef-Package-rlwrap-0.46.1-r0\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 758,
                  "startColumn": 57,
                  "endLine": 758,
                  "endColumn": 65,
                  "snippet": {
                    "text": "        \"SPDXRef-File--usr-share-rlwrap-filters-RlwrapFilter.3pm\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-RlwrapFilter.pm\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-countC95inC95prompt\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-countC95inC95prompt.py\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-debugC95null\",\n",
                    "rendered": {
                      "text": "        \"SPDXRef-File--usr-share-rlwrap-filters-RlwrapFilter.3pm\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-RlwrapFilter.pm\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-countC95inC95prompt\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-countC95inC95prompt.py\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-debugC95null\",\n",
                      "markdown": "`        \"SPDXRef-File--usr-share-rlwrap-filters-RlwrapFilter.3pm\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-RlwrapFilter.pm\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-countC95inC95prompt\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-countC95inC95prompt.py\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-debugC95null\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 757,
                  "startColumn": 57,
                  "endLine": 757,
                  "endColumn": 65,
                  "snippet": {
                    "text": "        \"SPDXRef-File--usr-share-rlwrap-filters-README\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-RlwrapFilter.3pm\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-RlwrapFilter.pm\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-countC95inC95prompt\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-countC95inC95prompt.py\",\n",
                    "rendered": {
                      "text": "        \"SPDXRef-File--usr-share-rlwrap-filters-README\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-RlwrapFilter.3pm\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-RlwrapFilter.pm\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-countC95inC95prompt\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-countC95inC95prompt.py\",\n",
                      "markdown": "`        \"SPDXRef-File--usr-share-rlwrap-filters-README\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-RlwrapFilter.3pm\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-RlwrapFilter.pm\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-countC95inC95prompt\",\n        \"SPDXRef-File--usr-share-rlwrap-filters-countC95inC95prompt.py\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 51,
                  "endLine": 192,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    },\n    {\n      \"SPDXID\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\",\n      \"fileName\": \"usr/share/rlwrap/filters/censor_passwords.py\",\n      \"licenseConcluded\": \"NOASSERTION\",\n      \"checksums\": [\n        {\n",
                    "rendered": {
                      "text": "    },\n    {\n      \"SPDXID\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\",\n      \"fileName\": \"usr/share/rlwrap/filters/censor_passwords.py\",\n      \"licenseConcluded\": \"NOASSERTION\",\n      \"checksums\": [\n        {\n",
                      "markdown": "`    },\n    {\n      \"SPDXID\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\",\n      \"fileName\": \"usr/share/rlwrap/filters/censor_passwords.py\",\n      \"licenseConcluded\": \"NOASSERTION\",\n      \"checksums\": [\n        {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 65,
                  "endLine": 191,
                  "endColumn": 73,
                  "snippet": {
                    "text": "      ]\n    },\n    {\n      \"SPDXID\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\",\n      \"fileName\": \"usr/share/rlwrap/filters/censor_passwords.py\",\n      \"licenseConcluded\": \"NOASSERTION\",\n      \"checksums\": [\n",
                    "rendered": {
                      "text": "      ]\n    },\n    {\n      \"SPDXID\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\",\n      \"fileName\": \"usr/share/rlwrap/filters/censor_passwords.py\",\n      \"licenseConcluded\": \"NOASSERTION\",\n      \"checksums\": [\n",
                      "markdown": "`      ]\n    },\n    {\n      \"SPDXID\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords.py\",\n      \"fileName\": \"usr/share/rlwrap/filters/censor_passwords.py\",\n      \"licenseConcluded\": \"NOASSERTION\",\n      \"checksums\": [\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 51,
                  "endLine": 173,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    },\n    {\n      \"SPDXID\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\",\n      \"fileName\": \"usr/share/rlwrap/filters/censor_passwords\",\n      \"licenseConcluded\": \"NOASSERTION\",\n      \"checksums\": [\n        {\n",
                    "rendered": {
                      "text": "    },\n    {\n      \"SPDXID\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\",\n      \"fileName\": \"usr/share/rlwrap/filters/censor_passwords\",\n      \"licenseConcluded\": \"NOASSERTION\",\n      \"checksums\": [\n        {\n",
                      "markdown": "`    },\n    {\n      \"SPDXID\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\",\n      \"fileName\": \"usr/share/rlwrap/filters/censor_passwords\",\n      \"licenseConcluded\": \"NOASSERTION\",\n      \"checksums\": [\n        {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 65,
                  "endLine": 172,
                  "endColumn": 73,
                  "snippet": {
                    "text": "      ]\n    },\n    {\n      \"SPDXID\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\",\n      \"fileName\": \"usr/share/rlwrap/filters/censor_passwords\",\n      \"licenseConcluded\": \"NOASSERTION\",\n      \"checksums\": [\n",
                    "rendered": {
                      "text": "      ]\n    },\n    {\n      \"SPDXID\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\",\n      \"fileName\": \"usr/share/rlwrap/filters/censor_passwords\",\n      \"licenseConcluded\": \"NOASSERTION\",\n      \"checksums\": [\n",
                      "markdown": "`      ]\n    },\n    {\n      \"SPDXID\": \"SPDXRef-File--usr-share-rlwrap-filters-censorC95passwords\",\n      \"fileName\": \"usr/share/rlwrap/filters/censor_passwords\",\n      \"licenseConcluded\": \"NOASSERTION\",\n      \"checksums\": [\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 801,
                  "startColumn": 40,
                  "endLine": 801,
                  "endColumn": 82,
                  "snippet": {
                    "text": "        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"395c6414c9f240216354528254118225604f46cf\"\n      }\n    }\n  ],\n",
                    "rendered": {
                      "text": "        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"395c6414c9f240216354528254118225604f46cf\"\n      }\n    }\n  ],\n",
                      "markdown": "`        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"395c6414c9f240216354528254118225604f46cf\"\n      }\n    }\n  ],\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 737,
                  "startColumn": 27,
                  "endLine": 737,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"6a1a7aa7063d994e73979a6507b454bb78a1ece78bb2e665148ede22538ca318a49a070a0bdd2a5126427c9afe41a23058a5898e7bf162188fe504c8ea31d601\"\n        }\n      ]\n    }\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"6a1a7aa7063d994e73979a6507b454bb78a1ece78bb2e665148ede22538ca318a49a070a0bdd2a5126427c9afe41a23058a5898e7bf162188fe504c8ea31d601\"\n        }\n      ]\n    }\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"6a1a7aa7063d994e73979a6507b454bb78a1ece78bb2e665148ede22538ca318a49a070a0bdd2a5126427c9afe41a23058a5898e7bf162188fe504c8ea31d601\"\n        }\n      ]\n    }\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 733,
                  "startColumn": 27,
                  "endLine": 733,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"6199ed30ded41e21597ac754b88644880f7267da567e320dce8824b496076479\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"6199ed30ded41e21597ac754b88644880f7267da567e320dce8824b496076479\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"6199ed30ded41e21597ac754b88644880f7267da567e320dce8824b496076479\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 729,
                  "startColumn": 27,
                  "endLine": 729,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"3343c33abedabd2032b5f8d951f76c28373a6782\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"3343c33abedabd2032b5f8d951f76c28373a6782\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"3343c33abedabd2032b5f8d951f76c28373a6782\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 718,
                  "startColumn": 27,
                  "endLine": 718,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"80a59f949decc898d023e2d7aee89990cac6b8f0ff3d5e84d86908227a10a4d25373f50d744a60ddc2c017bb5c5c3d8a2553a2d16bd2bc84676aedfd4df42430\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"80a59f949decc898d023e2d7aee89990cac6b8f0ff3d5e84d86908227a10a4d25373f50d744a60ddc2c017bb5c5c3d8a2553a2d16bd2bc84676aedfd4df42430\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"80a59f949decc898d023e2d7aee89990cac6b8f0ff3d5e84d86908227a10a4d25373f50d744a60ddc2c017bb5c5c3d8a2553a2d16bd2bc84676aedfd4df42430\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 714,
                  "startColumn": 27,
                  "endLine": 714,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"bac3cf642ab1b052838753a12acad2505f0e07a7565e0ec1a13819a8864bb533\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"bac3cf642ab1b052838753a12acad2505f0e07a7565e0ec1a13819a8864bb533\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"bac3cf642ab1b052838753a12acad2505f0e07a7565e0ec1a13819a8864bb533\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 710,
                  "startColumn": 27,
                  "endLine": 710,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c038bff7a589cc79b0233552bd1c2c8125a8cde5\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c038bff7a589cc79b0233552bd1c2c8125a8cde5\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c038bff7a589cc79b0233552bd1c2c8125a8cde5\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 699,
                  "startColumn": 27,
                  "endLine": 699,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4a8a9e23739e59f7db3c98a308450653292339abca80dbdda56309f691d9e6f3b52cce8ba7aa195c26ddd078bfaac18eaa07fe1395a349cbd2863db414e6a5a5\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4a8a9e23739e59f7db3c98a308450653292339abca80dbdda56309f691d9e6f3b52cce8ba7aa195c26ddd078bfaac18eaa07fe1395a349cbd2863db414e6a5a5\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4a8a9e23739e59f7db3c98a308450653292339abca80dbdda56309f691d9e6f3b52cce8ba7aa195c26ddd078bfaac18eaa07fe1395a349cbd2863db414e6a5a5\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 695,
                  "startColumn": 27,
                  "endLine": 695,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"436334cd490e40e50145a1738a31cea75ef18965e2c33ec08158dc21e317b395\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"436334cd490e40e50145a1738a31cea75ef18965e2c33ec08158dc21e317b395\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"436334cd490e40e50145a1738a31cea75ef18965e2c33ec08158dc21e317b395\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 691,
                  "startColumn": 27,
                  "endLine": 691,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"40d16ca97089a12fc1da81d865e57d00a2b18738\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"40d16ca97089a12fc1da81d865e57d00a2b18738\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"40d16ca97089a12fc1da81d865e57d00a2b18738\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 680,
                  "startColumn": 27,
                  "endLine": 680,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"039f4a6ed7321c8b2657908088529ad7fc7cafbd2856e04d3233d373f6b92418aa8f19ca4d62c9432d7d7eff5d4d354bda53ddaf9d31d7a316e119be33e6f83d\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"039f4a6ed7321c8b2657908088529ad7fc7cafbd2856e04d3233d373f6b92418aa8f19ca4d62c9432d7d7eff5d4d354bda53ddaf9d31d7a316e119be33e6f83d\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"039f4a6ed7321c8b2657908088529ad7fc7cafbd2856e04d3233d373f6b92418aa8f19ca4d62c9432d7d7eff5d4d354bda53ddaf9d31d7a316e119be33e6f83d\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 676,
                  "startColumn": 27,
                  "endLine": 676,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cf9c770d950b6267ff417992b0c553427f5b70648cd000e98ad6eda8592dcf12\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cf9c770d950b6267ff417992b0c553427f5b70648cd000e98ad6eda8592dcf12\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cf9c770d950b6267ff417992b0c553427f5b70648cd000e98ad6eda8592dcf12\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 672,
                  "startColumn": 27,
                  "endLine": 672,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6dedabbb12535393f67e2d506f954c68ed4f4c7c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6dedabbb12535393f67e2d506f954c68ed4f4c7c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6dedabbb12535393f67e2d506f954c68ed4f4c7c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 661,
                  "startColumn": 27,
                  "endLine": 661,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"eee960a08db296bd5cac803fcb92f2f5aef959e6fa3afa454af1a84585988b86f3113222192d8c02843ea339c23fec932a34e93c477bbd33f495b2ef727d59da\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"eee960a08db296bd5cac803fcb92f2f5aef959e6fa3afa454af1a84585988b86f3113222192d8c02843ea339c23fec932a34e93c477bbd33f495b2ef727d59da\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"eee960a08db296bd5cac803fcb92f2f5aef959e6fa3afa454af1a84585988b86f3113222192d8c02843ea339c23fec932a34e93c477bbd33f495b2ef727d59da\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 657,
                  "startColumn": 27,
                  "endLine": 657,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"47735d91da532eae7e64e906c7749691a694f6c1a42c51da3b730e4de4751efc\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"47735d91da532eae7e64e906c7749691a694f6c1a42c51da3b730e4de4751efc\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"47735d91da532eae7e64e906c7749691a694f6c1a42c51da3b730e4de4751efc\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 653,
                  "startColumn": 27,
                  "endLine": 653,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"5c2cec78f4e54fc3f6fabe6bf7b2c1589f2105b0\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"5c2cec78f4e54fc3f6fabe6bf7b2c1589f2105b0\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"5c2cec78f4e54fc3f6fabe6bf7b2c1589f2105b0\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 642,
                  "startColumn": 27,
                  "endLine": 642,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4b48990b48bec6b9961d5daa5333615a6e5ad32759ae5f6d45e87811d0decb79cffad3a692905ecf881e7ea429c62c579c6f30e2c548422073b45292b0fd614f\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4b48990b48bec6b9961d5daa5333615a6e5ad32759ae5f6d45e87811d0decb79cffad3a692905ecf881e7ea429c62c579c6f30e2c548422073b45292b0fd614f\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4b48990b48bec6b9961d5daa5333615a6e5ad32759ae5f6d45e87811d0decb79cffad3a692905ecf881e7ea429c62c579c6f30e2c548422073b45292b0fd614f\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 638,
                  "startColumn": 27,
                  "endLine": 638,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"d1fe78d264ae6afe37bb8e60f5acb8327f777d166bb8e2f92e02b5e547006db1\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"d1fe78d264ae6afe37bb8e60f5acb8327f777d166bb8e2f92e02b5e547006db1\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"d1fe78d264ae6afe37bb8e60f5acb8327f777d166bb8e2f92e02b5e547006db1\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 634,
                  "startColumn": 27,
                  "endLine": 634,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6e449340792ed90770ac3a7c651dfcf139075161\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6e449340792ed90770ac3a7c651dfcf139075161\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6e449340792ed90770ac3a7c651dfcf139075161\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 623,
                  "startColumn": 27,
                  "endLine": 623,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"fa78623d0a74413e1cfb3e143574a66b29ce6d8423c05dcf5d53e4b365593ce31bbaa2559ca62e51b1c5d3b2188e9560faefdd06c61bffc5225eaf9ca4ac9007\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"fa78623d0a74413e1cfb3e143574a66b29ce6d8423c05dcf5d53e4b365593ce31bbaa2559ca62e51b1c5d3b2188e9560faefdd06c61bffc5225eaf9ca4ac9007\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"fa78623d0a74413e1cfb3e143574a66b29ce6d8423c05dcf5d53e4b365593ce31bbaa2559ca62e51b1c5d3b2188e9560faefdd06c61bffc5225eaf9ca4ac9007\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 619,
                  "startColumn": 27,
                  "endLine": 619,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"30a741e416f22520713d8893aecc53028965501a1b778de9aa1fce47b2cacaaa\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"30a741e416f22520713d8893aecc53028965501a1b778de9aa1fce47b2cacaaa\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"30a741e416f22520713d8893aecc53028965501a1b778de9aa1fce47b2cacaaa\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 615,
                  "startColumn": 27,
                  "endLine": 615,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c779b2310ad4a6ebed9f0058f7ef13b62827a7f5\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c779b2310ad4a6ebed9f0058f7ef13b62827a7f5\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c779b2310ad4a6ebed9f0058f7ef13b62827a7f5\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 604,
                  "startColumn": 27,
                  "endLine": 604,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ef17e69253831f20bbbfb91c7e5139948281b9e2a4959234b2fe9f39bfc09659a283f0f38120d72b1282a17583dca9ae60644f7030d43008deec01929616930b\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ef17e69253831f20bbbfb91c7e5139948281b9e2a4959234b2fe9f39bfc09659a283f0f38120d72b1282a17583dca9ae60644f7030d43008deec01929616930b\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ef17e69253831f20bbbfb91c7e5139948281b9e2a4959234b2fe9f39bfc09659a283f0f38120d72b1282a17583dca9ae60644f7030d43008deec01929616930b\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 600,
                  "startColumn": 27,
                  "endLine": 600,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"bd512bd6364b3b52cf6154c467015dcbeddc5392d9764d7de4949c79f6dfa8d6\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"bd512bd6364b3b52cf6154c467015dcbeddc5392d9764d7de4949c79f6dfa8d6\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"bd512bd6364b3b52cf6154c467015dcbeddc5392d9764d7de4949c79f6dfa8d6\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 596,
                  "startColumn": 27,
                  "endLine": 596,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"5611ad1d2e8e4cdc2d32a3301427ee150100b877\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"5611ad1d2e8e4cdc2d32a3301427ee150100b877\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"5611ad1d2e8e4cdc2d32a3301427ee150100b877\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 585,
                  "startColumn": 27,
                  "endLine": 585,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c4c111b131f88fd9c3f68826fb51beef8b22cb535db6fcc3d2c31156b42c9f1ee062ea0134c1a935ce9612b706a8463ed74913dfdad3a31b5d004abf2e4073c7\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c4c111b131f88fd9c3f68826fb51beef8b22cb535db6fcc3d2c31156b42c9f1ee062ea0134c1a935ce9612b706a8463ed74913dfdad3a31b5d004abf2e4073c7\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c4c111b131f88fd9c3f68826fb51beef8b22cb535db6fcc3d2c31156b42c9f1ee062ea0134c1a935ce9612b706a8463ed74913dfdad3a31b5d004abf2e4073c7\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 581,
                  "startColumn": 27,
                  "endLine": 581,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"b3a7de2e14a09968a6f08197bbbc0ac455047ee4743c635f211ef8ee316ed50c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"b3a7de2e14a09968a6f08197bbbc0ac455047ee4743c635f211ef8ee316ed50c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"b3a7de2e14a09968a6f08197bbbc0ac455047ee4743c635f211ef8ee316ed50c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 577,
                  "startColumn": 27,
                  "endLine": 577,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"bdd1ae6f7943d70ad0c1f74261821cfb900d3ad6\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"bdd1ae6f7943d70ad0c1f74261821cfb900d3ad6\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"bdd1ae6f7943d70ad0c1f74261821cfb900d3ad6\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 566,
                  "startColumn": 27,
                  "endLine": 566,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"07d8779ef59f2631607b3a32a1afd9f3130b5f901aadcca889d43427d36294068190f017ef5456e1bf0821cb3f2eff1ca85c2eff658c222578a08ab5b4ec92ed\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"07d8779ef59f2631607b3a32a1afd9f3130b5f901aadcca889d43427d36294068190f017ef5456e1bf0821cb3f2eff1ca85c2eff658c222578a08ab5b4ec92ed\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"07d8779ef59f2631607b3a32a1afd9f3130b5f901aadcca889d43427d36294068190f017ef5456e1bf0821cb3f2eff1ca85c2eff658c222578a08ab5b4ec92ed\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 562,
                  "startColumn": 27,
                  "endLine": 562,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"3cc2fc97c98c0c8c26579b952ed9dca571ff63bfc3cbd49d84ba90d4bbdaac83\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"3cc2fc97c98c0c8c26579b952ed9dca571ff63bfc3cbd49d84ba90d4bbdaac83\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"3cc2fc97c98c0c8c26579b952ed9dca571ff63bfc3cbd49d84ba90d4bbdaac83\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 558,
                  "startColumn": 27,
                  "endLine": 558,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"fa8d74ff0b5d7aff8221275eef0bea722a43cb89\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"fa8d74ff0b5d7aff8221275eef0bea722a43cb89\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"fa8d74ff0b5d7aff8221275eef0bea722a43cb89\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 547,
                  "startColumn": 27,
                  "endLine": 547,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"f9f9ca78a624e32caeea5af78d468d7381338f1ba8e462e02c5fa5df12876dc16179e5021c3158a4bfc82d917d08fb7b0455c3dd37afa2c30a08830ea1285560\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"f9f9ca78a624e32caeea5af78d468d7381338f1ba8e462e02c5fa5df12876dc16179e5021c3158a4bfc82d917d08fb7b0455c3dd37afa2c30a08830ea1285560\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"f9f9ca78a624e32caeea5af78d468d7381338f1ba8e462e02c5fa5df12876dc16179e5021c3158a4bfc82d917d08fb7b0455c3dd37afa2c30a08830ea1285560\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 543,
                  "startColumn": 27,
                  "endLine": 543,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"e5f5870502cd88fbba290ec2ec98b02c210d37adaf5c7a771b4c5b53c3bc55e8\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"e5f5870502cd88fbba290ec2ec98b02c210d37adaf5c7a771b4c5b53c3bc55e8\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"e5f5870502cd88fbba290ec2ec98b02c210d37adaf5c7a771b4c5b53c3bc55e8\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 539,
                  "startColumn": 27,
                  "endLine": 539,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"78ab1068591c9388e871c76c14f9c368ddc34fd1\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"78ab1068591c9388e871c76c14f9c368ddc34fd1\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"78ab1068591c9388e871c76c14f9c368ddc34fd1\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 528,
                  "startColumn": 27,
                  "endLine": 528,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"691b50ec2b4430c5f92e71e22fb06df3f9f57ac4e365544d67bd9ffcd6f0d58e70215e83c19943b443fd730729295db3df92fe248601786e965b0d22f94b5555\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"691b50ec2b4430c5f92e71e22fb06df3f9f57ac4e365544d67bd9ffcd6f0d58e70215e83c19943b443fd730729295db3df92fe248601786e965b0d22f94b5555\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"691b50ec2b4430c5f92e71e22fb06df3f9f57ac4e365544d67bd9ffcd6f0d58e70215e83c19943b443fd730729295db3df92fe248601786e965b0d22f94b5555\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 524,
                  "startColumn": 27,
                  "endLine": 524,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"4555b5a4389b50259d74de7d9b06a15cbc38267e356fa3a6573917994aef1a56\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"4555b5a4389b50259d74de7d9b06a15cbc38267e356fa3a6573917994aef1a56\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"4555b5a4389b50259d74de7d9b06a15cbc38267e356fa3a6573917994aef1a56\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 520,
                  "startColumn": 27,
                  "endLine": 520,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"36b9b0b5acad7a36d9f1c5f785cecfe63c2f20f1\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"36b9b0b5acad7a36d9f1c5f785cecfe63c2f20f1\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"36b9b0b5acad7a36d9f1c5f785cecfe63c2f20f1\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 509,
                  "startColumn": 27,
                  "endLine": 509,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2d9742d83aa85c52a9e915e7035425c3e8d56efc2e3e150efd08d9a1b204a68e611c4e5ddcb2974ffb31727c593b00028d47c7288b22a306062993962c3e6145\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2d9742d83aa85c52a9e915e7035425c3e8d56efc2e3e150efd08d9a1b204a68e611c4e5ddcb2974ffb31727c593b00028d47c7288b22a306062993962c3e6145\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2d9742d83aa85c52a9e915e7035425c3e8d56efc2e3e150efd08d9a1b204a68e611c4e5ddcb2974ffb31727c593b00028d47c7288b22a306062993962c3e6145\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 505,
                  "startColumn": 27,
                  "endLine": 505,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"2873587de3fdb6f2a0784f5280b2234c08e05f63d22d79d4fe0e1c3f9b55e03e\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"2873587de3fdb6f2a0784f5280b2234c08e05f63d22d79d4fe0e1c3f9b55e03e\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"2873587de3fdb6f2a0784f5280b2234c08e05f63d22d79d4fe0e1c3f9b55e03e\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 501,
                  "startColumn": 27,
                  "endLine": 501,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"bb9526ab7ba477dad8ce51ae0c129d047235e6ff\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"bb9526ab7ba477dad8ce51ae0c129d047235e6ff\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"bb9526ab7ba477dad8ce51ae0c129d047235e6ff\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 490,
                  "startColumn": 27,
                  "endLine": 490,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"18a95c0d8dc3a9ae6bb1b60652446c6be429231568c6944362c048110f8e67468809869a5b6bf932a87c9ac3281af6760d8f8037d0e330aa3ede81aaf8e4b71a\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"18a95c0d8dc3a9ae6bb1b60652446c6be429231568c6944362c048110f8e67468809869a5b6bf932a87c9ac3281af6760d8f8037d0e330aa3ede81aaf8e4b71a\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"18a95c0d8dc3a9ae6bb1b60652446c6be429231568c6944362c048110f8e67468809869a5b6bf932a87c9ac3281af6760d8f8037d0e330aa3ede81aaf8e4b71a\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 27,
                  "endLine": 486,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"dbf6d6a435c6695b6df5e3a3e01a05c39497f4cdac9c7a19c4a8e99b570f8b6b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"dbf6d6a435c6695b6df5e3a3e01a05c39497f4cdac9c7a19c4a8e99b570f8b6b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"dbf6d6a435c6695b6df5e3a3e01a05c39497f4cdac9c7a19c4a8e99b570f8b6b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 482,
                  "startColumn": 27,
                  "endLine": 482,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"140b89379f53bb36c42b44d0fc6087003e62a46d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"140b89379f53bb36c42b44d0fc6087003e62a46d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"140b89379f53bb36c42b44d0fc6087003e62a46d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 471,
                  "startColumn": 27,
                  "endLine": 471,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"dbb42071fb34cdc32abbc1f0d00815ad4d8b755bdf949a520e812d03c59a1ca3cdce0b63b9861449ae4109b9e726424cf0cfc439c914c8603e01aa8e76588f0e\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"dbb42071fb34cdc32abbc1f0d00815ad4d8b755bdf949a520e812d03c59a1ca3cdce0b63b9861449ae4109b9e726424cf0cfc439c914c8603e01aa8e76588f0e\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"dbb42071fb34cdc32abbc1f0d00815ad4d8b755bdf949a520e812d03c59a1ca3cdce0b63b9861449ae4109b9e726424cf0cfc439c914c8603e01aa8e76588f0e\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 27,
                  "endLine": 467,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"603e8ad552628da60021938db7cc584ad11359b1d8f6c727a29924277d7b0ac1\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"603e8ad552628da60021938db7cc584ad11359b1d8f6c727a29924277d7b0ac1\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"603e8ad552628da60021938db7cc584ad11359b1d8f6c727a29924277d7b0ac1\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 463,
                  "startColumn": 27,
                  "endLine": 463,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9fb6551e0c2b100bd93e145385981535accc59b2\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9fb6551e0c2b100bd93e145385981535accc59b2\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9fb6551e0c2b100bd93e145385981535accc59b2\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 452,
                  "startColumn": 27,
                  "endLine": 452,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"748d7ffaea58436533a3e038a4b3199511d7d4534cec2ce5bea31ac357446bf9d9c746ebfc528ccb7e645ad7d2d79d85cec2669c13a9e274d5fc188fe2391916\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"748d7ffaea58436533a3e038a4b3199511d7d4534cec2ce5bea31ac357446bf9d9c746ebfc528ccb7e645ad7d2d79d85cec2669c13a9e274d5fc188fe2391916\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"748d7ffaea58436533a3e038a4b3199511d7d4534cec2ce5bea31ac357446bf9d9c746ebfc528ccb7e645ad7d2d79d85cec2669c13a9e274d5fc188fe2391916\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 448,
                  "startColumn": 27,
                  "endLine": 448,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1922ea2b82aaf94ff151ec99f8e2760fe7efb39c0dcc9d1f28c825e1a032ef55\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1922ea2b82aaf94ff151ec99f8e2760fe7efb39c0dcc9d1f28c825e1a032ef55\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1922ea2b82aaf94ff151ec99f8e2760fe7efb39c0dcc9d1f28c825e1a032ef55\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 444,
                  "startColumn": 27,
                  "endLine": 444,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"e7f7aeb20020c0a31134ecf65845d1d26a41367d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"e7f7aeb20020c0a31134ecf65845d1d26a41367d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"e7f7aeb20020c0a31134ecf65845d1d26a41367d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 433,
                  "startColumn": 27,
                  "endLine": 433,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"bcd029c47dd9e89a00e4e3bd35f0b5ce38be96d3e941c8ebc062db222cb18fa5745f8bd0716623048f24183a782ca4a2792125ed1a1e38c282aa2fa1c93b108f\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"bcd029c47dd9e89a00e4e3bd35f0b5ce38be96d3e941c8ebc062db222cb18fa5745f8bd0716623048f24183a782ca4a2792125ed1a1e38c282aa2fa1c93b108f\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"bcd029c47dd9e89a00e4e3bd35f0b5ce38be96d3e941c8ebc062db222cb18fa5745f8bd0716623048f24183a782ca4a2792125ed1a1e38c282aa2fa1c93b108f\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 27,
                  "endLine": 429,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"53fbf71e594d70073222a0f4ec73f9353c161806f5edb657bbccab6c1030c389\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"53fbf71e594d70073222a0f4ec73f9353c161806f5edb657bbccab6c1030c389\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"53fbf71e594d70073222a0f4ec73f9353c161806f5edb657bbccab6c1030c389\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 425,
                  "startColumn": 27,
                  "endLine": 425,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"95c5146476fb28c243acac7fdcd3838d9ec9438e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"95c5146476fb28c243acac7fdcd3838d9ec9438e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"95c5146476fb28c243acac7fdcd3838d9ec9438e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 27,
                  "endLine": 414,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"53291a55489c9987ec958684cc28585d6f4be06ebaab26afe10c8cd5c1e371d978d031506276952648024173b6199192391b5aa8626c4d4fbe58751d15b83674\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"53291a55489c9987ec958684cc28585d6f4be06ebaab26afe10c8cd5c1e371d978d031506276952648024173b6199192391b5aa8626c4d4fbe58751d15b83674\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"53291a55489c9987ec958684cc28585d6f4be06ebaab26afe10c8cd5c1e371d978d031506276952648024173b6199192391b5aa8626c4d4fbe58751d15b83674\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 27,
                  "endLine": 410,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"fd21ae237b90eed0f525bad54ad6210eb9c1b50f674d0ad9ab44ae4ae9d58b15\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"fd21ae237b90eed0f525bad54ad6210eb9c1b50f674d0ad9ab44ae4ae9d58b15\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"fd21ae237b90eed0f525bad54ad6210eb9c1b50f674d0ad9ab44ae4ae9d58b15\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 406,
                  "startColumn": 27,
                  "endLine": 406,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"121e9756053c017a2e7abda50955dcee4e4e27ac\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"121e9756053c017a2e7abda50955dcee4e4e27ac\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"121e9756053c017a2e7abda50955dcee4e4e27ac\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 395,
                  "startColumn": 27,
                  "endLine": 395,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"b5a49efd65b3f22b19d3f79674036f5f4f37fe0ec2f21f70e85b894c7ec2f0c4507c9458e402114f7e7b5d957f0766b583ee511e817ea5e5f287f213a88590f5\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"b5a49efd65b3f22b19d3f79674036f5f4f37fe0ec2f21f70e85b894c7ec2f0c4507c9458e402114f7e7b5d957f0766b583ee511e817ea5e5f287f213a88590f5\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"b5a49efd65b3f22b19d3f79674036f5f4f37fe0ec2f21f70e85b894c7ec2f0c4507c9458e402114f7e7b5d957f0766b583ee511e817ea5e5f287f213a88590f5\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 391,
                  "startColumn": 27,
                  "endLine": 391,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ae3ec4f931c556fb445b46a9e034ccd0aa7a6f0c1233784bd3acf8c78ac0069b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ae3ec4f931c556fb445b46a9e034ccd0aa7a6f0c1233784bd3acf8c78ac0069b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ae3ec4f931c556fb445b46a9e034ccd0aa7a6f0c1233784bd3acf8c78ac0069b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 387,
                  "startColumn": 27,
                  "endLine": 387,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9792601afbeb144a2705d4e42cbb65a649a9d9a3\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9792601afbeb144a2705d4e42cbb65a649a9d9a3\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9792601afbeb144a2705d4e42cbb65a649a9d9a3\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 27,
                  "endLine": 376,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"d6595a1b50c39bfcfe642d91725a5ab1f2640222fe50339508e65a58b6d90a9229437852d05192afc67251bf5eea101c909c86d54f84b0bbe769ba62816a4840\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"d6595a1b50c39bfcfe642d91725a5ab1f2640222fe50339508e65a58b6d90a9229437852d05192afc67251bf5eea101c909c86d54f84b0bbe769ba62816a4840\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"d6595a1b50c39bfcfe642d91725a5ab1f2640222fe50339508e65a58b6d90a9229437852d05192afc67251bf5eea101c909c86d54f84b0bbe769ba62816a4840\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 27,
                  "endLine": 372,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ca20d97793b13b4d8c23897c0d46b6b5e82715c39d047775f3a10ce441a68659\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ca20d97793b13b4d8c23897c0d46b6b5e82715c39d047775f3a10ce441a68659\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ca20d97793b13b4d8c23897c0d46b6b5e82715c39d047775f3a10ce441a68659\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 27,
                  "endLine": 368,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2dc450f813661f7ed26b0cbff1321526af7b2710\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2dc450f813661f7ed26b0cbff1321526af7b2710\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2dc450f813661f7ed26b0cbff1321526af7b2710\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 27,
                  "endLine": 357,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"819a72e68a2552afc90f3cec5fd1a5e980c072339bf4f31be19c6dfe9684dda66dffae59facabb7f05c966cf6489004919b81dd8e5f7c3ef66d3865ed50f19d5\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"819a72e68a2552afc90f3cec5fd1a5e980c072339bf4f31be19c6dfe9684dda66dffae59facabb7f05c966cf6489004919b81dd8e5f7c3ef66d3865ed50f19d5\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"819a72e68a2552afc90f3cec5fd1a5e980c072339bf4f31be19c6dfe9684dda66dffae59facabb7f05c966cf6489004919b81dd8e5f7c3ef66d3865ed50f19d5\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 27,
                  "endLine": 353,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f9188f55fe794b18270f24abc5a962111b2bee6fef2c3d98a28e8b18ac8b193b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f9188f55fe794b18270f24abc5a962111b2bee6fef2c3d98a28e8b18ac8b193b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f9188f55fe794b18270f24abc5a962111b2bee6fef2c3d98a28e8b18ac8b193b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 27,
                  "endLine": 349,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6b24763297fbf671aa3c3b60a3cbc0ddb4cc828e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6b24763297fbf671aa3c3b60a3cbc0ddb4cc828e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6b24763297fbf671aa3c3b60a3cbc0ddb4cc828e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 27,
                  "endLine": 338,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"5d616eb839dcbb00d073f2287612ce699ebf00c81a3e6960c215a1205de8cbf183198ae8b290f22eb03a9835300adaeae8eefe2e50a49472e00c84fb4958f2ac\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"5d616eb839dcbb00d073f2287612ce699ebf00c81a3e6960c215a1205de8cbf183198ae8b290f22eb03a9835300adaeae8eefe2e50a49472e00c84fb4958f2ac\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"5d616eb839dcbb00d073f2287612ce699ebf00c81a3e6960c215a1205de8cbf183198ae8b290f22eb03a9835300adaeae8eefe2e50a49472e00c84fb4958f2ac\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 27,
                  "endLine": 334,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"21d4736ef952c741f6940d1e2af93c95db78d30073b5dbcb762b652e2b9e7484\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"21d4736ef952c741f6940d1e2af93c95db78d30073b5dbcb762b652e2b9e7484\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"21d4736ef952c741f6940d1e2af93c95db78d30073b5dbcb762b652e2b9e7484\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 27,
                  "endLine": 330,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"e2f1a9fb7375e431b86d2509fe3c505d0a114a3a\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"e2f1a9fb7375e431b86d2509fe3c505d0a114a3a\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"e2f1a9fb7375e431b86d2509fe3c505d0a114a3a\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 27,
                  "endLine": 319,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"9d45cb6300d6186e3d06cbab77728d84874ab6cb31c814626a53ec3d32a503385846419cd3cfbe376b4299caeb533da1ce7fb10db596112993c67f6198c948fa\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"9d45cb6300d6186e3d06cbab77728d84874ab6cb31c814626a53ec3d32a503385846419cd3cfbe376b4299caeb533da1ce7fb10db596112993c67f6198c948fa\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"9d45cb6300d6186e3d06cbab77728d84874ab6cb31c814626a53ec3d32a503385846419cd3cfbe376b4299caeb533da1ce7fb10db596112993c67f6198c948fa\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 27,
                  "endLine": 315,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"08dcb8ff7c0a39faac43514e66136593b37e3be3548ac70b0ae55d6053c27178\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"08dcb8ff7c0a39faac43514e66136593b37e3be3548ac70b0ae55d6053c27178\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"08dcb8ff7c0a39faac43514e66136593b37e3be3548ac70b0ae55d6053c27178\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 27,
                  "endLine": 311,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2ce2cc06143463f015c2a5e8980e84f332d2c017\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2ce2cc06143463f015c2a5e8980e84f332d2c017\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2ce2cc06143463f015c2a5e8980e84f332d2c017\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 27,
                  "endLine": 300,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"01f6204db7686a0eaf061ebd4f5ff3158a805ed0fd245092cde7435cd0cdd098b2c105b7ad225b363351e52e5d44d04b642099c88332e43195b8b2a5d695bf23\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"01f6204db7686a0eaf061ebd4f5ff3158a805ed0fd245092cde7435cd0cdd098b2c105b7ad225b363351e52e5d44d04b642099c88332e43195b8b2a5d695bf23\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"01f6204db7686a0eaf061ebd4f5ff3158a805ed0fd245092cde7435cd0cdd098b2c105b7ad225b363351e52e5d44d04b642099c88332e43195b8b2a5d695bf23\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 27,
                  "endLine": 296,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a9d172c2c2999c202fe945a32c50dde66c2bd258ab728e8d8812a9760e725bf2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a9d172c2c2999c202fe945a32c50dde66c2bd258ab728e8d8812a9760e725bf2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a9d172c2c2999c202fe945a32c50dde66c2bd258ab728e8d8812a9760e725bf2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 27,
                  "endLine": 292,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"62e49664ad702f4d3dacfe72efefe5958a6933c6\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"62e49664ad702f4d3dacfe72efefe5958a6933c6\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"62e49664ad702f4d3dacfe72efefe5958a6933c6\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 27,
                  "endLine": 281,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"a842bc26caade2e90e5693b6c55ecc545f701faa8ce6837686cac04d3b3474f8028ffbd0ba76ecb5615d27fa767528374a78ec5701d2a732823af350c58caf57\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"a842bc26caade2e90e5693b6c55ecc545f701faa8ce6837686cac04d3b3474f8028ffbd0ba76ecb5615d27fa767528374a78ec5701d2a732823af350c58caf57\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"a842bc26caade2e90e5693b6c55ecc545f701faa8ce6837686cac04d3b3474f8028ffbd0ba76ecb5615d27fa767528374a78ec5701d2a732823af350c58caf57\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 27,
                  "endLine": 277,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"65f44fe1877c1977b96dab9b30dd8727b1436bfe314a532346ef1edd7c9a4762\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"65f44fe1877c1977b96dab9b30dd8727b1436bfe314a532346ef1edd7c9a4762\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"65f44fe1877c1977b96dab9b30dd8727b1436bfe314a532346ef1edd7c9a4762\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 27,
                  "endLine": 273,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b3454a5161322d7d9389563c9303e36f31624278\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b3454a5161322d7d9389563c9303e36f31624278\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b3454a5161322d7d9389563c9303e36f31624278\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 27,
                  "endLine": 262,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7180b573978feaa929faff490b0250c689d3ac3a65b6b66eff374e3f7f39003b041d3492ec78f5587d9918153c59fbcc4677d7e293d7ffaa12008da19e801b4c\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7180b573978feaa929faff490b0250c689d3ac3a65b6b66eff374e3f7f39003b041d3492ec78f5587d9918153c59fbcc4677d7e293d7ffaa12008da19e801b4c\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7180b573978feaa929faff490b0250c689d3ac3a65b6b66eff374e3f7f39003b041d3492ec78f5587d9918153c59fbcc4677d7e293d7ffaa12008da19e801b4c\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 27,
                  "endLine": 258,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7c0d9757ab0af408f482b8c48e41317058ac8d0c00d02a3e02a6c1d8749e3fd5\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7c0d9757ab0af408f482b8c48e41317058ac8d0c00d02a3e02a6c1d8749e3fd5\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7c0d9757ab0af408f482b8c48e41317058ac8d0c00d02a3e02a6c1d8749e3fd5\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 27,
                  "endLine": 254,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"16f33d11b4ef5447b5a6afa81c080d5de637781d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"16f33d11b4ef5447b5a6afa81c080d5de637781d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"16f33d11b4ef5447b5a6afa81c080d5de637781d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 27,
                  "endLine": 243,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7b32b3d736f3b8bf78c93bfb5bd66df51b9f8d1141ca1ba1a95b5fe537d5aa8dafab861acf3ff3eeda9e867e730339e2f5b94b1d453c8cbcfb25fc521a15e728\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7b32b3d736f3b8bf78c93bfb5bd66df51b9f8d1141ca1ba1a95b5fe537d5aa8dafab861acf3ff3eeda9e867e730339e2f5b94b1d453c8cbcfb25fc521a15e728\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7b32b3d736f3b8bf78c93bfb5bd66df51b9f8d1141ca1ba1a95b5fe537d5aa8dafab861acf3ff3eeda9e867e730339e2f5b94b1d453c8cbcfb25fc521a15e728\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 27,
                  "endLine": 239,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"654b3ece54b8c812a1bc0362c9ad320e332eaa5ddc34bef37823ea683c69e283\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"654b3ece54b8c812a1bc0362c9ad320e332eaa5ddc34bef37823ea683c69e283\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"654b3ece54b8c812a1bc0362c9ad320e332eaa5ddc34bef37823ea683c69e283\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 27,
                  "endLine": 235,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"bad03601ce70d0b2058abc6696cdddfe69af190f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"bad03601ce70d0b2058abc6696cdddfe69af190f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"bad03601ce70d0b2058abc6696cdddfe69af190f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 27,
                  "endLine": 224,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"9816c09c4d5ab4770cca2e279404476d99b7668b987ba504850b6936a2b6b87e34bfb79057328b696fae9a7f2ae444badac9d9c978a0abf9337af6d6b17d068e\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"9816c09c4d5ab4770cca2e279404476d99b7668b987ba504850b6936a2b6b87e34bfb79057328b696fae9a7f2ae444badac9d9c978a0abf9337af6d6b17d068e\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"9816c09c4d5ab4770cca2e279404476d99b7668b987ba504850b6936a2b6b87e34bfb79057328b696fae9a7f2ae444badac9d9c978a0abf9337af6d6b17d068e\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 27,
                  "endLine": 220,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"02601c6e3a3a9c22fd278cd0ecd51e723ee5dcec542090d31a5ec90a65cf66b8\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"02601c6e3a3a9c22fd278cd0ecd51e723ee5dcec542090d31a5ec90a65cf66b8\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"02601c6e3a3a9c22fd278cd0ecd51e723ee5dcec542090d31a5ec90a65cf66b8\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 27,
                  "endLine": 216,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2ec3f5c24a29af1f0e4d454a41386f7ab78652de\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2ec3f5c24a29af1f0e4d454a41386f7ab78652de\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2ec3f5c24a29af1f0e4d454a41386f7ab78652de\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 27,
                  "endLine": 205,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c560085aa462a262fe21bf872da0cdaf20aeae2877517ec74e3709dbd88cd8970cdc3baa945be8263b2669a15451aeaba826f624fd5ccaac774d8d34c1e36084\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c560085aa462a262fe21bf872da0cdaf20aeae2877517ec74e3709dbd88cd8970cdc3baa945be8263b2669a15451aeaba826f624fd5ccaac774d8d34c1e36084\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c560085aa462a262fe21bf872da0cdaf20aeae2877517ec74e3709dbd88cd8970cdc3baa945be8263b2669a15451aeaba826f624fd5ccaac774d8d34c1e36084\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 27,
                  "endLine": 201,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"084207a11503424997d05097f85f3cf9b175870016104a197fbcf307a6f45b72\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"084207a11503424997d05097f85f3cf9b175870016104a197fbcf307a6f45b72\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"084207a11503424997d05097f85f3cf9b175870016104a197fbcf307a6f45b72\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 27,
                  "endLine": 197,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"fbfaf374058f4d1fd012acf58b7be11cf8c48017\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"fbfaf374058f4d1fd012acf58b7be11cf8c48017\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"fbfaf374058f4d1fd012acf58b7be11cf8c48017\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 27,
                  "endLine": 186,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4fe8feca76ff5cb5382a001541ee6de3ae3a951ae8bfc9314acb81c15b3387aaa6281e3ce6e602ec69d220d84095989ae33d1107fe72ca97a35ff41256b0bb3c\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4fe8feca76ff5cb5382a001541ee6de3ae3a951ae8bfc9314acb81c15b3387aaa6281e3ce6e602ec69d220d84095989ae33d1107fe72ca97a35ff41256b0bb3c\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4fe8feca76ff5cb5382a001541ee6de3ae3a951ae8bfc9314acb81c15b3387aaa6281e3ce6e602ec69d220d84095989ae33d1107fe72ca97a35ff41256b0bb3c\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 27,
                  "endLine": 182,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"60760346ebb7b21609135fbe44c2b010f6d6e142dfb12a5ed57d9758c1cc53bd\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"60760346ebb7b21609135fbe44c2b010f6d6e142dfb12a5ed57d9758c1cc53bd\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"60760346ebb7b21609135fbe44c2b010f6d6e142dfb12a5ed57d9758c1cc53bd\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 27,
                  "endLine": 178,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"a42ab44e8e07e51b0383a0ba61814d151d3951c7\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"a42ab44e8e07e51b0383a0ba61814d151d3951c7\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"a42ab44e8e07e51b0383a0ba61814d151d3951c7\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 27,
                  "endLine": 167,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c072ef53d3db901482696fbc0288f4a8de1eea58d3f0ef13b51a223338b3b1d32f711d18ba4a3e31d20be912663686775e199b8350d0ea9009cb45acde775eff\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c072ef53d3db901482696fbc0288f4a8de1eea58d3f0ef13b51a223338b3b1d32f711d18ba4a3e31d20be912663686775e199b8350d0ea9009cb45acde775eff\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c072ef53d3db901482696fbc0288f4a8de1eea58d3f0ef13b51a223338b3b1d32f711d18ba4a3e31d20be912663686775e199b8350d0ea9009cb45acde775eff\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 27,
                  "endLine": 163,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"e136a15be2fb5c68abe3f4c6e014f701c29be03a992fea28328351bf70feb171\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"e136a15be2fb5c68abe3f4c6e014f701c29be03a992fea28328351bf70feb171\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"e136a15be2fb5c68abe3f4c6e014f701c29be03a992fea28328351bf70feb171\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 27,
                  "endLine": 159,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"5f228f76a4824c475976446864c5a838adbd90a1\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"5f228f76a4824c475976446864c5a838adbd90a1\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"5f228f76a4824c475976446864c5a838adbd90a1\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 27,
                  "endLine": 148,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"5f077b52a97181019e0d2efc2dbd7247dad49b1a8c5dcc580b9afb7ff488e672d19540c2751f3a39bb1404307d7ae7a03c0597a39268d004a5c20ef6159a2c31\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"5f077b52a97181019e0d2efc2dbd7247dad49b1a8c5dcc580b9afb7ff488e672d19540c2751f3a39bb1404307d7ae7a03c0597a39268d004a5c20ef6159a2c31\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"5f077b52a97181019e0d2efc2dbd7247dad49b1a8c5dcc580b9afb7ff488e672d19540c2751f3a39bb1404307d7ae7a03c0597a39268d004a5c20ef6159a2c31\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 27,
                  "endLine": 144,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1a188c3724934d38477003b17bf958f3de25aba7cb5f82c9757c35dc63f56d66\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1a188c3724934d38477003b17bf958f3de25aba7cb5f82c9757c35dc63f56d66\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1a188c3724934d38477003b17bf958f3de25aba7cb5f82c9757c35dc63f56d66\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 27,
                  "endLine": 140,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"32b4cdedeb6ed34476bb7a83bcc38ae5f77c7100\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"32b4cdedeb6ed34476bb7a83bcc38ae5f77c7100\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"32b4cdedeb6ed34476bb7a83bcc38ae5f77c7100\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 27,
                  "endLine": 129,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"27bd790438e32432cc811adf6ea1c5e4b250b4802672ae4830cb3abdb14b705dfe0f344958ec3ed2e9a02358614eb2b0624034cab1641f1432f4013a50a3166e\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"27bd790438e32432cc811adf6ea1c5e4b250b4802672ae4830cb3abdb14b705dfe0f344958ec3ed2e9a02358614eb2b0624034cab1641f1432f4013a50a3166e\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"27bd790438e32432cc811adf6ea1c5e4b250b4802672ae4830cb3abdb14b705dfe0f344958ec3ed2e9a02358614eb2b0624034cab1641f1432f4013a50a3166e\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 27,
                  "endLine": 125,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"68542b1c4bf9f9ffc18c5d29af3d2f4148bbd80f92bd2a701f18a0f9d8baa78c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"68542b1c4bf9f9ffc18c5d29af3d2f4148bbd80f92bd2a701f18a0f9d8baa78c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"68542b1c4bf9f9ffc18c5d29af3d2f4148bbd80f92bd2a701f18a0f9d8baa78c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 27,
                  "endLine": 121,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"a5d0b9efa58bc24fcc14fb7b0de9fb63f3c65683\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"a5d0b9efa58bc24fcc14fb7b0de9fb63f3c65683\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"a5d0b9efa58bc24fcc14fb7b0de9fb63f3c65683\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 27,
                  "endLine": 110,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"071b31ac5fb40b2813839cc136e43d357a50f0c0fbc8f22fd052d5e6fa251b33df1b99671d0e4d796d78e41f43ed21600a041c85fcbeb6777532a8699dc274e5\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"071b31ac5fb40b2813839cc136e43d357a50f0c0fbc8f22fd052d5e6fa251b33df1b99671d0e4d796d78e41f43ed21600a041c85fcbeb6777532a8699dc274e5\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"071b31ac5fb40b2813839cc136e43d357a50f0c0fbc8f22fd052d5e6fa251b33df1b99671d0e4d796d78e41f43ed21600a041c85fcbeb6777532a8699dc274e5\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 27,
                  "endLine": 106,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f7c53db5711448f1ea41951be94db901f453c994b4b0e56255bc44f6dff9f0a8\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f7c53db5711448f1ea41951be94db901f453c994b4b0e56255bc44f6dff9f0a8\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f7c53db5711448f1ea41951be94db901f453c994b4b0e56255bc44f6dff9f0a8\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 27,
                  "endLine": 102,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"17260b1a09693466e6b50ef49331a65afb7e6e1d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"17260b1a09693466e6b50ef49331a65afb7e6e1d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"17260b1a09693466e6b50ef49331a65afb7e6e1d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 27,
                  "endLine": 91,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"48dfc676474a8bb44dbf2a32740577870b1fb99a2283f3937c572a013ab33f8b2d71a2cc17ffb79a99f1fbf49b1c21652105064d9d22a2f8e10d3d1b601e2b1c\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"48dfc676474a8bb44dbf2a32740577870b1fb99a2283f3937c572a013ab33f8b2d71a2cc17ffb79a99f1fbf49b1c21652105064d9d22a2f8e10d3d1b601e2b1c\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"48dfc676474a8bb44dbf2a32740577870b1fb99a2283f3937c572a013ab33f8b2d71a2cc17ffb79a99f1fbf49b1c21652105064d9d22a2f8e10d3d1b601e2b1c\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 27,
                  "endLine": 87,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f264b2148782e6d8fe484d96eef41c3233f41705ddd00be351ccb431f4315f77\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f264b2148782e6d8fe484d96eef41c3233f41705ddd00be351ccb431f4315f77\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f264b2148782e6d8fe484d96eef41c3233f41705ddd00be351ccb431f4315f77\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 27,
                  "endLine": 83,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b36c5a52a0152b36366e5183fabe45865e909e61\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b36c5a52a0152b36366e5183fabe45865e909e61\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b36c5a52a0152b36366e5183fabe45865e909e61\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 27,
                  "endLine": 72,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"5f077b52a97181019e0d2efc2dbd7247dad49b1a8c5dcc580b9afb7ff488e672d19540c2751f3a39bb1404307d7ae7a03c0597a39268d004a5c20ef6159a2c31\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"5f077b52a97181019e0d2efc2dbd7247dad49b1a8c5dcc580b9afb7ff488e672d19540c2751f3a39bb1404307d7ae7a03c0597a39268d004a5c20ef6159a2c31\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"5f077b52a97181019e0d2efc2dbd7247dad49b1a8c5dcc580b9afb7ff488e672d19540c2751f3a39bb1404307d7ae7a03c0597a39268d004a5c20ef6159a2c31\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 27,
                  "endLine": 68,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1a188c3724934d38477003b17bf958f3de25aba7cb5f82c9757c35dc63f56d66\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1a188c3724934d38477003b17bf958f3de25aba7cb5f82c9757c35dc63f56d66\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1a188c3724934d38477003b17bf958f3de25aba7cb5f82c9757c35dc63f56d66\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 27,
                  "endLine": 64,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"32b4cdedeb6ed34476bb7a83bcc38ae5f77c7100\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"32b4cdedeb6ed34476bb7a83bcc38ae5f77c7100\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"32b4cdedeb6ed34476bb7a83bcc38ae5f77c7100\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 27,
                  "endLine": 53,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"80cc5547f792936e6ee27c96d1b0c9d670b2cb7d55c6df54b940e1e2b26de30b177df8a705e4e591c600571e33ab04b4bcba9adc415d6577ed36f612e3b81f8e\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"80cc5547f792936e6ee27c96d1b0c9d670b2cb7d55c6df54b940e1e2b26de30b177df8a705e4e591c600571e33ab04b4bcba9adc415d6577ed36f612e3b81f8e\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"80cc5547f792936e6ee27c96d1b0c9d670b2cb7d55c6df54b940e1e2b26de30b177df8a705e4e591c600571e33ab04b4bcba9adc415d6577ed36f612e3b81f8e\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 27,
                  "endLine": 49,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"880d9e3666e0008dac710860932eea0d22382e0f8008c85486ae7cf42ea1c01c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"880d9e3666e0008dac710860932eea0d22382e0f8008c85486ae7cf42ea1c01c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"880d9e3666e0008dac710860932eea0d22382e0f8008c85486ae7cf42ea1c01c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 27,
                  "endLine": 45,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"667e565bca1f3e49a24d3a4c8cb0c318ea6a3c61\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"667e565bca1f3e49a24d3a4c8cb0c318ea6a3c61\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"667e565bca1f3e49a24d3a4c8cb0c318ea6a3c61\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 27,
                  "endLine": 34,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7dad671dfe84ca1c99a68d433dc10d1133614a435c42595bfb558e63088f4d7a9d510d9b003d029a795f8448ea8da77adbcb8d2972c952af3c0143da4c6da234\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7dad671dfe84ca1c99a68d433dc10d1133614a435c42595bfb558e63088f4d7a9d510d9b003d029a795f8448ea8da77adbcb8d2972c952af3c0143da4c6da234\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7dad671dfe84ca1c99a68d433dc10d1133614a435c42595bfb558e63088f4d7a9d510d9b003d029a795f8448ea8da77adbcb8d2972c952af3c0143da4c6da234\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 27,
                  "endLine": 30,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"d13a1d9a7acdfad695f8f1940b414b8d74cc5182b072a49b40a48c50dd9aac7a\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"d13a1d9a7acdfad695f8f1940b414b8d74cc5182b072a49b40a48c50dd9aac7a\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"d13a1d9a7acdfad695f8f1940b414b8d74cc5182b072a49b40a48c50dd9aac7a\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/var/lib/db/sbom/rlwrap-0.46.1-r0.spdx.json"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 27,
                  "endLine": 26,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b6a77723583984b6698f85a902e26d790f08227c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b6a77723583984b6698f85a902e26d790f08227c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b6a77723583984b6698f85a902e26d790f08227c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/null.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 26,
                  "endLine": 17,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"Usage: rlwrap [-options] -z null.py <command>\\n\"\\\n                   + \"a filter that does nothing\"\n\nfilter.run()\n",
                    "rendered": {
                      "text": "\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"Usage: rlwrap [-options] -z null.py <command>\\n\"\\\n                   + \"a filter that does nothing\"\n\nfilter.run()\n",
                      "markdown": "`\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"Usage: rlwrap [-options] -z null.py <command>\\n\"\\\n                   + \"a filter that does nothing\"\n\nfilter.run()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/handle_sigwinch"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 26,
                  "endLine": 23,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"Usage: rlwrap [-rlwrap-options] -z 'handle_sigwinch [options] [<format>]' <command>\\n\"\\\n                   + \"translates a window change signal into a command for apps that don't handle the signal\\n\"\\\n                   + \"outputs <format> to <command>'s stdin, where %L is replaced by the new height, \\n\"\\\n                   + \"and %C with the new width (default: 'export LINES=%L COLUMNS=%C')\\n\\nFilter options:\\n\" \\\n",
                    "rendered": {
                      "text": "\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"Usage: rlwrap [-rlwrap-options] -z 'handle_sigwinch [options] [<format>]' <command>\\n\"\\\n                   + \"translates a window change signal into a command for apps that don't handle the signal\\n\"\\\n                   + \"outputs <format> to <command>'s stdin, where %L is replaced by the new height, \\n\"\\\n                   + \"and %C with the new width (default: 'export LINES=%L COLUMNS=%C')\\n\\nFilter options:\\n\" \\\n",
                      "markdown": "`\nfilter = rlwrapfilter.RlwrapFilter()\n\nfilter.help_text = \"Usage: rlwrap [-rlwrap-options] -z 'handle_sigwinch [options] [<format>]' <command>\\n\"\\\n                   + \"translates a window change signal into a command for apps that don't handle the signal\\n\"\\\n                   + \"outputs <format> to <command>'s stdin, where %L is replaced by the new height, \\n\"\\\n                   + \"and %C with the new width (default: 'export LINES=%L COLUMNS=%C')\\n\\nFilter options:\\n\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/count_in_prompt.py"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 12,
                  "endLine": 34,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        return prompt\n\nfilter.help_text = '\\n'.join(\n    [\"Usage: rlwrap -z {0} <command>\".format(__file__),\n     \"replace prompt by simple counter\",\n     \"(demonstrates some simple prompt-munging techniques)\"]\n)\n",
                    "rendered": {
                      "text": "        return prompt\n\nfilter.help_text = '\\n'.join(\n    [\"Usage: rlwrap -z {0} <command>\".format(__file__),\n     \"replace prompt by simple counter\",\n     \"(demonstrates some simple prompt-munging techniques)\"]\n)\n",
                      "markdown": "`        return prompt\n\nfilter.help_text = '\\n'.join(\n    [\"Usage: rlwrap -z {0} <command>\".format(__file__),\n     \"replace prompt by simple counter\",\n     \"(demonstrates some simple prompt-munging techniques)\"]\n)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/count_in_prompt.py"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 30,
                  "endLine": 8,
                  "snippet": {
                    "text": "a demo for simple prompt-munging\n\nUsage:\nrlwrap -z ./count_in_prompt.py telnet\n\"\"\"\n\nimport sys\nimport os\n",
                    "rendered": {
                      "text": "a demo for simple prompt-munging\n\nUsage:\nrlwrap -z ./count_in_prompt.py telnet\n\"\"\"\n\nimport sys\nimport os\n",
                      "markdown": "`a demo for simple prompt-munging\n\nUsage:\nrlwrap -z ./count_in_prompt.py telnet\n\"\"\"\n\nimport sys\nimport os\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/count_in_prompt.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 6,
                  "endLine": 7,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\"\"\"\na demo for simple prompt-munging\n\nUsage:\nrlwrap -z ./count_in_prompt.py telnet\n\"\"\"\n\nimport sys\n",
                    "rendered": {
                      "text": "\"\"\"\na demo for simple prompt-munging\n\nUsage:\nrlwrap -z ./count_in_prompt.py telnet\n\"\"\"\n\nimport sys\n",
                      "markdown": "`\"\"\"\na demo for simple prompt-munging\n\nUsage:\nrlwrap -z ./count_in_prompt.py telnet\n\"\"\"\n\nimport sys\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/completions/coqtop"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 10,
                  "endLine": 297,
                  "snippet": {
                    "text": "as\nassert\nassoc\nassumption\nat\nauto\nautorewrite\nbool_congr\nby\n",
                    "rendered": {
                      "text": "as\nassert\nassoc\nassumption\nat\nauto\nautorewrite\nbool_congr\nby\n",
                      "markdown": "`as\nassert\nassoc\nassumption\nat\nauto\nautorewrite\nbool_congr\nby\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/completions/coqtop"
                },
                "region": {
                  "startLine": 424,
                  "startColumn": 6,
                  "endLine": 426,
                  "snippet": {
                    "text": "psatz\nquote\nrapply\nrecord\nred\nrefine\nreflexivity\nremember\nrename\n",
                    "rendered": {
                      "text": "psatz\nquote\nrapply\nrecord\nred\nrefine\nreflexivity\nremember\nrename\n",
                      "markdown": "`psatz\nquote\nrapply\nrecord\nred\nrefine\nreflexivity\nremember\nrename\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/completions/coqtop"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 13,
                  "endLine": 319,
                  "snippet": {
                    "text": "congruence\nconstructor\ncontradict\ncontradiction\ncut\ncutrewrite\ndecide\ndecide_left\ndecide_right\n",
                    "rendered": {
                      "text": "congruence\nconstructor\ncontradict\ncontradiction\ncut\ncutrewrite\ndecide\ndecide_left\ndecide_right\n",
                      "markdown": "`congruence\nconstructor\ncontradict\ncontradiction\ncut\ncutrewrite\ndecide\ndecide_left\ndecide_right\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/completions/coqtop"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 7,
                  "endLine": 252,
                  "snippet": {
                    "text": "Tags\nTerm\nTest\nTheorem\nTimeout\nToSet\nToUnset\nTransparent\nTrivial\n",
                    "rendered": {
                      "text": "Tags\nTerm\nTest\nTheorem\nTimeout\nToSet\nToUnset\nTransparent\nTrivial\n",
                      "markdown": "`Tags\nTerm\nTest\nTheorem\nTimeout\nToSet\nToUnset\nTransparent\nTrivial\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/pipeto"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endLine": 6,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# This is maybe the most practical of the filter examples. Is is also\n# a test for rlwrap's signal handling.\n#\n# At present, a CTRL-C in a pager will also kill rlwrap (bad)\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\n",
                    "rendered": {
                      "text": "# This is maybe the most practical of the filter examples. Is is also\n# a test for rlwrap's signal handling.\n#\n# At present, a CTRL-C in a pager will also kill rlwrap (bad)\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\n",
                      "markdown": "`# This is maybe the most practical of the filter examples. Is is also\n# a test for rlwrap's signal handling.\n#\n# At present, a CTRL-C in a pager will also kill rlwrap (bad)\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/pipeto"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 6,
                  "endLine": 35,
                  "endColumn": 14,
                  "snippet": {
                    "text": "my $name = $filter -> name;\n\n$filter -> help_text(<<DOC);\nUsage: rlwrap -z $name <command>\nAllow piping of <command>'s interactive output through pagers or other shell commands.\n\nWhen input of the form \"<cmd> | <shell pipeline>\" is seen, <cmd> is\n",
                    "rendered": {
                      "text": "my $name = $filter -> name;\n\n$filter -> help_text(<<DOC);\nUsage: rlwrap -z $name <command>\nAllow piping of <command>'s interactive output through pagers or other shell commands.\n\nWhen input of the form \"<cmd> | <shell pipeline>\" is seen, <cmd> is\n",
                      "markdown": "`my $name = $filter -> name;\n\n$filter -> help_text(<<DOC);\nUsage: rlwrap -z $name <command>\nAllow piping of <command>'s interactive output through pagers or other shell commands.\n\nWhen input of the form \"<cmd> | <shell pipeline>\" is seen, <cmd> is\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/pipeto"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 36,
                  "endLine": 17,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n# We want any piped pager to receive SIGWINCH.\n# SIGWINCH is not in POSIX, which means that POSIX.pm doesn't\n# know about it. We use 'kill -l' to find it.\n\nmy $raw_input;\n\n",
                    "rendered": {
                      "text": "\n# We want any piped pager to receive SIGWINCH.\n# SIGWINCH is not in POSIX, which means that POSIX.pm doesn't\n# know about it. We use 'kill -l' to find it.\n\nmy $raw_input;\n\n",
                      "markdown": "`\n# We want any piped pager to receive SIGWINCH.\n# SIGWINCH is not in POSIX, which means that POSIX.pm doesn't\n# know about it. We use 'kill -l' to find it.\n\nmy $raw_input;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/pipeto"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 48,
                  "endLine": 6,
                  "endColumn": 56,
                  "snippet": {
                    "text": "# This is maybe the most practical of the filter examples. Is is also\n# a test for rlwrap's signal handling.\n#\n# At present, a CTRL-C in a pager will also kill rlwrap (bad)\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\n",
                    "rendered": {
                      "text": "# This is maybe the most practical of the filter examples. Is is also\n# a test for rlwrap's signal handling.\n#\n# At present, a CTRL-C in a pager will also kill rlwrap (bad)\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\n",
                      "markdown": "`# This is maybe the most practical of the filter examples. Is is also\n# a test for rlwrap's signal handling.\n#\n# At present, a CTRL-C in a pager will also kill rlwrap (bad)\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/pipeto"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\n# This is maybe the most practical of the filter examples. Is is also\n# a test for rlwrap's signal handling.\n#\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\n# This is maybe the most practical of the filter examples. Is is also\n# a test for rlwrap's signal handling.\n#\n",
                      "markdown": "`#!/usr/bin/env perl\n\n# This is maybe the most practical of the filter examples. Is is also\n# a test for rlwrap's signal handling.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/pipeline"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 70,
                  "endLine": 180,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Usage: rlwrap [-options] -z '$myself filter_1:filter_2:..., filter_n' <command>\ncombines the effects of 2 or more filters\nmessages will be passed through filter_1, ..., filter_n.\nUse a backslash to pass a ':' that is not meant as a pipe symbol, e.g:\nrlwrap -z '$myself prompt hello\\\\: : logger out' command\nEOF\n}\n\n",
                    "rendered": {
                      "text": "Usage: rlwrap [-options] -z '$myself filter_1:filter_2:..., filter_n' <command>\ncombines the effects of 2 or more filters\nmessages will be passed through filter_1, ..., filter_n.\nUse a backslash to pass a ':' that is not meant as a pipe symbol, e.g:\nrlwrap -z '$myself prompt hello\\\\: : logger out' command\nEOF\n}\n\n",
                      "markdown": "`Usage: rlwrap [-options] -z '$myself filter_1:filter_2:..., filter_n' <command>\ncombines the effects of 2 or more filters\nmessages will be passed through filter_1, ..., filter_n.\nUse a backslash to pass a ':' that is not meant as a pipe symbol, e.g:\nrlwrap -z '$myself prompt hello\\\\: : logger out' command\nEOF\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/pipeline"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 6,
                  "endLine": 176,
                  "endColumn": 14,
                  "snippet": {
                    "text": "  $myself ||= $0;\n\n  return <<EOF;\nUsage: rlwrap [-options] -z '$myself filter_1:filter_2:..., filter_n' <command>\ncombines the effects of 2 or more filters\nmessages will be passed through filter_1, ..., filter_n.\nUse a backslash to pass a ':' that is not meant as a pipe symbol, e.g:\n",
                    "rendered": {
                      "text": "  $myself ||= $0;\n\n  return <<EOF;\nUsage: rlwrap [-options] -z '$myself filter_1:filter_2:..., filter_n' <command>\ncombines the effects of 2 or more filters\nmessages will be passed through filter_1, ..., filter_n.\nUse a backslash to pass a ':' that is not meant as a pipe symbol, e.g:\n",
                      "markdown": "`  $myself ||= $0;\n\n  return <<EOF;\nUsage: rlwrap [-options] -z '$myself filter_1:filter_2:..., filter_n' <command>\ncombines the effects of 2 or more filters\nmessages will be passed through filter_1, ..., filter_n.\nUse a backslash to pass a ':' that is not meant as a pipe symbol, e.g:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/pipeline"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 17,
                  "endLine": 80,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    }\n    alarm 0;\n  };\n  last if ($@); # timeout or strange error\n  delete $pids{\"$deadpid\"}; # cross $pid from list of living\n}\n\n",
                    "rendered": {
                      "text": "    }\n    alarm 0;\n  };\n  last if ($@); # timeout or strange error\n  delete $pids{\"$deadpid\"}; # cross $pid from list of living\n}\n\n",
                      "markdown": "`    }\n    alarm 0;\n  };\n  last if ($@); # timeout or strange error\n  delete $pids{\"$deadpid\"}; # cross $pid from list of living\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/pipeline"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\n# This is a rather complicated filter to build pipelines from other filters. It is\n# also useful to test signal and filter death handling by rlwrap.\n\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\n# This is a rather complicated filter to build pipelines from other filters. It is\n# also useful to test signal and filter death handling by rlwrap.\n\n",
                      "markdown": "`#!/usr/bin/env perl\n\n# This is a rather complicated filter to build pipelines from other filters. It is\n# also useful to test signal and filter death handling by rlwrap.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/history_format"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 3,
                  "endLine": 39,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n\n\nsub expand {\n  my ($format) = @_;\n  my $expanded = POSIX::strftime($format, localtime(time));\n  my $pwd = eval {$filter -> cwd};\n",
                    "rendered": {
                      "text": "\n\n\nsub expand {\n  my ($format) = @_;\n  my $expanded = POSIX::strftime($format, localtime(time));\n  my $pwd = eval {$filter -> cwd};\n",
                      "markdown": "`\n\n\nsub expand {\n  my ($format) = @_;\n  my $expanded = POSIX::strftime($format, localtime(time));\n  my $pwd = eval {$filter -> cwd};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/history_format"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 3,
                  "endLine": 39,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n\n\nsub expand {\n  my ($format) = @_;\n  my $expanded = POSIX::strftime($format, localtime(time));\n  my $pwd = eval {$filter -> cwd};\n",
                    "rendered": {
                      "text": "\n\n\nsub expand {\n  my ($format) = @_;\n  my $expanded = POSIX::strftime($format, localtime(time));\n  my $pwd = eval {$filter -> cwd};\n",
                      "markdown": "`\n\n\nsub expand {\n  my ($format) = @_;\n  my $expanded = POSIX::strftime($format, localtime(time));\n  my $pwd = eval {$filter -> cwd};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/history_format"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 28,
                  "endLine": 24,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\n\n$filter -> help_text(\"Usage: rlwrap -z '$name <format>' <command>\\n\".\n\t\t     \"Append <format> to every history item, and strip it off again when input is accepted\\n\" .\n                     \"escape codes in <format> will be replaced: %D by the current working directory,\\n\" .\n                     \"%P by the current prompt and %C by the command name, and all the remaining escape codes\\n\" .\n",
                    "rendered": {
                      "text": "\n\n\n$filter -> help_text(\"Usage: rlwrap -z '$name <format>' <command>\\n\".\n\t\t     \"Append <format> to every history item, and strip it off again when input is accepted\\n\" .\n                     \"escape codes in <format> will be replaced: %D by the current working directory,\\n\" .\n                     \"%P by the current prompt and %C by the command name, and all the remaining escape codes\\n\" .\n",
                      "markdown": "`\n\n\n$filter -> help_text(\"Usage: rlwrap -z '$name <format>' <command>\\n\".\n\t\t     \"Append <format> to every history item, and strip it off again when input is accepted\\n\" .\n                     \"escape codes in <format> will be replaced: %D by the current working directory,\\n\" .\n                     \"%P by the current prompt and %C by the command name, and all the remaining escape codes\\n\" .\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/history_format"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 59,
                  "endLine": 5,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n# filter to implement the old -F (--history-format) option, which was badly implemented and never\n# used anyway. The simplicity of this script shows the usefulness of the filter concept. \n# As a bonus, it is much easier to modify than the original rlwrap source code\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\n",
                    "rendered": {
                      "text": "\n# filter to implement the old -F (--history-format) option, which was badly implemented and never\n# used anyway. The simplicity of this script shows the usefulness of the filter concept. \n# As a bonus, it is much easier to modify than the original rlwrap source code\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\n",
                      "markdown": "`\n# filter to implement the old -F (--history-format) option, which was badly implemented and never\n# used anyway. The simplicity of this script shows the usefulness of the filter concept. \n# As a bonus, it is much easier to modify than the original rlwrap source code\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/history_format"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 37,
                  "endLine": 4,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\n# filter to implement the old -F (--history-format) option, which was badly implemented and never\n# used anyway. The simplicity of this script shows the usefulness of the filter concept. \n# As a bonus, it is much easier to modify than the original rlwrap source code\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\n# filter to implement the old -F (--history-format) option, which was badly implemented and never\n# used anyway. The simplicity of this script shows the usefulness of the filter concept. \n# As a bonus, it is much easier to modify than the original rlwrap source code\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\n",
                      "markdown": "`#!/usr/bin/env perl\n\n# filter to implement the old -F (--history-format) option, which was badly implemented and never\n# used anyway. The simplicity of this script shows the usefulness of the filter concept. \n# As a bonus, it is much easier to modify than the original rlwrap source code\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/history_format"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\n# filter to implement the old -F (--history-format) option, which was badly implemented and never\n# used anyway. The simplicity of this script shows the usefulness of the filter concept. \n# As a bonus, it is much easier to modify than the original rlwrap source code\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\n# filter to implement the old -F (--history-format) option, which was badly implemented and never\n# used anyway. The simplicity of this script shows the usefulness of the filter concept. \n# As a bonus, it is much easier to modify than the original rlwrap source code\n",
                      "markdown": "`#!/usr/bin/env perl\n\n# filter to implement the old -F (--history-format) option, which was badly implemented and never\n# used anyway. The simplicity of this script shows the usefulness of the filter concept. \n# As a bonus, it is much easier to modify than the original rlwrap source code\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 35,
                  "endLine": 111,
                  "endColumn": 39,
                  "snippet": {
                    "text": "  my($line, $prefix, @completions) =@_;\n\n  my $nwords = scalar split /\\s+/, $line;\n  $nwords++ unless $prefix;   # TAB at start of a new (empty) argument\n  if ($nwords <= 1) {\n    push @completions, grep /^$prefix/, @ftp_commands;\n    return @completions;\n",
                    "rendered": {
                      "text": "  my($line, $prefix, @completions) =@_;\n\n  my $nwords = scalar split /\\s+/, $line;\n  $nwords++ unless $prefix;   # TAB at start of a new (empty) argument\n  if ($nwords <= 1) {\n    push @completions, grep /^$prefix/, @ftp_commands;\n    return @completions;\n",
                      "markdown": "`  my($line, $prefix, @completions) =@_;\n\n  my $nwords = scalar split /\\s+/, $line;\n  $nwords++ unless $prefix;   # TAB at start of a new (empty) argument\n  if ($nwords <= 1) {\n    push @completions, grep /^$prefix/, @ftp_commands;\n    return @completions;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 24,
                  "endLine": 32,
                  "endColumn": 29,
                  "snippet": {
                    "text": "my ($local_dir_filename_column, $remote_dir_filename_column);\n\n$filter -> help_text(\"usage: rlwrap [-aword:] -z ftp_filter ftp\\n\" .\n\t\t     \"run plain Netkit ftp with completion for commands, local and remote files\\n\" .\n\t\t     \"(demo filter to show the use of the cloak_and_dagger method)\");  \n$filter -> prompt_handler(\\&prompt);\n$filter -> completion_handler(\\&complete);\n",
                    "rendered": {
                      "text": "my ($local_dir_filename_column, $remote_dir_filename_column);\n\n$filter -> help_text(\"usage: rlwrap [-aword:] -z ftp_filter ftp\\n\" .\n\t\t     \"run plain Netkit ftp with completion for commands, local and remote files\\n\" .\n\t\t     \"(demo filter to show the use of the cloak_and_dagger method)\");  \n$filter -> prompt_handler(\\&prompt);\n$filter -> completion_handler(\\&complete);\n",
                      "markdown": "`my ($local_dir_filename_column, $remote_dir_filename_column);\n\n$filter -> help_text(\"usage: rlwrap [-aword:] -z ftp_filter ftp\\n\" .\n\t\t     \"run plain Netkit ftp with completion for commands, local and remote files\\n\" .\n\t\t     \"(demo filter to show the use of the cloak_and_dagger method)\");  \n$filter -> prompt_handler(\\&prompt);\n$filter -> completion_handler(\\&complete);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 28,
                  "snippet": {
                    "text": "# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n#   - finding the legal ftp commands\n#   - completing (local or remote) filenames and directories\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\n",
                    "rendered": {
                      "text": "# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n#   - finding the legal ftp commands\n#   - completing (local or remote) filenames and directories\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\n",
                      "markdown": "`# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n#   - finding the legal ftp commands\n#   - completing (local or remote) filenames and directories\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 22,
                  "endLine": 126,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    my @candidates = listing($dir,\n\t\t\t     $completion_types{$command}->[2*$narg],\n\t\t\t     $completion_types{$command}->[2*$narg+1]);\n    push @completions, grep /^$name_prefix/, @candidates;\n    return @completions;\n  }\n  return @completions;\n",
                    "rendered": {
                      "text": "    my @candidates = listing($dir,\n\t\t\t     $completion_types{$command}->[2*$narg],\n\t\t\t     $completion_types{$command}->[2*$narg+1]);\n    push @completions, grep /^$name_prefix/, @candidates;\n    return @completions;\n  }\n  return @completions;\n",
                      "markdown": "`    my @candidates = listing($dir,\n\t\t\t     $completion_types{$command}->[2*$narg],\n\t\t\t     $completion_types{$command}->[2*$narg+1]);\n    push @completions, grep /^$name_prefix/, @candidates;\n    return @completions;\n  }\n  return @completions;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 22,
                  "endLine": 113,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  my $nwords = scalar split /\\s+/, $line;\n  $nwords++ unless $prefix;   # TAB at start of a new (empty) argument\n  if ($nwords <= 1) {\n    push @completions, grep /^$prefix/, @ftp_commands;\n    return @completions;\n  }\n  \n",
                    "rendered": {
                      "text": "  my $nwords = scalar split /\\s+/, $line;\n  $nwords++ unless $prefix;   # TAB at start of a new (empty) argument\n  if ($nwords <= 1) {\n    push @completions, grep /^$prefix/, @ftp_commands;\n    return @completions;\n  }\n  \n",
                      "markdown": "`  my $nwords = scalar split /\\s+/, $line;\n  $nwords++ unless $prefix;   # TAB at start of a new (empty) argument\n  if ($nwords <= 1) {\n    push @completions, grep /^$prefix/, @ftp_commands;\n    return @completions;\n  }\n  \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 17,
                  "endLine": 103,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nsub commands {\n  my $help_text = $filter -> cloak_and_dagger(\"help\", $ftp_prompt, 0.5);\n  @ftp_commands = grep /^[a-z]\\w/, (split /\\s+/, $help_text);\n  $at_first_prompt = 0;\n}\n\n",
                    "rendered": {
                      "text": "\nsub commands {\n  my $help_text = $filter -> cloak_and_dagger(\"help\", $ftp_prompt, 0.5);\n  @ftp_commands = grep /^[a-z]\\w/, (split /\\s+/, $help_text);\n  $at_first_prompt = 0;\n}\n\n",
                      "markdown": "`\nsub commands {\n  my $help_text = $filter -> cloak_and_dagger(\"help\", $ftp_prompt, 0.5);\n  @ftp_commands = grep /^[a-z]\\w/, (split /\\s+/, $help_text);\n  $at_first_prompt = 0;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 10,
                  "endLine": 66,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      die \"couldn't determine filename column of $where listing\\n\" unless defined $$colnoref;\n  }\n  my $pattern = ($what eq \"directories\" ? \"^d\" : \"^-\");\n  @lines = grep /$pattern/, @lines if $$colnoref > 0; # makes only sense if there is a column with drwxr-xr-x\n  my @results = map {(split /\\s+/, $_)[$$colnoref] } @lines;    \n  return @results;\n}\n",
                    "rendered": {
                      "text": "      die \"couldn't determine filename column of $where listing\\n\" unless defined $$colnoref;\n  }\n  my $pattern = ($what eq \"directories\" ? \"^d\" : \"^-\");\n  @lines = grep /$pattern/, @lines if $$colnoref > 0; # makes only sense if there is a column with drwxr-xr-x\n  my @results = map {(split /\\s+/, $_)[$$colnoref] } @lines;    \n  return @results;\n}\n",
                      "markdown": "`      die \"couldn't determine filename column of $where listing\\n\" unless defined $$colnoref;\n  }\n  my $pattern = ($what eq \"directories\" ? \"^d\" : \"^-\");\n  @lines = grep /$pattern/, @lines if $$colnoref > 0; # makes only sense if there is a column with drwxr-xr-x\n  my @results = map {(split /\\s+/, $_)[$$colnoref] } @lines;    \n  return @results;\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 25,
                  "endLine": 53,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  my $command = ($where eq \"local\" ? \"!ls -la $dir|cat\" : \"ls $dir\");\n  my @lines = split /\\r?\\n/, $filter -> cloak_and_dagger($command, $ftp_prompt, 2);\n  my $colnoref = ($where eq \"local\" ? \\$local_dir_filename_column : \\$remote_dir_filename_column);\n  if (not $$colnoref) { # find out which column of listing has the filename\n      my $dotdotline = (grep /\\.\\./, @lines)[0]; # .. should always be there \n      #print STDERR $dotdotline;\n      my @fields = split /\\s+/, $dotdotline;\n",
                    "rendered": {
                      "text": "  my $command = ($where eq \"local\" ? \"!ls -la $dir|cat\" : \"ls $dir\");\n  my @lines = split /\\r?\\n/, $filter -> cloak_and_dagger($command, $ftp_prompt, 2);\n  my $colnoref = ($where eq \"local\" ? \\$local_dir_filename_column : \\$remote_dir_filename_column);\n  if (not $$colnoref) { # find out which column of listing has the filename\n      my $dotdotline = (grep /\\.\\./, @lines)[0]; # .. should always be there \n      #print STDERR $dotdotline;\n      my @fields = split /\\s+/, $dotdotline;\n",
                      "markdown": "`  my $command = ($where eq \"local\" ? \"!ls -la $dir|cat\" : \"ls $dir\");\n  my @lines = split /\\r?\\n/, $filter -> cloak_and_dagger($command, $ftp_prompt, 2);\n  my $colnoref = ($where eq \"local\" ? \\$local_dir_filename_column : \\$remote_dir_filename_column);\n  if (not $$colnoref) { # find out which column of listing has the filename\n      my $dotdotline = (grep /\\.\\./, @lines)[0]; # .. should always be there \n      #print STDERR $dotdotline;\n      my @fields = split /\\s+/, $dotdotline;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 24,
                  "endLine": 32,
                  "endColumn": 29,
                  "snippet": {
                    "text": "my ($local_dir_filename_column, $remote_dir_filename_column);\n\n$filter -> help_text(\"usage: rlwrap [-aword:] -z ftp_filter ftp\\n\" .\n\t\t     \"run plain Netkit ftp with completion for commands, local and remote files\\n\" .\n\t\t     \"(demo filter to show the use of the cloak_and_dagger method)\");  \n$filter -> prompt_handler(\\&prompt);\n$filter -> completion_handler(\\&complete);\n",
                    "rendered": {
                      "text": "my ($local_dir_filename_column, $remote_dir_filename_column);\n\n$filter -> help_text(\"usage: rlwrap [-aword:] -z ftp_filter ftp\\n\" .\n\t\t     \"run plain Netkit ftp with completion for commands, local and remote files\\n\" .\n\t\t     \"(demo filter to show the use of the cloak_and_dagger method)\");  \n$filter -> prompt_handler(\\&prompt);\n$filter -> completion_handler(\\&complete);\n",
                      "markdown": "`my ($local_dir_filename_column, $remote_dir_filename_column);\n\n$filter -> help_text(\"usage: rlwrap [-aword:] -z ftp_filter ftp\\n\" .\n\t\t     \"run plain Netkit ftp with completion for commands, local and remote files\\n\" .\n\t\t     \"(demo filter to show the use of the cloak_and_dagger method)\");  \n$filter -> prompt_handler(\\&prompt);\n$filter -> completion_handler(\\&complete);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 28,
                  "endLine": 31,
                  "endColumn": 36,
                  "snippet": {
                    "text": "my $filter = new RlwrapFilter;\nmy ($local_dir_filename_column, $remote_dir_filename_column);\n\n$filter -> help_text(\"usage: rlwrap [-aword:] -z ftp_filter ftp\\n\" .\n\t\t     \"run plain Netkit ftp with completion for commands, local and remote files\\n\" .\n\t\t     \"(demo filter to show the use of the cloak_and_dagger method)\");  \n$filter -> prompt_handler(\\&prompt);\n",
                    "rendered": {
                      "text": "my $filter = new RlwrapFilter;\nmy ($local_dir_filename_column, $remote_dir_filename_column);\n\n$filter -> help_text(\"usage: rlwrap [-aword:] -z ftp_filter ftp\\n\" .\n\t\t     \"run plain Netkit ftp with completion for commands, local and remote files\\n\" .\n\t\t     \"(demo filter to show the use of the cloak_and_dagger method)\");  \n$filter -> prompt_handler(\\&prompt);\n",
                      "markdown": "`my $filter = new RlwrapFilter;\nmy ($local_dir_filename_column, $remote_dir_filename_column);\n\n$filter -> help_text(\"usage: rlwrap [-aword:] -z ftp_filter ftp\\n\" .\n\t\t     \"run plain Netkit ftp with completion for commands, local and remote files\\n\" .\n\t\t     \"(demo filter to show the use of the cloak_and_dagger method)\");  \n$filter -> prompt_handler(\\&prompt);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 28,
                  "snippet": {
                    "text": "# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n#   - finding the legal ftp commands\n#   - completing (local or remote) filenames and directories\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\n",
                    "rendered": {
                      "text": "# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n#   - finding the legal ftp commands\n#   - completing (local or remote) filenames and directories\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\n",
                      "markdown": "`# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n#   - finding the legal ftp commands\n#   - completing (local or remote) filenames and directories\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/ftp_filter"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\n# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\n# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n",
                      "markdown": "`#!/usr/bin/env perl\n\n# this filter demonstrates a (rather whacky and extreme) use of 'cloak_and_dagger'\n# cloak_and_dagger is used for\n#   - finding the working directories (local and remote)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/count_in_prompt"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 28,
                  "endLine": 13,
                  "endColumn": 36,
                  "snippet": {
                    "text": "my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z $name <command>\\n\".\n\t\t     \"replace prompt by simple counter\\n\".\n\t\t     \"(demonstrates some simple prompt-munging techniques)\");\n\n",
                    "rendered": {
                      "text": "my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z $name <command>\\n\".\n\t\t     \"replace prompt by simple counter\\n\".\n\t\t     \"(demonstrates some simple prompt-munging techniques)\");\n\n",
                      "markdown": "`my $filter = new RlwrapFilter;\nmy $name = $filter -> name;\n\n$filter -> help_text(\"Usage: rlwrap -z $name <command>\\n\".\n\t\t     \"replace prompt by simple counter\\n\".\n\t\t     \"(demonstrates some simple prompt-munging techniques)\");\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/count_in_prompt"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                      "markdown": "`#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 48,
                  "endLine": 11,
                  "endColumn": 56,
                  "snippet": {
                    "text": "my $filter = new RlwrapFilter;\n\n$filter -> help_text(\"rlwrap -H history -z censor_passwords sqlplus scott\\@<hostname>:1521/ORCL\\n\"\n                     . \"This filter removes the password from SQL 'identified by' clauses\\n\");\n\n$filter -> history_handler(sub { s/(identified\\s+by\\s+)(\\S+)/$1xXxXxXxX/ig; $_});\n\n",
                    "rendered": {
                      "text": "my $filter = new RlwrapFilter;\n\n$filter -> help_text(\"rlwrap -H history -z censor_passwords sqlplus scott\\@<hostname>:1521/ORCL\\n\"\n                     . \"This filter removes the password from SQL 'identified by' clauses\\n\");\n\n$filter -> history_handler(sub { s/(identified\\s+by\\s+)(\\S+)/$1xXxXxXxX/ig; $_});\n\n",
                      "markdown": "`my $filter = new RlwrapFilter;\n\n$filter -> help_text(\"rlwrap -H history -z censor_passwords sqlplus scott\\@<hostname>:1521/ORCL\\n\"\n                     . \"This filter removes the password from SQL 'identified by' clauses\\n\");\n\n$filter -> history_handler(sub { s/(identified\\s+by\\s+)(\\S+)/$1xXxXxXxX/ig; $_});\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 50,
                  "endLine": 10,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\nmy $filter = new RlwrapFilter;\n\n$filter -> help_text(\"rlwrap -H history -z censor_passwords sqlplus scott\\@<hostname>:1521/ORCL\\n\"\n                     . \"This filter removes the password from SQL 'identified by' clauses\\n\");\n\n$filter -> history_handler(sub { s/(identified\\s+by\\s+)(\\S+)/$1xXxXxXxX/ig; $_});\n",
                    "rendered": {
                      "text": "\nmy $filter = new RlwrapFilter;\n\n$filter -> help_text(\"rlwrap -H history -z censor_passwords sqlplus scott\\@<hostname>:1521/ORCL\\n\"\n                     . \"This filter removes the password from SQL 'identified by' clauses\\n\");\n\n$filter -> history_handler(sub { s/(identified\\s+by\\s+)(\\S+)/$1xXxXxXxX/ig; $_});\n",
                      "markdown": "`\nmy $filter = new RlwrapFilter;\n\n$filter -> help_text(\"rlwrap -H history -z censor_passwords sqlplus scott\\@<hostname>:1521/ORCL\\n\"\n                     . \"This filter removes the password from SQL 'identified by' clauses\\n\");\n\n$filter -> history_handler(sub { s/(identified\\s+by\\s+)(\\S+)/$1xXxXxXxX/ig; $_});\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 76,
                  "endLine": 10,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\nmy $filter = new RlwrapFilter;\n\n$filter -> help_text(\"rlwrap -H history -z censor_passwords sqlplus scott\\@<hostname>:1521/ORCL\\n\"\n                     . \"This filter removes the password from SQL 'identified by' clauses\\n\");\n\n$filter -> history_handler(sub { s/(identified\\s+by\\s+)(\\S+)/$1xXxXxXxX/ig; $_});\n",
                    "rendered": {
                      "text": "\nmy $filter = new RlwrapFilter;\n\n$filter -> help_text(\"rlwrap -H history -z censor_passwords sqlplus scott\\@<hostname>:1521/ORCL\\n\"\n                     . \"This filter removes the password from SQL 'identified by' clauses\\n\");\n\n$filter -> history_handler(sub { s/(identified\\s+by\\s+)(\\S+)/$1xXxXxXxX/ig; $_});\n",
                      "markdown": "`\nmy $filter = new RlwrapFilter;\n\n$filter -> help_text(\"rlwrap -H history -z censor_passwords sqlplus scott\\@<hostname>:1521/ORCL\\n\"\n                     . \"This filter removes the password from SQL 'identified by' clauses\\n\");\n\n$filter -> history_handler(sub { s/(identified\\s+by\\s+)(\\S+)/$1xXxXxXxX/ig; $_});\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/rlwrap-0.46.1-r0.apk/rlwrap-0.46.1-r0/usr/share/rlwrap/filters/censor_passwords"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n",
                      "markdown": "`#!/usr/bin/env perl\n\nuse lib ($ENV{RLWRAP_FILTERDIR} or \".\");\nuse RlwrapFilter;\nuse strict;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}