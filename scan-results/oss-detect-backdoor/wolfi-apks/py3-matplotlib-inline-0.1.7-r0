{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-matplotlib-inline-0.1.7-r0.apk/py3-matplotlib-inline-0.1.7-r0/usr/lib/python3.12/site-packages/matplotlib_inline-0.1.7.dist-info/METADATA"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 7,
                  "endLine": 75,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nWith pip:\n\n```bash\npip install matplotlib-inline\n```\n\n## Usage\n",
                    "rendered": {
                      "text": "\nWith pip:\n\n```bash\npip install matplotlib-inline\n```\n\n## Usage\n",
                      "markdown": "`\nWith pip:\n\n```bash\npip install matplotlib-inline\n```\n\n## Usage\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-matplotlib-inline-0.1.7-r0.apk/py3-matplotlib-inline-0.1.7-r0/usr/lib/python3.12/site-packages/matplotlib_inline/config.py"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 33,
                  "endLine": 83,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n    close_figures = Bool(\n        True,\n        help=\"\"\"Close all figures at the end of each cell.\n\n        When True, ensures that each cell starts with no active figures, but it\n        also means that one must keep track of references in order to edit or\n",
                    "rendered": {
                      "text": "\n    close_figures = Bool(\n        True,\n        help=\"\"\"Close all figures at the end of each cell.\n\n        When True, ensures that each cell starts with no active figures, but it\n        also means that one must keep track of references in order to edit or\n",
                      "markdown": "`\n    close_figures = Bool(\n        True,\n        help=\"\"\"Close all figures at the end of each cell.\n\n        When True, ensures that each cell starts with no active figures, but it\n        also means that one must keep track of references in order to edit or\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-matplotlib-inline-0.1.7-r0.apk/py3-matplotlib-inline-0.1.7-r0/usr/lib/python3.12/site-packages/matplotlib_inline/backend_inline.py"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 6,
                  "endLine": 214,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    from matplotlib import get_backend\n    ip = get_ipython()\n    backend = get_backend()\n    if ip and backend in ('inline', 'module://matplotlib_inline.backend_inline'):\n        from IPython.core.pylabtools import activate_matplotlib\n        try:\n            activate_matplotlib(backend)\n",
                    "rendered": {
                      "text": "    from matplotlib import get_backend\n    ip = get_ipython()\n    backend = get_backend()\n    if ip and backend in ('inline', 'module://matplotlib_inline.backend_inline'):\n        from IPython.core.pylabtools import activate_matplotlib\n        try:\n            activate_matplotlib(backend)\n",
                      "markdown": "`    from matplotlib import get_backend\n    ip = get_ipython()\n    backend = get_backend()\n    if ip and backend in ('inline', 'module://matplotlib_inline.backend_inline'):\n        from IPython.core.pylabtools import activate_matplotlib\n        try:\n            activate_matplotlib(backend)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-matplotlib-inline-0.1.7-r0.apk/py3-matplotlib-inline-0.1.7-r0/usr/lib/python3.12/site-packages/matplotlib_inline/backend_inline.py"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 3,
                  "endLine": 212,
                  "endColumn": 7,
                  "snippet": {
                    "text": "def _enable_matplotlib_integration():\n    \"\"\"Enable extra IPython matplotlib integration when we are loaded as the matplotlib backend.\"\"\"\n    from matplotlib import get_backend\n    ip = get_ipython()\n    backend = get_backend()\n    if ip and backend in ('inline', 'module://matplotlib_inline.backend_inline'):\n        from IPython.core.pylabtools import activate_matplotlib\n",
                    "rendered": {
                      "text": "def _enable_matplotlib_integration():\n    \"\"\"Enable extra IPython matplotlib integration when we are loaded as the matplotlib backend.\"\"\"\n    from matplotlib import get_backend\n    ip = get_ipython()\n    backend = get_backend()\n    if ip and backend in ('inline', 'module://matplotlib_inline.backend_inline'):\n        from IPython.core.pylabtools import activate_matplotlib\n",
                      "markdown": "`def _enable_matplotlib_integration():\n    \"\"\"Enable extra IPython matplotlib integration when we are loaded as the matplotlib backend.\"\"\"\n    from matplotlib import get_backend\n    ip = get_ipython()\n    backend = get_backend()\n    if ip and backend in ('inline', 'module://matplotlib_inline.backend_inline'):\n        from IPython.core.pylabtools import activate_matplotlib\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-matplotlib-inline-0.1.7-r0.apk/py3-matplotlib-inline-0.1.7-r0/usr/lib/python3.12/site-packages/matplotlib_inline/backend_inline.py"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 18,
                  "endLine": 144,
                  "endColumn": 22,
                  "snippet": {
                    "text": "            except Exception as e:\n                # safely show traceback if in IPython, else raise\n                ip = get_ipython()\n                if ip is None:\n                    raise e\n                else:\n                    ip.showtraceback()\n",
                    "rendered": {
                      "text": "            except Exception as e:\n                # safely show traceback if in IPython, else raise\n                ip = get_ipython()\n                if ip is None:\n                    raise e\n                else:\n                    ip.showtraceback()\n",
                      "markdown": "`            except Exception as e:\n                # safely show traceback if in IPython, else raise\n                ip = get_ipython()\n                if ip is None:\n                    raise e\n                else:\n                    ip.showtraceback()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-matplotlib-inline-0.1.7-r0.apk/py3-matplotlib-inline-0.1.7-r0/usr/lib/python3.12/site-packages/matplotlib_inline/backend_inline.py"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 19,
                  "snippet": {
                    "text": "                display(fig, metadata=_fetch_figure_metadata(fig))\n            except Exception as e:\n                # safely show traceback if in IPython, else raise\n                ip = get_ipython()\n                if ip is None:\n                    raise e\n                else:\n",
                    "rendered": {
                      "text": "                display(fig, metadata=_fetch_figure_metadata(fig))\n            except Exception as e:\n                # safely show traceback if in IPython, else raise\n                ip = get_ipython()\n                if ip is None:\n                    raise e\n                else:\n",
                      "markdown": "`                display(fig, metadata=_fetch_figure_metadata(fig))\n            except Exception as e:\n                # safely show traceback if in IPython, else raise\n                ip = get_ipython()\n                if ip is None:\n                    raise e\n                else:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-matplotlib-inline-0.1.7-r0.apk/py3-matplotlib-inline-0.1.7-r0/usr/lib/python3.12/site-packages/matplotlib_inline/backend_inline.py"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 18,
                  "endLine": 130,
                  "endColumn": 22,
                  "snippet": {
                    "text": "            except Exception as e:\n                # safely show traceback if in IPython, else raise\n                ip = get_ipython()\n                if ip is None:\n                    raise e\n                else:\n                    ip.showtraceback()\n",
                    "rendered": {
                      "text": "            except Exception as e:\n                # safely show traceback if in IPython, else raise\n                ip = get_ipython()\n                if ip is None:\n                    raise e\n                else:\n                    ip.showtraceback()\n",
                      "markdown": "`            except Exception as e:\n                # safely show traceback if in IPython, else raise\n                ip = get_ipython()\n                if ip is None:\n                    raise e\n                else:\n                    ip.showtraceback()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-matplotlib-inline-0.1.7-r0.apk/py3-matplotlib-inline-0.1.7-r0/usr/lib/python3.12/site-packages/matplotlib_inline/backend_inline.py"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 15,
                  "endLine": 129,
                  "endColumn": 19,
                  "snippet": {
                    "text": "                return show(True)\n            except Exception as e:\n                # safely show traceback if in IPython, else raise\n                ip = get_ipython()\n                if ip is None:\n                    raise e\n                else:\n",
                    "rendered": {
                      "text": "                return show(True)\n            except Exception as e:\n                # safely show traceback if in IPython, else raise\n                ip = get_ipython()\n                if ip is None:\n                    raise e\n                else:\n",
                      "markdown": "`                return show(True)\n            except Exception as e:\n                # safely show traceback if in IPython, else raise\n                ip = get_ipython()\n                if ip is None:\n                    raise e\n                else:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-matplotlib-inline-0.1.7-r0.apk/py3-matplotlib-inline-0.1.7-r0/usr/lib/python3.12/site-packages/matplotlib_inline/backend_inline.py"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 16,
                  "endLine": 41,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    # Hack: matplotlib FigureManager objects in interacive backends (at least\n    # in some of them) monkeypatch the figure object and add a .show() method\n    # to it.  This applies the same monkeypatch in order to support user code\n    # that might expect `.show()` to be part of the official API of figure\n    # objects.  For further reference:\n    # https://github.com/ipython/ipython/issues/1612\n    # https://github.com/matplotlib/matplotlib/issues/835\n",
                    "rendered": {
                      "text": "    # Hack: matplotlib FigureManager objects in interacive backends (at least\n    # in some of them) monkeypatch the figure object and add a .show() method\n    # to it.  This applies the same monkeypatch in order to support user code\n    # that might expect `.show()` to be part of the official API of figure\n    # objects.  For further reference:\n    # https://github.com/ipython/ipython/issues/1612\n    # https://github.com/matplotlib/matplotlib/issues/835\n",
                      "markdown": "`    # Hack: matplotlib FigureManager objects in interacive backends (at least\n    # in some of them) monkeypatch the figure object and add a .show() method\n    # to it.  This applies the same monkeypatch in order to support user code\n    # that might expect `.show()` to be part of the official API of figure\n    # objects.  For further reference:\n    # https://github.com/ipython/ipython/issues/1612\n    # https://github.com/matplotlib/matplotlib/issues/835\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}