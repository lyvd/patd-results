{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/PullParser.pm"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 11,
                  "endLine": 183,
                  "endColumn": 15,
                  "snippet": {
                    "text": "=item $token = $p->get_token\n\nThis method will return the next I<token> found in the HTML document,\nor C<undef> at the end of the document.  The token is returned as an\narray reference.  The content of this array match the argspec set up\nduring C<HTML::PullParser> construction.\n\n",
                    "rendered": {
                      "text": "=item $token = $p->get_token\n\nThis method will return the next I<token> found in the HTML document,\nor C<undef> at the end of the document.  The token is returned as an\narray reference.  The content of this array match the argspec set up\nduring C<HTML::PullParser> construction.\n\n",
                      "markdown": "`=item $token = $p->get_token\n\nThis method will return the next I<token> found in the HTML document,\nor C<undef> at the end of the document.  The token is returned as an\narray reference.  The content of this array match the argspec set up\nduring C<HTML::PullParser> construction.\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/PullParser.pm"
                },
                "region": {
                  "startLine": 174,
                  "endLine": 175,
                  "endColumn": 3,
                  "snippet": {
                    "text": "          start => '\"S\", tagname, @attr',\n          end   => '\"E\", tagname',\n        );\n\nAt last other C<HTML::Parser> options, like C<ignore_tags>, and\nC<unbroken_text>, can be passed in.  Note that you should not use the\nI<event>_h options to set up parser handlers.  That would confuse the\ninner logic of C<HTML::PullParser>.\n",
                    "rendered": {
                      "text": "          start => '\"S\", tagname, @attr',\n          end   => '\"E\", tagname',\n        );\n\nAt last other C<HTML::Parser> options, like C<ignore_tags>, and\nC<unbroken_text>, can be passed in.  Note that you should not use the\nI<event>_h options to set up parser handlers.  That would confuse the\ninner logic of C<HTML::PullParser>.\n",
                      "markdown": "`          start => '\"S\", tagname, @attr',\n          end   => '\"E\", tagname',\n        );\n\nAt last other C<HTML::Parser> options, like C<ignore_tags>, and\nC<unbroken_text>, can be passed in.  Note that you should not use the\nI<event>_h options to set up parser handlers.  That would confuse the\ninner logic of C<HTML::PullParser>.\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/PullParser.pm"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 52,
                  "endLine": 135,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\nThe HTML::PullParser is an alternative interface to the HTML::Parser class.\nIt basically turns the HTML::Parser inside out.  You associate a file\n(or any IO::Handle object or string) with the parser at construction time and\nthen repeatedly call $parser->get_token to obtain the tags and text\nfound in the parsed document.\n\n",
                    "rendered": {
                      "text": "\nThe HTML::PullParser is an alternative interface to the HTML::Parser class.\nIt basically turns the HTML::Parser inside out.  You associate a file\n(or any IO::Handle object or string) with the parser at construction time and\nthen repeatedly call $parser->get_token to obtain the tags and text\nfound in the parsed document.\n\n",
                      "markdown": "`\nThe HTML::PullParser is an alternative interface to the HTML::Parser class.\nIt basically turns the HTML::Parser inside out.  You associate a file\n(or any IO::Handle object or string) with the parser at construction time and\nthen repeatedly call $parser->get_token to obtain the tags and text\nfound in the parsed document.\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/PullParser.pm"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 55,
                  "endLine": 27,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n    my $file = delete $cnf{file};\n    my $doc  = delete $cnf{doc};\n    Carp::croak(\"Can't parse from both 'doc' and 'file' at the same time\")\n\t  if defined($file) && defined($doc);\n    Carp::croak(\"No 'doc' or 'file' given to parse from\")\n\t  unless defined($file) || defined($doc);\n",
                    "rendered": {
                      "text": "\n    my $file = delete $cnf{file};\n    my $doc  = delete $cnf{doc};\n    Carp::croak(\"Can't parse from both 'doc' and 'file' at the same time\")\n\t  if defined($file) && defined($doc);\n    Carp::croak(\"No 'doc' or 'file' given to parse from\")\n\t  unless defined($file) || defined($doc);\n",
                      "markdown": "`\n    my $file = delete $cnf{file};\n    my $doc  = delete $cnf{doc};\n    Carp::croak(\"Can't parse from both 'doc' and 'file' at the same time\")\n\t  if defined($file) && defined($doc);\n    Carp::croak(\"No 'doc' or 'file' given to parse from\")\n\t  unless defined($file) || defined($doc);\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/PullParser.pm"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 33,
                  "endLine": 208,
                  "endColumn": 39,
                  "snippet": {
                    "text": "Copyright 1998-2001 Gisle Aas.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n",
                    "rendered": {
                      "text": "Copyright 1998-2001 Gisle Aas.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n",
                      "markdown": "`Copyright 1998-2001 Gisle Aas.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/PullParser.pm"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 14,
                  "endLine": 196,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n=head1 EXAMPLES\n\nThe 'eg/hform' script shows how we might parse the form section of\nHTML::Documents using HTML::PullParser.\n\n=head1 SEE ALSO\n",
                    "rendered": {
                      "text": "\n=head1 EXAMPLES\n\nThe 'eg/hform' script shows how we might parse the form section of\nHTML::Documents using HTML::PullParser.\n\n=head1 SEE ALSO\n",
                      "markdown": "`\n=head1 EXAMPLES\n\nThe 'eg/hform' script shows how we might parse the form section of\nHTML::Documents using HTML::PullParser.\n\n=head1 SEE ALSO\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/PullParser.pm"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 40,
                  "endLine": 190,
                  "endColumn": 46,
                  "snippet": {
                    "text": "=item $p->unget_token( @tokens )\n\nIf you find out you have read too many tokens you can push them back,\nso that they are returned again the next time $p->get_token is called.\n\n=back\n\n",
                    "rendered": {
                      "text": "=item $p->unget_token( @tokens )\n\nIf you find out you have read too many tokens you can push them back,\nso that they are returned again the next time $p->get_token is called.\n\n=back\n\n",
                      "markdown": "`=item $p->unget_token( @tokens )\n\nIf you find out you have read too many tokens you can push them back,\nso that they are returned again the next time $p->get_token is called.\n\n=back\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/PullParser.pm"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 6,
                  "endLine": 189,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n=item $p->unget_token( @tokens )\n\nIf you find out you have read too many tokens you can push them back,\nso that they are returned again the next time $p->get_token is called.\n\n=back\n",
                    "rendered": {
                      "text": "\n=item $p->unget_token( @tokens )\n\nIf you find out you have read too many tokens you can push them back,\nso that they are returned again the next time $p->get_token is called.\n\n=back\n",
                      "markdown": "`\n=item $p->unget_token( @tokens )\n\nIf you find out you have read too many tokens you can push them back,\nso that they are returned again the next time $p->get_token is called.\n\n=back\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/PullParser.pm"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 68,
                  "endLine": 135,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\nThe HTML::PullParser is an alternative interface to the HTML::Parser class.\nIt basically turns the HTML::Parser inside out.  You associate a file\n(or any IO::Handle object or string) with the parser at construction time and\nthen repeatedly call $parser->get_token to obtain the tags and text\nfound in the parsed document.\n\n",
                    "rendered": {
                      "text": "\nThe HTML::PullParser is an alternative interface to the HTML::Parser class.\nIt basically turns the HTML::Parser inside out.  You associate a file\n(or any IO::Handle object or string) with the parser at construction time and\nthen repeatedly call $parser->get_token to obtain the tags and text\nfound in the parsed document.\n\n",
                      "markdown": "`\nThe HTML::PullParser is an alternative interface to the HTML::Parser class.\nIt basically turns the HTML::Parser inside out.  You associate a file\n(or any IO::Handle object or string) with the parser at construction time and\nthen repeatedly call $parser->get_token to obtain the tags and text\nfound in the parsed document.\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 482,
                  "startColumn": 30,
                  "endLine": 482,
                  "endColumn": 54,
                  "snippet": {
                    "text": "  $p->parse(\"\\xE2\\x99\\xA5&hearts;\");\n\nthen C<dtext> will be reported as \"\\xE2\\x99\\xA5\\x{2665}\" without\nC<utf8_mode> enabled, but as \"\\xE2\\x99\\xA5\\xE2\\x99\\xA5\" when enabled.\nThe later string is what you want.\n\nThis option is only available with perl-5.8 or better.\n",
                    "rendered": {
                      "text": "  $p->parse(\"\\xE2\\x99\\xA5&hearts;\");\n\nthen C<dtext> will be reported as \"\\xE2\\x99\\xA5\\x{2665}\" without\nC<utf8_mode> enabled, but as \"\\xE2\\x99\\xA5\\xE2\\x99\\xA5\" when enabled.\nThe later string is what you want.\n\nThis option is only available with perl-5.8 or better.\n",
                      "markdown": "`  $p->parse(\"\\xE2\\x99\\xA5&hearts;\");\n\nthen C<dtext> will be reported as \"\\xE2\\x99\\xA5\\x{2665}\" without\nC<utf8_mode> enabled, but as \"\\xE2\\x99\\xA5\\xE2\\x99\\xA5\" when enabled.\nThe later string is what you want.\n\nThis option is only available with perl-5.8 or better.\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 1246,
                  "startColumn": 8,
                  "endLine": 1246,
                  "endColumn": 12,
                  "snippet": {
                    "text": "L<http://www.w3.org/TR/html4/>\n\nMore information about marked sections and processing instructions may\nbe found at L<http://www.is-thought.co.uk/book/sgml-8.htm>.\n\n=head1 COPYRIGHT\n\n",
                    "rendered": {
                      "text": "L<http://www.w3.org/TR/html4/>\n\nMore information about marked sections and processing instructions may\nbe found at L<http://www.is-thought.co.uk/book/sgml-8.htm>.\n\n=head1 COPYRIGHT\n\n",
                      "markdown": "`L<http://www.w3.org/TR/html4/>\n\nMore information about marked sections and processing instructions may\nbe found at L<http://www.is-thought.co.uk/book/sgml-8.htm>.\n\n=head1 COPYRIGHT\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 1231,
                  "startColumn": 56,
                  "endLine": 1231,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n=item Parsing of undecoded UTF-16\n\n(W) The parser found the Unicode UTF-16 C<BOM> signature at the start of\nthe document.  The result of parsing will likely be garbage.\n\n=back\n",
                    "rendered": {
                      "text": "\n=item Parsing of undecoded UTF-16\n\n(W) The parser found the Unicode UTF-16 C<BOM> signature at the start of\nthe document.  The result of parsing will likely be garbage.\n\n=back\n",
                      "markdown": "`\n=item Parsing of undecoded UTF-16\n\n(W) The parser found the Unicode UTF-16 C<BOM> signature at the start of\nthe document.  The result of parsing will likely be garbage.\n\n=back\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 1226,
                  "startColumn": 56,
                  "endLine": 1226,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n=item Parsing of undecoded UTF-32\n\n(W) The parser found the Unicode UTF-32 C<BOM> signature at the start\nof the document.  The result of parsing will likely be garbage.\n\n=item Parsing of undecoded UTF-16\n",
                    "rendered": {
                      "text": "\n=item Parsing of undecoded UTF-32\n\n(W) The parser found the Unicode UTF-32 C<BOM> signature at the start\nof the document.  The result of parsing will likely be garbage.\n\n=item Parsing of undecoded UTF-16\n",
                      "markdown": "`\n=item Parsing of undecoded UTF-32\n\n(W) The parser found the Unicode UTF-32 C<BOM> signature at the start\nof the document.  The result of parsing will likely be garbage.\n\n=item Parsing of undecoded UTF-16\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 1206,
                  "startColumn": 21,
                  "endLine": 1206,
                  "endColumn": 29,
                  "snippet": {
                    "text": "handlers.\n\nThe result of decoding will be a mix of encoded and decoded characters\nfor any entities that expand to characters with code above 127.  This\nis not a good thing.\n\nThe recommended solution is to apply Encode::decode_utf8() on the data before\n",
                    "rendered": {
                      "text": "handlers.\n\nThe result of decoding will be a mix of encoded and decoded characters\nfor any entities that expand to characters with code above 127.  This\nis not a good thing.\n\nThe recommended solution is to apply Encode::decode_utf8() on the data before\n",
                      "markdown": "`handlers.\n\nThe result of decoding will be a mix of encoded and decoded characters\nfor any entities that expand to characters with code above 127.  This\nis not a good thing.\n\nThe recommended solution is to apply Encode::decode_utf8() on the data before\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 1120,
                  "startColumn": 42,
                  "endLine": 1120,
                  "endColumn": 46,
                  "snippet": {
                    "text": "(F) The object blessed into or subclassed from HTML::Parser is not a\nhash as required by the HTML::Parser methods.\n\n=item Bad signature in parser state object at %p\n\n(F) The _hparser_xs_state element does not refer to a valid state structure.\nSomething must have changed the internal value\n",
                    "rendered": {
                      "text": "(F) The object blessed into or subclassed from HTML::Parser is not a\nhash as required by the HTML::Parser methods.\n\n=item Bad signature in parser state object at %p\n\n(F) The _hparser_xs_state element does not refer to a valid state structure.\nSomething must have changed the internal value\n",
                      "markdown": "`(F) The object blessed into or subclassed from HTML::Parser is not a\nhash as required by the HTML::Parser methods.\n\n=item Bad signature in parser state object at %p\n\n(F) The _hparser_xs_state element does not refer to a valid state structure.\nSomething must have changed the internal value\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 730,
                  "startColumn": 5,
                  "endLine": 730,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nLine causes the line number of the start of the event to be passed.\nThe first line in the document is 1.  Line counting doesn't start\nuntil at least one handler requests this value to be reported.\n\n=item C<offset>\n\n",
                    "rendered": {
                      "text": "\nLine causes the line number of the start of the event to be passed.\nThe first line in the document is 1.  Line counting doesn't start\nuntil at least one handler requests this value to be reported.\n\n=item C<offset>\n\n",
                      "markdown": "`\nLine causes the line number of the start of the event to be passed.\nThe first line in the document is 1.  Line counting doesn't start\nuntil at least one handler requests this value to be reported.\n\n=item C<offset>\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 592,
                  "startColumn": 21,
                  "endLine": 592,
                  "endColumn": 30,
                  "snippet": {
                    "text": "of callbacks made from the parser.  Applying filters can improve\nperformance significantly.\n\nThe following methods control filters:\n\n=over\n\n",
                    "rendered": {
                      "text": "of callbacks made from the parser.  Applying filters can improve\nperformance significantly.\n\nThe following methods control filters:\n\n=over\n\n",
                      "markdown": "`of callbacks made from the parser.  Applying filters can improve\nperformance significantly.\n\nThe following methods control filters:\n\n=over\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 56,
                  "endLine": 449,
                  "endColumn": 60,
                  "snippet": {
                    "text": "=item $p->unbroken_text( $bool )\n\nBy default, blocks of text are given to the text handler as soon as\npossible (but the parser takes care always to break text at a\nboundary between whitespace and non-whitespace so single words and\nentities can always be decoded safely).  This might create breaks that\nmake it hard to do transformations on the text. When this attribute is\n",
                    "rendered": {
                      "text": "=item $p->unbroken_text( $bool )\n\nBy default, blocks of text are given to the text handler as soon as\npossible (but the parser takes care always to break text at a\nboundary between whitespace and non-whitespace so single words and\nentities can always be decoded safely).  This might create breaks that\nmake it hard to do transformations on the text. When this attribute is\n",
                      "markdown": "`=item $p->unbroken_text( $bool )\n\nBy default, blocks of text are given to the text handler as soon as\npossible (but the parser takes care always to break text at a\nboundary between whitespace and non-whitespace so single words and\nentities can always be decoded safely).  This might create breaks that\nmake it hard to do transformations on the text. When this attribute is\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 365,
                  "startColumn": 17,
                  "endLine": 365,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\nBy default, C<plaintext> element can never be closed. Everything up to\nthe end of the document is parsed in CDATA mode.  This historical\nbehaviour is what at least MSIE does.  Enabling this attribute makes\nclosing C< </plaintext> > tag effective and the parsing process will resume\nafter seeing this tag.  This emulates early gecko-based browsers.\n\n",
                    "rendered": {
                      "text": "\nBy default, C<plaintext> element can never be closed. Everything up to\nthe end of the document is parsed in CDATA mode.  This historical\nbehaviour is what at least MSIE does.  Enabling this attribute makes\nclosing C< </plaintext> > tag effective and the parsing process will resume\nafter seeing this tag.  This emulates early gecko-based browsers.\n\n",
                      "markdown": "`\nBy default, C<plaintext> element can never be closed. Everything up to\nthe end of the document is parsed in CDATA mode.  This historical\nbehaviour is what at least MSIE does.  Enabling this attribute makes\nclosing C< </plaintext> > tag effective and the parsing process will resume\nafter seeing this tag.  This emulates early gecko-based browsers.\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 55,
                  "endLine": 307,
                  "endColumn": 59,
                  "snippet": {
                    "text": "outside a handler callback will flush any remaining buffered text\n(which triggers the C<text> event if there is any remaining text).\n\nCalling $p->eof inside a handler will terminate parsing at that point\nand cause $p->parse to return a FALSE value.  This also terminates\nparsing by $p->parse_file().\n\n",
                    "rendered": {
                      "text": "outside a handler callback will flush any remaining buffered text\n(which triggers the C<text> event if there is any remaining text).\n\nCalling $p->eof inside a handler will terminate parsing at that point\nand cause $p->parse to return a FALSE value.  This also terminates\nparsing by $p->parse_file().\n\n",
                      "markdown": "`outside a handler callback will flush any remaining buffered text\n(which triggers the C<text> event if there is any remaining text).\n\nCalling $p->eof inside a handler will terminate parsing at that point\nand cause $p->parse to return a FALSE value.  This also terminates\nparsing by $p->parse_file().\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 1254,
                  "startColumn": 33,
                  "endLine": 1254,
                  "endColumn": 39,
                  "snippet": {
                    "text": " Copyright 1999-2000 Michael A. Chase.  All rights reserved.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n",
                    "rendered": {
                      "text": " Copyright 1999-2000 Michael A. Chase.  All rights reserved.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n",
                      "markdown": "` Copyright 1999-2000 Michael A. Chase.  All rights reserved.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 1206,
                  "startColumn": 21,
                  "endLine": 1206,
                  "endColumn": 29,
                  "snippet": {
                    "text": "handlers.\n\nThe result of decoding will be a mix of encoded and decoded characters\nfor any entities that expand to characters with code above 127.  This\nis not a good thing.\n\nThe recommended solution is to apply Encode::decode_utf8() on the data before\n",
                    "rendered": {
                      "text": "handlers.\n\nThe result of decoding will be a mix of encoded and decoded characters\nfor any entities that expand to characters with code above 127.  This\nis not a good thing.\n\nThe recommended solution is to apply Encode::decode_utf8() on the data before\n",
                      "markdown": "`handlers.\n\nThe result of decoding will be a mix of encoded and decoded characters\nfor any entities that expand to characters with code above 127.  This\nis not a good thing.\n\nThe recommended solution is to apply Encode::decode_utf8() on the data before\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 1130,
                  "startColumn": 11,
                  "endLine": 1130,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(F) The _hparser_xs_state element has been destroyed.\n\n=item Can't find '_hparser_xs_state' element in HTML::Parser hash\n\n(F) The _hparser_xs_state element is missing from the parser hash.\nIt was either deleted, or not created when the object was created.\n",
                    "rendered": {
                      "text": "\n(F) The _hparser_xs_state element has been destroyed.\n\n=item Can't find '_hparser_xs_state' element in HTML::Parser hash\n\n(F) The _hparser_xs_state element is missing from the parser hash.\nIt was either deleted, or not created when the object was created.\n",
                      "markdown": "`\n(F) The _hparser_xs_state element has been destroyed.\n\n=item Can't find '_hparser_xs_state' element in HTML::Parser hash\n\n(F) The _hparser_xs_state element is missing from the parser hash.\nIt was either deleted, or not created when the object was created.\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 893,
                  "startColumn": 9,
                  "endLine": 893,
                  "endColumn": 15,
                  "snippet": {
                    "text": "This event is triggered when a I<markup declaration> is recognized.\n\nFor typical HTML documents, the only declaration you are\nlikely to find is <!DOCTYPE ...>.\n\nExample:\n\n",
                    "rendered": {
                      "text": "This event is triggered when a I<markup declaration> is recognized.\n\nFor typical HTML documents, the only declaration you are\nlikely to find is <!DOCTYPE ...>.\n\nExample:\n\n",
                      "markdown": "`This event is triggered when a I<markup declaration> is recognized.\n\nFor typical HTML documents, the only declaration you are\nlikely to find is <!DOCTYPE ...>.\n\nExample:\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 756,
                  "startColumn": 27,
                  "endLine": 756,
                  "endColumn": 33,
                  "snippet": {
                    "text": "=item C<skipped_text>\n\nSkipped_text returns the concatenated text of all the events that have\nbeen skipped since the last time an event was reported.  Events might\nbe skipped because no handler is registered for them or because some\nfilter applies.  Skipped text also includes marked section markup,\nsince there are no events that can catch it.\n",
                    "rendered": {
                      "text": "=item C<skipped_text>\n\nSkipped_text returns the concatenated text of all the events that have\nbeen skipped since the last time an event was reported.  Events might\nbe skipped because no handler is registered for them or because some\nfilter applies.  Skipped text also includes marked section markup,\nsince there are no events that can catch it.\n",
                      "markdown": "`=item C<skipped_text>\n\nSkipped_text returns the concatenated text of all the events that have\nbeen skipped since the last time an event was reported.  Events might\nbe skipped because no handler is registered for them or because some\nfilter applies.  Skipped text also includes marked section markup,\nsince there are no events that can catch it.\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 698,
                  "startColumn": 63,
                  "endLine": 699,
                  "snippet": {
                    "text": "was between literal start and end tags (C<script>, C<style>,\nC<xmp>, C<iframe>, C<title>, C<textarea> and C<plaintext>).\n\nThe Unicode character set is assumed for entity decoding.  With Perl\nversion 5.6 or earlier only the Latin-1 range is supported, and\nentities for characters outside the range 0..255 are left unchanged.\n\nThis passes undef except for C<text> events.\n",
                    "rendered": {
                      "text": "was between literal start and end tags (C<script>, C<style>,\nC<xmp>, C<iframe>, C<title>, C<textarea> and C<plaintext>).\n\nThe Unicode character set is assumed for entity decoding.  With Perl\nversion 5.6 or earlier only the Latin-1 range is supported, and\nentities for characters outside the range 0..255 are left unchanged.\n\nThis passes undef except for C<text> events.\n",
                      "markdown": "`was between literal start and end tags (C<script>, C<style>,\nC<xmp>, C<iframe>, C<title>, C<textarea> and C<plaintext>).\n\nThe Unicode character set is assumed for entity decoding.  With Perl\nversion 5.6 or earlier only the Latin-1 range is supported, and\nentities for characters outside the range 0..255 are left unchanged.\n\nThis passes undef except for C<text> events.\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Parser.pm"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 4,
                  "endLine": 195,
                  "endColumn": 9,
                  "snippet": {
                    "text": "handlers or initialize parser options.  The handlers and parser\noptions can also be set or modified later by the method calls described below.\n\nIf a top level key is in the form \"<event>_h\" (e.g., \"text_h\") then it\nassigns a handler to that event, otherwise it initializes a parser\noption. The event handler specification value must be an array\nreference.  Multiple handlers may also be assigned with the 'handlers\n",
                    "rendered": {
                      "text": "handlers or initialize parser options.  The handlers and parser\noptions can also be set or modified later by the method calls described below.\n\nIf a top level key is in the form \"<event>_h\" (e.g., \"text_h\") then it\nassigns a handler to that event, otherwise it initializes a parser\noption. The event handler specification value must be an array\nreference.  Multiple handlers may also be assigned with the 'handlers\n",
                      "markdown": "`handlers or initialize parser options.  The handlers and parser\noptions can also be set or modified later by the method calls described below.\n\nIf a top level key is in the form \"<event>_h\" (e.g., \"text_h\") then it\nassigns a handler to that event, otherwise it initializes a parser\noption. The event handler specification value must be an array\nreference.  Multiple handlers may also be assigned with the 'handlers\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/HeadParser.pm"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 11,
                  "endLine": 32,
                  "endColumn": 19,
                  "snippet": {
                    "text": "properly decoded before passing them on.\n\nThe C<HTML::HeadParser> keeps a reference to a header object, and the\nparser will update this header object as the various elements of the\nE<lt>HEAD> section of the HTML document are recognized.  The following\nheader fields are affected:\n\n",
                    "rendered": {
                      "text": "properly decoded before passing them on.\n\nThe C<HTML::HeadParser> keeps a reference to a header object, and the\nparser will update this header object as the various elements of the\nE<lt>HEAD> section of the HTML document are recognized.  The following\nheader fields are affected:\n\n",
                      "markdown": "`properly decoded before passing them on.\n\nThe C<HTML::HeadParser> keeps a reference to a header object, and the\nparser will update this header object as the various elements of the\nE<lt>HEAD> section of the HTML document are recognized.  The following\nheader fields are affected:\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/HeadParser.pm"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 33,
                  "endLine": 312,
                  "endColumn": 39,
                  "snippet": {
                    "text": "Copyright 1996-2001 Gisle Aas. All rights reserved.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n",
                    "rendered": {
                      "text": "Copyright 1996-2001 Gisle Aas. All rights reserved.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n",
                      "markdown": "`Copyright 1996-2001 Gisle Aas. All rights reserved.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/HeadParser.pm"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 11,
                  "endLine": 186,
                  "endColumn": 17,
                  "snippet": {
                    "text": "#\n# <!ENTITY % head.misc \"SCRIPT|STYLE|META|LINK|OBJECT\">\n# <!ENTITY % head.content \"TITLE & BASE?\">\n# <!ELEMENT HEAD O O (%head.content;) +(%head.misc;)>\n#\n# From HTML 5 as of WD-html5-20090825:\n#\n",
                    "rendered": {
                      "text": "#\n# <!ENTITY % head.misc \"SCRIPT|STYLE|META|LINK|OBJECT\">\n# <!ENTITY % head.content \"TITLE & BASE?\">\n# <!ELEMENT HEAD O O (%head.content;) +(%head.misc;)>\n#\n# From HTML 5 as of WD-html5-20090825:\n#\n",
                      "markdown": "`#\n# <!ENTITY % head.misc \"SCRIPT|STYLE|META|LINK|OBJECT\">\n# <!ENTITY % head.content \"TITLE & BASE?\">\n# <!ELEMENT HEAD O O (%head.content;) +(%head.misc;)>\n#\n# From HTML 5 as of WD-html5-20090825:\n#\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/HeadParser.pm"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 11,
                  "endLine": 180,
                  "endColumn": 17,
                  "snippet": {
                    "text": "# <!ENTITY % head.content \"TITLE & ISINDEX? & BASE? & STYLE? &\n#                            SCRIPT* & META* & LINK*\">\n#\n# <!ELEMENT HEAD O O  (%head.content)>\n#\n# From HTML 4.01:\n#\n",
                    "rendered": {
                      "text": "# <!ENTITY % head.content \"TITLE & ISINDEX? & BASE? & STYLE? &\n#                            SCRIPT* & META* & LINK*\">\n#\n# <!ELEMENT HEAD O O  (%head.content)>\n#\n# From HTML 4.01:\n#\n",
                      "markdown": "`# <!ENTITY % head.content \"TITLE & ISINDEX? & BASE? & STYLE? &\n#                            SCRIPT* & META* & LINK*\">\n#\n# <!ELEMENT HEAD O O  (%head.content)>\n#\n# From HTML 4.01:\n#\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Filter.pm"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 33,
                  "endLine": 108,
                  "endColumn": 39,
                  "snippet": {
                    "text": "Copyright 1997-1999 Gisle Aas.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n",
                    "rendered": {
                      "text": "Copyright 1997-1999 Gisle Aas.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n",
                      "markdown": "`Copyright 1997-1999 Gisle Aas.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/TokeParser.pm"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 31,
                  "endLine": 326,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n=item $p->get_phrase\n\nThis will return all text found at the current position ignoring any\nphrasal-level tags.  Text is extracted until the first non\nphrasal-level tag.  Textification of tags is the same as for\nget_text().  This method will collapse white space in the same way as\n",
                    "rendered": {
                      "text": "\n=item $p->get_phrase\n\nThis will return all text found at the current position ignoring any\nphrasal-level tags.  Text is extracted until the first non\nphrasal-level tag.  Textification of tags is the same as for\nget_text().  This method will collapse white space in the same way as\n",
                      "markdown": "`\n=item $p->get_phrase\n\nThis will return all text found at the current position ignoring any\nphrasal-level tags.  Text is extracted until the first non\nphrasal-level tag.  Textification of tags is the same as for\nget_text().  This method will collapse white space in the same way as\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/TokeParser.pm"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 34,
                  "endLine": 287,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n=item $p->get_text( @endtags )\n\nThis method returns all text found at the current position. It will\nreturn a zero length string if the next token is not text. Any\nentities will be converted to their corresponding character.\n\n",
                    "rendered": {
                      "text": "\n=item $p->get_text( @endtags )\n\nThis method returns all text found at the current position. It will\nreturn a zero length string if the next token is not text. Any\nentities will be converted to their corresponding character.\n\n",
                      "markdown": "`\n=item $p->get_text( @endtags )\n\nThis method returns all text found at the current position. It will\nreturn a zero length string if the next token is not text. Any\nentities will be converted to their corresponding character.\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/TokeParser.pm"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 11,
                  "endLine": 236,
                  "endColumn": 15,
                  "snippet": {
                    "text": "=item $p->get_token\n\nThis method will return the next I<token> found in the HTML document,\nor C<undef> at the end of the document.  The token is returned as an\narray reference.  The first element of the array will be a string\ndenoting the type of this token: \"S\" for start tag, \"E\" for end tag,\n\"T\" for text, \"C\" for comment, \"D\" for declaration, and \"PI\" for\n",
                    "rendered": {
                      "text": "=item $p->get_token\n\nThis method will return the next I<token> found in the HTML document,\nor C<undef> at the end of the document.  The token is returned as an\narray reference.  The first element of the array will be a string\ndenoting the type of this token: \"S\" for start tag, \"E\" for end tag,\n\"T\" for text, \"C\" for comment, \"D\" for declaration, and \"PI\" for\n",
                      "markdown": "`=item $p->get_token\n\nThis method will return the next I<token> found in the HTML document,\nor C<undef> at the end of the document.  The token is returned as an\narray reference.  The first element of the array will be a string\ndenoting the type of this token: \"S\" for start tag, \"E\" for end tag,\n\"T\" for text, \"C\" for comment, \"D\" for declaration, and \"PI\" for\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/TokeParser.pm"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 33,
                  "endLine": 370,
                  "endColumn": 39,
                  "snippet": {
                    "text": "Copyright 1998-2005 Gisle Aas.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n",
                    "rendered": {
                      "text": "Copyright 1998-2005 Gisle Aas.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n",
                      "markdown": "`Copyright 1998-2005 Gisle Aas.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/TokeParser.pm"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 4,
                  "endLine": 270,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n   $p->get_tag(\"font\", \"/font\");\n\nwill find the next start or end tag for a font-element.\n\nThe tag information is returned as an array reference in the same form\nas for $p->get_token above, but the type code (first element) is\n",
                    "rendered": {
                      "text": "\n   $p->get_tag(\"font\", \"/font\");\n\nwill find the next start or end tag for a font-element.\n\nThe tag information is returned as an array reference in the same form\nas for $p->get_token above, but the type code (first element) is\n",
                      "markdown": "`\n   $p->get_tag(\"font\", \"/font\");\n\nwill find the next start or end tag for a font-element.\n\nThe tag information is returned as an array reference in the same form\nas for $p->get_token above, but the type code (first element) is\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/TokeParser.pm"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 34,
                  "endLine": 257,
                  "endColumn": 40,
                  "snippet": {
                    "text": "=item $p->unget_token( @tokens )\n\nIf you find you have read too many tokens you can push them back,\nso that they are returned the next time $p->get_token is called.\n\n=item $p->get_tag\n\n",
                    "rendered": {
                      "text": "=item $p->unget_token( @tokens )\n\nIf you find you have read too many tokens you can push them back,\nso that they are returned the next time $p->get_token is called.\n\n=item $p->get_tag\n\n",
                      "markdown": "`=item $p->unget_token( @tokens )\n\nIf you find you have read too many tokens you can push them back,\nso that they are returned the next time $p->get_token is called.\n\n=item $p->get_tag\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/TokeParser.pm"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 6,
                  "endLine": 256,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n=item $p->unget_token( @tokens )\n\nIf you find you have read too many tokens you can push them back,\nso that they are returned the next time $p->get_token is called.\n\n=item $p->get_tag\n",
                    "rendered": {
                      "text": "\n=item $p->unget_token( @tokens )\n\nIf you find you have read too many tokens you can push them back,\nso that they are returned the next time $p->get_token is called.\n\n=item $p->get_tag\n",
                      "markdown": "`\n=item $p->unget_token( @tokens )\n\nIf you find you have read too many tokens you can push them back,\nso that they are returned the next time $p->get_token is called.\n\n=item $p->get_tag\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/TokeParser.pm"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 39,
                  "endLine": 177,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\nThe C<HTML::TokeParser> is an alternative interface to the\nC<HTML::Parser> class.  It is an C<HTML::PullParser> subclass with a\npredeclared set of token types.  If you wish the tokens to be reported\ndifferently you probably want to use the C<HTML::PullParser> directly.\n\nThe following methods are available:\n",
                    "rendered": {
                      "text": "\nThe C<HTML::TokeParser> is an alternative interface to the\nC<HTML::Parser> class.  It is an C<HTML::PullParser> subclass with a\npredeclared set of token types.  If you wish the tokens to be reported\ndifferently you probably want to use the C<HTML::PullParser> directly.\n\nThe following methods are available:\n",
                      "markdown": "`\nThe C<HTML::TokeParser> is an alternative interface to the\nC<HTML::Parser> class.  It is an C<HTML::PullParser> subclass with a\npredeclared set of token types.  If you wish the tokens to be reported\ndifferently you probably want to use the C<HTML::PullParser> directly.\n\nThe following methods are available:\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/TokeParser.pm"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 15,
                  "endLine": 104,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t    } else {\n\t\t$tag = \"/$tag\";\n\t    }\n\t    if (!@_ || grep $_ eq $tag, @_) {\n\t\t $self->unget_token($token);\n\t\t last;\n\t    }\n",
                    "rendered": {
                      "text": "\t    } else {\n\t\t$tag = \"/$tag\";\n\t    }\n\t    if (!@_ || grep $_ eq $tag, @_) {\n\t\t $self->unget_token($token);\n\t\t last;\n\t    }\n",
                      "markdown": "`\t    } else {\n\t\t$tag = \"/$tag\";\n\t    }\n\t    if (!@_ || grep $_ eq $tag, @_) {\n\t\t $self->unget_token($token);\n\t\t last;\n\t    }\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/LinkExtor.pm"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 3,
                  "endLine": 165,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  $res = $ua->request(HTTP::Request->new(GET => $url),\n                      sub {$p->parse($_[0])});\n\n  # Expand all image URLs to absolute ones\n  my $base = $res->base;\n  @imgs = map { $_ = url($_, $base)->abs; } @imgs;\n\n",
                    "rendered": {
                      "text": "  $res = $ua->request(HTTP::Request->new(GET => $url),\n                      sub {$p->parse($_[0])});\n\n  # Expand all image URLs to absolute ones\n  my $base = $res->base;\n  @imgs = map { $_ = url($_, $base)->abs; } @imgs;\n\n",
                      "markdown": "`  $res = $ua->request(HTTP::Request->new(GET => $url),\n                      sub {$p->parse($_[0])});\n\n  # Expand all image URLs to absolute ones\n  my $base = $res->base;\n  @imgs = map { $_ = url($_, $base)->abs; } @imgs;\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/LinkExtor.pm"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 52,
                  "endLine": 153,
                  "endColumn": 56,
                  "snippet": {
                    "text": "  my @imgs = ();\n  sub callback {\n     my($tag, %attr) = @_;\n     return if $tag ne 'img';  # we only look closer at <img ...>\n     push(@imgs, values %attr);\n  }\n\n",
                    "rendered": {
                      "text": "  my @imgs = ();\n  sub callback {\n     my($tag, %attr) = @_;\n     return if $tag ne 'img';  # we only look closer at <img ...>\n     push(@imgs, values %attr);\n  }\n\n",
                      "markdown": "`  my @imgs = ();\n  sub callback {\n     my($tag, %attr) = @_;\n     return if $tag ne 'img';  # we only look closer at <img ...>\n     push(@imgs, values %attr);\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/LinkExtor.pm"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 33,
                  "endLine": 181,
                  "endColumn": 39,
                  "snippet": {
                    "text": "Copyright 1996-2001 Gisle Aas.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n\n",
                    "rendered": {
                      "text": "Copyright 1996-2001 Gisle Aas.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n\n",
                      "markdown": "`Copyright 1996-2001 Gisle Aas.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/LinkExtor.pm"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 3,
                  "endLine": 165,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  $res = $ua->request(HTTP::Request->new(GET => $url),\n                      sub {$p->parse($_[0])});\n\n  # Expand all image URLs to absolute ones\n  my $base = $res->base;\n  @imgs = map { $_ = url($_, $base)->abs; } @imgs;\n\n",
                    "rendered": {
                      "text": "  $res = $ua->request(HTTP::Request->new(GET => $url),\n                      sub {$p->parse($_[0])});\n\n  # Expand all image URLs to absolute ones\n  my $base = $res->base;\n  @imgs = map { $_ = url($_, $base)->abs; } @imgs;\n\n",
                      "markdown": "`  $res = $ua->request(HTTP::Request->new(GET => $url),\n                      sub {$p->parse($_[0])});\n\n  # Expand all image URLs to absolute ones\n  my $base = $res->base;\n  @imgs = map { $_ = url($_, $base)->abs; } @imgs;\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Entities.pm"
                },
                "region": {
                  "startLine": 482,
                  "startColumn": 9,
                  "endLine": 482,
                  "endColumn": 18,
                  "snippet": {
                    "text": "            $subst{$_[1]} = $regex;\n\t}\n    } else {\n\t# Encode control chars, high bit chars and '<', '&', '>', ''' and '\"'\n        $regex = qr/([^\\n\\r\\t !\\#\\$%\\(-;=?-~])/;\n    }\n    $$ref =~ s/$regex/$char2entity{$1} || num_entity($1)/eg;\n",
                    "rendered": {
                      "text": "            $subst{$_[1]} = $regex;\n\t}\n    } else {\n\t# Encode control chars, high bit chars and '<', '&', '>', ''' and '\"'\n        $regex = qr/([^\\n\\r\\t !\\#\\$%\\(-;=?-~])/;\n    }\n    $$ref =~ s/$regex/$char2entity{$1} || num_entity($1)/eg;\n",
                      "markdown": "`            $subst{$_[1]} = $regex;\n\t}\n    } else {\n\t# Encode control chars, high bit chars and '<', '&', '>', ''' and '\"'\n        $regex = qr/([^\\n\\r\\t !\\#\\$%\\(-;=?-~])/;\n    }\n    $$ref =~ s/$regex/$char2entity{$1} || num_entity($1)/eg;\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Entities.pm"
                },
                "region": {
                  "startLine": 228,
                  "endLine": 228,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n # Some extra Latin 1 chars that are listed in the HTML3.2 draft (21-May-96)\n copy   => chr(169),  # copyright sign\n reg    => chr(174),  # registered sign\n nbsp   => chr(160),  # non breaking space\n\n # Additional ISO-8859/1 entities listed in rfc1866 (section 14)\n",
                    "rendered": {
                      "text": "\n # Some extra Latin 1 chars that are listed in the HTML3.2 draft (21-May-96)\n copy   => chr(169),  # copyright sign\n reg    => chr(174),  # registered sign\n nbsp   => chr(160),  # non breaking space\n\n # Additional ISO-8859/1 entities listed in rfc1866 (section 14)\n",
                      "markdown": "`\n # Some extra Latin 1 chars that are listed in the HTML3.2 draft (21-May-96)\n copy   => chr(169),  # copyright sign\n reg    => chr(174),  # registered sign\n nbsp   => chr(160),  # non breaking space\n\n # Additional ISO-8859/1 entities listed in rfc1866 (section 14)\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Entities.pm"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 43,
                  "endLine": 85,
                  "endColumn": 52,
                  "snippet": {
                    "text": "expression character class syntax (what you find within brackets in regular\nexpressions).\n\nThe default set of characters to encode are control chars, high-bit chars, and\nthe C<< < >>, C<< & >>, C<< > >>, C<< ' >> and C<< \" >> characters.  But this,\nfor example, would encode I<just> the C<< < >>, C<< & >>, C<< > >>, and C<< \"\n>> characters:\n",
                    "rendered": {
                      "text": "expression character class syntax (what you find within brackets in regular\nexpressions).\n\nThe default set of characters to encode are control chars, high-bit chars, and\nthe C<< < >>, C<< & >>, C<< > >>, C<< ' >> and C<< \" >> characters.  But this,\nfor example, would encode I<just> the C<< < >>, C<< & >>, C<< > >>, and C<< \"\n>> characters:\n",
                      "markdown": "`expression character class syntax (what you find within brackets in regular\nexpressions).\n\nThe default set of characters to encode are control chars, high-bit chars, and\nthe C<< < >>, C<< & >>, C<< > >>, C<< ' >> and C<< \" >> characters.  But this,\nfor example, would encode I<just> the C<< < >>, C<< & >>, C<< > >>, and C<< \"\n>> characters:\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Entities.pm"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 27,
                  "endLine": 56,
                  "endColumn": 35,
                  "snippet": {
                    "text": "overflow.\n\nThe keys in %entity2char are the entity names to be expanded and their\nvalues are what they should expand into.  The values do not have to be\nsingle character strings.  If a key has \";\" as suffix,\nthen occurrences in $string are only expanded if properly terminated\nwith \";\".  Entities without \";\" will be expanded regardless of how\n",
                    "rendered": {
                      "text": "overflow.\n\nThe keys in %entity2char are the entity names to be expanded and their\nvalues are what they should expand into.  The values do not have to be\nsingle character strings.  If a key has \";\" as suffix,\nthen occurrences in $string are only expanded if properly terminated\nwith \";\".  Entities without \";\" will be expanded regardless of how\n",
                      "markdown": "`overflow.\n\nThe keys in %entity2char are the entity names to be expanded and their\nvalues are what they should expand into.  The values do not have to be\nsingle character strings.  If a key has \";\" as suffix,\nthen occurrences in $string are only expanded if properly terminated\nwith \";\".  Entities without \";\" will be expanded regardless of how\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Entities.pm"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 47,
                  "endLine": 262,
                  "snippet": {
                    "text": " frac12 => chr(189),\n frac34 => chr(190),\n iquest => chr(191),\n'times' => chr(215),    # times is a keyword in perl\n divide => chr(247),\n\n ( $] > 5.007 ? (\n  'OElig;'    => chr(338),\n",
                    "rendered": {
                      "text": " frac12 => chr(189),\n frac34 => chr(190),\n iquest => chr(191),\n'times' => chr(215),    # times is a keyword in perl\n divide => chr(247),\n\n ( $] > 5.007 ? (\n  'OElig;'    => chr(338),\n",
                      "markdown": "` frac12 => chr(189),\n frac34 => chr(190),\n iquest => chr(191),\n'times' => chr(215),    # times is a keyword in perl\n divide => chr(247),\n\n ( $] > 5.007 ? (\n  'OElig;'    => chr(338),\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Entities.pm"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 45,
                  "endLine": 243,
                  "snippet": {
                    "text": " uml    => chr(168),\n ordf   => chr(170),\n laquo  => chr(171),\n'not'   => chr(172),    # not is a keyword in perl\n shy    => chr(173),\n macr   => chr(175),\n deg    => chr(176),\n plusmn => chr(177),\n",
                    "rendered": {
                      "text": " uml    => chr(168),\n ordf   => chr(170),\n laquo  => chr(171),\n'not'   => chr(172),    # not is a keyword in perl\n shy    => chr(173),\n macr   => chr(175),\n deg    => chr(176),\n plusmn => chr(177),\n",
                      "markdown": "` uml    => chr(168),\n ordf   => chr(170),\n laquo  => chr(171),\n'not'   => chr(172),    # not is a keyword in perl\n shy    => chr(173),\n macr   => chr(175),\n deg    => chr(176),\n plusmn => chr(177),\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Entities.pm"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 33,
                  "endLine": 134,
                  "endColumn": 39,
                  "snippet": {
                    "text": "Copyright 1995-2006 Gisle Aas. All rights reserved.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n\n",
                    "rendered": {
                      "text": "Copyright 1995-2006 Gisle Aas. All rights reserved.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n\n",
                      "markdown": "`Copyright 1995-2006 Gisle Aas. All rights reserved.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\n=cut\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Entities.pm"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 43,
                  "endLine": 82,
                  "endColumn": 49,
                  "snippet": {
                    "text": "This routine replaces unsafe characters in $string with their entity\nrepresentation. A second argument can be given to specify which characters to\nconsider unsafe.  The unsafe characters is specified using the regular\nexpression character class syntax (what you find within brackets in regular\nexpressions).\n\nThe default set of characters to encode are control chars, high-bit chars, and\n",
                    "rendered": {
                      "text": "This routine replaces unsafe characters in $string with their entity\nrepresentation. A second argument can be given to specify which characters to\nconsider unsafe.  The unsafe characters is specified using the regular\nexpression character class syntax (what you find within brackets in regular\nexpressions).\n\nThe default set of characters to encode are control chars, high-bit chars, and\n",
                      "markdown": "`This routine replaces unsafe characters in $string with their entity\nrepresentation. A second argument can be given to specify which characters to\nconsider unsafe.  The unsafe characters is specified using the regular\nexpression character class syntax (what you find within brackets in regular\nexpressions).\n\nThe default set of characters to encode are control chars, high-bit chars, and\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/perl-html-parser-3.83-r0.apk/perl-html-parser-3.83-r0/usr/lib/perl5/vendor_perl/HTML/Entities.pm"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 27,
                  "endLine": 56,
                  "endColumn": 35,
                  "snippet": {
                    "text": "overflow.\n\nThe keys in %entity2char are the entity names to be expanded and their\nvalues are what they should expand into.  The values do not have to be\nsingle character strings.  If a key has \";\" as suffix,\nthen occurrences in $string are only expanded if properly terminated\nwith \";\".  Entities without \";\" will be expanded regardless of how\n",
                    "rendered": {
                      "text": "overflow.\n\nThe keys in %entity2char are the entity names to be expanded and their\nvalues are what they should expand into.  The values do not have to be\nsingle character strings.  If a key has \";\" as suffix,\nthen occurrences in $string are only expanded if properly terminated\nwith \";\".  Entities without \";\" will be expanded regardless of how\n",
                      "markdown": "`overflow.\n\nThe keys in %entity2char are the entity names to be expanded and their\nvalues are what they should expand into.  The values do not have to be\nsingle character strings.  If a key has \";\" as suffix,\nthen occurrences in $string are only expanded if properly terminated\nwith \";\".  Entities without \";\" will be expanded regardless of how\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}