{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-validate_email-0.1.6-r4.apk/ruby3.2-validate_email-0.1.6-r4/usr/lib/ruby/gems/3.2.0/gems/validate_email-0.1.6/lib/validate_email.rb"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 9,
                  "endLine": 18,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      def validate_each(record, attribute, value)\n\n        begin\n          mail = Mail::Address.new(value)\n\n          unless mail.address == value && mail.domain.split(\".\").length > 1\n            record.errors.add(attribute, options[:message])\n",
                    "rendered": {
                      "text": "      def validate_each(record, attribute, value)\n\n        begin\n          mail = Mail::Address.new(value)\n\n          unless mail.address == value && mail.domain.split(\".\").length > 1\n            record.errors.add(attribute, options[:message])\n",
                      "markdown": "`      def validate_each(record, attribute, value)\n\n        begin\n          mail = Mail::Address.new(value)\n\n          unless mail.address == value && mail.domain.split(\".\").length > 1\n            record.errors.add(attribute, options[:message])\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-validate_email-0.1.6-r4.apk/ruby3.2-validate_email-0.1.6-r4/usr/lib/ruby/gems/3.2.0/specifications/validate_email-0.1.6.gemspec"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 28,
                  "endLine": 2,
                  "endColumn": 34,
                  "snippet": {
                    "text": "# -*- encoding: utf-8 -*-\n# stub: validate_email 0.1.6 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"validate_email\".freeze\n",
                    "rendered": {
                      "text": "# -*- encoding: utf-8 -*-\n# stub: validate_email 0.1.6 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"validate_email\".freeze\n",
                      "markdown": "`# -*- encoding: utf-8 -*-\n# stub: validate_email 0.1.6 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"validate_email\".freeze\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}