{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah.1"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 27,
                  "endLine": 206,
                  "endColumn": 7,
                  "snippet": {
                    "text": "commit\tbuildah-commit(1)\tT{\nCreate an image from a working container.\nT}\nconfig\tbuildah-config(1)\tT{\nUpdate image configuration settings.\nT}\ncontainers\tbuildah-containers(1)\tT{\nList the working containers and their base images.\n",
                    "rendered": {
                      "text": "commit\tbuildah-commit(1)\tT{\nCreate an image from a working container.\nT}\nconfig\tbuildah-config(1)\tT{\nUpdate image configuration settings.\nT}\ncontainers\tbuildah-containers(1)\tT{\nList the working containers and their base images.\n",
                      "markdown": "`commit\tbuildah-commit(1)\tT{\nCreate an image from a working container.\nT}\nconfig\tbuildah-config(1)\tT{\nUpdate image configuration settings.\nT}\ncontainers\tbuildah-containers(1)\tT{\nList the working containers and their base images.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah.1"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 71,
                  "endLine": 154,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\\fB--userns-uid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a UID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n",
                    "rendered": {
                      "text": "\\fB--userns-uid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a UID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n",
                      "markdown": "`\\fB--userns-uid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a UID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah.1"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 71,
                  "endLine": 124,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\\fB--userns-gid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a GID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n",
                    "rendered": {
                      "text": "\\fB--userns-gid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a GID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n",
                      "markdown": "`\\fB--userns-gid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a GID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah.1"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 450,
                  "endLine": 289,
                  "endColumn": 457,
                  "snippet": {
                    "text": " mounted on \\fB\\fC/run/secrets\\fR inside the container.  This mountpoint allows Red Hat Enterprise Linux subscriptions from the host to be used within the container.  It is also possible to omit the destination if it's equal to the source path.  For example, specifying \\fB\\fC/var/lib/secrets\\fR will mount the directory into the same container destination path \\fB\\fC/var/lib/secrets\\fR\\&.\n\n.PP\nNote this is not a volume mount. The content of the volumes is copied into container storage, not bind mounted directly from the host.\n\n.PP\n\\fBregistries.conf\\fP (\\fB\\fC/etc/containers/registries.conf\\fR)\n\n.PP\nr",
                    "rendered": {
                      "text": " mounted on \\fB\\fC/run/secrets\\fR inside the container.  This mountpoint allows Red Hat Enterprise Linux subscriptions from the host to be used within the container.  It is also possible to omit the destination if it's equal to the source path.  For example, specifying \\fB\\fC/var/lib/secrets\\fR will mount the directory into the same container destination path \\fB\\fC/var/lib/secrets\\fR\\&.\n\n.PP\nNote this is not a volume mount. The content of the volumes is copied into container storage, not bind mounted directly from the host.\n\n.PP\n\\fBregistries.conf\\fP (\\fB\\fC/etc/containers/registries.conf\\fR)\n\n.PP\nr",
                      "markdown": "` mounted on \\fB\\fC/run/secrets\\fR inside the container.  This mountpoint allows Red Hat Enterprise Linux subscriptions from the host to be used within the container.  It is also possible to omit the destination if it's equal to the source path.  For example, specifying \\fB\\fC/var/lib/secrets\\fR will mount the directory into the same container destination path \\fB\\fC/var/lib/secrets\\fR\\&.\n\n.PP\nNote this is not a volume mount. The content of the volumes is copied into container storage, not bind mounted directly from the host.\n\n.PP\n\\fBregistries.conf\\fP (\\fB\\fC/etc/containers/registries.conf\\fR)\n\n.PP\nr`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah.1"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 229,
                  "endLine": 289,
                  "endColumn": 234,
                  "snippet": {
                    "text": "ed by the package software to access remote package repositories.\n\n.PP\nFor example, a mounts.conf with the line \"\\fB\\fC/usr/share/rhel/secrets:/run/secrets\\fR\", the content of \\fB\\fC/usr/share/rhel/secrets\\fR directory is mounted on \\fB\\fC/run/secrets\\fR inside the container.  This mountpoint allows Red Hat Enterprise Linux subscriptions from the host to be used within the container.  It is also possible to omit the destination if it's equal to the source path.  For example, specifying \\fB\\fC/var/lib/secrets\\fR will mount the directory into the same container destination path \\fB\\fC/var/lib/secrets",
                    "rendered": {
                      "text": "ed by the package software to access remote package repositories.\n\n.PP\nFor example, a mounts.conf with the line \"\\fB\\fC/usr/share/rhel/secrets:/run/secrets\\fR\", the content of \\fB\\fC/usr/share/rhel/secrets\\fR directory is mounted on \\fB\\fC/run/secrets\\fR inside the container.  This mountpoint allows Red Hat Enterprise Linux subscriptions from the host to be used within the container.  It is also possible to omit the destination if it's equal to the source path.  For example, specifying \\fB\\fC/var/lib/secrets\\fR will mount the directory into the same container destination path \\fB\\fC/var/lib/secrets",
                      "markdown": "`ed by the package software to access remote package repositories.\n\n.PP\nFor example, a mounts.conf with the line \"\\fB\\fC/usr/share/rhel/secrets:/run/secrets\\fR\", the content of \\fB\\fC/usr/share/rhel/secrets\\fR directory is mounted on \\fB\\fC/run/secrets\\fR inside the container.  This mountpoint allows Red Hat Enterprise Linux subscriptions from the host to be used within the container.  It is also possible to omit the destination if it's equal to the source path.  For example, specifying \\fB\\fC/var/lib/secrets\\fR will mount the directory into the same container destination path \\fB\\fC/var/lib/secrets`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah.1"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 248,
                  "endLine": 283,
                  "endColumn": 255,
                  "snippet": {
                    "text": "\\fBmounts.conf\\fP (\\fB\\fC/usr/share/containers/mounts.conf\\fR and optionally \\fB\\fC/etc/containers/mounts.conf\\fR)\n\n.PP\nThe mounts.conf files specify volume mount files or directories that are automatically mounted inside containers when executing the \\fB\\fCbuildah run\\fR or \\fB\\fCbuildah build\\fR commands.  Container processes can then use this content.  The volume mount content does not get committed to the final image.\n\n.PP\nUsually these directories are used for passing secrets or credentials required by the package software to access remote package repositories.\n",
                    "rendered": {
                      "text": "\\fBmounts.conf\\fP (\\fB\\fC/usr/share/containers/mounts.conf\\fR and optionally \\fB\\fC/etc/containers/mounts.conf\\fR)\n\n.PP\nThe mounts.conf files specify volume mount files or directories that are automatically mounted inside containers when executing the \\fB\\fCbuildah run\\fR or \\fB\\fCbuildah build\\fR commands.  Container processes can then use this content.  The volume mount content does not get committed to the final image.\n\n.PP\nUsually these directories are used for passing secrets or credentials required by the package software to access remote package repositories.\n",
                      "markdown": "`\\fBmounts.conf\\fP (\\fB\\fC/usr/share/containers/mounts.conf\\fR and optionally \\fB\\fC/etc/containers/mounts.conf\\fR)\n\n.PP\nThe mounts.conf files specify volume mount files or directories that are automatically mounted inside containers when executing the \\fB\\fCbuildah run\\fR or \\fB\\fCbuildah build\\fR commands.  Container processes can then use this content.  The volume mount content does not get committed to the final image.\n\n.PP\nUsually these directories are used for passing secrets or credentials required by the package software to access remote package repositories.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah.1"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 36,
                  "endLine": 283,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\\fBmounts.conf\\fP (\\fB\\fC/usr/share/containers/mounts.conf\\fR and optionally \\fB\\fC/etc/containers/mounts.conf\\fR)\n\n.PP\nThe mounts.conf files specify volume mount files or directories that are automatically mounted inside containers when executing the \\fB\\fCbuildah run\\fR or \\fB\\fCbuildah build\\fR commands.  Container processes can then use this content.  The volume mount content does not get committed to the final image.\n\n.PP\nUsually these directories are used for passing secrets or credentials required by the package software to access remote package repositories.\n",
                    "rendered": {
                      "text": "\\fBmounts.conf\\fP (\\fB\\fC/usr/share/containers/mounts.conf\\fR and optionally \\fB\\fC/etc/containers/mounts.conf\\fR)\n\n.PP\nThe mounts.conf files specify volume mount files or directories that are automatically mounted inside containers when executing the \\fB\\fCbuildah run\\fR or \\fB\\fCbuildah build\\fR commands.  Container processes can then use this content.  The volume mount content does not get committed to the final image.\n\n.PP\nUsually these directories are used for passing secrets or credentials required by the package software to access remote package repositories.\n",
                      "markdown": "`\\fBmounts.conf\\fP (\\fB\\fC/usr/share/containers/mounts.conf\\fR and optionally \\fB\\fC/etc/containers/mounts.conf\\fR)\n\n.PP\nThe mounts.conf files specify volume mount files or directories that are automatically mounted inside containers when executing the \\fB\\fCbuildah run\\fR or \\fB\\fCbuildah build\\fR commands.  Container processes can then use this content.  The volume mount content does not get committed to the final image.\n\n.PP\nUsually these directories are used for passing secrets or credentials required by the package software to access remote package repositories.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah.1"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 2,
                  "endLine": 261,
                  "endColumn": 8,
                  "snippet": {
                    "text": "T}\numount\tbuildah-umount(1)\tT{\nUnmount a working container's root file system.\nT}\nunshare\tbuildah-unshare(1)\tT{\nLaunch a command in a user namespace with modified ID mappings.\nT}\nversion\tbuildah-version(1)\tT{\n",
                    "rendered": {
                      "text": "T}\numount\tbuildah-umount(1)\tT{\nUnmount a working container's root file system.\nT}\nunshare\tbuildah-unshare(1)\tT{\nLaunch a command in a user namespace with modified ID mappings.\nT}\nversion\tbuildah-version(1)\tT{\n",
                      "markdown": "`T}\numount\tbuildah-umount(1)\tT{\nUnmount a working container's root file system.\nT}\nunshare\tbuildah-unshare(1)\tT{\nLaunch a command in a user namespace with modified ID mappings.\nT}\nversion\tbuildah-version(1)\tT{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah.1"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 48,
                  "endLine": 236,
                  "endColumn": 55,
                  "snippet": {
                    "text": "Mount the working container's root filesystem.\nT}\nprune\tbuildah-prune(1)\tT{\nCleanup intermediate images as well as build and mount cache.\nT}\npull\tbuildah-pull(1)\tT{\nPull an image from the specified location.\n",
                    "rendered": {
                      "text": "Mount the working container's root filesystem.\nT}\nprune\tbuildah-prune(1)\tT{\nCleanup intermediate images as well as build and mount cache.\nT}\npull\tbuildah-pull(1)\tT{\nPull an image from the specified location.\n",
                      "markdown": "`Mount the working container's root filesystem.\nT}\nprune\tbuildah-prune(1)\tT{\nCleanup intermediate images as well as build and mount cache.\nT}\npull\tbuildah-pull(1)\tT{\nPull an image from the specified location.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah.1"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 25,
                  "endLine": 233,
                  "endColumn": 6,
                  "snippet": {
                    "text": "mkcw\tbuildah-mkcw(1)\tT{\nConvert a conventional container image into a confidential workload image.\nT}\nmount\tbuildah-mount(1)\tT{\nMount the working container's root filesystem.\nT}\nprune\tbuildah-prune(1)\tT{\nCleanup intermediate images as well as build and mount cache.\n",
                    "rendered": {
                      "text": "mkcw\tbuildah-mkcw(1)\tT{\nConvert a conventional container image into a confidential workload image.\nT}\nmount\tbuildah-mount(1)\tT{\nMount the working container's root filesystem.\nT}\nprune\tbuildah-prune(1)\tT{\nCleanup intermediate images as well as build and mount cache.\n",
                      "markdown": "`mkcw\tbuildah-mkcw(1)\tT{\nConvert a conventional container image into a confidential workload image.\nT}\nmount\tbuildah-mount(1)\tT{\nMount the working container's root filesystem.\nT}\nprune\tbuildah-prune(1)\tT{\nCleanup intermediate images as well as build and mount cache.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah.1"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 2,
                  "endLine": 232,
                  "endColumn": 6,
                  "snippet": {
                    "text": "T}\nmkcw\tbuildah-mkcw(1)\tT{\nConvert a conventional container image into a confidential workload image.\nT}\nmount\tbuildah-mount(1)\tT{\nMount the working container's root filesystem.\nT}\nprune\tbuildah-prune(1)\tT{\n",
                    "rendered": {
                      "text": "T}\nmkcw\tbuildah-mkcw(1)\tT{\nConvert a conventional container image into a confidential workload image.\nT}\nmount\tbuildah-mount(1)\tT{\nMount the working container's root filesystem.\nT}\nprune\tbuildah-prune(1)\tT{\n",
                      "markdown": "`T}\nmkcw\tbuildah-mkcw(1)\tT{\nConvert a conventional container image into a confidential workload image.\nT}\nmount\tbuildah-mount(1)\tT{\nMount the working container's root filesystem.\nT}\nprune\tbuildah-prune(1)\tT{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah.1"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 49,
                  "endLine": 188,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n.SH Environment Variables\n.PP\nBuildah can set up environment variables from the env entry in the [engine] table in the containers.conf(5). These variables can be overridden by passing environment variables before the \\fB\\fCbuildah\\fR commands.\n\n.SH COMMANDS\n.TS\n",
                    "rendered": {
                      "text": "\n.SH Environment Variables\n.PP\nBuildah can set up environment variables from the env entry in the [engine] table in the containers.conf(5). These variables can be overridden by passing environment variables before the \\fB\\fCbuildah\\fR commands.\n\n.SH COMMANDS\n.TS\n",
                      "markdown": "`\n.SH Environment Variables\n.PP\nBuildah can set up environment variables from the env entry in the [engine] table in the containers.conf(5). These variables can be overridden by passing environment variables before the \\fB\\fCbuildah\\fR commands.\n\n.SH COMMANDS\n.TS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah.1"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n.nf\n* Create a working container, either from scratch or using an image as a starting point.\n* Mount a working container's root filesystem for manipulation.\n* Unmount a working container's root filesystem.\n* Use the updated contents of a container's root filesystem as a filesystem layer to create a new image.\n* Delete a working container or an image.\n",
                    "rendered": {
                      "text": "\n.nf\n* Create a working container, either from scratch or using an image as a starting point.\n* Mount a working container's root filesystem for manipulation.\n* Unmount a working container's root filesystem.\n* Use the updated contents of a container's root filesystem as a filesystem layer to create a new image.\n* Delete a working container or an image.\n",
                      "markdown": "`\n.nf\n* Create a working container, either from scratch or using an image as a starting point.\n* Mount a working container's root filesystem for manipulation.\n* Unmount a working container's root filesystem.\n* Use the updated contents of a container's root filesystem as a filesystem layer to create a new image.\n* Delete a working container or an image.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-version.1"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 105,
                  "endLine": 13,
                  "endColumn": 110,
                  "snippet": {
                    "text": "\n.SH DESCRIPTION\n.PP\nShows the following information: Version, Go Version, Image Spec, Runtime Spec, CNI Spec, libcni Version, Git Commit, Build Time, OS, and Architecture.\n\n.SH OPTIONS\n.PP\n",
                    "rendered": {
                      "text": "\n.SH DESCRIPTION\n.PP\nShows the following information: Version, Go Version, Image Spec, Runtime Spec, CNI Spec, libcni Version, Git Commit, Build Time, OS, and Architecture.\n\n.SH OPTIONS\n.PP\n",
                      "markdown": "`\n.SH DESCRIPTION\n.PP\nShows the following information: Version, Go Version, Image Spec, Runtime Spec, CNI Spec, libcni Version, Git Commit, Build Time, OS, and Architecture.\n\n.SH OPTIONS\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 530,
                  "startColumn": 14,
                  "endLine": 530,
                  "endColumn": 22,
                  "snippet": {
                    "text": "buildah run containerID -- ps -auxw\n\n.PP\nbuildah run --hostname myhost containerID -- ps -auxw\n\n.PP\nbuildah run containerID -- sh -c 'echo $PATH'\n",
                    "rendered": {
                      "text": "buildah run containerID -- ps -auxw\n\n.PP\nbuildah run --hostname myhost containerID -- ps -auxw\n\n.PP\nbuildah run containerID -- sh -c 'echo $PATH'\n",
                      "markdown": "`buildah run containerID -- ps -auxw\n\n.PP\nbuildah run --hostname myhost containerID -- ps -auxw\n\n.PP\nbuildah run containerID -- sh -c 'echo $PATH'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 160,
                  "endLine": 325,
                  "endColumn": 168,
                  "snippet": {
                    "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                    "rendered": {
                      "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                      "markdown": "`Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 113,
                  "endLine": 325,
                  "endColumn": 121,
                  "snippet": {
                    "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                    "rendered": {
                      "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                      "markdown": "`Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 85,
                  "endLine": 325,
                  "endColumn": 93,
                  "snippet": {
                    "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                    "rendered": {
                      "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                      "markdown": "`Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 40,
                  "endLine": 325,
                  "endColumn": 48,
                  "snippet": {
                    "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                    "rendered": {
                      "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                      "markdown": "`Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 26,
                  "endLine": 322,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\\fB--no-hostname\\fP\n\n.PP\nDo not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n",
                    "rendered": {
                      "text": "\\fB--no-hostname\\fP\n\n.PP\nDo not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n",
                      "markdown": "`\\fB--no-hostname\\fP\n\n.PP\nDo not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 8,
                  "endLine": 319,
                  "endColumn": 16,
                  "snippet": {
                    "text": ".RE\n\n.PP\n\\fB--no-hostname\\fP\n\n.PP\nDo not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n",
                    "rendered": {
                      "text": ".RE\n\n.PP\n\\fB--no-hostname\\fP\n\n.PP\nDo not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n",
                      "markdown": "`.RE\n\n.PP\n\\fB--no-hostname\\fP\n\n.PP\nDo not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 8,
                  "endLine": 114,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\\fB--hostname\\fP\n\n.PP\nSet the hostname inside of the running container.\n\n.PP\n\\fB--ipc\\fP \\fIhow\\fP\n",
                    "rendered": {
                      "text": "\\fB--hostname\\fP\n\n.PP\nSet the hostname inside of the running container.\n\n.PP\n\\fB--ipc\\fP \\fIhow\\fP\n",
                      "markdown": "`\\fB--hostname\\fP\n\n.PP\nSet the hostname inside of the running container.\n\n.PP\n\\fB--ipc\\fP \\fIhow\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 5,
                  "endLine": 111,
                  "endColumn": 13,
                  "snippet": {
                    "text": "later calls to \\fB\\fCbuildah run\\fR or to the built image. Can be used multiple times.\n\n.PP\n\\fB--hostname\\fP\n\n.PP\nSet the hostname inside of the running container.\n",
                    "rendered": {
                      "text": "later calls to \\fB\\fCbuildah run\\fR or to the built image. Can be used multiple times.\n\n.PP\n\\fB--hostname\\fP\n\n.PP\nSet the hostname inside of the running container.\n",
                      "markdown": "`later calls to \\fB\\fCbuildah run\\fR or to the built image. Can be used multiple times.\n\n.PP\n\\fB--hostname\\fP\n\n.PP\nSet the hostname inside of the running container.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 562,
                  "startColumn": 298,
                  "endLine": 562,
                  "endColumn": 302,
                  "snippet": {
                    "text": "\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n",
                    "rendered": {
                      "text": "\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n",
                      "markdown": "`\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 499,
                  "startColumn": 88,
                  "endLine": 500,
                  "endColumn": 3,
                  "snippet": {
                    "text": "e the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagat",
                    "rendered": {
                      "text": "e the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagat",
                      "markdown": "`e the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagat`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 499,
                  "startColumn": 28,
                  "endLine": 499,
                  "endColumn": 32,
                  "snippet": {
                    "text": "Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n",
                    "rendered": {
                      "text": "Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n",
                      "markdown": "`Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 2,
                  "endLine": 486,
                  "endColumn": 11,
                  "snippet": {
                    "text": " mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mo",
                    "rendered": {
                      "text": " mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mo",
                      "markdown": "` mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mo`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 49,
                  "endLine": 299,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\\fBpasta:--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,-m,1500,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\nequivalent to default slirp4netns(1) options: disable IPv6, assign\n\\fB\\fC10.0.2.0/24\\fR to the \\fB\\fCtap0\\fR interface in the container, with gateway\n\\fB\\fC10.0.2.3\\fR, enable DNS forwarder reachable at \\fB\\fC10.0.2.3\\fR, set MTU to 1500\nbytes, disable NDP, DHCPv6 and DHCP support.\n.IP \\(bu 2\n\\fBpasta:-I,tap0,--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\n",
                    "rendered": {
                      "text": "\\fBpasta:--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,-m,1500,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\nequivalent to default slirp4netns(1) options: disable IPv6, assign\n\\fB\\fC10.0.2.0/24\\fR to the \\fB\\fCtap0\\fR interface in the container, with gateway\n\\fB\\fC10.0.2.3\\fR, enable DNS forwarder reachable at \\fB\\fC10.0.2.3\\fR, set MTU to 1500\nbytes, disable NDP, DHCPv6 and DHCP support.\n.IP \\(bu 2\n\\fBpasta:-I,tap0,--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\n",
                      "markdown": "`\\fBpasta:--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,-m,1500,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\nequivalent to default slirp4netns(1) options: disable IPv6, assign\n\\fB\\fC10.0.2.0/24\\fR to the \\fB\\fCtap0\\fR interface in the container, with gateway\n\\fB\\fC10.0.2.3\\fR, enable DNS forwarder reachable at \\fB\\fC10.0.2.3\\fR, set MTU to 1500\nbytes, disable NDP, DHCPv6 and DHCP support.\n.IP \\(bu 2\n\\fBpasta:-I,tap0,--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 73,
                  "endLine": 138,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\\fI--no-new-keyring\\fP added to its \\fIcreate\\fP invocation, reusing the host's network\nand UTS namespaces, and creating private IPC, PID, mount, and user namespaces;\nthe default for unprivileged users), and \\fIchroot\\fP (an internal wrapper that\nleans more toward chroot(1) than container technology, reusing the host's\ncontrol group, network, IPC, and PID namespaces, and creating private mount and\nUTS namespaces, and creating user namespaces only when they're required for ID\nmapping).\n\n",
                    "rendered": {
                      "text": "\\fI--no-new-keyring\\fP added to its \\fIcreate\\fP invocation, reusing the host's network\nand UTS namespaces, and creating private IPC, PID, mount, and user namespaces;\nthe default for unprivileged users), and \\fIchroot\\fP (an internal wrapper that\nleans more toward chroot(1) than container technology, reusing the host's\ncontrol group, network, IPC, and PID namespaces, and creating private mount and\nUTS namespaces, and creating user namespaces only when they're required for ID\nmapping).\n\n",
                      "markdown": "`\\fI--no-new-keyring\\fP added to its \\fIcreate\\fP invocation, reusing the host's network\nand UTS namespaces, and creating private IPC, PID, mount, and user namespaces;\nthe default for unprivileged users), and \\fIchroot\\fP (an internal wrapper that\nleans more toward chroot(1) than container technology, reusing the host's\ncontrol group, network, IPC, and PID namespaces, and creating private mount and\nUTS namespaces, and creating user namespaces only when they're required for ID\nmapping).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 562,
                  "startColumn": 119,
                  "endLine": 562,
                  "endColumn": 126,
                  "snippet": {
                    "text": "\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n",
                    "rendered": {
                      "text": "\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n",
                      "markdown": "`\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 510,
                  "startColumn": 71,
                  "endLine": 510,
                  "endColumn": 78,
                  "snippet": {
                    "text": "example, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.PP\n",
                    "rendered": {
                      "text": "example, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.PP\n",
                      "markdown": "`example, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 509,
                  "startColumn": 95,
                  "endLine": 510,
                  "endColumn": 6,
                  "snippet": {
                    "text": "To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.PP\n",
                    "rendered": {
                      "text": "To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.PP\n",
                      "markdown": "`To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 509,
                  "startColumn": 40,
                  "endLine": 509,
                  "endColumn": 47,
                  "snippet": {
                    "text": "To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n",
                    "rendered": {
                      "text": "To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n",
                      "markdown": "`To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 507,
                  "startColumn": 16,
                  "endLine": 507,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n",
                    "rendered": {
                      "text": "\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n",
                      "markdown": "`\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 506,
                  "startColumn": 37,
                  "endLine": 506,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\n",
                    "rendered": {
                      "text": "\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\n",
                      "markdown": "`\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 502,
                  "startColumn": 31,
                  "endLine": 502,
                  "endColumn": 38,
                  "snippet": {
                    "text": "can be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n",
                    "rendered": {
                      "text": "can be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n",
                      "markdown": "`can be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 501,
                  "startColumn": 81,
                  "endLine": 501,
                  "endColumn": 88,
                  "snippet": {
                    "text": "properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                    "rendered": {
                      "text": "properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                      "markdown": "`properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 501,
                  "startColumn": 27,
                  "endLine": 501,
                  "endColumn": 34,
                  "snippet": {
                    "text": "properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                    "rendered": {
                      "text": "properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                      "markdown": "`properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 499,
                  "startColumn": 35,
                  "endLine": 499,
                  "endColumn": 42,
                  "snippet": {
                    "text": "Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n",
                    "rendered": {
                      "text": "Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n",
                      "markdown": "`Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 498,
                  "startColumn": 84,
                  "endLine": 498,
                  "endColumn": 91,
                  "snippet": {
                    "text": ".PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\n",
                    "rendered": {
                      "text": ".PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\n",
                      "markdown": "`.PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 496,
                  "startColumn": 52,
                  "endLine": 496,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\\[la]#Footnote1\\[ra]\n\n.PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\n",
                    "rendered": {
                      "text": "\\[la]#Footnote1\\[ra]\n\n.PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\n",
                      "markdown": "`\\[la]#Footnote1\\[ra]\n\n.PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 10,
                  "endLine": 492,
                  "endColumn": 17,
                  "snippet": {
                    "text": "named volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n",
                    "rendered": {
                      "text": "named volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n",
                      "markdown": "`named volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 491,
                  "startColumn": 26,
                  "endLine": 491,
                  "endColumn": 33,
                  "snippet": {
                    "text": "be specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                    "rendered": {
                      "text": "be specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                      "markdown": "`be specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 489,
                  "startColumn": 75,
                  "endLine": 489,
                  "endColumn": 82,
                  "snippet": {
                    "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                    "rendered": {
                      "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                      "markdown": "`To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 489,
                  "startColumn": 58,
                  "endLine": 489,
                  "endColumn": 65,
                  "snippet": {
                    "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                    "rendered": {
                      "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                      "markdown": "`To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 489,
                  "startColumn": 18,
                  "endLine": 489,
                  "endColumn": 25,
                  "snippet": {
                    "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                    "rendered": {
                      "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                      "markdown": "`To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 14,
                  "endLine": 486,
                  "endColumn": 21,
                  "snippet": {
                    "text": "leted inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point ",
                    "rendered": {
                      "text": "leted inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point ",
                      "markdown": "`leted inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 484,
                  "startColumn": 62,
                  "endLine": 484,
                  "endColumn": 69,
                  "snippet": {
                    "text": ".PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\n",
                    "rendered": {
                      "text": ".PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\n",
                      "markdown": "`.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 484,
                  "startColumn": 3,
                  "endLine": 484,
                  "endColumn": 10,
                  "snippet": {
                    "text": ".PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\n",
                    "rendered": {
                      "text": ".PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\n",
                      "markdown": "`.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 482,
                  "startColumn": 8,
                  "endLine": 482,
                  "endColumn": 15,
                  "snippet": {
                    "text": "be changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\n",
                    "rendered": {
                      "text": "be changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\n",
                      "markdown": "`be changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 33,
                  "endLine": 479,
                  "endColumn": 40,
                  "snippet": {
                    "text": ".PP\nBy default bind mounted volumes are \\fB\\fCprivate\\fR\\&. That means any mounts done\ninside container will not be visible on the host and vice versa. This behavior can\nbe changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\n",
                    "rendered": {
                      "text": ".PP\nBy default bind mounted volumes are \\fB\\fCprivate\\fR\\&. That means any mounts done\ninside container will not be visible on the host and vice versa. This behavior can\nbe changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\n",
                      "markdown": "`.PP\nBy default bind mounted volumes are \\fB\\fCprivate\\fR\\&. That means any mounts done\ninside container will not be visible on the host and vice versa. This behavior can\nbe changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 445,
                  "startColumn": 66,
                  "endLine": 445,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\\fB\\fCWrite Protected Volume Mounts\\fR\n\n.PP\nYou can add the \\fB\\fC:ro\\fR or \\fB\\fC:rw\\fR suffix to a volume to mount it read-only or\nread-write mode, respectively. By default, the volumes are mounted read-write.\nSee examples.\n\n",
                    "rendered": {
                      "text": "\\fB\\fCWrite Protected Volume Mounts\\fR\n\n.PP\nYou can add the \\fB\\fC:ro\\fR or \\fB\\fC:rw\\fR suffix to a volume to mount it read-only or\nread-write mode, respectively. By default, the volumes are mounted read-write.\nSee examples.\n\n",
                      "markdown": "`\\fB\\fCWrite Protected Volume Mounts\\fR\n\n.PP\nYou can add the \\fB\\fC:ro\\fR or \\fB\\fC:rw\\fR suffix to a volume to mount it read-only or\nread-write mode, respectively. By default, the volumes are mounted read-write.\nSee examples.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 45,
                  "endLine": 438,
                  "endColumn": 52,
                  "snippet": {
                    "text": "and bind mounts that into the container.\n\n.PP\nYou can specify multiple  \\fB-v\\fP options to mount one or more mounts to a\ncontainer.\n\n.PP\n",
                    "rendered": {
                      "text": "and bind mounts that into the container.\n\n.PP\nYou can specify multiple  \\fB-v\\fP options to mount one or more mounts to a\ncontainer.\n\n.PP\n",
                      "markdown": "`and bind mounts that into the container.\n\n.PP\nYou can specify multiple  \\fB-v\\fP options to mount one or more mounts to a\ncontainer.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 25,
                  "endLine": 342,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n.PP\nDo not use pivot root to jail process inside rootfs. This should be used\nwhenever the rootfs is on top of a ramdisk.\n\n.PP\nNote: You can make this option the default by setting the BUILDAH_NOPIVOT\n",
                    "rendered": {
                      "text": "\n.PP\nDo not use pivot root to jail process inside rootfs. This should be used\nwhenever the rootfs is on top of a ramdisk.\n\n.PP\nNote: You can make this option the default by setting the BUILDAH_NOPIVOT\n",
                      "markdown": "`\n.PP\nDo not use pivot root to jail process inside rootfs. This should be used\nwhenever the rootfs is on top of a ramdisk.\n\n.PP\nNote: You can make this option the default by setting the BUILDAH_NOPIVOT\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 72,
                  "endLine": 334,
                  "endColumn": 76,
                  "snippet": {
                    "text": "Do not create the \\fI/etc/hosts\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages \\fI/etc/hosts\\fP, adding the container's own IP address.\n\\fB--no-hosts\\fP disables this, and the image's \\fI/etc/hosts\\fP will be preserved unmodified.\n\n.PP\n",
                    "rendered": {
                      "text": "Do not create the \\fI/etc/hosts\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages \\fI/etc/hosts\\fP, adding the container's own IP address.\n\\fB--no-hosts\\fP disables this, and the image's \\fI/etc/hosts\\fP will be preserved unmodified.\n\n.PP\n",
                      "markdown": "`Do not create the \\fI/etc/hosts\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages \\fI/etc/hosts\\fP, adding the container's own IP address.\n\\fB--no-hosts\\fP disables this, and the image's \\fI/etc/hosts\\fP will be preserved unmodified.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 6,
                  "endLine": 272,
                  "endColumn": 10,
                  "snippet": {
                    "text": "name, are copied from the host. If port forwarding isn't configured, ports\nare forwarded dynamically as services are bound on either side (init\nnamespace or container namespace). Port forwarding preserves the original\nsource IP address. Options described in pasta(1) can be specified as\ncomma-separated arguments.\n.br\nIn terms of pasta(1) options, \\fB--config-net\\fP is given by default, in\n",
                    "rendered": {
                      "text": "name, are copied from the host. If port forwarding isn't configured, ports\nare forwarded dynamically as services are bound on either side (init\nnamespace or container namespace). Port forwarding preserves the original\nsource IP address. Options described in pasta(1) can be specified as\ncomma-separated arguments.\n.br\nIn terms of pasta(1) options, \\fB--config-net\\fP is given by default, in\n",
                      "markdown": "`name, are copied from the host. If port forwarding isn't configured, ports\nare forwarded dynamically as services are bound on either side (init\nnamespace or container namespace). Port forwarding preserves the original\nsource IP address. Options described in pasta(1) can be specified as\ncomma-separated arguments.\n.br\nIn terms of pasta(1) options, \\fB--config-net\\fP is given by default, in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 24,
                  "endLine": 248,
                  "endColumn": 28,
                  "snippet": {
                    "text": ".IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n\\fBcidr=CIDR\\fP: Specify ip range to use for this network. (Default is \\fB\\fC10.0.2.0/24\\fR).\n.IP \\(bu 2\n\\fBenable_ipv6=true|false\\fP: Enable IPv6. Default is true. (Required for \\fB\\fCoutbound_addr6\\fR).\n.IP \\(bu 2\n",
                    "rendered": {
                      "text": ".IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n\\fBcidr=CIDR\\fP: Specify ip range to use for this network. (Default is \\fB\\fC10.0.2.0/24\\fR).\n.IP \\(bu 2\n\\fBenable_ipv6=true|false\\fP: Enable IPv6. Default is true. (Required for \\fB\\fCoutbound_addr6\\fR).\n.IP \\(bu 2\n",
                      "markdown": "`.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n\\fBcidr=CIDR\\fP: Specify ip range to use for this network. (Default is \\fB\\fC10.0.2.0/24\\fR).\n.IP \\(bu 2\n\\fBenable_ipv6=true|false\\fP: Enable IPv6. Default is true. (Required for \\fB\\fCoutbound_addr6\\fR).\n.IP \\(bu 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 120,
                  "endLine": 244,
                  "endColumn": 124,
                  "snippet": {
                    "text": "\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n",
                    "rendered": {
                      "text": "\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n",
                      "markdown": "`\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 82,
                  "endLine": 244,
                  "endColumn": 86,
                  "snippet": {
                    "text": "\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n",
                    "rendered": {
                      "text": "\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n",
                      "markdown": "`\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 57,
                  "endLine": 193,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\n          · tmpfs-mode: File mode of the tmpfs in octal. (e.g. 700 or 0700.) Defaults to 1777 in Linux.\n\n          · tmpcopyup: Path that is shadowed by the tmpfs mount is recursively copied up to the tmpfs itself.\n\n   Options specific to secret:\n\n",
                    "rendered": {
                      "text": "\n          · tmpfs-mode: File mode of the tmpfs in octal. (e.g. 700 or 0700.) Defaults to 1777 in Linux.\n\n          · tmpcopyup: Path that is shadowed by the tmpfs mount is recursively copied up to the tmpfs itself.\n\n   Options specific to secret:\n\n",
                      "markdown": "`\n          · tmpfs-mode: File mode of the tmpfs in octal. (e.g. 700 or 0700.) Defaults to 1777 in Linux.\n\n          · tmpcopyup: Path that is shadowed by the tmpfs mount is recursively copied up to the tmpfs itself.\n\n   Options specific to secret:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 41,
                  "endLine": 189,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n   Options specific to tmpfs:\n\n          · tmpfs-size: Size of the tmpfs mount in bytes. Unlimited by default in Linux.\n\n          · tmpfs-mode: File mode of the tmpfs in octal. (e.g. 700 or 0700.) Defaults to 1777 in Linux.\n\n",
                    "rendered": {
                      "text": "\n   Options specific to tmpfs:\n\n          · tmpfs-size: Size of the tmpfs mount in bytes. Unlimited by default in Linux.\n\n          · tmpfs-mode: File mode of the tmpfs in octal. (e.g. 700 or 0700.) Defaults to 1777 in Linux.\n\n",
                      "markdown": "`\n   Options specific to tmpfs:\n\n          · tmpfs-size: Size of the tmpfs mount in bytes. Unlimited by default in Linux.\n\n          · tmpfs-mode: File mode of the tmpfs in octal. (e.g. 700 or 0700.) Defaults to 1777 in Linux.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 37,
                  "endLine": 171,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n          · src, source: mount source spec for bind and volume. Mandatory for bind. If `from` is specified, `src` is the subpath in the `from` field.\n\n          · dst, destination, target: mount destination spec.\n\n          · ro, read-only: true or false (default).\n\n",
                    "rendered": {
                      "text": "\n          · src, source: mount source spec for bind and volume. Mandatory for bind. If `from` is specified, `src` is the subpath in the `from` field.\n\n          · dst, destination, target: mount destination spec.\n\n          · ro, read-only: true or false (default).\n\n",
                      "markdown": "`\n          · src, source: mount source spec for bind and volume. Mandatory for bind. If `from` is specified, `src` is the subpath in the `from` field.\n\n          · dst, destination, target: mount destination spec.\n\n          · ro, read-only: true or false (default).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 24,
                  "endLine": 169,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n   Common Options:\n\n          · src, source: mount source spec for bind and volume. Mandatory for bind. If `from` is specified, `src` is the subpath in the `from` field.\n\n          · dst, destination, target: mount destination spec.\n\n",
                    "rendered": {
                      "text": "\n   Common Options:\n\n          · src, source: mount source spec for bind and volume. Mandatory for bind. If `from` is specified, `src` is the subpath in the `from` field.\n\n          · dst, destination, target: mount destination spec.\n\n",
                      "markdown": "`\n   Common Options:\n\n          · src, source: mount source spec for bind and volume. Mandatory for bind. If `from` is specified, `src` is the subpath in the `from` field.\n\n          · dst, destination, target: mount destination spec.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 17,
                  "endLine": 153,
                  "endColumn": 24,
                  "snippet": {
                    "text": "Attach a filesystem mount to the container\n\n.PP\nCurrent supported mount TYPES are bind, cache, secret and tmpfs.\n\n.PP\n.RS\n",
                    "rendered": {
                      "text": "Attach a filesystem mount to the container\n\n.PP\nCurrent supported mount TYPES are bind, cache, secret and tmpfs.\n\n.PP\n.RS\n",
                      "markdown": "`Attach a filesystem mount to the container\n\n.PP\nCurrent supported mount TYPES are bind, cache, secret and tmpfs.\n\n.PP\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 19,
                  "endLine": 150,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\\fB--mount\\fP=\\fItype=TYPE,TYPE-SPECIFIC-OPTION[,...]\\fP\n\n.PP\nAttach a filesystem mount to the container\n\n.PP\nCurrent supported mount TYPES are bind, cache, secret and tmpfs.\n",
                    "rendered": {
                      "text": "\\fB--mount\\fP=\\fItype=TYPE,TYPE-SPECIFIC-OPTION[,...]\\fP\n\n.PP\nAttach a filesystem mount to the container\n\n.PP\nCurrent supported mount TYPES are bind, cache, secret and tmpfs.\n",
                      "markdown": "`\\fB--mount\\fP=\\fItype=TYPE,TYPE-SPECIFIC-OPTION[,...]\\fP\n\n.PP\nAttach a filesystem mount to the container\n\n.PP\nCurrent supported mount TYPES are bind, cache, secret and tmpfs.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-run.1"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 69,
                  "endLine": 138,
                  "endColumn": 76,
                  "snippet": {
                    "text": "and UTS namespaces, and creating private IPC, PID, mount, and user namespaces;\nthe default for unprivileged users), and \\fIchroot\\fP (an internal wrapper that\nleans more toward chroot(1) than container technology, reusing the host's\ncontrol group, network, IPC, and PID namespaces, and creating private mount and\nUTS namespaces, and creating user namespaces only when they're required for ID\nmapping).\n\n",
                    "rendered": {
                      "text": "and UTS namespaces, and creating private IPC, PID, mount, and user namespaces;\nthe default for unprivileged users), and \\fIchroot\\fP (an internal wrapper that\nleans more toward chroot(1) than container technology, reusing the host's\ncontrol group, network, IPC, and PID namespaces, and creating private mount and\nUTS namespaces, and creating user namespaces only when they're required for ID\nmapping).\n\n",
                      "markdown": "`and UTS namespaces, and creating private IPC, PID, mount, and user namespaces;\nthe default for unprivileged users), and \\fIchroot\\fP (an internal wrapper that\nleans more toward chroot(1) than container technology, reusing the host's\ncontrol group, network, IPC, and PID namespaces, and creating private mount and\nUTS namespaces, and creating user namespaces only when they're required for ID\nmapping).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1733,
                  "startColumn": 102,
                  "endLine": 1733,
                  "endColumn": 110,
                  "snippet": {
                    "text": "buildah build -f Containerfile --runtime-flag debug .\n\n.PP\nbuildah build --authfile /tmp/auths/myauths.json --cert-dir ~/auth --tls-verify=true --creds=username:password -t imageName -f Containerfile.simple .\n\n.PP\nbuildah build --memory 40m --cpu-period 10000 --cpu-quota 50000 --ulimit nofile=1024:1028 -t imageName .\n",
                    "rendered": {
                      "text": "buildah build -f Containerfile --runtime-flag debug .\n\n.PP\nbuildah build --authfile /tmp/auths/myauths.json --cert-dir ~/auth --tls-verify=true --creds=username:password -t imageName -f Containerfile.simple .\n\n.PP\nbuildah build --memory 40m --cpu-period 10000 --cpu-quota 50000 --ulimit nofile=1024:1028 -t imageName .\n",
                      "markdown": "`buildah build -f Containerfile --runtime-flag debug .\n\n.PP\nbuildah build --authfile /tmp/auths/myauths.json --cert-dir ~/auth --tls-verify=true --creds=username:password -t imageName -f Containerfile.simple .\n\n.PP\nbuildah build --memory 40m --cpu-period 10000 --cpu-quota 50000 --ulimit nofile=1024:1028 -t imageName .\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 27,
                  "endLine": 416,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--cw\\fP \\fIoptions\\fP\n",
                    "rendered": {
                      "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--cw\\fP \\fIoptions\\fP\n",
                      "markdown": "`.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--cw\\fP \\fIoptions\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 15,
                  "endLine": 414,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                    "rendered": {
                      "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                      "markdown": "`\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 663,
                  "startColumn": 33,
                  "endLine": 663,
                  "endColumn": 68,
                  "snippet": {
                    "text": ".PP\nBy default proxy environment variables are passed into the container if set\nfor the buildah process.  This can be disabled by setting the \\fB\\fC--http-proxy\\fR\noption to \\fB\\fCfalse\\fR\\&.  The environment variables passed in include \\fB\\fChttp_proxy\\fR,\n\\fB\\fChttps_proxy\\fR, \\fB\\fCftp_proxy\\fR, \\fB\\fCno_proxy\\fR, and also the upper case versions of\nthose.\n\n",
                    "rendered": {
                      "text": ".PP\nBy default proxy environment variables are passed into the container if set\nfor the buildah process.  This can be disabled by setting the \\fB\\fC--http-proxy\\fR\noption to \\fB\\fCfalse\\fR\\&.  The environment variables passed in include \\fB\\fChttp_proxy\\fR,\n\\fB\\fChttps_proxy\\fR, \\fB\\fCftp_proxy\\fR, \\fB\\fCno_proxy\\fR, and also the upper case versions of\nthose.\n\n",
                      "markdown": "`.PP\nBy default proxy environment variables are passed into the container if set\nfor the buildah process.  This can be disabled by setting the \\fB\\fC--http-proxy\\fR\noption to \\fB\\fCfalse\\fR\\&.  The environment variables passed in include \\fB\\fChttp_proxy\\fR,\n\\fB\\fChttps_proxy\\fR, \\fB\\fCftp_proxy\\fR, \\fB\\fCno_proxy\\fR, and also the upper case versions of\nthose.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 924,
                  "startColumn": 160,
                  "endLine": 924,
                  "endColumn": 168,
                  "snippet": {
                    "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                    "rendered": {
                      "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                      "markdown": "`Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 924,
                  "startColumn": 113,
                  "endLine": 924,
                  "endColumn": 121,
                  "snippet": {
                    "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                    "rendered": {
                      "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                      "markdown": "`Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 924,
                  "startColumn": 85,
                  "endLine": 924,
                  "endColumn": 93,
                  "snippet": {
                    "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                    "rendered": {
                      "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                      "markdown": "`Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 924,
                  "startColumn": 40,
                  "endLine": 924,
                  "endColumn": 48,
                  "snippet": {
                    "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                    "rendered": {
                      "text": "Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n",
                      "markdown": "`Do not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n\n.PP\n\\fB--no-hosts\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 921,
                  "startColumn": 26,
                  "endLine": 921,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\\fB--no-hostname\\fP\n\n.PP\nDo not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n",
                    "rendered": {
                      "text": "\\fB--no-hostname\\fP\n\n.PP\nDo not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n",
                      "markdown": "`\\fB--no-hostname\\fP\n\n.PP\nDo not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages the \\fI/etc/hostname\\fP file, adding the container's own hostname.  When the \\fB--no-hostname\\fP option is set, the image's \\fI/etc/hostname\\fP will be preserved unmodified if it exists.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 918,
                  "startColumn": 8,
                  "endLine": 918,
                  "endColumn": 16,
                  "snippet": {
                    "text": "Do not use existing cached images for the container build. Build from the start with a new set of cached layers.\n\n.PP\n\\fB--no-hostname\\fP\n\n.PP\nDo not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n",
                    "rendered": {
                      "text": "Do not use existing cached images for the container build. Build from the start with a new set of cached layers.\n\n.PP\n\\fB--no-hostname\\fP\n\n.PP\nDo not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n",
                      "markdown": "`Do not use existing cached images for the container build. Build from the start with a new set of cached layers.\n\n.PP\n\\fB--no-hostname\\fP\n\n.PP\nDo not create the \\fI/etc/hostname\\fP file in the container for RUN instructions.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 40,
                  "endLine": 46,
                  "endColumn": 48,
                  "snippet": {
                    "text": "Add a custom host-to-IP mapping (host:ip)\n\n.PP\nAdd a line to /etc/hosts. The format is hostname:ip. The \\fB--add-host\\fP option can be set multiple times. Conflicts with the --no-hosts option.\n\n.PP\n\\fB--all-platforms\\fP\n",
                    "rendered": {
                      "text": "Add a custom host-to-IP mapping (host:ip)\n\n.PP\nAdd a line to /etc/hosts. The format is hostname:ip. The \\fB--add-host\\fP option can be set multiple times. Conflicts with the --no-hosts option.\n\n.PP\n\\fB--all-platforms\\fP\n",
                      "markdown": "`Add a custom host-to-IP mapping (host:ip)\n\n.PP\nAdd a line to /etc/hosts. The format is hostname:ip. The \\fB--add-host\\fP option can be set multiple times. Conflicts with the --no-hosts option.\n\n.PP\n\\fB--all-platforms\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1954,
                  "startColumn": 298,
                  "endLine": 1954,
                  "endColumn": 302,
                  "snippet": {
                    "text": "\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n",
                    "rendered": {
                      "text": "\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n",
                      "markdown": "`\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1836,
                  "startColumn": 129,
                  "endLine": 1836,
                  "endColumn": 133,
                  "snippet": {
                    "text": "\n.SS Building an image using a URL to a tarball'ed context\n.PP\nBuildah will fetch the tarball archive, decompress it and use its contents as the build context.  The Containerfile or Dockerfile at the root of the archive and the rest of the archive will get used as the context of the build. If you pass an -f PATH/Containerfile option as well, the system will look for that file inside the contents of the tarball.\n\n.PP\nbuildah build -f dev/Containerfile https://10.10.10.1/buildah/context.tar.gz\n",
                    "rendered": {
                      "text": "\n.SS Building an image using a URL to a tarball'ed context\n.PP\nBuildah will fetch the tarball archive, decompress it and use its contents as the build context.  The Containerfile or Dockerfile at the root of the archive and the rest of the archive will get used as the context of the build. If you pass an -f PATH/Containerfile option as well, the system will look for that file inside the contents of the tarball.\n\n.PP\nbuildah build -f dev/Containerfile https://10.10.10.1/buildah/context.tar.gz\n",
                      "markdown": "`\n.SS Building an image using a URL to a tarball'ed context\n.PP\nBuildah will fetch the tarball archive, decompress it and use its contents as the build context.  The Containerfile or Dockerfile at the root of the archive and the rest of the archive will get used as the context of the build. If you pass an -f PATH/Containerfile option as well, the system will look for that file inside the contents of the tarball.\n\n.PP\nbuildah build -f dev/Containerfile https://10.10.10.1/buildah/context.tar.gz\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1826,
                  "startColumn": 115,
                  "endLine": 1826,
                  "endColumn": 119,
                  "snippet": {
                    "text": "\n.SS Building an image using a URL\n.PP\nThis will clone the specified GitHub repository from the URL and use it as context. The Containerfile or Dockerfile at the root of the repository is used as the context of the build. This only works if the GitHub repository is a dedicated repository.\n\n.PP\nbuildah build https://github.com/containers/PodmanHello.git\n",
                    "rendered": {
                      "text": "\n.SS Building an image using a URL\n.PP\nThis will clone the specified GitHub repository from the URL and use it as context. The Containerfile or Dockerfile at the root of the repository is used as the context of the build. This only works if the GitHub repository is a dedicated repository.\n\n.PP\nbuildah build https://github.com/containers/PodmanHello.git\n",
                      "markdown": "`\n.SS Building an image using a URL\n.PP\nThis will clone the specified GitHub repository from the URL and use it as context. The Containerfile or Dockerfile at the root of the repository is used as the context of the build. This only works if the GitHub repository is a dedicated repository.\n\n.PP\nbuildah build https://github.com/containers/PodmanHello.git\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1676,
                  "startColumn": 58,
                  "endLine": 1676,
                  "endColumn": 62,
                  "snippet": {
                    "text": ".SH BUILD TIME VARIABLES\n.PP\nThe ENV instruction in a Containerfile can be used to define variable values.  When the image\nis built, the values will persist in the container image.  At times it is more convenient to\nchange the values in the Containerfile via a command-line option rather than changing the\nvalues within the Containerfile itself.\n\n",
                    "rendered": {
                      "text": ".SH BUILD TIME VARIABLES\n.PP\nThe ENV instruction in a Containerfile can be used to define variable values.  When the image\nis built, the values will persist in the container image.  At times it is more convenient to\nchange the values in the Containerfile via a command-line option rather than changing the\nvalues within the Containerfile itself.\n\n",
                      "markdown": "`.SH BUILD TIME VARIABLES\n.PP\nThe ENV instruction in a Containerfile can be used to define variable values.  When the image\nis built, the values will persist in the container image.  At times it is more convenient to\nchange the values in the Containerfile via a command-line option rather than changing the\nvalues within the Containerfile itself.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1659,
                  "startColumn": 88,
                  "endLine": 1660,
                  "endColumn": 3,
                  "snippet": {
                    "text": "e the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagat",
                    "rendered": {
                      "text": "e the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagat",
                      "markdown": "`e the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagat`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1659,
                  "startColumn": 28,
                  "endLine": 1659,
                  "endColumn": 32,
                  "snippet": {
                    "text": "Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n",
                    "rendered": {
                      "text": "Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n",
                      "markdown": "`Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1646,
                  "startColumn": 2,
                  "endLine": 1646,
                  "endColumn": 11,
                  "snippet": {
                    "text": " mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mo",
                    "rendered": {
                      "text": " mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mo",
                      "markdown": "` mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mo`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1517,
                  "startColumn": 67,
                  "endLine": 1517,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\\fB--userns-uid-map-user\\fP \\fIuser\\fP\n\n.PP\nSpecifies that a UID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents, can be found in entries\nin the \\fB\\fC/etc/subuid\\fR file which correspond to the specified user.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\n",
                    "rendered": {
                      "text": "\\fB--userns-uid-map-user\\fP \\fIuser\\fP\n\n.PP\nSpecifies that a UID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents, can be found in entries\nin the \\fB\\fC/etc/subuid\\fR file which correspond to the specified user.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\n",
                      "markdown": "`\\fB--userns-uid-map-user\\fP \\fIuser\\fP\n\n.PP\nSpecifies that a UID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents, can be found in entries\nin the \\fB\\fC/etc/subuid\\fR file which correspond to the specified user.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1495,
                  "startColumn": 71,
                  "endLine": 1495,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\\fB--userns-uid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a UID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n",
                    "rendered": {
                      "text": "\\fB--userns-uid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a UID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n",
                      "markdown": "`\\fB--userns-uid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a UID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1476,
                  "startColumn": 67,
                  "endLine": 1476,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\\fB--userns-gid-map-group\\fP \\fIgroup\\fP\n\n.PP\nSpecifies that a GID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents, can be found in entries\nin the \\fB\\fC/etc/subgid\\fR file which correspond to the specified group.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\n",
                    "rendered": {
                      "text": "\\fB--userns-gid-map-group\\fP \\fIgroup\\fP\n\n.PP\nSpecifies that a GID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents, can be found in entries\nin the \\fB\\fC/etc/subgid\\fR file which correspond to the specified group.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\n",
                      "markdown": "`\\fB--userns-gid-map-group\\fP \\fIgroup\\fP\n\n.PP\nSpecifies that a GID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents, can be found in entries\nin the \\fB\\fC/etc/subgid\\fR file which correspond to the specified group.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1454,
                  "startColumn": 71,
                  "endLine": 1454,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\\fB--userns-gid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a GID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n",
                    "rendered": {
                      "text": "\\fB--userns-gid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a GID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n",
                      "markdown": "`\\fB--userns-gid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a GID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1252,
                  "startColumn": 43,
                  "endLine": 1252,
                  "endColumn": 47,
                  "snippet": {
                    "text": ".PP\nPass secret information to be used in the Containerfile for building images\nin a safe way that will not end up stored in the final image, or be seen in other stages.\nThe secret will be mounted in the container at the default location of \\fB\\fC/run/secrets/id\\fR\\&.\n\n.PP\nTo later use the secret, use the --mount flag in a \\fB\\fCRUN\\fR instruction within a \\fB\\fCContainerfile\\fR:\n",
                    "rendered": {
                      "text": ".PP\nPass secret information to be used in the Containerfile for building images\nin a safe way that will not end up stored in the final image, or be seen in other stages.\nThe secret will be mounted in the container at the default location of \\fB\\fC/run/secrets/id\\fR\\&.\n\n.PP\nTo later use the secret, use the --mount flag in a \\fB\\fCRUN\\fR instruction within a \\fB\\fCContainerfile\\fR:\n",
                      "markdown": "`.PP\nPass secret information to be used in the Containerfile for building images\nin a safe way that will not end up stored in the final image, or be seen in other stages.\nThe secret will be mounted in the container at the default location of \\fB\\fC/run/secrets/id\\fR\\&.\n\n.PP\nTo later use the secret, use the --mount flag in a \\fB\\fCRUN\\fR instruction within a \\fB\\fCContainerfile\\fR:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1035,
                  "startColumn": 28,
                  "endLine": 1035,
                  "endColumn": 32,
                  "snippet": {
                    "text": "OS/ARCH pairs are those used by the Go Programming Language.  In several cases\nthe ARCH value for a platform differs from one produced by other tools such as\nthe \\fB\\fCarch\\fR command.  Valid OS and architecture name combinations are listed as\nvalues for $GOOS and $GOARCH at https://golang.org/doc/install/source#environment,\nand can also be found by running \\fB\\fCgo tool dist list\\fR\\&.\n\n.PP\n",
                    "rendered": {
                      "text": "OS/ARCH pairs are those used by the Go Programming Language.  In several cases\nthe ARCH value for a platform differs from one produced by other tools such as\nthe \\fB\\fCarch\\fR command.  Valid OS and architecture name combinations are listed as\nvalues for $GOOS and $GOARCH at https://golang.org/doc/install/source#environment,\nand can also be found by running \\fB\\fCgo tool dist list\\fR\\&.\n\n.PP\n",
                      "markdown": "`OS/ARCH pairs are those used by the Go Programming Language.  In several cases\nthe ARCH value for a platform differs from one produced by other tools such as\nthe \\fB\\fCarch\\fR command.  Valid OS and architecture name combinations are listed as\nvalues for $GOOS and $GOARCH at https://golang.org/doc/install/source#environment,\nand can also be found by running \\fB\\fCgo tool dist list\\fR\\&.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 892,
                  "startColumn": 49,
                  "endLine": 892,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\\fBpasta:--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,-m,1500,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\nequivalent to default slirp4netns(1) options: disable IPv6, assign\n\\fB\\fC10.0.2.0/24\\fR to the \\fB\\fCtap0\\fR interface in the container, with gateway\n\\fB\\fC10.0.2.3\\fR, enable DNS forwarder reachable at \\fB\\fC10.0.2.3\\fR, set MTU to 1500\nbytes, disable NDP, DHCPv6 and DHCP support.\n.IP \\(bu 2\n\\fBpasta:-I,tap0,--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\n",
                    "rendered": {
                      "text": "\\fBpasta:--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,-m,1500,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\nequivalent to default slirp4netns(1) options: disable IPv6, assign\n\\fB\\fC10.0.2.0/24\\fR to the \\fB\\fCtap0\\fR interface in the container, with gateway\n\\fB\\fC10.0.2.3\\fR, enable DNS forwarder reachable at \\fB\\fC10.0.2.3\\fR, set MTU to 1500\nbytes, disable NDP, DHCPv6 and DHCP support.\n.IP \\(bu 2\n\\fBpasta:-I,tap0,--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\n",
                      "markdown": "`\\fBpasta:--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,-m,1500,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\nequivalent to default slirp4netns(1) options: disable IPv6, assign\n\\fB\\fC10.0.2.0/24\\fR to the \\fB\\fCtap0\\fR interface in the container, with gateway\n\\fB\\fC10.0.2.3\\fR, enable DNS forwarder reachable at \\fB\\fC10.0.2.3\\fR, set MTU to 1500\nbytes, disable NDP, DHCPv6 and DHCP support.\n.IP \\(bu 2\n\\fBpasta:-I,tap0,--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 708,
                  "startColumn": 30,
                  "endLine": 708,
                  "endColumn": 39,
                  "snippet": {
                    "text": "reusing the host's network and UTS namespaces, and creating private IPC, PID,\nmount, and user namespaces; the default for unprivileged users), and \\fIchroot\\fP\n(an internal wrapper that leans more toward chroot(1) than container\ntechnology, reusing the host's control group, network, IPC, and PID namespaces,\nand creating private mount and UTS namespaces, and creating user namespaces\nonly when they're required for ID mapping).\n\n",
                    "rendered": {
                      "text": "reusing the host's network and UTS namespaces, and creating private IPC, PID,\nmount, and user namespaces; the default for unprivileged users), and \\fIchroot\\fP\n(an internal wrapper that leans more toward chroot(1) than container\ntechnology, reusing the host's control group, network, IPC, and PID namespaces,\nand creating private mount and UTS namespaces, and creating user namespaces\nonly when they're required for ID mapping).\n\n",
                      "markdown": "`reusing the host's network and UTS namespaces, and creating private IPC, PID,\nmount, and user namespaces; the default for unprivileged users), and \\fIchroot\\fP\n(an internal wrapper that leans more toward chroot(1) than container\ntechnology, reusing the host's control group, network, IPC, and PID namespaces,\nand creating private mount and UTS namespaces, and creating user namespaces\nonly when they're required for ID mapping).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 596,
                  "startColumn": 3,
                  "endLine": 597,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".PP\n\\fB--format\\fP\n\n.PP\nControl the format for the built image's manifest and configuration data.\nRecognized formats include \\fIoci\\fP (OCI image-spec v1.0, the default) and\n\\fIdocker\\fP (version 2, using schema format 2 for the manifest).\n\n",
                    "rendered": {
                      "text": ".PP\n\\fB--format\\fP\n\n.PP\nControl the format for the built image's manifest and configuration data.\nRecognized formats include \\fIoci\\fP (OCI image-spec v1.0, the default) and\n\\fIdocker\\fP (version 2, using schema format 2 for the manifest).\n\n",
                      "markdown": "`.PP\n\\fB--format\\fP\n\n.PP\nControl the format for the built image's manifest and configuration data.\nRecognized formats include \\fIoci\\fP (OCI image-spec v1.0, the default) and\n\\fIdocker\\fP (version 2, using schema format 2 for the manifest).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 482,
                  "startColumn": 17,
                  "endLine": 482,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n.PP\n\\fIworkload_id\\fP: A workload identifier which will be recorded in the container\nimage, to be used at run-time for retrieving the passphrase which was used to\nencrypt the disk image.  If not specified, a semi-random value will be derived\nfrom the base image's image ID.\n\n",
                    "rendered": {
                      "text": "\n.PP\n\\fIworkload_id\\fP: A workload identifier which will be recorded in the container\nimage, to be used at run-time for retrieving the passphrase which was used to\nencrypt the disk image.  If not specified, a semi-random value will be derived\nfrom the base image's image ID.\n\n",
                      "markdown": "`\n.PP\n\\fIworkload_id\\fP: A workload identifier which will be recorded in the container\nimage, to be used at run-time for retrieving the passphrase which was used to\nencrypt the disk image.  If not specified, a semi-random value will be derived\nfrom the base image's image ID.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 455,
                  "startColumn": 73,
                  "endLine": 456,
                  "snippet": {
                    "text": "locations.\n\n.PP\n\\fImemory\\fP: The amount of memory which the image expects to be run with at\nrun-time, as a number of megabytes.  If not specified, a default value will be\nsupplied.\n\n.PP\n",
                    "rendered": {
                      "text": "locations.\n\n.PP\n\\fImemory\\fP: The amount of memory which the image expects to be run with at\nrun-time, as a number of megabytes.  If not specified, a default value will be\nsupplied.\n\n.PP\n",
                      "markdown": "`locations.\n\n.PP\n\\fImemory\\fP: The amount of memory which the image expects to be run with at\nrun-time, as a number of megabytes.  If not specified, a default value will be\nsupplied.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 446,
                  "startColumn": 77,
                  "endLine": 447,
                  "snippet": {
                    "text": "If no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n.PP\n\\fIcpus\\fP: The number of virtual CPUs which the image expects to be run with at\nrun-time.  If not specified, a default value will be supplied.\n\n.PP\n\\fIfirmware_library\\fP: The location of the libkrunfw-sev shared library.  If not\n",
                    "rendered": {
                      "text": "If no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n.PP\n\\fIcpus\\fP: The number of virtual CPUs which the image expects to be run with at\nrun-time.  If not specified, a default value will be supplied.\n\n.PP\n\\fIfirmware_library\\fP: The location of the libkrunfw-sev shared library.  If not\n",
                      "markdown": "`If no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n.PP\n\\fIcpus\\fP: The number of virtual CPUs which the image expects to be run with at\nrun-time.  If not specified, a default value will be supplied.\n\n.PP\n\\fIfirmware_library\\fP: The location of the libkrunfw-sev shared library.  If not\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 56,
                  "endLine": 441,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\\fIattestation_url\\fP: The location of a key broker / attestation server.\nIf a value is specified, the new image's workload ID, along with the passphrase\nused to encrypt the disk image, will be registered with the server, and the\nserver's location will be stored in the container image.\nAt run-time, krun is expected to contact the server to retrieve the passphrase\nusing the workload ID, which is also stored in the container image.\nIf no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n",
                    "rendered": {
                      "text": "\\fIattestation_url\\fP: The location of a key broker / attestation server.\nIf a value is specified, the new image's workload ID, along with the passphrase\nused to encrypt the disk image, will be registered with the server, and the\nserver's location will be stored in the container image.\nAt run-time, krun is expected to contact the server to retrieve the passphrase\nusing the workload ID, which is also stored in the container image.\nIf no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n",
                      "markdown": "`\\fIattestation_url\\fP: The location of a key broker / attestation server.\nIf a value is specified, the new image's workload ID, along with the passphrase\nused to encrypt the disk image, will be registered with the server, and the\nserver's location will be stored in the container image.\nAt run-time, krun is expected to contact the server to retrieve the passphrase\nusing the workload ID, which is also stored in the container image.\nIf no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 266,
                  "startColumn": 16,
                  "endLine": 266,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                    "rendered": {
                      "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                      "markdown": "`\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 54,
                  "endLine": 235,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n.PP\nNote: Setting \\fB\\fC--cache-ttl=0\\fR manually is equivalent to using \\fB\\fC--no-cache\\fR in the implementation since this would\neffectively mean that user is not willing to use cache at all.\n\n.PP\n\\fB--cap-add\\fP=\\fICAP_xxx\\fP\n",
                    "rendered": {
                      "text": "\n.PP\nNote: Setting \\fB\\fC--cache-ttl=0\\fR manually is equivalent to using \\fB\\fC--no-cache\\fR in the implementation since this would\neffectively mean that user is not willing to use cache at all.\n\n.PP\n\\fB--cap-add\\fP=\\fICAP_xxx\\fP\n",
                      "markdown": "`\n.PP\nNote: Setting \\fB\\fC--cache-ttl=0\\fR manually is equivalent to using \\fB\\fC--no-cache\\fR in the implementation since this would\neffectively mean that user is not willing to use cache at all.\n\n.PP\n\\fB--cap-add\\fP=\\fICAP_xxx\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 65,
                  "endLine": 95,
                  "endColumn": 69,
                  "snippet": {
                    "text": ".PP\nPlease refer to the BUILD TIME VARIABLES\n\\[la]#build-time-variables\\[ra] section for the\nlist of variables that can be overridden within the Containerfile at run time.\n\n.PP\n\\fB--build-arg-file\\fP \\fIpath\\fP\n",
                    "rendered": {
                      "text": ".PP\nPlease refer to the BUILD TIME VARIABLES\n\\[la]#build-time-variables\\[ra] section for the\nlist of variables that can be overridden within the Containerfile at run time.\n\n.PP\n\\fB--build-arg-file\\fP \\fIpath\\fP\n",
                      "markdown": "`.PP\nPlease refer to the BUILD TIME VARIABLES\n\\[la]#build-time-variables\\[ra] section for the\nlist of variables that can be overridden within the Containerfile at run time.\n\n.PP\n\\fB--build-arg-file\\fP \\fIpath\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 265,
                  "endLine": 52,
                  "endColumn": 269,
                  "snippet": {
                    "text": "\\fB--all-platforms\\fP\n\n.PP\nInstead of building for a set of platforms specified using the \\fB--platform\\fP option, inspect the build's base images, and build for all of the platforms for which they are all available.  Stages that use \\fIscratch\\fP as a starting point can not be inspected, so at least one non-\\fIscratch\\fP stage must be present for detection to work usefully.\n\n.PP\n\\fB--annotation\\fP \\fIannotation[=value]\\fP\n",
                    "rendered": {
                      "text": "\\fB--all-platforms\\fP\n\n.PP\nInstead of building for a set of platforms specified using the \\fB--platform\\fP option, inspect the build's base images, and build for all of the platforms for which they are all available.  Stages that use \\fIscratch\\fP as a starting point can not be inspected, so at least one non-\\fIscratch\\fP stage must be present for detection to work usefully.\n\n.PP\n\\fB--annotation\\fP \\fIannotation[=value]\\fP\n",
                      "markdown": "`\\fB--all-platforms\\fP\n\n.PP\nInstead of building for a set of platforms specified using the \\fB--platform\\fP option, inspect the build's base images, and build for all of the platforms for which they are all available.  Stages that use \\fIscratch\\fP as a starting point can not be inspected, so at least one non-\\fIscratch\\fP stage must be present for detection to work usefully.\n\n.PP\n\\fB--annotation\\fP \\fIannotation[=value]\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 229,
                  "endLine": 36,
                  "endColumn": 233,
                  "snippet": {
                    "text": "When the URL is a Containerfile, the file is downloaded to a temporary location.\n\n.PP\nWhen a Git repository is set as the URL, the repository is cloned locally and then used as the build context.  A non-default branch (or commit ID) and subdirectory of the cloned git repository can be used by including their names at the end of the URL in the form \\fB\\fCmyrepo.git#mybranch:subdir\\fR, \\fB\\fCmyrepo.git#mycommit:subdir\\fR, or \\fB\\fCmyrepo.git#:subdir\\fR if the subdirectory should be used from the default branch.\n\n.SH OPTIONS\n.PP\n",
                    "rendered": {
                      "text": "When the URL is a Containerfile, the file is downloaded to a temporary location.\n\n.PP\nWhen a Git repository is set as the URL, the repository is cloned locally and then used as the build context.  A non-default branch (or commit ID) and subdirectory of the cloned git repository can be used by including their names at the end of the URL in the form \\fB\\fCmyrepo.git#mybranch:subdir\\fR, \\fB\\fCmyrepo.git#mycommit:subdir\\fR, or \\fB\\fCmyrepo.git#:subdir\\fR if the subdirectory should be used from the default branch.\n\n.SH OPTIONS\n.PP\n",
                      "markdown": "`When the URL is a Containerfile, the file is downloaded to a temporary location.\n\n.PP\nWhen a Git repository is set as the URL, the repository is cloned locally and then used as the build context.  A non-default branch (or commit ID) and subdirectory of the cloned git repository can be used by including their names at the end of the URL in the form \\fB\\fCmyrepo.git#mybranch:subdir\\fR, \\fB\\fCmyrepo.git#mycommit:subdir\\fR, or \\fB\\fCmyrepo.git#:subdir\\fR if the subdirectory should be used from the default branch.\n\n.SH OPTIONS\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1954,
                  "startColumn": 119,
                  "endLine": 1954,
                  "endColumn": 126,
                  "snippet": {
                    "text": "\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n",
                    "rendered": {
                      "text": "\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n",
                      "markdown": "`\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1902,
                  "startColumn": 61,
                  "endLine": 1902,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n.PP\n\\fB\\fC*/*.c\\fR\nExcludes files and directories whose names end with .c in any top level subdirectory. For example, the source file include/rootless.c.\n\n.PP\n\\fB\\fC**/output*\\fR\n",
                    "rendered": {
                      "text": "\n.PP\n\\fB\\fC*/*.c\\fR\nExcludes files and directories whose names end with .c in any top level subdirectory. For example, the source file include/rootless.c.\n\n.PP\n\\fB\\fC**/output*\\fR\n",
                      "markdown": "`\n.PP\n\\fB\\fC*/*.c\\fR\nExcludes files and directories whose names end with .c in any top level subdirectory. For example, the source file include/rootless.c.\n\n.PP\n\\fB\\fC**/output*\\fR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1844,
                  "startColumn": 15,
                  "endLine": 1844,
                  "endColumn": 21,
                  "snippet": {
                    "text": ".PP\nNote: supported compression formats are 'xz', 'bzip2', 'gzip' and 'identity' (no compression).\n\n.SS Using Build Time Variables\n.SS Replace the value set for the HTTP_PROXY environment variable within the Containerfile.\n.PP\nbuildah build --build-arg=HTTP_PROXY=\"http://127.0.0.1:8321\"\n",
                    "rendered": {
                      "text": ".PP\nNote: supported compression formats are 'xz', 'bzip2', 'gzip' and 'identity' (no compression).\n\n.SS Using Build Time Variables\n.SS Replace the value set for the HTTP_PROXY environment variable within the Containerfile.\n.PP\nbuildah build --build-arg=HTTP_PROXY=\"http://127.0.0.1:8321\"\n",
                      "markdown": "`.PP\nNote: supported compression formats are 'xz', 'bzip2', 'gzip' and 'identity' (no compression).\n\n.SS Using Build Time Variables\n.SS Replace the value set for the HTTP_PROXY environment variable within the Containerfile.\n.PP\nbuildah build --build-arg=HTTP_PROXY=\"http://127.0.0.1:8321\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1708,
                  "startColumn": 3,
                  "endLine": 1709,
                  "endColumn": 4,
                  "snippet": {
                    "text": ".PP\nbuildah build -f Containerfile .\n\n.PP\ncat ~/Containerfile | buildah build -f - .\n\n.PP\nbuildah build -f Containerfile.simple -f Containerfile.notsosimple .\n",
                    "rendered": {
                      "text": ".PP\nbuildah build -f Containerfile .\n\n.PP\ncat ~/Containerfile | buildah build -f - .\n\n.PP\nbuildah build -f Containerfile.simple -f Containerfile.notsosimple .\n",
                      "markdown": "`.PP\nbuildah build -f Containerfile .\n\n.PP\ncat ~/Containerfile | buildah build -f - .\n\n.PP\nbuildah build -f Containerfile.simple -f Containerfile.notsosimple .\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1697,
                  "startColumn": 31,
                  "endLine": 1697,
                  "endColumn": 37,
                  "snippet": {
                    "text": ".RE\n\n.PP\nPlease refer to the Using Build Time Variables\n\\[la]#using-build-time-variables\\[ra] section of the Examples.\n\n.SH EXAMPLE\n",
                    "rendered": {
                      "text": ".RE\n\n.PP\nPlease refer to the Using Build Time Variables\n\\[la]#using-build-time-variables\\[ra] section of the Examples.\n\n.SH EXAMPLE\n",
                      "markdown": "`.RE\n\n.PP\nPlease refer to the Using Build Time Variables\n\\[la]#using-build-time-variables\\[ra] section of the Examples.\n\n.SH EXAMPLE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1675,
                  "startColumn": 3,
                  "endLine": 1675,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n.SH BUILD TIME VARIABLES\n.PP\nThe ENV instruction in a Containerfile can be used to define variable values.  When the image\nis built, the values will persist in the container image.  At times it is more convenient to\nchange the values in the Containerfile via a command-line option rather than changing the\nvalues within the Containerfile itself.\n",
                    "rendered": {
                      "text": "\n.SH BUILD TIME VARIABLES\n.PP\nThe ENV instruction in a Containerfile can be used to define variable values.  When the image\nis built, the values will persist in the container image.  At times it is more convenient to\nchange the values in the Containerfile via a command-line option rather than changing the\nvalues within the Containerfile itself.\n",
                      "markdown": "`\n.SH BUILD TIME VARIABLES\n.PP\nThe ENV instruction in a Containerfile can be used to define variable values.  When the image\nis built, the values will persist in the container image.  At times it is more convenient to\nchange the values in the Containerfile via a command-line option rather than changing the\nvalues within the Containerfile itself.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1673,
                  "startColumn": 9,
                  "endLine": 1673,
                  "endColumn": 15,
                  "snippet": {
                    "text": "mount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH BUILD TIME VARIABLES\n.PP\nThe ENV instruction in a Containerfile can be used to define variable values.  When the image\nis built, the values will persist in the container image.  At times it is more convenient to\n",
                    "rendered": {
                      "text": "mount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH BUILD TIME VARIABLES\n.PP\nThe ENV instruction in a Containerfile can be used to define variable values.  When the image\nis built, the values will persist in the container image.  At times it is more convenient to\n",
                      "markdown": "`mount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH BUILD TIME VARIABLES\n.PP\nThe ENV instruction in a Containerfile can be used to define variable values.  When the image\nis built, the values will persist in the container image.  At times it is more convenient to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1670,
                  "startColumn": 71,
                  "endLine": 1670,
                  "endColumn": 78,
                  "snippet": {
                    "text": "example, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH BUILD TIME VARIABLES\n",
                    "rendered": {
                      "text": "example, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH BUILD TIME VARIABLES\n",
                      "markdown": "`example, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH BUILD TIME VARIABLES\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1669,
                  "startColumn": 95,
                  "endLine": 1670,
                  "endColumn": 6,
                  "snippet": {
                    "text": "To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH BUILD TIME VARIABLES\n",
                    "rendered": {
                      "text": "To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH BUILD TIME VARIABLES\n",
                      "markdown": "`To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH BUILD TIME VARIABLES\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1669,
                  "startColumn": 40,
                  "endLine": 1669,
                  "endColumn": 47,
                  "snippet": {
                    "text": "To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n",
                    "rendered": {
                      "text": "To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n",
                      "markdown": "`To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1667,
                  "startColumn": 16,
                  "endLine": 1667,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n",
                    "rendered": {
                      "text": "\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n",
                      "markdown": "`\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1666,
                  "startColumn": 37,
                  "endLine": 1666,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\n",
                    "rendered": {
                      "text": "\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\n",
                      "markdown": "`\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1662,
                  "startColumn": 31,
                  "endLine": 1662,
                  "endColumn": 38,
                  "snippet": {
                    "text": "can be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n",
                    "rendered": {
                      "text": "can be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n",
                      "markdown": "`can be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1661,
                  "startColumn": 81,
                  "endLine": 1661,
                  "endColumn": 88,
                  "snippet": {
                    "text": "properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                    "rendered": {
                      "text": "properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                      "markdown": "`properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1661,
                  "startColumn": 27,
                  "endLine": 1661,
                  "endColumn": 34,
                  "snippet": {
                    "text": "properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                    "rendered": {
                      "text": "properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                      "markdown": "`properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1659,
                  "startColumn": 35,
                  "endLine": 1659,
                  "endColumn": 42,
                  "snippet": {
                    "text": "Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n",
                    "rendered": {
                      "text": "Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n",
                      "markdown": "`Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1658,
                  "startColumn": 84,
                  "endLine": 1658,
                  "endColumn": 91,
                  "snippet": {
                    "text": ".PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\n",
                    "rendered": {
                      "text": ".PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\n",
                      "markdown": "`.PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1656,
                  "startColumn": 52,
                  "endLine": 1656,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\\[la]#Footnote1\\[ra]\n\n.PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\n",
                    "rendered": {
                      "text": "\\[la]#Footnote1\\[ra]\n\n.PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\n",
                      "markdown": "`\\[la]#Footnote1\\[ra]\n\n.PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1652,
                  "startColumn": 10,
                  "endLine": 1652,
                  "endColumn": 17,
                  "snippet": {
                    "text": "named volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n",
                    "rendered": {
                      "text": "named volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n",
                      "markdown": "`named volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1651,
                  "startColumn": 26,
                  "endLine": 1651,
                  "endColumn": 33,
                  "snippet": {
                    "text": "be specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                    "rendered": {
                      "text": "be specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                      "markdown": "`be specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1649,
                  "startColumn": 75,
                  "endLine": 1649,
                  "endColumn": 82,
                  "snippet": {
                    "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                    "rendered": {
                      "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                      "markdown": "`To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1649,
                  "startColumn": 58,
                  "endLine": 1649,
                  "endColumn": 65,
                  "snippet": {
                    "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                    "rendered": {
                      "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                      "markdown": "`To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1649,
                  "startColumn": 18,
                  "endLine": 1649,
                  "endColumn": 25,
                  "snippet": {
                    "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                    "rendered": {
                      "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                      "markdown": "`To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1646,
                  "startColumn": 14,
                  "endLine": 1646,
                  "endColumn": 21,
                  "snippet": {
                    "text": "leted inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point ",
                    "rendered": {
                      "text": "leted inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point ",
                      "markdown": "`leted inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1644,
                  "startColumn": 62,
                  "endLine": 1644,
                  "endColumn": 69,
                  "snippet": {
                    "text": ".PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\n",
                    "rendered": {
                      "text": ".PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\n",
                      "markdown": "`.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1644,
                  "startColumn": 3,
                  "endLine": 1644,
                  "endColumn": 10,
                  "snippet": {
                    "text": ".PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\n",
                    "rendered": {
                      "text": ".PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\n",
                      "markdown": "`.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR or \\fB\\fC:[r]private\\fR propagation flag. The propagation property can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1642,
                  "startColumn": 8,
                  "endLine": 1642,
                  "endColumn": 15,
                  "snippet": {
                    "text": "be changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\n",
                    "rendered": {
                      "text": "be changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\n",
                      "markdown": "`be changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 33,
                  "endLine": 1639,
                  "endColumn": 40,
                  "snippet": {
                    "text": ".PP\nBy default bind mounted volumes are \\fB\\fCprivate\\fR\\&. That means any mounts done\ninside container will not be visible on the host and vice versa. This behavior can\nbe changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\n",
                    "rendered": {
                      "text": ".PP\nBy default bind mounted volumes are \\fB\\fCprivate\\fR\\&. That means any mounts done\ninside container will not be visible on the host and vice versa. This behavior can\nbe changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\n",
                      "markdown": "`.PP\nBy default bind mounted volumes are \\fB\\fCprivate\\fR\\&. That means any mounts done\ninside container will not be visible on the host and vice versa. This behavior can\nbe changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1632,
                  "startColumn": 79,
                  "endLine": 1632,
                  "endColumn": 86,
                  "snippet": {
                    "text": "The \\fB\\fCO\\fR flag is not allowed to be specified with the \\fB\\fCZ\\fR or \\fB\\fCz\\fR flags. Content mounted into the container is labeled with the private label.\n   On SELinux systems, labels in the source directory must be readable by the container label. If not, SELinux container separation must be disabled for the container to work.\n.IP \\(bu 2\nModification of the directory volume mounted into the container with an overlay mount can cause unexpected failures.  It is recommended that you do not modify the directory until the container finishes running.\n\n.RE\n\n",
                    "rendered": {
                      "text": "The \\fB\\fCO\\fR flag is not allowed to be specified with the \\fB\\fCZ\\fR or \\fB\\fCz\\fR flags. Content mounted into the container is labeled with the private label.\n   On SELinux systems, labels in the source directory must be readable by the container label. If not, SELinux container separation must be disabled for the container to work.\n.IP \\(bu 2\nModification of the directory volume mounted into the container with an overlay mount can cause unexpected failures.  It is recommended that you do not modify the directory until the container finishes running.\n\n.RE\n\n",
                      "markdown": "`The \\fB\\fCO\\fR flag is not allowed to be specified with the \\fB\\fCZ\\fR or \\fB\\fCz\\fR flags. Content mounted into the container is labeled with the private label.\n   On SELinux systems, labels in the source directory must be readable by the container label. If not, SELinux container separation must be disabled for the container to work.\n.IP \\(bu 2\nModification of the directory volume mounted into the container with an overlay mount can cause unexpected failures.  It is recommended that you do not modify the directory until the container finishes running.\n\n.RE\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1622,
                  "startColumn": 36,
                  "endLine": 1622,
                  "endColumn": 43,
                  "snippet": {
                    "text": "Any subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR mount is sharing the package cache from the host into the container to allow speeding up builds.\n\n.PP\nNote:\n",
                    "rendered": {
                      "text": "Any subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR mount is sharing the package cache from the host into the container to allow speeding up builds.\n\n.PP\nNote:\n",
                      "markdown": "`Any subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR mount is sharing the package cache from the host into the container to allow speeding up builds.\n\n.PP\nNote:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1616,
                  "startColumn": 511,
                  "endLine": 1616,
                  "endColumn": 518,
                  "snippet": {
                    "text": "int and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and the container storage directory will be the upper. Modifications to the mount point are destroyed when the \\fB\\fCRUN\\fR command finishes executing, similar to a tmpfs mount point.\n\n.PP\nAny subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR mount is sharing the package cache from the host into the container to allow speeding up builds.",
                    "rendered": {
                      "text": "int and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and the container storage directory will be the upper. Modifications to the mount point are destroyed when the \\fB\\fCRUN\\fR command finishes executing, similar to a tmpfs mount point.\n\n.PP\nAny subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR mount is sharing the package cache from the host into the container to allow speeding up builds.",
                      "markdown": "`int and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and the container storage directory will be the upper. Modifications to the mount point are destroyed when the \\fB\\fCRUN\\fR command finishes executing, similar to a tmpfs mount point.\n\n.PP\nAny subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR mount is sharing the package cache from the host into the container to allow speeding up builds.`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1616,
                  "startColumn": 416,
                  "endLine": 1616,
                  "endColumn": 423,
                  "snippet": {
                    "text": "e system. The \\fB\\fCRUN\\fR command containers are allowed to modify contents within the mountpoint and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and the container storage directory will be the upper. Modifications to the mount point are destroyed when the \\fB\\fCRUN\\fR command finishes executing, similar to a tmpfs mount point.\n\n.PP\nAny subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR m",
                    "rendered": {
                      "text": "e system. The \\fB\\fCRUN\\fR command containers are allowed to modify contents within the mountpoint and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and the container storage directory will be the upper. Modifications to the mount point are destroyed when the \\fB\\fCRUN\\fR command finishes executing, similar to a tmpfs mount point.\n\n.PP\nAny subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR m",
                      "markdown": "`e system. The \\fB\\fCRUN\\fR command containers are allowed to modify contents within the mountpoint and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and the container storage directory will be the upper. Modifications to the mount point are destroyed when the \\fB\\fCRUN\\fR command finishes executing, similar to a tmpfs mount point.\n\n.PP\nAny subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR m`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1616,
                  "startColumn": 37,
                  "endLine": 1616,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\ncontent label. Shared volume labels allow all containers to read/write content.\nThe \\fB\\fCZ\\fR option tells Buildah to label the content with a private unshared label.\nOnly the current container can use a private volume.\n\n.PP\n\\fB\\fCOverlay Volume Mounts\\fR\n\n.PP\nThe \\fB\\fC:O\\fR flag tells Buildah to mount the directory from the host as a temporary storage using the Overlay file system. The \\fB\\fCRUN\\fR command containers are allowed to modify contents within the mountpoint and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and",
                    "rendered": {
                      "text": "\ncontent label. Shared volume labels allow all containers to read/write content.\nThe \\fB\\fCZ\\fR option tells Buildah to label the content with a private unshared label.\nOnly the current container can use a private volume.\n\n.PP\n\\fB\\fCOverlay Volume Mounts\\fR\n\n.PP\nThe \\fB\\fC:O\\fR flag tells Buildah to mount the directory from the host as a temporary storage using the Overlay file system. The \\fB\\fCRUN\\fR command containers are allowed to modify contents within the mountpoint and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and",
                      "markdown": "`\ncontent label. Shared volume labels allow all containers to read/write content.\nThe \\fB\\fCZ\\fR option tells Buildah to label the content with a private unshared label.\nOnly the current container can use a private volume.\n\n.PP\n\\fB\\fCOverlay Volume Mounts\\fR\n\n.PP\nThe \\fB\\fC:O\\fR flag tells Buildah to mount the directory from the host as a temporary storage using the Overlay file system. The \\fB\\fCRUN\\fR command containers are allowed to modify contents within the mountpoint and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1581,
                  "startColumn": 66,
                  "endLine": 1581,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\\fB\\fCWrite Protected Volume Mounts\\fR\n\n.PP\nYou can add the \\fB\\fC:ro\\fR or \\fB\\fC:rw\\fR suffix to a volume to mount it read-only or\nread-write mode, respectively. By default, the volumes are mounted read-write.\nSee examples.\n\n",
                    "rendered": {
                      "text": "\\fB\\fCWrite Protected Volume Mounts\\fR\n\n.PP\nYou can add the \\fB\\fC:ro\\fR or \\fB\\fC:rw\\fR suffix to a volume to mount it read-only or\nread-write mode, respectively. By default, the volumes are mounted read-write.\nSee examples.\n\n",
                      "markdown": "`\\fB\\fCWrite Protected Volume Mounts\\fR\n\n.PP\nYou can add the \\fB\\fC:ro\\fR or \\fB\\fC:rw\\fR suffix to a volume to mount it read-only or\nread-write mode, respectively. By default, the volumes are mounted read-write.\nSee examples.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1574,
                  "startColumn": 45,
                  "endLine": 1574,
                  "endColumn": 52,
                  "snippet": {
                    "text": "and bind mounts that into the container.\n\n.PP\nYou can specify multiple  \\fB-v\\fP options to mount one or more mounts to a\ncontainer.\n\n.PP\n",
                    "rendered": {
                      "text": "and bind mounts that into the container.\n\n.PP\nYou can specify multiple  \\fB-v\\fP options to mount one or more mounts to a\ncontainer.\n\n.PP\n",
                      "markdown": "`and bind mounts that into the container.\n\n.PP\nYou can specify multiple  \\fB-v\\fP options to mount one or more mounts to a\ncontainer.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1549,
                  "startColumn": 3,
                  "endLine": 1550,
                  "endColumn": 6,
                  "snippet": {
                    "text": ".PP\n\\fB--volume\\fP, \\fB-v\\fP[=\\fI[HOST-DIR:CONTAINER-DIR[:OPTIONS]]\\fP]\n\n.PP\nMount a host directory into containers when executing \\fIRUN\\fP instructions during\nthe build.  The \\fB\\fCOPTIONS\\fR are a comma delimited list and can be:\n\n.RS\n",
                    "rendered": {
                      "text": ".PP\n\\fB--volume\\fP, \\fB-v\\fP[=\\fI[HOST-DIR:CONTAINER-DIR[:OPTIONS]]\\fP]\n\n.PP\nMount a host directory into containers when executing \\fIRUN\\fP instructions during\nthe build.  The \\fB\\fCOPTIONS\\fR are a comma delimited list and can be:\n\n.RS\n",
                      "markdown": "`.PP\n\\fB--volume\\fP, \\fB-v\\fP[=\\fI[HOST-DIR:CONTAINER-DIR[:OPTIONS]]\\fP]\n\n.PP\nMount a host directory into containers when executing \\fIRUN\\fP instructions during\nthe build.  The \\fB\\fCOPTIONS\\fR are a comma delimited list and can be:\n\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1385,
                  "startColumn": 20,
                  "endLine": 1385,
                  "endColumn": 26,
                  "snippet": {
                    "text": "This option can be specified multiple times.  Recognized resource types\ninclude:\n  \"core\": maximum core dump size (ulimit -c)\n  \"cpu\": maximum CPU time (ulimit -t)\n  \"data\": maximum size of a process's data segment (ulimit -d)\n  \"fsize\": maximum size of new files (ulimit -f)\n  \"locks\": maximum number of file locks (ulimit -x)\n",
                    "rendered": {
                      "text": "This option can be specified multiple times.  Recognized resource types\ninclude:\n  \"core\": maximum core dump size (ulimit -c)\n  \"cpu\": maximum CPU time (ulimit -t)\n  \"data\": maximum size of a process's data segment (ulimit -d)\n  \"fsize\": maximum size of new files (ulimit -f)\n  \"locks\": maximum number of file locks (ulimit -x)\n",
                      "markdown": "`This option can be specified multiple times.  Recognized resource types\ninclude:\n  \"core\": maximum core dump size (ulimit -c)\n  \"cpu\": maximum CPU time (ulimit -t)\n  \"data\": maximum size of a process's data segment (ulimit -d)\n  \"fsize\": maximum size of new files (ulimit -f)\n  \"locks\": maximum number of file locks (ulimit -x)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1369,
                  "startColumn": 67,
                  "endLine": 1369,
                  "endColumn": 73,
                  "snippet": {
                    "text": "Set the create timestamp to seconds since epoch to allow for deterministic builds (defaults to current time).\nBy default, the created timestamp is changed and written into the image manifest with every commit,\ncausing the image's sha256 hash to be different even if the sources are exactly the same otherwise.\nWhen --timestamp is set, the created timestamp is always set to the time specified and therefore not changed, allowing the image's sha256 to remain the same. All files committed to the layers of the image will be created with the timestamp.\n\n.PP\n\\fB--tls-verify\\fP \\fIbool-value\\fP\n",
                    "rendered": {
                      "text": "Set the create timestamp to seconds since epoch to allow for deterministic builds (defaults to current time).\nBy default, the created timestamp is changed and written into the image manifest with every commit,\ncausing the image's sha256 hash to be different even if the sources are exactly the same otherwise.\nWhen --timestamp is set, the created timestamp is always set to the time specified and therefore not changed, allowing the image's sha256 to remain the same. All files committed to the layers of the image will be created with the timestamp.\n\n.PP\n\\fB--tls-verify\\fP \\fIbool-value\\fP\n",
                      "markdown": "`Set the create timestamp to seconds since epoch to allow for deterministic builds (defaults to current time).\nBy default, the created timestamp is changed and written into the image manifest with every commit,\ncausing the image's sha256 hash to be different even if the sources are exactly the same otherwise.\nWhen --timestamp is set, the created timestamp is always set to the time specified and therefore not changed, allowing the image's sha256 to remain the same. All files committed to the layers of the image will be created with the timestamp.\n\n.PP\n\\fB--tls-verify\\fP \\fIbool-value\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1333,
                  "startColumn": 54,
                  "endLine": 1333,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n.PP\nPass stdin into the RUN containers. Sometimes commands being RUN within a Containerfile\nwant to request information from the user. For example apt asking for a confirmation for install.\nUse --stdin to be able to interact from the terminal during the build.\n\n.PP\n",
                    "rendered": {
                      "text": "\n.PP\nPass stdin into the RUN containers. Sometimes commands being RUN within a Containerfile\nwant to request information from the user. For example apt asking for a confirmation for install.\nUse --stdin to be able to interact from the terminal during the build.\n\n.PP\n",
                      "markdown": "`\n.PP\nPass stdin into the RUN containers. Sometimes commands being RUN within a Containerfile\nwant to request information from the user. For example apt asking for a confirmation for install.\nUse --stdin to be able to interact from the terminal during the build.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1323,
                  "startColumn": 16,
                  "endLine": 1323,
                  "endColumn": 21,
                  "snippet": {
                    "text": "The socket path can be left empty to use the value of \\fB\\fCdefault=$SSH_AUTH_SOCK\\fR\n\n.PP\nTo later use the ssh agent, use the --mount flag in a \\fB\\fCRUN\\fR instruction within a \\fB\\fCContainerfile\\fR:\n\n.PP\n\\fB\\fCRUN --mount=type=secret,id=id mycmd\\fR\n",
                    "rendered": {
                      "text": "The socket path can be left empty to use the value of \\fB\\fCdefault=$SSH_AUTH_SOCK\\fR\n\n.PP\nTo later use the ssh agent, use the --mount flag in a \\fB\\fCRUN\\fR instruction within a \\fB\\fCContainerfile\\fR:\n\n.PP\n\\fB\\fCRUN --mount=type=secret,id=id mycmd\\fR\n",
                      "markdown": "`The socket path can be left empty to use the value of \\fB\\fCdefault=$SSH_AUTH_SOCK\\fR\n\n.PP\nTo later use the ssh agent, use the --mount flag in a \\fB\\fCRUN\\fR instruction within a \\fB\\fCContainerfile\\fR:\n\n.PP\n\\fB\\fCRUN --mount=type=secret,id=id mycmd\\fR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1318,
                  "startColumn": 3,
                  "endLine": 1319,
                  "endColumn": 4,
                  "snippet": {
                    "text": ".PP\n\\fB--ssh\\fP=\\fBdefault\\fP|\\fIid[=socket>|[,]\\fP\n\n.PP\nSSH agent socket or keys to expose to the build.\nThe socket path can be left empty to use the value of \\fB\\fCdefault=$SSH_AUTH_SOCK\\fR\n\n.PP\n",
                    "rendered": {
                      "text": ".PP\n\\fB--ssh\\fP=\\fBdefault\\fP|\\fIid[=socket>|[,]\\fP\n\n.PP\nSSH agent socket or keys to expose to the build.\nThe socket path can be left empty to use the value of \\fB\\fCdefault=$SSH_AUTH_SOCK\\fR\n\n.PP\n",
                      "markdown": "`.PP\n\\fB--ssh\\fP=\\fBdefault\\fP|\\fIid[=socket>|[,]\\fP\n\n.PP\nSSH agent socket or keys to expose to the build.\nThe socket path can be left empty to use the value of \\fB\\fCdefault=$SSH_AUTH_SOCK\\fR\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1258,
                  "startColumn": 41,
                  "endLine": 1258,
                  "endColumn": 46,
                  "snippet": {
                    "text": "To later use the secret, use the --mount flag in a \\fB\\fCRUN\\fR instruction within a \\fB\\fCContainerfile\\fR:\n\n.PP\n\\fB\\fCRUN --mount=type=secret,id=mysecret cat /run/secrets/mysecret\\fR\n\n.PP\nNote: Changing the contents of secret files will not trigger a rebuild of layers that use said secrets.\n",
                    "rendered": {
                      "text": "To later use the secret, use the --mount flag in a \\fB\\fCRUN\\fR instruction within a \\fB\\fCContainerfile\\fR:\n\n.PP\n\\fB\\fCRUN --mount=type=secret,id=mysecret cat /run/secrets/mysecret\\fR\n\n.PP\nNote: Changing the contents of secret files will not trigger a rebuild of layers that use said secrets.\n",
                      "markdown": "`To later use the secret, use the --mount flag in a \\fB\\fCRUN\\fR instruction within a \\fB\\fCContainerfile\\fR:\n\n.PP\n\\fB\\fCRUN --mount=type=secret,id=mysecret cat /run/secrets/mysecret\\fR\n\n.PP\nNote: Changing the contents of secret files will not trigger a rebuild of layers that use said secrets.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 1189,
                  "startColumn": 10,
                  "endLine": 1191,
                  "snippet": {
                    "text": "earlier commands.  Recognized values include:\n\n.RS\n.IP \\(bu 2\ncat\n Concatenate the files.\n.IP \\(bu 2\nmerge-cyclonedx-by-component-name-and-version\n Merge the \"component\" fields of JSON documents, ignoring values from\n",
                    "rendered": {
                      "text": "earlier commands.  Recognized values include:\n\n.RS\n.IP \\(bu 2\ncat\n Concatenate the files.\n.IP \\(bu 2\nmerge-cyclonedx-by-component-name-and-version\n Merge the \"component\" fields of JSON documents, ignoring values from\n",
                      "markdown": "`earlier commands.  Recognized values include:\n\n.RS\n.IP \\(bu 2\ncat\n Concatenate the files.\n.IP \\(bu 2\nmerge-cyclonedx-by-component-name-and-version\n Merge the \"component\" fields of JSON documents, ignoring values from\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 933,
                  "startColumn": 72,
                  "endLine": 933,
                  "endColumn": 76,
                  "snippet": {
                    "text": "Do not create the \\fI/etc/hosts\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages \\fI/etc/hosts\\fP, adding the container's own IP address.\n\\fB--no-hosts\\fP disables this, and the image's \\fI/etc/hosts\\fP will be preserved unmodified. Conflicts with the --add-host option.\n\n.PP\n",
                    "rendered": {
                      "text": "Do not create the \\fI/etc/hosts\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages \\fI/etc/hosts\\fP, adding the container's own IP address.\n\\fB--no-hosts\\fP disables this, and the image's \\fI/etc/hosts\\fP will be preserved unmodified. Conflicts with the --add-host option.\n\n.PP\n",
                      "markdown": "`Do not create the \\fI/etc/hosts\\fP file in the container for RUN instructions.\n\n.PP\nBy default, Buildah manages \\fI/etc/hosts\\fP, adding the container's own IP address.\n\\fB--no-hosts\\fP disables this, and the image's \\fI/etc/hosts\\fP will be preserved unmodified. Conflicts with the --add-host option.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 865,
                  "startColumn": 6,
                  "endLine": 865,
                  "endColumn": 10,
                  "snippet": {
                    "text": "name, are copied from the host. If port forwarding isn't configured, ports\nare forwarded dynamically as services are bound on either side (init\nnamespace or container namespace). Port forwarding preserves the original\nsource IP address. Options described in pasta(1) can be specified as\ncomma-separated arguments.\n.br\nIn terms of pasta(1) options, \\fB--config-net\\fP is given by default, in\n",
                    "rendered": {
                      "text": "name, are copied from the host. If port forwarding isn't configured, ports\nare forwarded dynamically as services are bound on either side (init\nnamespace or container namespace). Port forwarding preserves the original\nsource IP address. Options described in pasta(1) can be specified as\ncomma-separated arguments.\n.br\nIn terms of pasta(1) options, \\fB--config-net\\fP is given by default, in\n",
                      "markdown": "`name, are copied from the host. If port forwarding isn't configured, ports\nare forwarded dynamically as services are bound on either side (init\nnamespace or container namespace). Port forwarding preserves the original\nsource IP address. Options described in pasta(1) can be specified as\ncomma-separated arguments.\n.br\nIn terms of pasta(1) options, \\fB--config-net\\fP is given by default, in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 841,
                  "startColumn": 24,
                  "endLine": 841,
                  "endColumn": 28,
                  "snippet": {
                    "text": ".IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n\\fBcidr=CIDR\\fP: Specify ip range to use for this network. (Default is \\fB\\fC10.0.2.0/24\\fR).\n.IP \\(bu 2\n\\fBenable_ipv6=true|false\\fP: Enable IPv6. Default is true. (Required for \\fB\\fCoutbound_addr6\\fR).\n.IP \\(bu 2\n",
                    "rendered": {
                      "text": ".IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n\\fBcidr=CIDR\\fP: Specify ip range to use for this network. (Default is \\fB\\fC10.0.2.0/24\\fR).\n.IP \\(bu 2\n\\fBenable_ipv6=true|false\\fP: Enable IPv6. Default is true. (Required for \\fB\\fCoutbound_addr6\\fR).\n.IP \\(bu 2\n",
                      "markdown": "`.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n\\fBcidr=CIDR\\fP: Specify ip range to use for this network. (Default is \\fB\\fC10.0.2.0/24\\fR).\n.IP \\(bu 2\n\\fBenable_ipv6=true|false\\fP: Enable IPv6. Default is true. (Required for \\fB\\fCoutbound_addr6\\fR).\n.IP \\(bu 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 837,
                  "startColumn": 120,
                  "endLine": 837,
                  "endColumn": 124,
                  "snippet": {
                    "text": "\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n",
                    "rendered": {
                      "text": "\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n",
                      "markdown": "`\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 837,
                  "startColumn": 82,
                  "endLine": 837,
                  "endColumn": 86,
                  "snippet": {
                    "text": "\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n",
                    "rendered": {
                      "text": "\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n",
                      "markdown": "`\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 709,
                  "startColumn": 20,
                  "endLine": 709,
                  "endColumn": 27,
                  "snippet": {
                    "text": "mount, and user namespaces; the default for unprivileged users), and \\fIchroot\\fP\n(an internal wrapper that leans more toward chroot(1) than container\ntechnology, reusing the host's control group, network, IPC, and PID namespaces,\nand creating private mount and UTS namespaces, and creating user namespaces\nonly when they're required for ID mapping).\n\n.PP\n",
                    "rendered": {
                      "text": "mount, and user namespaces; the default for unprivileged users), and \\fIchroot\\fP\n(an internal wrapper that leans more toward chroot(1) than container\ntechnology, reusing the host's control group, network, IPC, and PID namespaces,\nand creating private mount and UTS namespaces, and creating user namespaces\nonly when they're required for ID mapping).\n\n.PP\n",
                      "markdown": "`mount, and user namespaces; the default for unprivileged users), and \\fIchroot\\fP\n(an internal wrapper that leans more toward chroot(1) than container\ntechnology, reusing the host's control group, network, IPC, and PID namespaces,\nand creating private mount and UTS namespaces, and creating user namespaces\nonly when they're required for ID mapping).\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 567,
                  "startColumn": 43,
                  "endLine": 567,
                  "endColumn": 48,
                  "snippet": {
                    "text": "Add a value (e.g. env=\\fIvalue\\fP) to the built image.  Can be used multiple times.\nIf neither \\fB\\fC=\\fR nor a \\fB\\fC*value*\\fR are specified, but \\fIenv\\fP is set in the current\nenvironment, the value from the current environment will be added to the image.\nThe value of \\fIenv\\fP can be overridden by ENV instructions in the Containerfile.\nTo remove an environment variable from the built image, use the \\fB\\fC--unsetenv\\fR\noption.\n\n",
                    "rendered": {
                      "text": "Add a value (e.g. env=\\fIvalue\\fP) to the built image.  Can be used multiple times.\nIf neither \\fB\\fC=\\fR nor a \\fB\\fC*value*\\fR are specified, but \\fIenv\\fP is set in the current\nenvironment, the value from the current environment will be added to the image.\nThe value of \\fIenv\\fP can be overridden by ENV instructions in the Containerfile.\nTo remove an environment variable from the built image, use the \\fB\\fC--unsetenv\\fR\noption.\n\n",
                      "markdown": "`Add a value (e.g. env=\\fIvalue\\fP) to the built image.  Can be used multiple times.\nIf neither \\fB\\fC=\\fR nor a \\fB\\fC*value*\\fR are specified, but \\fIenv\\fP is set in the current\nenvironment, the value from the current environment will be added to the image.\nThe value of \\fIenv\\fP can be overridden by ENV instructions in the Containerfile.\nTo remove an environment variable from the built image, use the \\fB\\fC--unsetenv\\fR\noption.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 532,
                  "startColumn": 9,
                  "endLine": 532,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\\fB--disable-content-trust\\fP\n\n.PP\nThis is a Docker specific option to disable image verification to a Container\nregistry and is not supported by Buildah.  This flag is a NOOP and provided\nsolely for scripting compatibility.\n\n",
                    "rendered": {
                      "text": "\\fB--disable-content-trust\\fP\n\n.PP\nThis is a Docker specific option to disable image verification to a Container\nregistry and is not supported by Buildah.  This flag is a NOOP and provided\nsolely for scripting compatibility.\n\n",
                      "markdown": "`\\fB--disable-content-trust\\fP\n\n.PP\nThis is a Docker specific option to disable image verification to a Container\nregistry and is not supported by Buildah.  This flag is a NOOP and provided\nsolely for scripting compatibility.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 41,
                  "endLine": 371,
                  "endColumn": 47,
                  "snippet": {
                    "text": "receive 16.5%, 16.5% and 33% of the CPU.\n\n.PP\nOn a multi-core system, the shares of CPU time are distributed over all CPU\ncores. Even if a container is limited to less than 100% of CPU time, it can\nuse 100% of each individual CPU core.\n\n",
                    "rendered": {
                      "text": "receive 16.5%, 16.5% and 33% of the CPU.\n\n.PP\nOn a multi-core system, the shares of CPU time are distributed over all CPU\ncores. Even if a container is limited to less than 100% of CPU time, it can\nuse 100% of each individual CPU core.\n\n",
                      "markdown": "`receive 16.5%, 16.5% and 33% of the CPU.\n\n.PP\nOn a multi-core system, the shares of CPU time are distributed over all CPU\ncores. Even if a container is limited to less than 100% of CPU time, it can\nuse 100% of each individual CPU core.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 44,
                  "endLine": 359,
                  "endColumn": 50,
                  "snippet": {
                    "text": ".PP\nThe proportion will only apply when CPU-intensive processes are running.\nWhen tasks in one container are idle, other containers can use the\nleft-over CPU time. The actual amount of CPU time will vary depending on\nthe number of containers running on the system.\n\n.PP\n",
                    "rendered": {
                      "text": ".PP\nThe proportion will only apply when CPU-intensive processes are running.\nWhen tasks in one container are idle, other containers can use the\nleft-over CPU time. The actual amount of CPU time will vary depending on\nthe number of containers running on the system.\n\n.PP\n",
                      "markdown": "`.PP\nThe proportion will only apply when CPU-intensive processes are running.\nWhen tasks in one container are idle, other containers can use the\nleft-over CPU time. The actual amount of CPU time will vary depending on\nthe number of containers running on the system.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 90,
                  "endLine": 220,
                  "endColumn": 98,
                  "snippet": {
                    "text": "\n.PP\nNote: Buildah's \\fB\\fC--cache-to\\fR option is designed differently than Docker and BuildKit's \\fB\\fC--cache-to\\fR option. Buildah's\ndistributed cache mechanism push intermediate images to the remote registry itself, unlike Docker and BuildKit where\nthe intermediate image is stored in the image itself. Buildah's approach is similar to kaniko, which\ndoes not inflate the size of the original image with intermediate images.  Also, intermediate images can truly be\nkept distributed across one or more remote registries using Buildah's caching mechanism.\n",
                    "rendered": {
                      "text": "\n.PP\nNote: Buildah's \\fB\\fC--cache-to\\fR option is designed differently than Docker and BuildKit's \\fB\\fC--cache-to\\fR option. Buildah's\ndistributed cache mechanism push intermediate images to the remote registry itself, unlike Docker and BuildKit where\nthe intermediate image is stored in the image itself. Buildah's approach is similar to kaniko, which\ndoes not inflate the size of the original image with intermediate images.  Also, intermediate images can truly be\nkept distributed across one or more remote registries using Buildah's caching mechanism.\n",
                      "markdown": "`\n.PP\nNote: Buildah's \\fB\\fC--cache-to\\fR option is designed differently than Docker and BuildKit's \\fB\\fC--cache-to\\fR option. Buildah's\ndistributed cache mechanism push intermediate images to the remote registry itself, unlike Docker and BuildKit where\nthe intermediate image is stored in the image itself. Buildah's approach is similar to kaniko, which\ndoes not inflate the size of the original image with intermediate images.  Also, intermediate images can truly be\nkept distributed across one or more remote registries using Buildah's caching mechanism.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 71,
                  "endLine": 219,
                  "endColumn": 79,
                  "snippet": {
                    "text": "Note: \\fB\\fC--cache-to\\fR option is ignored unless \\fB\\fC--layers\\fR is specified.\n\n.PP\nNote: Buildah's \\fB\\fC--cache-to\\fR option is designed differently than Docker and BuildKit's \\fB\\fC--cache-to\\fR option. Buildah's\ndistributed cache mechanism push intermediate images to the remote registry itself, unlike Docker and BuildKit where\nthe intermediate image is stored in the image itself. Buildah's approach is similar to kaniko, which\ndoes not inflate the size of the original image with intermediate images.  Also, intermediate images can truly be\n",
                    "rendered": {
                      "text": "Note: \\fB\\fC--cache-to\\fR option is ignored unless \\fB\\fC--layers\\fR is specified.\n\n.PP\nNote: Buildah's \\fB\\fC--cache-to\\fR option is designed differently than Docker and BuildKit's \\fB\\fC--cache-to\\fR option. Buildah's\ndistributed cache mechanism push intermediate images to the remote registry itself, unlike Docker and BuildKit where\nthe intermediate image is stored in the image itself. Buildah's approach is similar to kaniko, which\ndoes not inflate the size of the original image with intermediate images.  Also, intermediate images can truly be\n",
                      "markdown": "`Note: \\fB\\fC--cache-to\\fR option is ignored unless \\fB\\fC--layers\\fR is specified.\n\n.PP\nNote: Buildah's \\fB\\fC--cache-to\\fR option is designed differently than Docker and BuildKit's \\fB\\fC--cache-to\\fR option. Buildah's\ndistributed cache mechanism push intermediate images to the remote registry itself, unlike Docker and BuildKit where\nthe intermediate image is stored in the image itself. Buildah's approach is similar to kaniko, which\ndoes not inflate the size of the original image with intermediate images.  Also, intermediate images can truly be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 93,
                  "endLine": 187,
                  "endColumn": 101,
                  "snippet": {
                    "text": "\n.PP\nNote: Buildah's \\fB\\fC--cache-from\\fR option is designed differently than Docker and BuildKit's \\fB\\fC--cache-from\\fR option. Buildah's\ndistributed cache mechanism pulls intermediate images from the remote registry itself, unlike Docker and BuildKit where\nthe intermediate image is stored in the image itself. Buildah's approach is similar to kaniko, which\ndoes not inflate the size of the original image with intermediate images.  Also, intermediate images can truly be\nkept distributed across one or more remote registries using Buildah's caching mechanism.\n",
                    "rendered": {
                      "text": "\n.PP\nNote: Buildah's \\fB\\fC--cache-from\\fR option is designed differently than Docker and BuildKit's \\fB\\fC--cache-from\\fR option. Buildah's\ndistributed cache mechanism pulls intermediate images from the remote registry itself, unlike Docker and BuildKit where\nthe intermediate image is stored in the image itself. Buildah's approach is similar to kaniko, which\ndoes not inflate the size of the original image with intermediate images.  Also, intermediate images can truly be\nkept distributed across one or more remote registries using Buildah's caching mechanism.\n",
                      "markdown": "`\n.PP\nNote: Buildah's \\fB\\fC--cache-from\\fR option is designed differently than Docker and BuildKit's \\fB\\fC--cache-from\\fR option. Buildah's\ndistributed cache mechanism pulls intermediate images from the remote registry itself, unlike Docker and BuildKit where\nthe intermediate image is stored in the image itself. Buildah's approach is similar to kaniko, which\ndoes not inflate the size of the original image with intermediate images.  Also, intermediate images can truly be\nkept distributed across one or more remote registries using Buildah's caching mechanism.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 73,
                  "endLine": 186,
                  "endColumn": 81,
                  "snippet": {
                    "text": "Note: \\fB\\fC--cache-from\\fR option is ignored unless \\fB\\fC--layers\\fR is specified.\n\n.PP\nNote: Buildah's \\fB\\fC--cache-from\\fR option is designed differently than Docker and BuildKit's \\fB\\fC--cache-from\\fR option. Buildah's\ndistributed cache mechanism pulls intermediate images from the remote registry itself, unlike Docker and BuildKit where\nthe intermediate image is stored in the image itself. Buildah's approach is similar to kaniko, which\ndoes not inflate the size of the original image with intermediate images.  Also, intermediate images can truly be\n",
                    "rendered": {
                      "text": "Note: \\fB\\fC--cache-from\\fR option is ignored unless \\fB\\fC--layers\\fR is specified.\n\n.PP\nNote: Buildah's \\fB\\fC--cache-from\\fR option is designed differently than Docker and BuildKit's \\fB\\fC--cache-from\\fR option. Buildah's\ndistributed cache mechanism pulls intermediate images from the remote registry itself, unlike Docker and BuildKit where\nthe intermediate image is stored in the image itself. Buildah's approach is similar to kaniko, which\ndoes not inflate the size of the original image with intermediate images.  Also, intermediate images can truly be\n",
                      "markdown": "`Note: \\fB\\fC--cache-from\\fR option is ignored unless \\fB\\fC--layers\\fR is specified.\n\n.PP\nNote: Buildah's \\fB\\fC--cache-from\\fR option is designed differently than Docker and BuildKit's \\fB\\fC--cache-from\\fR option. Buildah's\ndistributed cache mechanism pulls intermediate images from the remote registry itself, unlike Docker and BuildKit where\nthe intermediate image is stored in the image itself. Buildah's approach is similar to kaniko, which\ndoes not inflate the size of the original image with intermediate images.  Also, intermediate images can truly be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 25,
                  "endLine": 93,
                  "endColumn": 31,
                  "snippet": {
                    "text": "resulting image's configuration.\n\n.PP\nPlease refer to the BUILD TIME VARIABLES\n\\[la]#build-time-variables\\[ra] section for the\nlist of variables that can be overridden within the Containerfile at run time.\n\n",
                    "rendered": {
                      "text": "resulting image's configuration.\n\n.PP\nPlease refer to the BUILD TIME VARIABLES\n\\[la]#build-time-variables\\[ra] section for the\nlist of variables that can be overridden within the Containerfile at run time.\n\n",
                      "markdown": "`resulting image's configuration.\n\n.PP\nPlease refer to the BUILD TIME VARIABLES\n\\[la]#build-time-variables\\[ra] section for the\nlist of variables that can be overridden within the Containerfile at run time.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 104,
                  "endLine": 62,
                  "endColumn": 112,
                  "snippet": {
                    "text": "If \\fIannotation\\fP is named, but neither \\fB\\fC=\\fR nor a \\fB\\fCvalue\\fR is provided, then the \\fIannotation\\fP is set to an empty value.\n\n.PP\nNote: this information is not present in Docker image formats, so it is discarded when writing images in Docker formats.\n\n.PP\n\\fB--arch\\fP=\"ARCH\"\n",
                    "rendered": {
                      "text": "If \\fIannotation\\fP is named, but neither \\fB\\fC=\\fR nor a \\fB\\fCvalue\\fR is provided, then the \\fIannotation\\fP is set to an empty value.\n\n.PP\nNote: this information is not present in Docker image formats, so it is discarded when writing images in Docker formats.\n\n.PP\n\\fB--arch\\fP=\"ARCH\"\n",
                      "markdown": "`If \\fIannotation\\fP is named, but neither \\fB\\fC=\\fR nor a \\fB\\fCvalue\\fR is provided, then the \\fIannotation\\fP is set to an empty value.\n\n.PP\nNote: this information is not present in Docker image formats, so it is discarded when writing images in Docker formats.\n\n.PP\n\\fB--arch\\fP=\"ARCH\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 40,
                  "endLine": 62,
                  "endColumn": 48,
                  "snippet": {
                    "text": "If \\fIannotation\\fP is named, but neither \\fB\\fC=\\fR nor a \\fB\\fCvalue\\fR is provided, then the \\fIannotation\\fP is set to an empty value.\n\n.PP\nNote: this information is not present in Docker image formats, so it is discarded when writing images in Docker formats.\n\n.PP\n\\fB--arch\\fP=\"ARCH\"\n",
                    "rendered": {
                      "text": "If \\fIannotation\\fP is named, but neither \\fB\\fC=\\fR nor a \\fB\\fCvalue\\fR is provided, then the \\fIannotation\\fP is set to an empty value.\n\n.PP\nNote: this information is not present in Docker image formats, so it is discarded when writing images in Docker formats.\n\n.PP\n\\fB--arch\\fP=\"ARCH\"\n",
                      "markdown": "`If \\fIannotation\\fP is named, but neither \\fB\\fC=\\fR nor a \\fB\\fCvalue\\fR is provided, then the \\fIannotation\\fP is set to an empty value.\n\n.PP\nNote: this information is not present in Docker image formats, so it is discarded when writing images in Docker formats.\n\n.PP\n\\fB--arch\\fP=\"ARCH\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 177,
                  "endLine": 36,
                  "endColumn": 182,
                  "snippet": {
                    "text": "When the URL is a Containerfile, the file is downloaded to a temporary location.\n\n.PP\nWhen a Git repository is set as the URL, the repository is cloned locally and then used as the build context.  A non-default branch (or commit ID) and subdirectory of the cloned git repository can be used by including their names at the end of the URL in the form \\fB\\fCmyrepo.git#mybranch:subdir\\fR, \\fB\\fCmyrepo.git#mycommit:subdir\\fR, or \\fB\\fCmyrepo.git#:subdir\\fR if the subdirectory should be used from the default branch.\n\n.SH OPTIONS\n.PP\n",
                    "rendered": {
                      "text": "When the URL is a Containerfile, the file is downloaded to a temporary location.\n\n.PP\nWhen a Git repository is set as the URL, the repository is cloned locally and then used as the build context.  A non-default branch (or commit ID) and subdirectory of the cloned git repository can be used by including their names at the end of the URL in the form \\fB\\fCmyrepo.git#mybranch:subdir\\fR, \\fB\\fCmyrepo.git#mycommit:subdir\\fR, or \\fB\\fCmyrepo.git#:subdir\\fR if the subdirectory should be used from the default branch.\n\n.SH OPTIONS\n.PP\n",
                      "markdown": "`When the URL is a Containerfile, the file is downloaded to a temporary location.\n\n.PP\nWhen a Git repository is set as the URL, the repository is cloned locally and then used as the build context.  A non-default branch (or commit ID) and subdirectory of the cloned git repository can be used by including their names at the end of the URL in the form \\fB\\fCmyrepo.git#mybranch:subdir\\fR, \\fB\\fCmyrepo.git#mycommit:subdir\\fR, or \\fB\\fCmyrepo.git#:subdir\\fR if the subdirectory should be used from the default branch.\n\n.SH OPTIONS\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "When the URL is a Containerfile, the file is downloaded to a temporary location.\n\n.PP\nWhen a Git repository is set as the URL, the repository is cloned locally and then used as the build context.  A non-default branch (or commit ID) and subdirectory of the cloned git repository can be used by including their names at the end of the URL in the form \\fB\\fCmyrepo.git#mybranch:subdir\\fR, \\fB\\fCmyrepo.git#mycommit:subdir\\fR, or \\fB\\fCmyrepo.git#:subdir\\fR if the subdirectory should be used from the default branch.\n\n.SH OPTIONS\n.PP\n",
                    "rendered": {
                      "text": "When the URL is a Containerfile, the file is downloaded to a temporary location.\n\n.PP\nWhen a Git repository is set as the URL, the repository is cloned locally and then used as the build context.  A non-default branch (or commit ID) and subdirectory of the cloned git repository can be used by including their names at the end of the URL in the form \\fB\\fCmyrepo.git#mybranch:subdir\\fR, \\fB\\fCmyrepo.git#mycommit:subdir\\fR, or \\fB\\fCmyrepo.git#:subdir\\fR if the subdirectory should be used from the default branch.\n\n.SH OPTIONS\n.PP\n",
                      "markdown": "`When the URL is a Containerfile, the file is downloaded to a temporary location.\n\n.PP\nWhen a Git repository is set as the URL, the repository is cloned locally and then used as the build context.  A non-default branch (or commit ID) and subdirectory of the cloned git repository can be used by including their names at the end of the URL in the form \\fB\\fCmyrepo.git#mybranch:subdir\\fR, \\fB\\fCmyrepo.git#mycommit:subdir\\fR, or \\fB\\fCmyrepo.git#:subdir\\fR if the subdirectory should be used from the default branch.\n\n.SH OPTIONS\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-build.1"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 78,
                  "endLine": 21,
                  "endColumn": 83,
                  "snippet": {
                    "text": "document, a file referred to as a Containerfile can be a file named either 'Containerfile' or 'Dockerfile'.\n\n.PP\nThe build context directory can be specified as the http(s) URL of an archive, git repository or Containerfile.\n\n.PP\nIf no context directory is specified, then Buildah will assume the current working directory as build context, which should contain a Containerfile.\n",
                    "rendered": {
                      "text": "document, a file referred to as a Containerfile can be a file named either 'Containerfile' or 'Dockerfile'.\n\n.PP\nThe build context directory can be specified as the http(s) URL of an archive, git repository or Containerfile.\n\n.PP\nIf no context directory is specified, then Buildah will assume the current working directory as build context, which should contain a Containerfile.\n",
                      "markdown": "`document, a file referred to as a Containerfile can be a file named either 'Containerfile' or 'Dockerfile'.\n\n.PP\nThe build context directory can be specified as the http(s) URL of an archive, git repository or Containerfile.\n\n.PP\nIf no context directory is specified, then Buildah will assume the current working directory as build context, which should contain a Containerfile.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 7,
                  "endLine": 81,
                  "endColumn": 16,
                  "snippet": {
                    "text": ".RS\n\n.nf\nbuildah unshare buildah-script.sh\n\n.fi\n.RE\n",
                    "rendered": {
                      "text": ".RS\n\n.nf\nbuildah unshare buildah-script.sh\n\n.fi\n.RE\n",
                      "markdown": "`.RS\n\n.nf\nbuildah unshare buildah-script.sh\n\n.fi\n.RE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 42,
                  "endLine": 65,
                  "endColumn": 4,
                  "snippet": {
                    "text": "#!/bin/sh\nctr=$(buildah from scratch)\nmnt=$(buildah mount $ctr)\ndnf -y install --installroot=$mnt PACKAGES\ndnf -y clean all --installroot=$mnt\nbuildah config --entrypoint=\"/bin/PACKAGE\" --env \"FOO=BAR\" $ctr\nbuildah commit $ctr imagename\nbuildah unmount $ctr\n",
                    "rendered": {
                      "text": "#!/bin/sh\nctr=$(buildah from scratch)\nmnt=$(buildah mount $ctr)\ndnf -y install --installroot=$mnt PACKAGES\ndnf -y clean all --installroot=$mnt\nbuildah config --entrypoint=\"/bin/PACKAGE\" --env \"FOO=BAR\" $ctr\nbuildah commit $ctr imagename\nbuildah unmount $ctr\n",
                      "markdown": "`#!/bin/sh\nctr=$(buildah from scratch)\nmnt=$(buildah mount $ctr)\ndnf -y install --installroot=$mnt PACKAGES\ndnf -y clean all --installroot=$mnt\nbuildah config --entrypoint=\"/bin/PACKAGE\" --env \"FOO=BAR\" $ctr\nbuildah commit $ctr imagename\nbuildah unmount $ctr\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 25,
                  "endLine": 64,
                  "endColumn": 4,
                  "snippet": {
                    "text": "cat buildah-script.sh << _EOF\n#!/bin/sh\nctr=$(buildah from scratch)\nmnt=$(buildah mount $ctr)\ndnf -y install --installroot=$mnt PACKAGES\ndnf -y clean all --installroot=$mnt\nbuildah config --entrypoint=\"/bin/PACKAGE\" --env \"FOO=BAR\" $ctr\nbuildah commit $ctr imagename\n",
                    "rendered": {
                      "text": "cat buildah-script.sh << _EOF\n#!/bin/sh\nctr=$(buildah from scratch)\nmnt=$(buildah mount $ctr)\ndnf -y install --installroot=$mnt PACKAGES\ndnf -y clean all --installroot=$mnt\nbuildah config --entrypoint=\"/bin/PACKAGE\" --env \"FOO=BAR\" $ctr\nbuildah commit $ctr imagename\n",
                      "markdown": "`cat buildah-script.sh << _EOF\n#!/bin/sh\nctr=$(buildah from scratch)\nmnt=$(buildah mount $ctr)\ndnf -y install --installroot=$mnt PACKAGES\ndnf -y clean all --installroot=$mnt\nbuildah config --entrypoint=\"/bin/PACKAGE\" --env \"FOO=BAR\" $ctr\nbuildah commit $ctr imagename\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 13,
                  "endLine": 63,
                  "endColumn": 20,
                  "snippet": {
                    "text": "cat buildah-script.sh << _EOF\n#!/bin/sh\nctr=$(buildah from scratch)\nmnt=$(buildah mount $ctr)\ndnf -y install --installroot=$mnt PACKAGES\ndnf -y clean all --installroot=$mnt\nbuildah config --entrypoint=\"/bin/PACKAGE\" --env \"FOO=BAR\" $ctr\n",
                    "rendered": {
                      "text": "cat buildah-script.sh << _EOF\n#!/bin/sh\nctr=$(buildah from scratch)\nmnt=$(buildah mount $ctr)\ndnf -y install --installroot=$mnt PACKAGES\ndnf -y clean all --installroot=$mnt\nbuildah config --entrypoint=\"/bin/PACKAGE\" --env \"FOO=BAR\" $ctr\n",
                      "markdown": "`cat buildah-script.sh << _EOF\n#!/bin/sh\nctr=$(buildah from scratch)\nmnt=$(buildah mount $ctr)\ndnf -y install --installroot=$mnt PACKAGES\ndnf -y clean all --installroot=$mnt\nbuildah config --entrypoint=\"/bin/PACKAGE\" --env \"FOO=BAR\" $ctr\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 3,
                  "endLine": 60,
                  "endColumn": 4,
                  "snippet": {
                    "text": ".PP\n.RS\n\n.nf\ncat buildah-script.sh << _EOF\n#!/bin/sh\nctr=$(buildah from scratch)\nmnt=$(buildah mount $ctr)\n",
                    "rendered": {
                      "text": ".PP\n.RS\n\n.nf\ncat buildah-script.sh << _EOF\n#!/bin/sh\nctr=$(buildah from scratch)\nmnt=$(buildah mount $ctr)\n",
                      "markdown": "`.PP\n.RS\n\n.nf\ncat buildah-script.sh << _EOF\n#!/bin/sh\nctr=$(buildah from scratch)\nmnt=$(buildah mount $ctr)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 69,
                  "endLine": 54,
                  "endColumn": 77,
                  "snippet": {
                    "text": "buildah unshare --mount containerID sh -c 'cat ${containerID}/etc/os-release'\n\n.PP\nIf you want to use buildah with a mount command then you can create a script that looks something like:\n\n.PP\n.RS\n",
                    "rendered": {
                      "text": "buildah unshare --mount containerID sh -c 'cat ${containerID}/etc/os-release'\n\n.PP\nIf you want to use buildah with a mount command then you can create a script that looks something like:\n\n.PP\n.RS\n",
                      "markdown": "`buildah unshare --mount containerID sh -c 'cat ${containerID}/etc/os-release'\n\n.PP\nIf you want to use buildah with a mount command then you can create a script that looks something like:\n\n.PP\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 33,
                  "endLine": 54,
                  "endColumn": 40,
                  "snippet": {
                    "text": "buildah unshare --mount containerID sh -c 'cat ${containerID}/etc/os-release'\n\n.PP\nIf you want to use buildah with a mount command then you can create a script that looks something like:\n\n.PP\n.RS\n",
                    "rendered": {
                      "text": "buildah unshare --mount containerID sh -c 'cat ${containerID}/etc/os-release'\n\n.PP\nIf you want to use buildah with a mount command then you can create a script that looks something like:\n\n.PP\n.RS\n",
                      "markdown": "`buildah unshare --mount containerID sh -c 'cat ${containerID}/etc/os-release'\n\n.PP\nIf you want to use buildah with a mount command then you can create a script that looks something like:\n\n.PP\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 7,
                  "endLine": 51,
                  "endColumn": 16,
                  "snippet": {
                    "text": "buildah unshare rm -fr $HOME/.local/share/containers/storage /run/user/`id -u`/run\n\n.PP\nbuildah unshare --mount containerID sh -c 'cat ${containerID}/etc/os-release'\n\n.PP\nIf you want to use buildah with a mount command then you can create a script that looks something like:\n",
                    "rendered": {
                      "text": "buildah unshare rm -fr $HOME/.local/share/containers/storage /run/user/`id -u`/run\n\n.PP\nbuildah unshare --mount containerID sh -c 'cat ${containerID}/etc/os-release'\n\n.PP\nIf you want to use buildah with a mount command then you can create a script that looks something like:\n",
                      "markdown": "`buildah unshare rm -fr $HOME/.local/share/containers/storage /run/user/`id -u`/run\n\n.PP\nbuildah unshare --mount containerID sh -c 'cat ${containerID}/etc/os-release'\n\n.PP\nIf you want to use buildah with a mount command then you can create a script that looks something like:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 7,
                  "endLine": 48,
                  "endColumn": 16,
                  "snippet": {
                    "text": "buildah unshare cat /proc/self/uid_map /proc/self/gid_map\n\n.PP\nbuildah unshare rm -fr $HOME/.local/share/containers/storage /run/user/`id -u`/run\n\n.PP\nbuildah unshare --mount containerID sh -c 'cat ${containerID}/etc/os-release'\n",
                    "rendered": {
                      "text": "buildah unshare cat /proc/self/uid_map /proc/self/gid_map\n\n.PP\nbuildah unshare rm -fr $HOME/.local/share/containers/storage /run/user/`id -u`/run\n\n.PP\nbuildah unshare --mount containerID sh -c 'cat ${containerID}/etc/os-release'\n",
                      "markdown": "`buildah unshare cat /proc/self/uid_map /proc/self/gid_map\n\n.PP\nbuildah unshare rm -fr $HOME/.local/share/containers/storage /run/user/`id -u`/run\n\n.PP\nbuildah unshare --mount containerID sh -c 'cat ${containerID}/etc/os-release'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 7,
                  "endLine": 45,
                  "endColumn": 16,
                  "snippet": {
                    "text": "buildah unshare pwd\n\n.PP\nbuildah unshare cat /proc/self/uid_map /proc/self/gid_map\n\n.PP\nbuildah unshare rm -fr $HOME/.local/share/containers/storage /run/user/`id -u`/run\n",
                    "rendered": {
                      "text": "buildah unshare pwd\n\n.PP\nbuildah unshare cat /proc/self/uid_map /proc/self/gid_map\n\n.PP\nbuildah unshare rm -fr $HOME/.local/share/containers/storage /run/user/`id -u`/run\n",
                      "markdown": "`buildah unshare pwd\n\n.PP\nbuildah unshare cat /proc/self/uid_map /proc/self/gid_map\n\n.PP\nbuildah unshare rm -fr $HOME/.local/share/containers/storage /run/user/`id -u`/run\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 7,
                  "endLine": 42,
                  "endColumn": 16,
                  "snippet": {
                    "text": "buildah unshare id\n\n.PP\nbuildah unshare pwd\n\n.PP\nbuildah unshare cat /proc/self/uid_map /proc/self/gid_map\n",
                    "rendered": {
                      "text": "buildah unshare id\n\n.PP\nbuildah unshare pwd\n\n.PP\nbuildah unshare cat /proc/self/uid_map /proc/self/gid_map\n",
                      "markdown": "`buildah unshare id\n\n.PP\nbuildah unshare pwd\n\n.PP\nbuildah unshare cat /proc/self/uid_map /proc/self/gid_map\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 7,
                  "endLine": 39,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n.SH EXAMPLE\n.PP\nbuildah unshare id\n\n.PP\nbuildah unshare pwd\n",
                    "rendered": {
                      "text": "\n.SH EXAMPLE\n.PP\nbuildah unshare id\n\n.PP\nbuildah unshare pwd\n",
                      "markdown": "`\n.SH EXAMPLE\n.PP\nbuildah unshare id\n\n.PP\nbuildah unshare pwd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 32,
                  "endColumn": 6,
                  "snippet": {
                    "text": ".PP\n\\fB--mount\\fP, \\fB-m\\fP [\\fIVARIABLE=]containerNameOrID\\fP\n\n.PP\nMount the \\fIcontainerNameOrID\\fP container while running \\fIcommand\\fP, and set the\nenvironment variable \\fIVARIABLE\\fP to the path of the mountpoint.  If \\fIVARIABLE\\fP\nis not specified, it defaults to \\fIcontainerNameOrID\\fP, which may not be a valid\nname for an environment variable.\n",
                    "rendered": {
                      "text": ".PP\n\\fB--mount\\fP, \\fB-m\\fP [\\fIVARIABLE=]containerNameOrID\\fP\n\n.PP\nMount the \\fIcontainerNameOrID\\fP container while running \\fIcommand\\fP, and set the\nenvironment variable \\fIVARIABLE\\fP to the path of the mountpoint.  If \\fIVARIABLE\\fP\nis not specified, it defaults to \\fIcontainerNameOrID\\fP, which may not be a valid\nname for an environment variable.\n",
                      "markdown": "`.PP\n\\fB--mount\\fP, \\fB-m\\fP [\\fIVARIABLE=]containerNameOrID\\fP\n\n.PP\nMount the \\fIcontainerNameOrID\\fP container while running \\fIcommand\\fP, and set the\nenvironment variable \\fIVARIABLE\\fP to the path of the mountpoint.  If \\fIVARIABLE\\fP\nis not specified, it defaults to \\fIcontainerNameOrID\\fP, which may not be a valid\nname for an environment variable.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 106,
                  "endLine": 24,
                  "endColumn": 113,
                  "snippet": {
                    "text": "manually clearing storage and other data related to images and containers.\n\n.PP\nIt is also useful if you want to use the \\fB\\fCbuildah mount\\fR command.  If an unprivileged user wants to mount and work with a container, then they need to execute\nbuildah unshare.  Executing \\fB\\fCbuildah mount\\fR fails for unprivileged users unless the user is running inside a \\fB\\fCbuildah unshare\\fR session.\n\n.SH OPTIONS\n",
                    "rendered": {
                      "text": "manually clearing storage and other data related to images and containers.\n\n.PP\nIt is also useful if you want to use the \\fB\\fCbuildah mount\\fR command.  If an unprivileged user wants to mount and work with a container, then they need to execute\nbuildah unshare.  Executing \\fB\\fCbuildah mount\\fR fails for unprivileged users unless the user is running inside a \\fB\\fCbuildah unshare\\fR session.\n\n.SH OPTIONS\n",
                      "markdown": "`manually clearing storage and other data related to images and containers.\n\n.PP\nIt is also useful if you want to use the \\fB\\fCbuildah mount\\fR command.  If an unprivileged user wants to mount and work with a container, then they need to execute\nbuildah unshare.  Executing \\fB\\fCbuildah mount\\fR fails for unprivileged users unless the user is running inside a \\fB\\fCbuildah unshare\\fR session.\n\n.SH OPTIONS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-unshare.1"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 7,
                  "endLine": 20,
                  "endColumn": 16,
                  "snippet": {
                    "text": "help of the \\fInewuidmap(1)\\fP and \\fInewgidmap(1)\\fP helpers.\n\n.PP\nbuildah unshare is useful for troubleshooting unprivileged operations and for\nmanually clearing storage and other data related to images and containers.\n\n.PP\n",
                    "rendered": {
                      "text": "help of the \\fInewuidmap(1)\\fP and \\fInewgidmap(1)\\fP helpers.\n\n.PP\nbuildah unshare is useful for troubleshooting unprivileged operations and for\nmanually clearing storage and other data related to images and containers.\n\n.PP\n",
                      "markdown": "`help of the \\fInewuidmap(1)\\fP and \\fInewgidmap(1)\\fP helpers.\n\n.PP\nbuildah unshare is useful for troubleshooting unprivileged operations and for\nmanually clearing storage and other data related to images and containers.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-source-create.1"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 64,
                  "endLine": 31,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\\fB--time-stamp\\fP \\fIbool-value\\fP\n\n.PP\nSet the created time stamp in the image config.  By default, the time stamp is set.\n",
                    "rendered": {
                      "text": "\\fB--time-stamp\\fP \\fIbool-value\\fP\n\n.PP\nSet the created time stamp in the image config.  By default, the time stamp is set.\n",
                      "markdown": "`\\fB--time-stamp\\fP \\fIbool-value\\fP\n\n.PP\nSet the created time stamp in the image config.  By default, the time stamp is set.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-source-create.1"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 15,
                  "endLine": 31,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\\fB--time-stamp\\fP \\fIbool-value\\fP\n\n.PP\nSet the created time stamp in the image config.  By default, the time stamp is set.\n",
                    "rendered": {
                      "text": "\\fB--time-stamp\\fP \\fIbool-value\\fP\n\n.PP\nSet the created time stamp in the image config.  By default, the time stamp is set.\n",
                      "markdown": "`\\fB--time-stamp\\fP \\fIbool-value\\fP\n\n.PP\nSet the created time stamp in the image config.  By default, the time stamp is set.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-source-add.1"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 15,
                  "endLine": 14,
                  "endColumn": 20,
                  "snippet": {
                    "text": ".SH DESCRIPTION\n.PP\nAdd add a source artifact to a source image.  The artifact will be added as a\ngzip-compressed tar ball.  Add attempts to auto-tar and auto-compress only if\nnecessary.\n\n.PP\n",
                    "rendered": {
                      "text": ".SH DESCRIPTION\n.PP\nAdd add a source artifact to a source image.  The artifact will be added as a\ngzip-compressed tar ball.  Add attempts to auto-tar and auto-compress only if\nnecessary.\n\n.PP\n",
                      "markdown": "`.SH DESCRIPTION\n.PP\nAdd add a source artifact to a source image.  The artifact will be added as a\ngzip-compressed tar ball.  Add attempts to auto-tar and auto-compress only if\nnecessary.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-rmi.1"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 2,
                  "endLine": 26,
                  "endColumn": 10,
                  "snippet": {
                    "text": "If \\fIimageID\\fP is a name, but does not include a registry name, buildah will\nattempt to find and remove the named image using the registry name \\fIlocalhost\\fP,\nif no such image is found, it will search for the intended image by attempting\nto expand the given name using the names of registries provided in the system's\nregistries configuration file, registries.conf.\n.IP \\(bu 2\nIf the \\fIimageID\\fP refers to a \\fImanifest list\\fP or \\fIimage index\\fP, this command\n",
                    "rendered": {
                      "text": "If \\fIimageID\\fP is a name, but does not include a registry name, buildah will\nattempt to find and remove the named image using the registry name \\fIlocalhost\\fP,\nif no such image is found, it will search for the intended image by attempting\nto expand the given name using the names of registries provided in the system's\nregistries configuration file, registries.conf.\n.IP \\(bu 2\nIf the \\fIimageID\\fP refers to a \\fImanifest list\\fP or \\fIimage index\\fP, this command\n",
                      "markdown": "`If \\fIimageID\\fP is a name, but does not include a registry name, buildah will\nattempt to find and remove the named image using the registry name \\fIlocalhost\\fP,\nif no such image is found, it will search for the intended image by attempting\nto expand the given name using the names of registries provided in the system's\nregistries configuration file, registries.conf.\n.IP \\(bu 2\nIf the \\fIimageID\\fP refers to a \\fImanifest list\\fP or \\fIimage index\\fP, this command\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-rmi.1"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 2,
                  "endLine": 26,
                  "endColumn": 10,
                  "snippet": {
                    "text": "If \\fIimageID\\fP is a name, but does not include a registry name, buildah will\nattempt to find and remove the named image using the registry name \\fIlocalhost\\fP,\nif no such image is found, it will search for the intended image by attempting\nto expand the given name using the names of registries provided in the system's\nregistries configuration file, registries.conf.\n.IP \\(bu 2\nIf the \\fIimageID\\fP refers to a \\fImanifest list\\fP or \\fIimage index\\fP, this command\n",
                    "rendered": {
                      "text": "If \\fIimageID\\fP is a name, but does not include a registry name, buildah will\nattempt to find and remove the named image using the registry name \\fIlocalhost\\fP,\nif no such image is found, it will search for the intended image by attempting\nto expand the given name using the names of registries provided in the system's\nregistries configuration file, registries.conf.\n.IP \\(bu 2\nIf the \\fIimageID\\fP refers to a \\fImanifest list\\fP or \\fIimage index\\fP, this command\n",
                      "markdown": "`If \\fIimageID\\fP is a name, but does not include a registry name, buildah will\nattempt to find and remove the named image using the registry name \\fIlocalhost\\fP,\nif no such image is found, it will search for the intended image by attempting\nto expand the given name using the names of registries provided in the system's\nregistries configuration file, registries.conf.\n.IP \\(bu 2\nIf the \\fIimageID\\fP refers to a \\fImanifest list\\fP or \\fIimage index\\fP, this command\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-rmi.1"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 10,
                  "endLine": 24,
                  "endColumn": 16,
                  "snippet": {
                    "text": "commands should be used.\n.IP \\(bu 2\nIf \\fIimageID\\fP is a name, but does not include a registry name, buildah will\nattempt to find and remove the named image using the registry name \\fIlocalhost\\fP,\nif no such image is found, it will search for the intended image by attempting\nto expand the given name using the names of registries provided in the system's\nregistries configuration file, registries.conf.\n",
                    "rendered": {
                      "text": "commands should be used.\n.IP \\(bu 2\nIf \\fIimageID\\fP is a name, but does not include a registry name, buildah will\nattempt to find and remove the named image using the registry name \\fIlocalhost\\fP,\nif no such image is found, it will search for the intended image by attempting\nto expand the given name using the names of registries provided in the system's\nregistries configuration file, registries.conf.\n",
                      "markdown": "`commands should be used.\n.IP \\(bu 2\nIf \\fIimageID\\fP is a name, but does not include a registry name, buildah will\nattempt to find and remove the named image using the registry name \\fIlocalhost\\fP,\nif no such image is found, it will search for the intended image by attempting\nto expand the given name using the names of registries provided in the system's\nregistries configuration file, registries.conf.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 965,
                  "startColumn": 34,
                  "endLine": 965,
                  "endColumn": 42,
                  "snippet": {
                    "text": "buildah from --tls-verify=false myregistry/myrepository/imagename:imagetag\n\n.PP\nbuildah from --creds=myusername:mypassword --cert-dir ~/auth myregistry/myrepository/imagename:imagetag\n\n.PP\nbuildah from --authfile=/tmp/auths/myauths.json myregistry/myrepository/imagename:imagetag\n",
                    "rendered": {
                      "text": "buildah from --tls-verify=false myregistry/myrepository/imagename:imagetag\n\n.PP\nbuildah from --creds=myusername:mypassword --cert-dir ~/auth myregistry/myrepository/imagename:imagetag\n\n.PP\nbuildah from --authfile=/tmp/auths/myauths.json myregistry/myrepository/imagename:imagetag\n",
                      "markdown": "`buildah from --tls-verify=false myregistry/myrepository/imagename:imagetag\n\n.PP\nbuildah from --creds=myusername:mypassword --cert-dir ~/auth myregistry/myrepository/imagename:imagetag\n\n.PP\nbuildah from --authfile=/tmp/auths/myauths.json myregistry/myrepository/imagename:imagetag\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 27,
                  "endLine": 232,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--decryption-key\\fP \\fIkey[:passphrase]\\fP\n",
                    "rendered": {
                      "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--decryption-key\\fP \\fIkey[:passphrase]\\fP\n",
                      "markdown": "`.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--decryption-key\\fP \\fIkey[:passphrase]\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 15,
                  "endLine": 230,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                    "rendered": {
                      "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                      "markdown": "`\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 33,
                  "endLine": 329,
                  "endColumn": 68,
                  "snippet": {
                    "text": ".PP\nBy default proxy environment variables are passed into the container if set\nfor the Buildah process.  This can be disabled by setting the \\fB\\fC--http-proxy\\fR\noption to \\fB\\fCfalse\\fR\\&.  The environment variables passed in include \\fB\\fChttp_proxy\\fR,\n\\fB\\fChttps_proxy\\fR, \\fB\\fCftp_proxy\\fR, \\fB\\fCno_proxy\\fR, and also the upper case versions of\nthose.\n\n",
                    "rendered": {
                      "text": ".PP\nBy default proxy environment variables are passed into the container if set\nfor the Buildah process.  This can be disabled by setting the \\fB\\fC--http-proxy\\fR\noption to \\fB\\fCfalse\\fR\\&.  The environment variables passed in include \\fB\\fChttp_proxy\\fR,\n\\fB\\fChttps_proxy\\fR, \\fB\\fCftp_proxy\\fR, \\fB\\fCno_proxy\\fR, and also the upper case versions of\nthose.\n\n",
                      "markdown": "`.PP\nBy default proxy environment variables are passed into the container if set\nfor the Buildah process.  This can be disabled by setting the \\fB\\fC--http-proxy\\fR\noption to \\fB\\fCfalse\\fR\\&.  The environment variables passed in include \\fB\\fChttp_proxy\\fR,\n\\fB\\fChttps_proxy\\fR, \\fB\\fCftp_proxy\\fR, \\fB\\fCno_proxy\\fR, and also the upper case versions of\nthose.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 40,
                  "endLine": 63,
                  "endColumn": 48,
                  "snippet": {
                    "text": "Add a custom host-to-IP mapping (host:ip)\n\n.PP\nAdd a line to /etc/hosts. The format is hostname:ip. The \\fB--add-host\\fP option can be set multiple times.\n\n.PP\n\\fB--arch\\fP=\"ARCH\"\n",
                    "rendered": {
                      "text": "Add a custom host-to-IP mapping (host:ip)\n\n.PP\nAdd a line to /etc/hosts. The format is hostname:ip. The \\fB--add-host\\fP option can be set multiple times.\n\n.PP\n\\fB--arch\\fP=\"ARCH\"\n",
                      "markdown": "`Add a custom host-to-IP mapping (host:ip)\n\n.PP\nAdd a line to /etc/hosts. The format is hostname:ip. The \\fB--add-host\\fP option can be set multiple times.\n\n.PP\n\\fB--arch\\fP=\"ARCH\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 1027,
                  "startColumn": 298,
                  "endLine": 1027,
                  "endColumn": 302,
                  "snippet": {
                    "text": "\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n",
                    "rendered": {
                      "text": "\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n",
                      "markdown": "`\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 925,
                  "startColumn": 88,
                  "endLine": 926,
                  "endColumn": 3,
                  "snippet": {
                    "text": "e the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagat",
                    "rendered": {
                      "text": "e the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagat",
                      "markdown": "`e the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagat`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 925,
                  "startColumn": 28,
                  "endLine": 925,
                  "endColumn": 32,
                  "snippet": {
                    "text": "Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n",
                    "rendered": {
                      "text": "Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n",
                      "markdown": "`Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 912,
                  "startColumn": 2,
                  "endLine": 912,
                  "endColumn": 11,
                  "snippet": {
                    "text": " mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to",
                    "rendered": {
                      "text": " mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to",
                      "markdown": "` mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 784,
                  "startColumn": 67,
                  "endLine": 784,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\\fB--userns-uid-map-user\\fP \\fIuser\\fP\n\n.PP\nSpecifies that a UID mapping which should be used to set ownership, at the\nfilesystem level, on the container's contents, can be found in entries in the\n\\fB\\fC/etc/subuid\\fR file which correspond to the specified user.\nCommands run using \\fB\\fCbuildah run\\fR will default to being run in their own user\n",
                    "rendered": {
                      "text": "\\fB--userns-uid-map-user\\fP \\fIuser\\fP\n\n.PP\nSpecifies that a UID mapping which should be used to set ownership, at the\nfilesystem level, on the container's contents, can be found in entries in the\n\\fB\\fC/etc/subuid\\fR file which correspond to the specified user.\nCommands run using \\fB\\fCbuildah run\\fR will default to being run in their own user\n",
                      "markdown": "`\\fB--userns-uid-map-user\\fP \\fIuser\\fP\n\n.PP\nSpecifies that a UID mapping which should be used to set ownership, at the\nfilesystem level, on the container's contents, can be found in entries in the\n\\fB\\fC/etc/subuid\\fR file which correspond to the specified user.\nCommands run using \\fB\\fCbuildah run\\fR will default to being run in their own user\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 754,
                  "startColumn": 71,
                  "endLine": 754,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\\fB--userns-uid-map-user\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a UID mapping which should be used to set ownership, at the\nfilesystem level, on the container's contents.\nCommands run using \\fB\\fCbuildah run\\fR will default to being run in their own user\nnamespaces, configured using the UID and GID maps.\n",
                    "rendered": {
                      "text": "\\fB--userns-uid-map-user\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a UID mapping which should be used to set ownership, at the\nfilesystem level, on the container's contents.\nCommands run using \\fB\\fCbuildah run\\fR will default to being run in their own user\nnamespaces, configured using the UID and GID maps.\n",
                      "markdown": "`\\fB--userns-uid-map-user\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a UID mapping which should be used to set ownership, at the\nfilesystem level, on the container's contents.\nCommands run using \\fB\\fCbuildah run\\fR will default to being run in their own user\nnamespaces, configured using the UID and GID maps.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 732,
                  "startColumn": 71,
                  "endLine": 732,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\\fB--userns-uid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a UID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n",
                    "rendered": {
                      "text": "\\fB--userns-uid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a UID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n",
                      "markdown": "`\\fB--userns-uid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a UID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 719,
                  "startColumn": 67,
                  "endLine": 719,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\\fB--userns-gid-map-group\\fP \\fIgroup\\fP\n\n.PP\nSpecifies that a GID mapping which should be used to set ownership, at the\nfilesystem level, on the container's contents, can be found in entries in the\n\\fB\\fC/etc/subgid\\fR file which correspond to the specified group.\nCommands run using \\fB\\fCbuildah run\\fR will default to being run in their own user\n",
                    "rendered": {
                      "text": "\\fB--userns-gid-map-group\\fP \\fIgroup\\fP\n\n.PP\nSpecifies that a GID mapping which should be used to set ownership, at the\nfilesystem level, on the container's contents, can be found in entries in the\n\\fB\\fC/etc/subgid\\fR file which correspond to the specified group.\nCommands run using \\fB\\fCbuildah run\\fR will default to being run in their own user\n",
                      "markdown": "`\\fB--userns-gid-map-group\\fP \\fIgroup\\fP\n\n.PP\nSpecifies that a GID mapping which should be used to set ownership, at the\nfilesystem level, on the container's contents, can be found in entries in the\n\\fB\\fC/etc/subgid\\fR file which correspond to the specified group.\nCommands run using \\fB\\fCbuildah run\\fR will default to being run in their own user\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 689,
                  "startColumn": 71,
                  "endLine": 689,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\\fB--userns-gid-map-group\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a GID mapping which should be used to set ownership, at the\nfilesystem level, on the container's contents.\nCommands run using \\fB\\fCbuildah run\\fR will default to being run in their own user\nnamespaces, configured using the UID and GID maps.\n",
                    "rendered": {
                      "text": "\\fB--userns-gid-map-group\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a GID mapping which should be used to set ownership, at the\nfilesystem level, on the container's contents.\nCommands run using \\fB\\fCbuildah run\\fR will default to being run in their own user\nnamespaces, configured using the UID and GID maps.\n",
                      "markdown": "`\\fB--userns-gid-map-group\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a GID mapping which should be used to set ownership, at the\nfilesystem level, on the container's contents.\nCommands run using \\fB\\fCbuildah run\\fR will default to being run in their own user\nnamespaces, configured using the UID and GID maps.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 667,
                  "startColumn": 71,
                  "endLine": 667,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\\fB--userns-gid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a GID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n",
                    "rendered": {
                      "text": "\\fB--userns-gid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a GID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n",
                      "markdown": "`\\fB--userns-gid-map\\fP \\fImapping\\fP\n\n.PP\nDirectly specifies a GID mapping which should be used to set ownership, at the\nfilesystem level, on the working container's contents.\nCommands run when handling \\fB\\fCRUN\\fR instructions will default to being run in\ntheir own user namespaces, configured using the UID and GID maps.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 529,
                  "startColumn": 28,
                  "endLine": 529,
                  "endColumn": 32,
                  "snippet": {
                    "text": "OS/ARCH pairs are those used by the Go Programming Language.  In several cases\nthe ARCH value for a platform differs from one produced by other tools such as\nthe \\fB\\fCarch\\fR command.  Valid OS and architecture name combinations are listed as\nvalues for $GOOS and $GOARCH at https://golang.org/doc/install/source#environment,\nand can also be found by running \\fB\\fCgo tool dist list\\fR\\&.\n\n.PP\n",
                    "rendered": {
                      "text": "OS/ARCH pairs are those used by the Go Programming Language.  In several cases\nthe ARCH value for a platform differs from one produced by other tools such as\nthe \\fB\\fCarch\\fR command.  Valid OS and architecture name combinations are listed as\nvalues for $GOOS and $GOARCH at https://golang.org/doc/install/source#environment,\nand can also be found by running \\fB\\fCgo tool dist list\\fR\\&.\n\n.PP\n",
                      "markdown": "`OS/ARCH pairs are those used by the Go Programming Language.  In several cases\nthe ARCH value for a platform differs from one produced by other tools such as\nthe \\fB\\fCarch\\fR command.  Valid OS and architecture name combinations are listed as\nvalues for $GOOS and $GOARCH at https://golang.org/doc/install/source#environment,\nand can also be found by running \\fB\\fCgo tool dist list\\fR\\&.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 480,
                  "startColumn": 49,
                  "endLine": 480,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\\fBpasta:--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,-m,1500,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\nequivalent to default slirp4netns(1) options: disable IPv6, assign\n\\fB\\fC10.0.2.0/24\\fR to the \\fB\\fCtap0\\fR interface in the container, with gateway\n\\fB\\fC10.0.2.3\\fR, enable DNS forwarder reachable at \\fB\\fC10.0.2.3\\fR, set MTU to 1500\nbytes, disable NDP, DHCPv6 and DHCP support.\n.IP \\(bu 2\n\\fBpasta:-I,tap0,--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\n",
                    "rendered": {
                      "text": "\\fBpasta:--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,-m,1500,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\nequivalent to default slirp4netns(1) options: disable IPv6, assign\n\\fB\\fC10.0.2.0/24\\fR to the \\fB\\fCtap0\\fR interface in the container, with gateway\n\\fB\\fC10.0.2.3\\fR, enable DNS forwarder reachable at \\fB\\fC10.0.2.3\\fR, set MTU to 1500\nbytes, disable NDP, DHCPv6 and DHCP support.\n.IP \\(bu 2\n\\fBpasta:-I,tap0,--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\n",
                      "markdown": "`\\fBpasta:--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,-m,1500,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\nequivalent to default slirp4netns(1) options: disable IPv6, assign\n\\fB\\fC10.0.2.0/24\\fR to the \\fB\\fCtap0\\fR interface in the container, with gateway\n\\fB\\fC10.0.2.3\\fR, enable DNS forwarder reachable at \\fB\\fC10.0.2.3\\fR, set MTU to 1500\nbytes, disable NDP, DHCPv6 and DHCP support.\n.IP \\(bu 2\n\\fBpasta:-I,tap0,--ipv4-only,-a,10.0.2.0,-n,24,-g,10.0.2.2,--dns-forward,10.0.2.3,--no-ndp,--no-dhcpv6,--no-dhcp\\fP,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 30,
                  "endLine": 359,
                  "endColumn": 39,
                  "snippet": {
                    "text": "reusing the host's network and UTS namespaces, and creating private IPC, PID,\nmount, and user namespaces; the default for unprivileged users), and \\fIchroot\\fP\n(an internal wrapper that leans more toward chroot(1) than container\ntechnology, reusing the host's control group, network, IPC, and PID namespaces,\nand creating private mount and UTS namespaces, and creating user namespaces\nonly when they're required for ID mapping).\n\n",
                    "rendered": {
                      "text": "reusing the host's network and UTS namespaces, and creating private IPC, PID,\nmount, and user namespaces; the default for unprivileged users), and \\fIchroot\\fP\n(an internal wrapper that leans more toward chroot(1) than container\ntechnology, reusing the host's control group, network, IPC, and PID namespaces,\nand creating private mount and UTS namespaces, and creating user namespaces\nonly when they're required for ID mapping).\n\n",
                      "markdown": "`reusing the host's network and UTS namespaces, and creating private IPC, PID,\nmount, and user namespaces; the default for unprivileged users), and \\fIchroot\\fP\n(an internal wrapper that leans more toward chroot(1) than container\ntechnology, reusing the host's control group, network, IPC, and PID namespaces,\nand creating private mount and UTS namespaces, and creating user namespaces\nonly when they're required for ID mapping).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 3,
                  "endLine": 294,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".PP\n\\fB--format\\fP, \\fB-f\\fP \\fIoci\\fP | \\fIdocker\\fP\n\n.PP\nControl the format for the built image's manifest and configuration data.\nRecognized formats include \\fIoci\\fP (OCI image-spec v1.0, the default) and\n\\fIdocker\\fP (version 2, using schema format 2 for the manifest).\n\n",
                    "rendered": {
                      "text": ".PP\n\\fB--format\\fP, \\fB-f\\fP \\fIoci\\fP | \\fIdocker\\fP\n\n.PP\nControl the format for the built image's manifest and configuration data.\nRecognized formats include \\fIoci\\fP (OCI image-spec v1.0, the default) and\n\\fIdocker\\fP (version 2, using schema format 2 for the manifest).\n\n",
                      "markdown": "`.PP\n\\fB--format\\fP, \\fB-f\\fP \\fIoci\\fP | \\fIdocker\\fP\n\n.PP\nControl the format for the built image's manifest and configuration data.\nRecognized formats include \\fIoci\\fP (OCI image-spec v1.0, the default) and\n\\fIdocker\\fP (version 2, using schema format 2 for the manifest).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 16,
                  "endLine": 112,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                    "rendered": {
                      "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                      "markdown": "`\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 94,
                  "endLine": 43,
                  "endColumn": 98,
                  "snippet": {
                    "text": "\n.PP\n\\fBoci-archive:\\fP\\fIpath\\fP\\fB:\\fP\\fItag\\fP\n  An image \\fItag\\fP in a directory compliant with \"Open Container Image Layout Specification\" at \\fIpath\\fP\\&.\n\n.SS DEPENDENCIES\n.PP\n",
                    "rendered": {
                      "text": "\n.PP\n\\fBoci-archive:\\fP\\fIpath\\fP\\fB:\\fP\\fItag\\fP\n  An image \\fItag\\fP in a directory compliant with \"Open Container Image Layout Specification\" at \\fIpath\\fP\\&.\n\n.SS DEPENDENCIES\n.PP\n",
                      "markdown": "`\n.PP\n\\fBoci-archive:\\fP\\fIpath\\fP\\fB:\\fP\\fItag\\fP\n  An image \\fItag\\fP in a directory compliant with \"Open Container Image Layout Specification\" at \\fIpath\\fP\\&.\n\n.SS DEPENDENCIES\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 88,
                  "endLine": 39,
                  "endColumn": 92,
                  "snippet": {
                    "text": "\n.PP\n\\fBoci:\\fP\\fIpath\\fP\\fB:\\fP\\fItag\\fP**\n  An image tag in a directory compliant with \"Open Container Image Layout Specification\" at \\fIpath\\fP\\&.\n\n.PP\n\\fBoci-archive:\\fP\\fIpath\\fP\\fB:\\fP\\fItag\\fP\n",
                    "rendered": {
                      "text": "\n.PP\n\\fBoci:\\fP\\fIpath\\fP\\fB:\\fP\\fItag\\fP**\n  An image tag in a directory compliant with \"Open Container Image Layout Specification\" at \\fIpath\\fP\\&.\n\n.PP\n\\fBoci-archive:\\fP\\fIpath\\fP\\fB:\\fP\\fItag\\fP\n",
                      "markdown": "`\n.PP\n\\fBoci:\\fP\\fIpath\\fP\\fB:\\fP\\fItag\\fP**\n  An image tag in a directory compliant with \"Open Container Image Layout Specification\" at \\fIpath\\fP\\&.\n\n.PP\n\\fBoci-archive:\\fP\\fIpath\\fP\\fB:\\fP\\fItag\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 1027,
                  "startColumn": 119,
                  "endLine": 1027,
                  "endColumn": 126,
                  "snippet": {
                    "text": "\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n",
                    "rendered": {
                      "text": "\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n",
                      "markdown": "`\n.SH FOOTNOTES\n.PP\n1: The Buildah project is committed to inclusivity, a core value of open source. The \\fB\\fCmaster\\fR and \\fB\\fCslave\\fR mount propagation terminology used here is problematic and divisive, and should be changed. However, these terms are currently used within the Linux kernel and must be used as-is at this time. When the kernel maintainers rectify this usage, Buildah will follow suit immediately.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 936,
                  "startColumn": 71,
                  "endLine": 936,
                  "endColumn": 78,
                  "snippet": {
                    "text": "example, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH EXAMPLE\n",
                    "rendered": {
                      "text": "example, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH EXAMPLE\n",
                      "markdown": "`example, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH EXAMPLE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 935,
                  "startColumn": 95,
                  "endLine": 936,
                  "endColumn": 6,
                  "snippet": {
                    "text": "To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH EXAMPLE\n",
                    "rendered": {
                      "text": "To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH EXAMPLE\n",
                      "markdown": "`To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n.SH EXAMPLE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 935,
                  "startColumn": 40,
                  "endLine": 935,
                  "endColumn": 47,
                  "snippet": {
                    "text": "To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n",
                    "rendered": {
                      "text": "To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n",
                      "markdown": "`To change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n\\fB\\fC/foo\\fR, then use \\fB\\fCmount --make-shared /\\fR to convert \\fB\\fC/\\fR into a \\fB\\fCshared\\fR mount.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 933,
                  "startColumn": 16,
                  "endLine": 933,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n",
                    "rendered": {
                      "text": "\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n",
                      "markdown": "`\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\nmount can be changed directly. For instance if \\fB\\fC/\\fR is the source mount for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 932,
                  "startColumn": 37,
                  "endLine": 932,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\n",
                    "rendered": {
                      "text": "\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\n",
                      "markdown": "`\\[la]#Footnote1\\[ra]\n\n.PP\nTo change propagation properties of a mount point use the \\fB\\fCmount\\fR command. For\nexample, to bind mount the source directory \\fB\\fC/foo\\fR do\n\\fB\\fCmount --bind /foo /foo\\fR and \\fB\\fCmount --make-private --make-shared /foo\\fR\\&. This\nwill convert /foo into a \\fB\\fCshared\\fR mount point.  The propagation properties of the source\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 928,
                  "startColumn": 31,
                  "endLine": 928,
                  "endColumn": 38,
                  "snippet": {
                    "text": "can be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n",
                    "rendered": {
                      "text": "can be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n",
                      "markdown": "`can be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 927,
                  "startColumn": 81,
                  "endLine": 927,
                  "endColumn": 88,
                  "snippet": {
                    "text": "properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                    "rendered": {
                      "text": "properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                      "markdown": "`properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 927,
                  "startColumn": 27,
                  "endLine": 927,
                  "endColumn": 34,
                  "snippet": {
                    "text": "properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                    "rendered": {
                      "text": "properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                      "markdown": "`properties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n\\[la]#Footnote1\\[ra]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 925,
                  "startColumn": 35,
                  "endLine": 925,
                  "endColumn": 42,
                  "snippet": {
                    "text": "Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n",
                    "rendered": {
                      "text": "Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n",
                      "markdown": "`Use \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\nnothing is there that means the mount is \\fB\\fCprivate\\fR\\&. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 924,
                  "startColumn": 84,
                  "endLine": 924,
                  "endColumn": 91,
                  "snippet": {
                    "text": ".PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\n",
                    "rendered": {
                      "text": ".PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\n",
                      "markdown": "`.PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\nat \\fB\\fCoptional fields\\fR and see if any propagation properties are specified.\n\\fB\\fCshared:X\\fR means the mount is \\fB\\fCshared\\fR, \\fB\\fCmaster:X\\fR means the mount is \\fB\\fCslave\\fR and if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 922,
                  "startColumn": 52,
                  "endLine": 922,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\\[la]#Footnote1\\[ra]\n\n.PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\n",
                    "rendered": {
                      "text": "\\[la]#Footnote1\\[ra]\n\n.PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\n",
                      "markdown": "`\\[la]#Footnote1\\[ra]\n\n.PP\nUse \\fB\\fCdf <source-dir>\\fR to determine the source mount and then use\n\\fB\\fCfindmnt -o TARGET,PROPAGATION <source-mount-dir>\\fR to determine propagation\nproperties of source mount, if \\fB\\fCfindmnt\\fR utility is not available, the source mount point\ncan be determined by looking at the mount entry in \\fB\\fC/proc/self/mountinfo\\fR\\&. Look\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 918,
                  "startColumn": 10,
                  "endLine": 918,
                  "endColumn": 17,
                  "snippet": {
                    "text": "named volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n",
                    "rendered": {
                      "text": "named volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n",
                      "markdown": "`named volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 917,
                  "startColumn": 26,
                  "endLine": 917,
                  "endColumn": 33,
                  "snippet": {
                    "text": "be specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                    "rendered": {
                      "text": "be specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n",
                      "markdown": "`be specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n\\[la]#Footnote1\\[ra]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 915,
                  "startColumn": 75,
                  "endLine": 915,
                  "endColumn": 82,
                  "snippet": {
                    "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                    "rendered": {
                      "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                      "markdown": "`To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 915,
                  "startColumn": 58,
                  "endLine": 915,
                  "endColumn": 65,
                  "snippet": {
                    "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                    "rendered": {
                      "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                      "markdown": "`To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 915,
                  "startColumn": 18,
                  "endLine": 915,
                  "endColumn": 25,
                  "snippet": {
                    "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                    "rendered": {
                      "text": "To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n",
                      "markdown": "`To control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on the source mount point (the mount point\nwhere source dir is mounted on) it has to have the right propagation properties. For\nshared volumes, the source mount point has to be shared. And for slave volumes,\nthe source mount has to be either shared or slave. [1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 912,
                  "startColumn": 14,
                  "endLine": 912,
                  "endColumn": 21,
                  "snippet": {
                    "text": "leted inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on t",
                    "rendered": {
                      "text": "leted inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on t",
                      "markdown": "`leted inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\nbe specified only for bind mounted volumes and not for internal volumes or\nnamed volumes. For mount propagation to work on t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 910,
                  "startColumn": 62,
                  "endLine": 910,
                  "endColumn": 69,
                  "snippet": {
                    "text": ".PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\n",
                    "rendered": {
                      "text": ".PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\n",
                      "markdown": "`.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 910,
                  "startColumn": 3,
                  "endLine": 910,
                  "endColumn": 10,
                  "snippet": {
                    "text": ".PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\n",
                    "rendered": {
                      "text": ".PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\n",
                      "markdown": "`.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\nTo control the mount propagation property of the volume use the \\fB\\fC:[r]shared\\fR,\n\\fB\\fC:[r]slave\\fR, \\fB\\fC[r]private\\fR or \\fB\\fC[r]unbindable\\fRpropagation flag. The propagation property can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 908,
                  "startColumn": 8,
                  "endLine": 908,
                  "endColumn": 15,
                  "snippet": {
                    "text": "be changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\n",
                    "rendered": {
                      "text": "be changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\n",
                      "markdown": "`be changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\nthe container on that volume will be visible to both the host and container. When\nthe mount propagation policy is set to \\fB\\fCslave\\fR, one way mount propagation is enabled\nand any mounts completed on the host for that volume will be visible only inside of the container.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 905,
                  "startColumn": 33,
                  "endLine": 905,
                  "endColumn": 40,
                  "snippet": {
                    "text": ".PP\nBy default bind mounted volumes are \\fB\\fCprivate\\fR\\&. That means any mounts done\ninside container will not be visible on the host and vice versa. This behavior can\nbe changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\n",
                    "rendered": {
                      "text": ".PP\nBy default bind mounted volumes are \\fB\\fCprivate\\fR\\&. That means any mounts done\ninside container will not be visible on the host and vice versa. This behavior can\nbe changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\n",
                      "markdown": "`.PP\nBy default bind mounted volumes are \\fB\\fCprivate\\fR\\&. That means any mounts done\ninside container will not be visible on the host and vice versa. This behavior can\nbe changed by specifying a volume mount propagation property.\n\n.PP\nWhen the mount propagation policy is set to \\fB\\fCshared\\fR, any mounts completed inside\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 898,
                  "startColumn": 79,
                  "endLine": 898,
                  "endColumn": 86,
                  "snippet": {
                    "text": "The \\fB\\fCO\\fR flag is not allowed to be specified with the \\fB\\fCZ\\fR or \\fB\\fCz\\fR flags. Content mounted into the container is labeled with the private label.\n   On SELinux systems, labels in the source directory need to be readable by the container label. If not, SELinux container separation must be disabled for the container to work.\n.IP \\(bu 2\nModification of the directory volume mounted into the container with an overlay mount can cause unexpected failures.  It is recommended that you do not modify the directory until the container finishes running.\n\n.RE\n\n",
                    "rendered": {
                      "text": "The \\fB\\fCO\\fR flag is not allowed to be specified with the \\fB\\fCZ\\fR or \\fB\\fCz\\fR flags. Content mounted into the container is labeled with the private label.\n   On SELinux systems, labels in the source directory need to be readable by the container label. If not, SELinux container separation must be disabled for the container to work.\n.IP \\(bu 2\nModification of the directory volume mounted into the container with an overlay mount can cause unexpected failures.  It is recommended that you do not modify the directory until the container finishes running.\n\n.RE\n\n",
                      "markdown": "`The \\fB\\fCO\\fR flag is not allowed to be specified with the \\fB\\fCZ\\fR or \\fB\\fCz\\fR flags. Content mounted into the container is labeled with the private label.\n   On SELinux systems, labels in the source directory need to be readable by the container label. If not, SELinux container separation must be disabled for the container to work.\n.IP \\(bu 2\nModification of the directory volume mounted into the container with an overlay mount can cause unexpected failures.  It is recommended that you do not modify the directory until the container finishes running.\n\n.RE\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 888,
                  "startColumn": 36,
                  "endLine": 888,
                  "endColumn": 43,
                  "snippet": {
                    "text": "Any subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR mount is sharing the package cache from the host into the container to allow speeding up builds.\n\n.PP\nNote:\n",
                    "rendered": {
                      "text": "Any subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR mount is sharing the package cache from the host into the container to allow speeding up builds.\n\n.PP\nNote:\n",
                      "markdown": "`Any subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR mount is sharing the package cache from the host into the container to allow speeding up builds.\n\n.PP\nNote:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 882,
                  "startColumn": 511,
                  "endLine": 882,
                  "endColumn": 518,
                  "snippet": {
                    "text": "int and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and the container storage directory will be the upper. Modifications to the mount point are destroyed when the \\fB\\fCRUN\\fR command finishes executing, similar to a tmpfs mount point.\n\n.PP\nAny subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR mount is sharing the package cache from the host into the container to allow speeding up builds.",
                    "rendered": {
                      "text": "int and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and the container storage directory will be the upper. Modifications to the mount point are destroyed when the \\fB\\fCRUN\\fR command finishes executing, similar to a tmpfs mount point.\n\n.PP\nAny subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR mount is sharing the package cache from the host into the container to allow speeding up builds.",
                      "markdown": "`int and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and the container storage directory will be the upper. Modifications to the mount point are destroyed when the \\fB\\fCRUN\\fR command finishes executing, similar to a tmpfs mount point.\n\n.PP\nAny subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR mount is sharing the package cache from the host into the container to allow speeding up builds.`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 882,
                  "startColumn": 416,
                  "endLine": 882,
                  "endColumn": 423,
                  "snippet": {
                    "text": "e system. The \\fB\\fCRUN\\fR command containers are allowed to modify contents within the mountpoint and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and the container storage directory will be the upper. Modifications to the mount point are destroyed when the \\fB\\fCRUN\\fR command finishes executing, similar to a tmpfs mount point.\n\n.PP\nAny subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR m",
                    "rendered": {
                      "text": "e system. The \\fB\\fCRUN\\fR command containers are allowed to modify contents within the mountpoint and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and the container storage directory will be the upper. Modifications to the mount point are destroyed when the \\fB\\fCRUN\\fR command finishes executing, similar to a tmpfs mount point.\n\n.PP\nAny subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR m",
                      "markdown": "`e system. The \\fB\\fCRUN\\fR command containers are allowed to modify contents within the mountpoint and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and the container storage directory will be the upper. Modifications to the mount point are destroyed when the \\fB\\fCRUN\\fR command finishes executing, similar to a tmpfs mount point.\n\n.PP\nAny subsequent execution of \\fB\\fCRUN\\fR commands sees the original source directory content, any changes from previous RUN commands no longer exist.\n\n.PP\nOne use case of the \\fB\\fCoverlay\\fR m`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 882,
                  "startColumn": 37,
                  "endLine": 882,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\ncontent label. Shared volume labels allow all containers to read/write content.\nThe \\fB\\fCZ\\fR option tells Buildah to label the content with a private unshared label.\nOnly the current container can use a private volume.\n\n.PP\n\\fB\\fCOverlay Volume Mounts\\fR\n\n.PP\nThe \\fB\\fC:O\\fR flag tells Buildah to mount the directory from the host as a temporary storage using the Overlay file system. The \\fB\\fCRUN\\fR command containers are allowed to modify contents within the mountpoint and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and",
                    "rendered": {
                      "text": "\ncontent label. Shared volume labels allow all containers to read/write content.\nThe \\fB\\fCZ\\fR option tells Buildah to label the content with a private unshared label.\nOnly the current container can use a private volume.\n\n.PP\n\\fB\\fCOverlay Volume Mounts\\fR\n\n.PP\nThe \\fB\\fC:O\\fR flag tells Buildah to mount the directory from the host as a temporary storage using the Overlay file system. The \\fB\\fCRUN\\fR command containers are allowed to modify contents within the mountpoint and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and",
                      "markdown": "`\ncontent label. Shared volume labels allow all containers to read/write content.\nThe \\fB\\fCZ\\fR option tells Buildah to label the content with a private unshared label.\nOnly the current container can use a private volume.\n\n.PP\n\\fB\\fCOverlay Volume Mounts\\fR\n\n.PP\nThe \\fB\\fC:O\\fR flag tells Buildah to mount the directory from the host as a temporary storage using the Overlay file system. The \\fB\\fCRUN\\fR command containers are allowed to modify contents within the mountpoint and are stored in the container storage in a separate directory.  In Overlay FS terms the source directory will be the lower, and`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 847,
                  "startColumn": 66,
                  "endLine": 847,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\\fB\\fCWrite Protected Volume Mounts\\fR\n\n.PP\nYou can add the \\fB\\fC:ro\\fR or \\fB\\fC:rw\\fR suffix to a volume to mount it read-only or\nread-write mode, respectively. By default, the volumes are mounted read-write.\nSee examples.\n\n",
                    "rendered": {
                      "text": "\\fB\\fCWrite Protected Volume Mounts\\fR\n\n.PP\nYou can add the \\fB\\fC:ro\\fR or \\fB\\fC:rw\\fR suffix to a volume to mount it read-only or\nread-write mode, respectively. By default, the volumes are mounted read-write.\nSee examples.\n\n",
                      "markdown": "`\\fB\\fCWrite Protected Volume Mounts\\fR\n\n.PP\nYou can add the \\fB\\fC:ro\\fR or \\fB\\fC:rw\\fR suffix to a volume to mount it read-only or\nread-write mode, respectively. By default, the volumes are mounted read-write.\nSee examples.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 840,
                  "startColumn": 45,
                  "endLine": 840,
                  "endColumn": 52,
                  "snippet": {
                    "text": "and bind mounts that into the container.\n\n.PP\nYou can specify multiple  \\fB-v\\fP options to mount one or more mounts to a\ncontainer.\n\n.PP\n",
                    "rendered": {
                      "text": "and bind mounts that into the container.\n\n.PP\nYou can specify multiple  \\fB-v\\fP options to mount one or more mounts to a\ncontainer.\n\n.PP\n",
                      "markdown": "`and bind mounts that into the container.\n\n.PP\nYou can specify multiple  \\fB-v\\fP options to mount one or more mounts to a\ncontainer.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 634,
                  "startColumn": 20,
                  "endLine": 634,
                  "endColumn": 26,
                  "snippet": {
                    "text": "This option can be specified multiple times.  Recognized resource types\ninclude:\n  \"core\": maximum core dump size (ulimit -c)\n  \"cpu\": maximum CPU time (ulimit -t)\n  \"data\": maximum size of a process's data segment (ulimit -d)\n  \"fsize\": maximum size of new files (ulimit -f)\n  \"locks\": maximum number of file locks (ulimit -x)\n",
                    "rendered": {
                      "text": "This option can be specified multiple times.  Recognized resource types\ninclude:\n  \"core\": maximum core dump size (ulimit -c)\n  \"cpu\": maximum CPU time (ulimit -t)\n  \"data\": maximum size of a process's data segment (ulimit -d)\n  \"fsize\": maximum size of new files (ulimit -f)\n  \"locks\": maximum number of file locks (ulimit -x)\n",
                      "markdown": "`This option can be specified multiple times.  Recognized resource types\ninclude:\n  \"core\": maximum core dump size (ulimit -c)\n  \"cpu\": maximum CPU time (ulimit -t)\n  \"data\": maximum size of a process's data segment (ulimit -d)\n  \"fsize\": maximum size of new files (ulimit -f)\n  \"locks\": maximum number of file locks (ulimit -x)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 453,
                  "startColumn": 6,
                  "endLine": 453,
                  "endColumn": 10,
                  "snippet": {
                    "text": "name, are copied from the host. If port forwarding isn't configured, ports\nare forwarded dynamically as services are bound on either side (init\nnamespace or container namespace). Port forwarding preserves the original\nsource IP address. Options described in pasta(1) can be specified as\ncomma-separated arguments.\n.br\nIn terms of pasta(1) options, \\fB--config-net\\fP is given by default, in\n",
                    "rendered": {
                      "text": "name, are copied from the host. If port forwarding isn't configured, ports\nare forwarded dynamically as services are bound on either side (init\nnamespace or container namespace). Port forwarding preserves the original\nsource IP address. Options described in pasta(1) can be specified as\ncomma-separated arguments.\n.br\nIn terms of pasta(1) options, \\fB--config-net\\fP is given by default, in\n",
                      "markdown": "`name, are copied from the host. If port forwarding isn't configured, ports\nare forwarded dynamically as services are bound on either side (init\nnamespace or container namespace). Port forwarding preserves the original\nsource IP address. Options described in pasta(1) can be specified as\ncomma-separated arguments.\n.br\nIn terms of pasta(1) options, \\fB--config-net\\fP is given by default, in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 24,
                  "endLine": 429,
                  "endColumn": 28,
                  "snippet": {
                    "text": ".IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n\\fBcidr=CIDR\\fP: Specify ip range to use for this network. (Default is \\fB\\fC10.0.2.0/24\\fR).\n.IP \\(bu 2\n\\fBenable_ipv6=true|false\\fP: Enable IPv6. Default is true. (Required for \\fB\\fCoutbound_addr6\\fR).\n.IP \\(bu 2\n",
                    "rendered": {
                      "text": ".IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n\\fBcidr=CIDR\\fP: Specify ip range to use for this network. (Default is \\fB\\fC10.0.2.0/24\\fR).\n.IP \\(bu 2\n\\fBenable_ipv6=true|false\\fP: Enable IPv6. Default is true. (Required for \\fB\\fCoutbound_addr6\\fR).\n.IP \\(bu 2\n",
                      "markdown": "`.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n\\fBcidr=CIDR\\fP: Specify ip range to use for this network. (Default is \\fB\\fC10.0.2.0/24\\fR).\n.IP \\(bu 2\n\\fBenable_ipv6=true|false\\fP: Enable IPv6. Default is true. (Required for \\fB\\fCoutbound_addr6\\fR).\n.IP \\(bu 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 425,
                  "startColumn": 120,
                  "endLine": 425,
                  "endColumn": 124,
                  "snippet": {
                    "text": "\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n",
                    "rendered": {
                      "text": "\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n",
                      "markdown": "`\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 425,
                  "startColumn": 82,
                  "endLine": 425,
                  "endColumn": 86,
                  "snippet": {
                    "text": "\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n",
                    "rendered": {
                      "text": "\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n",
                      "markdown": "`\\fBslirp4netns[:OPTIONS,...]\\fP: use \\fBslirp4netns\\fP(1) to create a user network stack. This is the default for rootless containers. It is possible to specify these additional options, they can also be set with \\fB\\fCnetwork_cmd_options\\fR in containers.conf:\n.RS\n.IP \\(bu 2\n\\fBallow_host_loopback=true|false\\fP: Allow slirp4netns to reach the host loopback IP (default is 10.0.2.2 or the second IP from slirp4netns cidr subnet when changed, see the cidr option below). The default is false.\n.IP \\(bu 2\n\\fBmtu=MTU\\fP: Specify the MTU to use for this network. (Default is \\fB\\fC65520\\fR).\n.IP \\(bu 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 20,
                  "endLine": 360,
                  "endColumn": 27,
                  "snippet": {
                    "text": "mount, and user namespaces; the default for unprivileged users), and \\fIchroot\\fP\n(an internal wrapper that leans more toward chroot(1) than container\ntechnology, reusing the host's control group, network, IPC, and PID namespaces,\nand creating private mount and UTS namespaces, and creating user namespaces\nonly when they're required for ID mapping).\n\n.PP\n",
                    "rendered": {
                      "text": "mount, and user namespaces; the default for unprivileged users), and \\fIchroot\\fP\n(an internal wrapper that leans more toward chroot(1) than container\ntechnology, reusing the host's control group, network, IPC, and PID namespaces,\nand creating private mount and UTS namespaces, and creating user namespaces\nonly when they're required for ID mapping).\n\n.PP\n",
                      "markdown": "`mount, and user namespaces; the default for unprivileged users), and \\fIchroot\\fP\n(an internal wrapper that leans more toward chroot(1) than container\ntechnology, reusing the host's control group, network, IPC, and PID namespaces,\nand creating private mount and UTS namespaces, and creating user namespaces\nonly when they're required for ID mapping).\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 41,
                  "endLine": 187,
                  "endColumn": 47,
                  "snippet": {
                    "text": "receive 16.5%, 16.5% and 33% of the CPU.\n\n.PP\nOn a multi-core system, the shares of CPU time are distributed over all CPU\ncores. Even if a container is limited to less than 100% of CPU time, it can\nuse 100% of each individual CPU core.\n\n",
                    "rendered": {
                      "text": "receive 16.5%, 16.5% and 33% of the CPU.\n\n.PP\nOn a multi-core system, the shares of CPU time are distributed over all CPU\ncores. Even if a container is limited to less than 100% of CPU time, it can\nuse 100% of each individual CPU core.\n\n",
                      "markdown": "`receive 16.5%, 16.5% and 33% of the CPU.\n\n.PP\nOn a multi-core system, the shares of CPU time are distributed over all CPU\ncores. Even if a container is limited to less than 100% of CPU time, it can\nuse 100% of each individual CPU core.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 44,
                  "endLine": 175,
                  "endColumn": 50,
                  "snippet": {
                    "text": ".PP\nThe proportion will only apply when CPU-intensive processes are running.\nWhen tasks in one container are idle, other containers can use the\nleft-over CPU time. The actual amount of CPU time will vary depending on\nthe number of containers running on the system.\n\n.PP\n",
                    "rendered": {
                      "text": ".PP\nThe proportion will only apply when CPU-intensive processes are running.\nWhen tasks in one container are idle, other containers can use the\nleft-over CPU time. The actual amount of CPU time will vary depending on\nthe number of containers running on the system.\n\n.PP\n",
                      "markdown": "`.PP\nThe proportion will only apply when CPU-intensive processes are running.\nWhen tasks in one container are idle, other containers can use the\nleft-over CPU time. The actual amount of CPU time will vary depending on\nthe number of containers running on the system.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-from.1"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 47,
                  "endLine": 35,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n.PP\n\\fBdocker-daemon:\\fP\\fIdocker-reference\\fP\n  An image \\fIdocker-reference\\fP stored in the docker daemon's internal storage.  \\fIdocker-reference\\fP must include either a tag or a digest.  Alternatively, when reading images, the format can also be docker-daemon:algo:digest (an image ID).\n\n.PP\n\\fBoci:\\fP\\fIpath\\fP\\fB:\\fP\\fItag\\fP**\n",
                    "rendered": {
                      "text": "\n.PP\n\\fBdocker-daemon:\\fP\\fIdocker-reference\\fP\n  An image \\fIdocker-reference\\fP stored in the docker daemon's internal storage.  \\fIdocker-reference\\fP must include either a tag or a digest.  Alternatively, when reading images, the format can also be docker-daemon:algo:digest (an image ID).\n\n.PP\n\\fBoci:\\fP\\fIpath\\fP\\fB:\\fP\\fItag\\fP**\n",
                      "markdown": "`\n.PP\n\\fBdocker-daemon:\\fP\\fIdocker-reference\\fP\n  An image \\fIdocker-reference\\fP stored in the docker daemon's internal storage.  \\fIdocker-reference\\fP must include either a tag or a digest.  Alternatively, when reading images, the format can also be docker-daemon:algo:digest (an image ID).\n\n.PP\n\\fBoci:\\fP\\fIpath\\fP\\fB:\\fP\\fItag\\fP**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-source-push.1"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 27,
                  "endLine": 26,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--digestfile\\fP \\fIdigestfile\\fP\n",
                    "rendered": {
                      "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--digestfile\\fP \\fIdigestfile\\fP\n",
                      "markdown": "`.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--digestfile\\fP \\fIdigestfile\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-source-push.1"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 15,
                  "endLine": 24,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                    "rendered": {
                      "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                      "markdown": "`\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-source-pull.1"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 27,
                  "endLine": 27,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--quiet\\fP, \\fB-q\\fP\n",
                    "rendered": {
                      "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--quiet\\fP, \\fB-q\\fP\n",
                      "markdown": "`.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--quiet\\fP, \\fB-q\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-source-pull.1"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 15,
                  "endLine": 25,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                    "rendered": {
                      "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                      "markdown": "`\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-push.1"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 75,
                  "endLine": 215,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\n.PP\nThis example pushes the image specified by the imageID and puts it into the registry on the localhost using credentials and certificates for authentication.\n \\fB\\fC# buildah push --cert-dir ~/auth --tls-verify=true --creds=username:password imageID localhost:5000/my-imageID\\fR\n\n.SH ENVIRONMENT\n.PP\n",
                    "rendered": {
                      "text": "\n.PP\nThis example pushes the image specified by the imageID and puts it into the registry on the localhost using credentials and certificates for authentication.\n \\fB\\fC# buildah push --cert-dir ~/auth --tls-verify=true --creds=username:password imageID localhost:5000/my-imageID\\fR\n\n.SH ENVIRONMENT\n.PP\n",
                      "markdown": "`\n.PP\nThis example pushes the image specified by the imageID and puts it into the registry on the localhost using credentials and certificates for authentication.\n \\fB\\fC# buildah push --cert-dir ~/auth --tls-verify=true --creds=username:password imageID localhost:5000/my-imageID\\fR\n\n.SH ENVIRONMENT\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-push.1"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 27,
                  "endLine": 73,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--digestfile\\fP \\fIDigestfile\\fP\n",
                    "rendered": {
                      "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--digestfile\\fP \\fIDigestfile\\fP\n",
                      "markdown": "`.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--digestfile\\fP \\fIDigestfile\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-push.1"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 15,
                  "endLine": 71,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                    "rendered": {
                      "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                      "markdown": "`\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-push.1"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 16,
                  "endLine": 49,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                    "rendered": {
                      "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                      "markdown": "`\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-push.1"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 81,
                  "endLine": 204,
                  "endColumn": 89,
                  "snippet": {
                    "text": "\\fB\\fC# buildah push --authfile /tmp/auths/myauths.json imageID docker://registry.example.com/repository:tag\\fR\n\n.PP\nThis example pushes the image specified by the imageID and puts it into the local docker container store.\n\n.PP\n\\fB\\fC# buildah push imageID docker-daemon:image:tag\\fR\n",
                    "rendered": {
                      "text": "\\fB\\fC# buildah push --authfile /tmp/auths/myauths.json imageID docker://registry.example.com/repository:tag\\fR\n\n.PP\nThis example pushes the image specified by the imageID and puts it into the local docker container store.\n\n.PP\n\\fB\\fC# buildah push imageID docker-daemon:image:tag\\fR\n",
                      "markdown": "`\\fB\\fC# buildah push --authfile /tmp/auths/myauths.json imageID docker://registry.example.com/repository:tag\\fR\n\n.PP\nThis example pushes the image specified by the imageID and puts it into the local docker container store.\n\n.PP\n\\fB\\fC# buildah push imageID docker-daemon:image:tag\\fR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-push.1"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 59,
                  "endLine": 174,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\\fB\\fC# buildah push imageID oci:/path/to/layout:image:tag\\fR\n\n.PP\nThis example pushes the image specified by the imageID to a tar archive in oci format.\n\n.PP\n\\fB\\fC# buildah push imageID oci-archive:/path/to/archive:image:tag\\fR\n",
                    "rendered": {
                      "text": "\\fB\\fC# buildah push imageID oci:/path/to/layout:image:tag\\fR\n\n.PP\nThis example pushes the image specified by the imageID to a tar archive in oci format.\n\n.PP\n\\fB\\fC# buildah push imageID oci-archive:/path/to/archive:image:tag\\fR\n",
                      "markdown": "`\\fB\\fC# buildah push imageID oci:/path/to/layout:image:tag\\fR\n\n.PP\nThis example pushes the image specified by the imageID to a tar archive in oci format.\n\n.PP\n\\fB\\fC# buildah push imageID oci-archive:/path/to/archive:image:tag\\fR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-push.1"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 78,
                  "endLine": 162,
                  "endColumn": 86,
                  "snippet": {
                    "text": "\n.SH EXAMPLE\n.PP\nThis example pushes the image specified by the imageID to a local directory in docker format.\n\n.PP\n\\fB\\fC# buildah push imageID dir:/path/to/image\\fR\n",
                    "rendered": {
                      "text": "\n.SH EXAMPLE\n.PP\nThis example pushes the image specified by the imageID to a local directory in docker format.\n\n.PP\n\\fB\\fC# buildah push imageID dir:/path/to/image\\fR\n",
                      "markdown": "`\n.SH EXAMPLE\n.PP\nThis example pushes the image specified by the imageID to a local directory in docker format.\n\n.PP\n\\fB\\fC# buildah push imageID dir:/path/to/image\\fR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-pull.1"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 34,
                  "endLine": 179,
                  "endColumn": 42,
                  "snippet": {
                    "text": "buildah pull --tls-verify=false myregistry/myrepository/imagename:imagetag\n\n.PP\nbuildah pull --creds=myusername:mypassword --cert-dir ~/auth myregistry/myrepository/imagename:imagetag\n\n.PP\nbuildah pull --authfile=/tmp/auths/myauths.json myregistry/myrepository/imagename:imagetag\n",
                    "rendered": {
                      "text": "buildah pull --tls-verify=false myregistry/myrepository/imagename:imagetag\n\n.PP\nbuildah pull --creds=myusername:mypassword --cert-dir ~/auth myregistry/myrepository/imagename:imagetag\n\n.PP\nbuildah pull --authfile=/tmp/auths/myauths.json myregistry/myrepository/imagename:imagetag\n",
                      "markdown": "`buildah pull --tls-verify=false myregistry/myrepository/imagename:imagetag\n\n.PP\nbuildah pull --creds=myusername:mypassword --cert-dir ~/auth myregistry/myrepository/imagename:imagetag\n\n.PP\nbuildah pull --authfile=/tmp/auths/myauths.json myregistry/myrepository/imagename:imagetag\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-pull.1"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 27,
                  "endLine": 64,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--decryption-key\\fP \\fIkey[:passphrase]\\fP\n",
                    "rendered": {
                      "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--decryption-key\\fP \\fIkey[:passphrase]\\fP\n",
                      "markdown": "`.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--decryption-key\\fP \\fIkey[:passphrase]\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-pull.1"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 15,
                  "endLine": 62,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                    "rendered": {
                      "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                      "markdown": "`\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-pull.1"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 28,
                  "endLine": 90,
                  "endColumn": 32,
                  "snippet": {
                    "text": "OS/ARCH pairs are those used by the Go Programming Language.  In several cases\nthe ARCH value for a platform differs from one produced by other tools such as\nthe \\fB\\fCarch\\fR command.  Valid OS and architecture name combinations are listed as\nvalues for $GOOS and $GOARCH at https://golang.org/doc/install/source#environment,\nand can also be found by running \\fB\\fCgo tool dist list\\fR\\&.\n\n.PP\n",
                    "rendered": {
                      "text": "OS/ARCH pairs are those used by the Go Programming Language.  In several cases\nthe ARCH value for a platform differs from one produced by other tools such as\nthe \\fB\\fCarch\\fR command.  Valid OS and architecture name combinations are listed as\nvalues for $GOOS and $GOARCH at https://golang.org/doc/install/source#environment,\nand can also be found by running \\fB\\fCgo tool dist list\\fR\\&.\n\n.PP\n",
                      "markdown": "`OS/ARCH pairs are those used by the Go Programming Language.  In several cases\nthe ARCH value for a platform differs from one produced by other tools such as\nthe \\fB\\fCarch\\fR command.  Valid OS and architecture name combinations are listed as\nvalues for $GOOS and $GOARCH at https://golang.org/doc/install/source#environment,\nand can also be found by running \\fB\\fCgo tool dist list\\fR\\&.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-pull.1"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 16,
                  "endLine": 55,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                    "rendered": {
                      "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                      "markdown": "`\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-pull.1"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 184,
                  "endLine": 110,
                  "endColumn": 190,
                  "snippet": {
                    "text": ".IP \\(bu 2\n\\fBnever\\fP: Never pull the image but use the one from the local containers storage.  Throw an error if no image could be found.\n.IP \\(bu 2\n\\fBnewer\\fP: Pull if the image on the registry is newer than the one in the local containers storage.  An image is considered to be newer when the digests are different.  Comparing the time stamps is prone to errors.  Pull errors are suppressed if a local image was found.\n\n.RE\n\n",
                    "rendered": {
                      "text": ".IP \\(bu 2\n\\fBnever\\fP: Never pull the image but use the one from the local containers storage.  Throw an error if no image could be found.\n.IP \\(bu 2\n\\fBnewer\\fP: Pull if the image on the registry is newer than the one in the local containers storage.  An image is considered to be newer when the digests are different.  Comparing the time stamps is prone to errors.  Pull errors are suppressed if a local image was found.\n\n.RE\n\n",
                      "markdown": "`.IP \\(bu 2\n\\fBnever\\fP: Never pull the image but use the one from the local containers storage.  Throw an error if no image could be found.\n.IP \\(bu 2\n\\fBnewer\\fP: Pull if the image on the registry is newer than the one in the local containers storage.  An image is considered to be newer when the digests are different.  Comparing the time stamps is prone to errors.  Pull errors are suppressed if a local image was found.\n\n.RE\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-manifest-annotate.1"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 16,
                  "endLine": 78,
                  "endColumn": 20,
                  "snippet": {
                    "text": ".PP\nSet the \\fIsubject\\fP field in the image index to mark the image index as being\nassociated with the specified image in some way.  An image index can only be\nassociated with, at most, one subject.\n\n.PP\n\\fB--variant\\fP\n",
                    "rendered": {
                      "text": ".PP\nSet the \\fIsubject\\fP field in the image index to mark the image index as being\nassociated with the specified image in some way.  An image index can only be\nassociated with, at most, one subject.\n\n.PP\n\\fB--variant\\fP\n",
                      "markdown": "`.PP\nSet the \\fIsubject\\fP field in the image index to mark the image index as being\nassociated with the specified image in some way.  An image index can only be\nassociated with, at most, one subject.\n\n.PP\n\\fB--variant\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-manifest-annotate.1"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 35,
                  "endLine": 5,
                  "endColumn": 43,
                  "snippet": {
                    "text": ".TH buildah-manifest-annotate \"1\" \"September 2019\" \"buildah\"\n.SH NAME\n.PP\nbuildah-manifest-annotate - Add and update information about an image or artifact to a manifest list or image index.\n\n.SH SYNOPSIS\n.PP\n",
                    "rendered": {
                      "text": ".TH buildah-manifest-annotate \"1\" \"September 2019\" \"buildah\"\n.SH NAME\n.PP\nbuildah-manifest-annotate - Add and update information about an image or artifact to a manifest list or image index.\n\n.SH SYNOPSIS\n.PP\n",
                      "markdown": "`.TH buildah-manifest-annotate \"1\" \"September 2019\" \"buildah\"\n.SH NAME\n.PP\nbuildah-manifest-annotate - Add and update information about an image or artifact to a manifest list or image index.\n\n.SH SYNOPSIS\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-manifest-annotate.1"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 29,
                  "endLine": 86,
                  "endColumn": 37,
                  "snippet": {
                    "text": ".PP\nSpecify the variant which the list or index records for the image.  This option\nis typically used to distinguish between multiple entries which share the same\narchitecture value, but which expect different versions of its instruction set.\n\n.SH EXAMPLE\n.PP\n",
                    "rendered": {
                      "text": ".PP\nSpecify the variant which the list or index records for the image.  This option\nis typically used to distinguish between multiple entries which share the same\narchitecture value, but which expect different versions of its instruction set.\n\n.SH EXAMPLE\n.PP\n",
                      "markdown": "`.PP\nSpecify the variant which the list or index records for the image.  This option\nis typically used to distinguish between multiple entries which share the same\narchitecture value, but which expect different versions of its instruction set.\n\n.SH EXAMPLE\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-manifest-add.1"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 27,
                  "endLine": 134,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--features\\fP\n",
                    "rendered": {
                      "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--features\\fP\n",
                      "markdown": "`.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--features\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-manifest-add.1"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 15,
                  "endLine": 132,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                    "rendered": {
                      "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                      "markdown": "`\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-manifest-add.1"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 16,
                  "endLine": 125,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                    "rendered": {
                      "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                      "markdown": "`\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-manifest-add.1"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 19,
                  "endLine": 99,
                  "endColumn": 23,
                  "snippet": {
                    "text": "When creating an artifact manifest and adding it to the image index, set the\n\\fIsubject\\fP field in the artifact manifest to mark the artifact manifest as being\nassociated with the specified image in some way.  An artifact manifest can only\nbe associated with, at most, one subject.\n\n.PP\n\\fB--artifact-type\\fP \\fItype\\fP\n",
                    "rendered": {
                      "text": "When creating an artifact manifest and adding it to the image index, set the\n\\fIsubject\\fP field in the artifact manifest to mark the artifact manifest as being\nassociated with the specified image in some way.  An artifact manifest can only\nbe associated with, at most, one subject.\n\n.PP\n\\fB--artifact-type\\fP \\fItype\\fP\n",
                      "markdown": "`When creating an artifact manifest and adding it to the image index, set the\n\\fIsubject\\fP field in the artifact manifest to mark the artifact manifest as being\nassociated with the specified image in some way.  An artifact manifest can only\nbe associated with, at most, one subject.\n\n.PP\n\\fB--artifact-type\\fP \\fItype\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-manifest-add.1"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 29,
                  "endLine": 178,
                  "endColumn": 37,
                  "snippet": {
                    "text": ".PP\nSpecify the variant which the list or index records for the image.  This option\nis typically used to distinguish between multiple entries which share the same\narchitecture value, but which expect different versions of its instruction set.\n\n.SH EXAMPLE\n.PP\n",
                    "rendered": {
                      "text": ".PP\nSpecify the variant which the list or index records for the image.  This option\nis typically used to distinguish between multiple entries which share the same\narchitecture value, but which expect different versions of its instruction set.\n\n.SH EXAMPLE\n.PP\n",
                      "markdown": "`.PP\nSpecify the variant which the list or index records for the image.  This option\nis typically used to distinguish between multiple entries which share the same\narchitecture value, but which expect different versions of its instruction set.\n\n.SH EXAMPLE\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-logout.1"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 64,
                  "endLine": 48,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\\fB--compat-auth-file\\fP=\\fIpath\\fP\n\n.PP\nInstead of updating the default credentials file, update the one at \\fIpath\\fP, and use a Docker-compatible format.\n\n.PP\n\\fB--help\\fP, \\fB-h\\fP\n",
                    "rendered": {
                      "text": "\\fB--compat-auth-file\\fP=\\fIpath\\fP\n\n.PP\nInstead of updating the default credentials file, update the one at \\fIpath\\fP, and use a Docker-compatible format.\n\n.PP\n\\fB--help\\fP, \\fB-h\\fP\n",
                      "markdown": "`\\fB--compat-auth-file\\fP=\\fIpath\\fP\n\n.PP\nInstead of updating the default credentials file, update the one at \\fIpath\\fP, and use a Docker-compatible format.\n\n.PP\n\\fB--help\\fP, \\fB-h\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-logout.1"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 49,
                  "endLine": 48,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\\fB--compat-auth-file\\fP=\\fIpath\\fP\n\n.PP\nInstead of updating the default credentials file, update the one at \\fIpath\\fP, and use a Docker-compatible format.\n\n.PP\n\\fB--help\\fP, \\fB-h\\fP\n",
                    "rendered": {
                      "text": "\\fB--compat-auth-file\\fP=\\fIpath\\fP\n\n.PP\nInstead of updating the default credentials file, update the one at \\fIpath\\fP, and use a Docker-compatible format.\n\n.PP\n\\fB--help\\fP, \\fB-h\\fP\n",
                      "markdown": "`\\fB--compat-auth-file\\fP=\\fIpath\\fP\n\n.PP\nInstead of updating the default credentials file, update the one at \\fIpath\\fP, and use a Docker-compatible format.\n\n.PP\n\\fB--help\\fP, \\fB-h\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-images.1"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 106,
                  "endLine": 170,
                  "endColumn": 110,
                  "snippet": {
                    "text": "\n.nf\n# buildah images -a\nIMAGE NAME                                               IMAGE TAG            IMAGE ID             CREATED AT             SIZE\nregistry.access.redhat.com/ubi8   latest     53ce4390f2ad   3 weeks ago    233 MB\n<none>                                                   <none>               8c6e16890c2b         Jun 13, 2018 15:52     4.42 MB\nlocalhost/test                                           latest               c0cfe75da054         Jun 13, 2018 15:52     4.42 MB\n",
                    "rendered": {
                      "text": "\n.nf\n# buildah images -a\nIMAGE NAME                                               IMAGE TAG            IMAGE ID             CREATED AT             SIZE\nregistry.access.redhat.com/ubi8   latest     53ce4390f2ad   3 weeks ago    233 MB\n<none>                                                   <none>               8c6e16890c2b         Jun 13, 2018 15:52     4.42 MB\nlocalhost/test                                           latest               c0cfe75da054         Jun 13, 2018 15:52     4.42 MB\n",
                      "markdown": "`\n.nf\n# buildah images -a\nIMAGE NAME                                               IMAGE TAG            IMAGE ID             CREATED AT             SIZE\nregistry.access.redhat.com/ubi8   latest     53ce4390f2ad   3 weeks ago    233 MB\n<none>                                                   <none>               8c6e16890c2b         Jun 13, 2018 15:52     4.42 MB\nlocalhost/test                                           latest               c0cfe75da054         Jun 13, 2018 15:52     4.42 MB\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-images.1"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 33,
                  "endLine": 85,
                  "snippet": {
                    "text": "l l \nl l .\n\\fB\\fC\\fBPlaceholder\\fP\\fR\t\\fB\\fC\\fBDescription\\fP\\fR\n\\&.Created\tCreation date in epoch time\n\\&.CreatedAt\tCreation date Pretty Formatted\n\\&.CreatedAtRaw\tCreation date in raw format\n\\&.Digest\tImage Digest\n\\&.ID\tImage ID\n",
                    "rendered": {
                      "text": "l l \nl l .\n\\fB\\fC\\fBPlaceholder\\fP\\fR\t\\fB\\fC\\fBDescription\\fP\\fR\n\\&.Created\tCreation date in epoch time\n\\&.CreatedAt\tCreation date Pretty Formatted\n\\&.CreatedAtRaw\tCreation date in raw format\n\\&.Digest\tImage Digest\n\\&.ID\tImage ID\n",
                      "markdown": "`l l \nl l .\n\\fB\\fC\\fBPlaceholder\\fP\\fR\t\\fB\\fC\\fBDescription\\fP\\fR\n\\&.Created\tCreation date in epoch time\n\\&.CreatedAt\tCreation date Pretty Formatted\n\\&.CreatedAtRaw\tCreation date in raw format\n\\&.Digest\tImage Digest\n\\&.ID\tImage ID\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-images.1"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 36,
                  "endLine": 14,
                  "endColumn": 42,
                  "snippet": {
                    "text": ".SH DESCRIPTION\n.PP\nDisplays locally stored images, their names, sizes, created date and their IDs.\nThe created date is displayed in the time locale of the local machine.\n\n.SH OPTIONS\n.PP\n",
                    "rendered": {
                      "text": ".SH DESCRIPTION\n.PP\nDisplays locally stored images, their names, sizes, created date and their IDs.\nThe created date is displayed in the time locale of the local machine.\n\n.SH OPTIONS\n.PP\n",
                      "markdown": "`.SH DESCRIPTION\n.PP\nDisplays locally stored images, their names, sizes, created date and their IDs.\nThe created date is displayed in the time locale of the local machine.\n\n.SH OPTIONS\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-commit.1"
                },
                "region": {
                  "startLine": 450,
                  "startColumn": 111,
                  "endLine": 450,
                  "endColumn": 119,
                  "snippet": {
                    "text": "\n.PP\nThis example commits the container to the image on the local registry using credentials from the /tmp/auths/myauths.json file and certificates for authentication.\n \\fB\\fCbuildah commit --authfile /tmp/auths/myauths.json --cert-dir ~/auth  --tls-verify=true --creds=username:password containerID docker://localhost:5000/imageName\\fR\n\n.PP\nThis example saves an image based on the container, but stores dates based on epoch time.\n",
                    "rendered": {
                      "text": "\n.PP\nThis example commits the container to the image on the local registry using credentials from the /tmp/auths/myauths.json file and certificates for authentication.\n \\fB\\fCbuildah commit --authfile /tmp/auths/myauths.json --cert-dir ~/auth  --tls-verify=true --creds=username:password containerID docker://localhost:5000/imageName\\fR\n\n.PP\nThis example saves an image based on the container, but stores dates based on epoch time.\n",
                      "markdown": "`\n.PP\nThis example commits the container to the image on the local registry using credentials from the /tmp/auths/myauths.json file and certificates for authentication.\n \\fB\\fCbuildah commit --authfile /tmp/auths/myauths.json --cert-dir ~/auth  --tls-verify=true --creds=username:password containerID docker://localhost:5000/imageName\\fR\n\n.PP\nThis example saves an image based on the container, but stores dates based on epoch time.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-commit.1"
                },
                "region": {
                  "startLine": 446,
                  "startColumn": 76,
                  "endLine": 446,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\n.PP\nThis example commits the container to the image on the local registry using credentials and certificates for authentication.\n \\fB\\fCbuildah commit --cert-dir ~/auth  --tls-verify=true --creds=username:password containerID docker://localhost:5000/imageId\\fR\n\n.PP\nThis example commits the container to the image on the local registry using credentials from the /tmp/auths/myauths.json file and certificates for authentication.\n",
                    "rendered": {
                      "text": "\n.PP\nThis example commits the container to the image on the local registry using credentials and certificates for authentication.\n \\fB\\fCbuildah commit --cert-dir ~/auth  --tls-verify=true --creds=username:password containerID docker://localhost:5000/imageId\\fR\n\n.PP\nThis example commits the container to the image on the local registry using credentials from the /tmp/auths/myauths.json file and certificates for authentication.\n",
                      "markdown": "`\n.PP\nThis example commits the container to the image on the local registry using credentials and certificates for authentication.\n \\fB\\fCbuildah commit --cert-dir ~/auth  --tls-verify=true --creds=username:password containerID docker://localhost:5000/imageId\\fR\n\n.PP\nThis example commits the container to the image on the local registry using credentials from the /tmp/auths/myauths.json file and certificates for authentication.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-commit.1"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 27,
                  "endLine": 80,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--cw\\fP \\fIoptions\\fP\n",
                    "rendered": {
                      "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--cw\\fP \\fIoptions\\fP\n",
                      "markdown": "`.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--cw\\fP \\fIoptions\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-commit.1"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 15,
                  "endLine": 78,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                    "rendered": {
                      "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                      "markdown": "`\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-commit.1"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 3,
                  "endLine": 178,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".PP\n\\fB--format\\fP, \\fB-f\\fP \\fI[oci | docker]\\fP\n\n.PP\nControl the format for the image manifest and configuration data.  Recognized\nformats include \\fIoci\\fP (OCI image-spec v1.0, the default) and \\fIdocker\\fP (version\n2, using schema format 2 for the manifest).\n\n",
                    "rendered": {
                      "text": ".PP\n\\fB--format\\fP, \\fB-f\\fP \\fI[oci | docker]\\fP\n\n.PP\nControl the format for the image manifest and configuration data.  Recognized\nformats include \\fIoci\\fP (OCI image-spec v1.0, the default) and \\fIdocker\\fP (version\n2, using schema format 2 for the manifest).\n\n",
                      "markdown": "`.PP\n\\fB--format\\fP, \\fB-f\\fP \\fI[oci | docker]\\fP\n\n.PP\nControl the format for the image manifest and configuration data.  Recognized\nformats include \\fIoci\\fP (OCI image-spec v1.0, the default) and \\fIdocker\\fP (version\n2, using schema format 2 for the manifest).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-commit.1"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 17,
                  "endLine": 147,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n.PP\n\\fIworkload_id\\fP: A workload identifier which will be recorded in the container\nimage, to be used at run-time for retrieving the passphrase which was used to\nencrypt the disk image.  If not specified, a semi-random value will be derived\nfrom the base image's image ID.\n\n",
                    "rendered": {
                      "text": "\n.PP\n\\fIworkload_id\\fP: A workload identifier which will be recorded in the container\nimage, to be used at run-time for retrieving the passphrase which was used to\nencrypt the disk image.  If not specified, a semi-random value will be derived\nfrom the base image's image ID.\n\n",
                      "markdown": "`\n.PP\n\\fIworkload_id\\fP: A workload identifier which will be recorded in the container\nimage, to be used at run-time for retrieving the passphrase which was used to\nencrypt the disk image.  If not specified, a semi-random value will be derived\nfrom the base image's image ID.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-commit.1"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 73,
                  "endLine": 120,
                  "snippet": {
                    "text": "locations.\n\n.PP\n\\fImemory\\fP: The amount of memory which the image expects to be run with at\nrun-time, as a number of megabytes.  If not specified, a default value will be\nsupplied.\n\n.PP\n",
                    "rendered": {
                      "text": "locations.\n\n.PP\n\\fImemory\\fP: The amount of memory which the image expects to be run with at\nrun-time, as a number of megabytes.  If not specified, a default value will be\nsupplied.\n\n.PP\n",
                      "markdown": "`locations.\n\n.PP\n\\fImemory\\fP: The amount of memory which the image expects to be run with at\nrun-time, as a number of megabytes.  If not specified, a default value will be\nsupplied.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-commit.1"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 77,
                  "endLine": 111,
                  "snippet": {
                    "text": "If no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n.PP\n\\fIcpus\\fP: The number of virtual CPUs which the image expects to be run with at\nrun-time.  If not specified, a default value will be supplied.\n\n.PP\n\\fIfirmware_library\\fP: The location of the libkrunfw-sev shared library.  If not\n",
                    "rendered": {
                      "text": "If no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n.PP\n\\fIcpus\\fP: The number of virtual CPUs which the image expects to be run with at\nrun-time.  If not specified, a default value will be supplied.\n\n.PP\n\\fIfirmware_library\\fP: The location of the libkrunfw-sev shared library.  If not\n",
                      "markdown": "`If no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n.PP\n\\fIcpus\\fP: The number of virtual CPUs which the image expects to be run with at\nrun-time.  If not specified, a default value will be supplied.\n\n.PP\n\\fIfirmware_library\\fP: The location of the libkrunfw-sev shared library.  If not\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-commit.1"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 56,
                  "endLine": 105,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\\fIattestation_url\\fP: The location of a key broker / attestation server.\nIf a value is specified, the new image's workload ID, along with the passphrase\nused to encrypt the disk image, will be registered with the server, and the\nserver's location will be stored in the container image.\nAt run-time, krun is expected to contact the server to retrieve the passphrase\nusing the workload ID, which is also stored in the container image.\nIf no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n",
                    "rendered": {
                      "text": "\\fIattestation_url\\fP: The location of a key broker / attestation server.\nIf a value is specified, the new image's workload ID, along with the passphrase\nused to encrypt the disk image, will be registered with the server, and the\nserver's location will be stored in the container image.\nAt run-time, krun is expected to contact the server to retrieve the passphrase\nusing the workload ID, which is also stored in the container image.\nIf no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n",
                      "markdown": "`\\fIattestation_url\\fP: The location of a key broker / attestation server.\nIf a value is specified, the new image's workload ID, along with the passphrase\nused to encrypt the disk image, will be registered with the server, and the\nserver's location will be stored in the container image.\nAt run-time, krun is expected to contact the server to retrieve the passphrase\nusing the workload ID, which is also stored in the container image.\nIf no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-commit.1"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 16,
                  "endLine": 55,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                    "rendered": {
                      "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                      "markdown": "`\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-commit.1"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 4,
                  "endLine": 33,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n.PP\nRead the contents of the file \\fB\\fCsource\\fR and add it to the committed image as a\nfile at \\fB\\fCdestination\\fR\\&.  If \\fB\\fCdestination\\fR is not specified, the path of \\fB\\fCsource\\fR\nwill be used.  The new file will be owned by UID 0, GID 0, have 0644\npermissions, and be given a current timestamp unless the \\fB--timestamp\\fP option\nis also specified.  This option can be specified multiple times.\n",
                    "rendered": {
                      "text": "\n.PP\nRead the contents of the file \\fB\\fCsource\\fR and add it to the committed image as a\nfile at \\fB\\fCdestination\\fR\\&.  If \\fB\\fCdestination\\fR is not specified, the path of \\fB\\fCsource\\fR\nwill be used.  The new file will be owned by UID 0, GID 0, have 0644\npermissions, and be given a current timestamp unless the \\fB--timestamp\\fP option\nis also specified.  This option can be specified multiple times.\n",
                      "markdown": "`\n.PP\nRead the contents of the file \\fB\\fCsource\\fR and add it to the committed image as a\nfile at \\fB\\fCdestination\\fR\\&.  If \\fB\\fCdestination\\fR is not specified, the path of \\fB\\fCsource\\fR\nwill be used.  The new file will be owned by UID 0, GID 0, have 0644\npermissions, and be given a current timestamp unless the \\fB--timestamp\\fP option\nis also specified.  This option can be specified multiple times.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-commit.1"
                },
                "region": {
                  "startLine": 464,
                  "startColumn": 23,
                  "endLine": 464,
                  "endColumn": 28,
                  "snippet": {
                    "text": "#!/bin/sh\nbuild() {\n\tctr=$(./bin/buildah from --arch $1 ubi8)\n\t./bin/buildah run $ctr dnf install -y iputils\n\t./bin/buildah commit --manifest ubi8ping $ctr\n}\nbuild arm\n",
                    "rendered": {
                      "text": "#!/bin/sh\nbuild() {\n\tctr=$(./bin/buildah from --arch $1 ubi8)\n\t./bin/buildah run $ctr dnf install -y iputils\n\t./bin/buildah commit --manifest ubi8ping $ctr\n}\nbuild arm\n",
                      "markdown": "`#!/bin/sh\nbuild() {\n\tctr=$(./bin/buildah from --arch $1 ubi8)\n\t./bin/buildah run $ctr dnf install -y iputils\n\t./bin/buildah commit --manifest ubi8ping $ctr\n}\nbuild arm\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-commit.1"
                },
                "region": {
                  "startLine": 401,
                  "startColumn": 67,
                  "endLine": 401,
                  "endColumn": 73,
                  "snippet": {
                    "text": "Set the create timestamp to seconds since epoch to allow for deterministic builds (defaults to current time).\nBy default, the created timestamp is changed and written into the image manifest with every commit,\ncausing the image's sha256 hash to be different even if the sources are exactly the same otherwise.\nWhen --timestamp is set, the created timestamp is always set to the time specified and therefore not changed, allowing the image's sha256 to remain the same. All files committed to the layers of the image will be created with the timestamp.\n\n.PP\n\\fB--tls-verify\\fP \\fIbool-value\\fP\n",
                    "rendered": {
                      "text": "Set the create timestamp to seconds since epoch to allow for deterministic builds (defaults to current time).\nBy default, the created timestamp is changed and written into the image manifest with every commit,\ncausing the image's sha256 hash to be different even if the sources are exactly the same otherwise.\nWhen --timestamp is set, the created timestamp is always set to the time specified and therefore not changed, allowing the image's sha256 to remain the same. All files committed to the layers of the image will be created with the timestamp.\n\n.PP\n\\fB--tls-verify\\fP \\fIbool-value\\fP\n",
                      "markdown": "`Set the create timestamp to seconds since epoch to allow for deterministic builds (defaults to current time).\nBy default, the created timestamp is changed and written into the image manifest with every commit,\ncausing the image's sha256 hash to be different even if the sources are exactly the same otherwise.\nWhen --timestamp is set, the created timestamp is always set to the time specified and therefore not changed, allowing the image's sha256 to remain the same. All files committed to the layers of the image will be created with the timestamp.\n\n.PP\n\\fB--tls-verify\\fP \\fIbool-value\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-commit.1"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 10,
                  "endLine": 327,
                  "snippet": {
                    "text": "earlier commands.  Recognized values include:\n\n.RS\n.IP \\(bu 2\ncat\n Concatenate the files.\n.IP \\(bu 2\nmerge-cyclonedx-by-component-name-and-version\n Merge the \"component\" fields of JSON documents, ignoring values from\n",
                    "rendered": {
                      "text": "earlier commands.  Recognized values include:\n\n.RS\n.IP \\(bu 2\ncat\n Concatenate the files.\n.IP \\(bu 2\nmerge-cyclonedx-by-component-name-and-version\n Merge the \"component\" fields of JSON documents, ignoring values from\n",
                      "markdown": "`earlier commands.  Recognized values include:\n\n.RS\n.IP \\(bu 2\ncat\n Concatenate the files.\n.IP \\(bu 2\nmerge-cyclonedx-by-component-name-and-version\n Merge the \"component\" fields of JSON documents, ignoring values from\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-prune.1"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 48,
                  "endLine": 13,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n.SH DESCRIPTION\n.PP\nCleanup intermediate images as well as build and mount cache.\n\n.SH OPTIONS\n.PP\n",
                    "rendered": {
                      "text": "\n.SH DESCRIPTION\n.PP\nCleanup intermediate images as well as build and mount cache.\n\n.SH OPTIONS\n.PP\n",
                      "markdown": "`\n.SH DESCRIPTION\n.PP\nCleanup intermediate images as well as build and mount cache.\n\n.SH OPTIONS\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-prune.1"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 64,
                  "endLine": 5,
                  "endColumn": 71,
                  "snippet": {
                    "text": ".TH buildah-rmi \"1\" \"Jan 2023\" \"buildah\"\n.SH NAME\n.PP\nbuildah-prune - Cleanup intermediate images as well as build and mount cache.\n\n.SH SYNOPSIS\n.PP\n",
                    "rendered": {
                      "text": ".TH buildah-rmi \"1\" \"Jan 2023\" \"buildah\"\n.SH NAME\n.PP\nbuildah-prune - Cleanup intermediate images as well as build and mount cache.\n\n.SH SYNOPSIS\n.PP\n",
                      "markdown": "`.TH buildah-rmi \"1\" \"Jan 2023\" \"buildah\"\n.SH NAME\n.PP\nbuildah-prune - Cleanup intermediate images as well as build and mount cache.\n\n.SH SYNOPSIS\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mount.1"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 1,
                  "endLine": 85,
                  "endColumn": 5,
                  "snippet": {
                    "text": "$ buildah unshare\n# buildah mount working-container\n/var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# cp foobar  /var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# buildah unmount working-container\n# exit\n$ buildah commit  working-container newimage\n",
                    "rendered": {
                      "text": "$ buildah unshare\n# buildah mount working-container\n/var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# cp foobar  /var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# buildah unmount working-container\n# exit\n$ buildah commit  working-container newimage\n",
                      "markdown": "`$ buildah unshare\n# buildah mount working-container\n/var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# cp foobar  /var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# buildah unmount working-container\n# exit\n$ buildah commit  working-container newimage\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mount.1"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 9,
                  "endLine": 83,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n.nf\n$ buildah unshare\n# buildah mount working-container\n/var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# cp foobar  /var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# buildah unmount working-container\n",
                    "rendered": {
                      "text": "\n.nf\n$ buildah unshare\n# buildah mount working-container\n/var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# cp foobar  /var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# buildah unmount working-container\n",
                      "markdown": "`\n.nf\n$ buildah unshare\n# buildah mount working-container\n/var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# cp foobar  /var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# buildah unmount working-container\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mount.1"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 9,
                  "endLine": 83,
                  "snippet": {
                    "text": ".RS\n\n.nf\n$ buildah unshare\n# buildah mount working-container\n/var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# cp foobar  /var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# buildah unmount working-container\n",
                    "rendered": {
                      "text": ".RS\n\n.nf\n$ buildah unshare\n# buildah mount working-container\n/var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# cp foobar  /var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# buildah unmount working-container\n",
                      "markdown": "`.RS\n\n.nf\n$ buildah unshare\n# buildah mount working-container\n/var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# cp foobar  /var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\n# buildah unmount working-container\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mount.1"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 3,
                  "endLine": 76,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n.PP\nIf running in rootless mode, you need to do a buildah unshare first to use\nthe mount point.\n\n.PP\n.RS\n",
                    "rendered": {
                      "text": "\n.PP\nIf running in rootless mode, you need to do a buildah unshare first to use\nthe mount point.\n\n.PP\n.RS\n",
                      "markdown": "`\n.PP\nIf running in rootless mode, you need to do a buildah unshare first to use\nthe mount point.\n\n.PP\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mount.1"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 53,
                  "endLine": 75,
                  "endColumn": 62,
                  "snippet": {
                    "text": ".RE\n\n.PP\nIf running in rootless mode, you need to do a buildah unshare first to use\nthe mount point.\n\n.PP\n",
                    "rendered": {
                      "text": ".RE\n\n.PP\nIf running in rootless mode, you need to do a buildah unshare first to use\nthe mount point.\n\n.PP\n",
                      "markdown": "`.RE\n\n.PP\nIf running in rootless mode, you need to do a buildah unshare first to use\nthe mount point.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mount.1"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 7,
                  "endLine": 66,
                  "endColumn": 14,
                  "snippet": {
                    "text": ".RS\n\n.nf\nbuildah mount working-container fedora-working-container ubi8-working-container\nworking-container /var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\nfedora-working-container /var/lib/containers/storage/overlay/c3ec418be5bda5b72dca74c4d397e05829fe62ecd577dd7518b5f7fc1ca5f491/merged\nubi8-working-container /var/lib/containers/storage/overlay/03a071f206f70f4fcae5379bd5126be86b5352dc2a0c3449cd6fca01b77ea868/merged\n",
                    "rendered": {
                      "text": ".RS\n\n.nf\nbuildah mount working-container fedora-working-container ubi8-working-container\nworking-container /var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\nfedora-working-container /var/lib/containers/storage/overlay/c3ec418be5bda5b72dca74c4d397e05829fe62ecd577dd7518b5f7fc1ca5f491/merged\nubi8-working-container /var/lib/containers/storage/overlay/03a071f206f70f4fcae5379bd5126be86b5352dc2a0c3449cd6fca01b77ea868/merged\n",
                      "markdown": "`.RS\n\n.nf\nbuildah mount working-container fedora-working-container ubi8-working-container\nworking-container /var/lib/containers/storage/overlay/f8cac5cce73e5102ab321cc5b57c0824035b5cb82b6822e3c86ebaff69fefa9c/merged\nfedora-working-container /var/lib/containers/storage/overlay/c3ec418be5bda5b72dca74c4d397e05829fe62ecd577dd7518b5f7fc1ca5f491/merged\nubi8-working-container /var/lib/containers/storage/overlay/03a071f206f70f4fcae5379bd5126be86b5352dc2a0c3449cd6fca01b77ea868/merged\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mount.1"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 7,
                  "endLine": 56,
                  "snippet": {
                    "text": ".RS\n\n.nf\nbuildah mount\nworking-container /var/lib/containers/storage/overlay2/f3ac502d97b5681989dff84dfedc8354239bcecbdc2692f9a639f4e080a02364/merged\nfedora-working-container /var/lib/containers/storage/overlay2/0ff7d7ca68bed1ace424f9df154d2dd7b5a125c19d887f17653cbcd5b6e30ba1/merged\n\n.fi\n",
                    "rendered": {
                      "text": ".RS\n\n.nf\nbuildah mount\nworking-container /var/lib/containers/storage/overlay2/f3ac502d97b5681989dff84dfedc8354239bcecbdc2692f9a639f4e080a02364/merged\nfedora-working-container /var/lib/containers/storage/overlay2/0ff7d7ca68bed1ace424f9df154d2dd7b5a125c19d887f17653cbcd5b6e30ba1/merged\n\n.fi\n",
                      "markdown": "`.RS\n\n.nf\nbuildah mount\nworking-container /var/lib/containers/storage/overlay2/f3ac502d97b5681989dff84dfedc8354239bcecbdc2692f9a639f4e080a02364/merged\nfedora-working-container /var/lib/containers/storage/overlay2/0ff7d7ca68bed1ace424f9df154d2dd7b5a125c19d887f17653cbcd5b6e30ba1/merged\n\n.fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mount.1"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 7,
                  "endLine": 45,
                  "endColumn": 14,
                  "snippet": {
                    "text": ".RS\n\n.nf\nbuildah mount working-container\n/var/lib/containers/storage/overlay2/f3ac502d97b5681989dff84dfedc8354239bcecbdc2692f9a639f4e080a02364/merged\n\n.fi\n",
                    "rendered": {
                      "text": ".RS\n\n.nf\nbuildah mount working-container\n/var/lib/containers/storage/overlay2/f3ac502d97b5681989dff84dfedc8354239bcecbdc2692f9a639f4e080a02364/merged\n\n.fi\n",
                      "markdown": "`.RS\n\n.nf\nbuildah mount working-container\n/var/lib/containers/storage/overlay2/f3ac502d97b5681989dff84dfedc8354239bcecbdc2692f9a639f4e080a02364/merged\n\n.fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mount.1"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 44,
                  "endLine": 23,
                  "endColumn": 51,
                  "snippet": {
                    "text": "When running in rootless mode, mount runs in a different namespace so\nthat the mounted volume might not be accessible from the host when\nusing a driver different than \\fB\\fCvfs\\fR\\&.  To be able to access the file\nsystem mounted, you might need to create the mount namespace\nseparately as part of \\fB\\fCbuildah unshare\\fR\\&.  In the environment created\nwith \\fB\\fCbuildah unshare\\fR you can then use \\fB\\fCbuildah mount\\fR and have\naccess to the mounted file system.\n",
                    "rendered": {
                      "text": "When running in rootless mode, mount runs in a different namespace so\nthat the mounted volume might not be accessible from the host when\nusing a driver different than \\fB\\fCvfs\\fR\\&.  To be able to access the file\nsystem mounted, you might need to create the mount namespace\nseparately as part of \\fB\\fCbuildah unshare\\fR\\&.  In the environment created\nwith \\fB\\fCbuildah unshare\\fR you can then use \\fB\\fCbuildah mount\\fR and have\naccess to the mounted file system.\n",
                      "markdown": "`When running in rootless mode, mount runs in a different namespace so\nthat the mounted volume might not be accessible from the host when\nusing a driver different than \\fB\\fCvfs\\fR\\&.  To be able to access the file\nsystem mounted, you might need to create the mount namespace\nseparately as part of \\fB\\fCbuildah unshare\\fR\\&.  In the environment created\nwith \\fB\\fCbuildah unshare\\fR you can then use \\fB\\fCbuildah mount\\fR and have\naccess to the mounted file system.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mount.1"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 30,
                  "endLine": 20,
                  "endColumn": 37,
                  "snippet": {
                    "text": "If the mount command is invoked without any arguments, the tool will list all of the currently mounted containers.\n\n.PP\nWhen running in rootless mode, mount runs in a different namespace so\nthat the mounted volume might not be accessible from the host when\nusing a driver different than \\fB\\fCvfs\\fR\\&.  To be able to access the file\nsystem mounted, you might need to create the mount namespace\n",
                    "rendered": {
                      "text": "If the mount command is invoked without any arguments, the tool will list all of the currently mounted containers.\n\n.PP\nWhen running in rootless mode, mount runs in a different namespace so\nthat the mounted volume might not be accessible from the host when\nusing a driver different than \\fB\\fCvfs\\fR\\&.  To be able to access the file\nsystem mounted, you might need to create the mount namespace\n",
                      "markdown": "`If the mount command is invoked without any arguments, the tool will list all of the currently mounted containers.\n\n.PP\nWhen running in rootless mode, mount runs in a different namespace so\nthat the mounted volume might not be accessible from the host when\nusing a driver different than \\fB\\fCvfs\\fR\\&.  To be able to access the file\nsystem mounted, you might need to create the mount namespace\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mount.1"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 6,
                  "endLine": 17,
                  "endColumn": 13,
                  "snippet": {
                    "text": "accessed from the host, and returns its location.\n\n.PP\nIf the mount command is invoked without any arguments, the tool will list all of the currently mounted containers.\n\n.PP\nWhen running in rootless mode, mount runs in a different namespace so\n",
                    "rendered": {
                      "text": "accessed from the host, and returns its location.\n\n.PP\nIf the mount command is invoked without any arguments, the tool will list all of the currently mounted containers.\n\n.PP\nWhen running in rootless mode, mount runs in a different namespace so\n",
                      "markdown": "`accessed from the host, and returns its location.\n\n.PP\nIf the mount command is invoked without any arguments, the tool will list all of the currently mounted containers.\n\n.PP\nWhen running in rootless mode, mount runs in a different namespace so\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mount.1"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 15,
                  "endLine": 5,
                  "endColumn": 22,
                  "snippet": {
                    "text": ".TH buildah-mount \"1\" \"March 2017\" \"buildah\"\n.SH NAME\n.PP\nbuildah-mount - Mount a working container's root filesystem.\n\n.SH SYNOPSIS\n.PP\n",
                    "rendered": {
                      "text": ".TH buildah-mount \"1\" \"March 2017\" \"buildah\"\n.SH NAME\n.PP\nbuildah-mount - Mount a working container's root filesystem.\n\n.SH SYNOPSIS\n.PP\n",
                      "markdown": "`.TH buildah-mount \"1\" \"March 2017\" \"buildah\"\n.SH NAME\n.PP\nbuildah-mount - Mount a working container's root filesystem.\n\n.SH SYNOPSIS\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mkcw.1"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 79,
                  "endLine": 96,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\n.PP\n\\fB--workload-id\\fP, \\fB-w\\fP \\fIid\\fP\nA workload identifier which will be recorded in the container image, to be used\nat run-time for retrieving the passphrase which was used to encrypt the disk\nimage.  If not specified, a semi-random value will be derived from the base\nimage's image ID.\n\n",
                    "rendered": {
                      "text": "\n.PP\n\\fB--workload-id\\fP, \\fB-w\\fP \\fIid\\fP\nA workload identifier which will be recorded in the container image, to be used\nat run-time for retrieving the passphrase which was used to encrypt the disk\nimage.  If not specified, a semi-random value will be derived from the base\nimage's image ID.\n\n",
                      "markdown": "`\n.PP\n\\fB--workload-id\\fP, \\fB-w\\fP \\fIid\\fP\nA workload identifier which will be recorded in the container image, to be used\nat run-time for retrieving the passphrase which was used to encrypt the disk\nimage.  If not specified, a semi-random value will be derived from the base\nimage's image ID.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mkcw.1"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 59,
                  "endLine": 65,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n.PP\n\\fB--memory\\fP, \\fB-m\\fP \\fInumber\\fP\nThe amount of memory which the image expects to be run with at run-time, as a\nnumber of megabytes.  If not specified, a default value will be supplied.\n\n.PP\n",
                    "rendered": {
                      "text": "\n.PP\n\\fB--memory\\fP, \\fB-m\\fP \\fInumber\\fP\nThe amount of memory which the image expects to be run with at run-time, as a\nnumber of megabytes.  If not specified, a default value will be supplied.\n\n.PP\n",
                      "markdown": "`\n.PP\n\\fB--memory\\fP, \\fB-m\\fP \\fInumber\\fP\nThe amount of memory which the image expects to be run with at run-time, as a\nnumber of megabytes.  If not specified, a default value will be supplied.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mkcw.1"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 65,
                  "endLine": 55,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\n.PP\n\\fB--cpus\\fP, \\fB-c\\fP \\fInumber\\fP\nThe number of virtual CPUs which the image expects to be run with at run-time.\nIf not specified, a default value will be supplied.\n\n.PP\n",
                    "rendered": {
                      "text": "\n.PP\n\\fB--cpus\\fP, \\fB-c\\fP \\fInumber\\fP\nThe number of virtual CPUs which the image expects to be run with at run-time.\nIf not specified, a default value will be supplied.\n\n.PP\n",
                      "markdown": "`\n.PP\n\\fB--cpus\\fP, \\fB-c\\fP \\fInumber\\fP\nThe number of virtual CPUs which the image expects to be run with at run-time.\nIf not specified, a default value will be supplied.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mkcw.1"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 56,
                  "endLine": 44,
                  "endColumn": 3,
                  "snippet": {
                    "text": "The location of a key broker / attestation server.\nIf a value is specified, the new image's workload ID, along with the passphrase\nused to encrypt the disk image, will be registered with the server, and the\nserver's location will be stored in the container image.\nAt run-time, krun is expected to contact the server to retrieve the passphrase\nusing the workload ID, which is also stored in the container image.\nIf no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n",
                    "rendered": {
                      "text": "The location of a key broker / attestation server.\nIf a value is specified, the new image's workload ID, along with the passphrase\nused to encrypt the disk image, will be registered with the server, and the\nserver's location will be stored in the container image.\nAt run-time, krun is expected to contact the server to retrieve the passphrase\nusing the workload ID, which is also stored in the container image.\nIf no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n",
                      "markdown": "`The location of a key broker / attestation server.\nIf a value is specified, the new image's workload ID, along with the passphrase\nused to encrypt the disk image, will be registered with the server, and the\nserver's location will be stored in the container image.\nAt run-time, krun is expected to contact the server to retrieve the passphrase\nusing the workload ID, which is also stored in the container image.\nIf no value is specified, a \\fIpassphrase\\fP value \\fImust\\fP be specified.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-mkcw.1"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 4,
                  "endLine": 33,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n.PP\nRead the contents of the file \\fB\\fCsource\\fR and add it to the committed image as a\nfile at \\fB\\fCdestination\\fR\\&.  If \\fB\\fCdestination\\fR is not specified, the path of \\fB\\fCsource\\fR\nwill be used.  The new file will be owned by UID 0, GID 0, have 0644\npermissions, and be given a current timestamp.  This option can be specified\nmultiple times.\n",
                    "rendered": {
                      "text": "\n.PP\nRead the contents of the file \\fB\\fCsource\\fR and add it to the committed image as a\nfile at \\fB\\fCdestination\\fR\\&.  If \\fB\\fCdestination\\fR is not specified, the path of \\fB\\fCsource\\fR\nwill be used.  The new file will be owned by UID 0, GID 0, have 0644\npermissions, and be given a current timestamp.  This option can be specified\nmultiple times.\n",
                      "markdown": "`\n.PP\nRead the contents of the file \\fB\\fCsource\\fR and add it to the committed image as a\nfile at \\fB\\fCdestination\\fR\\&.  If \\fB\\fCdestination\\fR is not specified, the path of \\fB\\fCsource\\fR\nwill be used.  The new file will be owned by UID 0, GID 0, have 0644\npermissions, and be given a current timestamp.  This option can be specified\nmultiple times.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-manifest.1"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 6,
                  "endLine": 39,
                  "endColumn": 14,
                  "snippet": {
                    "text": "Add an image or artifact to a manifest list or image index.\nT}\nannotate\tbuildah-manifest-annotate(1)\tT{\nAdd or update information about an image or artifact in a manifest list or image index.\nT}\ncreate\tbuildah-manifest-create(1)\tT{\nCreate a manifest list or image index.\n",
                    "rendered": {
                      "text": "Add an image or artifact to a manifest list or image index.\nT}\nannotate\tbuildah-manifest-annotate(1)\tT{\nAdd or update information about an image or artifact in a manifest list or image index.\nT}\ncreate\tbuildah-manifest-create(1)\tT{\nCreate a manifest list or image index.\n",
                      "markdown": "`Add an image or artifact to a manifest list or image index.\nT}\nannotate\tbuildah-manifest-annotate(1)\tT{\nAdd or update information about an image or artifact in a manifest list or image index.\nT}\ncreate\tbuildah-manifest-create(1)\tT{\nCreate a manifest list or image index.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-manifest.1"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 8,
                  "endLine": 22,
                  "endColumn": 16,
                  "snippet": {
                    "text": "* Create a working Docker manifest list or OCI image index.\n* Add an entry to a manifest list or image index for a specified image.\n* Add an entry to an image index for an artifact manifest referring to a file.\n* Add or update information about an entry in a manifest list or image index.\n* Delete a working container or an image.\n* Push a manifest list or image index to a registry or other location.\n\n",
                    "rendered": {
                      "text": "* Create a working Docker manifest list or OCI image index.\n* Add an entry to a manifest list or image index for a specified image.\n* Add an entry to an image index for an artifact manifest referring to a file.\n* Add or update information about an entry in a manifest list or image index.\n* Delete a working container or an image.\n* Push a manifest list or image index to a registry or other location.\n\n",
                      "markdown": "`* Create a working Docker manifest list or OCI image index.\n* Add an entry to a manifest list or image index for a specified image.\n* Add an entry to an image index for an artifact manifest referring to a file.\n* Add or update information about an entry in a manifest list or image index.\n* Delete a working container or an image.\n* Push a manifest list or image index to a registry or other location.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-manifest.1"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 18,
                  "endLine": 19,
                  "endColumn": 26,
                  "snippet": {
                    "text": ".RS\n\n.nf\n* Create a working Docker manifest list or OCI image index.\n* Add an entry to a manifest list or image index for a specified image.\n* Add an entry to an image index for an artifact manifest referring to a file.\n* Add or update information about an entry in a manifest list or image index.\n",
                    "rendered": {
                      "text": ".RS\n\n.nf\n* Create a working Docker manifest list or OCI image index.\n* Add an entry to a manifest list or image index for a specified image.\n* Add an entry to an image index for an artifact manifest referring to a file.\n* Add or update information about an entry in a manifest list or image index.\n",
                      "markdown": "`.RS\n\n.nf\n* Create a working Docker manifest list or OCI image index.\n* Add an entry to a manifest list or image index for a specified image.\n* Add an entry to an image index for an artifact manifest referring to a file.\n* Add or update information about an entry in a manifest list or image index.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-manifest-push.1"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 27,
                  "endLine": 74,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--digestfile\\fP \\fIDigestfile\\fP\n",
                    "rendered": {
                      "text": ".PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--digestfile\\fP \\fIDigestfile\\fP\n",
                      "markdown": "`.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n.PP\n\\fB--digestfile\\fP \\fIDigestfile\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-manifest-push.1"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 15,
                  "endLine": 72,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                    "rendered": {
                      "text": "\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n",
                      "markdown": "`\\fB--creds\\fP \\fIcreds\\fP\n\n.PP\nThe [username[:password]] to use to authenticate with the registry if required.\nIf one or both values are not supplied, a command line prompt will appear and the\nvalue can be entered.  The password is entered without echo.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-manifest-push.1"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 16,
                  "endLine": 50,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                    "rendered": {
                      "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                      "markdown": "`\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 51,
                  "endLine": 167,
                  "endColumn": 59,
                  "snippet": {
                    "text": ".RS\n\n.nf\n$ echo $testpassword | buildah login -u testuser --password-stdin quay.io\nLogin Succeeded!\n\n.fi\n",
                    "rendered": {
                      "text": ".RS\n\n.nf\n$ echo $testpassword | buildah login -u testuser --password-stdin quay.io\nLogin Succeeded!\n\n.fi\n",
                      "markdown": "`.RS\n\n.nf\n$ echo $testpassword | buildah login -u testuser --password-stdin quay.io\nLogin Succeeded!\n\n.fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 12,
                  "endLine": 167,
                  "endColumn": 20,
                  "snippet": {
                    "text": ".RS\n\n.nf\n$ echo $testpassword | buildah login -u testuser --password-stdin quay.io\nLogin Succeeded!\n\n.fi\n",
                    "rendered": {
                      "text": ".RS\n\n.nf\n$ echo $testpassword | buildah login -u testuser --password-stdin quay.io\nLogin Succeeded!\n\n.fi\n",
                      "markdown": "`.RS\n\n.nf\n$ echo $testpassword | buildah login -u testuser --password-stdin quay.io\nLogin Succeeded!\n\n.fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 31,
                  "endLine": 157,
                  "endColumn": 39,
                  "snippet": {
                    "text": ".RS\n\n.nf\n$ buildah login -u testuser  --password-stdin < pw.txt quay.io\nLogin Succeeded!\n\n.fi\n",
                    "rendered": {
                      "text": ".RS\n\n.nf\n$ buildah login -u testuser  --password-stdin < pw.txt quay.io\nLogin Succeeded!\n\n.fi\n",
                      "markdown": "`.RS\n\n.nf\n$ buildah login -u testuser  --password-stdin < pw.txt quay.io\nLogin Succeeded!\n\n.fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 127,
                  "endLine": 127,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".nf\n$ buildah login --authfile ./auth.json quay.io\nUsername: qiwanredhat\nPassword:\nLogin Succeeded!\n\n.fi\n",
                    "rendered": {
                      "text": ".nf\n$ buildah login --authfile ./auth.json quay.io\nUsername: qiwanredhat\nPassword:\nLogin Succeeded!\n\n.fi\n",
                      "markdown": "`.nf\n$ buildah login --authfile ./auth.json quay.io\nUsername: qiwanredhat\nPassword:\nLogin Succeeded!\n\n.fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 35,
                  "endLine": 115,
                  "endColumn": 43,
                  "snippet": {
                    "text": ".RS\n\n.nf\n$ buildah login -u testuser -p testpassword localhost:5000\nLogin Succeeded!\n\n.fi\n",
                    "rendered": {
                      "text": ".RS\n\n.nf\n$ buildah login -u testuser -p testpassword localhost:5000\nLogin Succeeded!\n\n.fi\n",
                      "markdown": "`.RS\n\n.nf\n$ buildah login -u testuser -p testpassword localhost:5000\nLogin Succeeded!\n\n.fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 105,
                  "endLine": 105,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".nf\n$ buildah login quay.io\nUsername: qiwanredhat\nPassword:\nLogin Succeeded!\n\n.fi\n",
                    "rendered": {
                      "text": ".nf\n$ buildah login quay.io\nUsername: qiwanredhat\nPassword:\nLogin Succeeded!\n\n.fi\n",
                      "markdown": "`.nf\n$ buildah login quay.io\nUsername: qiwanredhat\nPassword:\nLogin Succeeded!\n\n.fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 9,
                  "endLine": 75,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\\fB--password-stdin\\fP\n\n.PP\nTake the password from stdin\n\n.PP\n\\fB--tls-verify\\fP\n",
                    "rendered": {
                      "text": "\\fB--password-stdin\\fP\n\n.PP\nTake the password from stdin\n\n.PP\n\\fB--tls-verify\\fP\n",
                      "markdown": "`\\fB--password-stdin\\fP\n\n.PP\nTake the password from stdin\n\n.PP\n\\fB--tls-verify\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 5,
                  "endLine": 72,
                  "endColumn": 13,
                  "snippet": {
                    "text": "Password for registry\n\n.PP\n\\fB--password-stdin\\fP\n\n.PP\nTake the password from stdin\n",
                    "rendered": {
                      "text": "Password for registry\n\n.PP\n\\fB--password-stdin\\fP\n\n.PP\nTake the password from stdin\n",
                      "markdown": "`Password for registry\n\n.PP\n\\fB--password-stdin\\fP\n\n.PP\nTake the password from stdin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\\fB--password\\fP, \\fB-p\\fP\n\n.PP\nPassword for registry\n\n.PP\n\\fB--password-stdin\\fP\n",
                    "rendered": {
                      "text": "\\fB--password\\fP, \\fB-p\\fP\n\n.PP\nPassword for registry\n\n.PP\n\\fB--password-stdin\\fP\n",
                      "markdown": "`\\fB--password\\fP, \\fB-p\\fP\n\n.PP\nPassword for registry\n\n.PP\n\\fB--password-stdin\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 5,
                  "endLine": 66,
                  "endColumn": 13,
                  "snippet": {
                    "text": "Print usage statement\n\n.PP\n\\fB--password\\fP, \\fB-p\\fP\n\n.PP\nPassword for registry\n",
                    "rendered": {
                      "text": "Print usage statement\n\n.PP\n\\fB--password\\fP, \\fB-p\\fP\n\n.PP\nPassword for registry\n",
                      "markdown": "`Print usage statement\n\n.PP\n\\fB--password\\fP, \\fB-p\\fP\n\n.PP\nPassword for registry\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 74,
                  "endLine": 15,
                  "endColumn": 82,
                  "snippet": {
                    "text": ".PP\n\\fBbuildah login\\fP logs into a specified registry server with the correct username\nand password. \\fBbuildah login\\fP reads in the username and password from STDIN.\nThe username and password can also be set using the \\fBusername\\fP and \\fBpassword\\fP flags.\nThe path of the authentication file can be specified by the user by setting the \\fBauthfile\\fP\nflag. The default path used is \\fB${XDG_RUNTIME_DIR}/containers/auth.json\\fP\\&. If XDG_RUNTIME_DIR\nis not set, the default is /run/user/$UID/containers/auth.json.\n",
                    "rendered": {
                      "text": ".PP\n\\fBbuildah login\\fP logs into a specified registry server with the correct username\nand password. \\fBbuildah login\\fP reads in the username and password from STDIN.\nThe username and password can also be set using the \\fBusername\\fP and \\fBpassword\\fP flags.\nThe path of the authentication file can be specified by the user by setting the \\fBauthfile\\fP\nflag. The default path used is \\fB${XDG_RUNTIME_DIR}/containers/auth.json\\fP\\&. If XDG_RUNTIME_DIR\nis not set, the default is /run/user/$UID/containers/auth.json.\n",
                      "markdown": "`.PP\n\\fBbuildah login\\fP logs into a specified registry server with the correct username\nand password. \\fBbuildah login\\fP reads in the username and password from STDIN.\nThe username and password can also be set using the \\fBusername\\fP and \\fBpassword\\fP flags.\nThe path of the authentication file can be specified by the user by setting the \\fBauthfile\\fP\nflag. The default path used is \\fB${XDG_RUNTIME_DIR}/containers/auth.json\\fP\\&. If XDG_RUNTIME_DIR\nis not set, the default is /run/user/$UID/containers/auth.json.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 17,
                  "endLine": 15,
                  "endColumn": 25,
                  "snippet": {
                    "text": ".PP\n\\fBbuildah login\\fP logs into a specified registry server with the correct username\nand password. \\fBbuildah login\\fP reads in the username and password from STDIN.\nThe username and password can also be set using the \\fBusername\\fP and \\fBpassword\\fP flags.\nThe path of the authentication file can be specified by the user by setting the \\fBauthfile\\fP\nflag. The default path used is \\fB${XDG_RUNTIME_DIR}/containers/auth.json\\fP\\&. If XDG_RUNTIME_DIR\nis not set, the default is /run/user/$UID/containers/auth.json.\n",
                    "rendered": {
                      "text": ".PP\n\\fBbuildah login\\fP logs into a specified registry server with the correct username\nand password. \\fBbuildah login\\fP reads in the username and password from STDIN.\nThe username and password can also be set using the \\fBusername\\fP and \\fBpassword\\fP flags.\nThe path of the authentication file can be specified by the user by setting the \\fBauthfile\\fP\nflag. The default path used is \\fB${XDG_RUNTIME_DIR}/containers/auth.json\\fP\\&. If XDG_RUNTIME_DIR\nis not set, the default is /run/user/$UID/containers/auth.json.\n",
                      "markdown": "`.PP\n\\fBbuildah login\\fP logs into a specified registry server with the correct username\nand password. \\fBbuildah login\\fP reads in the username and password from STDIN.\nThe username and password can also be set using the \\fBusername\\fP and \\fBpassword\\fP flags.\nThe path of the authentication file can be specified by the user by setting the \\fBauthfile\\fP\nflag. The default path used is \\fB${XDG_RUNTIME_DIR}/containers/auth.json\\fP\\&. If XDG_RUNTIME_DIR\nis not set, the default is /run/user/$UID/containers/auth.json.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 60,
                  "endLine": 14,
                  "endColumn": 68,
                  "snippet": {
                    "text": ".SH DESCRIPTION\n.PP\n\\fBbuildah login\\fP logs into a specified registry server with the correct username\nand password. \\fBbuildah login\\fP reads in the username and password from STDIN.\nThe username and password can also be set using the \\fBusername\\fP and \\fBpassword\\fP flags.\nThe path of the authentication file can be specified by the user by setting the \\fBauthfile\\fP\nflag. The default path used is \\fB${XDG_RUNTIME_DIR}/containers/auth.json\\fP\\&. If XDG_RUNTIME_DIR\n",
                    "rendered": {
                      "text": ".SH DESCRIPTION\n.PP\n\\fBbuildah login\\fP logs into a specified registry server with the correct username\nand password. \\fBbuildah login\\fP reads in the username and password from STDIN.\nThe username and password can also be set using the \\fBusername\\fP and \\fBpassword\\fP flags.\nThe path of the authentication file can be specified by the user by setting the \\fBauthfile\\fP\nflag. The default path used is \\fB${XDG_RUNTIME_DIR}/containers/auth.json\\fP\\&. If XDG_RUNTIME_DIR\n",
                      "markdown": "`.SH DESCRIPTION\n.PP\n\\fBbuildah login\\fP logs into a specified registry server with the correct username\nand password. \\fBbuildah login\\fP reads in the username and password from STDIN.\nThe username and password can also be set using the \\fBusername\\fP and \\fBpassword\\fP flags.\nThe path of the authentication file can be specified by the user by setting the \\fBauthfile\\fP\nflag. The default path used is \\fB${XDG_RUNTIME_DIR}/containers/auth.json\\fP\\&. If XDG_RUNTIME_DIR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 4,
                  "endLine": 14,
                  "endColumn": 12,
                  "snippet": {
                    "text": ".SH DESCRIPTION\n.PP\n\\fBbuildah login\\fP logs into a specified registry server with the correct username\nand password. \\fBbuildah login\\fP reads in the username and password from STDIN.\nThe username and password can also be set using the \\fBusername\\fP and \\fBpassword\\fP flags.\nThe path of the authentication file can be specified by the user by setting the \\fBauthfile\\fP\nflag. The default path used is \\fB${XDG_RUNTIME_DIR}/containers/auth.json\\fP\\&. If XDG_RUNTIME_DIR\n",
                    "rendered": {
                      "text": ".SH DESCRIPTION\n.PP\n\\fBbuildah login\\fP logs into a specified registry server with the correct username\nand password. \\fBbuildah login\\fP reads in the username and password from STDIN.\nThe username and password can also be set using the \\fBusername\\fP and \\fBpassword\\fP flags.\nThe path of the authentication file can be specified by the user by setting the \\fBauthfile\\fP\nflag. The default path used is \\fB${XDG_RUNTIME_DIR}/containers/auth.json\\fP\\&. If XDG_RUNTIME_DIR\n",
                      "markdown": "`.SH DESCRIPTION\n.PP\n\\fBbuildah login\\fP logs into a specified registry server with the correct username\nand password. \\fBbuildah login\\fP reads in the username and password from STDIN.\nThe username and password can also be set using the \\fBusername\\fP and \\fBpassword\\fP flags.\nThe path of the authentication file can be specified by the user by setting the \\fBauthfile\\fP\nflag. The default path used is \\fB${XDG_RUNTIME_DIR}/containers/auth.json\\fP\\&. If XDG_RUNTIME_DIR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 64,
                  "endLine": 51,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\\fB--compat-auth-file\\fP=\\fIpath\\fP\n\n.PP\nInstead of updating the default credentials file, update the one at \\fIpath\\fP, and use a Docker-compatible format.\n\n.PP\n\\fB--get-login\\fP\n",
                    "rendered": {
                      "text": "\\fB--compat-auth-file\\fP=\\fIpath\\fP\n\n.PP\nInstead of updating the default credentials file, update the one at \\fIpath\\fP, and use a Docker-compatible format.\n\n.PP\n\\fB--get-login\\fP\n",
                      "markdown": "`\\fB--compat-auth-file\\fP=\\fIpath\\fP\n\n.PP\nInstead of updating the default credentials file, update the one at \\fIpath\\fP, and use a Docker-compatible format.\n\n.PP\n\\fB--get-login\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 49,
                  "endLine": 51,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\\fB--compat-auth-file\\fP=\\fIpath\\fP\n\n.PP\nInstead of updating the default credentials file, update the one at \\fIpath\\fP, and use a Docker-compatible format.\n\n.PP\n\\fB--get-login\\fP\n",
                    "rendered": {
                      "text": "\\fB--compat-auth-file\\fP=\\fIpath\\fP\n\n.PP\nInstead of updating the default credentials file, update the one at \\fIpath\\fP, and use a Docker-compatible format.\n\n.PP\n\\fB--get-login\\fP\n",
                      "markdown": "`\\fB--compat-auth-file\\fP=\\fIpath\\fP\n\n.PP\nInstead of updating the default credentials file, update the one at \\fIpath\\fP, and use a Docker-compatible format.\n\n.PP\n\\fB--get-login\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-login.1"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 16,
                  "endLine": 44,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                    "rendered": {
                      "text": "\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n",
                      "markdown": "`\\fB--cert-dir\\fP \\fIpath\\fP\n\n.PP\nUse certificates at \\fIpath\\fP (*\\&.crt, *\\&.cert, *\\&.key) to connect to the registry.\nThe default certificates directory is \\fI/etc/containers/certs.d\\fP\\&.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-info.1"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 9,
                  "endLine": 49,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        \"SwapTotal\": 2147479552,\n        \"arch\": \"amd64\",\n        \"cpus\": 4,\n        \"hostname\": \"localhost.localdomain\",\n        \"kernel\": \"4.15.0-36-generic\",\n        \"os\": \"linux\",\n        \"rootless\": false,\n",
                    "rendered": {
                      "text": "        \"SwapTotal\": 2147479552,\n        \"arch\": \"amd64\",\n        \"cpus\": 4,\n        \"hostname\": \"localhost.localdomain\",\n        \"kernel\": \"4.15.0-36-generic\",\n        \"os\": \"linux\",\n        \"rootless\": false,\n",
                      "markdown": "`        \"SwapTotal\": 2147479552,\n        \"arch\": \"amd64\",\n        \"cpus\": 4,\n        \"hostname\": \"localhost.localdomain\",\n        \"kernel\": \"4.15.0-36-generic\",\n        \"os\": \"linux\",\n        \"rootless\": false,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-copy.1"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 67,
                  "endLine": 56,
                  "snippet": {
                    "text": "\n.PP\nBuild context directory. Specifying a context directory causes Buildah to\nchroot into the context directory. This means copying files pointed at\nby symbolic links outside of the chroot will fail.\n\n.PP\n\\fB--from\\fP \\fIcontainerOrImage\\fP\n",
                    "rendered": {
                      "text": "\n.PP\nBuild context directory. Specifying a context directory causes Buildah to\nchroot into the context directory. This means copying files pointed at\nby symbolic links outside of the chroot will fail.\n\n.PP\n\\fB--from\\fP \\fIcontainerOrImage\\fP\n",
                      "markdown": "`\n.PP\nBuild context directory. Specifying a context directory causes Buildah to\nchroot into the context directory. This means copying files pointed at\nby symbolic links outside of the chroot will fail.\n\n.PP\n\\fB--from\\fP \\fIcontainerOrImage\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-copy.1"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 61,
                  "endLine": 160,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n.PP\n\\fB\\fC*/*.c\\fR\nExcludes files and directories whose names end with .c in any top level subdirectory. For example, the source file include/rootless.c.\n\n.PP\n\\fB\\fC**/output*\\fR\n",
                    "rendered": {
                      "text": "\n.PP\n\\fB\\fC*/*.c\\fR\nExcludes files and directories whose names end with .c in any top level subdirectory. For example, the source file include/rootless.c.\n\n.PP\n\\fB\\fC**/output*\\fR\n",
                      "markdown": "`\n.PP\n\\fB\\fC*/*.c\\fR\nExcludes files and directories whose names end with .c in any top level subdirectory. For example, the source file include/rootless.c.\n\n.PP\n\\fB\\fC**/output*\\fR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-containers.1"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 19,
                  "endLine": 152,
                  "endColumn": 85,
                  "snippet": {
                    "text": "    {\n        \"id\": \"45be1d806fc533fcfc2beee77e424d87e5990d3ce9214d6b374677d6630bba07\",\n        \"builder\": true,\n        \"imageid\": \"16ea53ea7c652456803632d67517b78a4f9075a10bfdc4fc6b7b4cbf2bc98497\",\n        \"imagename\": \"docker.io/library/busybox:latest\",\n        \"containername\": \"busybox-working-container\"\n    }\n",
                    "rendered": {
                      "text": "    {\n        \"id\": \"45be1d806fc533fcfc2beee77e424d87e5990d3ce9214d6b374677d6630bba07\",\n        \"builder\": true,\n        \"imageid\": \"16ea53ea7c652456803632d67517b78a4f9075a10bfdc4fc6b7b4cbf2bc98497\",\n        \"imagename\": \"docker.io/library/busybox:latest\",\n        \"containername\": \"busybox-working-container\"\n    }\n",
                      "markdown": "`    {\n        \"id\": \"45be1d806fc533fcfc2beee77e424d87e5990d3ce9214d6b374677d6630bba07\",\n        \"builder\": true,\n        \"imageid\": \"16ea53ea7c652456803632d67517b78a4f9075a10bfdc4fc6b7b4cbf2bc98497\",\n        \"imagename\": \"docker.io/library/busybox:latest\",\n        \"containername\": \"busybox-working-container\"\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-containers.1"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 14,
                  "endLine": 150,
                  "endColumn": 80,
                  "snippet": {
                    "text": "        \"containername\": \"ubi8-working-container\"\n    },\n    {\n        \"id\": \"45be1d806fc533fcfc2beee77e424d87e5990d3ce9214d6b374677d6630bba07\",\n        \"builder\": true,\n        \"imageid\": \"16ea53ea7c652456803632d67517b78a4f9075a10bfdc4fc6b7b4cbf2bc98497\",\n        \"imagename\": \"docker.io/library/busybox:latest\",\n",
                    "rendered": {
                      "text": "        \"containername\": \"ubi8-working-container\"\n    },\n    {\n        \"id\": \"45be1d806fc533fcfc2beee77e424d87e5990d3ce9214d6b374677d6630bba07\",\n        \"builder\": true,\n        \"imageid\": \"16ea53ea7c652456803632d67517b78a4f9075a10bfdc4fc6b7b4cbf2bc98497\",\n        \"imagename\": \"docker.io/library/busybox:latest\",\n",
                      "markdown": "`        \"containername\": \"ubi8-working-container\"\n    },\n    {\n        \"id\": \"45be1d806fc533fcfc2beee77e424d87e5990d3ce9214d6b374677d6630bba07\",\n        \"builder\": true,\n        \"imageid\": \"16ea53ea7c652456803632d67517b78a4f9075a10bfdc4fc6b7b4cbf2bc98497\",\n        \"imagename\": \"docker.io/library/busybox:latest\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-containers.1"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 19,
                  "endLine": 145,
                  "endColumn": 85,
                  "snippet": {
                    "text": "    {\n        \"id\": \"ccf84de04b80c309ce6586997c79a769033dc4129db903c1882bc24a058438b8\",\n        \"builder\": true,\n        \"imageid\": \"53ce4390f2adb1681eb1a90ec8b48c49c015e0a8d336c197637e7f65e365fa9e\",\n        \"imagename\": \"registry.access.redhat.com/ubi8:latest\",\n        \"containername\": \"ubi8-working-container\"\n    },\n",
                    "rendered": {
                      "text": "    {\n        \"id\": \"ccf84de04b80c309ce6586997c79a769033dc4129db903c1882bc24a058438b8\",\n        \"builder\": true,\n        \"imageid\": \"53ce4390f2adb1681eb1a90ec8b48c49c015e0a8d336c197637e7f65e365fa9e\",\n        \"imagename\": \"registry.access.redhat.com/ubi8:latest\",\n        \"containername\": \"ubi8-working-container\"\n    },\n",
                      "markdown": "`    {\n        \"id\": \"ccf84de04b80c309ce6586997c79a769033dc4129db903c1882bc24a058438b8\",\n        \"builder\": true,\n        \"imageid\": \"53ce4390f2adb1681eb1a90ec8b48c49c015e0a8d336c197637e7f65e365fa9e\",\n        \"imagename\": \"registry.access.redhat.com/ubi8:latest\",\n        \"containername\": \"ubi8-working-container\"\n    },\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-containers.1"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 14,
                  "endLine": 143,
                  "endColumn": 80,
                  "snippet": {
                    "text": ".nf\n[\n    {\n        \"id\": \"ccf84de04b80c309ce6586997c79a769033dc4129db903c1882bc24a058438b8\",\n        \"builder\": true,\n        \"imageid\": \"53ce4390f2adb1681eb1a90ec8b48c49c015e0a8d336c197637e7f65e365fa9e\",\n        \"imagename\": \"registry.access.redhat.com/ubi8:latest\",\n",
                    "rendered": {
                      "text": ".nf\n[\n    {\n        \"id\": \"ccf84de04b80c309ce6586997c79a769033dc4129db903c1882bc24a058438b8\",\n        \"builder\": true,\n        \"imageid\": \"53ce4390f2adb1681eb1a90ec8b48c49c015e0a8d336c197637e7f65e365fa9e\",\n        \"imagename\": \"registry.access.redhat.com/ubi8:latest\",\n",
                      "markdown": "`.nf\n[\n    {\n        \"id\": \"ccf84de04b80c309ce6586997c79a769033dc4129db903c1882bc24a058438b8\",\n        \"builder\": true,\n        \"imageid\": \"53ce4390f2adb1681eb1a90ec8b48c49c015e0a8d336c197637e7f65e365fa9e\",\n        \"imagename\": \"registry.access.redhat.com/ubi8:latest\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-config.1"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 8,
                  "endLine": 195,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\\fB--hostname\\fP \\fIhost\\fP\n\n.PP\nSet the hostname to set when running containers based on any images built using\nthe specified container.\n\n.PP\n",
                    "rendered": {
                      "text": "\\fB--hostname\\fP \\fIhost\\fP\n\n.PP\nSet the hostname to set when running containers based on any images built using\nthe specified container.\n\n.PP\n",
                      "markdown": "`\\fB--hostname\\fP \\fIhost\\fP\n\n.PP\nSet the hostname to set when running containers based on any images built using\nthe specified container.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-config.1"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 5,
                  "endLine": 192,
                  "endColumn": 13,
                  "snippet": {
                    "text": "using the specified container.\n\n.PP\n\\fB--hostname\\fP \\fIhost\\fP\n\n.PP\nSet the hostname to set when running containers based on any images built using\n",
                    "rendered": {
                      "text": "using the specified container.\n\n.PP\n\\fB--hostname\\fP \\fIhost\\fP\n\n.PP\nSet the hostname to set when running containers based on any images built using\n",
                      "markdown": "`using the specified container.\n\n.PP\n\\fB--hostname\\fP \\fIhost\\fP\n\n.PP\nSet the hostname to set when running containers based on any images built using\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-config.1"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 66,
                  "endLine": 101,
                  "endColumn": 71,
                  "snippet": {
                    "text": ".PP\nNote: When the entrypoint is specified as a string, container runtimes will\nignore the \\fB\\fCcmd\\fR value of the container image.  However if you use the array\nform, then the cmd will be appended onto the end of the entrypoint cmd and be\nexecuted together.\n\n.PP\n",
                    "rendered": {
                      "text": ".PP\nNote: When the entrypoint is specified as a string, container runtimes will\nignore the \\fB\\fCcmd\\fR value of the container image.  However if you use the array\nform, then the cmd will be appended onto the end of the entrypoint cmd and be\nexecuted together.\n\n.PP\n",
                      "markdown": "`.PP\nNote: When the entrypoint is specified as a string, container runtimes will\nignore the \\fB\\fCcmd\\fR value of the container image.  However if you use the array\nform, then the cmd will be appended onto the end of the entrypoint cmd and be\nexecuted together.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-config.1"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 14,
                  "endLine": 101,
                  "endColumn": 19,
                  "snippet": {
                    "text": ".PP\nNote: When the entrypoint is specified as a string, container runtimes will\nignore the \\fB\\fCcmd\\fR value of the container image.  However if you use the array\nform, then the cmd will be appended onto the end of the entrypoint cmd and be\nexecuted together.\n\n.PP\n",
                    "rendered": {
                      "text": ".PP\nNote: When the entrypoint is specified as a string, container runtimes will\nignore the \\fB\\fCcmd\\fR value of the container image.  However if you use the array\nform, then the cmd will be appended onto the end of the entrypoint cmd and be\nexecuted together.\n\n.PP\n",
                      "markdown": "`.PP\nNote: When the entrypoint is specified as a string, container runtimes will\nignore the \\fB\\fCcmd\\fR value of the container image.  However if you use the array\nform, then the cmd will be appended onto the end of the entrypoint cmd and be\nexecuted together.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-config.1"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 24,
                  "snippet": {
                    "text": ".TH buildah-config \"1\" \"March 2017\" \"buildah\"\n.SH NAME\n.PP\nbuildah-config - Update image configuration settings.\n\n.SH SYNOPSIS\n.PP\n",
                    "rendered": {
                      "text": ".TH buildah-config \"1\" \"March 2017\" \"buildah\"\n.SH NAME\n.PP\nbuildah-config - Update image configuration settings.\n\n.SH SYNOPSIS\n.PP\n",
                      "markdown": "`.TH buildah-config \"1\" \"March 2017\" \"buildah\"\n.SH NAME\n.PP\nbuildah-config - Update image configuration settings.\n\n.SH SYNOPSIS\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-config.1"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 66,
                  "endLine": 166,
                  "endColumn": 72,
                  "snippet": {
                    "text": "to run the command specified using the \\fI--healthcheck\\fP option should be treated\nas an indication that the container is failing.  During this time period,\nfailures will be attributed to the container not yet having fully started, and\nwill not be counted as errors.  After the command succeeds, or the time period\nhas elapsed, failures will be counted as errors.\n\n.PP\n",
                    "rendered": {
                      "text": "to run the command specified using the \\fI--healthcheck\\fP option should be treated\nas an indication that the container is failing.  During this time period,\nfailures will be attributed to the container not yet having fully started, and\nwill not be counted as errors.  After the command succeeds, or the time period\nhas elapsed, failures will be counted as errors.\n\n.PP\n",
                      "markdown": "`to run the command specified using the \\fI--healthcheck\\fP option should be treated\nas an indication that the container is failing.  During this time period,\nfailures will be attributed to the container not yet having fully started, and\nwill not be counted as errors.  After the command succeeds, or the time period\nhas elapsed, failures will be counted as errors.\n\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-config.1"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 60,
                  "endLine": 164,
                  "endColumn": 66,
                  "snippet": {
                    "text": ".PP\nSpecify how much time can elapse after a container has started before a failure\nto run the command specified using the \\fI--healthcheck\\fP option should be treated\nas an indication that the container is failing.  During this time period,\nfailures will be attributed to the container not yet having fully started, and\nwill not be counted as errors.  After the command succeeds, or the time period\nhas elapsed, failures will be counted as errors.\n",
                    "rendered": {
                      "text": ".PP\nSpecify how much time can elapse after a container has started before a failure\nto run the command specified using the \\fI--healthcheck\\fP option should be treated\nas an indication that the container is failing.  During this time period,\nfailures will be attributed to the container not yet having fully started, and\nwill not be counted as errors.  After the command succeeds, or the time period\nhas elapsed, failures will be counted as errors.\n",
                      "markdown": "`.PP\nSpecify how much time can elapse after a container has started before a failure\nto run the command specified using the \\fI--healthcheck\\fP option should be treated\nas an indication that the container is failing.  During this time period,\nfailures will be attributed to the container not yet having fully started, and\nwill not be counted as errors.  After the command succeeds, or the time period\nhas elapsed, failures will be counted as errors.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-config.1"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 16,
                  "endLine": 162,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\\fB--healthcheck-start-period\\fP \\fIinterval\\fP\n\n.PP\nSpecify how much time can elapse after a container has started before a failure\nto run the command specified using the \\fI--healthcheck\\fP option should be treated\nas an indication that the container is failing.  During this time period,\nfailures will be attributed to the container not yet having fully started, and\n",
                    "rendered": {
                      "text": "\\fB--healthcheck-start-period\\fP \\fIinterval\\fP\n\n.PP\nSpecify how much time can elapse after a container has started before a failure\nto run the command specified using the \\fI--healthcheck\\fP option should be treated\nas an indication that the container is failing.  During this time period,\nfailures will be attributed to the container not yet having fully started, and\n",
                      "markdown": "`\\fB--healthcheck-start-period\\fP \\fIinterval\\fP\n\n.PP\nSpecify how much time can elapse after a container has started before a failure\nto run the command specified using the \\fI--healthcheck\\fP option should be treated\nas an indication that the container is failing.  During this time period,\nfailures will be attributed to the container not yet having fully started, and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-config.1"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 11,
                  "endLine": 153,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\\fB--healthcheck-start-interval\\fP \\fIinterval\\fP\n\n.PP\nSpecify the time between health checks during the start period.\n\n.PP\nNote: this setting is not present in the OCIv1 image format, so it is discarded when writing images using OCIv1 formats.\n",
                    "rendered": {
                      "text": "\\fB--healthcheck-start-interval\\fP \\fIinterval\\fP\n\n.PP\nSpecify the time between health checks during the start period.\n\n.PP\nNote: this setting is not present in the OCIv1 image format, so it is discarded when writing images using OCIv1 formats.\n",
                      "markdown": "`\\fB--healthcheck-start-interval\\fP \\fIinterval\\fP\n\n.PP\nSpecify the time between health checks during the start period.\n\n.PP\nNote: this setting is not present in the OCIv1 image format, so it is discarded when writing images using OCIv1 formats.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-add.1"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 68,
                  "endLine": 56,
                  "snippet": {
                    "text": "\n.PP\nBuild context directory. Specifying a context directory causes Buildah to\nchroot into that context directory. This means copying files pointed at\nby symbolic links outside of the chroot will fail.\n\n.PP\n\\fB--from\\fP \\fIcontainerOrImage\\fP\n",
                    "rendered": {
                      "text": "\n.PP\nBuild context directory. Specifying a context directory causes Buildah to\nchroot into that context directory. This means copying files pointed at\nby symbolic links outside of the chroot will fail.\n\n.PP\n\\fB--from\\fP \\fIcontainerOrImage\\fP\n",
                      "markdown": "`\n.PP\nBuild context directory. Specifying a context directory causes Buildah to\nchroot into that context directory. This means copying files pointed at\nby symbolic links outside of the chroot will fail.\n\n.PP\n\\fB--from\\fP \\fIcontainerOrImage\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/buildah-1.37.4-r0.apk/buildah-1.37.4-r0/share/man/man1/buildah-add.1"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 61,
                  "endLine": 159,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n.PP\n\\fB\\fC*/*.c\\fR\nExcludes files and directories whose names end with .c in any top level subdirectory. For example, the source file include/rootless.c.\n\n.PP\n\\fB\\fC**/output*\\fR\n",
                    "rendered": {
                      "text": "\n.PP\n\\fB\\fC*/*.c\\fR\nExcludes files and directories whose names end with .c in any top level subdirectory. For example, the source file include/rootless.c.\n\n.PP\n\\fB\\fC**/output*\\fR\n",
                      "markdown": "`\n.PP\n\\fB\\fC*/*.c\\fR\nExcludes files and directories whose names end with .c in any top level subdirectory. For example, the source file include/rootless.c.\n\n.PP\n\\fB\\fC**/output*\\fR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}