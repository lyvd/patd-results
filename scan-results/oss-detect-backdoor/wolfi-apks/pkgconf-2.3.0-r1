{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/pkgconf-2.3.0-r1.apk/pkgconf-2.3.0-r1/usr/share/doc/pkgconf/README.md"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 59,
                  "endLine": 119,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n\npkgconf is compiled using [Meson](https://mesonbuild.com) on Windows. In theory, you could also use\nMeson to build on UNIX, but this is not recommended at this time as pkgconf is typically built\nmuch earlier than Meson.\n\n    $ meson setup build -Dtests=disabled\n",
                    "rendered": {
                      "text": "\n\npkgconf is compiled using [Meson](https://mesonbuild.com) on Windows. In theory, you could also use\nMeson to build on UNIX, but this is not recommended at this time as pkgconf is typically built\nmuch earlier than Meson.\n\n    $ meson setup build -Dtests=disabled\n",
                      "markdown": "`\n\npkgconf is compiled using [Meson](https://mesonbuild.com) on Windows. In theory, you could also use\nMeson to build on UNIX, but this is not recommended at this time as pkgconf is typically built\nmuch earlier than Meson.\n\n    $ meson setup build -Dtests=disabled\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/pkgconf-2.3.0-r1.apk/pkgconf-2.3.0-r1/usr/share/doc/pkgconf/README.md"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 8,
                  "endLine": 78,
                  "endColumn": 14,
                  "snippet": {
                    "text": "which pkg-config fails to do so, to be a bug**.\n\nIf, for example, you use environment variables such as `PKG_CONFIG_SYSTEM_[INCLUDE|LIBRARY]_PATH`\nand then find yourself surprised that `pkgconf` is stripping `-I` and `-L` flags relating\nto those paths, it is not a `pkgconf` problem -- `pkgconf` is doing exactly what you told\nit to do.\n\n",
                    "rendered": {
                      "text": "which pkg-config fails to do so, to be a bug**.\n\nIf, for example, you use environment variables such as `PKG_CONFIG_SYSTEM_[INCLUDE|LIBRARY]_PATH`\nand then find yourself surprised that `pkgconf` is stripping `-I` and `-L` flags relating\nto those paths, it is not a `pkgconf` problem -- `pkgconf` is doing exactly what you told\nit to do.\n\n",
                      "markdown": "`which pkg-config fails to do so, to be a bug**.\n\nIf, for example, you use environment variables such as `PKG_CONFIG_SYSTEM_[INCLUDE|LIBRARY]_PATH`\nand then find yourself surprised that `pkgconf` is stripping `-I` and `-L` flags relating\nto those paths, it is not a `pkgconf` problem -- `pkgconf` is doing exactly what you told\nit to do.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/pkgconf-2.3.0-r1.apk/pkgconf-2.3.0-r1/usr/share/doc/pkgconf/README.md"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 62,
                  "endLine": 63,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n## compatibility with pkg-config\n\nI really hate that I have to have this section, I like being a nice person, but we\nunfortunately have to say this because otherwise we get passive-aggressive people who\ntry to argue with us about what pkg-config compatibility means.\n\n",
                    "rendered": {
                      "text": "\n## compatibility with pkg-config\n\nI really hate that I have to have this section, I like being a nice person, but we\nunfortunately have to say this because otherwise we get passive-aggressive people who\ntry to argue with us about what pkg-config compatibility means.\n\n",
                      "markdown": "`\n## compatibility with pkg-config\n\nI really hate that I have to have this section, I like being a nice person, but we\nunfortunately have to say this because otherwise we get passive-aggressive people who\ntry to argue with us about what pkg-config compatibility means.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/pkgconf-2.3.0-r1.apk/pkgconf-2.3.0-r1/usr/share/doc/pkgconf/README.md"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 40,
                  "endLine": 149,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\nThere is a mailing list at <https://lists.sr.ht/~kaniini/pkgconf>.\n\nYou can contact us via IRC at `#pkgconf` at `irc.oftc.net`.\n",
                    "rendered": {
                      "text": "\nThere is a mailing list at <https://lists.sr.ht/~kaniini/pkgconf>.\n\nYou can contact us via IRC at `#pkgconf` at `irc.oftc.net`.\n",
                      "markdown": "`\nThere is a mailing list at <https://lists.sr.ht/~kaniini/pkgconf>.\n\nYou can contact us via IRC at `#pkgconf` at `irc.oftc.net`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/pkgconf-2.3.0-r1.apk/pkgconf-2.3.0-r1/usr/share/doc/pkgconf/README.md"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 26,
                  "endLine": 149,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThere is a mailing list at <https://lists.sr.ht/~kaniini/pkgconf>.\n\nYou can contact us via IRC at `#pkgconf` at `irc.oftc.net`.\n",
                    "rendered": {
                      "text": "\nThere is a mailing list at <https://lists.sr.ht/~kaniini/pkgconf>.\n\nYou can contact us via IRC at `#pkgconf` at `irc.oftc.net`.\n",
                      "markdown": "`\nThere is a mailing list at <https://lists.sr.ht/~kaniini/pkgconf>.\n\nYou can contact us via IRC at `#pkgconf` at `irc.oftc.net`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/pkgconf-2.3.0-r1.apk/pkgconf-2.3.0-r1/usr/share/doc/pkgconf/README.md"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 23,
                  "endLine": 147,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\nYou can report bugs at <https://github.com/pkgconf/pkgconf/issues>.\n\nThere is a mailing list at <https://lists.sr.ht/~kaniini/pkgconf>.\n\nYou can contact us via IRC at `#pkgconf` at `irc.oftc.net`.\n",
                    "rendered": {
                      "text": "\nYou can report bugs at <https://github.com/pkgconf/pkgconf/issues>.\n\nThere is a mailing list at <https://lists.sr.ht/~kaniini/pkgconf>.\n\nYou can contact us via IRC at `#pkgconf` at `irc.oftc.net`.\n",
                      "markdown": "`\nYou can report bugs at <https://github.com/pkgconf/pkgconf/issues>.\n\nThere is a mailing list at <https://lists.sr.ht/~kaniini/pkgconf>.\n\nYou can contact us via IRC at `#pkgconf` at `irc.oftc.net`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/pkgconf-2.3.0-r1.apk/pkgconf-2.3.0-r1/usr/share/doc/pkgconf/README.md"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 19,
                  "endLine": 145,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n## contacts\n\nYou can report bugs at <https://github.com/pkgconf/pkgconf/issues>.\n\nThere is a mailing list at <https://lists.sr.ht/~kaniini/pkgconf>.\n\n",
                    "rendered": {
                      "text": "\n## contacts\n\nYou can report bugs at <https://github.com/pkgconf/pkgconf/issues>.\n\nThere is a mailing list at <https://lists.sr.ht/~kaniini/pkgconf>.\n\n",
                      "markdown": "`\n## contacts\n\nYou can report bugs at <https://github.com/pkgconf/pkgconf/issues>.\n\nThere is a mailing list at <https://lists.sr.ht/~kaniini/pkgconf>.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/pkgconf-2.3.0-r1.apk/pkgconf-2.3.0-r1/usr/share/doc/pkgconf/README.md"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 30,
                  "endLine": 140,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n## release tarballs\n\nRelease tarballs are available at <https://distfiles.ariadne.space/pkgconf/>.\nPlease only use the tarballs from distfiles.ariadne.space.\n\n## contacts\n",
                    "rendered": {
                      "text": "\n## release tarballs\n\nRelease tarballs are available at <https://distfiles.ariadne.space/pkgconf/>.\nPlease only use the tarballs from distfiles.ariadne.space.\n\n## contacts\n",
                      "markdown": "`\n## release tarballs\n\nRelease tarballs are available at <https://distfiles.ariadne.space/pkgconf/>.\nPlease only use the tarballs from distfiles.ariadne.space.\n\n## contacts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/pkgconf-2.3.0-r1.apk/pkgconf-2.3.0-r1/usr/share/doc/pkgconf/README.md"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 73,
                  "endLine": 127,
                  "endColumn": 77,
                  "snippet": {
                    "text": "    $ meson install -C build\n\nThere are a few defines such as SYSTEM_LIBDIR, PKGCONFIGDIR and SYSTEM_INCLUDEDIR.\nHowever, on Windows, the default PKGCONFIGDIR value is usually overridden at runtime based\non path relocation.\n\n## pkg-config symlink\n",
                    "rendered": {
                      "text": "    $ meson install -C build\n\nThere are a few defines such as SYSTEM_LIBDIR, PKGCONFIGDIR and SYSTEM_INCLUDEDIR.\nHowever, on Windows, the default PKGCONFIGDIR value is usually overridden at runtime based\non path relocation.\n\n## pkg-config symlink\n",
                      "markdown": "`    $ meson install -C build\n\nThere are a few defines such as SYSTEM_LIBDIR, PKGCONFIGDIR and SYSTEM_INCLUDEDIR.\nHowever, on Windows, the default PKGCONFIGDIR value is usually overridden at runtime based\non path relocation.\n\n## pkg-config symlink\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/pkgconf-2.3.0-r1.apk/pkgconf-2.3.0-r1/usr/share/doc/pkgconf/README.md"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 51,
                  "endLine": 119,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n\npkgconf is compiled using [Meson](https://mesonbuild.com) on Windows. In theory, you could also use\nMeson to build on UNIX, but this is not recommended at this time as pkgconf is typically built\nmuch earlier than Meson.\n\n    $ meson setup build -Dtests=disabled\n",
                    "rendered": {
                      "text": "\n\npkgconf is compiled using [Meson](https://mesonbuild.com) on Windows. In theory, you could also use\nMeson to build on UNIX, but this is not recommended at this time as pkgconf is typically built\nmuch earlier than Meson.\n\n    $ meson setup build -Dtests=disabled\n",
                      "markdown": "`\n\npkgconf is compiled using [Meson](https://mesonbuild.com) on Windows. In theory, you could also use\nMeson to build on UNIX, but this is not recommended at this time as pkgconf is typically built\nmuch earlier than Meson.\n\n    $ meson setup build -Dtests=disabled\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/pkgconf-2.3.0-r1.apk/pkgconf-2.3.0-r1/usr/share/doc/pkgconf/README.md"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 67,
                  "endLine": 15,
                  "snippet": {
                    "text": "\nImplementations of pkg-config, such as pkgconf, are typically used with the\nPKG_CHECK_MODULES autoconf macro.  As far as we know, pkgconf is\ncompatible with all known variations of this macro. pkgconf detects at\nruntime whether or not it was started as 'pkg-config', and if so, attempts\nto set program options such that its behaviour is similar.\n\nIn terms of the autoconf macro, it is possible to specify the PKG_CONFIG\n",
                    "rendered": {
                      "text": "\nImplementations of pkg-config, such as pkgconf, are typically used with the\nPKG_CHECK_MODULES autoconf macro.  As far as we know, pkgconf is\ncompatible with all known variations of this macro. pkgconf detects at\nruntime whether or not it was started as 'pkg-config', and if so, attempts\nto set program options such that its behaviour is similar.\n\nIn terms of the autoconf macro, it is possible to specify the PKG_CONFIG\n",
                      "markdown": "`\nImplementations of pkg-config, such as pkgconf, are typically used with the\nPKG_CHECK_MODULES autoconf macro.  As far as we know, pkgconf is\ncompatible with all known variations of this macro. pkgconf detects at\nruntime whether or not it was started as 'pkg-config', and if so, attempts\nto set program options such that its behaviour is similar.\n\nIn terms of the autoconf macro, it is possible to specify the PKG_CONFIG\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/pkgconf-2.3.0-r1.apk/pkgconf-2.3.0-r1/usr/share/doc/pkgconf/README.md"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 25,
                  "endLine": 77,
                  "endColumn": 78,
                  "snippet": {
                    "text": "Additionally, **we do not consider pkgconf doing what you tell it to do, in cases for \nwhich pkg-config fails to do so, to be a bug**.\n\nIf, for example, you use environment variables such as `PKG_CONFIG_SYSTEM_[INCLUDE|LIBRARY]_PATH`\nand then find yourself surprised that `pkgconf` is stripping `-I` and `-L` flags relating\nto those paths, it is not a `pkgconf` problem -- `pkgconf` is doing exactly what you told\nit to do.\n",
                    "rendered": {
                      "text": "Additionally, **we do not consider pkgconf doing what you tell it to do, in cases for \nwhich pkg-config fails to do so, to be a bug**.\n\nIf, for example, you use environment variables such as `PKG_CONFIG_SYSTEM_[INCLUDE|LIBRARY]_PATH`\nand then find yourself surprised that `pkgconf` is stripping `-I` and `-L` flags relating\nto those paths, it is not a `pkgconf` problem -- `pkgconf` is doing exactly what you told\nit to do.\n",
                      "markdown": "`Additionally, **we do not consider pkgconf doing what you tell it to do, in cases for \nwhich pkg-config fails to do so, to be a bug**.\n\nIf, for example, you use environment variables such as `PKG_CONFIG_SYSTEM_[INCLUDE|LIBRARY]_PATH`\nand then find yourself surprised that `pkgconf` is stripping `-I` and `-L` flags relating\nto those paths, it is not a `pkgconf` problem -- `pkgconf` is doing exactly what you told\nit to do.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}