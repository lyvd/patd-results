{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/v8-profiler.h"
                },
                "region": {
                  "startLine": 1054,
                  "startColumn": 20,
                  "endLine": 1054,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    /**\n     * The control used to report intermediate progress to.\n     */\n    ActivityControl* control = nullptr;\n    /**\n     * The resolver used by the snapshot generator to get names for V8 objects.\n     */\n",
                    "rendered": {
                      "text": "    /**\n     * The control used to report intermediate progress to.\n     */\n    ActivityControl* control = nullptr;\n    /**\n     * The resolver used by the snapshot generator to get names for V8 objects.\n     */\n",
                      "markdown": "`    /**\n     * The control used to report intermediate progress to.\n     */\n    ActivityControl* control = nullptr;\n    /**\n     * The resolver used by the snapshot generator to get names for V8 objects.\n     */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/v8-profiler.h"
                },
                "region": {
                  "startLine": 839,
                  "startColumn": 7,
                  "endLine": 839,
                  "endColumn": 13,
                  "snippet": {
                    "text": " */\nclass V8_EXPORT EmbedderGraph {\n public:\n  class Node {\n   public:\n    /**\n     * Detachedness specifies whether an object is attached or detached from the\n",
                    "rendered": {
                      "text": " */\nclass V8_EXPORT EmbedderGraph {\n public:\n  class Node {\n   public:\n    /**\n     * Detachedness specifies whether an object is attached or detached from the\n",
                      "markdown": "` */\nclass V8_EXPORT EmbedderGraph {\n public:\n  class Node {\n   public:\n    /**\n     * Detachedness specifies whether an object is attached or detached from the\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/v8-profiler.h"
                },
                "region": {
                  "startLine": 729,
                  "startColumn": 8,
                  "endLine": 729,
                  "endColumn": 14,
                  "snippet": {
                    "text": "  /**\n   * Represents a node in the call-graph.\n   */\n  struct Node {\n    /**\n     * Name of the function. May be empty for anonymous functions or if the\n     * script corresponding to this function has been unloaded.\n",
                    "rendered": {
                      "text": "  /**\n   * Represents a node in the call-graph.\n   */\n  struct Node {\n    /**\n     * Name of the function. May be empty for anonymous functions or if the\n     * script corresponding to this function has been unloaded.\n",
                      "markdown": "`  /**\n   * Represents a node in the call-graph.\n   */\n  struct Node {\n    /**\n     * Name of the function. May be empty for anonymous functions or if the\n     * script corresponding to this function has been unloaded.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/v8-template.h"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 14,
                  "endLine": 156,
                  "endColumn": 56,
                  "snippet": {
                    "text": " *      v8::NamedPropertyHandlerConfiguration(GetterCallback));\n *  LocalContext env;\n *  env->Global()\n *      ->Set(env.local(), v8_str(\"obj\"), templ->GetFunction(env.local())\n *                                             .ToLocalChecked()\n *                                             ->NewInstance(env.local())\n *                                             .ToLocalChecked())\n",
                    "rendered": {
                      "text": " *      v8::NamedPropertyHandlerConfiguration(GetterCallback));\n *  LocalContext env;\n *  env->Global()\n *      ->Set(env.local(), v8_str(\"obj\"), templ->GetFunction(env.local())\n *                                             .ToLocalChecked()\n *                                             ->NewInstance(env.local())\n *                                             .ToLocalChecked())\n",
                      "markdown": "` *      v8::NamedPropertyHandlerConfiguration(GetterCallback));\n *  LocalContext env;\n *  env->Global()\n *      ->Set(env.local(), v8_str(\"obj\"), templ->GetFunction(env.local())\n *                                             .ToLocalChecked()\n *                                             ->NewInstance(env.local())\n *                                             .ToLocalChecked())\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/v8-script.h"
                },
                "region": {
                  "startLine": 831,
                  "startColumn": 20,
                  "endLine": 831,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\nconst ScriptCompiler::CachedData* ScriptCompiler::Source::GetCachedData()\n    const {\n  return cached_data.get();\n}\n\nconst ScriptOriginOptions& ScriptCompiler::Source::GetResourceOptions() const {\n",
                    "rendered": {
                      "text": "\nconst ScriptCompiler::CachedData* ScriptCompiler::Source::GetCachedData()\n    const {\n  return cached_data.get();\n}\n\nconst ScriptOriginOptions& ScriptCompiler::Source::GetResourceOptions() const {\n",
                      "markdown": "`\nconst ScriptCompiler::CachedData* ScriptCompiler::Source::GetCachedData()\n    const {\n  return cached_data.get();\n}\n\nconst ScriptOriginOptions& ScriptCompiler::Source::GetResourceOptions() const {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/v8-script.h"
                },
                "region": {
                  "startLine": 519,
                  "startColumn": 62,
                  "endLine": 519,
                  "endColumn": 67,
                  "snippet": {
                    "text": "                   Encoding encoding);\n    ~StreamedSource();\n\n    internal::ScriptStreamingData* impl() const { return impl_.get(); }\n\n    // Prevent copying.\n    StreamedSource(const StreamedSource&) = delete;\n",
                    "rendered": {
                      "text": "                   Encoding encoding);\n    ~StreamedSource();\n\n    internal::ScriptStreamingData* impl() const { return impl_.get(); }\n\n    // Prevent copying.\n    StreamedSource(const StreamedSource&) = delete;\n",
                      "markdown": "`                   Encoding encoding);\n    ~StreamedSource();\n\n    internal::ScriptStreamingData* impl() const { return impl_.get(); }\n\n    // Prevent copying.\n    StreamedSource(const StreamedSource&) = delete;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/v8-script.h"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 15,
                  "endLine": 323,
                  "endColumn": 23,
                  "snippet": {
                    "text": " * A compiled JavaScript script, tied to a Context which was active when the\n * script was compiled.\n */\nclass V8_EXPORT Script : public Data {\n public:\n  /**\n   * A shorthand for ScriptCompiler::Compile().\n",
                    "rendered": {
                      "text": " * A compiled JavaScript script, tied to a Context which was active when the\n * script was compiled.\n */\nclass V8_EXPORT Script : public Data {\n public:\n  /**\n   * A shorthand for ScriptCompiler::Compile().\n",
                      "markdown": "` * A compiled JavaScript script, tied to a Context which was active when the\n * script was compiled.\n */\nclass V8_EXPORT Script : public Data {\n public:\n  /**\n   * A shorthand for ScriptCompiler::Compile().\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node_api.h"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 18,
                  "endLine": 235,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    node_api_nogc_env env, napi_threadsafe_function func);\n\nNAPI_EXTERN napi_status NAPI_CDECL napi_ref_threadsafe_function(\n    node_api_nogc_env env, napi_threadsafe_function func);\n\n#endif  // NAPI_VERSION >= 4\n\n",
                    "rendered": {
                      "text": "    node_api_nogc_env env, napi_threadsafe_function func);\n\nNAPI_EXTERN napi_status NAPI_CDECL napi_ref_threadsafe_function(\n    node_api_nogc_env env, napi_threadsafe_function func);\n\n#endif  // NAPI_VERSION >= 4\n\n",
                      "markdown": "`    node_api_nogc_env env, napi_threadsafe_function func);\n\nNAPI_EXTERN napi_status NAPI_CDECL napi_ref_threadsafe_function(\n    node_api_nogc_env env, napi_threadsafe_function func);\n\n#endif  // NAPI_VERSION >= 4\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node_api.h"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 18,
                  "endLine": 232,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    napi_threadsafe_function func, napi_threadsafe_function_release_mode mode);\n\nNAPI_EXTERN napi_status NAPI_CDECL napi_unref_threadsafe_function(\n    node_api_nogc_env env, napi_threadsafe_function func);\n\nNAPI_EXTERN napi_status NAPI_CDECL napi_ref_threadsafe_function(\n    node_api_nogc_env env, napi_threadsafe_function func);\n",
                    "rendered": {
                      "text": "    napi_threadsafe_function func, napi_threadsafe_function_release_mode mode);\n\nNAPI_EXTERN napi_status NAPI_CDECL napi_unref_threadsafe_function(\n    node_api_nogc_env env, napi_threadsafe_function func);\n\nNAPI_EXTERN napi_status NAPI_CDECL napi_ref_threadsafe_function(\n    node_api_nogc_env env, napi_threadsafe_function func);\n",
                      "markdown": "`    napi_threadsafe_function func, napi_threadsafe_function_release_mode mode);\n\nNAPI_EXTERN napi_status NAPI_CDECL napi_unref_threadsafe_function(\n    node_api_nogc_env env, napi_threadsafe_function func);\n\nNAPI_EXTERN napi_status NAPI_CDECL napi_ref_threadsafe_function(\n    node_api_nogc_env env, napi_threadsafe_function func);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node_api.h"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 24,
                  "endLine": 113,
                  "endColumn": 57,
                  "snippet": {
                    "text": "                napi_async_context* result);\n\nNAPI_EXTERN napi_status NAPI_CDECL\nnapi_async_destroy(napi_env env, napi_async_context async_context);\n\nNAPI_EXTERN napi_status NAPI_CDECL\nnapi_make_callback(napi_env env,\n",
                    "rendered": {
                      "text": "                napi_async_context* result);\n\nNAPI_EXTERN napi_status NAPI_CDECL\nnapi_async_destroy(napi_env env, napi_async_context async_context);\n\nNAPI_EXTERN napi_status NAPI_CDECL\nnapi_make_callback(napi_env env,\n",
                      "markdown": "`                napi_async_context* result);\n\nNAPI_EXTERN napi_status NAPI_CDECL\nnapi_async_destroy(napi_env env, napi_async_context async_context);\n\nNAPI_EXTERN napi_status NAPI_CDECL\nnapi_make_callback(napi_env env,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node_api.h"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 32,
                  "endLine": 7,
                  "snippet": {
                    "text": "\n#if defined(BUILDING_NODE_EXTENSION) && !defined(NAPI_EXTERN)\n#ifdef _WIN32\n// Building native addon against node\n#define NAPI_EXTERN __declspec(dllimport)\n#elif defined(__wasm__)\n#define NAPI_EXTERN __attribute__((__import_module__(\"napi\")))\n#endif\n",
                    "rendered": {
                      "text": "\n#if defined(BUILDING_NODE_EXTENSION) && !defined(NAPI_EXTERN)\n#ifdef _WIN32\n// Building native addon against node\n#define NAPI_EXTERN __declspec(dllimport)\n#elif defined(__wasm__)\n#define NAPI_EXTERN __attribute__((__import_module__(\"napi\")))\n#endif\n",
                      "markdown": "`\n#if defined(BUILDING_NODE_EXTENSION) && !defined(NAPI_EXTERN)\n#ifdef _WIN32\n// Building native addon against node\n#define NAPI_EXTERN __declspec(dllimport)\n#elif defined(__wasm__)\n#define NAPI_EXTERN __attribute__((__import_module__(\"napi\")))\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/member.h"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 17,
                  "endLine": 385,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    return member.GetRawStorage() == StorageType(static_cast<T*>(raw));\n  } else {\n    // Otherwise, decompressed the member.\n    return member.Get() == raw;\n  }\n}\n\n",
                    "rendered": {
                      "text": "    return member.GetRawStorage() == StorageType(static_cast<T*>(raw));\n  } else {\n    // Otherwise, decompressed the member.\n    return member.Get() == raw;\n  }\n}\n\n",
                      "markdown": "`    return member.GetRawStorage() == StorageType(static_cast<T*>(raw));\n  } else {\n    // Otherwise, decompressed the member.\n    return member.Get() == raw;\n  }\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/member.h"
                },
                "region": {
                  "startLine": 351,
                  "startColumn": 35,
                  "endLine": 351,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    static_assert(internal::IsStrictlyBaseOfV<T1, T2> ||\n                  internal::IsStrictlyBaseOfV<T2, T1>);\n    // Otherwise, check decompressed pointers.\n    return member1.Get() == member2.Get();\n  }\n}\n\n",
                    "rendered": {
                      "text": "    static_assert(internal::IsStrictlyBaseOfV<T1, T2> ||\n                  internal::IsStrictlyBaseOfV<T2, T1>);\n    // Otherwise, check decompressed pointers.\n    return member1.Get() == member2.Get();\n  }\n}\n\n",
                      "markdown": "`    static_assert(internal::IsStrictlyBaseOfV<T1, T2> ||\n                  internal::IsStrictlyBaseOfV<T2, T1>);\n    // Otherwise, check decompressed pointers.\n    return member1.Get() == member2.Get();\n  }\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/member.h"
                },
                "region": {
                  "startLine": 351,
                  "startColumn": 18,
                  "endLine": 351,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    static_assert(internal::IsStrictlyBaseOfV<T1, T2> ||\n                  internal::IsStrictlyBaseOfV<T2, T1>);\n    // Otherwise, check decompressed pointers.\n    return member1.Get() == member2.Get();\n  }\n}\n\n",
                    "rendered": {
                      "text": "    static_assert(internal::IsStrictlyBaseOfV<T1, T2> ||\n                  internal::IsStrictlyBaseOfV<T2, T1>);\n    // Otherwise, check decompressed pointers.\n    return member1.Get() == member2.Get();\n  }\n}\n\n",
                      "markdown": "`    static_assert(internal::IsStrictlyBaseOfV<T1, T2> ||\n                  internal::IsStrictlyBaseOfV<T2, T1>);\n    // Otherwise, check decompressed pointers.\n    return member1.Get() == member2.Get();\n  }\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/member.h"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 26,
                  "endLine": 228,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      const BasicPersistent<U, PersistentWeaknessPolicy,\n                            PersistentLocationPolicy, PersistentCheckingPolicy>&\n          other) {\n    return operator=(other.Get());\n  }\n\n  V8_INLINE BasicMember& operator=(T* other) {\n",
                    "rendered": {
                      "text": "      const BasicPersistent<U, PersistentWeaknessPolicy,\n                            PersistentLocationPolicy, PersistentCheckingPolicy>&\n          other) {\n    return operator=(other.Get());\n  }\n\n  V8_INLINE BasicMember& operator=(T* other) {\n",
                      "markdown": "`      const BasicPersistent<U, PersistentWeaknessPolicy,\n                            PersistentLocationPolicy, PersistentCheckingPolicy>&\n          other) {\n    return operator=(other.Get());\n  }\n\n  V8_INLINE BasicMember& operator=(T* other) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/member.h"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 21,
                  "endLine": 213,
                  "endColumn": 26,
                  "snippet": {
                    "text": "      operator=(other.GetRawStorage());\n    } else {\n      static_assert(internal::IsStrictlyBaseOfV<T, U>);\n      operator=(other.Get());\n    }\n    other.Clear();\n    return *this;\n",
                    "rendered": {
                      "text": "      operator=(other.GetRawStorage());\n    } else {\n      static_assert(internal::IsStrictlyBaseOfV<T, U>);\n      operator=(other.Get());\n    }\n    other.Clear();\n    return *this;\n",
                      "markdown": "`      operator=(other.GetRawStorage());\n    } else {\n      static_assert(internal::IsStrictlyBaseOfV<T, U>);\n      operator=(other.Get());\n    }\n    other.Clear();\n    return *this;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/member.h"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 28,
                  "endLine": 190,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      return operator=(other.GetRawStorage());\n    } else {\n      static_assert(internal::IsStrictlyBaseOfV<T, U>);\n      return operator=(other.Get());\n    }\n  }\n\n",
                    "rendered": {
                      "text": "      return operator=(other.GetRawStorage());\n    } else {\n      static_assert(internal::IsStrictlyBaseOfV<T, U>);\n      return operator=(other.Get());\n    }\n  }\n\n",
                      "markdown": "`      return operator=(other.GetRawStorage());\n    } else {\n      static_assert(internal::IsStrictlyBaseOfV<T, U>);\n      return operator=(other.Get());\n    }\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/member.h"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 21,
                  "endLine": 171,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  V8_INLINE BasicMember(const BasicPersistent<U, PersistentWeaknessPolicy,\n                                              PersistentLocationPolicy,\n                                              PersistentCheckingPolicy>& p)\n      : BasicMember(p.Get()) {}\n\n  // Copy assignment.\n  V8_INLINE BasicMember& operator=(const BasicMember& other) {\n",
                    "rendered": {
                      "text": "  V8_INLINE BasicMember(const BasicPersistent<U, PersistentWeaknessPolicy,\n                                              PersistentLocationPolicy,\n                                              PersistentCheckingPolicy>& p)\n      : BasicMember(p.Get()) {}\n\n  // Copy assignment.\n  V8_INLINE BasicMember& operator=(const BasicMember& other) {\n",
                      "markdown": "`  V8_INLINE BasicMember(const BasicPersistent<U, PersistentWeaknessPolicy,\n                                              PersistentLocationPolicy,\n                                              PersistentCheckingPolicy>& p)\n      : BasicMember(p.Get()) {}\n\n  // Copy assignment.\n  V8_INLINE BasicMember& operator=(const BasicMember& other) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/member.h"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 25,
                  "endLine": 159,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  V8_INLINE BasicMember(\n      BasicMember<U, OtherWeaknessTag, OtherBarrierPolicy, OtherCheckingPolicy,\n                  StorageType>&& other) noexcept\n      : BasicMember(other.Get()) {\n    other.Clear();\n  }\n\n",
                    "rendered": {
                      "text": "  V8_INLINE BasicMember(\n      BasicMember<U, OtherWeaknessTag, OtherBarrierPolicy, OtherCheckingPolicy,\n                  StorageType>&& other) noexcept\n      : BasicMember(other.Get()) {\n    other.Clear();\n  }\n\n",
                      "markdown": "`  V8_INLINE BasicMember(\n      BasicMember<U, OtherWeaknessTag, OtherBarrierPolicy, OtherCheckingPolicy,\n                  StorageType>&& other) noexcept\n      : BasicMember(other.Get()) {\n    other.Clear();\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/member.h"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 25,
                  "endLine": 132,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  V8_INLINE BasicMember(  // NOLINT\n      const BasicMember<U, OtherWeaknessTag, OtherBarrierPolicy,\n                        OtherCheckingPolicy, StorageType>& other)\n      : BasicMember(other.Get()) {}\n\n  // Move ctor.\n  V8_INLINE BasicMember(BasicMember&& other) noexcept\n",
                    "rendered": {
                      "text": "  V8_INLINE BasicMember(  // NOLINT\n      const BasicMember<U, OtherWeaknessTag, OtherBarrierPolicy,\n                        OtherCheckingPolicy, StorageType>& other)\n      : BasicMember(other.Get()) {}\n\n  // Move ctor.\n  V8_INLINE BasicMember(BasicMember&& other) noexcept\n",
                      "markdown": "`  V8_INLINE BasicMember(  // NOLINT\n      const BasicMember<U, OtherWeaknessTag, OtherBarrierPolicy,\n                        OtherCheckingPolicy, StorageType>& other)\n      : BasicMember(other.Get()) {}\n\n  // Move ctor.\n  V8_INLINE BasicMember(BasicMember&& other) noexcept\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 664,
                  "startColumn": 4,
                  "endLine": 664,
                  "endColumn": 15,
                  "snippet": {
                    "text": ".Ar NODE_EXTRA_CA_CERTS\nenvironment variable is only read when the Node.js process is first launched.\nChanging the value at runtime using\n.Ar process.env.NODE_EXTRA_CA_CERTS\nhas no effect on the current process.\n.\n.It Ev NODE_ICU_DATA Ar file\n",
                    "rendered": {
                      "text": ".Ar NODE_EXTRA_CA_CERTS\nenvironment variable is only read when the Node.js process is first launched.\nChanging the value at runtime using\n.Ar process.env.NODE_EXTRA_CA_CERTS\nhas no effect on the current process.\n.\n.It Ev NODE_ICU_DATA Ar file\n",
                      "markdown": "`.Ar NODE_EXTRA_CA_CERTS\nenvironment variable is only read when the Node.js process is first launched.\nChanging the value at runtime using\n.Ar process.env.NODE_EXTRA_CA_CERTS\nhas no effect on the current process.\n.\n.It Ev NODE_ICU_DATA Ar file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 663,
                  "startColumn": 18,
                  "endLine": 663,
                  "endColumn": 22,
                  "snippet": {
                    "text": "The\n.Ar NODE_EXTRA_CA_CERTS\nenvironment variable is only read when the Node.js process is first launched.\nChanging the value at runtime using\n.Ar process.env.NODE_EXTRA_CA_CERTS\nhas no effect on the current process.\n.\n",
                    "rendered": {
                      "text": "The\n.Ar NODE_EXTRA_CA_CERTS\nenvironment variable is only read when the Node.js process is first launched.\nChanging the value at runtime using\n.Ar process.env.NODE_EXTRA_CA_CERTS\nhas no effect on the current process.\n.\n",
                      "markdown": "`The\n.Ar NODE_EXTRA_CA_CERTS\nenvironment variable is only read when the Node.js process is first launched.\nChanging the value at runtime using\n.Ar process.env.NODE_EXTRA_CA_CERTS\nhas no effect on the current process.\n.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 600,
                  "startColumn": 10,
                  "endLine": 601,
                  "endColumn": 3,
                  "snippet": {
                    "text": ".\n.It Fl r , Fl -require Ar module\nPreload the specified\n.Ar module\nat startup.\nFollows `require()`'s module resolution rules.\n.Ar module\nmay be either a path to a file, or a Node.js module name.\n",
                    "rendered": {
                      "text": ".\n.It Fl r , Fl -require Ar module\nPreload the specified\n.Ar module\nat startup.\nFollows `require()`'s module resolution rules.\n.Ar module\nmay be either a path to a file, or a Node.js module name.\n",
                      "markdown": "`.\n.It Fl r , Fl -require Ar module\nPreload the specified\n.Ar module\nat startup.\nFollows `require()`'s module resolution rules.\n.Ar module\nmay be either a path to a file, or a Node.js module name.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 557,
                  "startColumn": 52,
                  "endLine": 557,
                  "endColumn": 56,
                  "snippet": {
                    "text": ".Ev SSL_CERT_FILE .\n.\n.It Fl -use-largepages Ns = Ns Ar mode\nRe-map the Node.js static code to large memory pages at startup. If supported on\nthe target system, this will cause the Node.js static code to be moved onto 2\nMiB pages instead of 4 KiB pages.\n.Pp\n",
                    "rendered": {
                      "text": ".Ev SSL_CERT_FILE .\n.\n.It Fl -use-largepages Ns = Ns Ar mode\nRe-map the Node.js static code to large memory pages at startup. If supported on\nthe target system, this will cause the Node.js static code to be moved onto 2\nMiB pages instead of 4 KiB pages.\n.Pp\n",
                      "markdown": "`.Ev SSL_CERT_FILE .\n.\n.It Fl -use-largepages Ns = Ns Ar mode\nRe-map the Node.js static code to large memory pages at startup. If supported on\nthe target system, this will cause the Node.js static code to be moved onto 2\nMiB pages instead of 4 KiB pages.\n.Pp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 549,
                  "startColumn": 102,
                  "endLine": 549,
                  "endColumn": 106,
                  "snippet": {
                    "text": ".Pp\nUsing OpenSSL store allows for external modifications of the store.\nFor most Linux and BSD distributions, this store is maintained by the distribution maintainers and system administrators.\nOpenSSL CA store location is dependent on configuration of the OpenSSL library but this can be altered at runtime using environment variables.\n.Pp\nSee\n.Ev SSL_CERT_DIR\n",
                    "rendered": {
                      "text": ".Pp\nUsing OpenSSL store allows for external modifications of the store.\nFor most Linux and BSD distributions, this store is maintained by the distribution maintainers and system administrators.\nOpenSSL CA store location is dependent on configuration of the OpenSSL library but this can be altered at runtime using environment variables.\n.Pp\nSee\n.Ev SSL_CERT_DIR\n",
                      "markdown": "`.Pp\nUsing OpenSSL store allows for external modifications of the store.\nFor most Linux and BSD distributions, this store is maintained by the distribution maintainers and system administrators.\nOpenSSL CA store location is dependent on configuration of the OpenSSL library but this can be altered at runtime using environment variables.\n.Pp\nSee\n.Ev SSL_CERT_DIR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 544,
                  "startColumn": 93,
                  "endLine": 544,
                  "endColumn": 97,
                  "snippet": {
                    "text": "Use bundled Mozilla CA store as supplied by current Node.js version or use OpenSSL's default CA store.\nThe default store is selectable at build-time.\n.Pp\nThe bundled CA store, as supplied by Node.js, is a snapshot of Mozilla CA store that is fixed at release time.\nIt is identical on all supported platforms.\n.Pp\nUsing OpenSSL store allows for external modifications of the store.\n",
                    "rendered": {
                      "text": "Use bundled Mozilla CA store as supplied by current Node.js version or use OpenSSL's default CA store.\nThe default store is selectable at build-time.\n.Pp\nThe bundled CA store, as supplied by Node.js, is a snapshot of Mozilla CA store that is fixed at release time.\nIt is identical on all supported platforms.\n.Pp\nUsing OpenSSL store allows for external modifications of the store.\n",
                      "markdown": "`Use bundled Mozilla CA store as supplied by current Node.js version or use OpenSSL's default CA store.\nThe default store is selectable at build-time.\n.Pp\nThe bundled CA store, as supplied by Node.js, is a snapshot of Mozilla CA store that is fixed at release time.\nIt is identical on all supported platforms.\n.Pp\nUsing OpenSSL store allows for external modifications of the store.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 542,
                  "startColumn": 31,
                  "endLine": 542,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".\n.It Fl -use-bundled-ca , Fl -use-openssl-ca\nUse bundled Mozilla CA store as supplied by current Node.js version or use OpenSSL's default CA store.\nThe default store is selectable at build-time.\n.Pp\nThe bundled CA store, as supplied by Node.js, is a snapshot of Mozilla CA store that is fixed at release time.\nIt is identical on all supported platforms.\n",
                    "rendered": {
                      "text": ".\n.It Fl -use-bundled-ca , Fl -use-openssl-ca\nUse bundled Mozilla CA store as supplied by current Node.js version or use OpenSSL's default CA store.\nThe default store is selectable at build-time.\n.Pp\nThe bundled CA store, as supplied by Node.js, is a snapshot of Mozilla CA store that is fixed at release time.\nIt is identical on all supported platforms.\n",
                      "markdown": "`.\n.It Fl -use-bundled-ca , Fl -use-openssl-ca\nUse bundled Mozilla CA store as supplied by current Node.js version or use OpenSSL's default CA store.\nThe default store is selectable at build-time.\n.Pp\nThe bundled CA store, as supplied by Node.js, is a snapshot of Mozilla CA store that is fixed at release time.\nIt is identical on all supported platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 8,
                  "endLine": 376,
                  "endColumn": 12,
                  "snippet": {
                    "text": "in a compact format, single-line JSON.\n.\n.It Fl -report-dir Fl -report-directory\nLocation at which the\n.Sy diagnostic report\nwill be generated.\nThe `file` name may be an absolute path. If it is not, the default directory it will\n",
                    "rendered": {
                      "text": "in a compact format, single-line JSON.\n.\n.It Fl -report-dir Fl -report-directory\nLocation at which the\n.Sy diagnostic report\nwill be generated.\nThe `file` name may be an absolute path. If it is not, the default directory it will\n",
                      "markdown": "`in a compact format, single-line JSON.\n.\n.It Fl -report-dir Fl -report-directory\nLocation at which the\n.Sy diagnostic report\nwill be generated.\nThe `file` name may be an absolute path. If it is not, the default directory it will\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 9,
                  "endLine": 269,
                  "endColumn": 13,
                  "snippet": {
                    "text": ".It Fl -inspect-brk Ns = Ns Ar [host:]port\nActivate inspector on\n.Ar host:port\nand break at start of user script.\n.\n.It Fl -inspect-port Ns = Ns Ar [host:]port\nSet the\n",
                    "rendered": {
                      "text": ".It Fl -inspect-brk Ns = Ns Ar [host:]port\nActivate inspector on\n.Ar host:port\nand break at start of user script.\n.\n.It Fl -inspect-port Ns = Ns Ar [host:]port\nSet the\n",
                      "markdown": "`.It Fl -inspect-brk Ns = Ns Ar [host:]port\nActivate inspector on\n.Ar host:port\nand break at start of user script.\n.\n.It Fl -inspect-port Ns = Ns Ar [host:]port\nSet the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 28,
                  "endLine": 151,
                  "endColumn": 32,
                  "snippet": {
                    "text": "`vm` module.\n.\n.It Fl -enable-fips\nEnable FIPS-compliant crypto at startup.\nRequires Node.js to be built with\n.Sy ./configure --openssl-fips .\n.\n",
                    "rendered": {
                      "text": "`vm` module.\n.\n.It Fl -enable-fips\nEnable FIPS-compliant crypto at startup.\nRequires Node.js to be built with\n.Sy ./configure --openssl-fips .\n.\n",
                      "markdown": "``vm` module.\n.\n.It Fl -enable-fips\nEnable FIPS-compliant crypto at startup.\nRequires Node.js to be built with\n.Sy ./configure --openssl-fips .\n.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 17,
                  "endLine": 95,
                  "endColumn": 23,
                  "snippet": {
                    "text": "Allow creating worker threads when using the permission model.\n.\n.It Fl -completion-bash\nPrint source-able bash completion script for Node.js.\n.\n.It Fl C , Fl -conditions Ar string\nUse custom conditional exports conditions.\n",
                    "rendered": {
                      "text": "Allow creating worker threads when using the permission model.\n.\n.It Fl -completion-bash\nPrint source-able bash completion script for Node.js.\n.\n.It Fl C , Fl -conditions Ar string\nUse custom conditional exports conditions.\n",
                      "markdown": "`Allow creating worker threads when using the permission model.\n.\n.It Fl -completion-bash\nPrint source-able bash completion script for Node.js.\n.\n.It Fl C , Fl -conditions Ar string\nUse custom conditional exports conditions.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 31,
                  "endLine": 18,
                  "endColumn": 40,
                  "snippet": {
                    "text": ".\\\" Before making changes, please note the following:\n.\\\"\n.\\\" * In Roff, each new sentence should begin on a new line. This gives\n.\\\"   the Roff formatter better control over text-spacing, line-wrapping,\n.\\\"   and paragraph justification.\n.\\\"\n.\\\" * Do not leave blank lines in the markup. If whitespace is desired\n",
                    "rendered": {
                      "text": ".\\\" Before making changes, please note the following:\n.\\\"\n.\\\" * In Roff, each new sentence should begin on a new line. This gives\n.\\\"   the Roff formatter better control over text-spacing, line-wrapping,\n.\\\"   and paragraph justification.\n.\\\"\n.\\\" * Do not leave blank lines in the markup. If whitespace is desired\n",
                      "markdown": "`.\\\" Before making changes, please note the following:\n.\\\"\n.\\\" * In Roff, each new sentence should begin on a new line. This gives\n.\\\"   the Roff formatter better control over text-spacing, line-wrapping,\n.\\\"   and paragraph justification.\n.\\\"\n.\\\" * Do not leave blank lines in the markup. If whitespace is desired\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 737,
                  "startColumn": 7,
                  "endLine": 737,
                  "endColumn": 16,
                  "snippet": {
                    "text": ".Ar dir .\n.\n.It Ev OPENSSL_CONF Ar file\nLoad an OpenSSL configuration file on startup.\nAmong other uses, this can be used to enable FIPS-compliant crypto if Node.js is built with\n.Sy ./configure --openssl-fips .\n.Pp\n",
                    "rendered": {
                      "text": ".Ar dir .\n.\n.It Ev OPENSSL_CONF Ar file\nLoad an OpenSSL configuration file on startup.\nAmong other uses, this can be used to enable FIPS-compliant crypto if Node.js is built with\n.Sy ./configure --openssl-fips .\n.Pp\n",
                      "markdown": "`.Ar dir .\n.\n.It Ev OPENSSL_CONF Ar file\nLoad an OpenSSL configuration file on startup.\nAmong other uses, this can be used to enable FIPS-compliant crypto if Node.js is built with\n.Sy ./configure --openssl-fips .\n.Pp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 682,
                  "startColumn": 4,
                  "endLine": 682,
                  "endColumn": 12,
                  "snippet": {
                    "text": "which are interpreted as if they had been specified on the command line before the actual command (so they can be overridden).\nNode.js will exit with an error if an option that is not allowed in the environment is used, such as\n.Fl -print\nor a script file.\n.\n.It Ev NODE_PATH Ar directories...\nA colon-separated list of\n",
                    "rendered": {
                      "text": "which are interpreted as if they had been specified on the command line before the actual command (so they can be overridden).\nNode.js will exit with an error if an option that is not allowed in the environment is used, such as\n.Fl -print\nor a script file.\n.\n.It Ev NODE_PATH Ar directories...\nA colon-separated list of\n",
                      "markdown": "`which are interpreted as if they had been specified on the command line before the actual command (so they can be overridden).\nNode.js will exit with an error if an option that is not allowed in the environment is used, such as\n.Fl -print\nor a script file.\n.\n.It Ev NODE_PATH Ar directories...\nA colon-separated list of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 579,
                  "startColumn": 27,
                  "endLine": 579,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".\n.It Fl c , Fl -check\nCheck the script's syntax without executing it.\nExits with an error code if script is invalid.\n.\n.It Fl e , Fl -eval Ar string\nEvaluate\n",
                    "rendered": {
                      "text": ".\n.It Fl c , Fl -check\nCheck the script's syntax without executing it.\nExits with an error code if script is invalid.\n.\n.It Fl e , Fl -eval Ar string\nEvaluate\n",
                      "markdown": "`.\n.It Fl c , Fl -check\nCheck the script's syntax without executing it.\nExits with an error code if script is invalid.\n.\n.It Fl e , Fl -eval Ar string\nEvaluate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 549,
                  "startColumn": 62,
                  "endLine": 549,
                  "endColumn": 71,
                  "snippet": {
                    "text": ".Pp\nUsing OpenSSL store allows for external modifications of the store.\nFor most Linux and BSD distributions, this store is maintained by the distribution maintainers and system administrators.\nOpenSSL CA store location is dependent on configuration of the OpenSSL library but this can be altered at runtime using environment variables.\n.Pp\nSee\n.Ev SSL_CERT_DIR\n",
                    "rendered": {
                      "text": ".Pp\nUsing OpenSSL store allows for external modifications of the store.\nFor most Linux and BSD distributions, this store is maintained by the distribution maintainers and system administrators.\nOpenSSL CA store location is dependent on configuration of the OpenSSL library but this can be altered at runtime using environment variables.\n.Pp\nSee\n.Ev SSL_CERT_DIR\n",
                      "markdown": "`.Pp\nUsing OpenSSL store allows for external modifications of the store.\nFor most Linux and BSD distributions, this store is maintained by the distribution maintainers and system administrators.\nOpenSSL CA store location is dependent on configuration of the OpenSSL library but this can be altered at runtime using environment variables.\n.Pp\nSee\n.Ev SSL_CERT_DIR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 548,
                  "startColumn": 121,
                  "endLine": 549,
                  "endColumn": 8,
                  "snippet": {
                    "text": "It is identical on all supported platforms.\n.Pp\nUsing OpenSSL store allows for external modifications of the store.\nFor most Linux and BSD distributions, this store is maintained by the distribution maintainers and system administrators.\nOpenSSL CA store location is dependent on configuration of the OpenSSL library but this can be altered at runtime using environment variables.\n.Pp\nSee\n.Ev SSL_CERT_DIR\n",
                    "rendered": {
                      "text": "It is identical on all supported platforms.\n.Pp\nUsing OpenSSL store allows for external modifications of the store.\nFor most Linux and BSD distributions, this store is maintained by the distribution maintainers and system administrators.\nOpenSSL CA store location is dependent on configuration of the OpenSSL library but this can be altered at runtime using environment variables.\n.Pp\nSee\n.Ev SSL_CERT_DIR\n",
                      "markdown": "`It is identical on all supported platforms.\n.Pp\nUsing OpenSSL store allows for external modifications of the store.\nFor most Linux and BSD distributions, this store is maintained by the distribution maintainers and system administrators.\nOpenSSL CA store location is dependent on configuration of the OpenSSL library but this can be altered at runtime using environment variables.\n.Pp\nSee\n.Ev SSL_CERT_DIR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 547,
                  "startColumn": 5,
                  "endLine": 547,
                  "endColumn": 14,
                  "snippet": {
                    "text": "The bundled CA store, as supplied by Node.js, is a snapshot of Mozilla CA store that is fixed at release time.\nIt is identical on all supported platforms.\n.Pp\nUsing OpenSSL store allows for external modifications of the store.\nFor most Linux and BSD distributions, this store is maintained by the distribution maintainers and system administrators.\nOpenSSL CA store location is dependent on configuration of the OpenSSL library but this can be altered at runtime using environment variables.\n.Pp\n",
                    "rendered": {
                      "text": "The bundled CA store, as supplied by Node.js, is a snapshot of Mozilla CA store that is fixed at release time.\nIt is identical on all supported platforms.\n.Pp\nUsing OpenSSL store allows for external modifications of the store.\nFor most Linux and BSD distributions, this store is maintained by the distribution maintainers and system administrators.\nOpenSSL CA store location is dependent on configuration of the OpenSSL library but this can be altered at runtime using environment variables.\n.Pp\n",
                      "markdown": "`The bundled CA store, as supplied by Node.js, is a snapshot of Mozilla CA store that is fixed at release time.\nIt is identical on all supported platforms.\n.Pp\nUsing OpenSSL store allows for external modifications of the store.\nFor most Linux and BSD distributions, this store is maintained by the distribution maintainers and system administrators.\nOpenSSL CA store location is dependent on configuration of the OpenSSL library but this can be altered at runtime using environment variables.\n.Pp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 439,
                  "startColumn": 42,
                  "endLine": 439,
                  "endColumn": 47,
                  "snippet": {
                    "text": "The destination for the corresponding test reporter.\n.\n.It Fl -test-only\nConfigures the test runner to only execute top level tests that have the `only`\noption set.\n.\n.It Fl -test-shard\n",
                    "rendered": {
                      "text": "The destination for the corresponding test reporter.\n.\n.It Fl -test-only\nConfigures the test runner to only execute top level tests that have the `only`\noption set.\n.\n.It Fl -test-shard\n",
                      "markdown": "`The destination for the corresponding test reporter.\n.\n.It Fl -test-only\nConfigures the test runner to only execute top level tests that have the `only`\noption set.\n.\n.It Fl -test-shard\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 419,
                  "startColumn": 39,
                  "endLine": 419,
                  "endColumn": 48,
                  "snippet": {
                    "text": "the secure heap. The default is 0. The value must be a power of two.\n.\n.It Fl -secure-heap-min Ns = Ns Ar n\nSpecify the minimum allocation from the OpenSSL secure heap. The default is 2. The value must be a power of two.\n.\n.It Fl -test\nStarts the Node.js command line test runner.\n",
                    "rendered": {
                      "text": "the secure heap. The default is 0. The value must be a power of two.\n.\n.It Fl -secure-heap-min Ns = Ns Ar n\nSpecify the minimum allocation from the OpenSSL secure heap. The default is 2. The value must be a power of two.\n.\n.It Fl -test\nStarts the Node.js command line test runner.\n",
                      "markdown": "`the secure heap. The default is 0. The value must be a power of two.\n.\n.It Fl -secure-heap-min Ns = Ns Ar n\nSpecify the minimum allocation from the OpenSSL secure heap. The default is 2. The value must be a power of two.\n.\n.It Fl -test\nStarts the Node.js command line test runner.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 415,
                  "startColumn": 23,
                  "endLine": 415,
                  "endColumn": 32,
                  "snippet": {
                    "text": "stack in conjunction with native stack and other runtime environment data.\n.\n.It Fl -secure-heap Ns = Ns Ar n\nSpecify the size of the OpenSSL secure heap. Any value less than 2 disables\nthe secure heap. The default is 0. The value must be a power of two.\n.\n.It Fl -secure-heap-min Ns = Ns Ar n\n",
                    "rendered": {
                      "text": "stack in conjunction with native stack and other runtime environment data.\n.\n.It Fl -secure-heap Ns = Ns Ar n\nSpecify the size of the OpenSSL secure heap. Any value less than 2 disables\nthe secure heap. The default is 0. The value must be a power of two.\n.\n.It Fl -secure-heap-min Ns = Ns Ar n\n",
                      "markdown": "`stack in conjunction with native stack and other runtime environment data.\n.\n.It Fl -secure-heap Ns = Ns Ar n\nSpecify the size of the OpenSSL secure heap. Any value less than 2 disables\nthe secure heap. The default is 0. The value must be a power of two.\n.\n.It Fl -secure-heap-min Ns = Ns Ar n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 7,
                  "endLine": 342,
                  "endColumn": 16,
                  "snippet": {
                    "text": "usually only useful for developers debugging Node.js itself.\n.\n.It Fl -openssl-config Ns = Ns Ar file\nLoad an OpenSSL configuration file on startup.\nAmong other uses, this can be used to enable FIPS-compliant crypto if Node.js is built with\n.Sy ./configure --openssl-fips .\n.\n",
                    "rendered": {
                      "text": "usually only useful for developers debugging Node.js itself.\n.\n.It Fl -openssl-config Ns = Ns Ar file\nLoad an OpenSSL configuration file on startup.\nAmong other uses, this can be used to enable FIPS-compliant crypto if Node.js is built with\n.Sy ./configure --openssl-fips .\n.\n",
                      "markdown": "`usually only useful for developers debugging Node.js itself.\n.\n.It Fl -openssl-config Ns = Ns Ar file\nLoad an OpenSSL configuration file on startup.\nAmong other uses, this can be used to enable FIPS-compliant crypto if Node.js is built with\n.Sy ./configure --openssl-fips .\n.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 24,
                  "endLine": 219,
                  "endColumn": 32,
                  "snippet": {
                    "text": ".\n.It Fl -force-fips\nForce FIPS-compliant crypto on startup\n(Cannot be disabled from script code).\nSame requirements as\n.Fl -enable-fips .\n.\n",
                    "rendered": {
                      "text": ".\n.It Fl -force-fips\nForce FIPS-compliant crypto on startup\n(Cannot be disabled from script code).\nSame requirements as\n.Fl -enable-fips .\n.\n",
                      "markdown": "`.\n.It Fl -force-fips\nForce FIPS-compliant crypto on startup\n(Cannot be disabled from script code).\nSame requirements as\n.Fl -enable-fips .\n.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 33,
                  "endLine": 95,
                  "endColumn": 41,
                  "snippet": {
                    "text": "Allow creating worker threads when using the permission model.\n.\n.It Fl -completion-bash\nPrint source-able bash completion script for Node.js.\n.\n.It Fl C , Fl -conditions Ar string\nUse custom conditional exports conditions.\n",
                    "rendered": {
                      "text": "Allow creating worker threads when using the permission model.\n.\n.It Fl -completion-bash\nPrint source-able bash completion script for Node.js.\n.\n.It Fl C , Fl -conditions Ar string\nUse custom conditional exports conditions.\n",
                      "markdown": "`Allow creating worker threads when using the permission model.\n.\n.It Fl -completion-bash\nPrint source-able bash completion script for Node.js.\n.\n.It Fl C , Fl -conditions Ar string\nUse custom conditional exports conditions.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 17,
                  "endLine": 95,
                  "endColumn": 23,
                  "snippet": {
                    "text": "Allow creating worker threads when using the permission model.\n.\n.It Fl -completion-bash\nPrint source-able bash completion script for Node.js.\n.\n.It Fl C , Fl -conditions Ar string\nUse custom conditional exports conditions.\n",
                    "rendered": {
                      "text": "Allow creating worker threads when using the permission model.\n.\n.It Fl -completion-bash\nPrint source-able bash completion script for Node.js.\n.\n.It Fl C , Fl -conditions Ar string\nUse custom conditional exports conditions.\n",
                      "markdown": "`Allow creating worker threads when using the permission model.\n.\n.It Fl -completion-bash\nPrint source-able bash completion script for Node.js.\n.\n.It Fl C , Fl -conditions Ar string\nUse custom conditional exports conditions.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 35,
                  "endLine": 74,
                  "endColumn": 43,
                  "snippet": {
                    "text": "Pass the rest of the arguments to the script.\n.Pp\nIf no script filename or eval/print script is supplied prior to this, then\nthe next argument will be used as a script filename.\n.\n.It Fl -abort-on-uncaught-exception\nAborting instead of exiting causes a core file to be generated for analysis.\n",
                    "rendered": {
                      "text": "Pass the rest of the arguments to the script.\n.Pp\nIf no script filename or eval/print script is supplied prior to this, then\nthe next argument will be used as a script filename.\n.\n.It Fl -abort-on-uncaught-exception\nAborting instead of exiting causes a core file to be generated for analysis.\n",
                      "markdown": "`Pass the rest of the arguments to the script.\n.Pp\nIf no script filename or eval/print script is supplied prior to this, then\nthe next argument will be used as a script filename.\n.\n.It Fl -abort-on-uncaught-exception\nAborting instead of exiting causes a core file to be generated for analysis.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 35,
                  "endLine": 73,
                  "endColumn": 43,
                  "snippet": {
                    "text": "Indicate the end of command-line options.\nPass the rest of the arguments to the script.\n.Pp\nIf no script filename or eval/print script is supplied prior to this, then\nthe next argument will be used as a script filename.\n.\n.It Fl -abort-on-uncaught-exception\n",
                    "rendered": {
                      "text": "Indicate the end of command-line options.\nPass the rest of the arguments to the script.\n.Pp\nIf no script filename or eval/print script is supplied prior to this, then\nthe next argument will be used as a script filename.\n.\n.It Fl -abort-on-uncaught-exception\n",
                      "markdown": "`Indicate the end of command-line options.\nPass the rest of the arguments to the script.\n.Pp\nIf no script filename or eval/print script is supplied prior to this, then\nthe next argument will be used as a script filename.\n.\n.It Fl -abort-on-uncaught-exception\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 5,
                  "endLine": 73,
                  "endColumn": 13,
                  "snippet": {
                    "text": "Indicate the end of command-line options.\nPass the rest of the arguments to the script.\n.Pp\nIf no script filename or eval/print script is supplied prior to this, then\nthe next argument will be used as a script filename.\n.\n.It Fl -abort-on-uncaught-exception\n",
                    "rendered": {
                      "text": "Indicate the end of command-line options.\nPass the rest of the arguments to the script.\n.Pp\nIf no script filename or eval/print script is supplied prior to this, then\nthe next argument will be used as a script filename.\n.\n.It Fl -abort-on-uncaught-exception\n",
                      "markdown": "`Indicate the end of command-line options.\nPass the rest of the arguments to the script.\n.Pp\nIf no script filename or eval/print script is supplied prior to this, then\nthe next argument will be used as a script filename.\n.\n.It Fl -abort-on-uncaught-exception\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 12,
                  "endLine": 67,
                  "endColumn": 20,
                  "snippet": {
                    "text": ".Bl -tag -width 6n\n.It Sy -\nAlias for stdin, analogous to the use of - in other command-line utilities.\nThe executed script is read from stdin, and remaining arguments are passed to the script.\n.\n.It Fl -\nIndicate the end of command-line options.\n",
                    "rendered": {
                      "text": ".Bl -tag -width 6n\n.It Sy -\nAlias for stdin, analogous to the use of - in other command-line utilities.\nThe executed script is read from stdin, and remaining arguments are passed to the script.\n.\n.It Fl -\nIndicate the end of command-line options.\n",
                      "markdown": "`.Bl -tag -width 6n\n.It Sy -\nAlias for stdin, analogous to the use of - in other command-line utilities.\nThe executed script is read from stdin, and remaining arguments are passed to the script.\n.\n.It Fl -\nIndicate the end of command-line options.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 3,
                  "endLine": 52,
                  "snippet": {
                    "text": ".Op Fl e Ar string | Ar script.js | Fl | Ar <host>:<port>\n.Ar ...\n.\n.Nm node\n.Op Fl -v8-options\n.\n.\\\"======================================================================\n.Sh DESCRIPTION\n",
                    "rendered": {
                      "text": ".Op Fl e Ar string | Ar script.js | Fl | Ar <host>:<port>\n.Ar ...\n.\n.Nm node\n.Op Fl -v8-options\n.\n.\\\"======================================================================\n.Sh DESCRIPTION\n",
                      "markdown": "`.Op Fl e Ar string | Ar script.js | Fl | Ar <host>:<port>\n.Ar ...\n.\n.Nm node\n.Op Fl -v8-options\n.\n.\\\"======================================================================\n.Sh DESCRIPTION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 3,
                  "endLine": 47,
                  "snippet": {
                    "text": ".Op Fl -\n.Op Ar arguments ...\n.\n.Nm node\n.Cm inspect\n.Op Fl e Ar string | Ar script.js | Fl | Ar <host>:<port>\n.Ar ...\n.\n",
                    "rendered": {
                      "text": ".Op Fl -\n.Op Ar arguments ...\n.\n.Nm node\n.Cm inspect\n.Op Fl e Ar string | Ar script.js | Fl | Ar <host>:<port>\n.Ar ...\n.\n",
                      "markdown": "`.Op Fl -\n.Op Ar arguments ...\n.\n.Nm node\n.Cm inspect\n.Op Fl e Ar string | Ar script.js | Fl | Ar <host>:<port>\n.Ar ...\n.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 3,
                  "endLine": 40,
                  "snippet": {
                    "text": ".\n.\\\"======================================================================\n.Sh SYNOPSIS\n.Nm node\n.Op Ar options\n.Op Ar v8-options\n.Op Fl e Ar string | Ar script.js | Fl\n.Op Fl -\n",
                    "rendered": {
                      "text": ".\n.\\\"======================================================================\n.Sh SYNOPSIS\n.Nm node\n.Op Ar options\n.Op Ar v8-options\n.Op Fl e Ar string | Ar script.js | Fl\n.Op Fl -\n",
                      "markdown": "`.\n.\\\"======================================================================\n.Sh SYNOPSIS\n.Nm node\n.Op Ar options\n.Op Ar v8-options\n.Op Fl e Ar string | Ar script.js | Fl\n.Op Fl -\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 3,
                  "endLine": 35,
                  "snippet": {
                    "text": ".Dt NODE 1\n.\n.Sh NAME\n.Nm node\n.Nd server-side JavaScript runtime\n.\n.\\\"======================================================================\n.Sh SYNOPSIS\n",
                    "rendered": {
                      "text": ".Dt NODE 1\n.\n.Sh NAME\n.Nm node\n.Nd server-side JavaScript runtime\n.\n.\\\"======================================================================\n.Sh SYNOPSIS\n",
                      "markdown": "`.Dt NODE 1\n.\n.Sh NAME\n.Nm node\n.Nd server-side JavaScript runtime\n.\n.\\\"======================================================================\n.Sh SYNOPSIS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/man/man1/node.1"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 31,
                  "endColumn": 9,
                  "snippet": {
                    "text": ".\n.tr -\\-^\\(ha~\\(ti`\\(ga\n.Dd 2018\n.Dt NODE 1\n.\n.Sh NAME\n.Nm node\n",
                    "rendered": {
                      "text": ".\n.tr -\\-^\\(ha~\\(ti`\\(ga\n.Dd 2018\n.Dt NODE 1\n.\n.Sh NAME\n.Nm node\n",
                      "markdown": "`.\n.tr -\\-^\\(ha~\\(ti`\\(ga\n.Dd 2018\n.Dt NODE 1\n.\n.Sh NAME\n.Nm node\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/persistent.h"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 21,
                  "endLine": 332,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    const BasicPersistent<T1, PersistentWeaknessPolicy,\n                          PersistentLocationPolicy, PersistentCheckingPolicy>&\n        p) {\n  return m.Get() == p.Get();\n}\n\ntemplate <typename T1, typename MemberWriteBarrierPolicy,\n",
                    "rendered": {
                      "text": "    const BasicPersistent<T1, PersistentWeaknessPolicy,\n                          PersistentLocationPolicy, PersistentCheckingPolicy>&\n        p) {\n  return m.Get() == p.Get();\n}\n\ntemplate <typename T1, typename MemberWriteBarrierPolicy,\n",
                      "markdown": "`    const BasicPersistent<T1, PersistentWeaknessPolicy,\n                          PersistentLocationPolicy, PersistentCheckingPolicy>&\n        p) {\n  return m.Get() == p.Get();\n}\n\ntemplate <typename T1, typename MemberWriteBarrierPolicy,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/persistent.h"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 10,
                  "endLine": 332,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    const BasicPersistent<T1, PersistentWeaknessPolicy,\n                          PersistentLocationPolicy, PersistentCheckingPolicy>&\n        p) {\n  return m.Get() == p.Get();\n}\n\ntemplate <typename T1, typename MemberWriteBarrierPolicy,\n",
                    "rendered": {
                      "text": "    const BasicPersistent<T1, PersistentWeaknessPolicy,\n                          PersistentLocationPolicy, PersistentCheckingPolicy>&\n        p) {\n  return m.Get() == p.Get();\n}\n\ntemplate <typename T1, typename MemberWriteBarrierPolicy,\n",
                      "markdown": "`    const BasicPersistent<T1, PersistentWeaknessPolicy,\n                          PersistentLocationPolicy, PersistentCheckingPolicy>&\n        p) {\n  return m.Get() == p.Get();\n}\n\ntemplate <typename T1, typename MemberWriteBarrierPolicy,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/persistent.h"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 21,
                  "endLine": 304,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        p,\n    const BasicMember<T2, MemberWeaknessTag, MemberWriteBarrierPolicy,\n                      MemberCheckingPolicy, MemberStorageType>& m) {\n  return p.Get() == m.Get();\n}\n\ntemplate <typename T1, typename PersistentWeaknessPolicy,\n",
                    "rendered": {
                      "text": "        p,\n    const BasicMember<T2, MemberWeaknessTag, MemberWriteBarrierPolicy,\n                      MemberCheckingPolicy, MemberStorageType>& m) {\n  return p.Get() == m.Get();\n}\n\ntemplate <typename T1, typename PersistentWeaknessPolicy,\n",
                      "markdown": "`        p,\n    const BasicMember<T2, MemberWeaknessTag, MemberWriteBarrierPolicy,\n                      MemberCheckingPolicy, MemberStorageType>& m) {\n  return p.Get() == m.Get();\n}\n\ntemplate <typename T1, typename PersistentWeaknessPolicy,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/persistent.h"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 10,
                  "endLine": 304,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        p,\n    const BasicMember<T2, MemberWeaknessTag, MemberWriteBarrierPolicy,\n                      MemberCheckingPolicy, MemberStorageType>& m) {\n  return p.Get() == m.Get();\n}\n\ntemplate <typename T1, typename PersistentWeaknessPolicy,\n",
                    "rendered": {
                      "text": "        p,\n    const BasicMember<T2, MemberWeaknessTag, MemberWriteBarrierPolicy,\n                      MemberCheckingPolicy, MemberStorageType>& m) {\n  return p.Get() == m.Get();\n}\n\ntemplate <typename T1, typename PersistentWeaknessPolicy,\n",
                      "markdown": "`        p,\n    const BasicMember<T2, MemberWeaknessTag, MemberWriteBarrierPolicy,\n                      MemberCheckingPolicy, MemberStorageType>& m) {\n  return p.Get() == m.Get();\n}\n\ntemplate <typename T1, typename PersistentWeaknessPolicy,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/persistent.h"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 23,
                  "endLine": 280,
                  "endColumn": 28,
                  "snippet": {
                    "text": "                                      CheckingPolicy1>& p1,\n                const BasicPersistent<T2, WeaknessPolicy2, LocationPolicy2,\n                                      CheckingPolicy2>& p2) {\n  return p1.Get() == p2.Get();\n}\n\ntemplate <typename T1, typename WeaknessPolicy1, typename LocationPolicy1,\n",
                    "rendered": {
                      "text": "                                      CheckingPolicy1>& p1,\n                const BasicPersistent<T2, WeaknessPolicy2, LocationPolicy2,\n                                      CheckingPolicy2>& p2) {\n  return p1.Get() == p2.Get();\n}\n\ntemplate <typename T1, typename WeaknessPolicy1, typename LocationPolicy1,\n",
                      "markdown": "`                                      CheckingPolicy1>& p1,\n                const BasicPersistent<T2, WeaknessPolicy2, LocationPolicy2,\n                                      CheckingPolicy2>& p2) {\n  return p1.Get() == p2.Get();\n}\n\ntemplate <typename T1, typename WeaknessPolicy1, typename LocationPolicy1,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/persistent.h"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 11,
                  "endLine": 280,
                  "endColumn": 16,
                  "snippet": {
                    "text": "                                      CheckingPolicy1>& p1,\n                const BasicPersistent<T2, WeaknessPolicy2, LocationPolicy2,\n                                      CheckingPolicy2>& p2) {\n  return p1.Get() == p2.Get();\n}\n\ntemplate <typename T1, typename WeaknessPolicy1, typename LocationPolicy1,\n",
                    "rendered": {
                      "text": "                                      CheckingPolicy1>& p1,\n                const BasicPersistent<T2, WeaknessPolicy2, LocationPolicy2,\n                                      CheckingPolicy2>& p2) {\n  return p1.Get() == p2.Get();\n}\n\ntemplate <typename T1, typename WeaknessPolicy1, typename LocationPolicy1,\n",
                      "markdown": "`                                      CheckingPolicy1>& p1,\n                const BasicPersistent<T2, WeaknessPolicy2, LocationPolicy2,\n                                      CheckingPolicy2>& p2) {\n  return p1.Get() == p2.Get();\n}\n\ntemplate <typename T1, typename WeaknessPolicy1, typename LocationPolicy1,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/persistent.h"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 27,
                  "endLine": 166,
                  "endColumn": 32,
                  "snippet": {
                    "text": "      const internal::BasicMember<U, MemberBarrierPolicy, MemberWeaknessTag,\n                                  MemberCheckingPolicy, MemberStorageType>&\n          member) {\n    return operator=(member.Get());\n  }\n\n  BasicPersistent& operator=(T* other) {\n",
                    "rendered": {
                      "text": "      const internal::BasicMember<U, MemberBarrierPolicy, MemberWeaknessTag,\n                                  MemberCheckingPolicy, MemberStorageType>&\n          member) {\n    return operator=(member.Get());\n  }\n\n  BasicPersistent& operator=(T* other) {\n",
                      "markdown": "`      const internal::BasicMember<U, MemberBarrierPolicy, MemberWeaknessTag,\n                                  MemberCheckingPolicy, MemberStorageType>&\n          member) {\n    return operator=(member.Get());\n  }\n\n  BasicPersistent& operator=(T* other) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/persistent.h"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 26,
                  "endLine": 140,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  BasicPersistent& operator=(\n      const BasicPersistent<U, OtherWeaknessPolicy, OtherLocationPolicy,\n                            OtherCheckingPolicy>& other) {\n    return operator=(other.Get());\n  }\n\n  // Move assignment.\n",
                    "rendered": {
                      "text": "  BasicPersistent& operator=(\n      const BasicPersistent<U, OtherWeaknessPolicy, OtherLocationPolicy,\n                            OtherCheckingPolicy>& other) {\n    return operator=(other.Get());\n  }\n\n  // Move assignment.\n",
                      "markdown": "`  BasicPersistent& operator=(\n      const BasicPersistent<U, OtherWeaknessPolicy, OtherLocationPolicy,\n                            OtherCheckingPolicy>& other) {\n    return operator=(other.Get());\n  }\n\n  // Move assignment.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/persistent.h"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 26,
                  "endLine": 131,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n  // Copy assignment.\n  BasicPersistent& operator=(const BasicPersistent& other) {\n    return operator=(other.Get());\n  }\n\n  template <typename U, typename OtherWeaknessPolicy,\n",
                    "rendered": {
                      "text": "\n  // Copy assignment.\n  BasicPersistent& operator=(const BasicPersistent& other) {\n    return operator=(other.Get());\n  }\n\n  template <typename U, typename OtherWeaknessPolicy,\n",
                      "markdown": "`\n  // Copy assignment.\n  BasicPersistent& operator=(const BasicPersistent& other) {\n    return operator=(other.Get());\n  }\n\n  template <typename U, typename OtherWeaknessPolicy,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/persistent.h"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 30,
                  "endLine": 125,
                  "endColumn": 35,
                  "snippet": {
                    "text": "                      U, MemberBarrierPolicy, MemberWeaknessTag,\n                      MemberCheckingPolicy, MemberStorageType>& member,\n                  const SourceLocation& loc = SourceLocation::Current())\n      : BasicPersistent(member.Get(), loc) {}\n\n  ~BasicPersistent() { Clear(); }\n\n",
                    "rendered": {
                      "text": "                      U, MemberBarrierPolicy, MemberWeaknessTag,\n                      MemberCheckingPolicy, MemberStorageType>& member,\n                  const SourceLocation& loc = SourceLocation::Current())\n      : BasicPersistent(member.Get(), loc) {}\n\n  ~BasicPersistent() { Clear(); }\n\n",
                      "markdown": "`                      U, MemberBarrierPolicy, MemberWeaknessTag,\n                      MemberCheckingPolicy, MemberStorageType>& member,\n                  const SourceLocation& loc = SourceLocation::Current())\n      : BasicPersistent(member.Get(), loc) {}\n\n  ~BasicPersistent() { Clear(); }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/persistent.h"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 29,
                  "endLine": 100,
                  "endColumn": 34,
                  "snippet": {
                    "text": "      const BasicPersistent<U, OtherWeaknessPolicy, OtherLocationPolicy,\n                            OtherCheckingPolicy>& other,\n      const SourceLocation& loc = SourceLocation::Current())\n      : BasicPersistent(other.Get(), loc) {}\n\n  // Move ctor. The heterogeneous move ctor is not supported since e.g.\n  // persistent can't reuse persistent node from weak persistent.\n",
                    "rendered": {
                      "text": "      const BasicPersistent<U, OtherWeaknessPolicy, OtherLocationPolicy,\n                            OtherCheckingPolicy>& other,\n      const SourceLocation& loc = SourceLocation::Current())\n      : BasicPersistent(other.Get(), loc) {}\n\n  // Move ctor. The heterogeneous move ctor is not supported since e.g.\n  // persistent can't reuse persistent node from weak persistent.\n",
                      "markdown": "`      const BasicPersistent<U, OtherWeaknessPolicy, OtherLocationPolicy,\n                            OtherCheckingPolicy>& other,\n      const SourceLocation& loc = SourceLocation::Current())\n      : BasicPersistent(other.Get(), loc) {}\n\n  // Move ctor. The heterogeneous move ctor is not supported since e.g.\n  // persistent can't reuse persistent node from weak persistent.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/persistent.h"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 29,
                  "endLine": 89,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  // Copy ctor.\n  BasicPersistent(const BasicPersistent& other,\n                  const SourceLocation& loc = SourceLocation::Current())\n      : BasicPersistent(other.Get(), loc) {}\n\n  // Heterogeneous ctor.\n  template <typename U, typename OtherWeaknessPolicy,\n",
                    "rendered": {
                      "text": "  // Copy ctor.\n  BasicPersistent(const BasicPersistent& other,\n                  const SourceLocation& loc = SourceLocation::Current())\n      : BasicPersistent(other.Get(), loc) {}\n\n  // Heterogeneous ctor.\n  template <typename U, typename OtherWeaknessPolicy,\n",
                      "markdown": "`  // Copy ctor.\n  BasicPersistent(const BasicPersistent& other,\n                  const SourceLocation& loc = SourceLocation::Current())\n      : BasicPersistent(other.Get(), loc) {}\n\n  // Heterogeneous ctor.\n  template <typename U, typename OtherWeaknessPolicy,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/persistent.h"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 71,
                  "endLine": 235,
                  "snippet": {
                    "text": "\n  bool IsValid() const {\n    // Ideally, handling kSentinelPointer would be done by the embedder. On the\n    // other hand, having Persistent aware of it is beneficial since no node\n    // gets wasted.\n    return GetValue() != nullptr && GetValue() != kSentinelPointer;\n  }\n\n",
                    "rendered": {
                      "text": "\n  bool IsValid() const {\n    // Ideally, handling kSentinelPointer would be done by the embedder. On the\n    // other hand, having Persistent aware of it is beneficial since no node\n    // gets wasted.\n    return GetValue() != nullptr && GetValue() != kSentinelPointer;\n  }\n\n",
                      "markdown": "`\n  bool IsValid() const {\n    // Ideally, handling kSentinelPointer would be done by the embedder. On the\n    // other hand, having Persistent aware of it is beneficial since no node\n    // gets wasted.\n    return GetValue() != nullptr && GetValue() != kSentinelPointer;\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/persistent.h"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 38,
                  "endLine": 103,
                  "endColumn": 44,
                  "snippet": {
                    "text": "      : BasicPersistent(other.Get(), loc) {}\n\n  // Move ctor. The heterogeneous move ctor is not supported since e.g.\n  // persistent can't reuse persistent node from weak persistent.\n  BasicPersistent(\n      BasicPersistent&& other,\n      const SourceLocation& loc = SourceLocation::Current()) noexcept\n",
                    "rendered": {
                      "text": "      : BasicPersistent(other.Get(), loc) {}\n\n  // Move ctor. The heterogeneous move ctor is not supported since e.g.\n  // persistent can't reuse persistent node from weak persistent.\n  BasicPersistent(\n      BasicPersistent&& other,\n      const SourceLocation& loc = SourceLocation::Current()) noexcept\n",
                      "markdown": "`      : BasicPersistent(other.Get(), loc) {}\n\n  // Move ctor. The heterogeneous move ctor is not supported since e.g.\n  // persistent can't reuse persistent node from weak persistent.\n  BasicPersistent(\n      BasicPersistent&& other,\n      const SourceLocation& loc = SourceLocation::Current()) noexcept\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node_object_wrap.h"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 9,
                  "endLine": 29,
                  "endColumn": 15,
                  "snippet": {
                    "text": "#include <cassert>\n\n\nnamespace node {\n\nclass ObjectWrap {\n public:\n",
                    "rendered": {
                      "text": "#include <cassert>\n\n\nnamespace node {\n\nclass ObjectWrap {\n public:\n",
                      "markdown": "`#include <cassert>\n\n\nnamespace node {\n\nclass ObjectWrap {\n public:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node_buffer.h"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 9,
                  "endLine": 28,
                  "endColumn": 15,
                  "snippet": {
                    "text": "#include \"node.h\"\n#include \"v8.h\"\n\nnamespace node {\n\nnamespace Buffer {\n\n",
                    "rendered": {
                      "text": "#include \"node.h\"\n#include \"v8.h\"\n\nnamespace node {\n\nnamespace Buffer {\n\n",
                      "markdown": "`#include \"node.h\"\n#include \"v8.h\"\n\nnamespace node {\n\nnamespace Buffer {\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/liveness-broker.h"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 47,
                  "endLine": 65,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n  template <typename T>\n  bool IsHeapObjectAlive(const UntracedMember<T>& untraced_member) const {\n    return IsHeapObjectAlive<T>(untraced_member.Get());\n  }\n\n private:\n",
                    "rendered": {
                      "text": "\n  template <typename T>\n  bool IsHeapObjectAlive(const UntracedMember<T>& untraced_member) const {\n    return IsHeapObjectAlive<T>(untraced_member.Get());\n  }\n\n private:\n",
                      "markdown": "`\n  template <typename T>\n  bool IsHeapObjectAlive(const UntracedMember<T>& untraced_member) const {\n    return IsHeapObjectAlive<T>(untraced_member.Get());\n  }\n\n private:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/liveness-broker.h"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 43,
                  "endLine": 60,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n  template <typename T>\n  bool IsHeapObjectAlive(const WeakMember<T>& weak_member) const {\n    return IsHeapObjectAlive<T>(weak_member.Get());\n  }\n\n  template <typename T>\n",
                    "rendered": {
                      "text": "\n  template <typename T>\n  bool IsHeapObjectAlive(const WeakMember<T>& weak_member) const {\n    return IsHeapObjectAlive<T>(weak_member.Get());\n  }\n\n  template <typename T>\n",
                      "markdown": "`\n  template <typename T>\n  bool IsHeapObjectAlive(const WeakMember<T>& weak_member) const {\n    return IsHeapObjectAlive<T>(weak_member.Get());\n  }\n\n  template <typename T>\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/internal/persistent-node.h"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 9,
                  "endLine": 192,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n  V8_INLINE PersistentNode* AllocateNode(void* owner, TraceRootCallback trace) {\n    PersistentRegionLock::AssertLocked();\n    auto* node = TryAllocateNodeFromFreeList(owner, trace);\n    if (V8_LIKELY(node)) return node;\n\n    return RefillFreeListAndAllocateNode(owner, trace);\n",
                    "rendered": {
                      "text": "\n  V8_INLINE PersistentNode* AllocateNode(void* owner, TraceRootCallback trace) {\n    PersistentRegionLock::AssertLocked();\n    auto* node = TryAllocateNodeFromFreeList(owner, trace);\n    if (V8_LIKELY(node)) return node;\n\n    return RefillFreeListAndAllocateNode(owner, trace);\n",
                      "markdown": "`\n  V8_INLINE PersistentNode* AllocateNode(void* owner, TraceRootCallback trace) {\n    PersistentRegionLock::AssertLocked();\n    auto* node = TryAllocateNodeFromFreeList(owner, trace);\n    if (V8_LIKELY(node)) return node;\n\n    return RefillFreeListAndAllocateNode(owner, trace);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/internal/persistent-node.h"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 9,
                  "endLine": 148,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n  V8_INLINE PersistentNode* AllocateNode(void* owner, TraceRootCallback trace) {\n    CPPGC_DCHECK(IsCreationThread());\n    auto* node = TryAllocateNodeFromFreeList(owner, trace);\n    if (V8_LIKELY(node)) return node;\n\n    // Slow path allocation allows for checking thread correspondence.\n",
                    "rendered": {
                      "text": "\n  V8_INLINE PersistentNode* AllocateNode(void* owner, TraceRootCallback trace) {\n    CPPGC_DCHECK(IsCreationThread());\n    auto* node = TryAllocateNodeFromFreeList(owner, trace);\n    if (V8_LIKELY(node)) return node;\n\n    // Slow path allocation allows for checking thread correspondence.\n",
                      "markdown": "`\n  V8_INLINE PersistentNode* AllocateNode(void* owner, TraceRootCallback trace) {\n    CPPGC_DCHECK(IsCreationThread());\n    auto* node = TryAllocateNodeFromFreeList(owner, trace);\n    if (V8_LIKELY(node)) return node;\n\n    // Slow path allocation allows for checking thread correspondence.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/internal/persistent-node.h"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 5,
                  "endLine": 100,
                  "endColumn": 11,
                  "snippet": {
                    "text": "                                              TraceRootCallback trace) {\n    PersistentNode* node = nullptr;\n    if (V8_LIKELY(free_list_head_)) {\n      node = free_list_head_;\n      free_list_head_ = free_list_head_->FreeListNext();\n      CPPGC_DCHECK(!node->IsUsed());\n      node->InitializeAsUsedNode(owner, trace);\n",
                    "rendered": {
                      "text": "                                              TraceRootCallback trace) {\n    PersistentNode* node = nullptr;\n    if (V8_LIKELY(free_list_head_)) {\n      node = free_list_head_;\n      free_list_head_ = free_list_head_->FreeListNext();\n      CPPGC_DCHECK(!node->IsUsed());\n      node->InitializeAsUsedNode(owner, trace);\n",
                      "markdown": "`                                              TraceRootCallback trace) {\n    PersistentNode* node = nullptr;\n    if (V8_LIKELY(free_list_head_)) {\n      node = free_list_head_;\n      free_list_head_ = free_list_head_->FreeListNext();\n      CPPGC_DCHECK(!node->IsUsed());\n      node->InitializeAsUsedNode(owner, trace);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/internal/persistent-node.h"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 19,
                  "endLine": 98,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n  PersistentNode* TryAllocateNodeFromFreeList(void* owner,\n                                              TraceRootCallback trace) {\n    PersistentNode* node = nullptr;\n    if (V8_LIKELY(free_list_head_)) {\n      node = free_list_head_;\n      free_list_head_ = free_list_head_->FreeListNext();\n",
                    "rendered": {
                      "text": "\n  PersistentNode* TryAllocateNodeFromFreeList(void* owner,\n                                              TraceRootCallback trace) {\n    PersistentNode* node = nullptr;\n    if (V8_LIKELY(free_list_head_)) {\n      node = free_list_head_;\n      free_list_head_ = free_list_head_->FreeListNext();\n",
                      "markdown": "`\n  PersistentNode* TryAllocateNodeFromFreeList(void* owner,\n                                              TraceRootCallback trace) {\n    PersistentNode* node = nullptr;\n    if (V8_LIKELY(free_list_head_)) {\n      node = free_list_head_;\n      free_list_head_ = free_list_head_->FreeListNext();\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/common.gypi"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 49,
                  "endLine": 63,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    # https://github.com/nodejs/node/pull/22920/files#r222779926\n    'v8_enable_handle_zapping': 0,\n\n    # Disable pointer compression. Can be enabled at build time via configure\n    # options but default values are required here as this file is also used by\n    # node-gyp to build addons.\n    'v8_enable_pointer_compression%': 0,\n",
                    "rendered": {
                      "text": "    # https://github.com/nodejs/node/pull/22920/files#r222779926\n    'v8_enable_handle_zapping': 0,\n\n    # Disable pointer compression. Can be enabled at build time via configure\n    # options but default values are required here as this file is also used by\n    # node-gyp to build addons.\n    'v8_enable_pointer_compression%': 0,\n",
                      "markdown": "`    # https://github.com/nodejs/node/pull/22920/files#r222779926\n    'v8_enable_handle_zapping': 0,\n\n    # Disable pointer compression. Can be enabled at build time via configure\n    # options but default values are required here as this file is also used by\n    # node-gyp to build addons.\n    'v8_enable_pointer_compression%': 0,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/common.gypi"
                },
                "region": {
                  "startLine": 634,
                  "startColumn": 50,
                  "endLine": 634,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        ],\n      }],\n      ['node_shared_openssl!=\"true\"', {\n        # `OPENSSL_THREADS` is defined via GYP for openSSL for all architectures.\n        'defines': [\n          'OPENSSL_THREADS',\n        ],\n",
                    "rendered": {
                      "text": "        ],\n      }],\n      ['node_shared_openssl!=\"true\"', {\n        # `OPENSSL_THREADS` is defined via GYP for openSSL for all architectures.\n        'defines': [\n          'OPENSSL_THREADS',\n        ],\n",
                      "markdown": "`        ],\n      }],\n      ['node_shared_openssl!=\"true\"', {\n        # `OPENSSL_THREADS` is defined via GYP for openSSL for all architectures.\n        'defines': [\n          'OPENSSL_THREADS',\n        ],\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/common.gypi"
                },
                "region": {
                  "startLine": 627,
                  "startColumn": 24,
                  "endLine": 627,
                  "endColumn": 30,
                  "snippet": {
                    "text": "      ['node_shared_openssl!=\"true\" and node_shared!=\"true\"', {\n        'defines': [\n          # `OPENSSL_NO_PINSHARED` prevents openssl from dload\n          #      current node executable,\n          #      see https://github.com/nodejs/node/pull/21848\n          #      or https://github.com/nodejs/node/issues/27925\n          'OPENSSL_NO_PINSHARED'\n",
                    "rendered": {
                      "text": "      ['node_shared_openssl!=\"true\" and node_shared!=\"true\"', {\n        'defines': [\n          # `OPENSSL_NO_PINSHARED` prevents openssl from dload\n          #      current node executable,\n          #      see https://github.com/nodejs/node/pull/21848\n          #      or https://github.com/nodejs/node/issues/27925\n          'OPENSSL_NO_PINSHARED'\n",
                      "markdown": "`      ['node_shared_openssl!=\"true\" and node_shared!=\"true\"', {\n        'defines': [\n          # `OPENSSL_NO_PINSHARED` prevents openssl from dload\n          #      current node executable,\n          #      see https://github.com/nodejs/node/pull/21848\n          #      or https://github.com/nodejs/node/issues/27925\n          'OPENSSL_NO_PINSHARED'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/common.gypi"
                },
                "region": {
                  "startLine": 626,
                  "startColumn": 43,
                  "endLine": 626,
                  "endColumn": 52,
                  "snippet": {
                    "text": "      #      atexit cleanup does not apply\n      ['node_shared_openssl!=\"true\" and node_shared!=\"true\"', {\n        'defines': [\n          # `OPENSSL_NO_PINSHARED` prevents openssl from dload\n          #      current node executable,\n          #      see https://github.com/nodejs/node/pull/21848\n          #      or https://github.com/nodejs/node/issues/27925\n",
                    "rendered": {
                      "text": "      #      atexit cleanup does not apply\n      ['node_shared_openssl!=\"true\" and node_shared!=\"true\"', {\n        'defines': [\n          # `OPENSSL_NO_PINSHARED` prevents openssl from dload\n          #      current node executable,\n          #      see https://github.com/nodejs/node/pull/21848\n          #      or https://github.com/nodejs/node/issues/27925\n",
                      "markdown": "`      #      atexit cleanup does not apply\n      ['node_shared_openssl!=\"true\" and node_shared!=\"true\"', {\n        'defines': [\n          # `OPENSSL_NO_PINSHARED` prevents openssl from dload\n          #      current node executable,\n          #      see https://github.com/nodejs/node/pull/21848\n          #      or https://github.com/nodejs/node/issues/27925\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/common.gypi"
                },
                "region": {
                  "startLine": 622,
                  "startColumn": 16,
                  "endLine": 622,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        ],\n      }],\n      # if node is built as an executable,\n      #      the openssl mechanism for keeping itself \"dload\"-ed to ensure proper\n      #      atexit cleanup does not apply\n      ['node_shared_openssl!=\"true\" and node_shared!=\"true\"', {\n        'defines': [\n",
                    "rendered": {
                      "text": "        ],\n      }],\n      # if node is built as an executable,\n      #      the openssl mechanism for keeping itself \"dload\"-ed to ensure proper\n      #      atexit cleanup does not apply\n      ['node_shared_openssl!=\"true\" and node_shared!=\"true\"', {\n        'defines': [\n",
                      "markdown": "`        ],\n      }],\n      # if node is built as an executable,\n      #      the openssl mechanism for keeping itself \"dload\"-ed to ensure proper\n      #      atexit cleanup does not apply\n      ['node_shared_openssl!=\"true\" and node_shared!=\"true\"', {\n        'defines': [\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/common.gypi"
                },
                "region": {
                  "startLine": 621,
                  "startColumn": 10,
                  "endLine": 621,
                  "endColumn": 16,
                  "snippet": {
                    "text": "          '-Wl,--export-dynamic',\n        ],\n      }],\n      # if node is built as an executable,\n      #      the openssl mechanism for keeping itself \"dload\"-ed to ensure proper\n      #      atexit cleanup does not apply\n      ['node_shared_openssl!=\"true\" and node_shared!=\"true\"', {\n",
                    "rendered": {
                      "text": "          '-Wl,--export-dynamic',\n        ],\n      }],\n      # if node is built as an executable,\n      #      the openssl mechanism for keeping itself \"dload\"-ed to ensure proper\n      #      atexit cleanup does not apply\n      ['node_shared_openssl!=\"true\" and node_shared!=\"true\"', {\n",
                      "markdown": "`          '-Wl,--export-dynamic',\n        ],\n      }],\n      # if node is built as an executable,\n      #      the openssl mechanism for keeping itself \"dload\"-ed to ensure proper\n      #      atexit cleanup does not apply\n      ['node_shared_openssl!=\"true\" and node_shared!=\"true\"', {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/common.gypi"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 58,
                  "endLine": 63,
                  "endColumn": 64,
                  "snippet": {
                    "text": "    # https://github.com/nodejs/node/pull/22920/files#r222779926\n    'v8_enable_handle_zapping': 0,\n\n    # Disable pointer compression. Can be enabled at build time via configure\n    # options but default values are required here as this file is also used by\n    # node-gyp to build addons.\n    'v8_enable_pointer_compression%': 0,\n",
                    "rendered": {
                      "text": "    # https://github.com/nodejs/node/pull/22920/files#r222779926\n    'v8_enable_handle_zapping': 0,\n\n    # Disable pointer compression. Can be enabled at build time via configure\n    # options but default values are required here as this file is also used by\n    # node-gyp to build addons.\n    'v8_enable_pointer_compression%': 0,\n",
                      "markdown": "`    # https://github.com/nodejs/node/pull/22920/files#r222779926\n    'v8_enable_handle_zapping': 0,\n\n    # Disable pointer compression. Can be enabled at build time via configure\n    # options but default values are required here as this file is also used by\n    # node-gyp to build addons.\n    'v8_enable_pointer_compression%': 0,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/v8-function-callback.h"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 58,
                  "endLine": 216,
                  "endColumn": 63,
                  "snippet": {
                    "text": "   *                                           .ToLocalChecked())\n   *      .FromJust();\n   *\n   *  CompileRun(\"obj.a = 'obj'; var r = {a: 'r'}; Reflect.get(obj, 'x', r)\");\n   * \\endcode\n   */\n  V8_INLINE Local<Object> This() const;\n",
                    "rendered": {
                      "text": "   *                                           .ToLocalChecked())\n   *      .FromJust();\n   *\n   *  CompileRun(\"obj.a = 'obj'; var r = {a: 'r'}; Reflect.get(obj, 'x', r)\");\n   * \\endcode\n   */\n  V8_INLINE Local<Object> This() const;\n",
                      "markdown": "`   *                                           .ToLocalChecked())\n   *      .FromJust();\n   *\n   *  CompileRun(\"obj.a = 'obj'; var r = {a: 'r'}; Reflect.get(obj, 'x', r)\");\n   * \\endcode\n   */\n  V8_INLINE Local<Object> This() const;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/v8-function-callback.h"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 16,
                  "endLine": 210,
                  "endColumn": 58,
                  "snippet": {
                    "text": "   *      v8::NamedPropertyHandlerConfiguration(GetterCallback));\n   *  LocalContext env;\n   *  env->Global()\n   *      ->Set(env.local(), v8_str(\"obj\"), templ->GetFunction(env.local())\n   *                                           .ToLocalChecked()\n   *                                           ->NewInstance(env.local())\n   *                                           .ToLocalChecked())\n",
                    "rendered": {
                      "text": "   *      v8::NamedPropertyHandlerConfiguration(GetterCallback));\n   *  LocalContext env;\n   *  env->Global()\n   *      ->Set(env.local(), v8_str(\"obj\"), templ->GetFunction(env.local())\n   *                                           .ToLocalChecked()\n   *                                           ->NewInstance(env.local())\n   *                                           .ToLocalChecked())\n",
                      "markdown": "`   *      v8::NamedPropertyHandlerConfiguration(GetterCallback));\n   *  LocalContext env;\n   *  env->Global()\n   *      ->Set(env.local(), v8_str(\"obj\"), templ->GetFunction(env.local())\n   *                                           .ToLocalChecked()\n   *                                           ->NewInstance(env.local())\n   *                                           .ToLocalChecked())\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/cross-thread-persistent.h"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 27,
                  "endLine": 240,
                  "endColumn": 32,
                  "snippet": {
                    "text": "      internal::BasicMember<U, MemberBarrierPolicy, MemberWeaknessTag,\n                            MemberCheckingPolicy, MemberStorageType>\n          member) {\n    return operator=(member.Get());\n  }\n\n  /**\n",
                    "rendered": {
                      "text": "      internal::BasicMember<U, MemberBarrierPolicy, MemberWeaknessTag,\n                            MemberCheckingPolicy, MemberStorageType>\n          member) {\n    return operator=(member.Get());\n  }\n\n  /**\n",
                      "markdown": "`      internal::BasicMember<U, MemberBarrierPolicy, MemberWeaknessTag,\n                            MemberCheckingPolicy, MemberStorageType>\n          member) {\n    return operator=(member.Get());\n  }\n\n  /**\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/cross-thread-persistent.h"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 27,
                  "endLine": 203,
                  "endColumn": 32,
                  "snippet": {
                    "text": "                                       OtherLocationPolicy,\n                                       OtherCheckingPolicy>& other) {\n    PersistentRegionLock guard;\n    AssignSafe(guard, other.Get());\n    return *this;\n  }\n\n",
                    "rendered": {
                      "text": "                                       OtherLocationPolicy,\n                                       OtherCheckingPolicy>& other) {\n    PersistentRegionLock guard;\n    AssignSafe(guard, other.Get());\n    return *this;\n  }\n\n",
                      "markdown": "`                                       OtherLocationPolicy,\n                                       OtherCheckingPolicy>& other) {\n    PersistentRegionLock guard;\n    AssignSafe(guard, other.Get());\n    return *this;\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/cross-thread-persistent.h"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 27,
                  "endLine": 191,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  BasicCrossThreadPersistent& operator=(\n      const BasicCrossThreadPersistent& other) {\n    PersistentRegionLock guard;\n    AssignSafe(guard, other.Get());\n    return *this;\n  }\n\n",
                    "rendered": {
                      "text": "  BasicCrossThreadPersistent& operator=(\n      const BasicCrossThreadPersistent& other) {\n    PersistentRegionLock guard;\n    AssignSafe(guard, other.Get());\n    return *this;\n  }\n\n",
                      "markdown": "`  BasicCrossThreadPersistent& operator=(\n      const BasicCrossThreadPersistent& other) {\n    PersistentRegionLock guard;\n    AssignSafe(guard, other.Get());\n    return *this;\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/cross-thread-persistent.h"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 41,
                  "endLine": 158,
                  "endColumn": 46,
                  "snippet": {
                    "text": "                            MemberCheckingPolicy, MemberStorageType>\n          member,\n      const SourceLocation& loc = SourceLocation::Current())\n      : BasicCrossThreadPersistent(member.Get(), loc) {}\n\n  BasicCrossThreadPersistent(\n      const BasicCrossThreadPersistent& other,\n",
                    "rendered": {
                      "text": "                            MemberCheckingPolicy, MemberStorageType>\n          member,\n      const SourceLocation& loc = SourceLocation::Current())\n      : BasicCrossThreadPersistent(member.Get(), loc) {}\n\n  BasicCrossThreadPersistent(\n      const BasicCrossThreadPersistent& other,\n",
                      "markdown": "`                            MemberCheckingPolicy, MemberStorageType>\n          member,\n      const SourceLocation& loc = SourceLocation::Current())\n      : BasicCrossThreadPersistent(member.Get(), loc) {}\n\n  BasicCrossThreadPersistent(\n      const BasicCrossThreadPersistent& other,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/lldb_commands.py"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 5,
                  "endLine": 195,
                  "endColumn": 10,
                  "snippet": {
                    "text": "def __lldb_init_module(debugger, dict):\n  setup_source_map_for_relative_paths(debugger)\n  debugger.HandleCommand('settings set target.x86-disassembly-flavor intel')\n  for cmd in V8_LLDB_COMMANDS:\n    debugger.HandleCommand(\n      'command script add -f lldb_commands.{} {}'.format(cmd, cmd))\n",
                    "rendered": {
                      "text": "def __lldb_init_module(debugger, dict):\n  setup_source_map_for_relative_paths(debugger)\n  debugger.HandleCommand('settings set target.x86-disassembly-flavor intel')\n  for cmd in V8_LLDB_COMMANDS:\n    debugger.HandleCommand(\n      'command script add -f lldb_commands.{} {}'.format(cmd, cmd))\n",
                      "markdown": "`def __lldb_init_module(debugger, dict):\n  setup_source_map_for_relative_paths(debugger)\n  debugger.HandleCommand('settings set target.x86-disassembly-flavor intel')\n  for cmd in V8_LLDB_COMMANDS:\n    debugger.HandleCommand(\n      'command script add -f lldb_commands.{} {}'.format(cmd, cmd))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/lldb_commands.py"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 26,
                  "endLine": 114,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n@lldbCommand\ndef jco(debugger, param, *args):\n  \"\"\"Print the code object at the given pc (default: current pc)\"\"\"\n  if not param:\n    param = str(current_frame(debugger).FindRegister(\"pc\").value)\n  ptr_arg_cmd(debugger, 'jco', param, \"_v8_internal_Print_Code({})\")\n",
                    "rendered": {
                      "text": "\n@lldbCommand\ndef jco(debugger, param, *args):\n  \"\"\"Print the code object at the given pc (default: current pc)\"\"\"\n  if not param:\n    param = str(current_frame(debugger).FindRegister(\"pc\").value)\n  ptr_arg_cmd(debugger, 'jco', param, \"_v8_internal_Print_Code({})\")\n",
                      "markdown": "`\n@lldbCommand\ndef jco(debugger, param, *args):\n  \"\"\"Print the code object at the given pc (default: current pc)\"\"\"\n  if not param:\n    param = str(current_frame(debugger).FindRegister(\"pc\").value)\n  ptr_arg_cmd(debugger, 'jco', param, \"_v8_internal_Print_Code({})\")\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/lldb_commands.py"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 14,
                  "endLine": 197,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  debugger.HandleCommand('settings set target.x86-disassembly-flavor intel')\n  for cmd in V8_LLDB_COMMANDS:\n    debugger.HandleCommand(\n      'command script add -f lldb_commands.{} {}'.format(cmd, cmd))\n",
                    "rendered": {
                      "text": "  debugger.HandleCommand('settings set target.x86-disassembly-flavor intel')\n  for cmd in V8_LLDB_COMMANDS:\n    debugger.HandleCommand(\n      'command script add -f lldb_commands.{} {}'.format(cmd, cmd))\n",
                      "markdown": "`  debugger.HandleCommand('settings set target.x86-disassembly-flavor intel')\n  for cmd in V8_LLDB_COMMANDS:\n    debugger.HandleCommand(\n      'command script add -f lldb_commands.{} {}'.format(cmd, cmd))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/lldb_commands.py"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 63,
                  "endLine": 183,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\ndef setup_source_map_for_relative_paths(debugger):\n  # Copied from Chromium's tools/lldb/lldbinit.py.\n  # When relative paths are used for debug symbols, lldb cannot find source\n  # files. Set up a source map to point to V8's root.\n  this_dir = os.path.dirname(os.path.abspath(__file__))\n  source_dir = os.path.join(this_dir, os.pardir)\n",
                    "rendered": {
                      "text": "\ndef setup_source_map_for_relative_paths(debugger):\n  # Copied from Chromium's tools/lldb/lldbinit.py.\n  # When relative paths are used for debug symbols, lldb cannot find source\n  # files. Set up a source map to point to V8's root.\n  this_dir = os.path.dirname(os.path.abspath(__file__))\n  source_dir = os.path.join(this_dir, os.pardir)\n",
                      "markdown": "`\ndef setup_source_map_for_relative_paths(debugger):\n  # Copied from Chromium's tools/lldb/lldbinit.py.\n  # When relative paths are used for debug symbols, lldb cannot find source\n  # files. Set up a source map to point to V8's root.\n  this_dir = os.path.dirname(os.path.abspath(__file__))\n  source_dir = os.path.join(this_dir, os.pardir)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/lldb_commands.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 9,
                  "endLine": 6,
                  "endColumn": 17,
                  "snippet": {
                    "text": "# found in the LICENSE file.\n\n# Load this file by adding this to your ~/.lldbinit:\n# command script import <this_dir>/lldb_commands.py\n\n# for py2/py3 compatibility\nfrom __future__ import print_function\n",
                    "rendered": {
                      "text": "# found in the LICENSE file.\n\n# Load this file by adding this to your ~/.lldbinit:\n# command script import <this_dir>/lldb_commands.py\n\n# for py2/py3 compatibility\nfrom __future__ import print_function\n",
                      "markdown": "`# found in the LICENSE file.\n\n# Load this file by adding this to your ~/.lldbinit:\n# command script import <this_dir>/lldb_commands.py\n\n# for py2/py3 compatibility\nfrom __future__ import print_function\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/gdbinit"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 47,
                  "endLine": 228,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n# Install a handler whenever the debugger stops due to a signal. It walks up the\n# stack looking for V8_Dcheck / V8_Fatal / OS::DebugBreak frame and moves the\n# frame to the one above it so it's immediately at the line of code that\n# triggered the stop condition.\npython\ndef v8_stop_handler(event):\n",
                    "rendered": {
                      "text": "\n# Install a handler whenever the debugger stops due to a signal. It walks up the\n# stack looking for V8_Dcheck / V8_Fatal / OS::DebugBreak frame and moves the\n# frame to the one above it so it's immediately at the line of code that\n# triggered the stop condition.\npython\ndef v8_stop_handler(event):\n",
                      "markdown": "`\n# Install a handler whenever the debugger stops due to a signal. It walks up the\n# stack looking for V8_Dcheck / V8_Fatal / OS::DebugBreak frame and moves the\n# frame to the one above it so it's immediately at the line of code that\n# triggered the stop condition.\npython\ndef v8_stop_handler(event):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/gdbinit"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 61,
                  "endLine": 161,
                  "endColumn": 65,
                  "snippet": {
                    "text": "define bta\npython\nimport re\nframe_re = re.compile(\"^#(\\d+)\\s*(?:0x[a-f\\d]+ in )?(.+) \\(.+ at (.+)\")\nassert_re = re.compile(\"^\\s*(\\S+) = .+<v8::internal::Per\\w+AssertScope<v8::internal::(\\S*), (false|true)>\")\nbtl = gdb.execute(\"backtrace full\", to_string = True).splitlines()\nfor l in btl:\n",
                    "rendered": {
                      "text": "define bta\npython\nimport re\nframe_re = re.compile(\"^#(\\d+)\\s*(?:0x[a-f\\d]+ in )?(.+) \\(.+ at (.+)\")\nassert_re = re.compile(\"^\\s*(\\S+) = .+<v8::internal::Per\\w+AssertScope<v8::internal::(\\S*), (false|true)>\")\nbtl = gdb.execute(\"backtrace full\", to_string = True).splitlines()\nfor l in btl:\n",
                      "markdown": "`define bta\npython\nimport re\nframe_re = re.compile(\"^#(\\d+)\\s*(?:0x[a-f\\d]+ in )?(.+) \\(.+ at (.+)\")\nassert_re = re.compile(\"^\\s*(\\S+) = .+<v8::internal::Per\\w+AssertScope<v8::internal::(\\S*), (false|true)>\")\nbtl = gdb.execute(\"backtrace full\", to_string = True).splitlines()\nfor l in btl:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/gdbinit"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 3,
                  "endLine": 285,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\ndef add_debug_file_directory(dir):\n  # gdb has no function to add debug-file-directory, simulates that by using\n  # `show debug-file-directory` and `set debug-file-directory <directories>`.\n  current_dirs = get_current_debug_file_directories()\n  current_dirs.add(dir)\n",
                    "rendered": {
                      "text": "\n\ndef add_debug_file_directory(dir):\n  # gdb has no function to add debug-file-directory, simulates that by using\n  # `show debug-file-directory` and `set debug-file-directory <directories>`.\n  current_dirs = get_current_debug_file_directories()\n  current_dirs.add(dir)\n",
                      "markdown": "`\n\ndef add_debug_file_directory(dir):\n  # gdb has no function to add debug-file-directory, simulates that by using\n  # `show debug-file-directory` and `set debug-file-directory <directories>`.\n  current_dirs = get_current_debug_file_directories()\n  current_dirs.add(dir)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/gdbinit"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 72,
                  "endLine": 241,
                  "snippet": {
                    "text": "  # and otherwise stack overflows can be very slow.\n  while frame is not None and count < 10:\n    count += 1\n    # If we are in a frame created by gdb (e.g. for `(gdb) call foo()`), gdb\n    # emits a dummy frame between its stack and the program's stack. Abort the\n    # walk if we see this frame.\n    if frame.type() == gdb.DUMMY_FRAME: break\n\n",
                    "rendered": {
                      "text": "  # and otherwise stack overflows can be very slow.\n  while frame is not None and count < 10:\n    count += 1\n    # If we are in a frame created by gdb (e.g. for `(gdb) call foo()`), gdb\n    # emits a dummy frame between its stack and the program's stack. Abort the\n    # walk if we see this frame.\n    if frame.type() == gdb.DUMMY_FRAME: break\n\n",
                      "markdown": "`  # and otherwise stack overflows can be very slow.\n  while frame is not None and count < 10:\n    count += 1\n    # If we are in a frame created by gdb (e.g. for `(gdb) call foo()`), gdb\n    # emits a dummy frame between its stack and the program's stack. Abort the\n    # walk if we see this frame.\n    if frame.type() == gdb.DUMMY_FRAME: break\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/gdbinit"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 37,
                  "endLine": 240,
                  "endColumn": 42,
                  "snippet": {
                    "text": "  # and otherwise stack overflows can be very slow.\n  while frame is not None and count < 10:\n    count += 1\n    # If we are in a frame created by gdb (e.g. for `(gdb) call foo()`), gdb\n    # emits a dummy frame between its stack and the program's stack. Abort the\n    # walk if we see this frame.\n    if frame.type() == gdb.DUMMY_FRAME: break\n",
                    "rendered": {
                      "text": "  # and otherwise stack overflows can be very slow.\n  while frame is not None and count < 10:\n    count += 1\n    # If we are in a frame created by gdb (e.g. for `(gdb) call foo()`), gdb\n    # emits a dummy frame between its stack and the program's stack. Abort the\n    # walk if we see this frame.\n    if frame.type() == gdb.DUMMY_FRAME: break\n",
                      "markdown": "`  # and otherwise stack overflows can be very slow.\n  while frame is not None and count < 10:\n    count += 1\n    # If we are in a frame created by gdb (e.g. for `(gdb) call foo()`), gdb\n    # emits a dummy frame between its stack and the program's stack. Abort the\n    # walk if we see this frame.\n    if frame.type() == gdb.DUMMY_FRAME: break\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/gdbinit"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 66,
                  "endLine": 236,
                  "endColumn": 71,
                  "snippet": {
                    "text": "  select_frame = None\n  message = None\n  count = 0\n  # Limit stack scanning since the frames we look for are near the top anyway,\n  # and otherwise stack overflows can be very slow.\n  while frame is not None and count < 10:\n    count += 1\n",
                    "rendered": {
                      "text": "  select_frame = None\n  message = None\n  count = 0\n  # Limit stack scanning since the frames we look for are near the top anyway,\n  # and otherwise stack overflows can be very slow.\n  while frame is not None and count < 10:\n    count += 1\n",
                      "markdown": "`  select_frame = None\n  message = None\n  count = 0\n  # Limit stack scanning since the frames we look for are near the top anyway,\n  # and otherwise stack overflows can be very slow.\n  while frame is not None and count < 10:\n    count += 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/gdbinit"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 18,
                  "endLine": 205,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  printf \"# Searching for %p in code_space ===============================\\n\", $arg0\n  space_find $heap->code_space() $arg0\nend\ndocument heap_find\nFind the location of a given address in V8 pages.\nUsage: heap_find address\nend\n\n",
                    "rendered": {
                      "text": "  printf \"# Searching for %p in code_space ===============================\\n\", $arg0\n  space_find $heap->code_space() $arg0\nend\ndocument heap_find\nFind the location of a given address in V8 pages.\nUsage: heap_find address\nend\n\n",
                      "markdown": "`  printf \"# Searching for %p in code_space ===============================\\n\", $arg0\n  space_find $heap->code_space() $arg0\nend\ndocument heap_find\nFind the location of a given address in V8 pages.\nUsage: heap_find address\nend\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/gdbinit"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 3,
                  "endLine": 190,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  set $current_page = $space->first_page()\n  while ($current_page != 0)\n    printf \"#   Searching in %p - %p\\n\", $current_page->area_start(), $current_page->area_end()-1\n    find $current_page->area_start(), $current_page->area_end()-1, $arg1\n    set $current_page = $current_page->next_page()\n  end\nend\n",
                    "rendered": {
                      "text": "  set $current_page = $space->first_page()\n  while ($current_page != 0)\n    printf \"#   Searching in %p - %p\\n\", $current_page->area_start(), $current_page->area_end()-1\n    find $current_page->area_start(), $current_page->area_end()-1, $arg1\n    set $current_page = $current_page->next_page()\n  end\nend\n",
                      "markdown": "`  set $current_page = $space->first_page()\n  while ($current_page != 0)\n    printf \"#   Searching in %p - %p\\n\", $current_page->area_start(), $current_page->area_end()-1\n    find $current_page->area_start(), $current_page->area_end()-1, $arg1\n    set $current_page = $current_page->next_page()\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/gdbinit"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 6,
                  "endLine": 141,
                  "snippet": {
                    "text": "\n# Execute a simulator command.\npython\nimport gdb\n\nclass SimCommand(gdb.Command):\n  \"\"\"Sim the current program.\"\"\"\n\n",
                    "rendered": {
                      "text": "\n# Execute a simulator command.\npython\nimport gdb\n\nclass SimCommand(gdb.Command):\n  \"\"\"Sim the current program.\"\"\"\n\n",
                      "markdown": "`\n# Execute a simulator command.\npython\nimport gdb\n\nclass SimCommand(gdb.Command):\n  \"\"\"Sim the current program.\"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/gdbinit"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 25,
                  "endLine": 123,
                  "snippet": {
                    "text": "call _v8_internal_Node_Print((void*)($arg0))\nend\ndocument pn\nPrint a v8 TurboFan graph node\nUsage: pn node_address\nend\n\n# Skip the JavaScript stack.\n",
                    "rendered": {
                      "text": "call _v8_internal_Node_Print((void*)($arg0))\nend\ndocument pn\nPrint a v8 TurboFan graph node\nUsage: pn node_address\nend\n\n# Skip the JavaScript stack.\n",
                      "markdown": "`call _v8_internal_Node_Print((void*)($arg0))\nend\ndocument pn\nPrint a v8 TurboFan graph node\nUsage: pn node_address\nend\n\n# Skip the JavaScript stack.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/share/doc/node/gdbinit"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 6,
                  "endLine": 26,
                  "snippet": {
                    "text": "\n# Print content of v8::Local handle.\npython\nimport gdb\n\nclass PrintV8LocalCommand(gdb.Command):\n  \"\"\"Print content of v8::Local handle.\"\"\"\n\n",
                    "rendered": {
                      "text": "\n# Print content of v8::Local handle.\npython\nimport gdb\n\nclass PrintV8LocalCommand(gdb.Command):\n  \"\"\"Print content of v8::Local handle.\"\"\"\n\n",
                      "markdown": "`\n# Print content of v8::Local handle.\npython\nimport gdb\n\nclass PrintV8LocalCommand(gdb.Command):\n  \"\"\"Print content of v8::Local handle.\"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 1347,
                  "startColumn": 45,
                  "endLine": 1347,
                  "endColumn": 50,
                  "snippet": {
                    "text": " * keeping ABI compatibility between Node and Electron. */\nNODE_EXTERN void RemoveEnvironmentCleanupHookInternal(ACHHandle* holder);\ninline void RemoveEnvironmentCleanupHook(AsyncCleanupHookHandle holder) {\n  RemoveEnvironmentCleanupHookInternal(holder.get());\n}\n\n// This behaves like V8's Isolate::RequestInterrupt(), but also wakes up\n",
                    "rendered": {
                      "text": " * keeping ABI compatibility between Node and Electron. */\nNODE_EXTERN void RemoveEnvironmentCleanupHookInternal(ACHHandle* holder);\ninline void RemoveEnvironmentCleanupHook(AsyncCleanupHookHandle holder) {\n  RemoveEnvironmentCleanupHookInternal(holder.get());\n}\n\n// This behaves like V8's Isolate::RequestInterrupt(), but also wakes up\n",
                      "markdown": "` * keeping ABI compatibility between Node and Electron. */\nNODE_EXTERN void RemoveEnvironmentCleanupHookInternal(ACHHandle* holder);\ninline void RemoveEnvironmentCleanupHook(AsyncCleanupHookHandle holder) {\n  RemoveEnvironmentCleanupHookInternal(holder.get());\n}\n\n// This behaves like V8's Isolate::RequestInterrupt(), but also wakes up\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 1347,
                  "startColumn": 8,
                  "endLine": 1347,
                  "endColumn": 49,
                  "snippet": {
                    "text": " * keeping ABI compatibility between Node and Electron. */\nNODE_EXTERN void RemoveEnvironmentCleanupHookInternal(ACHHandle* holder);\ninline void RemoveEnvironmentCleanupHook(AsyncCleanupHookHandle holder) {\n  RemoveEnvironmentCleanupHookInternal(holder.get());\n}\n\n// This behaves like V8's Isolate::RequestInterrupt(), but also wakes up\n",
                    "rendered": {
                      "text": " * keeping ABI compatibility between Node and Electron. */\nNODE_EXTERN void RemoveEnvironmentCleanupHookInternal(ACHHandle* holder);\ninline void RemoveEnvironmentCleanupHook(AsyncCleanupHookHandle holder) {\n  RemoveEnvironmentCleanupHookInternal(holder.get());\n}\n\n// This behaves like V8's Isolate::RequestInterrupt(), but also wakes up\n",
                      "markdown": "` * keeping ABI compatibility between Node and Electron. */\nNODE_EXTERN void RemoveEnvironmentCleanupHookInternal(ACHHandle* holder);\ninline void RemoveEnvironmentCleanupHook(AsyncCleanupHookHandle holder) {\n  RemoveEnvironmentCleanupHookInternal(holder.get());\n}\n\n// This behaves like V8's Isolate::RequestInterrupt(), but also wakes up\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 1346,
                  "startColumn": 18,
                  "endLine": 1346,
                  "endColumn": 46,
                  "snippet": {
                    "text": "/* This function is not intended to be used externally, it exists to aid in\n * keeping ABI compatibility between Node and Electron. */\nNODE_EXTERN void RemoveEnvironmentCleanupHookInternal(ACHHandle* holder);\ninline void RemoveEnvironmentCleanupHook(AsyncCleanupHookHandle holder) {\n  RemoveEnvironmentCleanupHookInternal(holder.get());\n}\n\n",
                    "rendered": {
                      "text": "/* This function is not intended to be used externally, it exists to aid in\n * keeping ABI compatibility between Node and Electron. */\nNODE_EXTERN void RemoveEnvironmentCleanupHookInternal(ACHHandle* holder);\ninline void RemoveEnvironmentCleanupHook(AsyncCleanupHookHandle holder) {\n  RemoveEnvironmentCleanupHookInternal(holder.get());\n}\n\n",
                      "markdown": "`/* This function is not intended to be used externally, it exists to aid in\n * keeping ABI compatibility between Node and Electron. */\nNODE_EXTERN void RemoveEnvironmentCleanupHookInternal(ACHHandle* holder);\ninline void RemoveEnvironmentCleanupHook(AsyncCleanupHookHandle holder) {\n  RemoveEnvironmentCleanupHookInternal(holder.get());\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 1311,
                  "startColumn": 19,
                  "endLine": 1311,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n/* This is a lot like node::AtExit, except that the hooks added via this\n * function are run before the AtExit ones and will always be registered\n * for the current Environment instance.\n * These functions are safe to use in an addon supporting multiple\n * threads/isolates. */\nNODE_EXTERN void AddEnvironmentCleanupHook(v8::Isolate* isolate,\n",
                    "rendered": {
                      "text": "\n/* This is a lot like node::AtExit, except that the hooks added via this\n * function are run before the AtExit ones and will always be registered\n * for the current Environment instance.\n * These functions are safe to use in an addon supporting multiple\n * threads/isolates. */\nNODE_EXTERN void AddEnvironmentCleanupHook(v8::Isolate* isolate,\n",
                      "markdown": "`\n/* This is a lot like node::AtExit, except that the hooks added via this\n * function are run before the AtExit ones and will always be registered\n * for the current Environment instance.\n * These functions are safe to use in an addon supporting multiple\n * threads/isolates. */\nNODE_EXTERN void AddEnvironmentCleanupHook(v8::Isolate* isolate,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 1295,
                  "startColumn": 43,
                  "endLine": 1295,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    napi_addon_register_func fn,\n    int32_t module_api_version = NODE_API_DEFAULT_MODULE_API_VERSION);\n\n/* Registers a callback with the passed-in Environment instance. The callback\n * is called after the event loop exits, but before the VM is disposed.\n * Callbacks are run in reverse order of registration, i.e. newest first.\n */\n",
                    "rendered": {
                      "text": "    napi_addon_register_func fn,\n    int32_t module_api_version = NODE_API_DEFAULT_MODULE_API_VERSION);\n\n/* Registers a callback with the passed-in Environment instance. The callback\n * is called after the event loop exits, but before the VM is disposed.\n * Callbacks are run in reverse order of registration, i.e. newest first.\n */\n",
                      "markdown": "`    napi_addon_register_func fn,\n    int32_t module_api_version = NODE_API_DEFAULT_MODULE_API_VERSION);\n\n/* Registers a callback with the passed-in Environment instance. The callback\n * is called after the event loop exits, but before the VM is disposed.\n * Callbacks are run in reverse order of registration, i.e. newest first.\n */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 860,
                  "startColumn": 58,
                  "endLine": 860,
                  "endColumn": 77,
                  "snippet": {
                    "text": "  ~CommonEnvironmentSetup();\n\n  // Create a new CommonEnvironmentSetup, that is, a group of objects that\n  // together form the typical setup for a single Node.js Environment instance.\n  // If any error occurs, `*errors` will be populated and the returned pointer\n  // will be empty.\n  // env_args will be passed through as arguments to CreateEnvironment(), after\n",
                    "rendered": {
                      "text": "  ~CommonEnvironmentSetup();\n\n  // Create a new CommonEnvironmentSetup, that is, a group of objects that\n  // together form the typical setup for a single Node.js Environment instance.\n  // If any error occurs, `*errors` will be populated and the returned pointer\n  // will be empty.\n  // env_args will be passed through as arguments to CreateEnvironment(), after\n",
                      "markdown": "`  ~CommonEnvironmentSetup();\n\n  // Create a new CommonEnvironmentSetup, that is, a group of objects that\n  // together form the typical setup for a single Node.js Environment instance.\n  // If any error occurs, `*errors` will be populated and the returned pointer\n  // will be empty.\n  // env_args will be passed through as arguments to CreateEnvironment(), after\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 758,
                  "startColumn": 29,
                  "endLine": 758,
                  "endColumn": 49,
                  "snippet": {
                    "text": "NODE_EXTERN Environment* GetCurrentEnvironment(v8::Local<v8::Context> context);\nNODE_EXTERN IsolateData* GetEnvironmentIsolateData(Environment* env);\nNODE_EXTERN ArrayBufferAllocator* GetArrayBufferAllocator(IsolateData* data);\n// This is mostly useful for Environment* instances that were created through\n// a snapshot and have a main context that was read from that snapshot.\nNODE_EXTERN v8::Local<v8::Context> GetMainContext(Environment* env);\n\n",
                    "rendered": {
                      "text": "NODE_EXTERN Environment* GetCurrentEnvironment(v8::Local<v8::Context> context);\nNODE_EXTERN IsolateData* GetEnvironmentIsolateData(Environment* env);\nNODE_EXTERN ArrayBufferAllocator* GetArrayBufferAllocator(IsolateData* data);\n// This is mostly useful for Environment* instances that were created through\n// a snapshot and have a main context that was read from that snapshot.\nNODE_EXTERN v8::Local<v8::Context> GetMainContext(Environment* env);\n\n",
                      "markdown": "`NODE_EXTERN Environment* GetCurrentEnvironment(v8::Local<v8::Context> context);\nNODE_EXTERN IsolateData* GetEnvironmentIsolateData(Environment* env);\nNODE_EXTERN ArrayBufferAllocator* GetArrayBufferAllocator(IsolateData* data);\n// This is mostly useful for Environment* instances that were created through\n// a snapshot and have a main context that was read from that snapshot.\nNODE_EXTERN v8::Local<v8::Context> GetMainContext(Environment* env);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 755,
                  "startColumn": 12,
                  "endLine": 755,
                  "endColumn": 28,
                  "snippet": {
                    "text": "NODE_EXTERN void DefaultProcessExitHandler(Environment* env, int exit_code);\n\n// This may return nullptr if context is not associated with a Node instance.\nNODE_EXTERN Environment* GetCurrentEnvironment(v8::Local<v8::Context> context);\nNODE_EXTERN IsolateData* GetEnvironmentIsolateData(Environment* env);\nNODE_EXTERN ArrayBufferAllocator* GetArrayBufferAllocator(IsolateData* data);\n// This is mostly useful for Environment* instances that were created through\n",
                    "rendered": {
                      "text": "NODE_EXTERN void DefaultProcessExitHandler(Environment* env, int exit_code);\n\n// This may return nullptr if context is not associated with a Node instance.\nNODE_EXTERN Environment* GetCurrentEnvironment(v8::Local<v8::Context> context);\nNODE_EXTERN IsolateData* GetEnvironmentIsolateData(Environment* env);\nNODE_EXTERN ArrayBufferAllocator* GetArrayBufferAllocator(IsolateData* data);\n// This is mostly useful for Environment* instances that were created through\n",
                      "markdown": "`NODE_EXTERN void DefaultProcessExitHandler(Environment* env, int exit_code);\n\n// This may return nullptr if context is not associated with a Node instance.\nNODE_EXTERN Environment* GetCurrentEnvironment(v8::Local<v8::Context> context);\nNODE_EXTERN IsolateData* GetEnvironmentIsolateData(Environment* env);\nNODE_EXTERN ArrayBufferAllocator* GetArrayBufferAllocator(IsolateData* data);\n// This is mostly useful for Environment* instances that were created through\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 744,
                  "startColumn": 19,
                  "endLine": 744,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n// Set a callback that is called when process.exit() is called from JS,\n// overriding the default handler.\n// It receives the Environment* instance and the exit code as arguments.\n// This could e.g. call Stop(env); in order to terminate execution and stop\n// the event loop.\n// The default handler disposes of the global V8 platform instance, if one is\n",
                    "rendered": {
                      "text": "\n// Set a callback that is called when process.exit() is called from JS,\n// overriding the default handler.\n// It receives the Environment* instance and the exit code as arguments.\n// This could e.g. call Stop(env); in order to terminate execution and stop\n// the event loop.\n// The default handler disposes of the global V8 platform instance, if one is\n",
                      "markdown": "`\n// Set a callback that is called when process.exit() is called from JS,\n// overriding the default handler.\n// It receives the Environment* instance and the exit code as arguments.\n// This could e.g. call Stop(env); in order to terminate execution and stop\n// the event loop.\n// The default handler disposes of the global V8 platform instance, if one is\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 712,
                  "startColumn": 3,
                  "endLine": 712,
                  "endColumn": 21,
                  "snippet": {
                    "text": "// child Environment accessible to the inspector as if it were a Node.js Worker.\n// `child_thread_id` can be created using `AllocateEnvironmentThreadId()`\n// and then later passed on to `CreateEnvironment()` to create the child\n// Environment, together with the inspector handle.\n// This method should not be called while the parent Environment is active\n// on another thread.\nNODE_EXTERN std::unique_ptr<InspectorParentHandle> GetInspectorParentHandle(\n",
                    "rendered": {
                      "text": "// child Environment accessible to the inspector as if it were a Node.js Worker.\n// `child_thread_id` can be created using `AllocateEnvironmentThreadId()`\n// and then later passed on to `CreateEnvironment()` to create the child\n// Environment, together with the inspector handle.\n// This method should not be called while the parent Environment is active\n// on another thread.\nNODE_EXTERN std::unique_ptr<InspectorParentHandle> GetInspectorParentHandle(\n",
                      "markdown": "`// child Environment accessible to the inspector as if it were a Node.js Worker.\n// `child_thread_id` can be created using `AllocateEnvironmentThreadId()`\n// and then later passed on to `CreateEnvironment()` to create the child\n// Environment, together with the inspector handle.\n// This method should not be called while the parent Environment is active\n// on another thread.\nNODE_EXTERN std::unique_ptr<InspectorParentHandle> GetInspectorParentHandle(\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 646,
                  "startColumn": 14,
                  "endLine": 646,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  // This environment flag is especially important for worker threads\n  // so that a worker thread can't load a native addon even if `execArgv`\n  // is overwritten and `--no-addons` is not specified but was specified\n  // for this Environment instance.\n  kNoNativeAddons = 1 << 6,\n  // Set this flag to disable searching modules from global paths like\n  // $HOME/.node_modules and $NODE_PATH. This is used by standalone apps that\n",
                    "rendered": {
                      "text": "  // This environment flag is especially important for worker threads\n  // so that a worker thread can't load a native addon even if `execArgv`\n  // is overwritten and `--no-addons` is not specified but was specified\n  // for this Environment instance.\n  kNoNativeAddons = 1 << 6,\n  // Set this flag to disable searching modules from global paths like\n  // $HOME/.node_modules and $NODE_PATH. This is used by standalone apps that\n",
                      "markdown": "`  // This environment flag is especially important for worker threads\n  // so that a worker thread can't load a native addon even if `execArgv`\n  // is overwritten and `--no-addons` is not specified but was specified\n  // for this Environment instance.\n  kNoNativeAddons = 1 << 6,\n  // Set this flag to disable searching modules from global paths like\n  // $HOME/.node_modules and $NODE_PATH. This is used by standalone apps that\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 627,
                  "startColumn": 17,
                  "endLine": 627,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  // (e.g. cwd, process title, uid, etc.).\n  // This is set when using kDefaultFlags.\n  kOwnsProcessState = 1 << 1,\n  // Set if this Environment instance is associated with the global inspector\n  // handling code (i.e. listening on SIGUSR1).\n  // This is set when using kDefaultFlags.\n  kOwnsInspector = 1 << 2,\n",
                    "rendered": {
                      "text": "  // (e.g. cwd, process title, uid, etc.).\n  // This is set when using kDefaultFlags.\n  kOwnsProcessState = 1 << 1,\n  // Set if this Environment instance is associated with the global inspector\n  // handling code (i.e. listening on SIGUSR1).\n  // This is set when using kDefaultFlags.\n  kOwnsInspector = 1 << 2,\n",
                      "markdown": "`  // (e.g. cwd, process title, uid, etc.).\n  // This is set when using kDefaultFlags.\n  kOwnsProcessState = 1 << 1,\n  // Set if this Environment instance is associated with the global inspector\n  // handling code (i.e. listening on SIGUSR1).\n  // This is set when using kDefaultFlags.\n  kOwnsInspector = 1 << 2,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 504,
                  "startColumn": 56,
                  "endLine": 504,
                  "endColumn": 76,
                  "snippet": {
                    "text": "// version and V8 flags as the version that is currently running, and will\n// be rejected otherwise.\n// The same EmbedderSnapshotData instance *must* be passed to both\n// `NewIsolate()` and `CreateIsolateData()`. The first `Environment` instance\n// should be created with an empty `context` argument and will then\n// use the main context included in the snapshot blob. It can be retrieved\n// using `GetMainContext()`. `LoadEnvironment` can receive an empty\n",
                    "rendered": {
                      "text": "// version and V8 flags as the version that is currently running, and will\n// be rejected otherwise.\n// The same EmbedderSnapshotData instance *must* be passed to both\n// `NewIsolate()` and `CreateIsolateData()`. The first `Environment` instance\n// should be created with an empty `context` argument and will then\n// use the main context included in the snapshot blob. It can be retrieved\n// using `GetMainContext()`. `LoadEnvironment` can receive an empty\n",
                      "markdown": "`// version and V8 flags as the version that is currently running, and will\n// be rejected otherwise.\n// The same EmbedderSnapshotData instance *must* be passed to both\n// `NewIsolate()` and `CreateIsolateData()`. The first `Environment` instance\n// should be created with an empty `context` argument and will then\n// use the main context included in the snapshot blob. It can be retrieved\n// using `GetMainContext()`. `LoadEnvironment` can receive an empty\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 1088,
                  "startColumn": 2,
                  "endLine": 1088,
                  "endColumn": 8,
                  "snippet": {
                    "text": "enum encoding {\n  ASCII,\n  UTF8,\n  BASE64,\n  UCS2,\n  BINARY,\n  HEX,\n",
                    "rendered": {
                      "text": "enum encoding {\n  ASCII,\n  UTF8,\n  BASE64,\n  UCS2,\n  BINARY,\n  HEX,\n",
                      "markdown": "`enum encoding {\n  ASCII,\n  UTF8,\n  BASE64,\n  UCS2,\n  BINARY,\n  HEX,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 754,
                  "startColumn": 62,
                  "endLine": 754,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    std::function<void(Environment*, int)>&& handler);\nNODE_EXTERN void DefaultProcessExitHandler(Environment* env, int exit_code);\n\n// This may return nullptr if context is not associated with a Node instance.\nNODE_EXTERN Environment* GetCurrentEnvironment(v8::Local<v8::Context> context);\nNODE_EXTERN IsolateData* GetEnvironmentIsolateData(Environment* env);\nNODE_EXTERN ArrayBufferAllocator* GetArrayBufferAllocator(IsolateData* data);\n",
                    "rendered": {
                      "text": "    std::function<void(Environment*, int)>&& handler);\nNODE_EXTERN void DefaultProcessExitHandler(Environment* env, int exit_code);\n\n// This may return nullptr if context is not associated with a Node instance.\nNODE_EXTERN Environment* GetCurrentEnvironment(v8::Local<v8::Context> context);\nNODE_EXTERN IsolateData* GetEnvironmentIsolateData(Environment* env);\nNODE_EXTERN ArrayBufferAllocator* GetArrayBufferAllocator(IsolateData* data);\n",
                      "markdown": "`    std::function<void(Environment*, int)>&& handler);\nNODE_EXTERN void DefaultProcessExitHandler(Environment* env, int exit_code);\n\n// This may return nullptr if context is not associated with a Node instance.\nNODE_EXTERN Environment* GetCurrentEnvironment(v8::Local<v8::Context> context);\nNODE_EXTERN IsolateData* GetEnvironmentIsolateData(Environment* env);\nNODE_EXTERN ArrayBufferAllocator* GetArrayBufferAllocator(IsolateData* data);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 9,
                  "endLine": 227,
                  "endColumn": 15,
                  "snippet": {
                    "text": "#endif  // _WIN32\n\n\nnamespace node {\n\nclass IsolateData;\nclass Environment;\n",
                    "rendered": {
                      "text": "#endif  // _WIN32\n\n\nnamespace node {\n\nclass IsolateData;\nclass Environment;\n",
                      "markdown": "`#endif  // _WIN32\n\n\nnamespace node {\n\nclass IsolateData;\nclass Environment;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/node.h"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 9,
                  "endLine": 130,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n// Forward-declare these functions now to stop MSVS from becoming\n// terminally confused when it's done in node_internals.h\nnamespace node {\n\nstruct SnapshotData;\n\n",
                    "rendered": {
                      "text": "\n// Forward-declare these functions now to stop MSVS from becoming\n// terminally confused when it's done in node_internals.h\nnamespace node {\n\nstruct SnapshotData;\n\n",
                      "markdown": "`\n// Forward-declare these functions now to stop MSVS from becoming\n// terminally confused when it's done in node_internals.h\nnamespace node {\n\nstruct SnapshotData;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/nodejs-21-21.7.3-r3.apk/nodejs-21-21.7.3-r3/usr/include/node/cppgc/default-platform.h"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 59,
                  "endLine": 57,
                  "endColumn": 64,
                  "snippet": {
                    "text": "    return v8_platform_->GetTracingController();\n  }\n\n  v8::Platform* GetV8Platform() const { return v8_platform_.get(); }\n\n protected:\n  static constexpr v8::Isolate* kNoIsolate = nullptr;\n",
                    "rendered": {
                      "text": "    return v8_platform_->GetTracingController();\n  }\n\n  v8::Platform* GetV8Platform() const { return v8_platform_.get(); }\n\n protected:\n  static constexpr v8::Isolate* kNoIsolate = nullptr;\n",
                      "markdown": "`    return v8_platform_->GetTracingController();\n  }\n\n  v8::Platform* GetV8Platform() const { return v8_platform_.get(); }\n\n protected:\n  static constexpr v8::Isolate* kNoIsolate = nullptr;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}