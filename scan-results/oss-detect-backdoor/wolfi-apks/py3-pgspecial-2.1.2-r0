{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 384,
                  "endLine": 328,
                  "endColumn": 392,
                  "snippet": {
                    "text": "can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE USER MAPPING\": {\n        \"description\": \"Description\\nCREATE USER MAP",
                    "rendered": {
                      "text": "can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE USER MAPPING\": {\n        \"description\": \"Description\\nCREATE USER MAP",
                      "markdown": "`can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE USER MAPPING\": {\n        \"description\": \"Description\\nCREATE USER MAP`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 374,
                  "endLine": 328,
                  "endColumn": 382,
                  "snippet": {
                    "text": "re option can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE USER MAPPING\": {\n        \"description\": \"Description\\nCREAT",
                    "rendered": {
                      "text": "re option can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE USER MAPPING\": {\n        \"description\": \"Description\\nCREAT",
                      "markdown": "`re option can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE USER MAPPING\": {\n        \"description\": \"Description\\nCREAT`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 415,
                  "endLine": 268,
                  "endColumn": 423,
                  "snippet": {
                    "text": "SUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | BYPASSRLS | NOBYPASSRLS\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE RULE\": {\n        \"description\": \"Description\\nCREATE RULE defines a n",
                    "rendered": {
                      "text": "SUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | BYPASSRLS | NOBYPASSRLS\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE RULE\": {\n        \"description\": \"Description\\nCREATE RULE defines a n",
                      "markdown": "`SUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | BYPASSRLS | NOBYPASSRLS\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE RULE\": {\n        \"description\": \"Description\\nCREATE RULE defines a n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 405,
                  "endLine": 268,
                  "endColumn": 413,
                  "snippet": {
                    "text": "RUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | BYPASSRLS | NOBYPASSRLS\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE RULE\": {\n        \"description\": \"Description\\nCREATE RULE d",
                    "rendered": {
                      "text": "RUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | BYPASSRLS | NOBYPASSRLS\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE RULE\": {\n        \"description\": \"Description\\nCREATE RULE d",
                      "markdown": "`RUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | BYPASSRLS | NOBYPASSRLS\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE RULE\": {\n        \"description\": \"Description\\nCREATE RULE d`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 316,
                  "endLine": 236,
                  "endColumn": 324,
                  "snippet": {
                    "text": "s\": \"\\nCREATE GROUP name [ [ WITH ] option [ ... ] ]\\n\\nwhere option can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE INDEX\": {\n        \"description\": \"Description\\nCREATE INDEX construct",
                    "rendered": {
                      "text": "s\": \"\\nCREATE GROUP name [ [ WITH ] option [ ... ] ]\\n\\nwhere option can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE INDEX\": {\n        \"description\": \"Description\\nCREATE INDEX construct",
                      "markdown": "`s\": \"\\nCREATE GROUP name [ [ WITH ] option [ ... ] ]\\n\\nwhere option can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE INDEX\": {\n        \"description\": \"Description\\nCREATE INDEX construct`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 306,
                  "endLine": 236,
                  "endColumn": 314,
                  "snippet": {
                    "text": "  \"synopsis\": \"\\nCREATE GROUP name [ [ WITH ] option [ ... ] ]\\n\\nwhere option can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE INDEX\": {\n        \"description\": \"Description\\nCREATE INDEX",
                    "rendered": {
                      "text": "  \"synopsis\": \"\\nCREATE GROUP name [ [ WITH ] option [ ... ] ]\\n\\nwhere option can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE INDEX\": {\n        \"description\": \"Description\\nCREATE INDEX",
                      "markdown": "`  \"synopsis\": \"\\nCREATE GROUP name [ [ WITH ] option [ ... ] ]\\n\\nwhere option can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n    | IN ROLE role_name [, ...]\\n    | IN GROUP role_name [, ...]\\n    | ROLE role_name [, ...]\\n    | ADMIN role_name [, ...]\\n    | USER role_name [, ...]\\n    | SYSID uid\\n\",\n    },\n    \"CREATE INDEX\": {\n        \"description\": \"Description\\nCREATE INDEX`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 393,
                  "endLine": 144,
                  "endColumn": 401,
                  "snippet": {
                    "text": "can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n\\nALTER USER name RENAME TO new_name\\n\\nALTER USER role_specification SET configuration_parameter { TO | = } { value | DEFAULT }\\nALTER USER role_specification SET configuration_parameter FROM CURRENT\\nALTER USER role_specification RESET configuration_parameter\\nALT",
                    "rendered": {
                      "text": "can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n\\nALTER USER name RENAME TO new_name\\n\\nALTER USER role_specification SET configuration_parameter { TO | = } { value | DEFAULT }\\nALTER USER role_specification SET configuration_parameter FROM CURRENT\\nALTER USER role_specification RESET configuration_parameter\\nALT",
                      "markdown": "`can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n\\nALTER USER name RENAME TO new_name\\n\\nALTER USER role_specification SET configuration_parameter { TO | = } { value | DEFAULT }\\nALTER USER role_specification SET configuration_parameter FROM CURRENT\\nALTER USER role_specification RESET configuration_parameter\\nALT`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 383,
                  "endLine": 144,
                  "endColumn": 391,
                  "snippet": {
                    "text": "re option can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n\\nALTER USER name RENAME TO new_name\\n\\nALTER USER role_specification SET configuration_parameter { TO | = } { value | DEFAULT }\\nALTER USER role_specification SET configuration_parameter FROM CURRENT\\nALTER USER role_specification RESET configuration_para",
                    "rendered": {
                      "text": "re option can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n\\nALTER USER name RENAME TO new_name\\n\\nALTER USER role_specification SET configuration_parameter { TO | = } { value | DEFAULT }\\nALTER USER role_specification SET configuration_parameter FROM CURRENT\\nALTER USER role_specification RESET configuration_para",
                      "markdown": "`re option can be:\\n\\n      SUPERUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n\\nALTER USER name RENAME TO new_name\\n\\nALTER USER role_specification SET configuration_parameter { TO | = } { value | DEFAULT }\\nALTER USER role_specification SET configuration_parameter FROM CURRENT\\nALTER USER role_specification RESET configuration_para`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 424,
                  "endLine": 88,
                  "endColumn": 432,
                  "snippet": {
                    "text": "SUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | BYPASSRLS | NOBYPASSRLS\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n\\nALTER ROLE name RENAME TO new_name\\n\\nALTER ROLE { role_specification | ALL } [ IN DATABASE database_name ] SET configuration_parameter { TO | = } { value | DEFAULT }\\nALTER ROLE { role_specification | ALL } [ IN DATABASE database_name ] SET configuration_paramete",
                    "rendered": {
                      "text": "SUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | BYPASSRLS | NOBYPASSRLS\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n\\nALTER ROLE name RENAME TO new_name\\n\\nALTER ROLE { role_specification | ALL } [ IN DATABASE database_name ] SET configuration_parameter { TO | = } { value | DEFAULT }\\nALTER ROLE { role_specification | ALL } [ IN DATABASE database_name ] SET configuration_paramete",
                      "markdown": "`SUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | BYPASSRLS | NOBYPASSRLS\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n\\nALTER ROLE name RENAME TO new_name\\n\\nALTER ROLE { role_specification | ALL } [ IN DATABASE database_name ] SET configuration_parameter { TO | = } { value | DEFAULT }\\nALTER ROLE { role_specification | ALL } [ IN DATABASE database_name ] SET configuration_paramete`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 414,
                  "endLine": 88,
                  "endColumn": 422,
                  "snippet": {
                    "text": "RUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | BYPASSRLS | NOBYPASSRLS\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n\\nALTER ROLE name RENAME TO new_name\\n\\nALTER ROLE { role_specification | ALL } [ IN DATABASE database_name ] SET configuration_parameter { TO | = } { value | DEFAULT }\\nALTER ROLE { role_specification | ALL } [ IN DATABASE database_name ] SET configuratio",
                    "rendered": {
                      "text": "RUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | BYPASSRLS | NOBYPASSRLS\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n\\nALTER ROLE name RENAME TO new_name\\n\\nALTER ROLE { role_specification | ALL } [ IN DATABASE database_name ] SET configuration_parameter { TO | = } { value | DEFAULT }\\nALTER ROLE { role_specification | ALL } [ IN DATABASE database_name ] SET configuratio",
                      "markdown": "`RUSER | NOSUPERUSER\\n    | CREATEDB | NOCREATEDB\\n    | CREATEROLE | NOCREATEROLE\\n    | CREATEUSER | NOCREATEUSER\\n    | INHERIT | NOINHERIT\\n    | LOGIN | NOLOGIN\\n    | REPLICATION | NOREPLICATION\\n    | BYPASSRLS | NOBYPASSRLS\\n    | CONNECTION LIMIT connlimit\\n    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD 'password'\\n    | VALID UNTIL 'timestamp'\\n\\nALTER ROLE name RENAME TO new_name\\n\\nALTER ROLE { role_specification | ALL } [ IN DATABASE database_name ] SET configuration_parameter { TO | = } { value | DEFAULT }\\nALTER ROLE { role_specification | ALL } [ IN DATABASE database_name ] SET configuratio`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 616,
                  "startColumn": 728,
                  "endLine": 616,
                  "endColumn": 736,
                  "snippet": {
                    "text": " [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] select ]\\n    [ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]\\n    [ LIMIT { count | ALL } ]\\n    [ OFFSET start [ ROW | ROWS ] ]\\n    [ FETCH { FIRST | NEXT } [ count ] { ROW | ROWS } ONLY ]\\n    [ FOR { UPDATE | SHARE } [ OF table_name [, ...] ] [ NOWAIT ] [...] ]\\n\",\n    },\n    \"SET\": {\n        \"description\": \"Description\\n   The SET command changes run-time configuration\",\n        \"synopsis\": \"\\nSET [ SESSION | LOCAL ] configuration_parameter { TO | = } { value | 'value' | DEFAULT }\\nSET [ SESSION | LOC",
                    "rendered": {
                      "text": " [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] select ]\\n    [ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]\\n    [ LIMIT { count | ALL } ]\\n    [ OFFSET start [ ROW | ROWS ] ]\\n    [ FETCH { FIRST | NEXT } [ count ] { ROW | ROWS } ONLY ]\\n    [ FOR { UPDATE | SHARE } [ OF table_name [, ...] ] [ NOWAIT ] [...] ]\\n\",\n    },\n    \"SET\": {\n        \"description\": \"Description\\n   The SET command changes run-time configuration\",\n        \"synopsis\": \"\\nSET [ SESSION | LOCAL ] configuration_parameter { TO | = } { value | 'value' | DEFAULT }\\nSET [ SESSION | LOC",
                      "markdown": "` [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] select ]\\n    [ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]\\n    [ LIMIT { count | ALL } ]\\n    [ OFFSET start [ ROW | ROWS ] ]\\n    [ FETCH { FIRST | NEXT } [ count ] { ROW | ROWS } ONLY ]\\n    [ FOR { UPDATE | SHARE } [ OF table_name [, ...] ] [ NOWAIT ] [...] ]\\n\",\n    },\n    \"SET\": {\n        \"description\": \"Description\\n   The SET command changes run-time configuration\",\n        \"synopsis\": \"\\nSET [ SESSION | LOCAL ] configuration_parameter { TO | = } { value | 'value' | DEFAULT }\\nSET [ SESSION | LOC`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 612,
                  "startColumn": 2116,
                  "endLine": 612,
                  "endColumn": 2124,
                  "snippet": {
                    "text": "n    ( expression [, ...] )\\n    ROLLUP ( { expression | ( expression [, ...] ) } [, ...] )\\n    CUBE ( { expression | ( expression [, ...] ) } [, ...] )\\n    GROUPING SETS ( grouping_element [, ...] )\\n\\nand with_query is:\\nwith_query_name [ ( column_name [, ...] ) ] AS ( select | values | insert | update | delete )\\n\\nTABLE [ ONLY ] table_name [ * ]\\n\",\n    },\n    \"SELECT INTO\": {\n        \"description\": \"Description\\nSELECT INTO creates a new table and fills it\",\n        \"synopsis\": \"\\n[ WITH [ RECURSIVE ] with_query [, ...] ]\\nSELECT [ ALL | DISTINCT [ ON ( expression [, ...] ) ] ]\\n    * | express",
                    "rendered": {
                      "text": "n    ( expression [, ...] )\\n    ROLLUP ( { expression | ( expression [, ...] ) } [, ...] )\\n    CUBE ( { expression | ( expression [, ...] ) } [, ...] )\\n    GROUPING SETS ( grouping_element [, ...] )\\n\\nand with_query is:\\nwith_query_name [ ( column_name [, ...] ) ] AS ( select | values | insert | update | delete )\\n\\nTABLE [ ONLY ] table_name [ * ]\\n\",\n    },\n    \"SELECT INTO\": {\n        \"description\": \"Description\\nSELECT INTO creates a new table and fills it\",\n        \"synopsis\": \"\\n[ WITH [ RECURSIVE ] with_query [, ...] ]\\nSELECT [ ALL | DISTINCT [ ON ( expression [, ...] ) ] ]\\n    * | express",
                      "markdown": "`n    ( expression [, ...] )\\n    ROLLUP ( { expression | ( expression [, ...] ) } [, ...] )\\n    CUBE ( { expression | ( expression [, ...] ) } [, ...] )\\n    GROUPING SETS ( grouping_element [, ...] )\\n\\nand with_query is:\\nwith_query_name [ ( column_name [, ...] ) ] AS ( select | values | insert | update | delete )\\n\\nTABLE [ ONLY ] table_name [ * ]\\n\",\n    },\n    \"SELECT INTO\": {\n        \"description\": \"Description\\nSELECT INTO creates a new table and fills it\",\n        \"synopsis\": \"\\n[ WITH [ RECURSIVE ] with_query [, ...] ]\\nSELECT [ ALL | DISTINCT [ ON ( expression [, ...] ) ] ]\\n    * | express`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 612,
                  "startColumn": 692,
                  "endLine": 612,
                  "endColumn": 700,
                  "snippet": {
                    "text": "ERSECT | EXCEPT } [ ALL | DISTINCT ] select ]\\n    [ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]\\n    [ LIMIT { count | ALL } ]\\n    [ OFFSET start [ ROW | ROWS ] ]\\n    [ FETCH { FIRST | NEXT } [ count ] { ROW | ROWS } ONLY ]\\n    [ FOR { UPDATE | NO KEY UPDATE | SHARE | KEY SHARE } [ OF table_name [, ...] ] [ NOWAIT | SKIP LOCKED ] [...] ]\\n\\nwhere from_item can be one of:\\n\\n    [ ONLY ] table_name [ * ] [ [ AS ] alias [ ( column_alias [, ...] ) ] ]\\n                [ TABLESAMPLE sampling_method ( argument [, ...] ) [ REPEATABLE ( seed ) ] ]\\n    [ LATER",
                    "rendered": {
                      "text": "ERSECT | EXCEPT } [ ALL | DISTINCT ] select ]\\n    [ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]\\n    [ LIMIT { count | ALL } ]\\n    [ OFFSET start [ ROW | ROWS ] ]\\n    [ FETCH { FIRST | NEXT } [ count ] { ROW | ROWS } ONLY ]\\n    [ FOR { UPDATE | NO KEY UPDATE | SHARE | KEY SHARE } [ OF table_name [, ...] ] [ NOWAIT | SKIP LOCKED ] [...] ]\\n\\nwhere from_item can be one of:\\n\\n    [ ONLY ] table_name [ * ] [ [ AS ] alias [ ( column_alias [, ...] ) ] ]\\n                [ TABLESAMPLE sampling_method ( argument [, ...] ) [ REPEATABLE ( seed ) ] ]\\n    [ LATER",
                      "markdown": "`ERSECT | EXCEPT } [ ALL | DISTINCT ] select ]\\n    [ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]\\n    [ LIMIT { count | ALL } ]\\n    [ OFFSET start [ ROW | ROWS ] ]\\n    [ FETCH { FIRST | NEXT } [ count ] { ROW | ROWS } ONLY ]\\n    [ FOR { UPDATE | NO KEY UPDATE | SHARE | KEY SHARE } [ OF table_name [, ...] ] [ NOWAIT | SKIP LOCKED ] [...] ]\\n\\nwhere from_item can be one of:\\n\\n    [ ONLY ] table_name [ * ] [ [ AS ] alias [ ( column_alias [, ...] ) ] ]\\n                [ TABLESAMPLE sampling_method ( argument [, ...] ) [ REPEATABLE ( seed ) ] ]\\n    [ LATER`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 612,
                  "startColumn": 676,
                  "endLine": 612,
                  "endColumn": 684,
                  "snippet": {
                    "text": " [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] select ]\\n    [ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]\\n    [ LIMIT { count | ALL } ]\\n    [ OFFSET start [ ROW | ROWS ] ]\\n    [ FETCH { FIRST | NEXT } [ count ] { ROW | ROWS } ONLY ]\\n    [ FOR { UPDATE | NO KEY UPDATE | SHARE | KEY SHARE } [ OF table_name [, ...] ] [ NOWAIT | SKIP LOCKED ] [...] ]\\n\\nwhere from_item can be one of:\\n\\n    [ ONLY ] table_name [ * ] [ [ AS ] alias [ ( column_alias [, ...] ) ] ]\\n                [ TABLESAMPLE sampling_method ( argument [, ...] ) [ REPEATABLE ( seed ) ",
                    "rendered": {
                      "text": " [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] select ]\\n    [ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]\\n    [ LIMIT { count | ALL } ]\\n    [ OFFSET start [ ROW | ROWS ] ]\\n    [ FETCH { FIRST | NEXT } [ count ] { ROW | ROWS } ONLY ]\\n    [ FOR { UPDATE | NO KEY UPDATE | SHARE | KEY SHARE } [ OF table_name [, ...] ] [ NOWAIT | SKIP LOCKED ] [...] ]\\n\\nwhere from_item can be one of:\\n\\n    [ ONLY ] table_name [ * ] [ [ AS ] alias [ ( column_alias [, ...] ) ] ]\\n                [ TABLESAMPLE sampling_method ( argument [, ...] ) [ REPEATABLE ( seed ) ",
                      "markdown": "` [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] select ]\\n    [ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]\\n    [ LIMIT { count | ALL } ]\\n    [ OFFSET start [ ROW | ROWS ] ]\\n    [ FETCH { FIRST | NEXT } [ count ] { ROW | ROWS } ONLY ]\\n    [ FOR { UPDATE | NO KEY UPDATE | SHARE | KEY SHARE } [ OF table_name [, ...] ] [ NOWAIT | SKIP LOCKED ] [...] ]\\n\\nwhere from_item can be one of:\\n\\n    [ ONLY ] table_name [ * ] [ [ AS ] alias [ ( column_alias [, ...] ) ] ]\\n                [ TABLESAMPLE sampling_method ( argument [, ...] ) [ REPEATABLE ( seed ) `"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 588,
                  "startColumn": 2214,
                  "endLine": 588,
                  "endColumn": 2222,
                  "snippet": {
                    "text": "M { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { USAGE | ALL [ PRIVILEGES ] }\\n    ON LANGUAGE lang_name [, ...]\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | UPDATE } [, ...] | ALL [ PRIVILEGES ] }\\n    ON LARGE OBJECT loid [, ...]\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { CREATE | USAGE } [, ...] | ALL [ PRIVILEGES ] }\\n    ON SCHEMA schema_name [, ...]\\n    FROM { [ GROUP ] role_name",
                    "rendered": {
                      "text": "M { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { USAGE | ALL [ PRIVILEGES ] }\\n    ON LANGUAGE lang_name [, ...]\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | UPDATE } [, ...] | ALL [ PRIVILEGES ] }\\n    ON LARGE OBJECT loid [, ...]\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { CREATE | USAGE } [, ...] | ALL [ PRIVILEGES ] }\\n    ON SCHEMA schema_name [, ...]\\n    FROM { [ GROUP ] role_name",
                      "markdown": "`M { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { USAGE | ALL [ PRIVILEGES ] }\\n    ON LANGUAGE lang_name [, ...]\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | UPDATE } [, ...] | ALL [ PRIVILEGES ] }\\n    ON LARGE OBJECT loid [, ...]\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { CREATE | USAGE } [, ...] | ALL [ PRIVILEGES ] }\\n    ON SCHEMA schema_name [, ...]\\n    FROM { [ GROUP ] role_name`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 588,
                  "startColumn": 675,
                  "endLine": 588,
                  "endColumn": 683,
                  "snippet": {
                    "text": "{ { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [, ...] )\\n    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) }\\n    ON [ TABLE ] table_name [, ...]\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { SEQUENCE sequence_name [, ...]\\n         | ALL SEQUENCES IN SCHEMA schema_name [, ...] }\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { CREATE | CONNECT | TEMPORARY | TEMP } [, ...",
                    "rendered": {
                      "text": "{ { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [, ...] )\\n    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) }\\n    ON [ TABLE ] table_name [, ...]\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { SEQUENCE sequence_name [, ...]\\n         | ALL SEQUENCES IN SCHEMA schema_name [, ...] }\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { CREATE | CONNECT | TEMPORARY | TEMP } [, ...",
                      "markdown": "`{ { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [, ...] )\\n    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) }\\n    ON [ TABLE ] table_name [, ...]\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { SEQUENCE sequence_name [, ...]\\n         | ALL SEQUENCES IN SCHEMA schema_name [, ...] }\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { CREATE | CONNECT | TEMPORARY | TEMP } [, ...`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 588,
                  "startColumn": 396,
                  "endLine": 588,
                  "endColumn": 404,
                  "snippet": {
                    "text": "TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { [ TABLE ] table_name [, ...]\\n         | ALL TABLES IN SCHEMA schema_name [, ...] }\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [, ...] )\\n    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) }\\n    ON [ TABLE ] table_name [, ...]\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL ",
                    "rendered": {
                      "text": "TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { [ TABLE ] table_name [, ...]\\n         | ALL TABLES IN SCHEMA schema_name [, ...] }\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [, ...] )\\n    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) }\\n    ON [ TABLE ] table_name [, ...]\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL ",
                      "markdown": "`TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { [ TABLE ] table_name [, ...]\\n         | ALL TABLES IN SCHEMA schema_name [, ...] }\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [, ...] )\\n    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) }\\n    ON [ TABLE ] table_name [, ...]\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL `"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 588,
                  "startColumn": 77,
                  "endLine": 588,
                  "endColumn": 85,
                  "snippet": {
                    "text": "SET restores run-time parameters to their\",\n        \"synopsis\": \"\\nRESET configuration_parameter\\nRESET ALL\\n\",\n    },\n    \"REVOKE\": {\n        \"description\": \"Description\\n   The REVOKE command revokes previously granted\",\n        \"synopsis\": \"\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { [ TABLE ] table_name [, ...]\\n         | ALL TABLES IN SCHEMA schema_name [, ...] }\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT",
                    "rendered": {
                      "text": "SET restores run-time parameters to their\",\n        \"synopsis\": \"\\nRESET configuration_parameter\\nRESET ALL\\n\",\n    },\n    \"REVOKE\": {\n        \"description\": \"Description\\n   The REVOKE command revokes previously granted\",\n        \"synopsis\": \"\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { [ TABLE ] table_name [, ...]\\n         | ALL TABLES IN SCHEMA schema_name [, ...] }\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT",
                      "markdown": "`SET restores run-time parameters to their\",\n        \"synopsis\": \"\\nRESET configuration_parameter\\nRESET ALL\\n\",\n    },\n    \"REVOKE\": {\n        \"description\": \"Description\\n   The REVOKE command revokes previously granted\",\n        \"synopsis\": \"\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { [ TABLE ] table_name [, ...]\\n         | ALL TABLES IN SCHEMA schema_name [, ...] }\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 544,
                  "startColumn": 182,
                  "endLine": 544,
                  "endColumn": 190,
                  "snippet": {
                    "text": "    },\n    \"LOCK\": {\n        \"description\": \"Description\\nLOCK TABLE obtains a table-level lock, waiting\",\n        \"synopsis\": \"\\nLOCK [ TABLE ] [ ONLY ] name [ * ] [, ...] [ IN lockmode MODE ] [ NOWAIT ]\\n\\nwhere lockmode is one of:\\n\\n    ACCESS SHARE | ROW SHARE | ROW EXCLUSIVE | SHARE UPDATE EXCLUSIVE\\n    | SHARE | SHARE ROW EXCLUSIVE | EXCLUSIVE | ACCESS EXCLUSIVE\\n\",\n    },\n    \"MOVE\": {\n        \"description\": \"Description\\nMOVE repositions a cursor without retrieving any data.\",\n",
                    "rendered": {
                      "text": "    },\n    \"LOCK\": {\n        \"description\": \"Description\\nLOCK TABLE obtains a table-level lock, waiting\",\n        \"synopsis\": \"\\nLOCK [ TABLE ] [ ONLY ] name [ * ] [, ...] [ IN lockmode MODE ] [ NOWAIT ]\\n\\nwhere lockmode is one of:\\n\\n    ACCESS SHARE | ROW SHARE | ROW EXCLUSIVE | SHARE UPDATE EXCLUSIVE\\n    | SHARE | SHARE ROW EXCLUSIVE | EXCLUSIVE | ACCESS EXCLUSIVE\\n\",\n    },\n    \"MOVE\": {\n        \"description\": \"Description\\nMOVE repositions a cursor without retrieving any data.\",\n",
                      "markdown": "`    },\n    \"LOCK\": {\n        \"description\": \"Description\\nLOCK TABLE obtains a table-level lock, waiting\",\n        \"synopsis\": \"\\nLOCK [ TABLE ] [ ONLY ] name [ * ] [, ...] [ IN lockmode MODE ] [ NOWAIT ]\\n\\nwhere lockmode is one of:\\n\\n    ACCESS SHARE | ROW SHARE | ROW EXCLUSIVE | SHARE UPDATE EXCLUSIVE\\n    | SHARE | SHARE ROW EXCLUSIVE | EXCLUSIVE | ACCESS EXCLUSIVE\\n\",\n    },\n    \"MOVE\": {\n        \"description\": \"Description\\nMOVE repositions a cursor without retrieving any data.\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 532,
                  "startColumn": 601,
                  "endLine": 532,
                  "endColumn": 609,
                  "snippet": {
                    "text": "expression [ [ AS ] output_name ] [, ...] ]\\n\\nwhere conflict_target can be one of:\\n\\n    ( { column_name_index | ( expression_index ) } [ COLLATE collation ] [ opclass ] [, ...] ) [ WHERE index_predicate ]\\n    ON CONSTRAINT constraint_name\\nand conflict_action is one of:\\n\\n    DO NOTHING\\n    DO UPDATE SET { column_name = { expression | DEFAULT } |\\n                    ( column_name [, ...] ) = ( { expression | DEFAULT } [, ...] ) |\\n                    ( column_name [, ...] ) = ( sub-SELECT )\\n                  } [, ...]\\n              [ WHERE condition ]\\n\",\n    },\n    \"LISTEN\": {\n        \"descr",
                    "rendered": {
                      "text": "expression [ [ AS ] output_name ] [, ...] ]\\n\\nwhere conflict_target can be one of:\\n\\n    ( { column_name_index | ( expression_index ) } [ COLLATE collation ] [ opclass ] [, ...] ) [ WHERE index_predicate ]\\n    ON CONSTRAINT constraint_name\\nand conflict_action is one of:\\n\\n    DO NOTHING\\n    DO UPDATE SET { column_name = { expression | DEFAULT } |\\n                    ( column_name [, ...] ) = ( { expression | DEFAULT } [, ...] ) |\\n                    ( column_name [, ...] ) = ( sub-SELECT )\\n                  } [, ...]\\n              [ WHERE condition ]\\n\",\n    },\n    \"LISTEN\": {\n        \"descr",
                      "markdown": "`expression [ [ AS ] output_name ] [, ...] ]\\n\\nwhere conflict_target can be one of:\\n\\n    ( { column_name_index | ( expression_index ) } [ COLLATE collation ] [ opclass ] [, ...] ) [ WHERE index_predicate ]\\n    ON CONSTRAINT constraint_name\\nand conflict_action is one of:\\n\\n    DO NOTHING\\n    DO UPDATE SET { column_name = { expression | DEFAULT } |\\n                    ( column_name [, ...] ) = ( { expression | DEFAULT } [, ...] ) |\\n                    ( column_name [, ...] ) = ( sub-SELECT )\\n                  } [, ...]\\n              [ WHERE condition ]\\n\",\n    },\n    \"LISTEN\": {\n        \"descr`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 524,
                  "startColumn": 1746,
                  "endLine": 524,
                  "endColumn": 1754,
                  "snippet": {
                    "text": " ] arg_type [, ...] ] ) [, ...]\\n         | ALL FUNCTIONS IN SCHEMA schema_name [, ...] }\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { USAGE | ALL [ PRIVILEGES ] }\\n    ON LANGUAGE lang_name [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { SELECT | UPDATE } [, ...] | ALL [ PRIVILEGES ] }\\n    ON LARGE OBJECT loid [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { CREATE | USAGE } [, ...] | ALL [ PRIVILEGES ] }\\n    ON SCHEMA schema_name [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { CREATE | ALL",
                    "rendered": {
                      "text": " ] arg_type [, ...] ] ) [, ...]\\n         | ALL FUNCTIONS IN SCHEMA schema_name [, ...] }\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { USAGE | ALL [ PRIVILEGES ] }\\n    ON LANGUAGE lang_name [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { SELECT | UPDATE } [, ...] | ALL [ PRIVILEGES ] }\\n    ON LARGE OBJECT loid [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { CREATE | USAGE } [, ...] | ALL [ PRIVILEGES ] }\\n    ON SCHEMA schema_name [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { CREATE | ALL",
                      "markdown": "` ] arg_type [, ...] ] ) [, ...]\\n         | ALL FUNCTIONS IN SCHEMA schema_name [, ...] }\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { USAGE | ALL [ PRIVILEGES ] }\\n    ON LANGUAGE lang_name [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { SELECT | UPDATE } [, ...] | ALL [ PRIVILEGES ] }\\n    ON LARGE OBJECT loid [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { CREATE | USAGE } [, ...] | ALL [ PRIVILEGES ] }\\n    ON SCHEMA schema_name [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { CREATE | ALL`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 524,
                  "startColumn": 550,
                  "endLine": 524,
                  "endColumn": 558,
                  "snippet": {
                    "text": "ification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [, ...] )\\n    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) }\\n    ON [ TABLE ] table_name [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { SEQUENCE sequence_name [, ...]\\n         | ALL SEQUENCES IN SCHEMA schema_name [, ...] }\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { CREATE | CONNECT | TEMPORARY | TEMP } [, ...] | ALL [ PRIVILEGES ] }\\n    ON DATABASE databas",
                    "rendered": {
                      "text": "ification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [, ...] )\\n    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) }\\n    ON [ TABLE ] table_name [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { SEQUENCE sequence_name [, ...]\\n         | ALL SEQUENCES IN SCHEMA schema_name [, ...] }\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { CREATE | CONNECT | TEMPORARY | TEMP } [, ...] | ALL [ PRIVILEGES ] }\\n    ON DATABASE databas",
                      "markdown": "`ification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [, ...] )\\n    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) }\\n    ON [ TABLE ] table_name [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { SEQUENCE sequence_name [, ...]\\n         | ALL SEQUENCES IN SCHEMA schema_name [, ...] }\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { CREATE | CONNECT | TEMPORARY | TEMP } [, ...] | ALL [ PRIVILEGES ] }\\n    ON DATABASE databas`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 524,
                  "startColumn": 320,
                  "endLine": 524,
                  "endColumn": 328,
                  "snippet": {
                    "text": "\"\\nGRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { [ TABLE ] table_name [, ...]\\n         | ALL TABLES IN SCHEMA schema_name [, ...] }\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [, ...] )\\n    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) }\\n    ON [ TABLE ] table_name [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { SEQUENCE sequence_name",
                    "rendered": {
                      "text": "\"\\nGRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { [ TABLE ] table_name [, ...]\\n         | ALL TABLES IN SCHEMA schema_name [, ...] }\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [, ...] )\\n    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) }\\n    ON [ TABLE ] table_name [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { SEQUENCE sequence_name",
                      "markdown": "`\"\\nGRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { [ TABLE ] table_name [, ...]\\n         | ALL TABLES IN SCHEMA schema_name [, ...] }\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [, ...] )\\n    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) }\\n    ON [ TABLE ] table_name [, ...]\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { SEQUENCE sequence_name`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 524,
                  "startColumn": 50,
                  "endLine": 524,
                  "endColumn": 58,
                  "snippet": {
                    "text": "    RELATIVE count\\ncount\\n    ALL\\n    FORWARD\\n    FORWARD count\\n    FORWARD ALL\\n    BACKWARD\\n    BACKWARD count\\n    BACKWARD ALL\\n\",\n    },\n    \"GRANT\": {\n        \"description\": \"Description\\n   The GRANT command has two basic variants: one\",\n        \"synopsis\": \"\\nGRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { [ TABLE ] table_name [, ...]\\n         | ALL TABLES IN SCHEMA schema_name [, ...] }\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [",
                    "rendered": {
                      "text": "    RELATIVE count\\ncount\\n    ALL\\n    FORWARD\\n    FORWARD count\\n    FORWARD ALL\\n    BACKWARD\\n    BACKWARD count\\n    BACKWARD ALL\\n\",\n    },\n    \"GRANT\": {\n        \"description\": \"Description\\n   The GRANT command has two basic variants: one\",\n        \"synopsis\": \"\\nGRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { [ TABLE ] table_name [, ...]\\n         | ALL TABLES IN SCHEMA schema_name [, ...] }\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [",
                      "markdown": "`    RELATIVE count\\ncount\\n    ALL\\n    FORWARD\\n    FORWARD count\\n    FORWARD ALL\\n    BACKWARD\\n    BACKWARD count\\n    BACKWARD ALL\\n\",\n    },\n    \"GRANT\": {\n        \"description\": \"Description\\n   The GRANT command has two basic variants: one\",\n        \"synopsis\": \"\\nGRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON { [ TABLE ] table_name [, ...]\\n         | ALL TABLES IN SCHEMA schema_name [, ...] }\\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 421,
                  "endLine": 304,
                  "endColumn": 429,
                  "snippet": {
                    "text": "ble_name\\n    [ FROM referenced_table_name ]\\n    [ NOT DEFERRABLE | [ DEFERRABLE ] [ INITIALLY IMMEDIATE | INITIALLY DEFERRED ] ]\\n    [ FOR [ EACH ] { ROW | STATEMENT } ]\\n    [ WHEN ( condition ) ]\\n    EXECUTE PROCEDURE function_name ( arguments )\\n\\nwhere event can be one of:\\n\\n    INSERT\\n    UPDATE [ OF column_name [, ... ] ]\\n    DELETE\\n    TRUNCATE\\n\",\n    },\n    \"CREATE TSCONFIG\": {\n        \"description\": \"Description\\nCREATE TEXT SEARCH CONFIGURATION creates a new text\",\n        \"synopsis\": \"\\nCREATE TEXT SEARCH CONFIGURATION name (\\n    PARSER = parser_name |\\n    COPY = source_config\\n)",
                    "rendered": {
                      "text": "ble_name\\n    [ FROM referenced_table_name ]\\n    [ NOT DEFERRABLE | [ DEFERRABLE ] [ INITIALLY IMMEDIATE | INITIALLY DEFERRED ] ]\\n    [ FOR [ EACH ] { ROW | STATEMENT } ]\\n    [ WHEN ( condition ) ]\\n    EXECUTE PROCEDURE function_name ( arguments )\\n\\nwhere event can be one of:\\n\\n    INSERT\\n    UPDATE [ OF column_name [, ... ] ]\\n    DELETE\\n    TRUNCATE\\n\",\n    },\n    \"CREATE TSCONFIG\": {\n        \"description\": \"Description\\nCREATE TEXT SEARCH CONFIGURATION creates a new text\",\n        \"synopsis\": \"\\nCREATE TEXT SEARCH CONFIGURATION name (\\n    PARSER = parser_name |\\n    COPY = source_config\\n)",
                      "markdown": "`ble_name\\n    [ FROM referenced_table_name ]\\n    [ NOT DEFERRABLE | [ DEFERRABLE ] [ INITIALLY IMMEDIATE | INITIALLY DEFERRED ] ]\\n    [ FOR [ EACH ] { ROW | STATEMENT } ]\\n    [ WHEN ( condition ) ]\\n    EXECUTE PROCEDURE function_name ( arguments )\\n\\nwhere event can be one of:\\n\\n    INSERT\\n    UPDATE [ OF column_name [, ... ] ]\\n    DELETE\\n    TRUNCATE\\n\",\n    },\n    \"CREATE TSCONFIG\": {\n        \"description\": \"Description\\nCREATE TEXT SEARCH CONFIGURATION creates a new text\",\n        \"synopsis\": \"\\nCREATE TEXT SEARCH CONFIGURATION name (\\n    PARSER = parser_name |\\n    COPY = source_config\\n)`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 1820,
                  "endLine": 288,
                  "endColumn": 1828,
                  "snippet": {
                    "text": "dex_parameters |\\n  EXCLUDE [ USING index_method ] ( exclude_element WITH operator [, ... ] ) index_parameters [ WHERE ( predicate ) ] |\\n  FOREIGN KEY ( column_name [, ... ] ) REFERENCES reftable [ ( refcolumn [, ... ] ) ]\\n    [ MATCH FULL | MATCH PARTIAL | MATCH SIMPLE ] [ ON DELETE action ] [ ON UPDATE action ] }\\n[ DEFERRABLE | NOT DEFERRABLE ] [ INITIALLY DEFERRED | INITIALLY IMMEDIATE ]\\n\\nand like_option is:\\n\\n{ INCLUDING | EXCLUDING } { DEFAULTS | CONSTRAINTS | INDEXES | STORAGE | COMMENTS | ALL }\\n\\nindex_parameters in UNIQUE, PRIMARY KEY, and EXCLUDE constraints are:\\n\\n[ WITH ( storage_pa",
                    "rendered": {
                      "text": "dex_parameters |\\n  EXCLUDE [ USING index_method ] ( exclude_element WITH operator [, ... ] ) index_parameters [ WHERE ( predicate ) ] |\\n  FOREIGN KEY ( column_name [, ... ] ) REFERENCES reftable [ ( refcolumn [, ... ] ) ]\\n    [ MATCH FULL | MATCH PARTIAL | MATCH SIMPLE ] [ ON DELETE action ] [ ON UPDATE action ] }\\n[ DEFERRABLE | NOT DEFERRABLE ] [ INITIALLY DEFERRED | INITIALLY IMMEDIATE ]\\n\\nand like_option is:\\n\\n{ INCLUDING | EXCLUDING } { DEFAULTS | CONSTRAINTS | INDEXES | STORAGE | COMMENTS | ALL }\\n\\nindex_parameters in UNIQUE, PRIMARY KEY, and EXCLUDE constraints are:\\n\\n[ WITH ( storage_pa",
                      "markdown": "`dex_parameters |\\n  EXCLUDE [ USING index_method ] ( exclude_element WITH operator [, ... ] ) index_parameters [ WHERE ( predicate ) ] |\\n  FOREIGN KEY ( column_name [, ... ] ) REFERENCES reftable [ ( refcolumn [, ... ] ) ]\\n    [ MATCH FULL | MATCH PARTIAL | MATCH SIMPLE ] [ ON DELETE action ] [ ON UPDATE action ] }\\n[ DEFERRABLE | NOT DEFERRABLE ] [ INITIALLY DEFERRED | INITIALLY IMMEDIATE ]\\n\\nand like_option is:\\n\\n{ INCLUDING | EXCLUDING } { DEFAULTS | CONSTRAINTS | INDEXES | STORAGE | COMMENTS | ALL }\\n\\nindex_parameters in UNIQUE, PRIMARY KEY, and EXCLUDE constraints are:\\n\\n[ WITH ( storage_pa`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 1224,
                  "endLine": 288,
                  "endColumn": 1232,
                  "snippet": {
                    "text": "CONSTRAINT constraint_name ]\\n{ NOT NULL |\\n  NULL |\\n  CHECK ( expression ) [ NO INHERIT ] |\\n  DEFAULT default_expr |\\n  UNIQUE index_parameters |\\n  PRIMARY KEY index_parameters |\\n  REFERENCES reftable [ ( refcolumn ) ] [ MATCH FULL | MATCH PARTIAL | MATCH SIMPLE ]\\n    [ ON DELETE action ] [ ON UPDATE action ] }\\n[ DEFERRABLE | NOT DEFERRABLE ] [ INITIALLY DEFERRED | INITIALLY IMMEDIATE ]\\n\\nand table_constraint is:\\n\\n[ CONSTRAINT constraint_name ]\\n{ CHECK ( expression ) [ NO INHERIT ] |\\n  UNIQUE ( column_name [, ... ] ) index_parameters |\\n  PRIMARY KEY ( column_name [, ... ] ) index_paramete",
                    "rendered": {
                      "text": "CONSTRAINT constraint_name ]\\n{ NOT NULL |\\n  NULL |\\n  CHECK ( expression ) [ NO INHERIT ] |\\n  DEFAULT default_expr |\\n  UNIQUE index_parameters |\\n  PRIMARY KEY index_parameters |\\n  REFERENCES reftable [ ( refcolumn ) ] [ MATCH FULL | MATCH PARTIAL | MATCH SIMPLE ]\\n    [ ON DELETE action ] [ ON UPDATE action ] }\\n[ DEFERRABLE | NOT DEFERRABLE ] [ INITIALLY DEFERRED | INITIALLY IMMEDIATE ]\\n\\nand table_constraint is:\\n\\n[ CONSTRAINT constraint_name ]\\n{ CHECK ( expression ) [ NO INHERIT ] |\\n  UNIQUE ( column_name [, ... ] ) index_parameters |\\n  PRIMARY KEY ( column_name [, ... ] ) index_paramete",
                      "markdown": "`CONSTRAINT constraint_name ]\\n{ NOT NULL |\\n  NULL |\\n  CHECK ( expression ) [ NO INHERIT ] |\\n  DEFAULT default_expr |\\n  UNIQUE index_parameters |\\n  PRIMARY KEY index_parameters |\\n  REFERENCES reftable [ ( refcolumn ) ] [ MATCH FULL | MATCH PARTIAL | MATCH SIMPLE ]\\n    [ ON DELETE action ] [ ON UPDATE action ] }\\n[ DEFERRABLE | NOT DEFERRABLE ] [ INITIALLY DEFERRED | INITIALLY IMMEDIATE ]\\n\\nand table_constraint is:\\n\\n[ CONSTRAINT constraint_name ]\\n{ CHECK ( expression ) [ NO INHERIT ] |\\n  UNIQUE ( column_name [, ... ] ) index_parameters |\\n  PRIMARY KEY ( column_name [, ... ] ) index_paramete`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 237,
                  "endLine": 272,
                  "endColumn": 245,
                  "snippet": {
                    "text": "    },\n    \"CREATE RULE\": {\n        \"description\": \"Description\\nCREATE RULE defines a new rule applying to a specified\",\n        \"synopsis\": \"\\nCREATE [ OR REPLACE ] RULE name AS ON event\\n    TO table_name [ WHERE condition ]\\n    DO [ ALSO | INSTEAD ] { NOTHING | command | ( command ; command ... ) }\\n\\nwhere event can be one of:\\n\\n    SELECT | INSERT | UPDATE | DELETE\\n\",\n    },\n    \"CREATE SCHEMA\": {\n        \"description\": \"Description\\nCREATE SCHEMA enters a new schema\",\n",
                    "rendered": {
                      "text": "    },\n    \"CREATE RULE\": {\n        \"description\": \"Description\\nCREATE RULE defines a new rule applying to a specified\",\n        \"synopsis\": \"\\nCREATE [ OR REPLACE ] RULE name AS ON event\\n    TO table_name [ WHERE condition ]\\n    DO [ ALSO | INSTEAD ] { NOTHING | command | ( command ; command ... ) }\\n\\nwhere event can be one of:\\n\\n    SELECT | INSERT | UPDATE | DELETE\\n\",\n    },\n    \"CREATE SCHEMA\": {\n        \"description\": \"Description\\nCREATE SCHEMA enters a new schema\",\n",
                      "markdown": "`    },\n    \"CREATE RULE\": {\n        \"description\": \"Description\\nCREATE RULE defines a new rule applying to a specified\",\n        \"synopsis\": \"\\nCREATE [ OR REPLACE ] RULE name AS ON event\\n    TO table_name [ WHERE condition ]\\n    DO [ ALSO | INSTEAD ] { NOTHING | command | ( command ; command ... ) }\\n\\nwhere event can be one of:\\n\\n    SELECT | INSERT | UPDATE | DELETE\\n\",\n    },\n    \"CREATE SCHEMA\": {\n        \"description\": \"Description\\nCREATE SCHEMA enters a new schema\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 92,
                  "endLine": 264,
                  "endColumn": 100,
                  "snippet": {
                    "text": "    },\n    \"CREATE POLICY\": {\n        \"description\": \"Description\\n   The CREATE POLICY command defines a new policy for a\",\n        \"synopsis\": \"\\nCREATE POLICY name ON table_name\\n    [ FOR { ALL | SELECT | INSERT | UPDATE | DELETE } ]\\n    [ TO { role_name | PUBLIC | CURRENT_USER | SESSION_USER } [, ...] ]\\n    [ USING ( using_expression ) ]\\n    [ WITH CHECK ( check_expression ) ]\\n\",\n    },\n    \"CREATE ROLE\": {\n        \"description\": \"Description\\nCREATE ROLE adds a new role to a\",\n",
                    "rendered": {
                      "text": "    },\n    \"CREATE POLICY\": {\n        \"description\": \"Description\\n   The CREATE POLICY command defines a new policy for a\",\n        \"synopsis\": \"\\nCREATE POLICY name ON table_name\\n    [ FOR { ALL | SELECT | INSERT | UPDATE | DELETE } ]\\n    [ TO { role_name | PUBLIC | CURRENT_USER | SESSION_USER } [, ...] ]\\n    [ USING ( using_expression ) ]\\n    [ WITH CHECK ( check_expression ) ]\\n\",\n    },\n    \"CREATE ROLE\": {\n        \"description\": \"Description\\nCREATE ROLE adds a new role to a\",\n",
                      "markdown": "`    },\n    \"CREATE POLICY\": {\n        \"description\": \"Description\\n   The CREATE POLICY command defines a new policy for a\",\n        \"synopsis\": \"\\nCREATE POLICY name ON table_name\\n    [ FOR { ALL | SELECT | INSERT | UPDATE | DELETE } ]\\n    [ TO { role_name | PUBLIC | CURRENT_USER | SESSION_USER } [, ...] ]\\n    [ USING ( using_expression ) ]\\n    [ WITH CHECK ( check_expression ) ]\\n\",\n    },\n    \"CREATE ROLE\": {\n        \"description\": \"Description\\nCREATE ROLE adds a new role to a\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 95,
                  "endLine": 163,
                  "endColumn": 99,
                  "snippet": {
                    "text": "        \"synopsis\": \"\\nBEGIN [ WORK | TRANSACTION ] [ transaction_mode [, ...] ]\\n\\nwhere transaction_mode is one of:\\n\\n    ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED }\\n    READ WRITE | READ ONLY\\n    [ NOT ] DEFERRABLE\\n\",\n    },\n    \"CHECKPOINT\": {\n        \"description\": \"Description\\n   A checkpoint is a point in the transaction log sequence at which\",\n        \"synopsis\": \"\\nCHECKPOINT\\n\",\n    },\n    \"CLOSE\": {\n",
                    "rendered": {
                      "text": "        \"synopsis\": \"\\nBEGIN [ WORK | TRANSACTION ] [ transaction_mode [, ...] ]\\n\\nwhere transaction_mode is one of:\\n\\n    ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED }\\n    READ WRITE | READ ONLY\\n    [ NOT ] DEFERRABLE\\n\",\n    },\n    \"CHECKPOINT\": {\n        \"description\": \"Description\\n   A checkpoint is a point in the transaction log sequence at which\",\n        \"synopsis\": \"\\nCHECKPOINT\\n\",\n    },\n    \"CLOSE\": {\n",
                      "markdown": "`        \"synopsis\": \"\\nBEGIN [ WORK | TRANSACTION ] [ transaction_mode [, ...] ]\\n\\nwhere transaction_mode is one of:\\n\\n    ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED }\\n    READ WRITE | READ ONLY\\n    [ NOT ] DEFERRABLE\\n\",\n    },\n    \"CHECKPOINT\": {\n        \"description\": \"Description\\n   A checkpoint is a point in the transaction log sequence at which\",\n        \"synopsis\": \"\\nCHECKPOINT\\n\",\n    },\n    \"CLOSE\": {\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 43,
                  "endLine": 36,
                  "endColumn": 51,
                  "snippet": {
                    "text": " ]\\nALTER EVENT TRIGGER name OWNER TO { new_owner | CURRENT_USER | SESSION_USER }\\nALTER EVENT TRIGGER name RENAME TO new_name\\n\",\n    },\n    \"ALTER EXTENSION\": {\n        \"description\": \"Description\\nALTER EXTENSION changes the definition of an installed\",\n        \"synopsis\": \"\\nALTER EXTENSION name UPDATE [ TO new_version ]\\nALTER EXTENSION name SET SCHEMA new_schema\\nALTER EXTENSION name ADD member_object\\nALTER EXTENSION name DROP member_object\\nwhere member_object is:\\n\\n  AGGREGATE aggregate_name ( aggregate_signature ) |\\n  CAST (source_type AS target_type) |\\n  COLLATION object_name |\\n  CONVER",
                    "rendered": {
                      "text": " ]\\nALTER EVENT TRIGGER name OWNER TO { new_owner | CURRENT_USER | SESSION_USER }\\nALTER EVENT TRIGGER name RENAME TO new_name\\n\",\n    },\n    \"ALTER EXTENSION\": {\n        \"description\": \"Description\\nALTER EXTENSION changes the definition of an installed\",\n        \"synopsis\": \"\\nALTER EXTENSION name UPDATE [ TO new_version ]\\nALTER EXTENSION name SET SCHEMA new_schema\\nALTER EXTENSION name ADD member_object\\nALTER EXTENSION name DROP member_object\\nwhere member_object is:\\n\\n  AGGREGATE aggregate_name ( aggregate_signature ) |\\n  CAST (source_type AS target_type) |\\n  COLLATION object_name |\\n  CONVER",
                      "markdown": "` ]\\nALTER EVENT TRIGGER name OWNER TO { new_owner | CURRENT_USER | SESSION_USER }\\nALTER EVENT TRIGGER name RENAME TO new_name\\n\",\n    },\n    \"ALTER EXTENSION\": {\n        \"description\": \"Description\\nALTER EXTENSION changes the definition of an installed\",\n        \"synopsis\": \"\\nALTER EXTENSION name UPDATE [ TO new_version ]\\nALTER EXTENSION name SET SCHEMA new_schema\\nALTER EXTENSION name ADD member_object\\nALTER EXTENSION name DROP member_object\\nwhere member_object is:\\n\\n  AGGREGATE aggregate_name ( aggregate_signature ) |\\n  CAST (source_type AS target_type) |\\n  COLLATION object_name |\\n  CONVER`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 1136,
                  "endLine": 24,
                  "endColumn": 1144,
                  "snippet": {
                    "text": "N ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON TABLES\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON SEQUENCES\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { EXECUTE | ALL [ PRIVILEGES ] }\\n    ON FUNCTIONS\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]",
                    "rendered": {
                      "text": "N ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON TABLES\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON SEQUENCES\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { EXECUTE | ALL [ PRIVILEGES ] }\\n    ON FUNCTIONS\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]",
                      "markdown": "`N ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON TABLES\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON SEQUENCES\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { EXECUTE | ALL [ PRIVILEGES ] }\\n    ON FUNCTIONS\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 897,
                  "endLine": 24,
                  "endColumn": 905,
                  "snippet": {
                    "text": "ECUTE | ALL [ PRIVILEGES ] }\\n    ON FUNCTIONS\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { USAGE | ALL [ PRIVILEGES ] }\\n    ON TYPES\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON TABLES\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON SEQUENCES\\n    ",
                    "rendered": {
                      "text": "ECUTE | ALL [ PRIVILEGES ] }\\n    ON FUNCTIONS\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { USAGE | ALL [ PRIVILEGES ] }\\n    ON TYPES\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON TABLES\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON SEQUENCES\\n    ",
                      "markdown": "`ECUTE | ALL [ PRIVILEGES ] }\\n    ON FUNCTIONS\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { USAGE | ALL [ PRIVILEGES ] }\\n    ON TYPES\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON TABLES\\n    FROM { [ GROUP ] role_name | PUBLIC } [, ...]\\n    [ CASCADE | RESTRICT ]\\n\\nREVOKE [ GRANT OPTION FOR ]\\n    { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON SEQUENCES\\n    `"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 449,
                  "endLine": 24,
                  "endColumn": 457,
                  "snippet": {
                    "text": "ted_grant_or_revoke\\nwhere abbreviated_grant_or_revoke is one of:\\n\\nGRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON TABLES\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON SEQUENCES\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { EXECUTE | ALL [ PRIVILEGES ] }\\n    ON FUNCTIONS\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { USAGE | ALL [ PRIVILEGES ] }\\n ",
                    "rendered": {
                      "text": "ted_grant_or_revoke\\nwhere abbreviated_grant_or_revoke is one of:\\n\\nGRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON TABLES\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON SEQUENCES\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { EXECUTE | ALL [ PRIVILEGES ] }\\n    ON FUNCTIONS\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { USAGE | ALL [ PRIVILEGES ] }\\n ",
                      "markdown": "`ted_grant_or_revoke\\nwhere abbreviated_grant_or_revoke is one of:\\n\\nGRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON TABLES\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON SEQUENCES\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { EXECUTE | ALL [ PRIVILEGES ] }\\n    ON FUNCTIONS\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { USAGE | ALL [ PRIVILEGES ] }\\n `"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 245,
                  "endLine": 24,
                  "endColumn": 253,
                  "snippet": {
                    "text": " DEFAULT PRIVILEGES allows you to set the privileges\",\n        \"synopsis\": \"\\nALTER DEFAULT PRIVILEGES\\n    [ FOR { ROLE | USER } target_role [, ...] ]\\n    [ IN SCHEMA schema_name [, ...] ]\\n    abbreviated_grant_or_revoke\\nwhere abbreviated_grant_or_revoke is one of:\\n\\nGRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON TABLES\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON SEQUENCES\\n    TO { [ GROUP ] role_name | PUBLIC }",
                    "rendered": {
                      "text": " DEFAULT PRIVILEGES allows you to set the privileges\",\n        \"synopsis\": \"\\nALTER DEFAULT PRIVILEGES\\n    [ FOR { ROLE | USER } target_role [, ...] ]\\n    [ IN SCHEMA schema_name [, ...] ]\\n    abbreviated_grant_or_revoke\\nwhere abbreviated_grant_or_revoke is one of:\\n\\nGRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON TABLES\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON SEQUENCES\\n    TO { [ GROUP ] role_name | PUBLIC }",
                      "markdown": "` DEFAULT PRIVILEGES allows you to set the privileges\",\n        \"synopsis\": \"\\nALTER DEFAULT PRIVILEGES\\n    [ FOR { ROLE | USER } target_role [, ...] ]\\n    [ IN SCHEMA schema_name [, ...] ]\\n    abbreviated_grant_or_revoke\\nwhere abbreviated_grant_or_revoke is one of:\\n\\nGRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON TABLES\\n    TO { [ GROUP ] role_name | PUBLIC } [, ...] [ WITH GRANT OPTION ]\\n\\nGRANT { { USAGE | SELECT | UPDATE }\\n    [, ...] | ALL [ PRIVILEGES ] }\\n    ON SEQUENCES\\n    TO { [ GROUP ] role_name | PUBLIC }`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 620,
                  "startColumn": 136,
                  "endLine": 620,
                  "endColumn": 142,
                  "snippet": {
                    "text": "    },\n    \"SET\": {\n        \"description\": \"Description\\n   The SET command changes run-time configuration\",\n        \"synopsis\": \"\\nSET [ SESSION | LOCAL ] configuration_parameter { TO | = } { value | 'value' | DEFAULT }\\nSET [ SESSION | LOCAL ] TIME ZONE { timezone | LOCAL | DEFAULT }\\n\",\n    },\n    \"SET CONSTRAINTS\": {\n        \"description\": \"Description\\nSET CONSTRAINTS sets the behavior of constraint\",\n",
                    "rendered": {
                      "text": "    },\n    \"SET\": {\n        \"description\": \"Description\\n   The SET command changes run-time configuration\",\n        \"synopsis\": \"\\nSET [ SESSION | LOCAL ] configuration_parameter { TO | = } { value | 'value' | DEFAULT }\\nSET [ SESSION | LOCAL ] TIME ZONE { timezone | LOCAL | DEFAULT }\\n\",\n    },\n    \"SET CONSTRAINTS\": {\n        \"description\": \"Description\\nSET CONSTRAINTS sets the behavior of constraint\",\n",
                      "markdown": "`    },\n    \"SET\": {\n        \"description\": \"Description\\n   The SET command changes run-time configuration\",\n        \"synopsis\": \"\\nSET [ SESSION | LOCAL ] configuration_parameter { TO | = } { value | 'value' | DEFAULT }\\nSET [ SESSION | LOCAL ] TIME ZONE { timezone | LOCAL | DEFAULT }\\n\",\n    },\n    \"SET CONSTRAINTS\": {\n        \"description\": \"Description\\nSET CONSTRAINTS sets the behavior of constraint\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/help/commands.py"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 47,
                  "endLine": 556,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    },\n    \"PGBENCH\": {\n        \"description\": \"Description\\npgbench is a simple program for running benchmark\",\n        \"synopsis\": \"\\nclient_id transaction_no time file_no time_epoch time_us schedule_lag\\n\",\n    },\n    \"PREPARE\": {\n        \"description\": \"Description\\nPREPARE creates a prepared statement. A prepared\",\n",
                    "rendered": {
                      "text": "    },\n    \"PGBENCH\": {\n        \"description\": \"Description\\npgbench is a simple program for running benchmark\",\n        \"synopsis\": \"\\nclient_id transaction_no time file_no time_epoch time_us schedule_lag\\n\",\n    },\n    \"PREPARE\": {\n        \"description\": \"Description\\nPREPARE creates a prepared statement. A prepared\",\n",
                      "markdown": "`    },\n    \"PGBENCH\": {\n        \"description\": \"Description\\npgbench is a simple program for running benchmark\",\n        \"synopsis\": \"\\nclient_id transaction_no time file_no time_epoch time_us schedule_lag\\n\",\n    },\n    \"PREPARE\": {\n        \"description\": \"Description\\nPREPARE creates a prepared statement. A prepared\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/namedqueries.py"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 53,
                  "endLine": 47,
                  "endColumn": 58,
                  "snippet": {
                    "text": "        return self.config.get(self.section_name, [])\n\n    def get(self, name):\n        return self.config.get(self.section_name, {}).get(name, None)\n\n    def save(self, name, query):\n        if self.section_name not in self.config:\n",
                    "rendered": {
                      "text": "        return self.config.get(self.section_name, [])\n\n    def get(self, name):\n        return self.config.get(self.section_name, {}).get(name, None)\n\n    def save(self, name, query):\n        if self.section_name not in self.config:\n",
                      "markdown": "`        return self.config.get(self.section_name, [])\n\n    def get(self, name):\n        return self.config.get(self.section_name, {}).get(name, None)\n\n    def save(self, name, query):\n        if self.section_name not in self.config:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/namedqueries.py"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 26,
                  "endLine": 47,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        return self.config.get(self.section_name, [])\n\n    def get(self, name):\n        return self.config.get(self.section_name, {}).get(name, None)\n\n    def save(self, name, query):\n        if self.section_name not in self.config:\n",
                    "rendered": {
                      "text": "        return self.config.get(self.section_name, [])\n\n    def get(self, name):\n        return self.config.get(self.section_name, {}).get(name, None)\n\n    def save(self, name, query):\n        if self.section_name not in self.config:\n",
                      "markdown": "`        return self.config.get(self.section_name, [])\n\n    def get(self, name):\n        return self.config.get(self.section_name, {}).get(name, None)\n\n    def save(self, name, query):\n        if self.section_name not in self.config:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/namedqueries.py"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 26,
                  "endLine": 44,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        return NamedQueries(config)\n\n    def list(self):\n        return self.config.get(self.section_name, [])\n\n    def get(self, name):\n        return self.config.get(self.section_name, {}).get(name, None)\n",
                    "rendered": {
                      "text": "        return NamedQueries(config)\n\n    def list(self):\n        return self.config.get(self.section_name, [])\n\n    def get(self, name):\n        return self.config.get(self.section_name, {}).get(name, None)\n",
                      "markdown": "`        return NamedQueries(config)\n\n    def list(self):\n        return self.config.get(self.section_name, [])\n\n    def get(self, name):\n        return self.config.get(self.section_name, {}).get(name, None)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial-2.1.2-py3.12.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 6,
                  "endLine": 98,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nOmniDB_: An web tool for database management\n\nIf you find this module useful and include it in your project, I'll be happy\nto know about it and list it here.\n\n.. |Build Status| image:: https://github.com/dbcli/pgspecial/workflows/pgspecial/badge.svg\n",
                    "rendered": {
                      "text": "\nOmniDB_: An web tool for database management\n\nIf you find this module useful and include it in your project, I'll be happy\nto know about it and list it here.\n\n.. |Build Status| image:: https://github.com/dbcli/pgspecial/workflows/pgspecial/badge.svg\n",
                      "markdown": "`\nOmniDB_: An web tool for database management\n\nIf you find this module useful and include it in your project, I'll be happy\nto know about it and list it here.\n\n.. |Build Status| image:: https://github.com/dbcli/pgspecial/workflows/pgspecial/badge.svg\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial-2.1.2-py3.12.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 5,
                  "endLine": 43,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n::\n\n    $ pip install pgspecial\n\n\nUsage\n",
                    "rendered": {
                      "text": "\n::\n\n    $ pip install pgspecial\n\n\nUsage\n",
                      "markdown": "`\n::\n\n    $ pip install pgspecial\n\n\nUsage\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/dbcommands.py"
                },
                "region": {
                  "startLine": 1018,
                  "startColumn": 42,
                  "endLine": 1018,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    if cur.rowcount > 0:\n        tableinfo = TableInfo._make(cur.fetchone())\n    else:\n        return None, None, None, f\"Did not find any relation with OID {oid}.\"\n\n    # If it's a seq, fetch it's value and store it for later.\n    if tableinfo.relkind == \"S\":\n",
                    "rendered": {
                      "text": "    if cur.rowcount > 0:\n        tableinfo = TableInfo._make(cur.fetchone())\n    else:\n        return None, None, None, f\"Did not find any relation with OID {oid}.\"\n\n    # If it's a seq, fetch it's value and store it for later.\n    if tableinfo.relkind == \"S\":\n",
                      "markdown": "`    if cur.rowcount > 0:\n        tableinfo = TableInfo._make(cur.fetchone())\n    else:\n        return None, None, None, f\"Did not find any relation with OID {oid}.\"\n\n    # If it's a seq, fetch it's value and store it for later.\n    if tableinfo.relkind == \"S\":\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/dbcommands.py"
                },
                "region": {
                  "startLine": 930,
                  "startColumn": 44,
                  "endLine": 930,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    log.debug(\"%s, %s\", sql, params)\n    cur.execute(sql, params)\n    if not (cur.rowcount > 0):\n        return [(None, None, None, f\"Did not find any relation named {pattern}.\")]\n\n    results = []\n    for oid, nspname, relname in cur.fetchall():\n",
                    "rendered": {
                      "text": "    log.debug(\"%s, %s\", sql, params)\n    cur.execute(sql, params)\n    if not (cur.rowcount > 0):\n        return [(None, None, None, f\"Did not find any relation named {pattern}.\")]\n\n    results = []\n    for oid, nspname, relname in cur.fetchall():\n",
                      "markdown": "`    log.debug(\"%s, %s\", sql, params)\n    cur.execute(sql, params)\n    if not (cur.rowcount > 0):\n        return [(None, None, None, f\"Did not find any relation named {pattern}.\")]\n\n    results = []\n    for oid, nspname, relname in cur.fetchall():\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/dbcommands.py"
                },
                "region": {
                  "startLine": 860,
                  "startColumn": 24,
                  "endLine": 860,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                None,\n                None,\n                None,\n                'Did not find any results for pattern \"{}\".'.format(pattern),\n            )\n        return\n\n",
                    "rendered": {
                      "text": "                None,\n                None,\n                None,\n                'Did not find any results for pattern \"{}\".'.format(pattern),\n            )\n        return\n\n",
                      "markdown": "`                None,\n                None,\n                None,\n                'Did not find any results for pattern \"{}\".'.format(pattern),\n            )\n        return\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/dbcommands.py"
                },
                "region": {
                  "startLine": 397,
                  "startColumn": 47,
                  "endLine": 397,
                  "endColumn": 53,
                  "snippet": {
                    "text": "                cur, headers, status = _describe_extension(cur, oid)\n                yield title, cur, headers, status\n        else:\n            yield None, None, None, f\"\"\"Did not find any extension named \"{pattern}\".\"\"\"\n        return\n\n    sql = SQL(\n",
                    "rendered": {
                      "text": "                cur, headers, status = _describe_extension(cur, oid)\n                yield title, cur, headers, status\n        else:\n            yield None, None, None, f\"\"\"Did not find any extension named \"{pattern}\".\"\"\"\n        return\n\n    sql = SQL(\n",
                      "markdown": "`                cur, headers, status = _describe_extension(cur, oid)\n                yield title, cur, headers, status\n        else:\n            yield None, None, None, f\"\"\"Did not find any extension named \"{pattern}\".\"\"\"\n        return\n\n    sql = SQL(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/main.py"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 31,
                  "endLine": 50,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        self.expanded_output = False\n        self.auto_expand = False\n        self.pager_config = PAGER_ALWAYS\n        self.pager = os.environ.get(\"PAGER\", \"\")\n\n        self.register(\n            self.show_help, \"\\\\?\", \"\\\\?\", \"Show Commands.\", arg_type=PARSED_QUERY\n",
                    "rendered": {
                      "text": "        self.expanded_output = False\n        self.auto_expand = False\n        self.pager_config = PAGER_ALWAYS\n        self.pager = os.environ.get(\"PAGER\", \"\")\n\n        self.register(\n            self.show_help, \"\\\\?\", \"\\\\?\", \"Show Commands.\", arg_type=PARSED_QUERY\n",
                      "markdown": "`        self.expanded_output = False\n        self.auto_expand = False\n        self.pager_config = PAGER_ALWAYS\n        self.pager = os.environ.get(\"PAGER\", \"\")\n\n        self.register(\n            self.show_help, \"\\\\?\", \"\\\\?\", \"Show Commands.\", arg_type=PARSED_QUERY\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/main.py"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 24,
                  "endLine": 50,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        self.expanded_output = False\n        self.auto_expand = False\n        self.pager_config = PAGER_ALWAYS\n        self.pager = os.environ.get(\"PAGER\", \"\")\n\n        self.register(\n            self.show_help, \"\\\\?\", \"\\\\?\", \"Show Commands.\", arg_type=PARSED_QUERY\n",
                    "rendered": {
                      "text": "        self.expanded_output = False\n        self.auto_expand = False\n        self.pager_config = PAGER_ALWAYS\n        self.pager = os.environ.get(\"PAGER\", \"\")\n\n        self.register(\n            self.show_help, \"\\\\?\", \"\\\\?\", \"Show Commands.\", arg_type=PARSED_QUERY\n",
                      "markdown": "`        self.expanded_output = False\n        self.auto_expand = False\n        self.pager_config = PAGER_ALWAYS\n        self.pager = os.environ.get(\"PAGER\", \"\")\n\n        self.register(\n            self.show_help, \"\\\\?\", \"\\\\?\", \"Show Commands.\", arg_type=PARSED_QUERY\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/main.py"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 7,
                  "endLine": 297,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        handler, syntax, description, arg_type, hidden, case_sensitive\n    )\n    for alias in aliases:\n        cmd = alias.lower() if not case_sensitive else alias\n        command_dict[cmd] = SpecialCommand(\n            handler,\n            syntax,\n",
                    "rendered": {
                      "text": "        handler, syntax, description, arg_type, hidden, case_sensitive\n    )\n    for alias in aliases:\n        cmd = alias.lower() if not case_sensitive else alias\n        command_dict[cmd] = SpecialCommand(\n            handler,\n            syntax,\n",
                      "markdown": "`        handler, syntax, description, arg_type, hidden, case_sensitive\n    )\n    for alias in aliases:\n        cmd = alias.lower() if not case_sensitive else alias\n        command_dict[cmd] = SpecialCommand(\n            handler,\n            syntax,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/main.py"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 3,
                  "endLine": 292,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    aliases=(),\n    command_dict=None,\n):\n    cmd = command.lower() if not case_sensitive else command\n    command_dict[cmd] = SpecialCommand(\n        handler, syntax, description, arg_type, hidden, case_sensitive\n    )\n",
                    "rendered": {
                      "text": "    aliases=(),\n    command_dict=None,\n):\n    cmd = command.lower() if not case_sensitive else command\n    command_dict[cmd] = SpecialCommand(\n        handler, syntax, description, arg_type, hidden, case_sensitive\n    )\n",
                      "markdown": "`    aliases=(),\n    command_dict=None,\n):\n    cmd = command.lower() if not case_sensitive else command\n    command_dict[cmd] = SpecialCommand(\n        handler, syntax, description, arg_type, hidden, case_sensitive\n    )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/iocommands.py"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 33,
                  "endLine": 302,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n    headers = [\"Name\", \"Query\"]\n    rows = [\n        (r, NamedQueries.instance.get(r))\n        for r in NamedQueries.instance.list()\n        if re.search(name, r)\n    ]\n",
                    "rendered": {
                      "text": "\n    headers = [\"Name\", \"Query\"]\n    rows = [\n        (r, NamedQueries.instance.get(r))\n        for r in NamedQueries.instance.list()\n        if re.search(name, r)\n    ]\n",
                      "markdown": "`\n    headers = [\"Name\", \"Query\"]\n    rows = [\n        (r, NamedQueries.instance.get(r))\n        for r in NamedQueries.instance.list()\n        if re.search(name, r)\n    ]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/iocommands.py"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 41,
                  "endLine": 274,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        headers = [\"Name\"]\n    else:\n        headers = [\"Name\", \"Query\"]\n        rows = [[r, NamedQueries.instance.get(r)] for r in NamedQueries.instance.list()]\n\n    if not rows:\n        status = NamedQueries.instance.usage\n",
                    "rendered": {
                      "text": "        headers = [\"Name\"]\n    else:\n        headers = [\"Name\", \"Query\"]\n        rows = [[r, NamedQueries.instance.get(r)] for r in NamedQueries.instance.list()]\n\n    if not rows:\n        status = NamedQueries.instance.usage\n",
                      "markdown": "`        headers = [\"Name\"]\n    else:\n        headers = [\"Name\", \"Query\"]\n        rows = [[r, NamedQueries.instance.get(r)] for r in NamedQueries.instance.list()]\n\n    if not rows:\n        status = NamedQueries.instance.usage\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pgspecial-2.1.2-r0.apk/py3-pgspecial-2.1.2-r0/usr/lib/python3.12/site-packages/pgspecial/iocommands.py"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 33,
                  "endLine": 236,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    params = shlex.split(pattern)\n    pattern = params.pop(0)\n\n    query = NamedQueries.instance.get(pattern)\n    title = \"> {}\".format(query)\n    if query is None:\n        message = \"No named query: {}\".format(pattern)\n",
                    "rendered": {
                      "text": "    params = shlex.split(pattern)\n    pattern = params.pop(0)\n\n    query = NamedQueries.instance.get(pattern)\n    title = \"> {}\".format(query)\n    if query is None:\n        message = \"No named query: {}\".format(pattern)\n",
                      "markdown": "`    params = shlex.split(pattern)\n    pattern = params.pop(0)\n\n    query = NamedQueries.instance.get(pattern)\n    title = \"> {}\".format(query)\n    if query is None:\n        message = \"No named query: {}\".format(pattern)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}