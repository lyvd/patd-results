{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1063,
                  "startColumn": 29,
                  "endLine": 1063,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n",
                    "rendered": {
                      "text": "        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n",
                      "markdown": "`        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1028,
                  "startColumn": 21,
                  "endLine": 1028,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to.\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to.\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to.\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 4406,
                  "startColumn": 24,
                  "endLine": 4406,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> dlp.StoredInfoType:\n            r\"\"\"Call the update stored info type method over HTTP.\n\n            Args:\n                request (~.dlp.UpdateStoredInfoTypeRequest):\n",
                    "rendered": {
                      "text": "            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> dlp.StoredInfoType:\n            r\"\"\"Call the update stored info type method over HTTP.\n\n            Args:\n                request (~.dlp.UpdateStoredInfoTypeRequest):\n",
                      "markdown": "`            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> dlp.StoredInfoType:\n            r\"\"\"Call the update stored info type method over HTTP.\n\n            Args:\n                request (~.dlp.UpdateStoredInfoTypeRequest):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 4295,
                  "startColumn": 24,
                  "endLine": 4295,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> dlp.JobTrigger:\n            r\"\"\"Call the update job trigger method over HTTP.\n\n            Args:\n                request (~.dlp.UpdateJobTriggerRequest):\n",
                    "rendered": {
                      "text": "            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> dlp.JobTrigger:\n            r\"\"\"Call the update job trigger method over HTTP.\n\n            Args:\n                request (~.dlp.UpdateJobTriggerRequest):\n",
                      "markdown": "`            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> dlp.JobTrigger:\n            r\"\"\"Call the update job trigger method over HTTP.\n\n            Args:\n                request (~.dlp.UpdateJobTriggerRequest):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 4175,
                  "startColumn": 24,
                  "endLine": 4175,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> dlp.InspectTemplate:\n            r\"\"\"Call the update inspect template method over HTTP.\n\n            Args:\n                request (~.dlp.UpdateInspectTemplateRequest):\n",
                    "rendered": {
                      "text": "            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> dlp.InspectTemplate:\n            r\"\"\"Call the update inspect template method over HTTP.\n\n            Args:\n                request (~.dlp.UpdateInspectTemplateRequest):\n",
                      "markdown": "`            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> dlp.InspectTemplate:\n            r\"\"\"Call the update inspect template method over HTTP.\n\n            Args:\n                request (~.dlp.UpdateInspectTemplateRequest):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 4056,
                  "startColumn": 24,
                  "endLine": 4056,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> dlp.DeidentifyTemplate:\n            r\"\"\"Call the update deidentify\n            template method over HTTP.\n\n                Args:\n",
                    "rendered": {
                      "text": "            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> dlp.DeidentifyTemplate:\n            r\"\"\"Call the update deidentify\n            template method over HTTP.\n\n                Args:\n",
                      "markdown": "`            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> dlp.DeidentifyTemplate:\n            r\"\"\"Call the update deidentify\n            template method over HTTP.\n\n                Args:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 4414,
                  "startColumn": 36,
                  "endLine": 4414,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                UpdateStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                UpdateStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                UpdateStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 4414,
                  "startColumn": 15,
                  "endLine": 4414,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                UpdateStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                UpdateStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                UpdateStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 4302,
                  "startColumn": 36,
                  "endLine": 4302,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                    The request object. Request message for UpdateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request message for UpdateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request message for UpdateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 4302,
                  "startColumn": 15,
                  "endLine": 4302,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                    The request object. Request message for UpdateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request message for UpdateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request message for UpdateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 4183,
                  "startColumn": 36,
                  "endLine": 4183,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                UpdateInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                UpdateInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                UpdateInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 4183,
                  "startColumn": 15,
                  "endLine": 4183,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                UpdateInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                UpdateInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                UpdateInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 4065,
                  "startColumn": 40,
                  "endLine": 4065,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                    UpdateDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    UpdateDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                      "markdown": "`                    UpdateDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 4065,
                  "startColumn": 19,
                  "endLine": 4065,
                  "endColumn": 28,
                  "snippet": {
                    "text": "                    UpdateDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    UpdateDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                      "markdown": "`                    UpdateDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3961,
                  "startColumn": 36,
                  "endLine": 3961,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                    The request object. Request to re-identify an item.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request to re-identify an item.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request to re-identify an item.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3961,
                  "startColumn": 15,
                  "endLine": 3961,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                    The request object. Request to re-identify an item.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request to re-identify an item.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request to re-identify an item.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3862,
                  "startColumn": 36,
                  "endLine": 3862,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                by covering it with a colored rectangle.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                by covering it with a colored rectangle.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                by covering it with a colored rectangle.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3862,
                  "startColumn": 15,
                  "endLine": 3862,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                by covering it with a colored rectangle.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                by covering it with a colored rectangle.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                by covering it with a colored rectangle.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3768,
                  "startColumn": 36,
                  "endLine": 3768,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                ListStoredInfoTypes.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                ListStoredInfoTypes.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                ListStoredInfoTypes.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3768,
                  "startColumn": 15,
                  "endLine": 3768,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                ListStoredInfoTypes.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                ListStoredInfoTypes.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                ListStoredInfoTypes.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3671,
                  "startColumn": 36,
                  "endLine": 3671,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                    The request object. Request message for ListJobTriggers.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request message for ListJobTriggers.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request message for ListJobTriggers.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3671,
                  "startColumn": 15,
                  "endLine": 3671,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                    The request object. Request message for ListJobTriggers.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request message for ListJobTriggers.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request message for ListJobTriggers.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3569,
                  "startColumn": 36,
                  "endLine": 3569,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                ListInspectTemplates.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                ListInspectTemplates.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                ListInspectTemplates.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3569,
                  "startColumn": 15,
                  "endLine": 3569,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                ListInspectTemplates.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                ListInspectTemplates.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                ListInspectTemplates.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3477,
                  "startColumn": 36,
                  "endLine": 3477,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                    The request object. Request for the list of infoTypes.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request for the list of infoTypes.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request for the list of infoTypes.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3477,
                  "startColumn": 15,
                  "endLine": 3477,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                    The request object. Request for the list of infoTypes.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request for the list of infoTypes.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request for the list of infoTypes.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3391,
                  "startColumn": 36,
                  "endLine": 3391,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                jobs.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                jobs.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                jobs.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3391,
                  "startColumn": 15,
                  "endLine": 3391,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                jobs.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                jobs.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                jobs.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3288,
                  "startColumn": 36,
                  "endLine": 3288,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                ListDeidentifyTemplates.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                ListDeidentifyTemplates.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                ListDeidentifyTemplates.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3288,
                  "startColumn": 15,
                  "endLine": 3288,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                ListDeidentifyTemplates.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                ListDeidentifyTemplates.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                ListDeidentifyTemplates.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3188,
                  "startColumn": 36,
                  "endLine": 3188,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                sensitive info in a ContentItem.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                sensitive info in a ContentItem.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                sensitive info in a ContentItem.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3188,
                  "startColumn": 15,
                  "endLine": 3188,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                sensitive info in a ContentItem.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                sensitive info in a ContentItem.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                sensitive info in a ContentItem.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3098,
                  "startColumn": 40,
                  "endLine": 3098,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                    sensitive info in a custom location.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    sensitive info in a custom location.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                      "markdown": "`                    sensitive info in a custom location.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 3098,
                  "startColumn": 19,
                  "endLine": 3098,
                  "endColumn": 28,
                  "snippet": {
                    "text": "                    sensitive info in a custom location.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    sensitive info in a custom location.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                      "markdown": "`                    sensitive info in a custom location.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2997,
                  "startColumn": 36,
                  "endLine": 2997,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                sensitive info in a custom location.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                sensitive info in a custom location.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                sensitive info in a custom location.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2997,
                  "startColumn": 15,
                  "endLine": 2997,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                sensitive info in a custom location.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                sensitive info in a custom location.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                sensitive info in a custom location.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2893,
                  "startColumn": 36,
                  "endLine": 2893,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                GetStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                GetStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                GetStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2893,
                  "startColumn": 15,
                  "endLine": 2893,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                GetStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                GetStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                GetStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2794,
                  "startColumn": 36,
                  "endLine": 2794,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                    The request object. Request message for GetJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request message for GetJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request message for GetJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2794,
                  "startColumn": 15,
                  "endLine": 2794,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                    The request object. Request message for GetJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request message for GetJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request message for GetJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2687,
                  "startColumn": 36,
                  "endLine": 2687,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                GetInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                GetInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                GetInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2687,
                  "startColumn": 15,
                  "endLine": 2687,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                GetInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                GetInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                GetInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2594,
                  "startColumn": 36,
                  "endLine": 2594,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                    The request object. The request message for [DlpJobs.GetDlpJob][].\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. The request message for [DlpJobs.GetDlpJob][].\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. The request message for [DlpJobs.GetDlpJob][].\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2594,
                  "startColumn": 15,
                  "endLine": 2594,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                    The request object. The request message for [DlpJobs.GetDlpJob][].\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. The request message for [DlpJobs.GetDlpJob][].\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. The request message for [DlpJobs.GetDlpJob][].\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2489,
                  "startColumn": 36,
                  "endLine": 2489,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                GetDeidentifyTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                GetDeidentifyTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                GetDeidentifyTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2489,
                  "startColumn": 15,
                  "endLine": 2489,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                GetDeidentifyTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                GetDeidentifyTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                GetDeidentifyTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2405,
                  "startColumn": 36,
                  "endLine": 2405,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                DLP hybrid job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                DLP hybrid job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                DLP hybrid job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2405,
                  "startColumn": 15,
                  "endLine": 2405,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                DLP hybrid job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                DLP hybrid job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                DLP hybrid job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2316,
                  "startColumn": 36,
                  "endLine": 2316,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                DeleteStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                DeleteStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                DeleteStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2316,
                  "startColumn": 15,
                  "endLine": 2316,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                DeleteStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                DeleteStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                DeleteStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2231,
                  "startColumn": 36,
                  "endLine": 2231,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                    The request object. Request message for DeleteJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                    The request object. Request message for DeleteJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                    The request object. Request message for DeleteJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2231,
                  "startColumn": 15,
                  "endLine": 2231,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                    The request object. Request message for DeleteJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                    The request object. Request message for DeleteJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                    The request object. Request message for DeleteJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2143,
                  "startColumn": 36,
                  "endLine": 2143,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                DeleteInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                DeleteInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                DeleteInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2143,
                  "startColumn": 15,
                  "endLine": 2143,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                DeleteInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                DeleteInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                DeleteInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2064,
                  "startColumn": 36,
                  "endLine": 2064,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                DLP job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                DLP job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                DLP job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 2064,
                  "startColumn": 15,
                  "endLine": 2064,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                DLP job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                DLP job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                DLP job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1975,
                  "startColumn": 40,
                  "endLine": 1975,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                    DeleteDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                    DeleteDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                    DeleteDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1975,
                  "startColumn": 19,
                  "endLine": 1975,
                  "endColumn": 28,
                  "snippet": {
                    "text": "                    DeleteDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                    DeleteDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                    DeleteDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1870,
                  "startColumn": 36,
                  "endLine": 1870,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                    The request object. Request to de-identify a ContentItem.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request to de-identify a ContentItem.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request to de-identify a ContentItem.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1870,
                  "startColumn": 15,
                  "endLine": 1870,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                    The request object. Request to de-identify a ContentItem.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request to de-identify a ContentItem.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request to de-identify a ContentItem.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1765,
                  "startColumn": 36,
                  "endLine": 1765,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                CreateStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                CreateStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                CreateStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1765,
                  "startColumn": 15,
                  "endLine": 1765,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                CreateStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                CreateStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                CreateStoredInfoType.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1653,
                  "startColumn": 36,
                  "endLine": 1653,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                    The request object. Request message for CreateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request message for CreateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request message for CreateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1653,
                  "startColumn": 15,
                  "endLine": 1653,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                    The request object. Request message for CreateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request message for CreateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request message for CreateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1534,
                  "startColumn": 36,
                  "endLine": 1534,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                CreateInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                CreateInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                CreateInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1534,
                  "startColumn": 15,
                  "endLine": 1534,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                CreateInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                CreateInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                CreateInspectTemplate.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 36,
                  "endLine": 1431,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                Storage.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                Storage.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                Storage.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 15,
                  "endLine": 1431,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                Storage.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                Storage.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                Storage.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1310,
                  "startColumn": 40,
                  "endLine": 1310,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                    CreateDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    CreateDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                      "markdown": "`                    CreateDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1310,
                  "startColumn": 19,
                  "endLine": 1310,
                  "endColumn": 28,
                  "snippet": {
                    "text": "                    CreateDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    CreateDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                      "markdown": "`                    CreateDeidentifyTemplate.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1220,
                  "startColumn": 36,
                  "endLine": 1220,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                DLP job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                DLP job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                DLP job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1220,
                  "startColumn": 15,
                  "endLine": 1220,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                DLP job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                DLP job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                DLP job.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1115,
                  "startColumn": 36,
                  "endLine": 1115,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                ActivateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                ActivateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                ActivateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1115,
                  "startColumn": 15,
                  "endLine": 1115,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                ActivateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                ActivateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                ActivateJobTrigger.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 1051,
                  "startColumn": 27,
                  "endLine": 1051,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n",
                      "markdown": "`                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 998,
                  "startColumn": 36,
                  "endLine": 998,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n\n    This class defines the same methods as the primary client, so the\n",
                    "rendered": {
                      "text": "    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n\n    This class defines the same methods as the primary client, so the\n",
                      "markdown": "`    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n\n    This class defines the same methods as the primary client, so the\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 994,
                  "startColumn": 7,
                  "endLine": 994,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n",
                    "rendered": {
                      "text": "    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n",
                      "markdown": "`    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 989,
                  "startColumn": 49,
                  "endLine": 989,
                  "endColumn": 58,
                  "snippet": {
                    "text": "class DlpServiceRestTransport(DlpServiceTransport):\n    \"\"\"REST backend transport for DlpService.\n\n    The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n",
                    "rendered": {
                      "text": "class DlpServiceRestTransport(DlpServiceTransport):\n    \"\"\"REST backend transport for DlpService.\n\n    The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n",
                      "markdown": "`class DlpServiceRestTransport(DlpServiceTransport):\n    \"\"\"REST backend transport for DlpService.\n\n    The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/rest.py"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 37,
                  "endLine": 61,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n",
                    "rendered": {
                      "text": "    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n",
                      "markdown": "`    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google_cloud_dlp-3.12.3.dist-info/METADATA"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 40,
                  "endLine": 102,
                  "endColumn": 48,
                  "snippet": {
                    "text": "Python <= 3.6\n\nIf you are using an `end-of-life`_\nversion of Python, we recommend that you update as soon as possible to an actively supported version.\n\n.. _end-of-life: https://devguide.python.org/devcycle/#end-of-life-branches\n\n",
                    "rendered": {
                      "text": "Python <= 3.6\n\nIf you are using an `end-of-life`_\nversion of Python, we recommend that you update as soon as possible to an actively supported version.\n\n.. _end-of-life: https://devguide.python.org/devcycle/#end-of-life-branches\n\n",
                      "markdown": "`Python <= 3.6\n\nIf you are using an `end-of-life`_\nversion of Python, we recommend that you update as soon as possible to an actively supported version.\n\n.. _end-of-life: https://devguide.python.org/devcycle/#end-of-life-branches\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google_cloud_dlp-3.12.3.dist-info/METADATA"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 3,
                  "endLine": 123,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    py -m venv <your-env>\n    .\\<your-env>\\Scripts\\activate\n    pip install google-cloud-dlp\n\nNext Steps\n~~~~~~~~~~\n",
                    "rendered": {
                      "text": "\n    py -m venv <your-env>\n    .\\<your-env>\\Scripts\\activate\n    pip install google-cloud-dlp\n\nNext Steps\n~~~~~~~~~~\n",
                      "markdown": "`\n    py -m venv <your-env>\n    .\\<your-env>\\Scripts\\activate\n    pip install google-cloud-dlp\n\nNext Steps\n~~~~~~~~~~\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google_cloud_dlp-3.12.3.dist-info/METADATA"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 3,
                  "endLine": 113,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    python3 -m venv <your-env>\n    source <your-env>/bin/activate\n    pip install google-cloud-dlp\n\n\nWindows\n",
                    "rendered": {
                      "text": "\n    python3 -m venv <your-env>\n    source <your-env>/bin/activate\n    pip install google-cloud-dlp\n\n\nWindows\n",
                      "markdown": "`\n    python3 -m venv <your-env>\n    source <your-env>/bin/activate\n    pip install google-cloud-dlp\n\n\nWindows\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 48,
                  "endLine": 201,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                    "rendered": {
                      "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                      "markdown": "`                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 48,
                  "endLine": 192,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                    "rendered": {
                      "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                      "markdown": "`                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 21,
                  "endLine": 123,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to.\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to.\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to.\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 1108,
                  "startColumn": 37,
                  "endLine": 1108,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    def update_stored_info_type(\n        self,\n    ) -> Callable[[dlp.UpdateStoredInfoTypeRequest], Awaitable[dlp.StoredInfoType]]:\n        r\"\"\"Return a callable for the update stored info type method over gRPC.\n\n        Updates the stored infoType by creating a new\n        version. The existing version will continue to be used\n",
                    "rendered": {
                      "text": "    def update_stored_info_type(\n        self,\n    ) -> Callable[[dlp.UpdateStoredInfoTypeRequest], Awaitable[dlp.StoredInfoType]]:\n        r\"\"\"Return a callable for the update stored info type method over gRPC.\n\n        Updates the stored infoType by creating a new\n        version. The existing version will continue to be used\n",
                      "markdown": "`    def update_stored_info_type(\n        self,\n    ) -> Callable[[dlp.UpdateStoredInfoTypeRequest], Awaitable[dlp.StoredInfoType]]:\n        r\"\"\"Return a callable for the update stored info type method over gRPC.\n\n        Updates the stored infoType by creating a new\n        version. The existing version will continue to be used\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 747,
                  "startColumn": 37,
                  "endLine": 747,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    def update_job_trigger(\n        self,\n    ) -> Callable[[dlp.UpdateJobTriggerRequest], Awaitable[dlp.JobTrigger]]:\n        r\"\"\"Return a callable for the update job trigger method over gRPC.\n\n        Updates a job trigger.\n        See\n",
                    "rendered": {
                      "text": "    def update_job_trigger(\n        self,\n    ) -> Callable[[dlp.UpdateJobTriggerRequest], Awaitable[dlp.JobTrigger]]:\n        r\"\"\"Return a callable for the update job trigger method over gRPC.\n\n        Updates a job trigger.\n        See\n",
                      "markdown": "`    def update_job_trigger(\n        self,\n    ) -> Callable[[dlp.UpdateJobTriggerRequest], Awaitable[dlp.JobTrigger]]:\n        r\"\"\"Return a callable for the update job trigger method over gRPC.\n\n        Updates a job trigger.\n        See\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 596,
                  "startColumn": 37,
                  "endLine": 596,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    ) -> Callable[\n        [dlp.UpdateDeidentifyTemplateRequest], Awaitable[dlp.DeidentifyTemplate]\n    ]:\n        r\"\"\"Return a callable for the update deidentify template method over gRPC.\n\n        Updates the DeidentifyTemplate.\n        See\n",
                    "rendered": {
                      "text": "    ) -> Callable[\n        [dlp.UpdateDeidentifyTemplateRequest], Awaitable[dlp.DeidentifyTemplate]\n    ]:\n        r\"\"\"Return a callable for the update deidentify template method over gRPC.\n\n        Updates the DeidentifyTemplate.\n        See\n",
                      "markdown": "`    ) -> Callable[\n        [dlp.UpdateDeidentifyTemplateRequest], Awaitable[dlp.DeidentifyTemplate]\n    ]:\n        r\"\"\"Return a callable for the update deidentify template method over gRPC.\n\n        Updates the DeidentifyTemplate.\n        See\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 448,
                  "startColumn": 37,
                  "endLine": 448,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    def update_inspect_template(\n        self,\n    ) -> Callable[[dlp.UpdateInspectTemplateRequest], Awaitable[dlp.InspectTemplate]]:\n        r\"\"\"Return a callable for the update inspect template method over gRPC.\n\n        Updates the InspectTemplate.\n        See https://cloud.google.com/dlp/docs/creating-templates\n",
                    "rendered": {
                      "text": "    def update_inspect_template(\n        self,\n    ) -> Callable[[dlp.UpdateInspectTemplateRequest], Awaitable[dlp.InspectTemplate]]:\n        r\"\"\"Return a callable for the update inspect template method over gRPC.\n\n        Updates the InspectTemplate.\n        See https://cloud.google.com/dlp/docs/creating-templates\n",
                      "markdown": "`    def update_inspect_template(\n        self,\n    ) -> Callable[[dlp.UpdateInspectTemplateRequest], Awaitable[dlp.InspectTemplate]]:\n        r\"\"\"Return a callable for the update inspect template method over gRPC.\n\n        Updates the InspectTemplate.\n        See https://cloud.google.com/dlp/docs/creating-templates\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 933,
                  "startColumn": 23,
                  "endLine": 933,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        inspect jobs, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.CreateDlpJobRequest],\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        inspect jobs, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.CreateDlpJobRequest],\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        inspect jobs, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.CreateDlpJobRequest],\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 23,
                  "endLine": 335,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.DeidentifyContentRequest],\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.DeidentifyContentRequest],\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.DeidentifyContentRequest],\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 23,
                  "endLine": 298,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.RedactImageRequest],\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.RedactImageRequest],\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.RedactImageRequest],\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 23,
                  "endLine": 259,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        For how to guides, see\n        https://cloud.google.com/dlp/docs/inspecting-images and\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        For how to guides, see\n        https://cloud.google.com/dlp/docs/inspecting-images and\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        For how to guides, see\n        https://cloud.google.com/dlp/docs/inspecting-images and\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 27,
                  "endLine": 160,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 3,
                  "endLine": 53,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n",
                    "rendered": {
                      "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n",
                      "markdown": "`    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 36,
                  "endLine": 45,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n\n    This class defines the same methods as the primary client, so the\n",
                    "rendered": {
                      "text": "    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n\n    This class defines the same methods as the primary client, so the\n",
                      "markdown": "`    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n\n    This class defines the same methods as the primary client, so the\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 7,
                  "endLine": 41,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n",
                    "rendered": {
                      "text": "    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n",
                      "markdown": "`    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc_asyncio.py"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 49,
                  "endLine": 36,
                  "endColumn": 58,
                  "snippet": {
                    "text": "class DlpServiceGrpcAsyncIOTransport(DlpServiceTransport):\n    \"\"\"gRPC AsyncIO backend transport for DlpService.\n\n    The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n",
                    "rendered": {
                      "text": "class DlpServiceGrpcAsyncIOTransport(DlpServiceTransport):\n    \"\"\"gRPC AsyncIO backend transport for DlpService.\n\n    The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n",
                      "markdown": "`class DlpServiceGrpcAsyncIOTransport(DlpServiceTransport):\n    \"\"\"gRPC AsyncIO backend transport for DlpService.\n\n    The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 48,
                  "endLine": 156,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                    "rendered": {
                      "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                      "markdown": "`                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 48,
                  "endLine": 147,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                    "rendered": {
                      "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                      "markdown": "`                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 21,
                  "endLine": 78,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to.\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to.\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to.\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 1082,
                  "startColumn": 37,
                  "endLine": 1082,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    def update_stored_info_type(\n        self,\n    ) -> Callable[[dlp.UpdateStoredInfoTypeRequest], dlp.StoredInfoType]:\n        r\"\"\"Return a callable for the update stored info type method over gRPC.\n\n        Updates the stored infoType by creating a new\n        version. The existing version will continue to be used\n",
                    "rendered": {
                      "text": "    def update_stored_info_type(\n        self,\n    ) -> Callable[[dlp.UpdateStoredInfoTypeRequest], dlp.StoredInfoType]:\n        r\"\"\"Return a callable for the update stored info type method over gRPC.\n\n        Updates the stored infoType by creating a new\n        version. The existing version will continue to be used\n",
                      "markdown": "`    def update_stored_info_type(\n        self,\n    ) -> Callable[[dlp.UpdateStoredInfoTypeRequest], dlp.StoredInfoType]:\n        r\"\"\"Return a callable for the update stored info type method over gRPC.\n\n        Updates the stored infoType by creating a new\n        version. The existing version will continue to be used\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 731,
                  "startColumn": 37,
                  "endLine": 731,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    def update_job_trigger(\n        self,\n    ) -> Callable[[dlp.UpdateJobTriggerRequest], dlp.JobTrigger]:\n        r\"\"\"Return a callable for the update job trigger method over gRPC.\n\n        Updates a job trigger.\n        See\n",
                    "rendered": {
                      "text": "    def update_job_trigger(\n        self,\n    ) -> Callable[[dlp.UpdateJobTriggerRequest], dlp.JobTrigger]:\n        r\"\"\"Return a callable for the update job trigger method over gRPC.\n\n        Updates a job trigger.\n        See\n",
                      "markdown": "`    def update_job_trigger(\n        self,\n    ) -> Callable[[dlp.UpdateJobTriggerRequest], dlp.JobTrigger]:\n        r\"\"\"Return a callable for the update job trigger method over gRPC.\n\n        Updates a job trigger.\n        See\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 583,
                  "startColumn": 37,
                  "endLine": 583,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    def update_deidentify_template(\n        self,\n    ) -> Callable[[dlp.UpdateDeidentifyTemplateRequest], dlp.DeidentifyTemplate]:\n        r\"\"\"Return a callable for the update deidentify template method over gRPC.\n\n        Updates the DeidentifyTemplate.\n        See\n",
                    "rendered": {
                      "text": "    def update_deidentify_template(\n        self,\n    ) -> Callable[[dlp.UpdateDeidentifyTemplateRequest], dlp.DeidentifyTemplate]:\n        r\"\"\"Return a callable for the update deidentify template method over gRPC.\n\n        Updates the DeidentifyTemplate.\n        See\n",
                      "markdown": "`    def update_deidentify_template(\n        self,\n    ) -> Callable[[dlp.UpdateDeidentifyTemplateRequest], dlp.DeidentifyTemplate]:\n        r\"\"\"Return a callable for the update deidentify template method over gRPC.\n\n        Updates the DeidentifyTemplate.\n        See\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 441,
                  "startColumn": 37,
                  "endLine": 441,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    def update_inspect_template(\n        self,\n    ) -> Callable[[dlp.UpdateInspectTemplateRequest], dlp.InspectTemplate]:\n        r\"\"\"Return a callable for the update inspect template method over gRPC.\n\n        Updates the InspectTemplate.\n        See https://cloud.google.com/dlp/docs/creating-templates\n",
                    "rendered": {
                      "text": "    def update_inspect_template(\n        self,\n    ) -> Callable[[dlp.UpdateInspectTemplateRequest], dlp.InspectTemplate]:\n        r\"\"\"Return a callable for the update inspect template method over gRPC.\n\n        Updates the InspectTemplate.\n        See https://cloud.google.com/dlp/docs/creating-templates\n",
                      "markdown": "`    def update_inspect_template(\n        self,\n    ) -> Callable[[dlp.UpdateInspectTemplateRequest], dlp.InspectTemplate]:\n        r\"\"\"Return a callable for the update inspect template method over gRPC.\n\n        Updates the InspectTemplate.\n        See https://cloud.google.com/dlp/docs/creating-templates\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 911,
                  "startColumn": 23,
                  "endLine": 911,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        inspect jobs, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.CreateDlpJobRequest],\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        inspect jobs, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.CreateDlpJobRequest],\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        inspect jobs, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.CreateDlpJobRequest],\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 23,
                  "endLine": 330,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.DeidentifyContentRequest],\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.DeidentifyContentRequest],\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.DeidentifyContentRequest],\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 23,
                  "endLine": 295,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.RedactImageRequest],\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.RedactImageRequest],\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        Returns:\n            Callable[[~.RedactImageRequest],\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 23,
                  "endLine": 256,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        For how to guides, see\n        https://cloud.google.com/dlp/docs/inspecting-images and\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        For how to guides, see\n        https://cloud.google.com/dlp/docs/inspecting-images and\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        For how to guides, see\n        https://cloud.google.com/dlp/docs/inspecting-images and\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 27,
                  "endLine": 114,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 3,
                  "endLine": 52,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n",
                    "rendered": {
                      "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n",
                      "markdown": "`    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 36,
                  "endLine": 44,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n\n    This class defines the same methods as the primary client, so the\n",
                    "rendered": {
                      "text": "    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n\n    This class defines the same methods as the primary client, so the\n",
                      "markdown": "`    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n\n    This class defines the same methods as the primary client, so the\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 7,
                  "endLine": 40,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n",
                    "rendered": {
                      "text": "    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n",
                      "markdown": "`    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/grpc.py"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 49,
                  "endLine": 35,
                  "endColumn": 58,
                  "snippet": {
                    "text": "class DlpServiceGrpcTransport(DlpServiceTransport):\n    \"\"\"gRPC backend transport for DlpService.\n\n    The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n",
                    "rendered": {
                      "text": "class DlpServiceGrpcTransport(DlpServiceTransport):\n    \"\"\"gRPC backend transport for DlpService.\n\n    The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n",
                      "markdown": "`class DlpServiceGrpcTransport(DlpServiceTransport):\n    \"\"\"gRPC backend transport for DlpService.\n\n    The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/__init__.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/pagers.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/__init__.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1357,
                  "startColumn": 55,
                  "endLine": 1357,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    finding.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    finding.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    finding.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1357,
                  "startColumn": 19,
                  "endLine": 1357,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    finding.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    finding.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    finding.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1299,
                  "startColumn": 59,
                  "endLine": 1299,
                  "endColumn": 63,
                  "snippet": {
                    "text": "        is set, the element is incomplete.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                    "rendered": {
                      "text": "        is set, the element is incomplete.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                      "markdown": "`        is set, the element is incomplete.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1299,
                  "startColumn": 23,
                  "endLine": 1299,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        is set, the element is incomplete.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                    "rendered": {
                      "text": "        is set, the element is incomplete.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                      "markdown": "`        is set, the element is incomplete.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1288,
                  "startColumn": 58,
                  "endLine": 1288,
                  "endColumn": 62,
                  "snippet": {
                    "text": "            identified by all prefixes of the path are called the\n            element's *ancestors*.\n\n            A path can never be empty, and a path can have at most 100\n            elements.\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "            identified by all prefixes of the path are called the\n            element's *ancestors*.\n\n            A path can never be empty, and a path can have at most 100\n            elements.\n    \"\"\"\n\n",
                      "markdown": "`            identified by all prefixes of the path are called the\n            element's *ancestors*.\n\n            A path can never be empty, and a path can have at most 100\n            elements.\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1231,
                  "startColumn": 31,
                  "endLine": 1231,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        table_reference (google.cloud.dlp_v2.types.BigQueryTable):\n            Complete BigQuery table reference.\n        row_number (int):\n            Row number inferred at the time the table was scanned. This\n            value is nondeterministic, cannot be queried, and may be\n            null for inspection jobs. To locate findings within a table,\n            specify\n",
                    "rendered": {
                      "text": "        table_reference (google.cloud.dlp_v2.types.BigQueryTable):\n            Complete BigQuery table reference.\n        row_number (int):\n            Row number inferred at the time the table was scanned. This\n            value is nondeterministic, cannot be queried, and may be\n            null for inspection jobs. To locate findings within a table,\n            specify\n",
                      "markdown": "`        table_reference (google.cloud.dlp_v2.types.BigQueryTable):\n            Complete BigQuery table reference.\n        row_number (int):\n            Row number inferred at the time the table was scanned. This\n            value is nondeterministic, cannot be queried, and may be\n            null for inspection jobs. To locate findings within a table,\n            specify\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1161,
                  "startColumn": 24,
                  "endLine": 1161,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n\nclass HybridOptions(proto.Message):\n    r\"\"\"Configuration to control jobs where the content being\n    inspected is outside of Google Cloud Platform.\n\n    Attributes:\n",
                    "rendered": {
                      "text": "\n\nclass HybridOptions(proto.Message):\n    r\"\"\"Configuration to control jobs where the content being\n    inspected is outside of Google Cloud Platform.\n\n    Attributes:\n",
                      "markdown": "`\n\nclass HybridOptions(proto.Message):\n    r\"\"\"Configuration to control jobs where the content being\n    inspected is outside of Google Cloud Platform.\n\n    Attributes:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1075,
                  "startColumn": 54,
                  "endLine": 1075,
                  "endColumn": 58,
                  "snippet": {
                    "text": "                Valid data types of the provided BigQuery column are:\n                ``INTEGER``, ``DATE``, ``TIMESTAMP``, and ``DATETIME``.\n\n                If your BigQuery table is `partitioned at ingestion\n                time <https://cloud.google.com/bigquery/docs/partitioned-tables#ingestion_time>`__,\n                you can use any of the following pseudo-columns as your\n                timestamp field. When used with Cloud DLP, these\n",
                    "rendered": {
                      "text": "                Valid data types of the provided BigQuery column are:\n                ``INTEGER``, ``DATE``, ``TIMESTAMP``, and ``DATETIME``.\n\n                If your BigQuery table is `partitioned at ingestion\n                time <https://cloud.google.com/bigquery/docs/partitioned-tables#ingestion_time>`__,\n                you can use any of the following pseudo-columns as your\n                timestamp field. When used with Cloud DLP, these\n",
                      "markdown": "`                Valid data types of the provided BigQuery column are:\n                ``INTEGER``, ``DATE``, ``TIMESTAMP``, and ``DATETIME``.\n\n                If your BigQuery table is `partitioned at ingestion\n                time <https://cloud.google.com/bigquery/docs/partitioned-tables#ingestion_time>`__,\n                you can use any of the following pseudo-columns as your\n                timestamp field. When used with Cloud DLP, these\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1019,
                  "startColumn": 55,
                  "endLine": 1019,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    r\"\"\"Shared message indicating Cloud storage type.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"Shared message indicating Cloud storage type.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"Shared message indicating Cloud storage type.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1019,
                  "startColumn": 19,
                  "endLine": 1019,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    r\"\"\"Shared message indicating Cloud storage type.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"Shared message indicating Cloud storage type.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"Shared message indicating Cloud storage type.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 752,
                  "startColumn": 55,
                  "endLine": 752,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            GitHub.\n        exclude_regex (MutableSequence[str]):\n            A list of regular expressions matching file paths to\n            exclude. All files in the bucket that match at least one of\n            these regular expressions will be excluded from the scan.\n\n            Regular expressions use RE2\n",
                    "rendered": {
                      "text": "            GitHub.\n        exclude_regex (MutableSequence[str]):\n            A list of regular expressions matching file paths to\n            exclude. All files in the bucket that match at least one of\n            these regular expressions will be excluded from the scan.\n\n            Regular expressions use RE2\n",
                      "markdown": "`            GitHub.\n        exclude_regex (MutableSequence[str]):\n            A list of regular expressions matching file paths to\n            exclude. All files in the bucket that match at least one of\n            these regular expressions will be excluded from the scan.\n\n            Regular expressions use RE2\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 739,
                  "startColumn": 55,
                  "endLine": 739,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            The name of a Cloud Storage bucket. Required.\n        include_regex (MutableSequence[str]):\n            A list of regular expressions matching file paths to\n            include. All files in the bucket that match at least one of\n            these regular expressions will be included in the set of\n            files, except for those that also match an item in\n            ``exclude_regex``. Leaving this field empty will match all\n",
                    "rendered": {
                      "text": "            The name of a Cloud Storage bucket. Required.\n        include_regex (MutableSequence[str]):\n            A list of regular expressions matching file paths to\n            include. All files in the bucket that match at least one of\n            these regular expressions will be included in the set of\n            files, except for those that also match an item in\n            ``exclude_regex``. Leaving this field empty will match all\n",
                      "markdown": "`            The name of a Cloud Storage bucket. Required.\n        include_regex (MutableSequence[str]):\n            A list of regular expressions matching file paths to\n            include. All files in the bucket that match at least one of\n            these regular expressions will be included in the set of\n            files, except for those that also match an item in\n            ``exclude_regex``. Leaving this field empty will match all\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 704,
                  "startColumn": 39,
                  "endLine": 704,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    Regular expressions are used to allow fine-grained control over\n    which files in the bucket to include.\n\n    Included files are those that match at least one item in\n    ``include_regex`` and do not match any items in ``exclude_regex``.\n    Note that a file that matches items from both lists will *not* be\n    included. For a match to occur, the entire file path (i.e.,\n",
                    "rendered": {
                      "text": "    Regular expressions are used to allow fine-grained control over\n    which files in the bucket to include.\n\n    Included files are those that match at least one item in\n    ``include_regex`` and do not match any items in ``exclude_regex``.\n    Note that a file that matches items from both lists will *not* be\n    included. For a match to occur, the entire file path (i.e.,\n",
                      "markdown": "`    Regular expressions are used to allow fine-grained control over\n    which files in the bucket to include.\n\n    Included files are those that match at least one item in\n    ``include_regex`` and do not match any items in ``exclude_regex``.\n    Note that a file that matches items from both lists will *not* be\n    included. For a match to occur, the entire file path (i.e.,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 701,
                  "startColumn": 54,
                  "endLine": 701,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nclass CloudStorageRegexFileSet(proto.Message):\n    r\"\"\"Message representing a set of files in a Cloud Storage bucket.\n    Regular expressions are used to allow fine-grained control over\n    which files in the bucket to include.\n\n    Included files are those that match at least one item in\n",
                    "rendered": {
                      "text": "\nclass CloudStorageRegexFileSet(proto.Message):\n    r\"\"\"Message representing a set of files in a Cloud Storage bucket.\n    Regular expressions are used to allow fine-grained control over\n    which files in the bucket to include.\n\n    Included files are those that match at least one item in\n",
                      "markdown": "`\nclass CloudStorageRegexFileSet(proto.Message):\n    r\"\"\"Message representing a set of files in a Cloud Storage bucket.\n    Regular expressions are used to allow fine-grained control over\n    which files in the bucket to include.\n\n    Included files are those that match at least one item in\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 482,
                  "startColumn": 63,
                  "endLine": 482,
                  "endColumn": 67,
                  "snippet": {
                    "text": "            finding as part of a detection rule.\n\n            This message has `oneof`_ fields (mutually exclusive fields).\n            For each oneof, at most one member field can be set at the same time.\n            Setting any member of the oneof automatically clears all other\n            members.\n\n",
                    "rendered": {
                      "text": "            finding as part of a detection rule.\n\n            This message has `oneof`_ fields (mutually exclusive fields).\n            For each oneof, at most one member field can be set at the same time.\n            Setting any member of the oneof automatically clears all other\n            members.\n\n",
                      "markdown": "`            finding as part of a detection rule.\n\n            This message has `oneof`_ fields (mutually exclusive fields).\n            For each oneof, at most one member field can be set at the same time.\n            Setting any member of the oneof automatically clears all other\n            members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 482,
                  "startColumn": 27,
                  "endLine": 482,
                  "endColumn": 31,
                  "snippet": {
                    "text": "            finding as part of a detection rule.\n\n            This message has `oneof`_ fields (mutually exclusive fields).\n            For each oneof, at most one member field can be set at the same time.\n            Setting any member of the oneof automatically clears all other\n            members.\n\n",
                    "rendered": {
                      "text": "            finding as part of a detection rule.\n\n            This message has `oneof`_ fields (mutually exclusive fields).\n            For each oneof, at most one member field can be set at the same time.\n            Setting any member of the oneof automatically clears all other\n            members.\n\n",
                      "markdown": "`            finding as part of a detection rule.\n\n            This message has `oneof`_ fields (mutually exclusive fields).\n            For each oneof, at most one member field can be set at the same time.\n            Setting any member of the oneof automatically clears all other\n            members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 27,
                  "endLine": 376,
                  "endColumn": 31,
                  "snippet": {
                    "text": "                words (MutableSequence[str]):\n                    Words or phrases defining the dictionary. The dictionary\n                    must contain at least one phrase and every phrase must\n                    contain at least 2 characters that are letters or digits.\n                    [required]\n            \"\"\"\n\n",
                    "rendered": {
                      "text": "                words (MutableSequence[str]):\n                    Words or phrases defining the dictionary. The dictionary\n                    must contain at least one phrase and every phrase must\n                    contain at least 2 characters that are letters or digits.\n                    [required]\n            \"\"\"\n\n",
                      "markdown": "`                words (MutableSequence[str]):\n                    Words or phrases defining the dictionary. The dictionary\n                    must contain at least one phrase and every phrase must\n                    contain at least 2 characters that are letters or digits.\n                    [required]\n            \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 375,
                  "startColumn": 32,
                  "endLine": 375,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            Attributes:\n                words (MutableSequence[str]):\n                    Words or phrases defining the dictionary. The dictionary\n                    must contain at least one phrase and every phrase must\n                    contain at least 2 characters that are letters or digits.\n                    [required]\n            \"\"\"\n",
                    "rendered": {
                      "text": "            Attributes:\n                words (MutableSequence[str]):\n                    Words or phrases defining the dictionary. The dictionary\n                    must contain at least one phrase and every phrase must\n                    contain at least 2 characters that are letters or digits.\n                    [required]\n            \"\"\"\n",
                      "markdown": "`            Attributes:\n                words (MutableSequence[str]):\n                    Words or phrases defining the dictionary. The dictionary\n                    must contain at least one phrase and every phrase must\n                    contain at least 2 characters that are letters or digits.\n                    [required]\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 59,
                  "endLine": 350,
                  "endColumn": 63,
                  "snippet": {
                    "text": "        ``LargeCustomDictionaryConfig`` in the ``StoredInfoType`` API.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                    "rendered": {
                      "text": "        ``LargeCustomDictionaryConfig`` in the ``StoredInfoType`` API.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                      "markdown": "`        ``LargeCustomDictionaryConfig`` in the ``StoredInfoType`` API.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 23,
                  "endLine": 350,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        ``LargeCustomDictionaryConfig`` in the ``StoredInfoType`` API.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                    "rendered": {
                      "text": "        ``LargeCustomDictionaryConfig`` in the ``StoredInfoType`` API.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                      "markdown": "`        ``LargeCustomDictionaryConfig`` in the ``StoredInfoType`` API.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 55,
                  "endLine": 257,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    in question.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    in question.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    in question.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 19,
                  "endLine": 257,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    in question.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    in question.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    in question.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 60,
                  "endLine": 205,
                  "snippet": {
                    "text": "                access.\n            SENSITIVITY_MODERATE (20):\n                Medium risk - PII, potentially sensitive\n                data, or fields with free-text data that are at\n                higher risk of having intermittent sensitive\n                data. Consider limiting access.\n            SENSITIVITY_HIGH (30):\n                High risk – SPII may be present. Exfiltration\n",
                    "rendered": {
                      "text": "                access.\n            SENSITIVITY_MODERATE (20):\n                Medium risk - PII, potentially sensitive\n                data, or fields with free-text data that are at\n                higher risk of having intermittent sensitive\n                data. Consider limiting access.\n            SENSITIVITY_HIGH (30):\n                High risk – SPII may be present. Exfiltration\n",
                      "markdown": "`                access.\n            SENSITIVITY_MODERATE (20):\n                Medium risk - PII, potentially sensitive\n                data, or fields with free-text data that are at\n                higher risk of having intermittent sensitive\n                data. Consider limiting access.\n            SENSITIVITY_HIGH (30):\n                High risk – SPII may be present. Exfiltration\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 11,
                  "endLine": 166,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        name (str):\n            Name of the information type. Either a name of your choosing\n            when creating a CustomInfoType, or one of the names listed\n            at https://cloud.google.com/dlp/docs/infotypes-reference\n            when specifying a built-in type. When sending Cloud DLP\n            results to Data Catalog, infoType names should conform to\n            the pattern ``[A-Za-z0-9$_-]{1,64}``.\n",
                    "rendered": {
                      "text": "        name (str):\n            Name of the information type. Either a name of your choosing\n            when creating a CustomInfoType, or one of the names listed\n            at https://cloud.google.com/dlp/docs/infotypes-reference\n            when specifying a built-in type. When sending Cloud DLP\n            results to Data Catalog, infoType names should conform to\n            the pattern ``[A-Za-z0-9$_-]{1,64}``.\n",
                      "markdown": "`        name (str):\n            Name of the information type. Either a name of your choosing\n            when creating a CustomInfoType, or one of the names listed\n            at https://cloud.google.com/dlp/docs/infotypes-reference\n            when specifying a built-in type. When sending Cloud DLP\n            results to Data Catalog, infoType names should conform to\n            the pattern ``[A-Za-z0-9$_-]{1,64}``.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 3,
                  "endLine": 156,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    CSV = 8\n    TSV = 9\n    POWERPOINT = 11\n    EXCEL = 12\n\n\nclass InfoType(proto.Message):\n",
                    "rendered": {
                      "text": "    CSV = 8\n    TSV = 9\n    POWERPOINT = 11\n    EXCEL = 12\n\n\nclass InfoType(proto.Message):\n",
                      "markdown": "`    CSV = 8\n    TSV = 9\n    POWERPOINT = 11\n    EXCEL = 12\n\n\nclass InfoType(proto.Message):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 11,
                  "endLine": 141,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n              pptx, pptm, potx, potm, pot\n        EXCEL (12):\n            Excel files >30 MB will be scanned as binary\n            files. Included file extensions:\n\n              xlsx, xlsm, xltx, xltm\n",
                    "rendered": {
                      "text": "\n              pptx, pptm, potx, potm, pot\n        EXCEL (12):\n            Excel files >30 MB will be scanned as binary\n            files. Included file extensions:\n\n              xlsx, xlsm, xltx, xltm\n",
                      "markdown": "`\n              pptx, pptm, potx, potm, pot\n        EXCEL (12):\n            Excel files >30 MB will be scanned as binary\n            files. Included file extensions:\n\n              xlsx, xlsm, xltx, xltm\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 7,
                  "endLine": 140,
                  "endColumn": 14,
                  "snippet": {
                    "text": "            binary files. Included file extensions:\n\n              pptx, pptm, potx, potm, pot\n        EXCEL (12):\n            Excel files >30 MB will be scanned as binary\n            files. Included file extensions:\n\n",
                    "rendered": {
                      "text": "            binary files. Included file extensions:\n\n              pptx, pptm, potx, potm, pot\n        EXCEL (12):\n            Excel files >30 MB will be scanned as binary\n            files. Included file extensions:\n\n",
                      "markdown": "`            binary files. Included file extensions:\n\n              pptx, pptm, potx, potm, pot\n        EXCEL (12):\n            Excel files >30 MB will be scanned as binary\n            files. Included file extensions:\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1231,
                  "startColumn": 38,
                  "endLine": 1231,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        table_reference (google.cloud.dlp_v2.types.BigQueryTable):\n            Complete BigQuery table reference.\n        row_number (int):\n            Row number inferred at the time the table was scanned. This\n            value is nondeterministic, cannot be queried, and may be\n            null for inspection jobs. To locate findings within a table,\n            specify\n",
                    "rendered": {
                      "text": "        table_reference (google.cloud.dlp_v2.types.BigQueryTable):\n            Complete BigQuery table reference.\n        row_number (int):\n            Row number inferred at the time the table was scanned. This\n            value is nondeterministic, cannot be queried, and may be\n            null for inspection jobs. To locate findings within a table,\n            specify\n",
                      "markdown": "`        table_reference (google.cloud.dlp_v2.types.BigQueryTable):\n            Complete BigQuery table reference.\n        row_number (int):\n            Row number inferred at the time the table was scanned. This\n            value is nondeterministic, cannot be queried, and may be\n            null for inspection jobs. To locate findings within a table,\n            specify\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1104,
                  "startColumn": 71,
                  "endLine": 1105,
                  "snippet": {
                    "text": "                When the job is started by a JobTrigger we will\n                automatically figure out a valid start_time to avoid\n                scanning files that have not been modified since the last\n                time the JobTrigger executed. This will be based on the time\n                of the execution of the last run of the JobTrigger or the\n                timespan end_time used in the last run of the JobTrigger.\n        \"\"\"\n\n",
                    "rendered": {
                      "text": "                When the job is started by a JobTrigger we will\n                automatically figure out a valid start_time to avoid\n                scanning files that have not been modified since the last\n                time the JobTrigger executed. This will be based on the time\n                of the execution of the last run of the JobTrigger or the\n                timespan end_time used in the last run of the JobTrigger.\n        \"\"\"\n\n",
                      "markdown": "`                When the job is started by a JobTrigger we will\n                automatically figure out a valid start_time to avoid\n                scanning files that have not been modified since the last\n                time the JobTrigger executed. This will be based on the time\n                of the execution of the last run of the JobTrigger or the\n                timespan end_time used in the last run of the JobTrigger.\n        \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1104,
                  "startColumn": 15,
                  "endLine": 1104,
                  "endColumn": 21,
                  "snippet": {
                    "text": "                When the job is started by a JobTrigger we will\n                automatically figure out a valid start_time to avoid\n                scanning files that have not been modified since the last\n                time the JobTrigger executed. This will be based on the time\n                of the execution of the last run of the JobTrigger or the\n                timespan end_time used in the last run of the JobTrigger.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                When the job is started by a JobTrigger we will\n                automatically figure out a valid start_time to avoid\n                scanning files that have not been modified since the last\n                time the JobTrigger executed. This will be based on the time\n                of the execution of the last run of the JobTrigger or the\n                timespan end_time used in the last run of the JobTrigger.\n        \"\"\"\n",
                      "markdown": "`                When the job is started by a JobTrigger we will\n                automatically figure out a valid start_time to avoid\n                scanning files that have not been modified since the last\n                time the JobTrigger executed. This will be based on the time\n                of the execution of the last run of the JobTrigger or the\n                timespan end_time used in the last run of the JobTrigger.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1076,
                  "startColumn": 15,
                  "endLine": 1076,
                  "endColumn": 21,
                  "snippet": {
                    "text": "                ``INTEGER``, ``DATE``, ``TIMESTAMP``, and ``DATETIME``.\n\n                If your BigQuery table is `partitioned at ingestion\n                time <https://cloud.google.com/bigquery/docs/partitioned-tables#ingestion_time>`__,\n                you can use any of the following pseudo-columns as your\n                timestamp field. When used with Cloud DLP, these\n                pseudo-column names are case sensitive.\n",
                    "rendered": {
                      "text": "                ``INTEGER``, ``DATE``, ``TIMESTAMP``, and ``DATETIME``.\n\n                If your BigQuery table is `partitioned at ingestion\n                time <https://cloud.google.com/bigquery/docs/partitioned-tables#ingestion_time>`__,\n                you can use any of the following pseudo-columns as your\n                timestamp field. When used with Cloud DLP, these\n                pseudo-column names are case sensitive.\n",
                      "markdown": "`                ``INTEGER``, ``DATE``, ``TIMESTAMP``, and ``DATETIME``.\n\n                If your BigQuery table is `partitioned at ingestion\n                time <https://cloud.google.com/bigquery/docs/partitioned-tables#ingestion_time>`__,\n                you can use any of the following pseudo-columns as your\n                timestamp field. When used with Cloud DLP, these\n                pseudo-column names are case sensitive.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1058,
                  "startColumn": 48,
                  "endLine": 1058,
                  "endColumn": 54,
                  "snippet": {
                    "text": "                applied.\n            end_time (google.protobuf.timestamp_pb2.Timestamp):\n                Exclude files, tables, or rows newer than\n                this value. If not set, no upper time limit is\n                applied.\n            timestamp_field (google.cloud.dlp_v2.types.FieldId):\n                Specification of the field containing the timestamp of\n",
                    "rendered": {
                      "text": "                applied.\n            end_time (google.protobuf.timestamp_pb2.Timestamp):\n                Exclude files, tables, or rows newer than\n                this value. If not set, no upper time limit is\n                applied.\n            timestamp_field (google.cloud.dlp_v2.types.FieldId):\n                Specification of the field containing the timestamp of\n",
                      "markdown": "`                applied.\n            end_time (google.protobuf.timestamp_pb2.Timestamp):\n                Exclude files, tables, or rows newer than\n                this value. If not set, no upper time limit is\n                applied.\n            timestamp_field (google.cloud.dlp_v2.types.FieldId):\n                Specification of the field containing the timestamp of\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 1054,
                  "startColumn": 48,
                  "endLine": 1054,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        Attributes:\n            start_time (google.protobuf.timestamp_pb2.Timestamp):\n                Exclude files, tables, or rows older than\n                this value. If not set, no lower time limit is\n                applied.\n            end_time (google.protobuf.timestamp_pb2.Timestamp):\n                Exclude files, tables, or rows newer than\n",
                    "rendered": {
                      "text": "        Attributes:\n            start_time (google.protobuf.timestamp_pb2.Timestamp):\n                Exclude files, tables, or rows older than\n                this value. If not set, no lower time limit is\n                applied.\n            end_time (google.protobuf.timestamp_pb2.Timestamp):\n                Exclude files, tables, or rows newer than\n",
                      "markdown": "`        Attributes:\n            start_time (google.protobuf.timestamp_pb2.Timestamp):\n                Exclude files, tables, or rows older than\n                this value. If not set, no lower time limit is\n                applied.\n            end_time (google.protobuf.timestamp_pb2.Timestamp):\n                Exclude files, tables, or rows newer than\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 977,
                  "startColumn": 7,
                  "endLine": 977,
                  "endColumn": 12,
                  "snippet": {
                    "text": "                Randomly pick groups of rows to scan.\n        \"\"\"\n        SAMPLE_METHOD_UNSPECIFIED = 0\n        TOP = 1\n        RANDOM_START = 2\n\n    table_reference: \"BigQueryTable\" = proto.Field(\n",
                    "rendered": {
                      "text": "                Randomly pick groups of rows to scan.\n        \"\"\"\n        SAMPLE_METHOD_UNSPECIFIED = 0\n        TOP = 1\n        RANDOM_START = 2\n\n    table_reference: \"BigQueryTable\" = proto.Field(\n",
                      "markdown": "`                Randomly pick groups of rows to scan.\n        \"\"\"\n        SAMPLE_METHOD_UNSPECIFIED = 0\n        TOP = 1\n        RANDOM_START = 2\n\n    table_reference: \"BigQueryTable\" = proto.Field(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 968,
                  "startColumn": 11,
                  "endLine": 968,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        Values:\n            SAMPLE_METHOD_UNSPECIFIED (0):\n                No description available.\n            TOP (1):\n                Scan groups of rows in the order BigQuery\n                provides (default). Multiple groups of rows may\n                be scanned in parallel, so results may not\n",
                    "rendered": {
                      "text": "        Values:\n            SAMPLE_METHOD_UNSPECIFIED (0):\n                No description available.\n            TOP (1):\n                Scan groups of rows in the order BigQuery\n                provides (default). Multiple groups of rows may\n                be scanned in parallel, so results may not\n",
                      "markdown": "`        Values:\n            SAMPLE_METHOD_UNSPECIFIED (0):\n                No description available.\n            TOP (1):\n                Scan groups of rows in the order BigQuery\n                provides (default). Multiple groups of rows may\n                be scanned in parallel, so results may not\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 830,
                  "startColumn": 7,
                  "endLine": 830,
                  "endColumn": 12,
                  "snippet": {
                    "text": "                contiguous.\n        \"\"\"\n        SAMPLE_METHOD_UNSPECIFIED = 0\n        TOP = 1\n        RANDOM_START = 2\n\n    class FileSet(proto.Message):\n",
                    "rendered": {
                      "text": "                contiguous.\n        \"\"\"\n        SAMPLE_METHOD_UNSPECIFIED = 0\n        TOP = 1\n        RANDOM_START = 2\n\n    class FileSet(proto.Message):\n",
                      "markdown": "`                contiguous.\n        \"\"\"\n        SAMPLE_METHOD_UNSPECIFIED = 0\n        TOP = 1\n        RANDOM_START = 2\n\n    class FileSet(proto.Message):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 823,
                  "startColumn": 29,
                  "endLine": 823,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            SAMPLE_METHOD_UNSPECIFIED (0):\n                No description available.\n            TOP (1):\n                Scan from the top (default).\n            RANDOM_START (2):\n                For each file larger than bytes_limit_per_file, randomly\n                pick the offset to start scanning. The scanned bytes are\n",
                    "rendered": {
                      "text": "            SAMPLE_METHOD_UNSPECIFIED (0):\n                No description available.\n            TOP (1):\n                Scan from the top (default).\n            RANDOM_START (2):\n                For each file larger than bytes_limit_per_file, randomly\n                pick the offset to start scanning. The scanned bytes are\n",
                      "markdown": "`            SAMPLE_METHOD_UNSPECIFIED (0):\n                No description available.\n            TOP (1):\n                Scan from the top (default).\n            RANDOM_START (2):\n                For each file larger than bytes_limit_per_file, randomly\n                pick the offset to start scanning. The scanned bytes are\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 822,
                  "startColumn": 11,
                  "endLine": 822,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        Values:\n            SAMPLE_METHOD_UNSPECIFIED (0):\n                No description available.\n            TOP (1):\n                Scan from the top (default).\n            RANDOM_START (2):\n                For each file larger than bytes_limit_per_file, randomly\n",
                    "rendered": {
                      "text": "        Values:\n            SAMPLE_METHOD_UNSPECIFIED (0):\n                No description available.\n            TOP (1):\n                Scan from the top (default).\n            RANDOM_START (2):\n                For each file larger than bytes_limit_per_file, randomly\n",
                      "markdown": "`        Values:\n            SAMPLE_METHOD_UNSPECIFIED (0):\n                No description available.\n            TOP (1):\n                Scan from the top (default).\n            RANDOM_START (2):\n                For each file larger than bytes_limit_per_file, randomly\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 61,
                  "endLine": 253,
                  "snippet": {
                    "text": "\n\nclass CustomInfoType(proto.Message):\n    r\"\"\"Custom information type provided by the user. Used to find\n    domain-specific sensitive information configurable to the data\n    in question.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n",
                    "rendered": {
                      "text": "\n\nclass CustomInfoType(proto.Message):\n    r\"\"\"Custom information type provided by the user. Used to find\n    domain-specific sensitive information configurable to the data\n    in question.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n",
                      "markdown": "`\n\nclass CustomInfoType(proto.Message):\n    r\"\"\"Custom information type provided by the user. Used to find\n    domain-specific sensitive information configurable to the data\n    in question.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/storage.py"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 45,
                  "endLine": 92,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        BINARY_FILE (1):\n            Includes all file extensions not covered by another entry.\n            Binary scanning attempts to convert the content of the file\n            to utf_8 to scan the file. If you wish to avoid this fall\n            back, specify one or more of the other FileType's in your\n            storage scan.\n        TEXT_FILE (2):\n",
                    "rendered": {
                      "text": "        BINARY_FILE (1):\n            Includes all file extensions not covered by another entry.\n            Binary scanning attempts to convert the content of the file\n            to utf_8 to scan the file. If you wish to avoid this fall\n            back, specify one or more of the other FileType's in your\n            storage scan.\n        TEXT_FILE (2):\n",
                      "markdown": "`        BINARY_FILE (1):\n            Includes all file extensions not covered by another entry.\n            Binary scanning attempts to convert the content of the file\n            to utf_8 to scan the file. If you wish to avoid this fall\n            back, specify one or more of the other FileType's in your\n            storage scan.\n        TEXT_FILE (2):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 2520,
                  "startColumn": 27,
                  "endLine": 2520,
                  "endColumn": 35,
                  "snippet": {
                    "text": "                attributes, like age, height, and gender.\n            CREDENTIAL (4):\n                Confidential or secret information, for\n                example, a password.\n            GOVERNMENT_ID (5):\n                An identification document issued by a\n                government.\n",
                    "rendered": {
                      "text": "                attributes, like age, height, and gender.\n            CREDENTIAL (4):\n                Confidential or secret information, for\n                example, a password.\n            GOVERNMENT_ID (5):\n                An identification document issued by a\n                government.\n",
                      "markdown": "`                attributes, like age, height, and gender.\n            CREDENTIAL (4):\n                Confidential or secret information, for\n                example, a password.\n            GOVERNMENT_ID (5):\n                An identification document issued by a\n                government.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4363,
                  "startColumn": 46,
                  "endLine": 4363,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\nclass CryptoDeterministicConfig(proto.Message):\n    r\"\"\"Pseudonymization method that generates deterministic\n    encryption for the given input. Outputs a base64 encoded\n    representation of the encrypted output. Uses AES-SIV based on\n    the RFC https://tools.ietf.org/html/rfc5297.\n\n",
                    "rendered": {
                      "text": "\nclass CryptoDeterministicConfig(proto.Message):\n    r\"\"\"Pseudonymization method that generates deterministic\n    encryption for the given input. Outputs a base64 encoded\n    representation of the encrypted output. Uses AES-SIV based on\n    the RFC https://tools.ietf.org/html/rfc5297.\n\n",
                      "markdown": "`\nclass CryptoDeterministicConfig(proto.Message):\n    r\"\"\"Pseudonymization method that generates deterministic\n    encryption for the given input. Outputs a base64 encoded\n    representation of the encrypted output. Uses AES-SIV based on\n    the RFC https://tools.ietf.org/html/rfc5297.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4343,
                  "startColumn": 14,
                  "endLine": 4343,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    r\"\"\"Pseudonymization method that generates surrogates via\n    cryptographic hashing. Uses SHA-256.\n    The key size must be either 32 or 64 bytes.\n    Outputs a base64 encoded representation of the hashed output\n    (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=).\n    Currently, only string and integer values can be hashed. See\n    https://cloud.google.com/dlp/docs/pseudonymization to learn\n",
                    "rendered": {
                      "text": "    r\"\"\"Pseudonymization method that generates surrogates via\n    cryptographic hashing. Uses SHA-256.\n    The key size must be either 32 or 64 bytes.\n    Outputs a base64 encoded representation of the hashed output\n    (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=).\n    Currently, only string and integer values can be hashed. See\n    https://cloud.google.com/dlp/docs/pseudonymization to learn\n",
                      "markdown": "`    r\"\"\"Pseudonymization method that generates surrogates via\n    cryptographic hashing. Uses SHA-256.\n    The key size must be either 32 or 64 bytes.\n    Outputs a base64 encoded representation of the hashed output\n    (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=).\n    Currently, only string and integer values can be hashed. See\n    https://cloud.google.com/dlp/docs/pseudonymization to learn\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 8805,
                  "startColumn": 59,
                  "endLine": 8805,
                  "endColumn": 63,
                  "snippet": {
                    "text": "        r\"\"\"A condition consisting of a value.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                    "rendered": {
                      "text": "        r\"\"\"A condition consisting of a value.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                      "markdown": "`        r\"\"\"A condition consisting of a value.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 8805,
                  "startColumn": 23,
                  "endLine": 8805,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        r\"\"\"A condition consisting of a value.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                    "rendered": {
                      "text": "        r\"\"\"A condition consisting of a value.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                      "markdown": "`        r\"\"\"A condition consisting of a value.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 8574,
                  "startColumn": 20,
                  "endLine": 8574,
                  "endColumn": 24,
                  "snippet": {
                    "text": "            The labels applied to the resource at the\n            time the profile was generated.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time at which the table was created.\n    \"\"\"\n\n    class State(proto.Enum):\n",
                    "rendered": {
                      "text": "            The labels applied to the resource at the\n            time the profile was generated.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time at which the table was created.\n    \"\"\"\n\n    class State(proto.Enum):\n",
                      "markdown": "`            The labels applied to the resource at the\n            time the profile was generated.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time at which the table was created.\n    \"\"\"\n\n    class State(proto.Enum):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 8571,
                  "startColumn": 46,
                  "endLine": 8571,
                  "endColumn": 50,
                  "snippet": {
                    "text": "        profile_last_generated (google.protobuf.timestamp_pb2.Timestamp):\n            The last time the profile was generated.\n        resource_labels (MutableMapping[str, str]):\n            The labels applied to the resource at the\n            time the profile was generated.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time at which the table was created.\n",
                    "rendered": {
                      "text": "        profile_last_generated (google.protobuf.timestamp_pb2.Timestamp):\n            The last time the profile was generated.\n        resource_labels (MutableMapping[str, str]):\n            The labels applied to the resource at the\n            time the profile was generated.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time at which the table was created.\n",
                      "markdown": "`        profile_last_generated (google.protobuf.timestamp_pb2.Timestamp):\n            The last time the profile was generated.\n        resource_labels (MutableMapping[str, str]):\n            The labels applied to the resource at the\n            time the profile was generated.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time at which the table was created.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 8132,
                  "startColumn": 19,
                  "endLine": 8132,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            storedInfoType will be created with the existing\n            configuration.\n        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Mask to control which fields get updated.\n    \"\"\"\n\n    name: str = proto.Field(\n",
                    "rendered": {
                      "text": "            storedInfoType will be created with the existing\n            configuration.\n        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Mask to control which fields get updated.\n    \"\"\"\n\n    name: str = proto.Field(\n",
                      "markdown": "`            storedInfoType will be created with the existing\n            configuration.\n        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Mask to control which fields get updated.\n    \"\"\"\n\n    name: str = proto.Field(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7886,
                  "startColumn": 55,
                  "endLine": 7886,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    https://cloud.google.com/dlp/docs/creating-custom-infotypes.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    https://cloud.google.com/dlp/docs/creating-custom-infotypes.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    https://cloud.google.com/dlp/docs/creating-custom-infotypes.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7886,
                  "startColumn": 19,
                  "endLine": 7886,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    https://cloud.google.com/dlp/docs/creating-custom-infotypes.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    https://cloud.google.com/dlp/docs/creating-custom-infotypes.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    https://cloud.google.com/dlp/docs/creating-custom-infotypes.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7820,
                  "startColumn": 55,
                  "endLine": 7820,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    dictionaries that satisfy the size requirements.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    dictionaries that satisfy the size requirements.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    dictionaries that satisfy the size requirements.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7820,
                  "startColumn": 19,
                  "endLine": 7820,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    dictionaries that satisfy the size requirements.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    dictionaries that satisfy the size requirements.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    dictionaries that satisfy the size requirements.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7652,
                  "startColumn": 19,
                  "endLine": 7652,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        deidentify_template (google.cloud.dlp_v2.types.DeidentifyTemplate):\n            New DeidentifyTemplate value.\n        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Mask to control which fields get updated.\n    \"\"\"\n\n    name: str = proto.Field(\n",
                    "rendered": {
                      "text": "        deidentify_template (google.cloud.dlp_v2.types.DeidentifyTemplate):\n            New DeidentifyTemplate value.\n        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Mask to control which fields get updated.\n    \"\"\"\n\n    name: str = proto.Field(\n",
                      "markdown": "`        deidentify_template (google.cloud.dlp_v2.types.DeidentifyTemplate):\n            New DeidentifyTemplate value.\n        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Mask to control which fields get updated.\n    \"\"\"\n\n    name: str = proto.Field(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7251,
                  "startColumn": 55,
                  "endLine": 7251,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    r\"\"\"Combines all of the information about a DLP job.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"Combines all of the information about a DLP job.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"Combines all of the information about a DLP job.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7251,
                  "startColumn": 19,
                  "endLine": 7251,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    r\"\"\"Combines all of the information about a DLP job.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"Combines all of the information about a DLP job.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"Combines all of the information about a DLP job.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7217,
                  "startColumn": 55,
                  "endLine": 7217,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    r\"\"\"The data that will be profiled.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"The data that will be profiled.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"The data that will be profiled.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7217,
                  "startColumn": 19,
                  "endLine": 7217,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    r\"\"\"The data that will be profiled.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"The data that will be profiled.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"The data that will be profiled.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7189,
                  "startColumn": 30,
                  "endLine": 7189,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            For more information, see\n            https://cloud.google.com/dlp/docs/data-profiles#data_residency.\n        data_profile_actions (MutableSequence[google.cloud.dlp_v2.types.DataProfileAction]):\n            Actions to execute at the completion of the\n            job.\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "            For more information, see\n            https://cloud.google.com/dlp/docs/data-profiles#data_residency.\n        data_profile_actions (MutableSequence[google.cloud.dlp_v2.types.DataProfileAction]):\n            Actions to execute at the completion of the\n            job.\n    \"\"\"\n\n",
                      "markdown": "`            For more information, see\n            https://cloud.google.com/dlp/docs/data-profiles#data_residency.\n        data_profile_actions (MutableSequence[google.cloud.dlp_v2.types.DataProfileAction]):\n            Actions to execute at the completion of the\n            job.\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7178,
                  "startColumn": 29,
                  "endLine": 7178,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            impact on data profiling.\n\n            Multiple templates may be provided if there is data in\n            multiple regions. At most one template must be specified\n            per-region (including \"global\"). Each region is scanned\n            using the applicable template. If no region-specific\n            template is specified, but a \"global\" template is specified,\n",
                    "rendered": {
                      "text": "            impact on data profiling.\n\n            Multiple templates may be provided if there is data in\n            multiple regions. At most one template must be specified\n            per-region (including \"global\"). Each region is scanned\n            using the applicable template. If no region-specific\n            template is specified, but a \"global\" template is specified,\n",
                      "markdown": "`            impact on data profiling.\n\n            Multiple templates may be provided if there is data in\n            multiple regions. At most one template must be specified\n            per-region (including \"global\"). Each region is scanned\n            using the applicable template. If no region-specific\n            template is specified, but a \"global\" template is specified,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7089,
                  "startColumn": 58,
                  "endLine": 7089,
                  "endColumn": 62,
                  "snippet": {
                    "text": "                Cloud Pub/Sub topic to send notifications to.\n                Format is projects/{project}/topics/{topic}.\n            event (google.cloud.dlp_v2.types.DataProfileAction.EventType):\n                The type of event that triggers a Pub/Sub. At most one\n                ``PubSubNotification`` per EventType is permitted.\n            pubsub_condition (google.cloud.dlp_v2.types.DataProfilePubSubCondition):\n                Conditions (e.g., data risk or sensitivity\n",
                    "rendered": {
                      "text": "                Cloud Pub/Sub topic to send notifications to.\n                Format is projects/{project}/topics/{topic}.\n            event (google.cloud.dlp_v2.types.DataProfileAction.EventType):\n                The type of event that triggers a Pub/Sub. At most one\n                ``PubSubNotification`` per EventType is permitted.\n            pubsub_condition (google.cloud.dlp_v2.types.DataProfilePubSubCondition):\n                Conditions (e.g., data risk or sensitivity\n",
                      "markdown": "`                Cloud Pub/Sub topic to send notifications to.\n                Format is projects/{project}/topics/{topic}.\n            event (google.cloud.dlp_v2.types.DataProfileAction.EventType):\n                The type of event that triggers a Pub/Sub. At most one\n                ``PubSubNotification`` per EventType is permitted.\n            pubsub_condition (google.cloud.dlp_v2.types.DataProfilePubSubCondition):\n                Conditions (e.g., data risk or sensitivity\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7014,
                  "startColumn": 55,
                  "endLine": 7014,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    r\"\"\"A task to execute when a data profile has been generated.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"A task to execute when a data profile has been generated.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"A task to execute when a data profile has been generated.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7014,
                  "startColumn": 19,
                  "endLine": 7014,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    r\"\"\"A task to execute when a data profile has been generated.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"A task to execute when a data profile has been generated.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"A task to execute when a data profile has been generated.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6985,
                  "startColumn": 30,
                  "endLine": 6985,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            InspectConfig. ``inspect_config`` will be merged into the\n            values persisted as part of the template.\n        actions (MutableSequence[google.cloud.dlp_v2.types.Action]):\n            Actions to execute at the completion of the\n            job.\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "            InspectConfig. ``inspect_config`` will be merged into the\n            values persisted as part of the template.\n        actions (MutableSequence[google.cloud.dlp_v2.types.Action]):\n            Actions to execute at the completion of the\n            job.\n    \"\"\"\n\n",
                      "markdown": "`            InspectConfig. ``inspect_config`` will be merged into the\n            values persisted as part of the template.\n        actions (MutableSequence[google.cloud.dlp_v2.types.Action]):\n            Actions to execute at the completion of the\n            job.\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6731,
                  "startColumn": 55,
                  "endLine": 6731,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    Google Cloud Storage.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    Google Cloud Storage.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    Google Cloud Storage.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6731,
                  "startColumn": 19,
                  "endLine": 6731,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    Google Cloud Storage.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    Google Cloud Storage.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    Google Cloud Storage.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6690,
                  "startColumn": 19,
                  "endLine": 6690,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        job_trigger (google.cloud.dlp_v2.types.JobTrigger):\n            New JobTrigger value.\n        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Mask to control which fields get updated.\n    \"\"\"\n\n    name: str = proto.Field(\n",
                    "rendered": {
                      "text": "        job_trigger (google.cloud.dlp_v2.types.JobTrigger):\n            New JobTrigger value.\n        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Mask to control which fields get updated.\n    \"\"\"\n\n    name: str = proto.Field(\n",
                      "markdown": "`        job_trigger (google.cloud.dlp_v2.types.JobTrigger):\n            New JobTrigger value.\n        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Mask to control which fields get updated.\n    \"\"\"\n\n    name: str = proto.Field(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6451,
                  "startColumn": 19,
                  "endLine": 6451,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        inspect_template (google.cloud.dlp_v2.types.InspectTemplate):\n            New InspectTemplate value.\n        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Mask to control which fields get updated.\n    \"\"\"\n\n    name: str = proto.Field(\n",
                    "rendered": {
                      "text": "        inspect_template (google.cloud.dlp_v2.types.InspectTemplate):\n            New InspectTemplate value.\n        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Mask to control which fields get updated.\n    \"\"\"\n\n    name: str = proto.Field(\n",
                      "markdown": "`        inspect_template (google.cloud.dlp_v2.types.InspectTemplate):\n            New InspectTemplate value.\n        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Mask to control which fields get updated.\n    \"\"\"\n\n    name: str = proto.Field(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6337,
                  "startColumn": 48,
                  "endLine": 6337,
                  "endColumn": 52,
                  "snippet": {
                    "text": "class TransformationConfig(proto.Message):\n    r\"\"\"User specified templates and configs for how to deidentify\n    structured, unstructures, and image files. User must provide\n    either a unstructured deidentify template or at least one redact\n    image config.\n\n    Attributes:\n",
                    "rendered": {
                      "text": "class TransformationConfig(proto.Message):\n    r\"\"\"User specified templates and configs for how to deidentify\n    structured, unstructures, and image files. User must provide\n    either a unstructured deidentify template or at least one redact\n    image config.\n\n    Attributes:\n",
                      "markdown": "`class TransformationConfig(proto.Message):\n    r\"\"\"User specified templates and configs for how to deidentify\n    structured, unstructures, and image files. User must provide\n    either a unstructured deidentify template or at least one redact\n    image config.\n\n    Attributes:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6072,
                  "startColumn": 55,
                  "endLine": 6072,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    more.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    more.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    more.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6072,
                  "startColumn": 19,
                  "endLine": 6072,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    more.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    more.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    more.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5984,
                  "startColumn": 59,
                  "endLine": 5984,
                  "endColumn": 63,
                  "snippet": {
                    "text": "        r\"\"\"What event needs to occur for a new job to be started.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                    "rendered": {
                      "text": "        r\"\"\"What event needs to occur for a new job to be started.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                      "markdown": "`        r\"\"\"What event needs to occur for a new job to be started.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5984,
                  "startColumn": 23,
                  "endLine": 5984,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        r\"\"\"What event needs to occur for a new job to be started.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                    "rendered": {
                      "text": "        r\"\"\"What event needs to occur for a new job to be started.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                      "markdown": "`        r\"\"\"What event needs to occur for a new job to be started.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5949,
                  "startColumn": 33,
                  "endLine": 5949,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            Output only. The creation timestamp of a\n            triggeredJob.\n        update_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The last update timestamp of a\n            triggeredJob.\n        last_run_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The timestamp of the last time\n",
                    "rendered": {
                      "text": "            Output only. The creation timestamp of a\n            triggeredJob.\n        update_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The last update timestamp of a\n            triggeredJob.\n        last_run_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The timestamp of the last time\n",
                      "markdown": "`            Output only. The creation timestamp of a\n            triggeredJob.\n        update_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The last update timestamp of a\n            triggeredJob.\n        last_run_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The timestamp of the last time\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5936,
                  "startColumn": 56,
                  "endLine": 5937,
                  "snippet": {
                    "text": "            A list of triggers which will be OR'ed\n            together. Only one in the list needs to trigger\n            for a job to be started. The list may contain\n            only a single Schedule trigger and must have at\n            least one object.\n        errors (MutableSequence[google.cloud.dlp_v2.types.Error]):\n            Output only. A stream of errors encountered\n            when the trigger was activated. Repeated errors\n",
                    "rendered": {
                      "text": "            A list of triggers which will be OR'ed\n            together. Only one in the list needs to trigger\n            for a job to be started. The list may contain\n            only a single Schedule trigger and must have at\n            least one object.\n        errors (MutableSequence[google.cloud.dlp_v2.types.Error]):\n            Output only. A stream of errors encountered\n            when the trigger was activated. Repeated errors\n",
                      "markdown": "`            A list of triggers which will be OR'ed\n            together. Only one in the list needs to trigger\n            for a job to be started. The list may contain\n            only a single Schedule trigger and must have at\n            least one object.\n        errors (MutableSequence[google.cloud.dlp_v2.types.Error]):\n            Output only. A stream of errors encountered\n            when the trigger was activated. Repeated errors\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5850,
                  "startColumn": 33,
                  "endLine": 5850,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            Output only. The creation timestamp of an\n            inspectTemplate.\n        update_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The last update timestamp of an\n            inspectTemplate.\n        deidentify_config (google.cloud.dlp_v2.types.DeidentifyConfig):\n            The core content of the template.\n",
                    "rendered": {
                      "text": "            Output only. The creation timestamp of an\n            inspectTemplate.\n        update_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The last update timestamp of an\n            inspectTemplate.\n        deidentify_config (google.cloud.dlp_v2.types.DeidentifyConfig):\n            The core content of the template.\n",
                      "markdown": "`            Output only. The creation timestamp of an\n            inspectTemplate.\n        update_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The last update timestamp of an\n            inspectTemplate.\n        deidentify_config (google.cloud.dlp_v2.types.DeidentifyConfig):\n            The core content of the template.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5793,
                  "startColumn": 33,
                  "endLine": 5793,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            Output only. The creation timestamp of an\n            inspectTemplate.\n        update_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The last update timestamp of an\n            inspectTemplate.\n        inspect_config (google.cloud.dlp_v2.types.InspectConfig):\n            The core content of the template.\n",
                    "rendered": {
                      "text": "            Output only. The creation timestamp of an\n            inspectTemplate.\n        update_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The last update timestamp of an\n            inspectTemplate.\n        inspect_config (google.cloud.dlp_v2.types.InspectConfig):\n            The core content of the template.\n",
                      "markdown": "`            Output only. The creation timestamp of an\n            inspectTemplate.\n        update_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The last update timestamp of an\n            inspectTemplate.\n        inspect_config (google.cloud.dlp_v2.types.InspectConfig):\n            The core content of the template.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5607,
                  "startColumn": 55,
                  "endLine": 5607,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    r\"\"\"Specifies the location of a transformation.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"Specifies the location of a transformation.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"Specifies the location of a transformation.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5607,
                  "startColumn": 19,
                  "endLine": 5607,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    r\"\"\"Specifies the location of a transformation.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"Specifies the location of a transformation.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"Specifies the location of a transformation.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5132,
                  "startColumn": 55,
                  "endLine": 5132,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    r\"\"\"The transformation to apply to the field.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"The transformation to apply to the field.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"The transformation to apply to the field.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5132,
                  "startColumn": 19,
                  "endLine": 5132,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    r\"\"\"The transformation to apply to the field.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"The transformation to apply to the field.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"The transformation to apply to the field.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5046,
                  "startColumn": 11,
                  "endLine": 5046,
                  "endColumn": 15,
                  "snippet": {
                    "text": "            days into the future.\n        lower_bound_days (int):\n            Required. For example, -5 means shift date to\n            at most 5 days back in the past.\n        context (google.cloud.dlp_v2.types.FieldId):\n            Points to the field that contains the\n            context, for example, an entity id. If set, must\n",
                    "rendered": {
                      "text": "            days into the future.\n        lower_bound_days (int):\n            Required. For example, -5 means shift date to\n            at most 5 days back in the past.\n        context (google.cloud.dlp_v2.types.FieldId):\n            Points to the field that contains the\n            context, for example, an entity id. If set, must\n",
                      "markdown": "`            days into the future.\n        lower_bound_days (int):\n            Required. For example, -5 means shift date to\n            at most 5 days back in the past.\n        context (google.cloud.dlp_v2.types.FieldId):\n            Points to the field that contains the\n            context, for example, an entity id. If set, must\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5042,
                  "startColumn": 46,
                  "endLine": 5042,
                  "endColumn": 50,
                  "snippet": {
                    "text": "            earlier in time. Must not be more than 365250\n            days (1000 years) each direction.\n\n            For example, 3 means shift date to at most 3\n            days into the future.\n        lower_bound_days (int):\n            Required. For example, -5 means shift date to\n",
                    "rendered": {
                      "text": "            earlier in time. Must not be more than 365250\n            days (1000 years) each direction.\n\n            For example, 3 means shift date to at most 3\n            days into the future.\n        lower_bound_days (int):\n            Required. For example, -5 means shift date to\n",
                      "markdown": "`            earlier in time. Must not be more than 365250\n            days (1000 years) each direction.\n\n            For example, 3 means shift date to at most 3\n            days into the future.\n        lower_bound_days (int):\n            Required. For example, -5 means shift date to\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5037,
                  "startColumn": 34,
                  "endLine": 5037,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    Attributes:\n        upper_bound_days (int):\n            Required. Range of shift in days. Actual\n            shift will be selected at random within this\n            range (inclusive ends). Negative means shift to\n            earlier in time. Must not be more than 365250\n            days (1000 years) each direction.\n",
                    "rendered": {
                      "text": "    Attributes:\n        upper_bound_days (int):\n            Required. Range of shift in days. Actual\n            shift will be selected at random within this\n            range (inclusive ends). Negative means shift to\n            earlier in time. Must not be more than 365250\n            days (1000 years) each direction.\n",
                      "markdown": "`    Attributes:\n        upper_bound_days (int):\n            Required. Range of shift in days. Actual\n            shift will be selected at random within this\n            range (inclusive ends). Negative means shift to\n            earlier in time. Must not be more than 365250\n            days (1000 years) each direction.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4917,
                  "startColumn": 55,
                  "endLine": 4917,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    unwrap the DEK.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    unwrap the DEK.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    unwrap the DEK.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4917,
                  "startColumn": 19,
                  "endLine": 4917,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    unwrap the DEK.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    unwrap the DEK.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    unwrap the DEK.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4763,
                  "startColumn": 55,
                  "endLine": 4763,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    plus warrant referential integrity.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    plus warrant referential integrity.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    plus warrant referential integrity.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4763,
                  "startColumn": 19,
                  "endLine": 4763,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    plus warrant referential integrity.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    plus warrant referential integrity.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    plus warrant referential integrity.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4753,
                  "startColumn": 43,
                  "endLine": 4753,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    function by reversing the surrogate back into the original\n    identifier. The identifier must be encoded as ASCII. For a given\n    crypto key and context, the same identifier will be replaced with\n    the same surrogate. Identifiers must be at least two characters\n    long. In the case that the identifier is the empty string, it will\n    be skipped. See https://cloud.google.com/dlp/docs/pseudonymization\n    to learn more.\n",
                    "rendered": {
                      "text": "    function by reversing the surrogate back into the original\n    identifier. The identifier must be encoded as ASCII. For a given\n    crypto key and context, the same identifier will be replaced with\n    the same surrogate. Identifiers must be at least two characters\n    long. In the case that the identifier is the empty string, it will\n    be skipped. See https://cloud.google.com/dlp/docs/pseudonymization\n    to learn more.\n",
                      "markdown": "`    function by reversing the surrogate back into the original\n    identifier. The identifier must be encoded as ASCII. For a given\n    crypto key and context, the same identifier will be replaced with\n    the same surrogate. Identifiers must be at least two characters\n    long. In the case that the identifier is the empty string, it will\n    be skipped. See https://cloud.google.com/dlp/docs/pseudonymization\n    to learn more.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4509,
                  "startColumn": 55,
                  "endLine": 4509,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    These will be left alone and skipped.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    These will be left alone and skipped.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    These will be left alone and skipped.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4509,
                  "startColumn": 19,
                  "endLine": 4509,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    These will be left alone and skipped.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    These will be left alone and skipped.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    These will be left alone and skipped.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4164,
                  "startColumn": 55,
                  "endLine": 4164,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    r\"\"\"A rule for transforming a value.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"A rule for transforming a value.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"A rule for transforming a value.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4164,
                  "startColumn": 19,
                  "endLine": 4164,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    r\"\"\"A rule for transforming a value.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"A rule for transforming a value.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"A rule for transforming a value.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4115,
                  "startColumn": 55,
                  "endLine": 4115,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    ``TransformationOverviews``.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    ``TransformationOverviews``.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    ``TransformationOverviews``.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4115,
                  "startColumn": 19,
                  "endLine": 4115,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    ``TransformationOverviews``.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    ``TransformationOverviews``.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    ``TransformationOverviews``.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4019,
                  "startColumn": 59,
                  "endLine": 4019,
                  "endColumn": 63,
                  "snippet": {
                    "text": "        occur.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                    "rendered": {
                      "text": "        occur.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                      "markdown": "`        occur.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4019,
                  "startColumn": 23,
                  "endLine": 4019,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        occur.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                    "rendered": {
                      "text": "        occur.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                      "markdown": "`        occur.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3952,
                  "startColumn": 55,
                  "endLine": 3952,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    r\"\"\"The configuration that controls how the data will change.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"The configuration that controls how the data will change.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"The configuration that controls how the data will change.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3952,
                  "startColumn": 19,
                  "endLine": 3952,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    r\"\"\"The configuration that controls how the data will change.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"The configuration that controls how the data will change.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"The configuration that controls how the data will change.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3788,
                  "startColumn": 55,
                  "endLine": 3788,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    int64 only holds up to 8 bytes of data.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    int64 only holds up to 8 bytes of data.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    int64 only holds up to 8 bytes of data.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3788,
                  "startColumn": 19,
                  "endLine": 3788,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    int64 only holds up to 8 bytes of data.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    int64 only holds up to 8 bytes of data.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    int64 only holds up to 8 bytes of data.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3652,
                  "startColumn": 49,
                  "endLine": 3652,
                  "endColumn": 53,
                  "snippet": {
                    "text": "                bucket_values (MutableSequence[google.cloud.dlp_v2.types.AnalyzeDataSourceRiskDetails.DeltaPresenceEstimationResult.DeltaPresenceEstimationQuasiIdValues]):\n                    Sample of quasi-identifier tuple values in\n                    this bucket. The total number of classes\n                    returned per bucket is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct quasi-identifier\n                    tuple values in this bucket.\n",
                    "rendered": {
                      "text": "                bucket_values (MutableSequence[google.cloud.dlp_v2.types.AnalyzeDataSourceRiskDetails.DeltaPresenceEstimationResult.DeltaPresenceEstimationQuasiIdValues]):\n                    Sample of quasi-identifier tuple values in\n                    this bucket. The total number of classes\n                    returned per bucket is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct quasi-identifier\n                    tuple values in this bucket.\n",
                      "markdown": "`                bucket_values (MutableSequence[google.cloud.dlp_v2.types.AnalyzeDataSourceRiskDetails.DeltaPresenceEstimationResult.DeltaPresenceEstimationQuasiIdValues]):\n                    Sample of quasi-identifier tuple values in\n                    this bucket. The total number of classes\n                    returned per bucket is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct quasi-identifier\n                    tuple values in this bucket.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3549,
                  "startColumn": 49,
                  "endLine": 3549,
                  "endColumn": 53,
                  "snippet": {
                    "text": "                bucket_values (MutableSequence[google.cloud.dlp_v2.types.AnalyzeDataSourceRiskDetails.KMapEstimationResult.KMapEstimationQuasiIdValues]):\n                    Sample of quasi-identifier tuple values in\n                    this bucket. The total number of classes\n                    returned per bucket is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct quasi-identifier\n                    tuple values in this bucket.\n",
                    "rendered": {
                      "text": "                bucket_values (MutableSequence[google.cloud.dlp_v2.types.AnalyzeDataSourceRiskDetails.KMapEstimationResult.KMapEstimationQuasiIdValues]):\n                    Sample of quasi-identifier tuple values in\n                    this bucket. The total number of classes\n                    returned per bucket is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct quasi-identifier\n                    tuple values in this bucket.\n",
                      "markdown": "`                bucket_values (MutableSequence[google.cloud.dlp_v2.types.AnalyzeDataSourceRiskDetails.KMapEstimationResult.KMapEstimationQuasiIdValues]):\n                    Sample of quasi-identifier tuple values in\n                    this bucket. The total number of classes\n                    returned per bucket is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct quasi-identifier\n                    tuple values in this bucket.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3455,
                  "startColumn": 29,
                  "endLine": 3455,
                  "endColumn": 33,
                  "snippet": {
                    "text": "                bucket_values (MutableSequence[google.cloud.dlp_v2.types.AnalyzeDataSourceRiskDetails.LDiversityResult.LDiversityEquivalenceClass]):\n                    Sample of equivalence classes in this bucket.\n                    The total number of classes returned per bucket\n                    is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct equivalence classes\n                    in this bucket.\n",
                    "rendered": {
                      "text": "                bucket_values (MutableSequence[google.cloud.dlp_v2.types.AnalyzeDataSourceRiskDetails.LDiversityResult.LDiversityEquivalenceClass]):\n                    Sample of equivalence classes in this bucket.\n                    The total number of classes returned per bucket\n                    is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct equivalence classes\n                    in this bucket.\n",
                      "markdown": "`                bucket_values (MutableSequence[google.cloud.dlp_v2.types.AnalyzeDataSourceRiskDetails.LDiversityResult.LDiversityEquivalenceClass]):\n                    Sample of equivalence classes in this bucket.\n                    The total number of classes returned per bucket\n                    is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct equivalence classes\n                    in this bucket.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3349,
                  "startColumn": 29,
                  "endLine": 3349,
                  "endColumn": 33,
                  "snippet": {
                    "text": "                bucket_values (MutableSequence[google.cloud.dlp_v2.types.AnalyzeDataSourceRiskDetails.KAnonymityResult.KAnonymityEquivalenceClass]):\n                    Sample of equivalence classes in this bucket.\n                    The total number of classes returned per bucket\n                    is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct equivalence classes\n                    in this bucket.\n",
                    "rendered": {
                      "text": "                bucket_values (MutableSequence[google.cloud.dlp_v2.types.AnalyzeDataSourceRiskDetails.KAnonymityResult.KAnonymityEquivalenceClass]):\n                    Sample of equivalence classes in this bucket.\n                    The total number of classes returned per bucket\n                    is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct equivalence classes\n                    in this bucket.\n",
                      "markdown": "`                bucket_values (MutableSequence[google.cloud.dlp_v2.types.AnalyzeDataSourceRiskDetails.KAnonymityResult.KAnonymityEquivalenceClass]):\n                    Sample of equivalence classes in this bucket.\n                    The total number of classes returned per bucket\n                    is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct equivalence classes\n                    in this bucket.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3264,
                  "startColumn": 29,
                  "endLine": 3264,
                  "endColumn": 33,
                  "snippet": {
                    "text": "                bucket_values (MutableSequence[google.cloud.dlp_v2.types.ValueFrequency]):\n                    Sample of value frequencies in this bucket.\n                    The total number of values returned per bucket\n                    is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct values in this\n                    bucket.\n",
                    "rendered": {
                      "text": "                bucket_values (MutableSequence[google.cloud.dlp_v2.types.ValueFrequency]):\n                    Sample of value frequencies in this bucket.\n                    The total number of values returned per bucket\n                    is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct values in this\n                    bucket.\n",
                      "markdown": "`                bucket_values (MutableSequence[google.cloud.dlp_v2.types.ValueFrequency]):\n                    Sample of value frequencies in this bucket.\n                    The total number of values returned per bucket\n                    is capped at 20.\n                bucket_value_count (int):\n                    Total number of distinct values in this\n                    bucket.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3173,
                  "startColumn": 55,
                  "endLine": 3173,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    r\"\"\"Result of a risk analysis operation request.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"Result of a risk analysis operation request.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"Result of a risk analysis operation request.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3173,
                  "startColumn": 19,
                  "endLine": 3173,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    r\"\"\"Result of a risk analysis operation request.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"Result of a risk analysis operation request.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"Result of a risk analysis operation request.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 2959,
                  "startColumn": 63,
                  "endLine": 2959,
                  "endColumn": 67,
                  "snippet": {
                    "text": "            r\"\"\"A column with a semantic tag attached.\n\n            This message has `oneof`_ fields (mutually exclusive fields).\n            For each oneof, at most one member field can be set at the same time.\n            Setting any member of the oneof automatically clears all other\n            members.\n\n",
                    "rendered": {
                      "text": "            r\"\"\"A column with a semantic tag attached.\n\n            This message has `oneof`_ fields (mutually exclusive fields).\n            For each oneof, at most one member field can be set at the same time.\n            Setting any member of the oneof automatically clears all other\n            members.\n\n",
                      "markdown": "`            r\"\"\"A column with a semantic tag attached.\n\n            This message has `oneof`_ fields (mutually exclusive fields).\n            For each oneof, at most one member field can be set at the same time.\n            Setting any member of the oneof automatically clears all other\n            members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 2959,
                  "startColumn": 27,
                  "endLine": 2959,
                  "endColumn": 31,
                  "snippet": {
                    "text": "            r\"\"\"A column with a semantic tag attached.\n\n            This message has `oneof`_ fields (mutually exclusive fields).\n            For each oneof, at most one member field can be set at the same time.\n            Setting any member of the oneof automatically clears all other\n            members.\n\n",
                    "rendered": {
                      "text": "            r\"\"\"A column with a semantic tag attached.\n\n            This message has `oneof`_ fields (mutually exclusive fields).\n            For each oneof, at most one member field can be set at the same time.\n            Setting any member of the oneof automatically clears all other\n            members.\n\n",
                      "markdown": "`            r\"\"\"A column with a semantic tag attached.\n\n            This message has `oneof`_ fields (mutually exclusive fields).\n            For each oneof, at most one member field can be set at the same time.\n            Setting any member of the oneof automatically clears all other\n            members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 2797,
                  "startColumn": 55,
                  "endLine": 2797,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    r\"\"\"Privacy metric to compute for reidentification risk analysis.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"Privacy metric to compute for reidentification risk analysis.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"Privacy metric to compute for reidentification risk analysis.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 2797,
                  "startColumn": 19,
                  "endLine": 2797,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    r\"\"\"Privacy metric to compute for reidentification risk analysis.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"Privacy metric to compute for reidentification risk analysis.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"Privacy metric to compute for reidentification risk analysis.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 2674,
                  "startColumn": 55,
                  "endLine": 2674,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    r\"\"\"A column with a semantic tag attached.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"A column with a semantic tag attached.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"A column with a semantic tag attached.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 2674,
                  "startColumn": 19,
                  "endLine": 2674,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    r\"\"\"A column with a semantic tag attached.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"A column with a semantic tag attached.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"A column with a semantic tag attached.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 2649,
                  "startColumn": 30,
                  "endLine": 2649,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        source_table (google.cloud.dlp_v2.types.BigQueryTable):\n            Input dataset to compute metrics over.\n        actions (MutableSequence[google.cloud.dlp_v2.types.Action]):\n            Actions to execute at the completion of the\n            job. Are executed in the order provided.\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "        source_table (google.cloud.dlp_v2.types.BigQueryTable):\n            Input dataset to compute metrics over.\n        actions (MutableSequence[google.cloud.dlp_v2.types.Action]):\n            Actions to execute at the completion of the\n            job. Are executed in the order provided.\n    \"\"\"\n\n",
                      "markdown": "`        source_table (google.cloud.dlp_v2.types.BigQueryTable):\n            Input dataset to compute metrics over.\n        actions (MutableSequence[google.cloud.dlp_v2.types.Action]):\n            Actions to execute at the completion of the\n            job. Are executed in the order provided.\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 2314,
                  "startColumn": 55,
                  "endLine": 2314,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    geographic location, industry, and data type.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    geographic location, industry, and data type.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    geographic location, industry, and data type.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 2314,
                  "startColumn": 19,
                  "endLine": 2314,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    geographic location, industry, and data type.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    geographic location, industry, and data type.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    geographic location, industry, and data type.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 2161,
                  "startColumn": 25,
                  "endLine": 2161,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        Attributes:\n            snapshot_inspect_template (google.cloud.dlp_v2.types.InspectTemplate):\n                If run with an InspectTemplate, a snapshot of\n                its state at the time of this run.\n            job_config (google.cloud.dlp_v2.types.InspectJobConfig):\n                Inspect config.\n        \"\"\"\n",
                    "rendered": {
                      "text": "        Attributes:\n            snapshot_inspect_template (google.cloud.dlp_v2.types.InspectTemplate):\n                If run with an InspectTemplate, a snapshot of\n                its state at the time of this run.\n            job_config (google.cloud.dlp_v2.types.InspectJobConfig):\n                Inspect config.\n        \"\"\"\n",
                      "markdown": "`        Attributes:\n            snapshot_inspect_template (google.cloud.dlp_v2.types.InspectTemplate):\n                If run with an InspectTemplate, a snapshot of\n                its state at the time of this run.\n            job_config (google.cloud.dlp_v2.types.InspectJobConfig):\n                Inspect config.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 1597,
                  "startColumn": 59,
                  "endLine": 1597,
                  "endColumn": 63,
                  "snippet": {
                    "text": "        occur.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                    "rendered": {
                      "text": "        occur.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                      "markdown": "`        occur.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 1597,
                  "startColumn": 23,
                  "endLine": 1597,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        occur.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                    "rendered": {
                      "text": "        occur.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n",
                      "markdown": "`        occur.\n\n        This message has `oneof`_ fields (mutually exclusive fields).\n        For each oneof, at most one member field can be set at the same time.\n        Setting any member of the oneof automatically clears all other\n        members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 1211,
                  "startColumn": 55,
                  "endLine": 1211,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    image, or metadata container.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    image, or metadata container.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    image, or metadata container.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 1211,
                  "startColumn": 19,
                  "endLine": 1211,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    image, or metadata container.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    image, or metadata container.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    image, or metadata container.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 926,
                  "startColumn": 55,
                  "endLine": 926,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    r\"\"\"\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 926,
                  "startColumn": 19,
                  "endLine": 926,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    r\"\"\"\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 744,
                  "startColumn": 28,
                  "endLine": 744,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    \"\"\"\n\n    class FindingLimits(proto.Message):\n        r\"\"\"Configuration to control the number of findings returned for\n        inspection. This is not used for de-identification or data\n        profiling.\n\n",
                    "rendered": {
                      "text": "    \"\"\"\n\n    class FindingLimits(proto.Message):\n        r\"\"\"Configuration to control the number of findings returned for\n        inspection. This is not used for de-identification or data\n        profiling.\n\n",
                      "markdown": "`    \"\"\"\n\n    class FindingLimits(proto.Message):\n        r\"\"\"Configuration to control the number of findings returned for\n        inspection. This is not used for de-identification or data\n        profiling.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 712,
                  "startColumn": 28,
                  "endLine": 712,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            See https://cloud.google.com/dlp/docs/likelihood\n            to learn more.\n        limits (google.cloud.dlp_v2.types.InspectConfig.FindingLimits):\n            Configuration to control the number of findings returned.\n            This is not used for data profiling.\n\n            When redacting sensitive data from images, finding limits\n",
                    "rendered": {
                      "text": "            See https://cloud.google.com/dlp/docs/likelihood\n            to learn more.\n        limits (google.cloud.dlp_v2.types.InspectConfig.FindingLimits):\n            Configuration to control the number of findings returned.\n            This is not used for data profiling.\n\n            When redacting sensitive data from images, finding limits\n",
                      "markdown": "`            See https://cloud.google.com/dlp/docs/likelihood\n            to learn more.\n        limits (google.cloud.dlp_v2.types.InspectConfig.FindingLimits):\n            Configuration to control the number of findings returned.\n            This is not used for data profiling.\n\n            When redacting sensitive data from images, finding limits\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 702,
                  "startColumn": 31,
                  "endLine": 702,
                  "endColumn": 40,
                  "snippet": {
                    "text": "            to run. By default this may be all types, but may change\n            over time as detectors are updated.\n\n            If you need precise control and predictability as to what\n            detectors are run you should specify specific InfoTypes\n            listed in the reference, otherwise a default list will be\n            used, which may change over time.\n",
                    "rendered": {
                      "text": "            to run. By default this may be all types, but may change\n            over time as detectors are updated.\n\n            If you need precise control and predictability as to what\n            detectors are run you should specify specific InfoTypes\n            listed in the reference, otherwise a default list will be\n            used, which may change over time.\n",
                      "markdown": "`            to run. By default this may be all types, but may change\n            over time as detectors are updated.\n\n            If you need precise control and predictability as to what\n            detectors are run you should specify specific InfoTypes\n            listed in the reference, otherwise a default list will be\n            used, which may change over time.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 694,
                  "startColumn": 18,
                  "endLine": 695,
                  "snippet": {
                    "text": "        info_types (MutableSequence[google.cloud.dlp_v2.types.InfoType]):\n            Restricts what info_types to look for. The values must\n            correspond to InfoType values returned by ListInfoTypes or\n            listed at\n            https://cloud.google.com/dlp/docs/infotypes-reference.\n\n            When no InfoTypes or CustomInfoTypes are specified in a\n            request, the system may automatically choose what detectors\n",
                    "rendered": {
                      "text": "        info_types (MutableSequence[google.cloud.dlp_v2.types.InfoType]):\n            Restricts what info_types to look for. The values must\n            correspond to InfoType values returned by ListInfoTypes or\n            listed at\n            https://cloud.google.com/dlp/docs/infotypes-reference.\n\n            When no InfoTypes or CustomInfoTypes are specified in a\n            request, the system may automatically choose what detectors\n",
                      "markdown": "`        info_types (MutableSequence[google.cloud.dlp_v2.types.InfoType]):\n            Restricts what info_types to look for. The values must\n            correspond to InfoType values returned by ListInfoTypes or\n            listed at\n            https://cloud.google.com/dlp/docs/infotypes-reference.\n\n            When no InfoTypes or CustomInfoTypes are specified in a\n            request, the system may automatically choose what detectors\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 629,
                  "startColumn": 55,
                  "endLine": 629,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    ``InspectionRuleSet``.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    ``InspectionRuleSet``.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    ``InspectionRuleSet``.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 629,
                  "startColumn": 19,
                  "endLine": 629,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    ``InspectionRuleSet``.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    ``InspectionRuleSet``.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    ``InspectionRuleSet``.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 562,
                  "startColumn": 55,
                  "endLine": 562,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    specified in ``InspectionRuleSet`` are removed from results.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    specified in ``InspectionRuleSet`` are removed from results.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    specified in ``InspectionRuleSet`` are removed from results.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 562,
                  "startColumn": 19,
                  "endLine": 562,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    specified in ``InspectionRuleSet`` are removed from results.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    specified in ``InspectionRuleSet`` are removed from results.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    specified in ``InspectionRuleSet`` are removed from results.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 25,
                  "endLine": 358,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        MATCHING_TYPE_PARTIAL_MATCH (2):\n            Partial match.\n\n            - Dictionary: at least one of the tokens in the\n              finding matches\n            - Regex: substring of the finding matches\n            - Exclude info type: intersects with affecting\n",
                    "rendered": {
                      "text": "        MATCHING_TYPE_PARTIAL_MATCH (2):\n            Partial match.\n\n            - Dictionary: at least one of the tokens in the\n              finding matches\n            - Regex: substring of the finding matches\n            - Exclude info type: intersects with affecting\n",
                      "markdown": "`        MATCHING_TYPE_PARTIAL_MATCH (2):\n            Partial match.\n\n            - Dictionary: at least one of the tokens in the\n              finding matches\n            - Regex: substring of the finding matches\n            - Exclude info type: intersects with affecting\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 46,
                  "endLine": 217,
                  "endColumn": 50,
                  "snippet": {
                    "text": "            row exceeds BigQuery's max row size.\n        METADATA_UNRETRIEVABLE (3):\n            This will be set when there is a finding in\n            the custom metadata of a file, but at the write\n            time of the transformed file, this key / value\n            pair is unretrievable.\n        SUCCESS (4):\n",
                    "rendered": {
                      "text": "            row exceeds BigQuery's max row size.\n        METADATA_UNRETRIEVABLE (3):\n            This will be set when there is a finding in\n            the custom metadata of a file, but at the write\n            time of the transformed file, this key / value\n            pair is unretrievable.\n        SUCCESS (4):\n",
                      "markdown": "`            row exceeds BigQuery's max row size.\n        METADATA_UNRETRIEVABLE (3):\n            This will be set when there is a finding in\n            the custom metadata of a file, but at the write\n            time of the transformed file, this key / value\n            pair is unretrievable.\n        SUCCESS (4):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 8718,
                  "startColumn": 11,
                  "endLine": 8718,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        status (google.rpc.status_pb2.Status):\n            Profiling status code and optional message\n        timestamp (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the profile generation status was\n            updated\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "        status (google.rpc.status_pb2.Status):\n            Profiling status code and optional message\n        timestamp (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the profile generation status was\n            updated\n    \"\"\"\n\n",
                      "markdown": "`        status (google.rpc.status_pb2.Status):\n            Profiling status code and optional message\n        timestamp (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the profile generation status was\n            updated\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 8574,
                  "startColumn": 15,
                  "endLine": 8574,
                  "endColumn": 21,
                  "snippet": {
                    "text": "            The labels applied to the resource at the\n            time the profile was generated.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time at which the table was created.\n    \"\"\"\n\n    class State(proto.Enum):\n",
                    "rendered": {
                      "text": "            The labels applied to the resource at the\n            time the profile was generated.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time at which the table was created.\n    \"\"\"\n\n    class State(proto.Enum):\n",
                      "markdown": "`            The labels applied to the resource at the\n            time the profile was generated.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time at which the table was created.\n    \"\"\"\n\n    class State(proto.Enum):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 8572,
                  "startColumn": 11,
                  "endLine": 8572,
                  "endColumn": 17,
                  "snippet": {
                    "text": "            The last time the profile was generated.\n        resource_labels (MutableMapping[str, str]):\n            The labels applied to the resource at the\n            time the profile was generated.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time at which the table was created.\n    \"\"\"\n",
                    "rendered": {
                      "text": "            The last time the profile was generated.\n        resource_labels (MutableMapping[str, str]):\n            The labels applied to the resource at the\n            time the profile was generated.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time at which the table was created.\n    \"\"\"\n",
                      "markdown": "`            The last time the profile was generated.\n        resource_labels (MutableMapping[str, str]):\n            The labels applied to the resource at the\n            time the profile was generated.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time at which the table was created.\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 8569,
                  "startColumn": 20,
                  "endLine": 8569,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        resource_visibility (google.cloud.dlp_v2.types.ResourceVisibility):\n            How broadly a resource has been shared.\n        profile_last_generated (google.protobuf.timestamp_pb2.Timestamp):\n            The last time the profile was generated.\n        resource_labels (MutableMapping[str, str]):\n            The labels applied to the resource at the\n            time the profile was generated.\n",
                    "rendered": {
                      "text": "        resource_visibility (google.cloud.dlp_v2.types.ResourceVisibility):\n            How broadly a resource has been shared.\n        profile_last_generated (google.protobuf.timestamp_pb2.Timestamp):\n            The last time the profile was generated.\n        resource_labels (MutableMapping[str, str]):\n            The labels applied to the resource at the\n            time the profile was generated.\n",
                      "markdown": "`        resource_visibility (google.cloud.dlp_v2.types.ResourceVisibility):\n            How broadly a resource has been shared.\n        profile_last_generated (google.protobuf.timestamp_pb2.Timestamp):\n            The last time the profile was generated.\n        resource_labels (MutableMapping[str, str]):\n            The labels applied to the resource at the\n            time the profile was generated.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 8551,
                  "startColumn": 25,
                  "endLine": 8551,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        last_modified_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time when this table was last modified\n        expiration_time (google.protobuf.timestamp_pb2.Timestamp):\n            Optional. The time when this table expires.\n        scanned_column_count (int):\n            The number of columns profiled in the table.\n        failed_column_count (int):\n",
                    "rendered": {
                      "text": "        last_modified_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time when this table was last modified\n        expiration_time (google.protobuf.timestamp_pb2.Timestamp):\n            Optional. The time when this table expires.\n        scanned_column_count (int):\n            The number of columns profiled in the table.\n        failed_column_count (int):\n",
                      "markdown": "`        last_modified_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time when this table was last modified\n        expiration_time (google.protobuf.timestamp_pb2.Timestamp):\n            Optional. The time when this table expires.\n        scanned_column_count (int):\n            The number of columns profiled in the table.\n        failed_column_count (int):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 8549,
                  "startColumn": 15,
                  "endLine": 8549,
                  "endColumn": 21,
                  "snippet": {
                    "text": "            The snapshot of the configurations used to\n            generate the profile.\n        last_modified_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time when this table was last modified\n        expiration_time (google.protobuf.timestamp_pb2.Timestamp):\n            Optional. The time when this table expires.\n        scanned_column_count (int):\n",
                    "rendered": {
                      "text": "            The snapshot of the configurations used to\n            generate the profile.\n        last_modified_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time when this table was last modified\n        expiration_time (google.protobuf.timestamp_pb2.Timestamp):\n            Optional. The time when this table expires.\n        scanned_column_count (int):\n",
                      "markdown": "`            The snapshot of the configurations used to\n            generate the profile.\n        last_modified_time (google.protobuf.timestamp_pb2.Timestamp):\n            The time when this table was last modified\n        expiration_time (google.protobuf.timestamp_pb2.Timestamp):\n            Optional. The time when this table expires.\n        scanned_column_count (int):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 8209,
                  "startColumn": 50,
                  "endLine": 8209,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the most recent\n               version of the resource was created.\n            -  ``state``: corresponds to the state of the resource.\n            -  ``name``: corresponds to resource name.\n",
                    "rendered": {
                      "text": "\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the most recent\n               version of the resource was created.\n            -  ``state``: corresponds to the state of the resource.\n            -  ``name``: corresponds to resource name.\n",
                      "markdown": "`\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the most recent\n               version of the resource was created.\n            -  ``state``: corresponds to the state of the resource.\n            -  ``name``: corresponds to resource name.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7735,
                  "startColumn": 50,
                  "endLine": 7735,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n            -  ``create_time``: corresponds to the time the template was\n               created.\n            -  ``update_time``: corresponds to the time the template was\n               last updated.\n            -  ``name``: corresponds to the template's name.\n            -  ``display_name``: corresponds to the template's display\n",
                    "rendered": {
                      "text": "\n            -  ``create_time``: corresponds to the time the template was\n               created.\n            -  ``update_time``: corresponds to the time the template was\n               last updated.\n            -  ``name``: corresponds to the template's name.\n            -  ``display_name``: corresponds to the template's display\n",
                      "markdown": "`\n            -  ``create_time``: corresponds to the time the template was\n               created.\n            -  ``update_time``: corresponds to the time the template was\n               last updated.\n            -  ``name``: corresponds to the template's name.\n            -  ``display_name``: corresponds to the template's display\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7733,
                  "startColumn": 50,
                  "endLine": 7733,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the template was\n               created.\n            -  ``update_time``: corresponds to the time the template was\n               last updated.\n",
                    "rendered": {
                      "text": "\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the template was\n               created.\n            -  ``update_time``: corresponds to the time the template was\n               last updated.\n",
                      "markdown": "`\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the template was\n               created.\n            -  ``update_time``: corresponds to the time the template was\n               last updated.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7472,
                  "startColumn": 47,
                  "endLine": 7472,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n            -  ``create_time``: corresponds to the time the job was\n               created.\n            -  ``end_time``: corresponds to the time the job ended.\n            -  ``name``: corresponds to the job's name.\n            -  ``state``: corresponds to ``state``\n        location_id (str):\n",
                    "rendered": {
                      "text": "\n            -  ``create_time``: corresponds to the time the job was\n               created.\n            -  ``end_time``: corresponds to the time the job ended.\n            -  ``name``: corresponds to the job's name.\n            -  ``state``: corresponds to ``state``\n        location_id (str):\n",
                      "markdown": "`\n            -  ``create_time``: corresponds to the time the job was\n               created.\n            -  ``end_time``: corresponds to the time the job ended.\n            -  ``name``: corresponds to the job's name.\n            -  ``state``: corresponds to ``state``\n        location_id (str):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7470,
                  "startColumn": 50,
                  "endLine": 7470,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the job was\n               created.\n            -  ``end_time``: corresponds to the time the job ended.\n            -  ``name``: corresponds to the job's name.\n",
                    "rendered": {
                      "text": "\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the job was\n               created.\n            -  ``end_time``: corresponds to the time the job ended.\n            -  ``name``: corresponds to the job's name.\n",
                      "markdown": "`\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the job was\n               created.\n            -  ``end_time``: corresponds to the time the job ended.\n            -  ``name``: corresponds to the job's name.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7438,
                  "startColumn": 52,
                  "endLine": 7438,
                  "endColumn": 58,
                  "snippet": {
                    "text": "               -  ``state`` - RUNNING|CANCELED|FINISHED|FAILED\n               -  'end_time\\` - Corresponds to the time the job\n                  finished.\n               -  'start_time\\` - Corresponds to the time the job\n                  finished.\n\n            -  The operator must be ``=`` or ``!=``.\n",
                    "rendered": {
                      "text": "               -  ``state`` - RUNNING|CANCELED|FINISHED|FAILED\n               -  'end_time\\` - Corresponds to the time the job\n                  finished.\n               -  'start_time\\` - Corresponds to the time the job\n                  finished.\n\n            -  The operator must be ``=`` or ``!=``.\n",
                      "markdown": "`               -  ``state`` - RUNNING|CANCELED|FINISHED|FAILED\n               -  'end_time\\` - Corresponds to the time the job\n                  finished.\n               -  'start_time\\` - Corresponds to the time the job\n                  finished.\n\n            -  The operator must be ``=`` or ``!=``.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7436,
                  "startColumn": 50,
                  "endLine": 7436,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            -  Supported fields for risk analysis jobs:\n\n               -  ``state`` - RUNNING|CANCELED|FINISHED|FAILED\n               -  'end_time\\` - Corresponds to the time the job\n                  finished.\n               -  'start_time\\` - Corresponds to the time the job\n                  finished.\n",
                    "rendered": {
                      "text": "            -  Supported fields for risk analysis jobs:\n\n               -  ``state`` - RUNNING|CANCELED|FINISHED|FAILED\n               -  'end_time\\` - Corresponds to the time the job\n                  finished.\n               -  'start_time\\` - Corresponds to the time the job\n                  finished.\n",
                      "markdown": "`            -  Supported fields for risk analysis jobs:\n\n               -  ``state`` - RUNNING|CANCELED|FINISHED|FAILED\n               -  'end_time\\` - Corresponds to the time the job\n                  finished.\n               -  'start_time\\` - Corresponds to the time the job\n                  finished.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7430,
                  "startColumn": 52,
                  "endLine": 7430,
                  "endColumn": 58,
                  "snippet": {
                    "text": "                  created the job.\n               -  'end_time\\` - Corresponds to the time the job\n                  finished.\n               -  'start_time\\` - Corresponds to the time the job\n                  finished.\n\n            -  Supported fields for risk analysis jobs:\n",
                    "rendered": {
                      "text": "                  created the job.\n               -  'end_time\\` - Corresponds to the time the job\n                  finished.\n               -  'start_time\\` - Corresponds to the time the job\n                  finished.\n\n            -  Supported fields for risk analysis jobs:\n",
                      "markdown": "`                  created the job.\n               -  'end_time\\` - Corresponds to the time the job\n                  finished.\n               -  'start_time\\` - Corresponds to the time the job\n                  finished.\n\n            -  Supported fields for risk analysis jobs:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7428,
                  "startColumn": 50,
                  "endLine": 7428,
                  "endColumn": 56,
                  "snippet": {
                    "text": "                  DATASTORE|CLOUD_STORAGE|BIGQUERY\n               -  ``trigger_name`` - The name of the trigger that\n                  created the job.\n               -  'end_time\\` - Corresponds to the time the job\n                  finished.\n               -  'start_time\\` - Corresponds to the time the job\n                  finished.\n",
                    "rendered": {
                      "text": "                  DATASTORE|CLOUD_STORAGE|BIGQUERY\n               -  ``trigger_name`` - The name of the trigger that\n                  created the job.\n               -  'end_time\\` - Corresponds to the time the job\n                  finished.\n               -  'start_time\\` - Corresponds to the time the job\n                  finished.\n",
                      "markdown": "`                  DATASTORE|CLOUD_STORAGE|BIGQUERY\n               -  ``trigger_name`` - The name of the trigger that\n                  created the job.\n               -  'end_time\\` - Corresponds to the time the job\n                  finished.\n               -  'start_time\\` - Corresponds to the time the job\n                  finished.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7277,
                  "startColumn": 11,
                  "endLine": 7277,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        start_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job started.\n        end_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job finished.\n        job_trigger_name (str):\n            If created by a job trigger, the resource\n            name of the trigger that instantiated the job.\n",
                    "rendered": {
                      "text": "        start_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job started.\n        end_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job finished.\n        job_trigger_name (str):\n            If created by a job trigger, the resource\n            name of the trigger that instantiated the job.\n",
                      "markdown": "`        start_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job started.\n        end_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job finished.\n        job_trigger_name (str):\n            If created by a job trigger, the resource\n            name of the trigger that instantiated the job.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7275,
                  "startColumn": 11,
                  "endLine": 7275,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job was created.\n        start_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job started.\n        end_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job finished.\n        job_trigger_name (str):\n",
                    "rendered": {
                      "text": "        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job was created.\n        start_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job started.\n        end_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job finished.\n        job_trigger_name (str):\n",
                      "markdown": "`        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job was created.\n        start_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job started.\n        end_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job finished.\n        job_trigger_name (str):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7273,
                  "startColumn": 11,
                  "endLine": 7273,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n            This field is a member of `oneof`_ ``details``.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job was created.\n        start_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job started.\n        end_time (google.protobuf.timestamp_pb2.Timestamp):\n",
                    "rendered": {
                      "text": "\n            This field is a member of `oneof`_ ``details``.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job was created.\n        start_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job started.\n        end_time (google.protobuf.timestamp_pb2.Timestamp):\n",
                      "markdown": "`\n            This field is a member of `oneof`_ ``details``.\n        create_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job was created.\n        start_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time when the job started.\n        end_time (google.protobuf.timestamp_pb2.Timestamp):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7167,
                  "startColumn": 11,
                  "endLine": 7167,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            The data to scan.\n        project_id (str):\n            The project that will run the scan. The DLP\n            service account that exists within this project\n            must have access to all resources that are\n            profiled, and the Cloud DLP API must be enabled.\n        inspect_templates (MutableSequence[str]):\n",
                    "rendered": {
                      "text": "            The data to scan.\n        project_id (str):\n            The project that will run the scan. The DLP\n            service account that exists within this project\n            must have access to all resources that are\n            profiled, and the Cloud DLP API must be enabled.\n        inspect_templates (MutableSequence[str]):\n",
                      "markdown": "`            The data to scan.\n        project_id (str):\n            The project that will run the scan. The DLP\n            service account that exists within this project\n            must have access to all resources that are\n            profiled, and the Cloud DLP API must be enabled.\n        inspect_templates (MutableSequence[str]):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 7097,
                  "startColumn": 63,
                  "endLine": 7097,
                  "endColumn": 69,
                  "snippet": {
                    "text": "            detail_of_message (google.cloud.dlp_v2.types.DataProfileAction.PubSubNotification.DetailLevel):\n                How much data to include in the Pub/Sub message. If the user\n                wishes to limit the size of the message, they can use\n                resource_name and fetch the profile fields they wish to. Per\n                table profile (not per column).\n        \"\"\"\n\n",
                    "rendered": {
                      "text": "            detail_of_message (google.cloud.dlp_v2.types.DataProfileAction.PubSubNotification.DetailLevel):\n                How much data to include in the Pub/Sub message. If the user\n                wishes to limit the size of the message, they can use\n                resource_name and fetch the profile fields they wish to. Per\n                table profile (not per column).\n        \"\"\"\n\n",
                      "markdown": "`            detail_of_message (google.cloud.dlp_v2.types.DataProfileAction.PubSubNotification.DetailLevel):\n                How much data to include in the Pub/Sub message. If the user\n                wishes to limit the size of the message, they can use\n                resource_name and fetch the profile fields they wish to. Per\n                table profile (not per column).\n        \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6847,
                  "startColumn": 57,
                  "endLine": 6847,
                  "endColumn": 63,
                  "snippet": {
                    "text": "               was created.\n            -  ``update_time``: corresponds to the time the JobTrigger\n               was last updated.\n            -  ``last_run_time``: corresponds to the last time the\n               JobTrigger ran.\n            -  ``name``: corresponds to the JobTrigger's name.\n            -  ``display_name``: corresponds to the JobTrigger's display\n",
                    "rendered": {
                      "text": "               was created.\n            -  ``update_time``: corresponds to the time the JobTrigger\n               was last updated.\n            -  ``last_run_time``: corresponds to the last time the\n               JobTrigger ran.\n            -  ``name``: corresponds to the JobTrigger's name.\n            -  ``display_name``: corresponds to the JobTrigger's display\n",
                      "markdown": "`               was created.\n            -  ``update_time``: corresponds to the time the JobTrigger\n               was last updated.\n            -  ``last_run_time``: corresponds to the last time the\n               JobTrigger ran.\n            -  ``name``: corresponds to the JobTrigger's name.\n            -  ``display_name``: corresponds to the JobTrigger's display\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6845,
                  "startColumn": 50,
                  "endLine": 6845,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n            -  ``create_time``: corresponds to the time the JobTrigger\n               was created.\n            -  ``update_time``: corresponds to the time the JobTrigger\n               was last updated.\n            -  ``last_run_time``: corresponds to the last time the\n               JobTrigger ran.\n",
                    "rendered": {
                      "text": "\n            -  ``create_time``: corresponds to the time the JobTrigger\n               was created.\n            -  ``update_time``: corresponds to the time the JobTrigger\n               was last updated.\n            -  ``last_run_time``: corresponds to the last time the\n               JobTrigger ran.\n",
                      "markdown": "`\n            -  ``create_time``: corresponds to the time the JobTrigger\n               was created.\n            -  ``update_time``: corresponds to the time the JobTrigger\n               was last updated.\n            -  ``last_run_time``: corresponds to the last time the\n               JobTrigger ran.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6843,
                  "startColumn": 50,
                  "endLine": 6843,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the JobTrigger\n               was created.\n            -  ``update_time``: corresponds to the time the JobTrigger\n               was last updated.\n",
                    "rendered": {
                      "text": "\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the JobTrigger\n               was created.\n            -  ``update_time``: corresponds to the time the JobTrigger\n               was last updated.\n",
                      "markdown": "`\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the JobTrigger\n               was created.\n            -  ``update_time``: corresponds to the time the JobTrigger\n               was last updated.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6534,
                  "startColumn": 50,
                  "endLine": 6534,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n            -  ``create_time``: corresponds to the time the template was\n               created.\n            -  ``update_time``: corresponds to the time the template was\n               last updated.\n            -  ``name``: corresponds to the template's name.\n            -  ``display_name``: corresponds to the template's display\n",
                    "rendered": {
                      "text": "\n            -  ``create_time``: corresponds to the time the template was\n               created.\n            -  ``update_time``: corresponds to the time the template was\n               last updated.\n            -  ``name``: corresponds to the template's name.\n            -  ``display_name``: corresponds to the template's display\n",
                      "markdown": "`\n            -  ``create_time``: corresponds to the time the template was\n               created.\n            -  ``update_time``: corresponds to the time the template was\n               last updated.\n            -  ``name``: corresponds to the template's name.\n            -  ``display_name``: corresponds to the template's display\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6532,
                  "startColumn": 50,
                  "endLine": 6532,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the template was\n               created.\n            -  ``update_time``: corresponds to the time the template was\n               last updated.\n",
                    "rendered": {
                      "text": "\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the template was\n               created.\n            -  ``update_time``: corresponds to the time the template was\n               last updated.\n",
                      "markdown": "`\n            Supported fields are:\n\n            -  ``create_time``: corresponds to the time the template was\n               created.\n            -  ``update_time``: corresponds to the time the template was\n               last updated.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6173,
                  "startColumn": 39,
                  "endLine": 6173,
                  "endColumn": 48,
                  "snippet": {
                    "text": "        templates are applied to the resource that Cloud DLP scanned. Data\n        Catalog tag templates are stored in the same project and region\n        where the BigQuery table exists. For Cloud DLP to create and apply\n        the tag template, the Cloud DLP service agent must have the\n        ``roles/datacatalog.tagTemplateOwner`` permission on the project.\n        The tag template contains fields summarizing the results of the\n        DlpJob. Any field values previously written by another DlpJob are\n",
                    "rendered": {
                      "text": "        templates are applied to the resource that Cloud DLP scanned. Data\n        Catalog tag templates are stored in the same project and region\n        where the BigQuery table exists. For Cloud DLP to create and apply\n        the tag template, the Cloud DLP service agent must have the\n        ``roles/datacatalog.tagTemplateOwner`` permission on the project.\n        The tag template contains fields summarizing the results of the\n        DlpJob. Any field values previously written by another DlpJob are\n",
                      "markdown": "`        templates are applied to the resource that Cloud DLP scanned. Data\n        Catalog tag templates are stored in the same project and region\n        where the BigQuery table exists. For Cloud DLP to create and apply\n        the tag template, the Cloud DLP service agent must have the\n        ``roles/datacatalog.tagTemplateOwner`` permission on the project.\n        The tag template contains fields summarizing the results of the\n        DlpJob. Any field values previously written by another DlpJob are\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 6142,
                  "startColumn": 37,
                  "endLine": 6142,
                  "endColumn": 46,
                  "snippet": {
                    "text": "            topic (str):\n                Cloud Pub/Sub topic to send notifications to.\n                The topic must have given publishing access\n                rights to the DLP API service account executing\n                the long running DlpJob sending the\n                notifications. Format is\n                projects/{project}/topics/{topic}.\n",
                    "rendered": {
                      "text": "            topic (str):\n                Cloud Pub/Sub topic to send notifications to.\n                The topic must have given publishing access\n                rights to the DLP API service account executing\n                the long running DlpJob sending the\n                notifications. Format is\n                projects/{project}/topics/{topic}.\n",
                      "markdown": "`            topic (str):\n                Cloud Pub/Sub topic to send notifications to.\n                The topic must have given publishing access\n                rights to the DLP API service account executing\n                the long running DlpJob sending the\n                notifications. Format is\n                projects/{project}/topics/{topic}.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5961,
                  "startColumn": 7,
                  "endLine": 5961,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    class Status(proto.Enum):\n        r\"\"\"Whether the trigger is currently active. If PAUSED or\n        CANCELLED, no jobs will be created with this configuration. The\n        service may automatically pause triggers experiencing frequent\n        errors. To restart a job, set the status to HEALTHY after\n        correcting user errors.\n\n",
                    "rendered": {
                      "text": "    class Status(proto.Enum):\n        r\"\"\"Whether the trigger is currently active. If PAUSED or\n        CANCELLED, no jobs will be created with this configuration. The\n        service may automatically pause triggers experiencing frequent\n        errors. To restart a job, set the status to HEALTHY after\n        correcting user errors.\n\n",
                      "markdown": "`    class Status(proto.Enum):\n        r\"\"\"Whether the trigger is currently active. If PAUSED or\n        CANCELLED, no jobs will be created with this configuration. The\n        service may automatically pause triggers experiencing frequent\n        errors. To restart a job, set the status to HEALTHY after\n        correcting user errors.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5952,
                  "startColumn": 50,
                  "endLine": 5953,
                  "snippet": {
                    "text": "            Output only. The last update timestamp of a\n            triggeredJob.\n        last_run_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The timestamp of the last time\n            this trigger executed.\n        status (google.cloud.dlp_v2.types.JobTrigger.Status):\n            Required. A status for this trigger.\n    \"\"\"\n",
                    "rendered": {
                      "text": "            Output only. The last update timestamp of a\n            triggeredJob.\n        last_run_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The timestamp of the last time\n            this trigger executed.\n        status (google.cloud.dlp_v2.types.JobTrigger.Status):\n            Required. A status for this trigger.\n    \"\"\"\n",
                      "markdown": "`            Output only. The last update timestamp of a\n            triggeredJob.\n        last_run_time (google.protobuf.timestamp_pb2.Timestamp):\n            Output only. The timestamp of the last time\n            this trigger executed.\n        status (google.cloud.dlp_v2.types.JobTrigger.Status):\n            Required. A status for this trigger.\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5921,
                  "startColumn": 11,
                  "endLine": 5921,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    Attributes:\n        name (str):\n            Unique resource name for the triggeredJob, assigned by the\n            service when the triggeredJob is created, for example\n            ``projects/dlp-test-project/jobTriggers/53234423``.\n        display_name (str):\n            Display name (max 100 chars)\n",
                    "rendered": {
                      "text": "    Attributes:\n        name (str):\n            Unique resource name for the triggeredJob, assigned by the\n            service when the triggeredJob is created, for example\n            ``projects/dlp-test-project/jobTriggers/53234423``.\n        display_name (str):\n            Display name (max 100 chars)\n",
                      "markdown": "`    Attributes:\n        name (str):\n            Unique resource name for the triggeredJob, assigned by the\n            service when the triggeredJob is created, for example\n            ``projects/dlp-test-project/jobTriggers/53234423``.\n        display_name (str):\n            Display name (max 100 chars)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5749,
                  "startColumn": 39,
                  "endLine": 5749,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            previous execution has not ended when its\n            scheduled time occurs.\n\n            This value must be set to a time duration\n            greater than or equal to 1 day and can be no\n            longer than 60 days.\n\n",
                    "rendered": {
                      "text": "            previous execution has not ended when its\n            scheduled time occurs.\n\n            This value must be set to a time duration\n            greater than or equal to 1 day and can be no\n            longer than 60 days.\n\n",
                      "markdown": "`            previous execution has not ended when its\n            scheduled time occurs.\n\n            This value must be set to a time duration\n            greater than or equal to 1 day and can be no\n            longer than 60 days.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5747,
                  "startColumn": 21,
                  "endLine": 5747,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n            A scheduled start time will be skipped if the\n            previous execution has not ended when its\n            scheduled time occurs.\n\n            This value must be set to a time duration\n            greater than or equal to 1 day and can be no\n",
                    "rendered": {
                      "text": "\n            A scheduled start time will be skipped if the\n            previous execution has not ended when its\n            scheduled time occurs.\n\n            This value must be set to a time duration\n            greater than or equal to 1 day and can be no\n",
                      "markdown": "`\n            A scheduled start time will be skipped if the\n            previous execution has not ended when its\n            scheduled time occurs.\n\n            This value must be set to a time duration\n            greater than or equal to 1 day and can be no\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5745,
                  "startColumn": 29,
                  "endLine": 5745,
                  "endColumn": 35,
                  "snippet": {
                    "text": "            regular periodic basis. For example: every day\n            (86400 seconds).\n\n            A scheduled start time will be skipped if the\n            previous execution has not ended when its\n            scheduled time occurs.\n\n",
                    "rendered": {
                      "text": "            regular periodic basis. For example: every day\n            (86400 seconds).\n\n            A scheduled start time will be skipped if the\n            previous execution has not ended when its\n            scheduled time occurs.\n\n",
                      "markdown": "`            regular periodic basis. For example: every day\n            (86400 seconds).\n\n            A scheduled start time will be skipped if the\n            previous execution has not ended when its\n            scheduled time occurs.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5720,
                  "startColumn": 19,
                  "endLine": 5720,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            If table_id is not set a new one will be generated for you\n            with the following format:\n            dlp_googleapis_transformation_details_yyyy_mm_dd_[dlp_job_id].\n            Pacific time zone will be used for generating the date\n            details.\n\n            This field is a member of `oneof`_ ``type``.\n",
                    "rendered": {
                      "text": "            If table_id is not set a new one will be generated for you\n            with the following format:\n            dlp_googleapis_transformation_details_yyyy_mm_dd_[dlp_job_id].\n            Pacific time zone will be used for generating the date\n            details.\n\n            This field is a member of `oneof`_ ``type``.\n",
                      "markdown": "`            If table_id is not set a new one will be generated for you\n            with the following format:\n            dlp_googleapis_transformation_details_yyyy_mm_dd_[dlp_job_id].\n            Pacific time zone will be used for generating the date\n            details.\n\n            This field is a member of `oneof`_ ``type``.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 5548,
                  "startColumn": 15,
                  "endLine": 5548,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            The name of the job that completed the\n            transformation.\n        container_name (str):\n            The top level name of the container where the\n            transformation is located (this will be the\n            source file name or table name).\n        transformation (MutableSequence[google.cloud.dlp_v2.types.TransformationDescription]):\n",
                    "rendered": {
                      "text": "            The name of the job that completed the\n            transformation.\n        container_name (str):\n            The top level name of the container where the\n            transformation is located (this will be the\n            source file name or table name).\n        transformation (MutableSequence[google.cloud.dlp_v2.types.TransformationDescription]):\n",
                      "markdown": "`            The name of the job that completed the\n            transformation.\n        container_name (str):\n            The top level name of the container where the\n            transformation is located (this will be the\n            source file name or table name).\n        transformation (MutableSequence[google.cloud.dlp_v2.types.TransformationDescription]):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4911,
                  "startColumn": 3,
                  "endLine": 4911,
                  "endColumn": 12,
                  "snippet": {
                    "text": "class CryptoKey(proto.Message):\n    r\"\"\"This is a data encryption key (DEK) (as opposed to\n    a key encryption key (KEK) stored by Cloud Key Management\n    Service (Cloud KMS).\n    When using Cloud KMS to wrap or unwrap a DEK, be sure to set an\n    appropriate IAM policy on the KEK to ensure an attacker cannot\n    unwrap the DEK.\n",
                    "rendered": {
                      "text": "class CryptoKey(proto.Message):\n    r\"\"\"This is a data encryption key (DEK) (as opposed to\n    a key encryption key (KEK) stored by Cloud Key Management\n    Service (Cloud KMS).\n    When using Cloud KMS to wrap or unwrap a DEK, be sure to set an\n    appropriate IAM policy on the KEK to ensure an attacker cannot\n    unwrap the DEK.\n",
                      "markdown": "`class CryptoKey(proto.Message):\n    r\"\"\"This is a data encryption key (DEK) (as opposed to\n    a key encryption key (KEK) stored by Cloud Key Management\n    Service (Cloud KMS).\n    When using Cloud KMS to wrap or unwrap a DEK, be sure to set an\n    appropriate IAM policy on the KEK to ensure an attacker cannot\n    unwrap the DEK.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4840,
                  "startColumn": 37,
                  "endLine": 4840,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n            In order for inspection to work properly, the name of this\n            infoType must not occur naturally anywhere in your data;\n            otherwise, inspection may find a surrogate that does not\n            correspond to an actual identifier. Therefore, choose your\n            custom infoType name carefully after considering what your\n            data looks like. One way to select a name that has a high\n",
                    "rendered": {
                      "text": "\n            In order for inspection to work properly, the name of this\n            infoType must not occur naturally anywhere in your data;\n            otherwise, inspection may find a surrogate that does not\n            correspond to an actual identifier. Therefore, choose your\n            custom infoType name carefully after considering what your\n            data looks like. One way to select a name that has a high\n",
                      "markdown": "`\n            In order for inspection to work properly, the name of this\n            infoType must not occur naturally anywhere in your data;\n            otherwise, inspection may find a surrogate that does not\n            correspond to an actual identifier. Therefore, choose your\n            custom infoType name carefully after considering what your\n            data looks like. One way to select a name that has a high\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4363,
                  "startColumn": 45,
                  "endLine": 4363,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\nclass CryptoDeterministicConfig(proto.Message):\n    r\"\"\"Pseudonymization method that generates deterministic\n    encryption for the given input. Outputs a base64 encoded\n    representation of the encrypted output. Uses AES-SIV based on\n    the RFC https://tools.ietf.org/html/rfc5297.\n\n",
                    "rendered": {
                      "text": "\nclass CryptoDeterministicConfig(proto.Message):\n    r\"\"\"Pseudonymization method that generates deterministic\n    encryption for the given input. Outputs a base64 encoded\n    representation of the encrypted output. Uses AES-SIV based on\n    the RFC https://tools.ietf.org/html/rfc5297.\n\n",
                      "markdown": "`\nclass CryptoDeterministicConfig(proto.Message):\n    r\"\"\"Pseudonymization method that generates deterministic\n    encryption for the given input. Outputs a base64 encoded\n    representation of the encrypted output. Uses AES-SIV based on\n    the RFC https://tools.ietf.org/html/rfc5297.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4343,
                  "startColumn": 13,
                  "endLine": 4343,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    r\"\"\"Pseudonymization method that generates surrogates via\n    cryptographic hashing. Uses SHA-256.\n    The key size must be either 32 or 64 bytes.\n    Outputs a base64 encoded representation of the hashed output\n    (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=).\n    Currently, only string and integer values can be hashed. See\n    https://cloud.google.com/dlp/docs/pseudonymization to learn\n",
                    "rendered": {
                      "text": "    r\"\"\"Pseudonymization method that generates surrogates via\n    cryptographic hashing. Uses SHA-256.\n    The key size must be either 32 or 64 bytes.\n    Outputs a base64 encoded representation of the hashed output\n    (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=).\n    Currently, only string and integer values can be hashed. See\n    https://cloud.google.com/dlp/docs/pseudonymization to learn\n",
                      "markdown": "`    r\"\"\"Pseudonymization method that generates surrogates via\n    cryptographic hashing. Uses SHA-256.\n    The key size must be either 32 or 64 bytes.\n    Outputs a base64 encoded representation of the hashed output\n    (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=).\n    Currently, only string and integer values can be hashed. See\n    https://cloud.google.com/dlp/docs/pseudonymization to learn\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4302,
                  "startColumn": 27,
                  "endLine": 4302,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n    Attributes:\n        part_to_extract (google.cloud.dlp_v2.types.TimePartConfig.TimePart):\n            The part of the time to keep.\n    \"\"\"\n\n    class TimePart(proto.Enum):\n",
                    "rendered": {
                      "text": "\n    Attributes:\n        part_to_extract (google.cloud.dlp_v2.types.TimePartConfig.TimePart):\n            The part of the time to keep.\n    \"\"\"\n\n    class TimePart(proto.Enum):\n",
                      "markdown": "`\n    Attributes:\n        part_to_extract (google.cloud.dlp_v2.types.TimePartConfig.TimePart):\n            The part of the time to keep.\n    \"\"\"\n\n    class TimePart(proto.Enum):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4200,
                  "startColumn": 11,
                  "endLine": 4200,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n            This field is a member of `oneof`_ ``transformation``.\n        time_part_config (google.cloud.dlp_v2.types.TimePartConfig):\n            Time extraction\n\n            This field is a member of `oneof`_ ``transformation``.\n        crypto_hash_config (google.cloud.dlp_v2.types.CryptoHashConfig):\n",
                    "rendered": {
                      "text": "\n            This field is a member of `oneof`_ ``transformation``.\n        time_part_config (google.cloud.dlp_v2.types.TimePartConfig):\n            Time extraction\n\n            This field is a member of `oneof`_ ``transformation``.\n        crypto_hash_config (google.cloud.dlp_v2.types.CryptoHashConfig):\n",
                      "markdown": "`\n            This field is a member of `oneof`_ ``transformation``.\n        time_part_config (google.cloud.dlp_v2.types.TimePartConfig):\n            Time extraction\n\n            This field is a member of `oneof`_ ``transformation``.\n        crypto_hash_config (google.cloud.dlp_v2.types.CryptoHashConfig):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4141,
                  "startColumn": 64,
                  "endLine": 4141,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    class LeaveUntransformed(proto.Message):\n        r\"\"\"Skips the data without modifying it if the requested transformation\n        would cause an error. For example, if a ``DateShift`` transformation\n        were applied an an IP address, this mode would leave the IP address\n        unchanged in the response.\n\n        \"\"\"\n",
                    "rendered": {
                      "text": "    class LeaveUntransformed(proto.Message):\n        r\"\"\"Skips the data without modifying it if the requested transformation\n        would cause an error. For example, if a ``DateShift`` transformation\n        were applied an an IP address, this mode would leave the IP address\n        unchanged in the response.\n\n        \"\"\"\n",
                      "markdown": "`    class LeaveUntransformed(proto.Message):\n        r\"\"\"Skips the data without modifying it if the requested transformation\n        would cause an error. For example, if a ``DateShift`` transformation\n        were applied an an IP address, this mode would leave the IP address\n        unchanged in the response.\n\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4141,
                  "startColumn": 26,
                  "endLine": 4141,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    class LeaveUntransformed(proto.Message):\n        r\"\"\"Skips the data without modifying it if the requested transformation\n        would cause an error. For example, if a ``DateShift`` transformation\n        were applied an an IP address, this mode would leave the IP address\n        unchanged in the response.\n\n        \"\"\"\n",
                    "rendered": {
                      "text": "    class LeaveUntransformed(proto.Message):\n        r\"\"\"Skips the data without modifying it if the requested transformation\n        would cause an error. For example, if a ``DateShift`` transformation\n        were applied an an IP address, this mode would leave the IP address\n        unchanged in the response.\n\n        \"\"\"\n",
                      "markdown": "`    class LeaveUntransformed(proto.Message):\n        r\"\"\"Skips the data without modifying it if the requested transformation\n        would cause an error. For example, if a ``DateShift`` transformation\n        were applied an an IP address, this mode would leave the IP address\n        unchanged in the response.\n\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4109,
                  "startColumn": 69,
                  "endLine": 4110,
                  "snippet": {
                    "text": "    transformation error occurs when the requested transformation is\n    incompatible with the data. For example, trying to de-identify an IP\n    address using a ``DateShift`` transformation would result in a\n    transformation error, since date info cannot be extracted from an IP\n    address. Information about any incompatible transformations, and how\n    they were handled, is returned in the response as part of the\n    ``TransformationOverviews``.\n\n",
                    "rendered": {
                      "text": "    transformation error occurs when the requested transformation is\n    incompatible with the data. For example, trying to de-identify an IP\n    address using a ``DateShift`` transformation would result in a\n    transformation error, since date info cannot be extracted from an IP\n    address. Information about any incompatible transformations, and how\n    they were handled, is returned in the response as part of the\n    ``TransformationOverviews``.\n\n",
                      "markdown": "`    transformation error occurs when the requested transformation is\n    incompatible with the data. For example, trying to de-identify an IP\n    address using a ``DateShift`` transformation would result in a\n    transformation error, since date info cannot be extracted from an IP\n    address. Information about any incompatible transformations, and how\n    they were handled, is returned in the response as part of the\n    ``TransformationOverviews``.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 4107,
                  "startColumn": 69,
                  "endLine": 4108,
                  "snippet": {
                    "text": "class TransformationErrorHandling(proto.Message):\n    r\"\"\"How to handle transformation errors during de-identification. A\n    transformation error occurs when the requested transformation is\n    incompatible with the data. For example, trying to de-identify an IP\n    address using a ``DateShift`` transformation would result in a\n    transformation error, since date info cannot be extracted from an IP\n    address. Information about any incompatible transformations, and how\n    they were handled, is returned in the response as part of the\n",
                    "rendered": {
                      "text": "class TransformationErrorHandling(proto.Message):\n    r\"\"\"How to handle transformation errors during de-identification. A\n    transformation error occurs when the requested transformation is\n    incompatible with the data. For example, trying to de-identify an IP\n    address using a ``DateShift`` transformation would result in a\n    transformation error, since date info cannot be extracted from an IP\n    address. Information about any incompatible transformations, and how\n    they were handled, is returned in the response as part of the\n",
                      "markdown": "`class TransformationErrorHandling(proto.Message):\n    r\"\"\"How to handle transformation errors during de-identification. A\n    transformation error occurs when the requested transformation is\n    incompatible with the data. For example, trying to de-identify an IP\n    address using a ``DateShift`` transformation would result in a\n    transformation error, since date info cannot be extracted from an IP\n    address. Information about any incompatible transformations, and how\n    they were handled, is returned in the response as part of the\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3917,
                  "startColumn": 28,
                  "endLine": 3917,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        Attributes:\n            offset_minutes (int):\n                Set only if the offset can be determined.\n                Positive for time ahead of UTC. E.g. For\n                \"UTC-9\", this value is -540.\n        \"\"\"\n\n",
                    "rendered": {
                      "text": "        Attributes:\n            offset_minutes (int):\n                Set only if the offset can be determined.\n                Positive for time ahead of UTC. E.g. For\n                \"UTC-9\", this value is -540.\n        \"\"\"\n\n",
                      "markdown": "`        Attributes:\n            offset_minutes (int):\n                Set only if the offset can be determined.\n                Positive for time ahead of UTC. E.g. For\n                \"UTC-9\", this value is -540.\n        \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3912,
                  "startColumn": 33,
                  "endLine": 3912,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    \"\"\"\n\n    class TimeZone(proto.Message):\n        r\"\"\"Time zone of the date time object.\n\n        Attributes:\n            offset_minutes (int):\n",
                    "rendered": {
                      "text": "    \"\"\"\n\n    class TimeZone(proto.Message):\n        r\"\"\"Time zone of the date time object.\n\n        Attributes:\n            offset_minutes (int):\n",
                      "markdown": "`    \"\"\"\n\n    class TimeZone(proto.Message):\n        r\"\"\"Time zone of the date time object.\n\n        Attributes:\n            offset_minutes (int):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3908,
                  "startColumn": 11,
                  "endLine": 3908,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        time (google.type.timeofday_pb2.TimeOfDay):\n            Time of day\n        time_zone (google.cloud.dlp_v2.types.DateTime.TimeZone):\n            Time zone\n    \"\"\"\n\n    class TimeZone(proto.Message):\n",
                    "rendered": {
                      "text": "        time (google.type.timeofday_pb2.TimeOfDay):\n            Time of day\n        time_zone (google.cloud.dlp_v2.types.DateTime.TimeZone):\n            Time zone\n    \"\"\"\n\n    class TimeZone(proto.Message):\n",
                      "markdown": "`        time (google.type.timeofday_pb2.TimeOfDay):\n            Time of day\n        time_zone (google.cloud.dlp_v2.types.DateTime.TimeZone):\n            Time zone\n    \"\"\"\n\n    class TimeZone(proto.Message):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3906,
                  "startColumn": 11,
                  "endLine": 3906,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        day_of_week (google.type.dayofweek_pb2.DayOfWeek):\n            Day of week\n        time (google.type.timeofday_pb2.TimeOfDay):\n            Time of day\n        time_zone (google.cloud.dlp_v2.types.DateTime.TimeZone):\n            Time zone\n    \"\"\"\n",
                    "rendered": {
                      "text": "        day_of_week (google.type.dayofweek_pb2.DayOfWeek):\n            Day of week\n        time (google.type.timeofday_pb2.TimeOfDay):\n            Time of day\n        time_zone (google.cloud.dlp_v2.types.DateTime.TimeZone):\n            Time zone\n    \"\"\"\n",
                      "markdown": "`        day_of_week (google.type.dayofweek_pb2.DayOfWeek):\n            Day of week\n        time (google.type.timeofday_pb2.TimeOfDay):\n            Time of day\n        time_zone (google.cloud.dlp_v2.types.DateTime.TimeZone):\n            Time zone\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3905,
                  "startColumn": 7,
                  "endLine": 3905,
                  "endColumn": 13,
                  "snippet": {
                    "text": "            Must be a valid date or time value.\n        day_of_week (google.type.dayofweek_pb2.DayOfWeek):\n            Day of week\n        time (google.type.timeofday_pb2.TimeOfDay):\n            Time of day\n        time_zone (google.cloud.dlp_v2.types.DateTime.TimeZone):\n            Time zone\n",
                    "rendered": {
                      "text": "            Must be a valid date or time value.\n        day_of_week (google.type.dayofweek_pb2.DayOfWeek):\n            Day of week\n        time (google.type.timeofday_pb2.TimeOfDay):\n            Time of day\n        time_zone (google.cloud.dlp_v2.types.DateTime.TimeZone):\n            Time zone\n",
                      "markdown": "`            Must be a valid date or time value.\n        day_of_week (google.type.dayofweek_pb2.DayOfWeek):\n            Day of week\n        time (google.type.timeofday_pb2.TimeOfDay):\n            Time of day\n        time_zone (google.cloud.dlp_v2.types.DateTime.TimeZone):\n            Time zone\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3902,
                  "startColumn": 35,
                  "endLine": 3902,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    Attributes:\n        date (google.type.date_pb2.Date):\n            One or more of the following must be set.\n            Must be a valid date or time value.\n        day_of_week (google.type.dayofweek_pb2.DayOfWeek):\n            Day of week\n        time (google.type.timeofday_pb2.TimeOfDay):\n",
                    "rendered": {
                      "text": "    Attributes:\n        date (google.type.date_pb2.Date):\n            One or more of the following must be set.\n            Must be a valid date or time value.\n        day_of_week (google.type.dayofweek_pb2.DayOfWeek):\n            Day of week\n        time (google.type.timeofday_pb2.TimeOfDay):\n",
                      "markdown": "`    Attributes:\n        date (google.type.date_pb2.Date):\n            One or more of the following must be set.\n            Must be a valid date or time value.\n        day_of_week (google.type.dayofweek_pb2.DayOfWeek):\n            Day of week\n        time (google.type.timeofday_pb2.TimeOfDay):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3896,
                  "startColumn": 26,
                  "endLine": 3896,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n\nclass DateTime(proto.Message):\n    r\"\"\"Message for a date time object.\n    e.g. 2018-01-01, 5th August.\n\n    Attributes:\n",
                    "rendered": {
                      "text": "\n\nclass DateTime(proto.Message):\n    r\"\"\"Message for a date time object.\n    e.g. 2018-01-01, 5th August.\n\n    Attributes:\n",
                      "markdown": "`\n\nclass DateTime(proto.Message):\n    r\"\"\"Message for a date time object.\n    e.g. 2018-01-01, 5th August.\n\n    Attributes:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3882,
                  "startColumn": 20,
                  "endLine": 3882,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n    Attributes:\n        date_time (google.cloud.dlp_v2.types.DateTime):\n            The date time indicated by the quote.\n\n            This field is a member of `oneof`_ ``parsed_quote``.\n    \"\"\"\n",
                    "rendered": {
                      "text": "\n    Attributes:\n        date_time (google.cloud.dlp_v2.types.DateTime):\n            The date time indicated by the quote.\n\n            This field is a member of `oneof`_ ``parsed_quote``.\n    \"\"\"\n",
                      "markdown": "`\n    Attributes:\n        date_time (google.cloud.dlp_v2.types.DateTime):\n            The date time indicated by the quote.\n\n            This field is a member of `oneof`_ ``parsed_quote``.\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3816,
                  "startColumn": 11,
                  "endLine": 3816,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n            This field is a member of `oneof`_ ``type``.\n        time_value (google.type.timeofday_pb2.TimeOfDay):\n            time of day\n\n            This field is a member of `oneof`_ ``type``.\n        date_value (google.type.date_pb2.Date):\n",
                    "rendered": {
                      "text": "\n            This field is a member of `oneof`_ ``type``.\n        time_value (google.type.timeofday_pb2.TimeOfDay):\n            time of day\n\n            This field is a member of `oneof`_ ``type``.\n        date_value (google.type.date_pb2.Date):\n",
                      "markdown": "`\n            This field is a member of `oneof`_ ``type``.\n        time_value (google.type.timeofday_pb2.TimeOfDay):\n            time of day\n\n            This field is a member of `oneof`_ ``type``.\n        date_value (google.type.date_pb2.Date):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 3411,
                  "startColumn": 44,
                  "endLine": 3411,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                    Number of distinct sensitive values in this\n                    equivalence class.\n                top_sensitive_values (MutableSequence[google.cloud.dlp_v2.types.ValueFrequency]):\n                    Estimated frequencies of top sensitive\n                    values.\n            \"\"\"\n\n",
                    "rendered": {
                      "text": "                    Number of distinct sensitive values in this\n                    equivalence class.\n                top_sensitive_values (MutableSequence[google.cloud.dlp_v2.types.ValueFrequency]):\n                    Estimated frequencies of top sensitive\n                    values.\n            \"\"\"\n\n",
                      "markdown": "`                    Number of distinct sensitive values in this\n                    equivalence class.\n                top_sensitive_values (MutableSequence[google.cloud.dlp_v2.types.ValueFrequency]):\n                    Estimated frequencies of top sensitive\n                    values.\n            \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 2161,
                  "startColumn": 32,
                  "endLine": 2161,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        Attributes:\n            snapshot_inspect_template (google.cloud.dlp_v2.types.InspectTemplate):\n                If run with an InspectTemplate, a snapshot of\n                its state at the time of this run.\n            job_config (google.cloud.dlp_v2.types.InspectJobConfig):\n                Inspect config.\n        \"\"\"\n",
                    "rendered": {
                      "text": "        Attributes:\n            snapshot_inspect_template (google.cloud.dlp_v2.types.InspectTemplate):\n                If run with an InspectTemplate, a snapshot of\n                its state at the time of this run.\n            job_config (google.cloud.dlp_v2.types.InspectJobConfig):\n                Inspect config.\n        \"\"\"\n",
                      "markdown": "`        Attributes:\n            snapshot_inspect_template (google.cloud.dlp_v2.types.InspectTemplate):\n                If run with an InspectTemplate, a snapshot of\n                its state at the time of this run.\n            job_config (google.cloud.dlp_v2.types.InspectJobConfig):\n                Inspect config.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 2052,
                  "startColumn": 59,
                  "endLine": 2052,
                  "endColumn": 65,
                  "snippet": {
                    "text": "            Store findings in an existing table or a new table in an\n            existing dataset. If table_id is not set a new one will be\n            generated for you with the following format:\n            dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific time zone\n            will be used for generating the date details.\n\n            For Inspect, each column in an existing output table must\n",
                    "rendered": {
                      "text": "            Store findings in an existing table or a new table in an\n            existing dataset. If table_id is not set a new one will be\n            generated for you with the following format:\n            dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific time zone\n            will be used for generating the date details.\n\n            For Inspect, each column in an existing output table must\n",
                      "markdown": "`            Store findings in an existing table or a new table in an\n            existing dataset. If table_id is not set a new one will be\n            generated for you with the following format:\n            dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific time zone\n            will be used for generating the date details.\n\n            For Inspect, each column in an existing output table must\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 1677,
                  "startColumn": 25,
                  "endLine": 1677,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n    Attributes:\n        red (float):\n            The amount of red in the color as a value in the interval\n            [0, 1].\n        green (float):\n            The amount of green in the color as a value in the interval\n",
                    "rendered": {
                      "text": "\n    Attributes:\n        red (float):\n            The amount of red in the color as a value in the interval\n            [0, 1].\n        green (float):\n            The amount of green in the color as a value in the interval\n",
                      "markdown": "`\n    Attributes:\n        red (float):\n            The amount of red in the color as a value in the interval\n            [0, 1].\n        green (float):\n            The amount of green in the color as a value in the interval\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 1676,
                  "startColumn": 7,
                  "endLine": 1676,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    r\"\"\"Represents a color in the RGB color space.\n\n    Attributes:\n        red (float):\n            The amount of red in the color as a value in the interval\n            [0, 1].\n        green (float):\n",
                    "rendered": {
                      "text": "    r\"\"\"Represents a color in the RGB color space.\n\n    Attributes:\n        red (float):\n            The amount of red in the color as a value in the interval\n            [0, 1].\n        green (float):\n",
                      "markdown": "`    r\"\"\"Represents a color in the RGB color space.\n\n    Attributes:\n        red (float):\n            The amount of red in the color as a value in the interval\n            [0, 1].\n        green (float):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 1525,
                  "startColumn": 11,
                  "endLine": 1525,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n    Attributes:\n        top (int):\n            Top coordinate of the bounding box. (0,0) is\n            upper left.\n        left (int):\n            Left coordinate of the bounding box. (0,0) is\n",
                    "rendered": {
                      "text": "\n    Attributes:\n        top (int):\n            Top coordinate of the bounding box. (0,0) is\n            upper left.\n        left (int):\n            Left coordinate of the bounding box. (0,0) is\n",
                      "markdown": "`\n    Attributes:\n        top (int):\n            Top coordinate of the bounding box. (0,0) is\n            upper left.\n        left (int):\n            Left coordinate of the bounding box. (0,0) is\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 1524,
                  "startColumn": 7,
                  "endLine": 1524,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    r\"\"\"Bounding box encompassing detected text within an image.\n\n    Attributes:\n        top (int):\n            Top coordinate of the bounding box. (0,0) is\n            upper left.\n        left (int):\n",
                    "rendered": {
                      "text": "    r\"\"\"Bounding box encompassing detected text within an image.\n\n    Attributes:\n        top (int):\n            Top coordinate of the bounding box. (0,0) is\n            upper left.\n        left (int):\n",
                      "markdown": "`    r\"\"\"Bounding box encompassing detected text within an image.\n\n    Attributes:\n        top (int):\n            Top coordinate of the bounding box. (0,0) is\n            upper left.\n        left (int):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 1219,
                  "startColumn": 67,
                  "endLine": 1220,
                  "snippet": {
                    "text": "\n    Attributes:\n        container_name (str):\n            Name of the container where the finding is located. The top\n            level name is the source file name or table name. Names of\n            some common storage containers are formatted as follows:\n\n            -  BigQuery tables: ``{project_id}:{dataset_id}.{table_id}``\n",
                    "rendered": {
                      "text": "\n    Attributes:\n        container_name (str):\n            Name of the container where the finding is located. The top\n            level name is the source file name or table name. Names of\n            some common storage containers are formatted as follows:\n\n            -  BigQuery tables: ``{project_id}:{dataset_id}.{table_id}``\n",
                      "markdown": "`\n    Attributes:\n        container_name (str):\n            Name of the container where the finding is located. The top\n            level name is the source file name or table name. Names of\n            some common storage containers are formatted as follows:\n\n            -  BigQuery tables: ``{project_id}:{dataset_id}.{table_id}``\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 1090,
                  "startColumn": 11,
                  "endLine": 1090,
                  "endColumn": 17,
                  "snippet": {
                    "text": "            -  ``\"environment\" : \"production\"``\n            -  ``\"pipeline\" : \"etl\"``\n        job_create_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time the job started that produced this\n            finding.\n        job_name (str):\n            The job that stored the finding.\n",
                    "rendered": {
                      "text": "            -  ``\"environment\" : \"production\"``\n            -  ``\"pipeline\" : \"etl\"``\n        job_create_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time the job started that produced this\n            finding.\n        job_name (str):\n            The job that stored the finding.\n",
                      "markdown": "`            -  ``\"environment\" : \"production\"``\n            -  ``\"pipeline\" : \"etl\"``\n        job_create_time (google.protobuf.timestamp_pb2.Timestamp):\n            Time the job started that produced this\n            finding.\n        job_name (str):\n            The job that stored the finding.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 700,
                  "startColumn": 16,
                  "endLine": 700,
                  "endColumn": 22,
                  "snippet": {
                    "text": "            When no InfoTypes or CustomInfoTypes are specified in a\n            request, the system may automatically choose what detectors\n            to run. By default this may be all types, but may change\n            over time as detectors are updated.\n\n            If you need precise control and predictability as to what\n            detectors are run you should specify specific InfoTypes\n",
                    "rendered": {
                      "text": "            When no InfoTypes or CustomInfoTypes are specified in a\n            request, the system may automatically choose what detectors\n            to run. By default this may be all types, but may change\n            over time as detectors are updated.\n\n            If you need precise control and predictability as to what\n            detectors are run you should specify specific InfoTypes\n",
                      "markdown": "`            When no InfoTypes or CustomInfoTypes are specified in a\n            request, the system may automatically choose what detectors\n            to run. By default this may be all types, but may change\n            over time as detectors are updated.\n\n            If you need precise control and predictability as to what\n            detectors are run you should specify specific InfoTypes\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 11,
                  "endLine": 278,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        REPLACE_WITH_INFO_TYPE (8):\n            Replace with info type\n        TIME_PART (9):\n            Time part\n        CRYPTO_HASH (10):\n            Crypto hash\n        DATE_SHIFT (12):\n",
                    "rendered": {
                      "text": "        REPLACE_WITH_INFO_TYPE (8):\n            Replace with info type\n        TIME_PART (9):\n            Time part\n        CRYPTO_HASH (10):\n            Crypto hash\n        DATE_SHIFT (12):\n",
                      "markdown": "`        REPLACE_WITH_INFO_TYPE (8):\n            Replace with info type\n        TIME_PART (9):\n            Time part\n        CRYPTO_HASH (10):\n            Crypto hash\n        DATE_SHIFT (12):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/dlp.py"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 11,
                  "endLine": 218,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        METADATA_UNRETRIEVABLE (3):\n            This will be set when there is a finding in\n            the custom metadata of a file, but at the write\n            time of the transformed file, this key / value\n            pair is unretrievable.\n        SUCCESS (4):\n            This will be set when the transformation and\n",
                    "rendered": {
                      "text": "        METADATA_UNRETRIEVABLE (3):\n            This will be set when there is a finding in\n            the custom metadata of a file, but at the write\n            time of the transformed file, this key / value\n            pair is unretrievable.\n        SUCCESS (4):\n            This will be set when the transformation and\n",
                      "markdown": "`        METADATA_UNRETRIEVABLE (3):\n            This will be set when there is a finding in\n            the custom metadata of a file, but at the write\n            time of the transformed file, this key / value\n            pair is unretrievable.\n        SUCCESS (4):\n            This will be set when the transformation and\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/types/__init__.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3637,
                  "startColumn": 23,
                  "endLine": 3637,
                  "endColumn": 32,
                  "snippet": {
                    "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                    "rendered": {
                      "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                      "markdown": "`                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2222,
                  "startColumn": 23,
                  "endLine": 2222,
                  "endColumn": 32,
                  "snippet": {
                    "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                    "rendered": {
                      "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                      "markdown": "`                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1585,
                  "startColumn": 23,
                  "endLine": 1585,
                  "endColumn": 32,
                  "snippet": {
                    "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                    "rendered": {
                      "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                      "markdown": "`                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 940,
                  "startColumn": 23,
                  "endLine": 940,
                  "endColumn": 32,
                  "snippet": {
                    "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                    "rendered": {
                      "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                      "markdown": "`                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 33,
                  "endLine": 168,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                    "rendered": {
                      "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                      "markdown": "`        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 4224,
                  "startColumn": 50,
                  "endLine": 4224,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        # Create or coerce a protobuf request object.\n        request = dlp.FinishDlpJobRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.finish_dlp_job,\n",
                    "rendered": {
                      "text": "        # Create or coerce a protobuf request object.\n        request = dlp.FinishDlpJobRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.finish_dlp_job,\n",
                      "markdown": "`        # Create or coerce a protobuf request object.\n        request = dlp.FinishDlpJobRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.finish_dlp_job,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 4217,
                  "startColumn": 32,
                  "endLine": 4217,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                DLP hybrid job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                DLP hybrid job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                DLP hybrid job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 4217,
                  "startColumn": 11,
                  "endLine": 4217,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                DLP hybrid job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                DLP hybrid job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                DLP hybrid job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 4194,
                  "startColumn": 78,
                  "endLine": 4195,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 4151,
                  "startColumn": 50,
                  "endLine": 4151,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.hybrid_inspect_dlp_job,\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.hybrid_inspect_dlp_job,\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.hybrid_inspect_dlp_job,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 4124,
                  "startColumn": 32,
                  "endLine": 4124,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 4124,
                  "startColumn": 11,
                  "endLine": 4124,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 4090,
                  "startColumn": 78,
                  "endLine": 4091,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 4039,
                  "startColumn": 50,
                  "endLine": 4039,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_stored_info_type,\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_stored_info_type,\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_stored_info_type,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 4018,
                  "startColumn": 32,
                  "endLine": 4018,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 4018,
                  "startColumn": 11,
                  "endLine": 4018,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3986,
                  "startColumn": 78,
                  "endLine": 3987,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3922,
                  "startColumn": 50,
                  "endLine": 3922,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_stored_info_types,\n",
                    "rendered": {
                      "text": "        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_stored_info_types,\n",
                      "markdown": "`        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_stored_info_types,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3892,
                  "startColumn": 32,
                  "endLine": 3892,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3892,
                  "startColumn": 11,
                  "endLine": 3892,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3840,
                  "startColumn": 78,
                  "endLine": 3841,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3785,
                  "startColumn": 50,
                  "endLine": 3785,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_stored_info_type,\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_stored_info_type,\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_stored_info_type,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3757,
                  "startColumn": 32,
                  "endLine": 3757,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3757,
                  "startColumn": 11,
                  "endLine": 3757,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3722,
                  "startColumn": 78,
                  "endLine": 3723,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3677,
                  "startColumn": 50,
                  "endLine": 3677,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.update_stored_info_type,\n",
                    "rendered": {
                      "text": "        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.update_stored_info_type,\n",
                      "markdown": "`        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.update_stored_info_type,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3645,
                  "startColumn": 32,
                  "endLine": 3645,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3645,
                  "startColumn": 11,
                  "endLine": 3645,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3594,
                  "startColumn": 78,
                  "endLine": 3595,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3546,
                  "startColumn": 50,
                  "endLine": 3546,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if config is not None:\n            request.config = config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_stored_info_type,\n",
                    "rendered": {
                      "text": "        if config is not None:\n            request.config = config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_stored_info_type,\n",
                      "markdown": "`        if config is not None:\n            request.config = config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_stored_info_type,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3516,
                  "startColumn": 32,
                  "endLine": 3516,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3516,
                  "startColumn": 11,
                  "endLine": 3516,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3454,
                  "startColumn": 78,
                  "endLine": 3455,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3411,
                  "startColumn": 50,
                  "endLine": 3411,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        # Create or coerce a protobuf request object.\n        request = dlp.CancelDlpJobRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.cancel_dlp_job,\n",
                    "rendered": {
                      "text": "        # Create or coerce a protobuf request object.\n        request = dlp.CancelDlpJobRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.cancel_dlp_job,\n",
                      "markdown": "`        # Create or coerce a protobuf request object.\n        request = dlp.CancelDlpJobRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.cancel_dlp_job,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3404,
                  "startColumn": 32,
                  "endLine": 3404,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                DLP job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                DLP job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                DLP job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3404,
                  "startColumn": 11,
                  "endLine": 3404,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                DLP job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                DLP job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                DLP job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3381,
                  "startColumn": 78,
                  "endLine": 3382,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3327,
                  "startColumn": 50,
                  "endLine": 3327,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_dlp_job,\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_dlp_job,\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_dlp_job,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3306,
                  "startColumn": 32,
                  "endLine": 3306,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3306,
                  "startColumn": 11,
                  "endLine": 3306,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3276,
                  "startColumn": 78,
                  "endLine": 3277,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3218,
                  "startColumn": 50,
                  "endLine": 3218,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_dlp_job,\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_dlp_job,\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_dlp_job,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3191,
                  "startColumn": 32,
                  "endLine": 3191,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3191,
                  "startColumn": 11,
                  "endLine": 3191,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3159,
                  "startColumn": 78,
                  "endLine": 3160,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3094,
                  "startColumn": 50,
                  "endLine": 3094,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_dlp_jobs,\n",
                    "rendered": {
                      "text": "        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_dlp_jobs,\n",
                      "markdown": "`        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_dlp_jobs,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3064,
                  "startColumn": 32,
                  "endLine": 3064,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3064,
                  "startColumn": 11,
                  "endLine": 3064,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 3013,
                  "startColumn": 78,
                  "endLine": 3014,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2967,
                  "startColumn": 50,
                  "endLine": 2967,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if risk_job is not None:\n            request.risk_job = risk_job\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_dlp_job,\n",
                    "rendered": {
                      "text": "        if risk_job is not None:\n            request.risk_job = risk_job\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_dlp_job,\n",
                      "markdown": "`        if risk_job is not None:\n            request.risk_job = risk_job\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_dlp_job,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2936,
                  "startColumn": 32,
                  "endLine": 2936,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2936,
                  "startColumn": 11,
                  "endLine": 2936,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2868,
                  "startColumn": 78,
                  "endLine": 2869,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2860,
                  "startColumn": 23,
                  "endLine": 2860,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        inspect jobs, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        inspect jobs, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        inspect jobs, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2815,
                  "startColumn": 50,
                  "endLine": 2815,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        # Create or coerce a protobuf request object.\n        request = dlp.ActivateJobTriggerRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.activate_job_trigger,\n",
                    "rendered": {
                      "text": "        # Create or coerce a protobuf request object.\n        request = dlp.ActivateJobTriggerRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.activate_job_trigger,\n",
                      "markdown": "`        # Create or coerce a protobuf request object.\n        request = dlp.ActivateJobTriggerRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.activate_job_trigger,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2802,
                  "startColumn": 32,
                  "endLine": 2802,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                ActivateJobTrigger.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                ActivateJobTrigger.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                ActivateJobTrigger.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2802,
                  "startColumn": 11,
                  "endLine": 2802,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                ActivateJobTrigger.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                ActivateJobTrigger.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                ActivateJobTrigger.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2776,
                  "startColumn": 78,
                  "endLine": 2777,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2726,
                  "startColumn": 50,
                  "endLine": 2726,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_job_trigger,\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_job_trigger,\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_job_trigger,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2705,
                  "startColumn": 32,
                  "endLine": 2705,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2705,
                  "startColumn": 11,
                  "endLine": 2705,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2675,
                  "startColumn": 78,
                  "endLine": 2676,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2611,
                  "startColumn": 50,
                  "endLine": 2611,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_job_triggers,\n",
                    "rendered": {
                      "text": "        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_job_triggers,\n",
                      "markdown": "`        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_job_triggers,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2581,
                  "startColumn": 32,
                  "endLine": 2581,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2581,
                  "startColumn": 11,
                  "endLine": 2581,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2531,
                  "startColumn": 78,
                  "endLine": 2532,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2476,
                  "startColumn": 50,
                  "endLine": 2476,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_job_trigger,\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_job_trigger,\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_job_trigger,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2447,
                  "startColumn": 32,
                  "endLine": 2447,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2447,
                  "startColumn": 11,
                  "endLine": 2447,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2414,
                  "startColumn": 78,
                  "endLine": 2415,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2369,
                  "startColumn": 50,
                  "endLine": 2369,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.hybrid_inspect_job_trigger,\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.hybrid_inspect_job_trigger,\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.hybrid_inspect_job_trigger,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2342,
                  "startColumn": 32,
                  "endLine": 2342,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2342,
                  "startColumn": 11,
                  "endLine": 2342,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2308,
                  "startColumn": 78,
                  "endLine": 2309,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2263,
                  "startColumn": 50,
                  "endLine": 2263,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.update_job_trigger,\n",
                    "rendered": {
                      "text": "        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.update_job_trigger,\n",
                      "markdown": "`        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.update_job_trigger,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2230,
                  "startColumn": 32,
                  "endLine": 2230,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2230,
                  "startColumn": 11,
                  "endLine": 2230,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2185,
                  "startColumn": 78,
                  "endLine": 2186,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2138,
                  "startColumn": 50,
                  "endLine": 2138,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if job_trigger is not None:\n            request.job_trigger = job_trigger\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_job_trigger,\n",
                    "rendered": {
                      "text": "        if job_trigger is not None:\n            request.job_trigger = job_trigger\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_job_trigger,\n",
                      "markdown": "`        if job_trigger is not None:\n            request.job_trigger = job_trigger\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_job_trigger,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2107,
                  "startColumn": 32,
                  "endLine": 2107,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2107,
                  "startColumn": 11,
                  "endLine": 2107,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 2049,
                  "startColumn": 78,
                  "endLine": 2050,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1995,
                  "startColumn": 50,
                  "endLine": 1995,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_deidentify_template,\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_deidentify_template,\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_deidentify_template,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1974,
                  "startColumn": 32,
                  "endLine": 1974,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1974,
                  "startColumn": 11,
                  "endLine": 1974,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1942,
                  "startColumn": 78,
                  "endLine": 1943,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1878,
                  "startColumn": 50,
                  "endLine": 1878,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_deidentify_templates,\n",
                    "rendered": {
                      "text": "        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_deidentify_templates,\n",
                      "markdown": "`        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_deidentify_templates,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1848,
                  "startColumn": 32,
                  "endLine": 1848,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1848,
                  "startColumn": 11,
                  "endLine": 1848,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1792,
                  "startColumn": 78,
                  "endLine": 1793,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1737,
                  "startColumn": 50,
                  "endLine": 1737,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_deidentify_template,\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_deidentify_template,\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_deidentify_template,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1707,
                  "startColumn": 32,
                  "endLine": 1707,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1707,
                  "startColumn": 11,
                  "endLine": 1707,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1672,
                  "startColumn": 78,
                  "endLine": 1673,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1627,
                  "startColumn": 50,
                  "endLine": 1627,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.update_deidentify_template,\n",
                    "rendered": {
                      "text": "        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.update_deidentify_template,\n",
                      "markdown": "`        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.update_deidentify_template,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1593,
                  "startColumn": 32,
                  "endLine": 1593,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1593,
                  "startColumn": 11,
                  "endLine": 1593,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1546,
                  "startColumn": 78,
                  "endLine": 1547,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1499,
                  "startColumn": 50,
                  "endLine": 1499,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if deidentify_template is not None:\n            request.deidentify_template = deidentify_template\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_deidentify_template,\n",
                    "rendered": {
                      "text": "        if deidentify_template is not None:\n            request.deidentify_template = deidentify_template\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_deidentify_template,\n",
                      "markdown": "`        if deidentify_template is not None:\n            request.deidentify_template = deidentify_template\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_deidentify_template,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1467,
                  "startColumn": 32,
                  "endLine": 1467,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1467,
                  "startColumn": 11,
                  "endLine": 1467,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1405,
                  "startColumn": 78,
                  "endLine": 1406,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1351,
                  "startColumn": 50,
                  "endLine": 1351,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_inspect_template,\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_inspect_template,\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.delete_inspect_template,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1330,
                  "startColumn": 32,
                  "endLine": 1330,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1330,
                  "startColumn": 11,
                  "endLine": 1330,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1298,
                  "startColumn": 78,
                  "endLine": 1299,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1235,
                  "startColumn": 50,
                  "endLine": 1235,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_inspect_templates,\n",
                    "rendered": {
                      "text": "        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_inspect_templates,\n",
                      "markdown": "`        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_inspect_templates,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1205,
                  "startColumn": 32,
                  "endLine": 1205,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1205,
                  "startColumn": 11,
                  "endLine": 1205,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1149,
                  "startColumn": 78,
                  "endLine": 1150,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1095,
                  "startColumn": 50,
                  "endLine": 1095,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_inspect_template,\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_inspect_template,\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.get_inspect_template,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1063,
                  "startColumn": 32,
                  "endLine": 1063,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1063,
                  "startColumn": 11,
                  "endLine": 1063,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 1028,
                  "startColumn": 78,
                  "endLine": 1029,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 984,
                  "startColumn": 50,
                  "endLine": 984,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.update_inspect_template,\n",
                    "rendered": {
                      "text": "        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.update_inspect_template,\n",
                      "markdown": "`        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.update_inspect_template,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 948,
                  "startColumn": 32,
                  "endLine": 948,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 948,
                  "startColumn": 11,
                  "endLine": 948,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 901,
                  "startColumn": 78,
                  "endLine": 902,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 855,
                  "startColumn": 50,
                  "endLine": 855,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if inspect_template is not None:\n            request.inspect_template = inspect_template\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_inspect_template,\n",
                    "rendered": {
                      "text": "        if inspect_template is not None:\n            request.inspect_template = inspect_template\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_inspect_template,\n",
                      "markdown": "`        if inspect_template is not None:\n            request.inspect_template = inspect_template\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.create_inspect_template,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 821,
                  "startColumn": 32,
                  "endLine": 821,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 821,
                  "startColumn": 11,
                  "endLine": 821,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 759,
                  "startColumn": 78,
                  "endLine": 760,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 708,
                  "startColumn": 50,
                  "endLine": 708,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_info_types,\n",
                    "rendered": {
                      "text": "        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_info_types,\n",
                      "markdown": "`        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.list_info_types,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 681,
                  "startColumn": 32,
                  "endLine": 681,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 681,
                  "startColumn": 11,
                  "endLine": 681,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 645,
                  "startColumn": 78,
                  "endLine": 646,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 590,
                  "startColumn": 50,
                  "endLine": 590,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        # Create or coerce a protobuf request object.\n        request = dlp.ReidentifyContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.reidentify_content,\n",
                    "rendered": {
                      "text": "        # Create or coerce a protobuf request object.\n        request = dlp.ReidentifyContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.reidentify_content,\n",
                      "markdown": "`        # Create or coerce a protobuf request object.\n        request = dlp.ReidentifyContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.reidentify_content,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 579,
                  "startColumn": 32,
                  "endLine": 579,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                The request object. Request to re-identify an item.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                The request object. Request to re-identify an item.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                The request object. Request to re-identify an item.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 579,
                  "startColumn": 11,
                  "endLine": 579,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                The request object. Request to re-identify an item.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                The request object. Request to re-identify an item.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                The request object. Request to re-identify an item.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 554,
                  "startColumn": 78,
                  "endLine": 555,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 501,
                  "startColumn": 50,
                  "endLine": 501,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        # Create or coerce a protobuf request object.\n        request = dlp.DeidentifyContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.deidentify_content,\n",
                    "rendered": {
                      "text": "        # Create or coerce a protobuf request object.\n        request = dlp.DeidentifyContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.deidentify_content,\n",
                      "markdown": "`        # Create or coerce a protobuf request object.\n        request = dlp.DeidentifyContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.deidentify_content,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 488,
                  "startColumn": 32,
                  "endLine": 488,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                The request object. Request to de-identify a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                The request object. Request to de-identify a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                The request object. Request to de-identify a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 488,
                  "startColumn": 11,
                  "endLine": 488,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                The request object. Request to de-identify a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                The request object. Request to de-identify a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                The request object. Request to de-identify a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 464,
                  "startColumn": 78,
                  "endLine": 465,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 456,
                  "startColumn": 23,
                  "endLine": 456,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 50,
                  "endLine": 404,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        # Create or coerce a protobuf request object.\n        request = dlp.RedactImageRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.redact_image,\n",
                    "rendered": {
                      "text": "        # Create or coerce a protobuf request object.\n        request = dlp.RedactImageRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.redact_image,\n",
                      "markdown": "`        # Create or coerce a protobuf request object.\n        request = dlp.RedactImageRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.redact_image,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 32,
                  "endLine": 393,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                by covering it with a colored rectangle.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                by covering it with a colored rectangle.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                by covering it with a colored rectangle.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 11,
                  "endLine": 393,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                by covering it with a colored rectangle.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                by covering it with a colored rectangle.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                by covering it with a colored rectangle.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 78,
                  "endLine": 368,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 23,
                  "endLine": 359,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 50,
                  "endLine": 307,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        # Create or coerce a protobuf request object.\n        request = dlp.InspectContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.inspect_content,\n",
                    "rendered": {
                      "text": "        # Create or coerce a protobuf request object.\n        request = dlp.InspectContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.inspect_content,\n",
                      "markdown": "`        # Create or coerce a protobuf request object.\n        request = dlp.InspectContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = gapic_v1.method_async.wrap_method(\n            self._client._transport.inspect_content,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 32,
                  "endLine": 296,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                sensitive info in a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                sensitive info in a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                sensitive info in a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 11,
                  "endLine": 296,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                sensitive info in a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                sensitive info in a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                sensitive info in a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 78,
                  "endLine": 272,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 23,
                  "endLine": 259,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        For how to guides, see\n        https://cloud.google.com/dlp/docs/inspecting-images and\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        For how to guides, see\n        https://cloud.google.com/dlp/docs/inspecting-images and\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        For how to guides, see\n        https://cloud.google.com/dlp/docs/inspecting-images and\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 31,
                  "endLine": 205,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        client_options: Optional[ClientOptions] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the dlp service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                    "rendered": {
                      "text": "        client_options: Optional[ClientOptions] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the dlp service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                      "markdown": "`        client_options: Optional[ClientOptions] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the dlp service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 43,
                  "endLine": 136,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                    "rendered": {
                      "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                      "markdown": "`            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 28,
                  "endLine": 121,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                    "rendered": {
                      "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                      "markdown": "`            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 36,
                  "endLine": 67,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n    \"\"\"\n\n",
                      "markdown": "`    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 7,
                  "endLine": 63,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n",
                    "rendered": {
                      "text": "    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n",
                      "markdown": "`    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/async_client.py"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 52,
                  "endLine": 58,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n\nclass DlpServiceAsyncClient:\n    \"\"\"The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n",
                    "rendered": {
                      "text": "\n\nclass DlpServiceAsyncClient:\n    \"\"\"The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n",
                      "markdown": "`\n\nclass DlpServiceAsyncClient:\n    \"\"\"The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/__init__.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/__init__.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/base.py"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 19,
                  "endLine": 119,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n",
                    "rendered": {
                      "text": "        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n",
                      "markdown": "`        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/base.py"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 21,
                  "endLine": 61,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to.\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to.\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to.\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/base.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/base.py"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 32,
                  "endLine": 108,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n",
                    "rendered": {
                      "text": "                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n",
                      "markdown": "`                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/transports/base.py"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 27,
                  "endLine": 79,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp/__init__.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 581,
                  "startColumn": 40,
                  "endLine": 581,
                  "endColumn": 82,
                  "snippet": {
                    "text": "        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"94c4cdfc5449cc675ade978e51a9a95109619a8f\"\n      }\n    }\n  ],\n",
                    "rendered": {
                      "text": "        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"94c4cdfc5449cc675ade978e51a9a95109619a8f\"\n      }\n    }\n  ],\n",
                      "markdown": "`        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"94c4cdfc5449cc675ade978e51a9a95109619a8f\"\n      }\n    }\n  ],\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 528,
                  "startColumn": 27,
                  "endLine": 528,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4100be97de001e7b1ad88e8e0ac5bae1ba3fe96b2cb9d69243ae31682ce99df489a8ec628d479a5cf6927a2fbe359465c56db8c5593cb9077374ef8727be774d\"\n        }\n      ]\n    }\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4100be97de001e7b1ad88e8e0ac5bae1ba3fe96b2cb9d69243ae31682ce99df489a8ec628d479a5cf6927a2fbe359465c56db8c5593cb9077374ef8727be774d\"\n        }\n      ]\n    }\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4100be97de001e7b1ad88e8e0ac5bae1ba3fe96b2cb9d69243ae31682ce99df489a8ec628d479a5cf6927a2fbe359465c56db8c5593cb9077374ef8727be774d\"\n        }\n      ]\n    }\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 524,
                  "startColumn": 27,
                  "endLine": 524,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ff542f48922114019fc5befd0fa0e107b494c365fa4f8af09f3fcb2eb6dc0f77\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ff542f48922114019fc5befd0fa0e107b494c365fa4f8af09f3fcb2eb6dc0f77\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ff542f48922114019fc5befd0fa0e107b494c365fa4f8af09f3fcb2eb6dc0f77\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 520,
                  "startColumn": 27,
                  "endLine": 520,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"d662cc72cfed7244a88a7360add85d5627b9cd6c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"d662cc72cfed7244a88a7360add85d5627b9cd6c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"d662cc72cfed7244a88a7360add85d5627b9cd6c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 509,
                  "startColumn": 27,
                  "endLine": 509,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"bd40d18144656a5486e0e417da0ecd651a01fdc0b6274076cbfc0252e83b9dcf5a18c7e8e583f87be1fa2a26d96807f81d414b8154f7f02b13edd52c09c06d7e\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"bd40d18144656a5486e0e417da0ecd651a01fdc0b6274076cbfc0252e83b9dcf5a18c7e8e583f87be1fa2a26d96807f81d414b8154f7f02b13edd52c09c06d7e\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"bd40d18144656a5486e0e417da0ecd651a01fdc0b6274076cbfc0252e83b9dcf5a18c7e8e583f87be1fa2a26d96807f81d414b8154f7f02b13edd52c09c06d7e\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 505,
                  "startColumn": 27,
                  "endLine": 505,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"bfc21a62a444d9ad289c018922965e164907f37c1749665147d78ec9f330a137\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"bfc21a62a444d9ad289c018922965e164907f37c1749665147d78ec9f330a137\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"bfc21a62a444d9ad289c018922965e164907f37c1749665147d78ec9f330a137\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 501,
                  "startColumn": 27,
                  "endLine": 501,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"509983c76d9be2fe753f63a6334b5a24d1a2328d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"509983c76d9be2fe753f63a6334b5a24d1a2328d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"509983c76d9be2fe753f63a6334b5a24d1a2328d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 490,
                  "startColumn": 27,
                  "endLine": 490,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ed7d1e409da27af8903070c62ba100978bb708b0e181c7cf1526dd43626f58f9408b684f5c8f4b0ffa4c8420bf1174232ae4d7b9503bcbac110dab8b6ad04763\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ed7d1e409da27af8903070c62ba100978bb708b0e181c7cf1526dd43626f58f9408b684f5c8f4b0ffa4c8420bf1174232ae4d7b9503bcbac110dab8b6ad04763\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ed7d1e409da27af8903070c62ba100978bb708b0e181c7cf1526dd43626f58f9408b684f5c8f4b0ffa4c8420bf1174232ae4d7b9503bcbac110dab8b6ad04763\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 27,
                  "endLine": 486,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f86fedd281ae13b503d03ad2a55667ab584730157d0c3d97912e6fed7a664e79\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f86fedd281ae13b503d03ad2a55667ab584730157d0c3d97912e6fed7a664e79\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f86fedd281ae13b503d03ad2a55667ab584730157d0c3d97912e6fed7a664e79\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 482,
                  "startColumn": 27,
                  "endLine": 482,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b696d0e91ff81c8ef2e96fbc6e5afe9cde7d289f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b696d0e91ff81c8ef2e96fbc6e5afe9cde7d289f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b696d0e91ff81c8ef2e96fbc6e5afe9cde7d289f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 471,
                  "startColumn": 27,
                  "endLine": 471,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0b452d53a47a5290217ceeefdc42e911ade016ce72d398a9abf0f9ac693d11a396e4ce372b68d62e6c744a1650a82205c72882a518a8124deaed85e0a1db7031\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0b452d53a47a5290217ceeefdc42e911ade016ce72d398a9abf0f9ac693d11a396e4ce372b68d62e6c744a1650a82205c72882a518a8124deaed85e0a1db7031\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0b452d53a47a5290217ceeefdc42e911ade016ce72d398a9abf0f9ac693d11a396e4ce372b68d62e6c744a1650a82205c72882a518a8124deaed85e0a1db7031\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 27,
                  "endLine": 467,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c6683a74441e8023c0be7a9b5b9dbe49e4d96b5bbff9b3149ad30c5020dcaf10\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c6683a74441e8023c0be7a9b5b9dbe49e4d96b5bbff9b3149ad30c5020dcaf10\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c6683a74441e8023c0be7a9b5b9dbe49e4d96b5bbff9b3149ad30c5020dcaf10\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 463,
                  "startColumn": 27,
                  "endLine": 463,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"327d6777b48af5b3974bb0eead6d0c2d190eab2e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"327d6777b48af5b3974bb0eead6d0c2d190eab2e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"327d6777b48af5b3974bb0eead6d0c2d190eab2e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 452,
                  "startColumn": 27,
                  "endLine": 452,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e6d6e9f4a24804b7bdef403cbc23debf8f7f5bef7a4d25b7cd22b31122b31e47c5294f28a848b053eb45dc979403c1f786d314b32f4c80efca671fe58a682151\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e6d6e9f4a24804b7bdef403cbc23debf8f7f5bef7a4d25b7cd22b31122b31e47c5294f28a848b053eb45dc979403c1f786d314b32f4c80efca671fe58a682151\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e6d6e9f4a24804b7bdef403cbc23debf8f7f5bef7a4d25b7cd22b31122b31e47c5294f28a848b053eb45dc979403c1f786d314b32f4c80efca671fe58a682151\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 448,
                  "startColumn": 27,
                  "endLine": 448,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"75bc805913d2f6e9eb427f694940cbcafcdfa55a98cb4583d1562e05b350cc66\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"75bc805913d2f6e9eb427f694940cbcafcdfa55a98cb4583d1562e05b350cc66\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"75bc805913d2f6e9eb427f694940cbcafcdfa55a98cb4583d1562e05b350cc66\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 444,
                  "startColumn": 27,
                  "endLine": 444,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b0f78da12299e1e8c048cbc74295d61aa54f59eb\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b0f78da12299e1e8c048cbc74295d61aa54f59eb\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b0f78da12299e1e8c048cbc74295d61aa54f59eb\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 433,
                  "startColumn": 27,
                  "endLine": 433,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"98f6b79b778f7b0a15415bd750c3a8a097d650511cb4ec8115188e115c47053fe700f578895c097051c9bc3dfb6197c2b13a15de203273e1a3218884f86e90e8\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"98f6b79b778f7b0a15415bd750c3a8a097d650511cb4ec8115188e115c47053fe700f578895c097051c9bc3dfb6197c2b13a15de203273e1a3218884f86e90e8\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"98f6b79b778f7b0a15415bd750c3a8a097d650511cb4ec8115188e115c47053fe700f578895c097051c9bc3dfb6197c2b13a15de203273e1a3218884f86e90e8\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 27,
                  "endLine": 429,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cfc7749b96f63bd31c3c42b5c471bf756814053e847c10f3eb003417bc523d30\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cfc7749b96f63bd31c3c42b5c471bf756814053e847c10f3eb003417bc523d30\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cfc7749b96f63bd31c3c42b5c471bf756814053e847c10f3eb003417bc523d30\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 425,
                  "startColumn": 27,
                  "endLine": 425,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2b8b815229aa8a61e483fb4ba0588b8b6c491890\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2b8b815229aa8a61e483fb4ba0588b8b6c491890\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2b8b815229aa8a61e483fb4ba0588b8b6c491890\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 27,
                  "endLine": 414,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"16c51757305262b10452e36da4fd016ce7e4277c27129a8acb3000ca239e4a08d45980a736f47e188b31f49281bc4238fee34f65c49fc69830a741b6303b26fb\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"16c51757305262b10452e36da4fd016ce7e4277c27129a8acb3000ca239e4a08d45980a736f47e188b31f49281bc4238fee34f65c49fc69830a741b6303b26fb\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"16c51757305262b10452e36da4fd016ce7e4277c27129a8acb3000ca239e4a08d45980a736f47e188b31f49281bc4238fee34f65c49fc69830a741b6303b26fb\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 27,
                  "endLine": 410,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"72e2499c77387fddd0f7659ced7e92f9848c93a6b271752b6a204611596ac762\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"72e2499c77387fddd0f7659ced7e92f9848c93a6b271752b6a204611596ac762\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"72e2499c77387fddd0f7659ced7e92f9848c93a6b271752b6a204611596ac762\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 406,
                  "startColumn": 27,
                  "endLine": 406,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8c7abca2d2f2c1500a65050928ae2356a6e70592\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8c7abca2d2f2c1500a65050928ae2356a6e70592\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8c7abca2d2f2c1500a65050928ae2356a6e70592\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 395,
                  "startColumn": 27,
                  "endLine": 395,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"64d3cd68d3fa7fe4513c4b7d1cab5dad2820a4e9cc16af5108346cbe7d0314cbdd9655fe7dd18544bcacc0ecaf3addb305c96fd27218ddee08c2c5f2d2f40d40\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"64d3cd68d3fa7fe4513c4b7d1cab5dad2820a4e9cc16af5108346cbe7d0314cbdd9655fe7dd18544bcacc0ecaf3addb305c96fd27218ddee08c2c5f2d2f40d40\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"64d3cd68d3fa7fe4513c4b7d1cab5dad2820a4e9cc16af5108346cbe7d0314cbdd9655fe7dd18544bcacc0ecaf3addb305c96fd27218ddee08c2c5f2d2f40d40\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 391,
                  "startColumn": 27,
                  "endLine": 391,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cc0e575c1023d104c61f44ec5e282c8d111e54137fa41ad8c05632e4820ed073\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cc0e575c1023d104c61f44ec5e282c8d111e54137fa41ad8c05632e4820ed073\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cc0e575c1023d104c61f44ec5e282c8d111e54137fa41ad8c05632e4820ed073\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 387,
                  "startColumn": 27,
                  "endLine": 387,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"29a0205e1c0580eadfd8a59b67223d5f82af3d03\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"29a0205e1c0580eadfd8a59b67223d5f82af3d03\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"29a0205e1c0580eadfd8a59b67223d5f82af3d03\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 27,
                  "endLine": 376,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ebdc1cca2e8686432ac147c7941d606aec6b65410f7085c305085b361cec7ac47341d37a2b5c328e6f1075154fbf1d363f97c0371a503d17267cba6440856a37\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ebdc1cca2e8686432ac147c7941d606aec6b65410f7085c305085b361cec7ac47341d37a2b5c328e6f1075154fbf1d363f97c0371a503d17267cba6440856a37\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ebdc1cca2e8686432ac147c7941d606aec6b65410f7085c305085b361cec7ac47341d37a2b5c328e6f1075154fbf1d363f97c0371a503d17267cba6440856a37\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 27,
                  "endLine": 372,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"6cb2f72521227d3dc93bde5ef5d973c3399e428b47b92c0fee68573ca748c13d\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"6cb2f72521227d3dc93bde5ef5d973c3399e428b47b92c0fee68573ca748c13d\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"6cb2f72521227d3dc93bde5ef5d973c3399e428b47b92c0fee68573ca748c13d\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 27,
                  "endLine": 368,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c27327df4c1a95a2df765a4956d30ed66af2f1ef\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c27327df4c1a95a2df765a4956d30ed66af2f1ef\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c27327df4c1a95a2df765a4956d30ed66af2f1ef\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 27,
                  "endLine": 357,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"614ed114088491572a84060824f7e48cce184a31c4090213f84a918a13602a86fe17bb91934b7b21710ac9d9b9282546706f05c9b871677c273cf57449aa48fe\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"614ed114088491572a84060824f7e48cce184a31c4090213f84a918a13602a86fe17bb91934b7b21710ac9d9b9282546706f05c9b871677c273cf57449aa48fe\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"614ed114088491572a84060824f7e48cce184a31c4090213f84a918a13602a86fe17bb91934b7b21710ac9d9b9282546706f05c9b871677c273cf57449aa48fe\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 27,
                  "endLine": 353,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f40d43146b8f35f270eb8a589d87f132d5465abe2385cd57223dd89001f72e63\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f40d43146b8f35f270eb8a589d87f132d5465abe2385cd57223dd89001f72e63\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"f40d43146b8f35f270eb8a589d87f132d5465abe2385cd57223dd89001f72e63\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 27,
                  "endLine": 349,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"3274d83485c5bbbf92483ec66ca3a985e905946a\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"3274d83485c5bbbf92483ec66ca3a985e905946a\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"3274d83485c5bbbf92483ec66ca3a985e905946a\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 27,
                  "endLine": 338,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2d4ea4a10eaf04ad37394f980bd69c562ce9c6a2d8a639095cf148c2a4288a655d744185342cfbb5293abb6fdc3c7c5efe8b95f121a6bbda9875d8adec9d087e\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2d4ea4a10eaf04ad37394f980bd69c562ce9c6a2d8a639095cf148c2a4288a655d744185342cfbb5293abb6fdc3c7c5efe8b95f121a6bbda9875d8adec9d087e\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2d4ea4a10eaf04ad37394f980bd69c562ce9c6a2d8a639095cf148c2a4288a655d744185342cfbb5293abb6fdc3c7c5efe8b95f121a6bbda9875d8adec9d087e\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 27,
                  "endLine": 334,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"88c106ad601884d51d31006e49d057e2e8e12097f42483ebdfd7ec242cac4caf\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"88c106ad601884d51d31006e49d057e2e8e12097f42483ebdfd7ec242cac4caf\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"88c106ad601884d51d31006e49d057e2e8e12097f42483ebdfd7ec242cac4caf\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 27,
                  "endLine": 330,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b4084ff2be7c06b17645d0e5adb6a40bc434fc56\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b4084ff2be7c06b17645d0e5adb6a40bc434fc56\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b4084ff2be7c06b17645d0e5adb6a40bc434fc56\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 27,
                  "endLine": 319,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"cc64af15d1224f1454ede312e2ab3f92693d04b37683ef12f2739e627d2cc5513db71b9d6d69bc0b0b32ac88669a2e1a8b793de47cb0ece39190d79e9e19a809\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"cc64af15d1224f1454ede312e2ab3f92693d04b37683ef12f2739e627d2cc5513db71b9d6d69bc0b0b32ac88669a2e1a8b793de47cb0ece39190d79e9e19a809\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"cc64af15d1224f1454ede312e2ab3f92693d04b37683ef12f2739e627d2cc5513db71b9d6d69bc0b0b32ac88669a2e1a8b793de47cb0ece39190d79e9e19a809\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 27,
                  "endLine": 315,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"598838b57af803539890097ac78860e8203e8e1ce0a37c86f0744776a1d2f046\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"598838b57af803539890097ac78860e8203e8e1ce0a37c86f0744776a1d2f046\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"598838b57af803539890097ac78860e8203e8e1ce0a37c86f0744776a1d2f046\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 27,
                  "endLine": 311,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"f0a062b1ca67e58e746d337cce6a42ee60b9b736\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"f0a062b1ca67e58e746d337cce6a42ee60b9b736\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"f0a062b1ca67e58e746d337cce6a42ee60b9b736\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 27,
                  "endLine": 300,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"9e311df316be29d901c4404fe27c957a6ed88c79b27007ac9b4146ed46c2ca85316aabb35ade2bcc7d4c3991d9bbda9db7137f3cf0a1ee148adb37347b420be1\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"9e311df316be29d901c4404fe27c957a6ed88c79b27007ac9b4146ed46c2ca85316aabb35ade2bcc7d4c3991d9bbda9db7137f3cf0a1ee148adb37347b420be1\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"9e311df316be29d901c4404fe27c957a6ed88c79b27007ac9b4146ed46c2ca85316aabb35ade2bcc7d4c3991d9bbda9db7137f3cf0a1ee148adb37347b420be1\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 27,
                  "endLine": 296,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"89a628263ccbd121e777e8af2da7bdd3406a2f3f502e62e688ad52e070dabb3e\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"89a628263ccbd121e777e8af2da7bdd3406a2f3f502e62e688ad52e070dabb3e\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"89a628263ccbd121e777e8af2da7bdd3406a2f3f502e62e688ad52e070dabb3e\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 27,
                  "endLine": 292,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"10364b24cc63d59548079872e0c96d89bd2ab79d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"10364b24cc63d59548079872e0c96d89bd2ab79d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"10364b24cc63d59548079872e0c96d89bd2ab79d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 27,
                  "endLine": 281,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"01c68760b1425fa1440848c10090cc9a960fc44aed2e19f641765695030b6e8927f386634e613c1014ce28fa8b929c39bb67589afed3794ca0e520b8d9d69d54\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"01c68760b1425fa1440848c10090cc9a960fc44aed2e19f641765695030b6e8927f386634e613c1014ce28fa8b929c39bb67589afed3794ca0e520b8d9d69d54\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"01c68760b1425fa1440848c10090cc9a960fc44aed2e19f641765695030b6e8927f386634e613c1014ce28fa8b929c39bb67589afed3794ca0e520b8d9d69d54\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 27,
                  "endLine": 277,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"13e1e98b2079a1250caa86bbc9c8830a730cf41b5286e6b41a0075bd0073a6f2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"13e1e98b2079a1250caa86bbc9c8830a730cf41b5286e6b41a0075bd0073a6f2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"13e1e98b2079a1250caa86bbc9c8830a730cf41b5286e6b41a0075bd0073a6f2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 27,
                  "endLine": 273,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8ffeee027f4dad21c1bae3a6521f775535eee7bd\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8ffeee027f4dad21c1bae3a6521f775535eee7bd\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8ffeee027f4dad21c1bae3a6521f775535eee7bd\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 27,
                  "endLine": 262,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"41c55af2ee140573d1bdd8d9da36635268f17a5919be1972636cb22a43e21d26485648c5039d64996f459608fd0bc15d540b62537238016bf07507765c636f82\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"41c55af2ee140573d1bdd8d9da36635268f17a5919be1972636cb22a43e21d26485648c5039d64996f459608fd0bc15d540b62537238016bf07507765c636f82\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"41c55af2ee140573d1bdd8d9da36635268f17a5919be1972636cb22a43e21d26485648c5039d64996f459608fd0bc15d540b62537238016bf07507765c636f82\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 27,
                  "endLine": 258,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"fecd34870527d5aa16f7ad8e48ea802dd9b5bb36961f7b28b68f92ec9b98601f\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"fecd34870527d5aa16f7ad8e48ea802dd9b5bb36961f7b28b68f92ec9b98601f\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"fecd34870527d5aa16f7ad8e48ea802dd9b5bb36961f7b28b68f92ec9b98601f\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 27,
                  "endLine": 254,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"395d659cb78f1e84fb4cc8232c43b11e3445e516\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"395d659cb78f1e84fb4cc8232c43b11e3445e516\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"395d659cb78f1e84fb4cc8232c43b11e3445e516\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 27,
                  "endLine": 243,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"550bfacf710f7dbb5427d934621aef017a8661aef8e0be2e251b5c6f6e06444e23740a7d5f1f9ef53360b56503cc8149e4444c54508b906dec556c0b96e0562e\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"550bfacf710f7dbb5427d934621aef017a8661aef8e0be2e251b5c6f6e06444e23740a7d5f1f9ef53360b56503cc8149e4444c54508b906dec556c0b96e0562e\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"550bfacf710f7dbb5427d934621aef017a8661aef8e0be2e251b5c6f6e06444e23740a7d5f1f9ef53360b56503cc8149e4444c54508b906dec556c0b96e0562e\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 27,
                  "endLine": 239,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"078b2369d5459a3b4b198cc6ef5b28f3c42fac4eb2b2814a3c803910b16eba48\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"078b2369d5459a3b4b198cc6ef5b28f3c42fac4eb2b2814a3c803910b16eba48\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"078b2369d5459a3b4b198cc6ef5b28f3c42fac4eb2b2814a3c803910b16eba48\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 27,
                  "endLine": 235,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"194c8ca4c49f9ba3efe0aa4e6c8cbe943206e0e6\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"194c8ca4c49f9ba3efe0aa4e6c8cbe943206e0e6\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"194c8ca4c49f9ba3efe0aa4e6c8cbe943206e0e6\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 27,
                  "endLine": 224,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c6b5e590d0537ac5914886291b61e07ca9f28c010920587db0216d56276c89022867c4944ce9d70e1537a3bd32cb3e934ad2b6bd1751d101b86cf6c241522e4b\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c6b5e590d0537ac5914886291b61e07ca9f28c010920587db0216d56276c89022867c4944ce9d70e1537a3bd32cb3e934ad2b6bd1751d101b86cf6c241522e4b\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c6b5e590d0537ac5914886291b61e07ca9f28c010920587db0216d56276c89022867c4944ce9d70e1537a3bd32cb3e934ad2b6bd1751d101b86cf6c241522e4b\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 27,
                  "endLine": 220,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a96a12e1a1c65f4dd8183bebee15a4075128b7ea6ce7cd9d2e0e620d268e9d0c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a96a12e1a1c65f4dd8183bebee15a4075128b7ea6ce7cd9d2e0e620d268e9d0c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a96a12e1a1c65f4dd8183bebee15a4075128b7ea6ce7cd9d2e0e620d268e9d0c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 27,
                  "endLine": 216,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"042f406b5b48628ce1fb4574dd4dd2159b369788\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"042f406b5b48628ce1fb4574dd4dd2159b369788\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"042f406b5b48628ce1fb4574dd4dd2159b369788\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 27,
                  "endLine": 205,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"da0cdaa5d74709035bfd23db1d7328d5a6f12361d64b2e80c21641f4460d3466795a76d8ba78c2ae1f597a4f515a1f212ae4e8f9dbc5cde2f90f4a83b40df65f\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"da0cdaa5d74709035bfd23db1d7328d5a6f12361d64b2e80c21641f4460d3466795a76d8ba78c2ae1f597a4f515a1f212ae4e8f9dbc5cde2f90f4a83b40df65f\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"da0cdaa5d74709035bfd23db1d7328d5a6f12361d64b2e80c21641f4460d3466795a76d8ba78c2ae1f597a4f515a1f212ae4e8f9dbc5cde2f90f4a83b40df65f\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 27,
                  "endLine": 201,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"967a6f78188d7f64a11eb3f4711ce8b788ed37a40c027978b91cfd06a7e03f35\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"967a6f78188d7f64a11eb3f4711ce8b788ed37a40c027978b91cfd06a7e03f35\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"967a6f78188d7f64a11eb3f4711ce8b788ed37a40c027978b91cfd06a7e03f35\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 27,
                  "endLine": 197,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2c15d32bd54922a90e43af5642ad08aaa2cb020c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2c15d32bd54922a90e43af5642ad08aaa2cb020c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2c15d32bd54922a90e43af5642ad08aaa2cb020c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 27,
                  "endLine": 186,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"6a57aafa8c3f7bcf8a11001cbea49a486c952a67e2ae3af43ba3ae4425658f39efbcca4c8d4d77721f61194c31dd7bc933222186b56046a2b4a38481e82c8f54\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"6a57aafa8c3f7bcf8a11001cbea49a486c952a67e2ae3af43ba3ae4425658f39efbcca4c8d4d77721f61194c31dd7bc933222186b56046a2b4a38481e82c8f54\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"6a57aafa8c3f7bcf8a11001cbea49a486c952a67e2ae3af43ba3ae4425658f39efbcca4c8d4d77721f61194c31dd7bc933222186b56046a2b4a38481e82c8f54\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 27,
                  "endLine": 182,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"0c2230738996a929165f89fc9634fcd2fc9a6008c4595048d3e9f54817871859\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"0c2230738996a929165f89fc9634fcd2fc9a6008c4595048d3e9f54817871859\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"0c2230738996a929165f89fc9634fcd2fc9a6008c4595048d3e9f54817871859\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 27,
                  "endLine": 178,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"4b247222f9ad6c901a86e277f4d1888c91858acd\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"4b247222f9ad6c901a86e277f4d1888c91858acd\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"4b247222f9ad6c901a86e277f4d1888c91858acd\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 27,
                  "endLine": 167,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"abc529437b1ff6af50d953076adfaea03c05be24c2753a2f7548b43e881d4a1850c1fa8d2dede8c476b314f3ef0ba9fc2097abdf2fe48d591b5aa72b533dc0bb\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"abc529437b1ff6af50d953076adfaea03c05be24c2753a2f7548b43e881d4a1850c1fa8d2dede8c476b314f3ef0ba9fc2097abdf2fe48d591b5aa72b533dc0bb\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"abc529437b1ff6af50d953076adfaea03c05be24c2753a2f7548b43e881d4a1850c1fa8d2dede8c476b314f3ef0ba9fc2097abdf2fe48d591b5aa72b533dc0bb\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 27,
                  "endLine": 163,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cd66ef430832e3c5579d80650f8c788e50687fbd01158b480bd7de870116d564\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cd66ef430832e3c5579d80650f8c788e50687fbd01158b480bd7de870116d564\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cd66ef430832e3c5579d80650f8c788e50687fbd01158b480bd7de870116d564\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 27,
                  "endLine": 159,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"437629db6bfef0d238d4a68a774be2c55b501ee3\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"437629db6bfef0d238d4a68a774be2c55b501ee3\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"437629db6bfef0d238d4a68a774be2c55b501ee3\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 27,
                  "endLine": 148,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e7433e7c00697c854ef23fd07b37724ee818711dec34186de898622c275a83fc040c45d42d729a2cc415f0989947656f86130affba8053c71c220b46dda85847\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e7433e7c00697c854ef23fd07b37724ee818711dec34186de898622c275a83fc040c45d42d729a2cc415f0989947656f86130affba8053c71c220b46dda85847\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e7433e7c00697c854ef23fd07b37724ee818711dec34186de898622c275a83fc040c45d42d729a2cc415f0989947656f86130affba8053c71c220b46dda85847\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 27,
                  "endLine": 144,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7c0670dbea842a43289c357fecad1cb199288ffcce58fd62899e778b83e6f88c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7c0670dbea842a43289c357fecad1cb199288ffcce58fd62899e778b83e6f88c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7c0670dbea842a43289c357fecad1cb199288ffcce58fd62899e778b83e6f88c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 27,
                  "endLine": 140,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8d66d5e9769162eb4824eff82253e61d9b5c9764\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8d66d5e9769162eb4824eff82253e61d9b5c9764\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8d66d5e9769162eb4824eff82253e61d9b5c9764\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 27,
                  "endLine": 129,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2fddd6c2aa6f8d88dfb4599261855089484b06b1c9cb1daa802a06a3539116620844bbe5f2b12ac8a7488e52e126fdc592d21cbc75cea2411f5a2e85113a6388\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2fddd6c2aa6f8d88dfb4599261855089484b06b1c9cb1daa802a06a3539116620844bbe5f2b12ac8a7488e52e126fdc592d21cbc75cea2411f5a2e85113a6388\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2fddd6c2aa6f8d88dfb4599261855089484b06b1c9cb1daa802a06a3539116620844bbe5f2b12ac8a7488e52e126fdc592d21cbc75cea2411f5a2e85113a6388\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 27,
                  "endLine": 125,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7dd6e6c73681eb79f56c6bcfd5b7bb9cc66a1ac0d8c60d692ccbc327402016cb\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7dd6e6c73681eb79f56c6bcfd5b7bb9cc66a1ac0d8c60d692ccbc327402016cb\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7dd6e6c73681eb79f56c6bcfd5b7bb9cc66a1ac0d8c60d692ccbc327402016cb\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 27,
                  "endLine": 121,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6c2cf2ca11d605899935257921651530f4629001\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6c2cf2ca11d605899935257921651530f4629001\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6c2cf2ca11d605899935257921651530f4629001\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 27,
                  "endLine": 110,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"cf3d94668aeac06d37c867a9a2371b9404b982ca4444ef3660f6e1a4ceed52951b5807518c3b0e255d6166974e2daf2c7b0f02d490c25fa0d3a5ac9b530f91fa\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"cf3d94668aeac06d37c867a9a2371b9404b982ca4444ef3660f6e1a4ceed52951b5807518c3b0e255d6166974e2daf2c7b0f02d490c25fa0d3a5ac9b530f91fa\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"cf3d94668aeac06d37c867a9a2371b9404b982ca4444ef3660f6e1a4ceed52951b5807518c3b0e255d6166974e2daf2c7b0f02d490c25fa0d3a5ac9b530f91fa\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 27,
                  "endLine": 106,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ba0898683b8b44d4d271e62e3d89fc491f8c1b201933bec6c9d64948af5e0112\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ba0898683b8b44d4d271e62e3d89fc491f8c1b201933bec6c9d64948af5e0112\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ba0898683b8b44d4d271e62e3d89fc491f8c1b201933bec6c9d64948af5e0112\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 27,
                  "endLine": 102,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"252df702abeb078c0e4655daeb2d51a23fafdb21\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"252df702abeb078c0e4655daeb2d51a23fafdb21\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"252df702abeb078c0e4655daeb2d51a23fafdb21\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 27,
                  "endLine": 91,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"6adf449a386d3a5f1c694dac572b21ad6f74be79d96bd27a9c1627b6a8cff28afa267420188803c371ce8c493c4936432bcf29eb89cadae73c9bc0b528181ea6\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"6adf449a386d3a5f1c694dac572b21ad6f74be79d96bd27a9c1627b6a8cff28afa267420188803c371ce8c493c4936432bcf29eb89cadae73c9bc0b528181ea6\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"6adf449a386d3a5f1c694dac572b21ad6f74be79d96bd27a9c1627b6a8cff28afa267420188803c371ce8c493c4936432bcf29eb89cadae73c9bc0b528181ea6\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 27,
                  "endLine": 87,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"516961ae54b1de1e24907b45ffc6e1b2b8f53976f8239a947e2380132c534746\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"516961ae54b1de1e24907b45ffc6e1b2b8f53976f8239a947e2380132c534746\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"516961ae54b1de1e24907b45ffc6e1b2b8f53976f8239a947e2380132c534746\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 27,
                  "endLine": 83,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"d92ef2bd432b29c50f5f4282b421b71dbd041e0c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"d92ef2bd432b29c50f5f4282b421b71dbd041e0c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"d92ef2bd432b29c50f5f4282b421b71dbd041e0c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 27,
                  "endLine": 72,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e7433e7c00697c854ef23fd07b37724ee818711dec34186de898622c275a83fc040c45d42d729a2cc415f0989947656f86130affba8053c71c220b46dda85847\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e7433e7c00697c854ef23fd07b37724ee818711dec34186de898622c275a83fc040c45d42d729a2cc415f0989947656f86130affba8053c71c220b46dda85847\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e7433e7c00697c854ef23fd07b37724ee818711dec34186de898622c275a83fc040c45d42d729a2cc415f0989947656f86130affba8053c71c220b46dda85847\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 27,
                  "endLine": 68,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7c0670dbea842a43289c357fecad1cb199288ffcce58fd62899e778b83e6f88c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7c0670dbea842a43289c357fecad1cb199288ffcce58fd62899e778b83e6f88c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7c0670dbea842a43289c357fecad1cb199288ffcce58fd62899e778b83e6f88c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 27,
                  "endLine": 64,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8d66d5e9769162eb4824eff82253e61d9b5c9764\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8d66d5e9769162eb4824eff82253e61d9b5c9764\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8d66d5e9769162eb4824eff82253e61d9b5c9764\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 27,
                  "endLine": 53,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2fddd6c2aa6f8d88dfb4599261855089484b06b1c9cb1daa802a06a3539116620844bbe5f2b12ac8a7488e52e126fdc592d21cbc75cea2411f5a2e85113a6388\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2fddd6c2aa6f8d88dfb4599261855089484b06b1c9cb1daa802a06a3539116620844bbe5f2b12ac8a7488e52e126fdc592d21cbc75cea2411f5a2e85113a6388\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2fddd6c2aa6f8d88dfb4599261855089484b06b1c9cb1daa802a06a3539116620844bbe5f2b12ac8a7488e52e126fdc592d21cbc75cea2411f5a2e85113a6388\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 27,
                  "endLine": 49,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7dd6e6c73681eb79f56c6bcfd5b7bb9cc66a1ac0d8c60d692ccbc327402016cb\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7dd6e6c73681eb79f56c6bcfd5b7bb9cc66a1ac0d8c60d692ccbc327402016cb\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7dd6e6c73681eb79f56c6bcfd5b7bb9cc66a1ac0d8c60d692ccbc327402016cb\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 27,
                  "endLine": 45,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6c2cf2ca11d605899935257921651530f4629001\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6c2cf2ca11d605899935257921651530f4629001\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6c2cf2ca11d605899935257921651530f4629001\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 27,
                  "endLine": 34,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"34c2815a2d86c86c36a473e2844cc4236bf811ceaf07ecdd31a6ee69c64ab3c8eb9786894780abdd0c1121c6594c2f4557cf6b7ccad7b20e0c412dcc106e7b35\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"34c2815a2d86c86c36a473e2844cc4236bf811ceaf07ecdd31a6ee69c64ab3c8eb9786894780abdd0c1121c6594c2f4557cf6b7ccad7b20e0c412dcc106e7b35\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"34c2815a2d86c86c36a473e2844cc4236bf811ceaf07ecdd31a6ee69c64ab3c8eb9786894780abdd0c1121c6594c2f4557cf6b7ccad7b20e0c412dcc106e7b35\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 27,
                  "endLine": 30,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ed9f13417bc053832dda1a25489cba198cddceb6f7991b818c6a28dfb915d75a\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ed9f13417bc053832dda1a25489cba198cddceb6f7991b818c6a28dfb915d75a\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ed9f13417bc053832dda1a25489cba198cddceb6f7991b818c6a28dfb915d75a\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/var/lib/db/sbom/py3-google-cloud-dlp-3.12.3-r2.spdx.json"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 27,
                  "endLine": 26,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"60d08bd928d77e829c7325e67cc4f0a32f7bf3d4\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"60d08bd928d77e829c7325e67cc4f0a32f7bf3d4\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"60d08bd928d77e829c7325e67cc4f0a32f7bf3d4\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3811,
                  "startColumn": 23,
                  "endLine": 3811,
                  "endColumn": 32,
                  "snippet": {
                    "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                    "rendered": {
                      "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                      "markdown": "`                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2452,
                  "startColumn": 23,
                  "endLine": 2452,
                  "endColumn": 32,
                  "snippet": {
                    "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                    "rendered": {
                      "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                      "markdown": "`                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1839,
                  "startColumn": 23,
                  "endLine": 1839,
                  "endColumn": 32,
                  "snippet": {
                    "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                    "rendered": {
                      "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                      "markdown": "`                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1222,
                  "startColumn": 23,
                  "endLine": 1222,
                  "endColumn": 32,
                  "snippet": {
                    "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                    "rendered": {
                      "text": "                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n",
                      "markdown": "`                on the ``request`` instance; if ``request`` is provided, this\n                should not be set.\n            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Mask to control which fields get\n                updated.\n\n                This corresponds to the ``update_mask`` field\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 425,
                  "startColumn": 33,
                  "endLine": 425,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                    "rendered": {
                      "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                      "markdown": "`        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4373,
                  "startColumn": 50,
                  "endLine": 4373,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if not isinstance(request, dlp.FinishDlpJobRequest):\n            request = dlp.FinishDlpJobRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.finish_dlp_job]\n\n",
                    "rendered": {
                      "text": "        if not isinstance(request, dlp.FinishDlpJobRequest):\n            request = dlp.FinishDlpJobRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.finish_dlp_job]\n\n",
                      "markdown": "`        if not isinstance(request, dlp.FinishDlpJobRequest):\n            request = dlp.FinishDlpJobRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.finish_dlp_job]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4361,
                  "startColumn": 32,
                  "endLine": 4361,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                DLP hybrid job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                DLP hybrid job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                DLP hybrid job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4361,
                  "startColumn": 11,
                  "endLine": 4361,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                DLP hybrid job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                DLP hybrid job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                DLP hybrid job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4338,
                  "startColumn": 78,
                  "endLine": 4339,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4299,
                  "startColumn": 50,
                  "endLine": 4299,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.hybrid_inspect_dlp_job]\n\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.hybrid_inspect_dlp_job]\n\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.hybrid_inspect_dlp_job]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4268,
                  "startColumn": 32,
                  "endLine": 4268,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4268,
                  "startColumn": 11,
                  "endLine": 4268,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4234,
                  "startColumn": 78,
                  "endLine": 4235,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4197,
                  "startColumn": 50,
                  "endLine": 4197,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_stored_info_type]\n\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_stored_info_type]\n\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_stored_info_type]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4172,
                  "startColumn": 32,
                  "endLine": 4172,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4172,
                  "startColumn": 11,
                  "endLine": 4172,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4140,
                  "startColumn": 78,
                  "endLine": 4141,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4090,
                  "startColumn": 50,
                  "endLine": 4090,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_stored_info_types]\n\n",
                    "rendered": {
                      "text": "            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_stored_info_types]\n\n",
                      "markdown": "`            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_stored_info_types]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4056,
                  "startColumn": 32,
                  "endLine": 4056,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4056,
                  "startColumn": 11,
                  "endLine": 4056,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 4004,
                  "startColumn": 78,
                  "endLine": 4005,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3963,
                  "startColumn": 50,
                  "endLine": 3963,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_stored_info_type]\n\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_stored_info_type]\n\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_stored_info_type]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3931,
                  "startColumn": 32,
                  "endLine": 3931,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3931,
                  "startColumn": 11,
                  "endLine": 3931,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3896,
                  "startColumn": 78,
                  "endLine": 3897,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3855,
                  "startColumn": 50,
                  "endLine": 3855,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.update_stored_info_type]\n\n",
                    "rendered": {
                      "text": "            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.update_stored_info_type]\n\n",
                      "markdown": "`            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.update_stored_info_type]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3819,
                  "startColumn": 32,
                  "endLine": 3819,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3819,
                  "startColumn": 11,
                  "endLine": 3819,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3768,
                  "startColumn": 78,
                  "endLine": 3769,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3724,
                  "startColumn": 50,
                  "endLine": 3724,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if config is not None:\n                request.config = config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_stored_info_type]\n\n",
                    "rendered": {
                      "text": "            if config is not None:\n                request.config = config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_stored_info_type]\n\n",
                      "markdown": "`            if config is not None:\n                request.config = config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_stored_info_type]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3690,
                  "startColumn": 32,
                  "endLine": 3690,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3690,
                  "startColumn": 11,
                  "endLine": 3690,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3628,
                  "startColumn": 78,
                  "endLine": 3629,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3589,
                  "startColumn": 50,
                  "endLine": 3589,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if not isinstance(request, dlp.CancelDlpJobRequest):\n            request = dlp.CancelDlpJobRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.cancel_dlp_job]\n\n",
                    "rendered": {
                      "text": "        if not isinstance(request, dlp.CancelDlpJobRequest):\n            request = dlp.CancelDlpJobRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.cancel_dlp_job]\n\n",
                      "markdown": "`        if not isinstance(request, dlp.CancelDlpJobRequest):\n            request = dlp.CancelDlpJobRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.cancel_dlp_job]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3577,
                  "startColumn": 32,
                  "endLine": 3577,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                DLP job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                DLP job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                DLP job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3577,
                  "startColumn": 11,
                  "endLine": 3577,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                DLP job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                DLP job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                DLP job.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3554,
                  "startColumn": 78,
                  "endLine": 3555,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3514,
                  "startColumn": 50,
                  "endLine": 3514,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_dlp_job]\n\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_dlp_job]\n\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_dlp_job]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3489,
                  "startColumn": 32,
                  "endLine": 3489,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3489,
                  "startColumn": 11,
                  "endLine": 3489,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3459,
                  "startColumn": 78,
                  "endLine": 3460,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3415,
                  "startColumn": 50,
                  "endLine": 3415,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_dlp_job]\n\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_dlp_job]\n\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_dlp_job]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3384,
                  "startColumn": 32,
                  "endLine": 3384,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3384,
                  "startColumn": 11,
                  "endLine": 3384,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3352,
                  "startColumn": 78,
                  "endLine": 3353,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3301,
                  "startColumn": 50,
                  "endLine": 3301,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_dlp_jobs]\n\n",
                    "rendered": {
                      "text": "            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_dlp_jobs]\n\n",
                      "markdown": "`            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_dlp_jobs]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3267,
                  "startColumn": 32,
                  "endLine": 3267,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3267,
                  "startColumn": 11,
                  "endLine": 3267,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3216,
                  "startColumn": 78,
                  "endLine": 3217,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3174,
                  "startColumn": 50,
                  "endLine": 3174,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if risk_job is not None:\n                request.risk_job = risk_job\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_dlp_job]\n\n",
                    "rendered": {
                      "text": "            if risk_job is not None:\n                request.risk_job = risk_job\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_dlp_job]\n\n",
                      "markdown": "`            if risk_job is not None:\n                request.risk_job = risk_job\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_dlp_job]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3139,
                  "startColumn": 32,
                  "endLine": 3139,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3139,
                  "startColumn": 11,
                  "endLine": 3139,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3071,
                  "startColumn": 78,
                  "endLine": 3072,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3063,
                  "startColumn": 23,
                  "endLine": 3063,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        inspect jobs, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        inspect jobs, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        inspect jobs, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3022,
                  "startColumn": 50,
                  "endLine": 3022,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if not isinstance(request, dlp.ActivateJobTriggerRequest):\n            request = dlp.ActivateJobTriggerRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.activate_job_trigger]\n\n",
                    "rendered": {
                      "text": "        if not isinstance(request, dlp.ActivateJobTriggerRequest):\n            request = dlp.ActivateJobTriggerRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.activate_job_trigger]\n\n",
                      "markdown": "`        if not isinstance(request, dlp.ActivateJobTriggerRequest):\n            request = dlp.ActivateJobTriggerRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.activate_job_trigger]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3004,
                  "startColumn": 32,
                  "endLine": 3004,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                ActivateJobTrigger.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                ActivateJobTrigger.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                ActivateJobTrigger.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 3004,
                  "startColumn": 11,
                  "endLine": 3004,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                ActivateJobTrigger.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                ActivateJobTrigger.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                ActivateJobTrigger.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2978,
                  "startColumn": 78,
                  "endLine": 2979,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2942,
                  "startColumn": 50,
                  "endLine": 2942,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_job_trigger]\n\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_job_trigger]\n\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_job_trigger]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2917,
                  "startColumn": 32,
                  "endLine": 2917,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2917,
                  "startColumn": 11,
                  "endLine": 2917,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2887,
                  "startColumn": 78,
                  "endLine": 2888,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2837,
                  "startColumn": 50,
                  "endLine": 2837,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_job_triggers]\n\n",
                    "rendered": {
                      "text": "            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_job_triggers]\n\n",
                      "markdown": "`            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_job_triggers]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2803,
                  "startColumn": 32,
                  "endLine": 2803,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2803,
                  "startColumn": 11,
                  "endLine": 2803,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2753,
                  "startColumn": 78,
                  "endLine": 2754,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2712,
                  "startColumn": 50,
                  "endLine": 2712,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_job_trigger]\n\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_job_trigger]\n\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_job_trigger]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2679,
                  "startColumn": 32,
                  "endLine": 2679,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2679,
                  "startColumn": 11,
                  "endLine": 2679,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2646,
                  "startColumn": 78,
                  "endLine": 2647,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2603,
                  "startColumn": 50,
                  "endLine": 2603,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.hybrid_inspect_job_trigger\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.hybrid_inspect_job_trigger\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.hybrid_inspect_job_trigger\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2572,
                  "startColumn": 32,
                  "endLine": 2572,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2572,
                  "startColumn": 11,
                  "endLine": 2572,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2538,
                  "startColumn": 78,
                  "endLine": 2539,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2497,
                  "startColumn": 50,
                  "endLine": 2497,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.update_job_trigger]\n\n",
                    "rendered": {
                      "text": "            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.update_job_trigger]\n\n",
                      "markdown": "`            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.update_job_trigger]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2460,
                  "startColumn": 32,
                  "endLine": 2460,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2460,
                  "startColumn": 11,
                  "endLine": 2460,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2415,
                  "startColumn": 78,
                  "endLine": 2416,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2372,
                  "startColumn": 50,
                  "endLine": 2372,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if job_trigger is not None:\n                request.job_trigger = job_trigger\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_job_trigger]\n\n",
                    "rendered": {
                      "text": "            if job_trigger is not None:\n                request.job_trigger = job_trigger\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_job_trigger]\n\n",
                      "markdown": "`            if job_trigger is not None:\n                request.job_trigger = job_trigger\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_job_trigger]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2337,
                  "startColumn": 32,
                  "endLine": 2337,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2337,
                  "startColumn": 11,
                  "endLine": 2337,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2279,
                  "startColumn": 78,
                  "endLine": 2280,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2237,
                  "startColumn": 50,
                  "endLine": 2237,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.delete_deidentify_template\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.delete_deidentify_template\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.delete_deidentify_template\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2212,
                  "startColumn": 32,
                  "endLine": 2212,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2212,
                  "startColumn": 11,
                  "endLine": 2212,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2180,
                  "startColumn": 78,
                  "endLine": 2181,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2128,
                  "startColumn": 50,
                  "endLine": 2128,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.list_deidentify_templates\n",
                    "rendered": {
                      "text": "            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.list_deidentify_templates\n",
                      "markdown": "`            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.list_deidentify_templates\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2094,
                  "startColumn": 32,
                  "endLine": 2094,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2094,
                  "startColumn": 11,
                  "endLine": 2094,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 2038,
                  "startColumn": 78,
                  "endLine": 2039,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1997,
                  "startColumn": 50,
                  "endLine": 1997,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_deidentify_template]\n\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_deidentify_template]\n\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_deidentify_template]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1963,
                  "startColumn": 32,
                  "endLine": 1963,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1963,
                  "startColumn": 11,
                  "endLine": 1963,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1928,
                  "startColumn": 78,
                  "endLine": 1929,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1885,
                  "startColumn": 50,
                  "endLine": 1885,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.update_deidentify_template\n",
                    "rendered": {
                      "text": "            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.update_deidentify_template\n",
                      "markdown": "`            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.update_deidentify_template\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1847,
                  "startColumn": 32,
                  "endLine": 1847,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1847,
                  "startColumn": 11,
                  "endLine": 1847,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1800,
                  "startColumn": 78,
                  "endLine": 1801,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1755,
                  "startColumn": 50,
                  "endLine": 1755,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if deidentify_template is not None:\n                request.deidentify_template = deidentify_template\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.create_deidentify_template\n",
                    "rendered": {
                      "text": "            if deidentify_template is not None:\n                request.deidentify_template = deidentify_template\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.create_deidentify_template\n",
                      "markdown": "`            if deidentify_template is not None:\n                request.deidentify_template = deidentify_template\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.create_deidentify_template\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1719,
                  "startColumn": 32,
                  "endLine": 1719,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1719,
                  "startColumn": 11,
                  "endLine": 1719,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1657,
                  "startColumn": 78,
                  "endLine": 1658,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1617,
                  "startColumn": 50,
                  "endLine": 1617,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_inspect_template]\n\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_inspect_template]\n\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_inspect_template]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1592,
                  "startColumn": 32,
                  "endLine": 1592,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1592,
                  "startColumn": 11,
                  "endLine": 1592,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1560,
                  "startColumn": 78,
                  "endLine": 1561,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1511,
                  "startColumn": 50,
                  "endLine": 1511,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_inspect_templates]\n\n",
                    "rendered": {
                      "text": "            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_inspect_templates]\n\n",
                      "markdown": "`            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_inspect_templates]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1477,
                  "startColumn": 32,
                  "endLine": 1477,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1477,
                  "startColumn": 11,
                  "endLine": 1477,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1421,
                  "startColumn": 78,
                  "endLine": 1422,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1381,
                  "startColumn": 50,
                  "endLine": 1381,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_inspect_template]\n\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_inspect_template]\n\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_inspect_template]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1345,
                  "startColumn": 32,
                  "endLine": 1345,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1345,
                  "startColumn": 11,
                  "endLine": 1345,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1310,
                  "startColumn": 78,
                  "endLine": 1311,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1270,
                  "startColumn": 50,
                  "endLine": 1270,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.update_inspect_template]\n\n",
                    "rendered": {
                      "text": "            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.update_inspect_template]\n\n",
                      "markdown": "`            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.update_inspect_template]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1230,
                  "startColumn": 32,
                  "endLine": 1230,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1230,
                  "startColumn": 11,
                  "endLine": 1230,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1183,
                  "startColumn": 78,
                  "endLine": 1184,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1141,
                  "startColumn": 50,
                  "endLine": 1141,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if inspect_template is not None:\n                request.inspect_template = inspect_template\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_inspect_template]\n\n",
                    "rendered": {
                      "text": "            if inspect_template is not None:\n                request.inspect_template = inspect_template\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_inspect_template]\n\n",
                      "markdown": "`            if inspect_template is not None:\n                request.inspect_template = inspect_template\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_inspect_template]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1103,
                  "startColumn": 32,
                  "endLine": 1103,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1103,
                  "startColumn": 11,
                  "endLine": 1103,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1041,
                  "startColumn": 78,
                  "endLine": 1042,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 1004,
                  "startColumn": 50,
                  "endLine": 1004,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_info_types]\n\n",
                    "rendered": {
                      "text": "            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_info_types]\n\n",
                      "markdown": "`            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_info_types]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 973,
                  "startColumn": 32,
                  "endLine": 973,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 973,
                  "startColumn": 11,
                  "endLine": 973,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 937,
                  "startColumn": 78,
                  "endLine": 938,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 896,
                  "startColumn": 50,
                  "endLine": 896,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if not isinstance(request, dlp.ReidentifyContentRequest):\n            request = dlp.ReidentifyContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.reidentify_content]\n\n",
                    "rendered": {
                      "text": "        if not isinstance(request, dlp.ReidentifyContentRequest):\n            request = dlp.ReidentifyContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.reidentify_content]\n\n",
                      "markdown": "`        if not isinstance(request, dlp.ReidentifyContentRequest):\n            request = dlp.ReidentifyContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.reidentify_content]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 880,
                  "startColumn": 32,
                  "endLine": 880,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                The request object. Request to re-identify an item.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                The request object. Request to re-identify an item.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                The request object. Request to re-identify an item.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 880,
                  "startColumn": 11,
                  "endLine": 880,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                The request object. Request to re-identify an item.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                The request object. Request to re-identify an item.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                The request object. Request to re-identify an item.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 855,
                  "startColumn": 78,
                  "endLine": 856,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 816,
                  "startColumn": 50,
                  "endLine": 816,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if not isinstance(request, dlp.DeidentifyContentRequest):\n            request = dlp.DeidentifyContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.deidentify_content]\n\n",
                    "rendered": {
                      "text": "        if not isinstance(request, dlp.DeidentifyContentRequest):\n            request = dlp.DeidentifyContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.deidentify_content]\n\n",
                      "markdown": "`        if not isinstance(request, dlp.DeidentifyContentRequest):\n            request = dlp.DeidentifyContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.deidentify_content]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 798,
                  "startColumn": 32,
                  "endLine": 798,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                The request object. Request to de-identify a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                The request object. Request to de-identify a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                The request object. Request to de-identify a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 798,
                  "startColumn": 11,
                  "endLine": 798,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                The request object. Request to de-identify a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                The request object. Request to de-identify a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                The request object. Request to de-identify a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 774,
                  "startColumn": 78,
                  "endLine": 775,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 766,
                  "startColumn": 23,
                  "endLine": 766,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 728,
                  "startColumn": 50,
                  "endLine": 728,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if not isinstance(request, dlp.RedactImageRequest):\n            request = dlp.RedactImageRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.redact_image]\n\n",
                    "rendered": {
                      "text": "        if not isinstance(request, dlp.RedactImageRequest):\n            request = dlp.RedactImageRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.redact_image]\n\n",
                      "markdown": "`        if not isinstance(request, dlp.RedactImageRequest):\n            request = dlp.RedactImageRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.redact_image]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 712,
                  "startColumn": 32,
                  "endLine": 712,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                by covering it with a colored rectangle.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                by covering it with a colored rectangle.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                by covering it with a colored rectangle.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 712,
                  "startColumn": 11,
                  "endLine": 712,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                by covering it with a colored rectangle.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                by covering it with a colored rectangle.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                by covering it with a colored rectangle.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 686,
                  "startColumn": 78,
                  "endLine": 687,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 678,
                  "startColumn": 23,
                  "endLine": 678,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        .. code-block:: python\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 640,
                  "startColumn": 50,
                  "endLine": 640,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if not isinstance(request, dlp.InspectContentRequest):\n            request = dlp.InspectContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.inspect_content]\n\n",
                    "rendered": {
                      "text": "        if not isinstance(request, dlp.InspectContentRequest):\n            request = dlp.InspectContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.inspect_content]\n\n",
                      "markdown": "`        if not isinstance(request, dlp.InspectContentRequest):\n            request = dlp.InspectContentRequest(request)\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.inspect_content]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 624,
                  "startColumn": 32,
                  "endLine": 624,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                sensitive info in a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                sensitive info in a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                sensitive info in a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 624,
                  "startColumn": 11,
                  "endLine": 624,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                sensitive info in a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                sensitive info in a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                sensitive info in a ContentItem.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 599,
                  "startColumn": 78,
                  "endLine": 600,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import dlp_v2\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 587,
                  "startColumn": 23,
                  "endLine": 587,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        For how to guides, see\n        https://cloud.google.com/dlp/docs/inspecting-images and\n",
                    "rendered": {
                      "text": "        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        For how to guides, see\n        https://cloud.google.com/dlp/docs/inspecting-images and\n",
                      "markdown": "`        When no InfoTypes or CustomInfoTypes are specified in\n        this request, the system will automatically choose what\n        detectors to run. By default this may be all types, but\n        may change over time as detectors are updated.\n\n        For how to guides, see\n        https://cloud.google.com/dlp/docs/inspecting-images and\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 480,
                  "startColumn": 31,
                  "endLine": 480,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        client_options: Optional[Union[client_options_lib.ClientOptions, dict]] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the dlp service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                    "rendered": {
                      "text": "        client_options: Optional[Union[client_options_lib.ClientOptions, dict]] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the dlp service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                      "markdown": "`        client_options: Optional[Union[client_options_lib.ClientOptions, dict]] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the dlp service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 43,
                  "endLine": 169,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                    "rendered": {
                      "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                      "markdown": "`            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 28,
                  "endLine": 152,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                    "rendered": {
                      "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                      "markdown": "`            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 36,
                  "endLine": 107,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n    \"\"\"\n\n",
                      "markdown": "`    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n    To learn more about concepts and find how-to guides see\n    https://cloud.google.com/dlp/docs/.\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 7,
                  "endLine": 103,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n",
                    "rendered": {
                      "text": "    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n",
                      "markdown": "`    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n    images.\n    The service also includes methods for sensitive data redaction\n    and scheduling of data scans on Google Cloud Platform based data\n    sets.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/services/dlp_service/client.py"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 52,
                  "endLine": 98,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n\nclass DlpServiceClient(metaclass=DlpServiceClientMeta):\n    \"\"\"The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n",
                    "rendered": {
                      "text": "\n\nclass DlpServiceClient(metaclass=DlpServiceClientMeta):\n    \"\"\"The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n",
                      "markdown": "`\n\nclass DlpServiceClient(metaclass=DlpServiceClientMeta):\n    \"\"\"The Cloud Data Loss Prevention (DLP) API is a service that\n    allows clients to detect the presence of Personally Identifiable\n    Information (PII) and other privacy-sensitive data in\n    user-supplied, unstructured data streams, like text blocks or\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp_v2/gapic_version.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-dlp-3.12.3-r2.apk/py3-google-cloud-dlp-3.12.3-r2/usr/lib/python3.12/site-packages/google/cloud/dlp/gapic_version.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}