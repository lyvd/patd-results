{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/config/model_server_config_pb2.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1462,
                  "endLine": 19,
                  "endColumn": 1514,
                  "snippet": {
                    "text": "01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.AnyH\\x00\\x42\\x08\\n\\x06\\x63onfig*N\\n\\tModelType\\x12\\x1e\\n\\x16MODEL_TYPE_UNSPECIFIED\\x10\\x00\\x1a\\x02\\x08\\x01\\x12\\x12\\n\\nTENSORFLOW\\x10\\x01\\x1a\\x02\\x08\\x01\\x12\\r\\n\\x05OTHER\\x10\\x02\\x1a\\x02\\x08\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.model_server_config_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'",
                    "rendered": {
                      "text": "01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.AnyH\\x00\\x42\\x08\\n\\x06\\x63onfig*N\\n\\tModelType\\x12\\x1e\\n\\x16MODEL_TYPE_UNSPECIFIED\\x10\\x00\\x1a\\x02\\x08\\x01\\x12\\x12\\n\\nTENSORFLOW\\x10\\x01\\x1a\\x02\\x08\\x01\\x12\\r\\n\\x05OTHER\\x10\\x02\\x1a\\x02\\x08\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.model_server_config_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'",
                      "markdown": "`01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.AnyH\\x00\\x42\\x08\\n\\x06\\x63onfig*N\\n\\tModelType\\x12\\x1e\\n\\x16MODEL_TYPE_UNSPECIFIED\\x10\\x00\\x1a\\x02\\x08\\x01\\x12\\x12\\n\\nTENSORFLOW\\x10\\x01\\x1a\\x02\\x08\\x01\\x12\\r\\n\\x05OTHER\\x10\\x02\\x1a\\x02\\x08\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.model_server_config_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/config/model_server_config_pb2.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1421,
                  "endLine": 19,
                  "endColumn": 1449,
                  "snippet": {
                    "text": "ig\\x12@\\n\\x11model_config_list\\x18\\x01 \\x01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.AnyH\\x00\\x42\\x08\\n\\x06\\x63onfig*N\\n\\tModelType\\x12\\x1e\\n\\x16MODEL_TYPE_UNSPECIFIED\\x10\\x00\\x1a\\x02\\x08\\x01\\x12\\x12\\n\\nTENSORFLOW\\x10\\x01\\x1a\\x02\\x08\\x01\\x12\\r\\n\\x05OTHER\\x10\\x02\\x1a\\x02\\x08\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.model_server_config_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n ",
                    "rendered": {
                      "text": "ig\\x12@\\n\\x11model_config_list\\x18\\x01 \\x01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.AnyH\\x00\\x42\\x08\\n\\x06\\x63onfig*N\\n\\tModelType\\x12\\x1e\\n\\x16MODEL_TYPE_UNSPECIFIED\\x10\\x00\\x1a\\x02\\x08\\x01\\x12\\x12\\n\\nTENSORFLOW\\x10\\x01\\x1a\\x02\\x08\\x01\\x12\\r\\n\\x05OTHER\\x10\\x02\\x1a\\x02\\x08\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.model_server_config_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n ",
                      "markdown": "`ig\\x12@\\n\\x11model_config_list\\x18\\x01 \\x01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.AnyH\\x00\\x42\\x08\\n\\x06\\x63onfig*N\\n\\tModelType\\x12\\x1e\\n\\x16MODEL_TYPE_UNSPECIFIED\\x10\\x00\\x1a\\x02\\x08\\x01\\x12\\x12\\n\\nTENSORFLOW\\x10\\x01\\x1a\\x02\\x08\\x01\\x12\\r\\n\\x05OTHER\\x10\\x02\\x1a\\x02\\x08\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.model_server_config_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n `"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/config/model_server_config_pb2.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1375,
                  "endLine": 19,
                  "endColumn": 1407,
                  "snippet": {
                    "text": "ing.ModelConfig\\\"\\x94\\x01\\n\\x11ModelServerConfig\\x12@\\n\\x11model_config_list\\x18\\x01 \\x01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.AnyH\\x00\\x42\\x08\\n\\x06\\x63onfig*N\\n\\tModelType\\x12\\x1e\\n\\x16MODEL_TYPE_UNSPECIFIED\\x10\\x00\\x1a\\x02\\x08\\x01\\x12\\x12\\n\\nTENSORFLOW\\x10\\x01\\x1a\\x02\\x08\\x01\\x12\\r\\n\\x05OTHER\\x10\\x02\\x1a\\x02\\x08\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.model_server_config_pb2', globals())\nif _",
                    "rendered": {
                      "text": "ing.ModelConfig\\\"\\x94\\x01\\n\\x11ModelServerConfig\\x12@\\n\\x11model_config_list\\x18\\x01 \\x01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.AnyH\\x00\\x42\\x08\\n\\x06\\x63onfig*N\\n\\tModelType\\x12\\x1e\\n\\x16MODEL_TYPE_UNSPECIFIED\\x10\\x00\\x1a\\x02\\x08\\x01\\x12\\x12\\n\\nTENSORFLOW\\x10\\x01\\x1a\\x02\\x08\\x01\\x12\\r\\n\\x05OTHER\\x10\\x02\\x1a\\x02\\x08\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.model_server_config_pb2', globals())\nif _",
                      "markdown": "`ing.ModelConfig\\\"\\x94\\x01\\n\\x11ModelServerConfig\\x12@\\n\\x11model_config_list\\x18\\x01 \\x01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.AnyH\\x00\\x42\\x08\\n\\x06\\x63onfig*N\\n\\tModelType\\x12\\x1e\\n\\x16MODEL_TYPE_UNSPECIFIED\\x10\\x00\\x1a\\x02\\x08\\x01\\x12\\x12\\n\\nTENSORFLOW\\x10\\x01\\x1a\\x02\\x08\\x01\\x12\\r\\n\\x05OTHER\\x10\\x02\\x1a\\x02\\x08\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.model_server_config_pb2', globals())\nif _`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/config/model_server_config_pb2.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 952,
                  "endLine": 19,
                  "endColumn": 972,
                  "snippet": {
                    "text": "y\\x12J\\n\\x0eversion_labels\\x18\\x08 \\x03(\\x0b\\x32\\x32.tensorflow.serving.ModelConfig.VersionLabelsEntry\\x12\\x39\\n\\x0elogging_config\\x18\\x06 \\x01(\\x0b\\x32!.tensorflow.serving.LoggingConfig\\x1a\\x34\\n\\x12VersionLabelsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\x03:\\x02\\x38\\x01J\\x04\\x08\\x05\\x10\\x06J\\x04\\x08\\t\\x10\\n\\\"B\\n\\x0fModelConfigList\\x12/\\n\\x06\\x63onfig\\x18\\x01 \\x03(\\x0b\\x32\\x1f.tensorflow.serving.ModelConfig\\\"\\x94\\x01\\n\\x11ModelServerConfig\\x12@\\n\\x11model_config_list\\x18\\x01 \\x01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32",
                    "rendered": {
                      "text": "y\\x12J\\n\\x0eversion_labels\\x18\\x08 \\x03(\\x0b\\x32\\x32.tensorflow.serving.ModelConfig.VersionLabelsEntry\\x12\\x39\\n\\x0elogging_config\\x18\\x06 \\x01(\\x0b\\x32!.tensorflow.serving.LoggingConfig\\x1a\\x34\\n\\x12VersionLabelsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\x03:\\x02\\x38\\x01J\\x04\\x08\\x05\\x10\\x06J\\x04\\x08\\t\\x10\\n\\\"B\\n\\x0fModelConfigList\\x12/\\n\\x06\\x63onfig\\x18\\x01 \\x03(\\x0b\\x32\\x1f.tensorflow.serving.ModelConfig\\\"\\x94\\x01\\n\\x11ModelServerConfig\\x12@\\n\\x11model_config_list\\x18\\x01 \\x01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32",
                      "markdown": "`y\\x12J\\n\\x0eversion_labels\\x18\\x08 \\x03(\\x0b\\x32\\x32.tensorflow.serving.ModelConfig.VersionLabelsEntry\\x12\\x39\\n\\x0elogging_config\\x18\\x06 \\x01(\\x0b\\x32!.tensorflow.serving.LoggingConfig\\x1a\\x34\\n\\x12VersionLabelsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\x03:\\x02\\x38\\x01J\\x04\\x08\\x05\\x10\\x06J\\x04\\x08\\t\\x10\\n\\\"B\\n\\x0fModelConfigList\\x12/\\n\\x06\\x63onfig\\x18\\x01 \\x03(\\x0b\\x32\\x1f.tensorflow.serving.ModelConfig\\\"\\x94\\x01\\n\\x11ModelServerConfig\\x12@\\n\\x11model_config_list\\x18\\x01 \\x01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/config/model_server_config_pb2.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 468,
                  "endLine": 19,
                  "endColumn": 488,
                  "snippet": {
                    "text": "proto\\x1a?tensorflow_serving/config/file_system_storage_path_source.proto\\x1a.tensorflow_serving/config/logging_config.proto\\\"\\xb1\\x03\\n\\x0bModelConfig\\x12\\x0c\\n\\x04name\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\tbase_path\\x18\\x02 \\x01(\\t\\x12\\x35\\n\\nmodel_type\\x18\\x03 \\x01(\\x0e\\x32\\x1d.tensorflow.serving.ModelTypeB\\x02\\x18\\x01\\x12\\x16\\n\\x0emodel_platform\\x18\\x04 \\x01(\\t\\x12i\\n\\x14model_version_policy\\x18\\x07 \\x01(\\x0b\\x32K.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy\\x12J\\n\\x0eversion_labels\\x18\\x08 \\x03(\\x0b\\x32\\x32.tensorflow.serving.ModelConfig.VersionLabelsEntry\\x12\\x39\\n\\x0elogging_config\\x18\\x",
                    "rendered": {
                      "text": "proto\\x1a?tensorflow_serving/config/file_system_storage_path_source.proto\\x1a.tensorflow_serving/config/logging_config.proto\\\"\\xb1\\x03\\n\\x0bModelConfig\\x12\\x0c\\n\\x04name\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\tbase_path\\x18\\x02 \\x01(\\t\\x12\\x35\\n\\nmodel_type\\x18\\x03 \\x01(\\x0e\\x32\\x1d.tensorflow.serving.ModelTypeB\\x02\\x18\\x01\\x12\\x16\\n\\x0emodel_platform\\x18\\x04 \\x01(\\t\\x12i\\n\\x14model_version_policy\\x18\\x07 \\x01(\\x0b\\x32K.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy\\x12J\\n\\x0eversion_labels\\x18\\x08 \\x03(\\x0b\\x32\\x32.tensorflow.serving.ModelConfig.VersionLabelsEntry\\x12\\x39\\n\\x0elogging_config\\x18\\x",
                      "markdown": "`proto\\x1a?tensorflow_serving/config/file_system_storage_path_source.proto\\x1a.tensorflow_serving/config/logging_config.proto\\\"\\xb1\\x03\\n\\x0bModelConfig\\x12\\x0c\\n\\x04name\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\tbase_path\\x18\\x02 \\x01(\\t\\x12\\x35\\n\\nmodel_type\\x18\\x03 \\x01(\\x0e\\x32\\x1d.tensorflow.serving.ModelTypeB\\x02\\x18\\x01\\x12\\x16\\n\\x0emodel_platform\\x18\\x04 \\x01(\\t\\x12i\\n\\x14model_version_policy\\x18\\x07 \\x01(\\x0b\\x32K.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy\\x12J\\n\\x0eversion_labels\\x18\\x08 \\x03(\\x0b\\x32\\x32.tensorflow.serving.ModelConfig.VersionLabelsEntry\\x12\\x39\\n\\x0elogging_config\\x18\\x`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/config/model_server_config_pb2.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1462,
                  "endLine": 19,
                  "endColumn": 1514,
                  "snippet": {
                    "text": "01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.AnyH\\x00\\x42\\x08\\n\\x06\\x63onfig*N\\n\\tModelType\\x12\\x1e\\n\\x16MODEL_TYPE_UNSPECIFIED\\x10\\x00\\x1a\\x02\\x08\\x01\\x12\\x12\\n\\nTENSORFLOW\\x10\\x01\\x1a\\x02\\x08\\x01\\x12\\r\\n\\x05OTHER\\x10\\x02\\x1a\\x02\\x08\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.model_server_config_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'",
                    "rendered": {
                      "text": "01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.AnyH\\x00\\x42\\x08\\n\\x06\\x63onfig*N\\n\\tModelType\\x12\\x1e\\n\\x16MODEL_TYPE_UNSPECIFIED\\x10\\x00\\x1a\\x02\\x08\\x01\\x12\\x12\\n\\nTENSORFLOW\\x10\\x01\\x1a\\x02\\x08\\x01\\x12\\r\\n\\x05OTHER\\x10\\x02\\x1a\\x02\\x08\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.model_server_config_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'",
                      "markdown": "`01(\\x0b\\x32#.tensorflow.serving.ModelConfigListH\\x00\\x12\\x33\\n\\x13\\x63ustom_model_config\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.AnyH\\x00\\x42\\x08\\n\\x06\\x63onfig*N\\n\\tModelType\\x12\\x1e\\n\\x16MODEL_TYPE_UNSPECIFIED\\x10\\x00\\x1a\\x02\\x08\\x01\\x12\\x12\\n\\nTENSORFLOW\\x10\\x01\\x1a\\x02\\x08\\x01\\x12\\r\\n\\x05OTHER\\x10\\x02\\x1a\\x02\\x08\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.model_server_config_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/get_model_metadata_pb2.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1020,
                  "endLine": 19,
                  "endColumn": 1060,
                  "snippet": {
                    "text": "se\\x12\\x31\\n\\nmodel_spec\\x18\\x01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12L\\n\\x08metadata\\x18\\x02 \\x03(\\x0b\\x32:.tensorflow.serving.GetModelMetadataResponse.MetadataEntry\\x1a\\x45\\n\\rMetadataEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12#\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.Any:\\x02\\x38\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.get_model_metadata_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\37",
                    "rendered": {
                      "text": "se\\x12\\x31\\n\\nmodel_spec\\x18\\x01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12L\\n\\x08metadata\\x18\\x02 \\x03(\\x0b\\x32:.tensorflow.serving.GetModelMetadataResponse.MetadataEntry\\x1a\\x45\\n\\rMetadataEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12#\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.Any:\\x02\\x38\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.get_model_metadata_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\37",
                      "markdown": "`se\\x12\\x31\\n\\nmodel_spec\\x18\\x01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12L\\n\\x08metadata\\x18\\x02 \\x03(\\x0b\\x32:.tensorflow.serving.GetModelMetadataResponse.MetadataEntry\\x1a\\x45\\n\\rMetadataEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12#\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.Any:\\x02\\x38\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.get_model_metadata_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\37`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/get_model_metadata_pb2.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1020,
                  "endLine": 19,
                  "endColumn": 1060,
                  "snippet": {
                    "text": "se\\x12\\x31\\n\\nmodel_spec\\x18\\x01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12L\\n\\x08metadata\\x18\\x02 \\x03(\\x0b\\x32:.tensorflow.serving.GetModelMetadataResponse.MetadataEntry\\x1a\\x45\\n\\rMetadataEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12#\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.Any:\\x02\\x38\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.get_model_metadata_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\37",
                    "rendered": {
                      "text": "se\\x12\\x31\\n\\nmodel_spec\\x18\\x01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12L\\n\\x08metadata\\x18\\x02 \\x03(\\x0b\\x32:.tensorflow.serving.GetModelMetadataResponse.MetadataEntry\\x1a\\x45\\n\\rMetadataEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12#\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.Any:\\x02\\x38\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.get_model_metadata_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\37",
                      "markdown": "`se\\x12\\x31\\n\\nmodel_spec\\x18\\x01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12L\\n\\x08metadata\\x18\\x02 \\x03(\\x0b\\x32:.tensorflow.serving.GetModelMetadataResponse.MetadataEntry\\x1a\\x45\\n\\rMetadataEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12#\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x14.google.protobuf.Any:\\x02\\x38\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.get_model_metadata_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\37`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/config/logging_config_pb2.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 662,
                  "endLine": 17,
                  "endColumn": 686,
                  "snippet": {
                    "text": "\\x12\\x17\\n\\x13\\x41TTR_REQUEST_ORIGIN\\x10\\x01\\x12\\x1c\\n\\x18\\x41TTR_REQUEST_CRITICALITY\\x10\\x02\\\"\\x92\\x01\\n\\rLoggingConfig\\x12\\x44\\n\\x14log_collector_config\\x18\\x01 \\x01(\\x0b\\x32&.tensorflow.serving.LogCollectorConfig\\x12;\\n\\x0fsampling_config\\x18\\x02 \\x01(\\x0b\\x32\\\".tensorflow.serving.SamplingConfigB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.logging_config_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\",
                    "rendered": {
                      "text": "\\x12\\x17\\n\\x13\\x41TTR_REQUEST_ORIGIN\\x10\\x01\\x12\\x1c\\n\\x18\\x41TTR_REQUEST_CRITICALITY\\x10\\x02\\\"\\x92\\x01\\n\\rLoggingConfig\\x12\\x44\\n\\x14log_collector_config\\x18\\x01 \\x01(\\x0b\\x32&.tensorflow.serving.LogCollectorConfig\\x12;\\n\\x0fsampling_config\\x18\\x02 \\x01(\\x0b\\x32\\\".tensorflow.serving.SamplingConfigB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.logging_config_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\",
                      "markdown": "`\\x12\\x17\\n\\x13\\x41TTR_REQUEST_ORIGIN\\x10\\x01\\x12\\x1c\\n\\x18\\x41TTR_REQUEST_CRITICALITY\\x10\\x02\\\"\\x92\\x01\\n\\rLoggingConfig\\x12\\x44\\n\\x14log_collector_config\\x18\\x01 \\x01(\\x0b\\x32&.tensorflow.serving.LogCollectorConfig\\x12;\\n\\x0fsampling_config\\x18\\x02 \\x01(\\x0b\\x32\\\".tensorflow.serving.SamplingConfigB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.logging_config_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/prediction_log_pb2.py"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 2221,
                  "endLine": 22,
                  "endColumn": 2245,
                  "snippet": {
                    "text": "46\\n\\x14predict_streamed_log\\x18\\x07 \\x01(\\x0b\\x32&.tensorflow.serving.PredictStreamedLogH\\x00\\x12\\x44\\n\\x13multi_inference_log\\x18\\x04 \\x01(\\x0b\\x32%.tensorflow.serving.MultiInferenceLogH\\x00\\x12<\\n\\x0fsession_run_log\\x18\\x05 \\x01(\\x0b\\x32!.tensorflow.serving.SessionRunLogH\\x00\\x42\\n\\n\\x08log_typeB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.prediction_log_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\00",
                    "rendered": {
                      "text": "46\\n\\x14predict_streamed_log\\x18\\x07 \\x01(\\x0b\\x32&.tensorflow.serving.PredictStreamedLogH\\x00\\x12\\x44\\n\\x13multi_inference_log\\x18\\x04 \\x01(\\x0b\\x32%.tensorflow.serving.MultiInferenceLogH\\x00\\x12<\\n\\x0fsession_run_log\\x18\\x05 \\x01(\\x0b\\x32!.tensorflow.serving.SessionRunLogH\\x00\\x42\\n\\n\\x08log_typeB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.prediction_log_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\00",
                      "markdown": "`46\\n\\x14predict_streamed_log\\x18\\x07 \\x01(\\x0b\\x32&.tensorflow.serving.PredictStreamedLogH\\x00\\x12\\x44\\n\\x13multi_inference_log\\x18\\x04 \\x01(\\x0b\\x32%.tensorflow.serving.MultiInferenceLogH\\x00\\x12<\\n\\x0fsession_run_log\\x18\\x05 \\x01(\\x0b\\x32!.tensorflow.serving.SessionRunLogH\\x00\\x42\\n\\n\\x08log_typeB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.prediction_log_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\00`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/model_pb2.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 411,
                  "endLine": 17,
                  "endColumn": 435,
                  "snippet": {
                    "text": "rflow.serving\\x1a\\x1egoogle/protobuf/wrappers.proto\\\"\\x8c\\x01\\n\\tModelSpec\\x12\\x0c\\n\\x04name\\x18\\x01 \\x01(\\t\\x12.\\n\\x07version\\x18\\x02 \\x01(\\x0b\\x32\\x1b.google.protobuf.Int64ValueH\\x00\\x12\\x17\\n\\rversion_label\\x18\\x04 \\x01(\\tH\\x00\\x12\\x16\\n\\x0esignature_name\\x18\\x03 \\x01(\\tB\\x10\\n\\x0eversion_choiceB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.model_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n  ",
                    "rendered": {
                      "text": "rflow.serving\\x1a\\x1egoogle/protobuf/wrappers.proto\\\"\\x8c\\x01\\n\\tModelSpec\\x12\\x0c\\n\\x04name\\x18\\x01 \\x01(\\t\\x12.\\n\\x07version\\x18\\x02 \\x01(\\x0b\\x32\\x1b.google.protobuf.Int64ValueH\\x00\\x12\\x17\\n\\rversion_label\\x18\\x04 \\x01(\\tH\\x00\\x12\\x16\\n\\x0esignature_name\\x18\\x03 \\x01(\\tB\\x10\\n\\x0eversion_choiceB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.model_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n  ",
                      "markdown": "`rflow.serving\\x1a\\x1egoogle/protobuf/wrappers.proto\\\"\\x8c\\x01\\n\\tModelSpec\\x12\\x0c\\n\\x04name\\x18\\x01 \\x01(\\t\\x12.\\n\\x07version\\x18\\x02 \\x01(\\x0b\\x32\\x1b.google.protobuf.Int64ValueH\\x00\\x12\\x17\\n\\rversion_label\\x18\\x04 \\x01(\\tH\\x00\\x12\\x16\\n\\x0esignature_name\\x18\\x03 \\x01(\\tB\\x10\\n\\x0eversion_choiceB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.model_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n  `"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/regression_pb2.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 724,
                  "endLine": 18,
                  "endColumn": 748,
                  "snippet": {
                    "text": "01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12(\\n\\x05input\\x18\\x02 \\x01(\\x0b\\x32\\x19.tensorflow.serving.Input\\\"}\\n\\x12RegressionResponse\\x12\\x31\\n\\nmodel_spec\\x18\\x02 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12\\x34\\n\\x06result\\x18\\x01 \\x01(\\x0b\\x32$.tensorflow.serving.RegressionResultB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.regression_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\00",
                    "rendered": {
                      "text": "01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12(\\n\\x05input\\x18\\x02 \\x01(\\x0b\\x32\\x19.tensorflow.serving.Input\\\"}\\n\\x12RegressionResponse\\x12\\x31\\n\\nmodel_spec\\x18\\x02 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12\\x34\\n\\x06result\\x18\\x01 \\x01(\\x0b\\x32$.tensorflow.serving.RegressionResultB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.regression_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\00",
                      "markdown": "`01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12(\\n\\x05input\\x18\\x02 \\x01(\\x0b\\x32\\x19.tensorflow.serving.Input\\\"}\\n\\x12RegressionResponse\\x12\\x31\\n\\nmodel_spec\\x18\\x02 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12\\x34\\n\\x06result\\x18\\x01 \\x01(\\x0b\\x32$.tensorflow.serving.RegressionResultB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.regression_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\00`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/prediction_service_pb2_grpc.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/get_model_status_pb2.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 876,
                  "endLine": 18,
                  "endColumn": 900,
                  "snippet": {
                    "text": "n\\x07UNKNOWN\\x10\\x00\\x12\\t\\n\\x05START\\x10\\n\\x12\\x0b\\n\\x07LOADING\\x10\\x14\\x12\\r\\n\\tAVAILABLE\\x10\\x1e\\x12\\r\\n\\tUNLOADING\\x10(\\x12\\x07\\n\\x03\\x45ND\\x10\\x32\\\"t\\n\\x16GetModelStatusResponse\\x12Z\\n\\x14model_version_status\\x18\\x01 \\x03(\\x0b\\x32&.tensorflow.serving.ModelVersionStatusR\\x14model_version_statusB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.get_model_status_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\",
                    "rendered": {
                      "text": "n\\x07UNKNOWN\\x10\\x00\\x12\\t\\n\\x05START\\x10\\n\\x12\\x0b\\n\\x07LOADING\\x10\\x14\\x12\\r\\n\\tAVAILABLE\\x10\\x1e\\x12\\r\\n\\tUNLOADING\\x10(\\x12\\x07\\n\\x03\\x45ND\\x10\\x32\\\"t\\n\\x16GetModelStatusResponse\\x12Z\\n\\x14model_version_status\\x18\\x01 \\x03(\\x0b\\x32&.tensorflow.serving.ModelVersionStatusR\\x14model_version_statusB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.get_model_status_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\",
                      "markdown": "`n\\x07UNKNOWN\\x10\\x00\\x12\\t\\n\\x05START\\x10\\n\\x12\\x0b\\n\\x07LOADING\\x10\\x14\\x12\\r\\n\\tAVAILABLE\\x10\\x1e\\x12\\r\\n\\tUNLOADING\\x10(\\x12\\x07\\n\\x03\\x45ND\\x10\\x32\\\"t\\n\\x16GetModelStatusResponse\\x12Z\\n\\x14model_version_status\\x18\\x01 \\x03(\\x0b\\x32&.tensorflow.serving.ModelVersionStatusR\\x14model_version_statusB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.get_model_status_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/model_service_pb2_grpc.py"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 47,
                  "endLine": 54,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n\nclass ModelServiceServicer(object):\n  \"\"\"ModelService provides methods to query and update the state of the server,\n  e.g. which models/versions are being served.\n  \"\"\"\n\n",
                    "rendered": {
                      "text": "\n\nclass ModelServiceServicer(object):\n  \"\"\"ModelService provides methods to query and update the state of the server,\n  e.g. which models/versions are being served.\n  \"\"\"\n\n",
                      "markdown": "`\n\nclass ModelServiceServicer(object):\n  \"\"\"ModelService provides methods to query and update the state of the server,\n  e.g. which models/versions are being served.\n  \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/model_service_pb2_grpc.py"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 47,
                  "endLine": 27,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n\nclass ModelServiceStub(object):\n  \"\"\"ModelService provides methods to query and update the state of the server,\n  e.g. which models/versions are being served.\n  \"\"\"\n\n",
                    "rendered": {
                      "text": "\n\nclass ModelServiceStub(object):\n  \"\"\"ModelService provides methods to query and update the state of the server,\n  e.g. which models/versions are being served.\n  \"\"\"\n\n",
                      "markdown": "`\n\nclass ModelServiceStub(object):\n  \"\"\"ModelService provides methods to query and update the state of the server,\n  e.g. which models/versions are being served.\n  \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/model_service_pb2_grpc.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/model_service_pb2.py"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 455,
                  "endLine": 40,
                  "endColumn": 479,
                  "snippet": {
                    "text": "/apis/model_management.proto2\\xe7\\x01\\n\\x0cModelService\\x12g\\n\\x0eGetModelStatus\\x12).tensorflow.serving.GetModelStatusRequest\\x1a*.tensorflow.serving.GetModelStatusResponse\\x12n\\n\\x19HandleReloadConfigRequest\\x12\\'.tensorflow.serving.ReloadConfigRequest\\x1a(.tensorflow.serving.ReloadConfigResponseB\\x03\\xf8\\x01\\x01\\x62\\x06proto3'\n    ),\n    dependencies=[\n        tensorflow__serving_dot_apis_dot_get__model__status__pb2.DESCRIPTOR,\n        tensorflow__serving_dot_apis_dot_model__management__pb2.DESCRIPTOR,\n    ])\n\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\n\n\nDESCRIPTOR.has_options = True\nDESCRIPTOR._options = _descrip",
                    "rendered": {
                      "text": "/apis/model_management.proto2\\xe7\\x01\\n\\x0cModelService\\x12g\\n\\x0eGetModelStatus\\x12).tensorflow.serving.GetModelStatusRequest\\x1a*.tensorflow.serving.GetModelStatusResponse\\x12n\\n\\x19HandleReloadConfigRequest\\x12\\'.tensorflow.serving.ReloadConfigRequest\\x1a(.tensorflow.serving.ReloadConfigResponseB\\x03\\xf8\\x01\\x01\\x62\\x06proto3'\n    ),\n    dependencies=[\n        tensorflow__serving_dot_apis_dot_get__model__status__pb2.DESCRIPTOR,\n        tensorflow__serving_dot_apis_dot_model__management__pb2.DESCRIPTOR,\n    ])\n\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\n\n\nDESCRIPTOR.has_options = True\nDESCRIPTOR._options = _descrip",
                      "markdown": "`/apis/model_management.proto2\\xe7\\x01\\n\\x0cModelService\\x12g\\n\\x0eGetModelStatus\\x12).tensorflow.serving.GetModelStatusRequest\\x1a*.tensorflow.serving.GetModelStatusResponse\\x12n\\n\\x19HandleReloadConfigRequest\\x12\\'.tensorflow.serving.ReloadConfigRequest\\x1a(.tensorflow.serving.ReloadConfigResponseB\\x03\\xf8\\x01\\x01\\x62\\x06proto3'\n    ),\n    dependencies=[\n        tensorflow__serving_dot_apis_dot_get__model__status__pb2.DESCRIPTOR,\n        tensorflow__serving_dot_apis_dot_model__management__pb2.DESCRIPTOR,\n    ])\n\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\n\n\nDESCRIPTOR.has_options = True\nDESCRIPTOR._options = _descrip`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/model_service_pb2.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/classification_pb2.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 895,
                  "endLine": 18,
                  "endColumn": 919,
                  "snippet": {
                    "text": "1d.tensorflow.serving.ModelSpec\\x12(\\n\\x05input\\x18\\x02 \\x01(\\x0b\\x32\\x19.tensorflow.serving.Input\\\"\\x85\\x01\\n\\x16\\x43lassificationResponse\\x12\\x31\\n\\nmodel_spec\\x18\\x02 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12\\x38\\n\\x06result\\x18\\x01 \\x01(\\x0b\\x32(.tensorflow.serving.ClassificationResultB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.classification_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\00",
                    "rendered": {
                      "text": "1d.tensorflow.serving.ModelSpec\\x12(\\n\\x05input\\x18\\x02 \\x01(\\x0b\\x32\\x19.tensorflow.serving.Input\\\"\\x85\\x01\\n\\x16\\x43lassificationResponse\\x12\\x31\\n\\nmodel_spec\\x18\\x02 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12\\x38\\n\\x06result\\x18\\x01 \\x01(\\x0b\\x32(.tensorflow.serving.ClassificationResultB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.classification_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\00",
                      "markdown": "`1d.tensorflow.serving.ModelSpec\\x12(\\n\\x05input\\x18\\x02 \\x01(\\x0b\\x32\\x19.tensorflow.serving.Input\\\"\\x85\\x01\\n\\x16\\x43lassificationResponse\\x12\\x31\\n\\nmodel_spec\\x18\\x02 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12\\x38\\n\\x06result\\x18\\x01 \\x01(\\x0b\\x32(.tensorflow.serving.ClassificationResultB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.classification_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\00`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/prediction_service_pb2.py"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 928,
                  "endLine": 47,
                  "endColumn": 952,
                  "snippet": {
                    "text": "ng.PredictRequest\\x1a#.tensorflow.serving.PredictResponse\\x12g\\n\\x0eMultiInference\\x12).tensorflow.serving.MultiInferenceRequest\\x1a*.tensorflow.serving.MultiInferenceResponse\\x12m\\n\\x10GetModelMetadata\\x12+.tensorflow.serving.GetModelMetadataRequest\\x1a,.tensorflow.serving.GetModelMetadataResponseB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n  ,\n  dependencies=[tensorflow__serving_dot_apis_dot_classification__pb2.DESCRIPTOR,tensorflow__serving_dot_apis_dot_get__model__metadata__pb2.DESCRIPTOR,tensorflow__serving_dot_apis_dot_inference__pb2.DESCRIPTOR,tensorflow__serving_dot_apis_dot_predict__pb2.DESCRIPTOR,tensorflow__serving_d",
                    "rendered": {
                      "text": "ng.PredictRequest\\x1a#.tensorflow.serving.PredictResponse\\x12g\\n\\x0eMultiInference\\x12).tensorflow.serving.MultiInferenceRequest\\x1a*.tensorflow.serving.MultiInferenceResponse\\x12m\\n\\x10GetModelMetadata\\x12+.tensorflow.serving.GetModelMetadataRequest\\x1a,.tensorflow.serving.GetModelMetadataResponseB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n  ,\n  dependencies=[tensorflow__serving_dot_apis_dot_classification__pb2.DESCRIPTOR,tensorflow__serving_dot_apis_dot_get__model__metadata__pb2.DESCRIPTOR,tensorflow__serving_dot_apis_dot_inference__pb2.DESCRIPTOR,tensorflow__serving_dot_apis_dot_predict__pb2.DESCRIPTOR,tensorflow__serving_d",
                      "markdown": "`ng.PredictRequest\\x1a#.tensorflow.serving.PredictResponse\\x12g\\n\\x0eMultiInference\\x12).tensorflow.serving.MultiInferenceRequest\\x1a*.tensorflow.serving.MultiInferenceResponse\\x12m\\n\\x10GetModelMetadata\\x12+.tensorflow.serving.GetModelMetadataRequest\\x1a,.tensorflow.serving.GetModelMetadataResponseB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n  ,\n  dependencies=[tensorflow__serving_dot_apis_dot_classification__pb2.DESCRIPTOR,tensorflow__serving_dot_apis_dot_get__model__metadata__pb2.DESCRIPTOR,tensorflow__serving_dot_apis_dot_inference__pb2.DESCRIPTOR,tensorflow__serving_dot_apis_dot_predict__pb2.DESCRIPTOR,tensorflow__serving_d`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/prediction_service_pb2.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/input_pb2.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 680,
                  "endLine": 17,
                  "endColumn": 704,
                  "snippet": {
                    "text": "18\\x02 \\x01(\\x0b\\x32\\x13.tensorflow.Example\\\"\\xa1\\x01\\n\\x05Input\\x12;\\n\\x0c\\x65xample_list\\x18\\x01 \\x01(\\x0b\\x32\\x1f.tensorflow.serving.ExampleListB\\x02(\\x01H\\x00\\x12S\\n\\x19\\x65xample_list_with_context\\x18\\x02 \\x01(\\x0b\\x32*.tensorflow.serving.ExampleListWithContextB\\x02(\\x01H\\x00\\x42\\x06\\n\\x04kindB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.input_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n  ",
                    "rendered": {
                      "text": "18\\x02 \\x01(\\x0b\\x32\\x13.tensorflow.Example\\\"\\xa1\\x01\\n\\x05Input\\x12;\\n\\x0c\\x65xample_list\\x18\\x01 \\x01(\\x0b\\x32\\x1f.tensorflow.serving.ExampleListB\\x02(\\x01H\\x00\\x12S\\n\\x19\\x65xample_list_with_context\\x18\\x02 \\x01(\\x0b\\x32*.tensorflow.serving.ExampleListWithContextB\\x02(\\x01H\\x00\\x42\\x06\\n\\x04kindB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.input_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n  ",
                      "markdown": "`18\\x02 \\x01(\\x0b\\x32\\x13.tensorflow.Example\\\"\\xa1\\x01\\n\\x05Input\\x12;\\n\\x0c\\x65xample_list\\x18\\x01 \\x01(\\x0b\\x32\\x1f.tensorflow.serving.ExampleListB\\x02(\\x01H\\x00\\x12S\\n\\x19\\x65xample_list_with_context\\x18\\x02 \\x01(\\x0b\\x32*.tensorflow.serving.ExampleListWithContextB\\x02(\\x01H\\x00\\x42\\x06\\n\\x04kindB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.input_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n  `"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/logging_pb2.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 627,
                  "endLine": 18,
                  "endColumn": 651,
                  "snippet": {
                    "text": "n\\x0fsampling_config\\x18\\x02 \\x01(\\x0b\\x32\\\".tensorflow.serving.SamplingConfig\\x12\\x18\\n\\x10saved_model_tags\\x18\\x03 \\x03(\\t\\x12\\x16\\n\\x0etimestamp_secs\\x18\\x04 \\x01(\\x03\\x12\\n\\n\\x02\\x64\\x63\\x18\\x05 \\x01(\\t\\x12\\x16\\n\\x0erequest_origin\\x18\\x06 \\x01(\\t\\x12\\x1b\\n\\x13request_criticality\\x18\\x07 \\x01(\\tB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.logging_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n",
                    "rendered": {
                      "text": "n\\x0fsampling_config\\x18\\x02 \\x01(\\x0b\\x32\\\".tensorflow.serving.SamplingConfig\\x12\\x18\\n\\x10saved_model_tags\\x18\\x03 \\x03(\\t\\x12\\x16\\n\\x0etimestamp_secs\\x18\\x04 \\x01(\\x03\\x12\\n\\n\\x02\\x64\\x63\\x18\\x05 \\x01(\\t\\x12\\x16\\n\\x0erequest_origin\\x18\\x06 \\x01(\\t\\x12\\x1b\\n\\x13request_criticality\\x18\\x07 \\x01(\\tB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.logging_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n",
                      "markdown": "`n\\x0fsampling_config\\x18\\x02 \\x01(\\x0b\\x32\\\".tensorflow.serving.SamplingConfig\\x12\\x18\\n\\x10saved_model_tags\\x18\\x03 \\x03(\\t\\x12\\x16\\n\\x0etimestamp_secs\\x18\\x04 \\x01(\\x03\\x12\\n\\n\\x02\\x64\\x63\\x18\\x05 \\x01(\\t\\x12\\x16\\n\\x0erequest_origin\\x18\\x06 \\x01(\\t\\x12\\x1b\\n\\x13request_criticality\\x18\\x07 \\x01(\\tB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.logging_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/logging_pb2.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 505,
                  "endLine": 18,
                  "endColumn": 525,
                  "snippet": {
                    "text": "config.proto\\\"\\xf0\\x01\\n\\x0bLogMetadata\\x12\\x31\\n\\nmodel_spec\\x18\\x01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12;\\n\\x0fsampling_config\\x18\\x02 \\x01(\\x0b\\x32\\\".tensorflow.serving.SamplingConfig\\x12\\x18\\n\\x10saved_model_tags\\x18\\x03 \\x03(\\t\\x12\\x16\\n\\x0etimestamp_secs\\x18\\x04 \\x01(\\x03\\x12\\n\\n\\x02\\x64\\x63\\x18\\x05 \\x01(\\t\\x12\\x16\\n\\x0erequest_origin\\x18\\x06 \\x01(\\t\\x12\\x1b\\n\\x13request_criticality\\x18\\x07 \\x01(\\tB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.logging_pb2', globals())",
                    "rendered": {
                      "text": "config.proto\\\"\\xf0\\x01\\n\\x0bLogMetadata\\x12\\x31\\n\\nmodel_spec\\x18\\x01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12;\\n\\x0fsampling_config\\x18\\x02 \\x01(\\x0b\\x32\\\".tensorflow.serving.SamplingConfig\\x12\\x18\\n\\x10saved_model_tags\\x18\\x03 \\x03(\\t\\x12\\x16\\n\\x0etimestamp_secs\\x18\\x04 \\x01(\\x03\\x12\\n\\n\\x02\\x64\\x63\\x18\\x05 \\x01(\\t\\x12\\x16\\n\\x0erequest_origin\\x18\\x06 \\x01(\\t\\x12\\x1b\\n\\x13request_criticality\\x18\\x07 \\x01(\\tB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.logging_pb2', globals())",
                      "markdown": "`config.proto\\\"\\xf0\\x01\\n\\x0bLogMetadata\\x12\\x31\\n\\nmodel_spec\\x18\\x01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12;\\n\\x0fsampling_config\\x18\\x02 \\x01(\\x0b\\x32\\\".tensorflow.serving.SamplingConfig\\x12\\x18\\n\\x10saved_model_tags\\x18\\x03 \\x03(\\t\\x12\\x16\\n\\x0etimestamp_secs\\x18\\x04 \\x01(\\x03\\x12\\n\\n\\x02\\x64\\x63\\x18\\x05 \\x01(\\t\\x12\\x16\\n\\x0erequest_origin\\x18\\x06 \\x01(\\t\\x12\\x1b\\n\\x13request_criticality\\x18\\x07 \\x01(\\tB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.logging_pb2', globals())`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/status_pb2.py"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 330,
                  "endLine": 21,
                  "endColumn": 354,
                  "snippet": {
                    "text": "Default().AddSerializedFile(b'\\n$tensorflow_serving/apis/status.proto\\x12\\x12tensorflow.serving\\x1a*tensorflow/core/protobuf/error_codes.proto\\\"k\\n\\x0bStatusProto\\x12\\x36\\n\\nerror_code\\x18\\x01 \\x01(\\x0e\\x32\\x16.tensorflow.error.CodeR\\nerror_code\\x12$\\n\\rerror_message\\x18\\x02 \\x01(\\tR\\rerror_messageB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.status_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n ",
                    "rendered": {
                      "text": "Default().AddSerializedFile(b'\\n$tensorflow_serving/apis/status.proto\\x12\\x12tensorflow.serving\\x1a*tensorflow/core/protobuf/error_codes.proto\\\"k\\n\\x0bStatusProto\\x12\\x36\\n\\nerror_code\\x18\\x01 \\x01(\\x0e\\x32\\x16.tensorflow.error.CodeR\\nerror_code\\x12$\\n\\rerror_message\\x18\\x02 \\x01(\\tR\\rerror_messageB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.status_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n ",
                      "markdown": "`Default().AddSerializedFile(b'\\n$tensorflow_serving/apis/status.proto\\x12\\x12tensorflow.serving\\x1a*tensorflow/core/protobuf/error_codes.proto\\\"k\\n\\x0bStatusProto\\x12\\x36\\n\\nerror_code\\x18\\x01 \\x01(\\x0e\\x32\\x16.tensorflow.error.CodeR\\nerror_code\\x12$\\n\\rerror_message\\x18\\x02 \\x01(\\tR\\rerror_messageB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.status_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n `"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/session_service_pb2.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1026,
                  "endLine": 19,
                  "endColumn": 1050,
                  "snippet": {
                    "text": "2\\x1d.tensorflow.serving.ModelSpec\\x12,\\n\\x06tensor\\x18\\x01 \\x03(\\x0b\\x32\\x1c.tensorflow.NamedTensorProto\\x12)\\n\\x08metadata\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.RunMetadata2m\\n\\x0eSessionService\\x12[\\n\\nSessionRun\\x12%.tensorflow.serving.SessionRunRequest\\x1a&.tensorflow.serving.SessionRunResponseB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.session_service_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\0",
                    "rendered": {
                      "text": "2\\x1d.tensorflow.serving.ModelSpec\\x12,\\n\\x06tensor\\x18\\x01 \\x03(\\x0b\\x32\\x1c.tensorflow.NamedTensorProto\\x12)\\n\\x08metadata\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.RunMetadata2m\\n\\x0eSessionService\\x12[\\n\\nSessionRun\\x12%.tensorflow.serving.SessionRunRequest\\x1a&.tensorflow.serving.SessionRunResponseB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.session_service_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\0",
                      "markdown": "`2\\x1d.tensorflow.serving.ModelSpec\\x12,\\n\\x06tensor\\x18\\x01 \\x03(\\x0b\\x32\\x1c.tensorflow.NamedTensorProto\\x12)\\n\\x08metadata\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.RunMetadata2m\\n\\x0eSessionService\\x12[\\n\\nSessionRun\\x12%.tensorflow.serving.SessionRunRequest\\x1a&.tensorflow.serving.SessionRunResponseB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.session_service_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\0`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/session_service_pb2.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 381,
                  "endLine": 19,
                  "endColumn": 409,
                  "snippet": {
                    "text": "/apis/session_service.proto\\x12\\x12tensorflow.serving\\x1a%tensorflow/core/protobuf/config.proto\\x1a+tensorflow/core/protobuf/named_tensor.proto\\x1a#tensorflow_serving/apis/model.proto\\\"\\xd8\\x01\\n\\x11SessionRunRequest\\x12\\x31\\n\\nmodel_spec\\x18\\x01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12*\\n\\x04\\x66\\x65\\x65\\x64\\x18\\x02 \\x03(\\x0b\\x32\\x1c.tensorflow.NamedTensorProto\\x12\\r\\n\\x05\\x66\\x65tch\\x18\\x03 \\x03(\\t\\x12\\x0e\\n\\x06target\\x18\\x04 \\x03(\\t\\x12\\x1c\\n\\x14tensor_name_is_alias\\x18\\x06 \\x01(\\x08\\x12\\'\\n\\x07options\\x18\\x05 \\x01(\\x0b\\x32\\x16.tensorflow.RunOptions\\\"\\xa0\\x01\\n\\x12SessionRunResponse\\x12\\x31\\n\\nmodel_spec\\x18",
                    "rendered": {
                      "text": "/apis/session_service.proto\\x12\\x12tensorflow.serving\\x1a%tensorflow/core/protobuf/config.proto\\x1a+tensorflow/core/protobuf/named_tensor.proto\\x1a#tensorflow_serving/apis/model.proto\\\"\\xd8\\x01\\n\\x11SessionRunRequest\\x12\\x31\\n\\nmodel_spec\\x18\\x01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12*\\n\\x04\\x66\\x65\\x65\\x64\\x18\\x02 \\x03(\\x0b\\x32\\x1c.tensorflow.NamedTensorProto\\x12\\r\\n\\x05\\x66\\x65tch\\x18\\x03 \\x03(\\t\\x12\\x0e\\n\\x06target\\x18\\x04 \\x03(\\t\\x12\\x1c\\n\\x14tensor_name_is_alias\\x18\\x06 \\x01(\\x08\\x12\\'\\n\\x07options\\x18\\x05 \\x01(\\x0b\\x32\\x16.tensorflow.RunOptions\\\"\\xa0\\x01\\n\\x12SessionRunResponse\\x12\\x31\\n\\nmodel_spec\\x18",
                      "markdown": "`/apis/session_service.proto\\x12\\x12tensorflow.serving\\x1a%tensorflow/core/protobuf/config.proto\\x1a+tensorflow/core/protobuf/named_tensor.proto\\x1a#tensorflow_serving/apis/model.proto\\\"\\xd8\\x01\\n\\x11SessionRunRequest\\x12\\x31\\n\\nmodel_spec\\x18\\x01 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12*\\n\\x04\\x66\\x65\\x65\\x64\\x18\\x02 \\x03(\\x0b\\x32\\x1c.tensorflow.NamedTensorProto\\x12\\r\\n\\x05\\x66\\x65tch\\x18\\x03 \\x03(\\t\\x12\\x0e\\n\\x06target\\x18\\x04 \\x03(\\t\\x12\\x1c\\n\\x14tensor_name_is_alias\\x18\\x06 \\x01(\\x08\\x12\\'\\n\\x07options\\x18\\x05 \\x01(\\x0b\\x32\\x16.tensorflow.RunOptions\\\"\\xa0\\x01\\n\\x12SessionRunResponse\\x12\\x31\\n\\nmodel_spec\\x18`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/model_management_pb2.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 695,
                  "endLine": 18,
                  "endColumn": 719,
                  "snippet": {
                    "text": "14ReloadConfigResponse\\x12/\\n\\x06status\\x18\\x01 \\x01(\\x0b\\x32\\x1f.tensorflow.serving.StatusProto\\x12*\\n\\x06metric\\x18\\x02 \\x03(\\x0b\\x32\\x1a.tensorflow.serving.Metric\\\"H\\n\\x06Metric\\x12\\x0c\\n\\x04name\\x18\\x01 \\x01(\\t\\x12\\x1e\\n\\x14int64_value_increase\\x18\\x02 \\x01(\\x03H\\x00\\x42\\x10\\n\\x0evalue_increaseB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.model_management_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\",
                    "rendered": {
                      "text": "14ReloadConfigResponse\\x12/\\n\\x06status\\x18\\x01 \\x01(\\x0b\\x32\\x1f.tensorflow.serving.StatusProto\\x12*\\n\\x06metric\\x18\\x02 \\x03(\\x0b\\x32\\x1a.tensorflow.serving.Metric\\\"H\\n\\x06Metric\\x12\\x0c\\n\\x04name\\x18\\x01 \\x01(\\t\\x12\\x1e\\n\\x14int64_value_increase\\x18\\x02 \\x01(\\x03H\\x00\\x42\\x10\\n\\x0evalue_increaseB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.model_management_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\",
                      "markdown": "`14ReloadConfigResponse\\x12/\\n\\x06status\\x18\\x01 \\x01(\\x0b\\x32\\x1f.tensorflow.serving.StatusProto\\x12*\\n\\x06metric\\x18\\x02 \\x03(\\x0b\\x32\\x1a.tensorflow.serving.Metric\\\"H\\n\\x06Metric\\x12\\x0c\\n\\x04name\\x18\\x01 \\x01(\\t\\x12\\x1e\\n\\x14int64_value_increase\\x18\\x02 \\x01(\\x03H\\x00\\x42\\x10\\n\\x0evalue_increaseB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.model_management_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/config/log_collector_config_pb2.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 251,
                  "endLine": 16,
                  "endColumn": 275,
                  "snippet": {
                    "text": "\n\n\nDESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\\n4tensorflow_serving/config/log_collector_config.proto\\x12\\x12tensorflow.serving\\\";\\n\\x12LogCollectorConfig\\x12\\x0c\\n\\x04type\\x18\\x01 \\x01(\\t\\x12\\x17\\n\\x0f\\x66ilename_prefix\\x18\\x02 \\x01(\\tB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.log_collector_config_pb2', globals())\n",
                    "rendered": {
                      "text": "\n\n\nDESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\\n4tensorflow_serving/config/log_collector_config.proto\\x12\\x12tensorflow.serving\\\";\\n\\x12LogCollectorConfig\\x12\\x0c\\n\\x04type\\x18\\x01 \\x01(\\t\\x12\\x17\\n\\x0f\\x66ilename_prefix\\x18\\x02 \\x01(\\tB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.log_collector_config_pb2', globals())\n",
                      "markdown": "`\n\n\nDESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\\n4tensorflow_serving/config/log_collector_config.proto\\x12\\x12tensorflow.serving\\\";\\n\\x12LogCollectorConfig\\x12\\x0c\\n\\x04type\\x18\\x01 \\x01(\\t\\x12\\x17\\n\\x0f\\x66ilename_prefix\\x18\\x02 \\x01(\\tB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.log_collector_config_pb2', globals())\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/config/file_system_storage_path_source_pb2.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1384,
                  "endLine": 16,
                  "endColumn": 1412,
                  "snippet": {
                    "text": "olicy_choice\\x1a\\xb1\\x01\\n\\x11ServableToMonitor\\x12\\x15\\n\\rservable_name\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\tbase_path\\x18\\x02 \\x01(\\t\\x12l\\n\\x17servable_version_policy\\x18\\x04 \\x01(\\x0b\\x32K.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicyJ\\x04\\x08\\x03\\x10\\x04J\\x04\\x08\\x01\\x10\\x02J\\x04\\x08\\x02\\x10\\x03\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.file_system_storage_path_source_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  _FILESYSTEMSTORAGEPATHS",
                    "rendered": {
                      "text": "olicy_choice\\x1a\\xb1\\x01\\n\\x11ServableToMonitor\\x12\\x15\\n\\rservable_name\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\tbase_path\\x18\\x02 \\x01(\\t\\x12l\\n\\x17servable_version_policy\\x18\\x04 \\x01(\\x0b\\x32K.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicyJ\\x04\\x08\\x03\\x10\\x04J\\x04\\x08\\x01\\x10\\x02J\\x04\\x08\\x02\\x10\\x03\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.file_system_storage_path_source_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  _FILESYSTEMSTORAGEPATHS",
                      "markdown": "`olicy_choice\\x1a\\xb1\\x01\\n\\x11ServableToMonitor\\x12\\x15\\n\\rservable_name\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\tbase_path\\x18\\x02 \\x01(\\t\\x12l\\n\\x17servable_version_policy\\x18\\x04 \\x01(\\x0b\\x32K.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicyJ\\x04\\x08\\x03\\x10\\x04J\\x04\\x08\\x01\\x10\\x02J\\x04\\x08\\x02\\x10\\x03\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.file_system_storage_path_source_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  _FILESYSTEMSTORAGEPATHS`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/config/file_system_storage_path_source_pb2.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1363,
                  "endLine": 16,
                  "endColumn": 1383,
                  "snippet": {
                    "text": "x03(\\x03\\x42\\x0f\\n\\rpolicy_choice\\x1a\\xb1\\x01\\n\\x11ServableToMonitor\\x12\\x15\\n\\rservable_name\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\tbase_path\\x18\\x02 \\x01(\\t\\x12l\\n\\x17servable_version_policy\\x18\\x04 \\x01(\\x0b\\x32K.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicyJ\\x04\\x08\\x03\\x10\\x04J\\x04\\x08\\x01\\x10\\x02J\\x04\\x08\\x02\\x10\\x03\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.file_system_storage_path_source_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = N",
                    "rendered": {
                      "text": "x03(\\x03\\x42\\x0f\\n\\rpolicy_choice\\x1a\\xb1\\x01\\n\\x11ServableToMonitor\\x12\\x15\\n\\rservable_name\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\tbase_path\\x18\\x02 \\x01(\\t\\x12l\\n\\x17servable_version_policy\\x18\\x04 \\x01(\\x0b\\x32K.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicyJ\\x04\\x08\\x03\\x10\\x04J\\x04\\x08\\x01\\x10\\x02J\\x04\\x08\\x02\\x10\\x03\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.file_system_storage_path_source_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = N",
                      "markdown": "`x03(\\x03\\x42\\x0f\\n\\rpolicy_choice\\x1a\\xb1\\x01\\n\\x11ServableToMonitor\\x12\\x15\\n\\rservable_name\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\tbase_path\\x18\\x02 \\x01(\\t\\x12l\\n\\x17servable_version_policy\\x18\\x04 \\x01(\\x0b\\x32K.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicyJ\\x04\\x08\\x03\\x10\\x04J\\x04\\x08\\x01\\x10\\x02J\\x04\\x08\\x02\\x10\\x03\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.file_system_storage_path_source_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = N`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/config/file_system_storage_path_source_pb2.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1342,
                  "endLine": 16,
                  "endColumn": 1362,
                  "snippet": {
                    "text": "x08versions\\x18\\x01 \\x03(\\x03\\x42\\x0f\\n\\rpolicy_choice\\x1a\\xb1\\x01\\n\\x11ServableToMonitor\\x12\\x15\\n\\rservable_name\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\tbase_path\\x18\\x02 \\x01(\\t\\x12l\\n\\x17servable_version_policy\\x18\\x04 \\x01(\\x0b\\x32K.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicyJ\\x04\\x08\\x03\\x10\\x04J\\x04\\x08\\x01\\x10\\x02J\\x04\\x08\\x02\\x10\\x03\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.file_system_storage_path_source_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DE",
                    "rendered": {
                      "text": "x08versions\\x18\\x01 \\x03(\\x03\\x42\\x0f\\n\\rpolicy_choice\\x1a\\xb1\\x01\\n\\x11ServableToMonitor\\x12\\x15\\n\\rservable_name\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\tbase_path\\x18\\x02 \\x01(\\t\\x12l\\n\\x17servable_version_policy\\x18\\x04 \\x01(\\x0b\\x32K.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicyJ\\x04\\x08\\x03\\x10\\x04J\\x04\\x08\\x01\\x10\\x02J\\x04\\x08\\x02\\x10\\x03\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.file_system_storage_path_source_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DE",
                      "markdown": "`x08versions\\x18\\x01 \\x03(\\x03\\x42\\x0f\\n\\rpolicy_choice\\x1a\\xb1\\x01\\n\\x11ServableToMonitor\\x12\\x15\\n\\rservable_name\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\tbase_path\\x18\\x02 \\x01(\\t\\x12l\\n\\x17servable_version_policy\\x18\\x04 \\x01(\\x0b\\x32K.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicyJ\\x04\\x08\\x03\\x10\\x04J\\x04\\x08\\x01\\x10\\x02J\\x04\\x08\\x02\\x10\\x03\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.config.file_system_storage_path_source_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DE`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/config/file_system_storage_path_source_pb2.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 425,
                  "endLine": 16,
                  "endColumn": 449,
                  "snippet": {
                    "text": "o\\x12\\x12tensorflow.serving\\\"\\xde\\x06\\n!FileSystemStoragePathSourceConfig\\x12Z\\n\\tservables\\x18\\x05 \\x03(\\x0b\\x32G.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor\\x12%\\n\\x1d\\x66ile_system_poll_wait_seconds\\x18\\x03 \\x01(\\x03\\x12,\\n fail_if_zero_versions_at_startup\\x18\\x04 \\x01(\\x08\\x42\\x02\\x18\\x01\\x12(\\n servable_versions_always_present\\x18\\x06 \\x01(\\x08\\x1a\\x9d\\x03\\n\\x15ServableVersionPolicy\\x12\\x64\\n\\x06latest\\x18\\x64 \\x01(\\x0b\\x32R.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.LatestH\\x00\\x12^\\n\\x03\\x61ll\\x18\\x65 \\x01(\\x0b\\x32O.tensorflow.serving.FileSystemStorage",
                    "rendered": {
                      "text": "o\\x12\\x12tensorflow.serving\\\"\\xde\\x06\\n!FileSystemStoragePathSourceConfig\\x12Z\\n\\tservables\\x18\\x05 \\x03(\\x0b\\x32G.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor\\x12%\\n\\x1d\\x66ile_system_poll_wait_seconds\\x18\\x03 \\x01(\\x03\\x12,\\n fail_if_zero_versions_at_startup\\x18\\x04 \\x01(\\x08\\x42\\x02\\x18\\x01\\x12(\\n servable_versions_always_present\\x18\\x06 \\x01(\\x08\\x1a\\x9d\\x03\\n\\x15ServableVersionPolicy\\x12\\x64\\n\\x06latest\\x18\\x64 \\x01(\\x0b\\x32R.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.LatestH\\x00\\x12^\\n\\x03\\x61ll\\x18\\x65 \\x01(\\x0b\\x32O.tensorflow.serving.FileSystemStorage",
                      "markdown": "`o\\x12\\x12tensorflow.serving\\\"\\xde\\x06\\n!FileSystemStoragePathSourceConfig\\x12Z\\n\\tservables\\x18\\x05 \\x03(\\x0b\\x32G.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor\\x12%\\n\\x1d\\x66ile_system_poll_wait_seconds\\x18\\x03 \\x01(\\x03\\x12,\\n fail_if_zero_versions_at_startup\\x18\\x04 \\x01(\\x08\\x42\\x02\\x18\\x01\\x12(\\n servable_versions_always_present\\x18\\x06 \\x01(\\x08\\x1a\\x9d\\x03\\n\\x15ServableVersionPolicy\\x12\\x64\\n\\x06latest\\x18\\x64 \\x01(\\x0b\\x32R.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.LatestH\\x00\\x12^\\n\\x03\\x61ll\\x18\\x65 \\x01(\\x0b\\x32O.tensorflow.serving.FileSystemStorage`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/predict_pb2.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 2132,
                  "endLine": 18,
                  "endColumn": 2172,
                  "snippet": {
                    "text": "sponse\\x12\\x31\\n\\nmodel_spec\\x18\\x02 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12\\x41\\n\\x07outputs\\x18\\x01 \\x03(\\x0b\\x32\\x30.tensorflow.serving.PredictResponse.OutputsEntry\\x1aG\\n\\x0cOutputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.predict_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n",
                    "rendered": {
                      "text": "sponse\\x12\\x31\\n\\nmodel_spec\\x18\\x02 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12\\x41\\n\\x07outputs\\x18\\x01 \\x03(\\x0b\\x32\\x30.tensorflow.serving.PredictResponse.OutputsEntry\\x1aG\\n\\x0cOutputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.predict_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n",
                      "markdown": "`sponse\\x12\\x31\\n\\nmodel_spec\\x18\\x02 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12\\x41\\n\\x07outputs\\x18\\x01 \\x03(\\x0b\\x32\\x30.tensorflow.serving.PredictResponse.OutputsEntry\\x1aG\\n\\x0cOutputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.predict_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/predict_pb2.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 1319,
                  "endLine": 18,
                  "endColumn": 1339,
                  "snippet": {
                    "text": "rving.PredictRequest.RequestOptions.DeterministicModeH\\x01\\x88\\x01\\x01\\\"O\\n\\x11\\x44\\x65terministicMode\\x12\\\"\\n\\x1e\\x44\\x45TERMINISTIC_MODE_UNSPECIFIED\\x10\\x00\\x12\\x16\\n\\x12\\x46IXED_DECODER_SLOT\\x10\\x01\\x42\\x0c\\n\\n_client_idB\\x15\\n\\x13_deterministic_modeB\\x0c\\n\\n_client_idB\\x12\\n\\x10_request_optionsJ\\x04\\x08\\x04\\x10\\x05\\\"\\xaf\\x02\\n\\x16PredictStreamedOptions\\x12N\\n\\rrequest_state\\x18\\x01 \\x01(\\x0e\\x32\\x37.tensorflow.serving.PredictStreamedOptions.RequestState\\x12Y\\n\\x10split_dimensions\\x18\\x02 \\x03(\\x0b\\x32?.tensorflow.serving.PredictStreamedOptions.SplitDimensionsEntry\\x1a\\x36\\n\\x14SplitDimensionsEntry\\x12\\x0b\\n\\x",
                    "rendered": {
                      "text": "rving.PredictRequest.RequestOptions.DeterministicModeH\\x01\\x88\\x01\\x01\\\"O\\n\\x11\\x44\\x65terministicMode\\x12\\\"\\n\\x1e\\x44\\x45TERMINISTIC_MODE_UNSPECIFIED\\x10\\x00\\x12\\x16\\n\\x12\\x46IXED_DECODER_SLOT\\x10\\x01\\x42\\x0c\\n\\n_client_idB\\x15\\n\\x13_deterministic_modeB\\x0c\\n\\n_client_idB\\x12\\n\\x10_request_optionsJ\\x04\\x08\\x04\\x10\\x05\\\"\\xaf\\x02\\n\\x16PredictStreamedOptions\\x12N\\n\\rrequest_state\\x18\\x01 \\x01(\\x0e\\x32\\x37.tensorflow.serving.PredictStreamedOptions.RequestState\\x12Y\\n\\x10split_dimensions\\x18\\x02 \\x03(\\x0b\\x32?.tensorflow.serving.PredictStreamedOptions.SplitDimensionsEntry\\x1a\\x36\\n\\x14SplitDimensionsEntry\\x12\\x0b\\n\\x",
                      "markdown": "`rving.PredictRequest.RequestOptions.DeterministicModeH\\x01\\x88\\x01\\x01\\\"O\\n\\x11\\x44\\x65terministicMode\\x12\\\"\\n\\x1e\\x44\\x45TERMINISTIC_MODE_UNSPECIFIED\\x10\\x00\\x12\\x16\\n\\x12\\x46IXED_DECODER_SLOT\\x10\\x01\\x42\\x0c\\n\\n_client_idB\\x15\\n\\x13_deterministic_modeB\\x0c\\n\\n_client_idB\\x12\\n\\x10_request_optionsJ\\x04\\x08\\x04\\x10\\x05\\\"\\xaf\\x02\\n\\x16PredictStreamedOptions\\x12N\\n\\rrequest_state\\x18\\x01 \\x01(\\x0e\\x32\\x37.tensorflow.serving.PredictStreamedOptions.RequestState\\x12Y\\n\\x10split_dimensions\\x18\\x02 \\x03(\\x0b\\x32?.tensorflow.serving.PredictStreamedOptions.SplitDimensionsEntry\\x1a\\x36\\n\\x14SplitDimensionsEntry\\x12\\x0b\\n\\x`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/predict_pb2.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 925,
                  "endLine": 18,
                  "endColumn": 949,
                  "snippet": {
                    "text": "\\x18\\x07 \\x01(\\x0b\\x32\\x31.tensorflow.serving.PredictRequest.RequestOptionsH\\x01\\x88\\x01\\x01\\x1a\\x46\\n\\x0bInputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x1a\\x84\\x02\\n\\x0eRequestOptions\\x12\\x16\\n\\tclient_id\\x18\\x01 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12\\x64\\n\\x12\\x64\\x65terministic_mode\\x18\\x02 \\x01(\\x0e\\x32\\x43.tensorflow.serving.PredictRequest.RequestOptions.DeterministicModeH\\x01\\x88\\x01\\x01\\\"O\\n\\x11\\x44\\x65terministicMode\\x12\\\"\\n\\x1e\\x44\\x45TERMINISTIC_MODE_UNSPECIFIED\\x10\\x00\\x12\\x16\\n\\x12\\x46IXED_DECODER_SLOT\\x10\\x01\\x42\\x0c\\n\\n_client_idB\\x15\\n",
                    "rendered": {
                      "text": "\\x18\\x07 \\x01(\\x0b\\x32\\x31.tensorflow.serving.PredictRequest.RequestOptionsH\\x01\\x88\\x01\\x01\\x1a\\x46\\n\\x0bInputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x1a\\x84\\x02\\n\\x0eRequestOptions\\x12\\x16\\n\\tclient_id\\x18\\x01 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12\\x64\\n\\x12\\x64\\x65terministic_mode\\x18\\x02 \\x01(\\x0e\\x32\\x43.tensorflow.serving.PredictRequest.RequestOptions.DeterministicModeH\\x01\\x88\\x01\\x01\\\"O\\n\\x11\\x44\\x65terministicMode\\x12\\\"\\n\\x1e\\x44\\x45TERMINISTIC_MODE_UNSPECIFIED\\x10\\x00\\x12\\x16\\n\\x12\\x46IXED_DECODER_SLOT\\x10\\x01\\x42\\x0c\\n\\n_client_idB\\x15\\n",
                      "markdown": "`\\x18\\x07 \\x01(\\x0b\\x32\\x31.tensorflow.serving.PredictRequest.RequestOptionsH\\x01\\x88\\x01\\x01\\x1a\\x46\\n\\x0bInputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x1a\\x84\\x02\\n\\x0eRequestOptions\\x12\\x16\\n\\tclient_id\\x18\\x01 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12\\x64\\n\\x12\\x64\\x65terministic_mode\\x18\\x02 \\x01(\\x0e\\x32\\x43.tensorflow.serving.PredictRequest.RequestOptions.DeterministicModeH\\x01\\x88\\x01\\x01\\\"O\\n\\x11\\x44\\x65terministicMode\\x12\\\"\\n\\x1e\\x44\\x45TERMINISTIC_MODE_UNSPECIFIED\\x10\\x00\\x12\\x16\\n\\x12\\x46IXED_DECODER_SLOT\\x10\\x01\\x42\\x0c\\n\\n_client_idB\\x15\\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/predict_pb2.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 841,
                  "endLine": 18,
                  "endColumn": 865,
                  "snippet": {
                    "text": "ns\\x12\\x16\\n\\tclient_id\\x18\\x06 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12O\\n\\x0frequest_options\\x18\\x07 \\x01(\\x0b\\x32\\x31.tensorflow.serving.PredictRequest.RequestOptionsH\\x01\\x88\\x01\\x01\\x1a\\x46\\n\\x0bInputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x1a\\x84\\x02\\n\\x0eRequestOptions\\x12\\x16\\n\\tclient_id\\x18\\x01 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12\\x64\\n\\x12\\x64\\x65terministic_mode\\x18\\x02 \\x01(\\x0e\\x32\\x43.tensorflow.serving.PredictRequest.RequestOptions.DeterministicModeH\\x01\\x88\\x01\\x01\\\"O\\n\\x11\\x44\\x65terministicMode\\x12\\\"\\n\\x1e\\x44\\x45TERMINISTIC_MODE_UNSPECI",
                    "rendered": {
                      "text": "ns\\x12\\x16\\n\\tclient_id\\x18\\x06 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12O\\n\\x0frequest_options\\x18\\x07 \\x01(\\x0b\\x32\\x31.tensorflow.serving.PredictRequest.RequestOptionsH\\x01\\x88\\x01\\x01\\x1a\\x46\\n\\x0bInputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x1a\\x84\\x02\\n\\x0eRequestOptions\\x12\\x16\\n\\tclient_id\\x18\\x01 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12\\x64\\n\\x12\\x64\\x65terministic_mode\\x18\\x02 \\x01(\\x0e\\x32\\x43.tensorflow.serving.PredictRequest.RequestOptions.DeterministicModeH\\x01\\x88\\x01\\x01\\\"O\\n\\x11\\x44\\x65terministicMode\\x12\\\"\\n\\x1e\\x44\\x45TERMINISTIC_MODE_UNSPECI",
                      "markdown": "`ns\\x12\\x16\\n\\tclient_id\\x18\\x06 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12O\\n\\x0frequest_options\\x18\\x07 \\x01(\\x0b\\x32\\x31.tensorflow.serving.PredictRequest.RequestOptionsH\\x01\\x88\\x01\\x01\\x1a\\x46\\n\\x0bInputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x1a\\x84\\x02\\n\\x0eRequestOptions\\x12\\x16\\n\\tclient_id\\x18\\x01 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12\\x64\\n\\x12\\x64\\x65terministic_mode\\x18\\x02 \\x01(\\x0e\\x32\\x43.tensorflow.serving.PredictRequest.RequestOptions.DeterministicModeH\\x01\\x88\\x01\\x01\\\"O\\n\\x11\\x44\\x65terministicMode\\x12\\\"\\n\\x1e\\x44\\x45TERMINISTIC_MODE_UNSPECI`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/predict_pb2.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 701,
                  "endLine": 18,
                  "endColumn": 725,
                  "snippet": {
                    "text": "y\\x12\\x15\\n\\routput_filter\\x18\\x03 \\x03(\\t\\x12L\\n\\x18predict_streamed_options\\x18\\x05 \\x01(\\x0b\\x32*.tensorflow.serving.PredictStreamedOptions\\x12\\x16\\n\\tclient_id\\x18\\x06 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12O\\n\\x0frequest_options\\x18\\x07 \\x01(\\x0b\\x32\\x31.tensorflow.serving.PredictRequest.RequestOptionsH\\x01\\x88\\x01\\x01\\x1a\\x46\\n\\x0bInputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x1a\\x84\\x02\\n\\x0eRequestOptions\\x12\\x16\\n\\tclient_id\\x18\\x01 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12\\x64\\n\\x12\\x64\\x65terministic_mode\\x18\\x02 \\x01(\\x0e\\x32\\x43.tensorflow.serving.",
                    "rendered": {
                      "text": "y\\x12\\x15\\n\\routput_filter\\x18\\x03 \\x03(\\t\\x12L\\n\\x18predict_streamed_options\\x18\\x05 \\x01(\\x0b\\x32*.tensorflow.serving.PredictStreamedOptions\\x12\\x16\\n\\tclient_id\\x18\\x06 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12O\\n\\x0frequest_options\\x18\\x07 \\x01(\\x0b\\x32\\x31.tensorflow.serving.PredictRequest.RequestOptionsH\\x01\\x88\\x01\\x01\\x1a\\x46\\n\\x0bInputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x1a\\x84\\x02\\n\\x0eRequestOptions\\x12\\x16\\n\\tclient_id\\x18\\x01 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12\\x64\\n\\x12\\x64\\x65terministic_mode\\x18\\x02 \\x01(\\x0e\\x32\\x43.tensorflow.serving.",
                      "markdown": "`y\\x12\\x15\\n\\routput_filter\\x18\\x03 \\x03(\\t\\x12L\\n\\x18predict_streamed_options\\x18\\x05 \\x01(\\x0b\\x32*.tensorflow.serving.PredictStreamedOptions\\x12\\x16\\n\\tclient_id\\x18\\x06 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12O\\n\\x0frequest_options\\x18\\x07 \\x01(\\x0b\\x32\\x31.tensorflow.serving.PredictRequest.RequestOptionsH\\x01\\x88\\x01\\x01\\x1a\\x46\\n\\x0bInputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x1a\\x84\\x02\\n\\x0eRequestOptions\\x12\\x16\\n\\tclient_id\\x18\\x01 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12\\x64\\n\\x12\\x64\\x65terministic_mode\\x18\\x02 \\x01(\\x0e\\x32\\x43.tensorflow.serving.`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/predict_pb2.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 583,
                  "endLine": 18,
                  "endColumn": 603,
                  "snippet": {
                    "text": "\\x1d.tensorflow.serving.ModelSpec\\x12>\\n\\x06inputs\\x18\\x02 \\x03(\\x0b\\x32..tensorflow.serving.PredictRequest.InputsEntry\\x12\\x15\\n\\routput_filter\\x18\\x03 \\x03(\\t\\x12L\\n\\x18predict_streamed_options\\x18\\x05 \\x01(\\x0b\\x32*.tensorflow.serving.PredictStreamedOptions\\x12\\x16\\n\\tclient_id\\x18\\x06 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12O\\n\\x0frequest_options\\x18\\x07 \\x01(\\x0b\\x32\\x31.tensorflow.serving.PredictRequest.RequestOptionsH\\x01\\x88\\x01\\x01\\x1a\\x46\\n\\x0bInputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x1a\\x84\\x02\\n\\x0eRequestOptions\\x12\\x16\\n\\tclient",
                    "rendered": {
                      "text": "\\x1d.tensorflow.serving.ModelSpec\\x12>\\n\\x06inputs\\x18\\x02 \\x03(\\x0b\\x32..tensorflow.serving.PredictRequest.InputsEntry\\x12\\x15\\n\\routput_filter\\x18\\x03 \\x03(\\t\\x12L\\n\\x18predict_streamed_options\\x18\\x05 \\x01(\\x0b\\x32*.tensorflow.serving.PredictStreamedOptions\\x12\\x16\\n\\tclient_id\\x18\\x06 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12O\\n\\x0frequest_options\\x18\\x07 \\x01(\\x0b\\x32\\x31.tensorflow.serving.PredictRequest.RequestOptionsH\\x01\\x88\\x01\\x01\\x1a\\x46\\n\\x0bInputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x1a\\x84\\x02\\n\\x0eRequestOptions\\x12\\x16\\n\\tclient",
                      "markdown": "`\\x1d.tensorflow.serving.ModelSpec\\x12>\\n\\x06inputs\\x18\\x02 \\x03(\\x0b\\x32..tensorflow.serving.PredictRequest.InputsEntry\\x12\\x15\\n\\routput_filter\\x18\\x03 \\x03(\\t\\x12L\\n\\x18predict_streamed_options\\x18\\x05 \\x01(\\x0b\\x32*.tensorflow.serving.PredictStreamedOptions\\x12\\x16\\n\\tclient_id\\x18\\x06 \\x01(\\x0cH\\x00\\x88\\x01\\x01\\x12O\\n\\x0frequest_options\\x18\\x07 \\x01(\\x0b\\x32\\x31.tensorflow.serving.PredictRequest.RequestOptionsH\\x01\\x88\\x01\\x01\\x1a\\x46\\n\\x0bInputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x1a\\x84\\x02\\n\\x0eRequestOptions\\x12\\x16\\n\\tclient`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/predict_pb2.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 2132,
                  "endLine": 18,
                  "endColumn": 2172,
                  "snippet": {
                    "text": "sponse\\x12\\x31\\n\\nmodel_spec\\x18\\x02 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12\\x41\\n\\x07outputs\\x18\\x01 \\x03(\\x0b\\x32\\x30.tensorflow.serving.PredictResponse.OutputsEntry\\x1aG\\n\\x0cOutputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.predict_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n",
                    "rendered": {
                      "text": "sponse\\x12\\x31\\n\\nmodel_spec\\x18\\x02 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12\\x41\\n\\x07outputs\\x18\\x01 \\x03(\\x0b\\x32\\x30.tensorflow.serving.PredictResponse.OutputsEntry\\x1aG\\n\\x0cOutputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.predict_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n",
                      "markdown": "`sponse\\x12\\x31\\n\\nmodel_spec\\x18\\x02 \\x01(\\x0b\\x32\\x1d.tensorflow.serving.ModelSpec\\x12\\x41\\n\\x07outputs\\x18\\x01 \\x03(\\x0b\\x32\\x30.tensorflow.serving.PredictResponse.OutputsEntry\\x1aG\\n\\x0cOutputsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12&\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x17.tensorflow.TensorProto:\\x02\\x38\\x01\\x42\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.predict_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-serving-api-2.17.0-r0.apk/py3-tensorflow-serving-api-2.17.0-r0/usr/lib/python3.12/site-packages/tensorflow_serving/apis/inference_pb2.py"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1050,
                  "endLine": 20,
                  "endColumn": 1074,
                  "snippet": {
                    "text": "2\\x08\\n\\x06result\\\"s\\n\\x15MultiInferenceRequest\\x12\\x30\\n\\x05tasks\\x18\\x01 \\x03(\\x0b\\x32!.tensorflow.serving.InferenceTask\\x12(\\n\\x05input\\x18\\x02 \\x01(\\x0b\\x32\\x19.tensorflow.serving.Input\\\"N\\n\\x16MultiInferenceResponse\\x12\\x34\\n\\x07results\\x18\\x01 \\x03(\\x0b\\x32#.tensorflow.serving.InferenceResultB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.inference_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001",
                    "rendered": {
                      "text": "2\\x08\\n\\x06result\\\"s\\n\\x15MultiInferenceRequest\\x12\\x30\\n\\x05tasks\\x18\\x01 \\x03(\\x0b\\x32!.tensorflow.serving.InferenceTask\\x12(\\n\\x05input\\x18\\x02 \\x01(\\x0b\\x32\\x19.tensorflow.serving.Input\\\"N\\n\\x16MultiInferenceResponse\\x12\\x34\\n\\x07results\\x18\\x01 \\x03(\\x0b\\x32#.tensorflow.serving.InferenceResultB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.inference_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001",
                      "markdown": "`2\\x08\\n\\x06result\\\"s\\n\\x15MultiInferenceRequest\\x12\\x30\\n\\x05tasks\\x18\\x01 \\x03(\\x0b\\x32!.tensorflow.serving.InferenceTask\\x12(\\n\\x05input\\x18\\x02 \\x01(\\x0b\\x32\\x19.tensorflow.serving.Input\\\"N\\n\\x16MultiInferenceResponse\\x12\\x34\\n\\x07results\\x18\\x01 \\x03(\\x0b\\x32#.tensorflow.serving.InferenceResultB\\x03\\xf8\\x01\\x01\\x62\\x06proto3')\n\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_serving.apis.inference_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n\n  DESCRIPTOR._options = None\n  DESCRIPTOR._serialized_options = b'\\370\\001\\001`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}