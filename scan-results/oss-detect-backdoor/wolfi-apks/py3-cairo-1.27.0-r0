{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5691,
                  "startColumn": 50,
                  "endLine": 5691,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\nTAG_LINK: str = ...\n\"\"\"\nCreate hyperlink. Link tag attributes are detailed at Links.\n\n.. versionadded:: 1.18.0 Only available with cairo 1.15.10+\n\"\"\"\n",
                    "rendered": {
                      "text": "\nTAG_LINK: str = ...\n\"\"\"\nCreate hyperlink. Link tag attributes are detailed at Links.\n\n.. versionadded:: 1.18.0 Only available with cairo 1.15.10+\n\"\"\"\n",
                      "markdown": "`\nTAG_LINK: str = ...\n\"\"\"\nCreate hyperlink. Link tag attributes are detailed at Links.\n\n.. versionadded:: 1.18.0 Only available with cairo 1.15.10+\n\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5684,
                  "startColumn": 8,
                  "endLine": 5684,
                  "endColumn": 12,
                  "snippet": {
                    "text": "TAG_DEST: str = ...\n\"\"\"\nCreate a destination for a hyperlink. Destination tag attributes are\ndetailed at Destinations.\n\n.. versionadded:: 1.18.0 Only available with cairo 1.15.10+\n\"\"\"\n",
                    "rendered": {
                      "text": "TAG_DEST: str = ...\n\"\"\"\nCreate a destination for a hyperlink. Destination tag attributes are\ndetailed at Destinations.\n\n.. versionadded:: 1.18.0 Only available with cairo 1.15.10+\n\"\"\"\n",
                      "markdown": "`TAG_DEST: str = ...\n\"\"\"\nCreate a destination for a hyperlink. Destination tag attributes are\ndetailed at Destinations.\n\n.. versionadded:: 1.18.0 Only available with cairo 1.15.10+\n\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5454,
                  "startColumn": 7,
                  "endLine": 5454,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        :raises cairo.Error:\n\n        Returns the surface at index ``index``. The master surface is\n        at index 0.\n\n        .. versionadded:: 1.14\n        \"\"\"\n",
                    "rendered": {
                      "text": "        :raises cairo.Error:\n\n        Returns the surface at index ``index``. The master surface is\n        at index 0.\n\n        .. versionadded:: 1.14\n        \"\"\"\n",
                      "markdown": "`        :raises cairo.Error:\n\n        Returns the surface at index ``index``. The master surface is\n        at index 0.\n\n        .. versionadded:: 1.14\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5453,
                  "startColumn": 27,
                  "endLine": 5453,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        :param index:\n        :raises cairo.Error:\n\n        Returns the surface at index ``index``. The master surface is\n        at index 0.\n\n        .. versionadded:: 1.14\n",
                    "rendered": {
                      "text": "        :param index:\n        :raises cairo.Error:\n\n        Returns the surface at index ``index``. The master surface is\n        at index 0.\n\n        .. versionadded:: 1.14\n",
                      "markdown": "`        :param index:\n        :raises cairo.Error:\n\n        Returns the surface at index ``index``. The master surface is\n        at index 0.\n\n        .. versionadded:: 1.14\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5133,
                  "startColumn": 18,
                  "endLine": 5133,
                  "endColumn": 22,
                  "snippet": {
                    "text": "        :param rectangle: or None to record unbounded operations.\n\n        Creates a *RecordingSurface* which can be used to record all drawing\n        operations at the highest level (that is, the level of paint, mask, stroke,\n        fill and show_text_glyphs). The *RecordingSurface* can then be \"replayed\"\n        against any target surface by using it as a source to drawing operations.\n\n",
                    "rendered": {
                      "text": "        :param rectangle: or None to record unbounded operations.\n\n        Creates a *RecordingSurface* which can be used to record all drawing\n        operations at the highest level (that is, the level of paint, mask, stroke,\n        fill and show_text_glyphs). The *RecordingSurface* can then be \"replayed\"\n        against any target surface by using it as a source to drawing operations.\n\n",
                      "markdown": "`        :param rectangle: or None to record unbounded operations.\n\n        Creates a *RecordingSurface* which can be used to record all drawing\n        operations at the highest level (that is, the level of paint, mask, stroke,\n        fill and show_text_glyphs). The *RecordingSurface* can then be \"replayed\"\n        against any target surface by using it as a source to drawing operations.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5100,
                  "startColumn": 73,
                  "endLine": 5100,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\nclass RecordingSurface(Surface):\n    \"\"\"\n    A *RecordingSurface* is a surface that records all drawing operations at the\n    highest level of the surface backend interface, (that is, the level of paint,\n    mask, stroke, fill, and show_text_glyphs). The recording surface can then be\n    \"replayed\" against any target surface by using it as a source surface.\n",
                    "rendered": {
                      "text": "\nclass RecordingSurface(Surface):\n    \"\"\"\n    A *RecordingSurface* is a surface that records all drawing operations at the\n    highest level of the surface backend interface, (that is, the level of paint,\n    mask, stroke, fill, and show_text_glyphs). The recording surface can then be\n    \"replayed\" against any target surface by using it as a source surface.\n",
                      "markdown": "`\nclass RecordingSurface(Surface):\n    \"\"\"\n    A *RecordingSurface* is a surface that records all drawing operations at the\n    highest level of the surface backend interface, (that is, the level of paint,\n    mask, stroke, fill, and show_text_glyphs). The recording surface can then be\n    \"replayed\" against any target surface by using it as a source surface.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5048,
                  "startColumn": 58,
                  "endLine": 5048,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\n        The acquire callback should create a surface (preferably an image\n        surface created to match the target using\n        :meth:`Surface.create_similar_image`) that defines at least the region\n        of interest specified by extents. The surface is allowed to be the\n        entire sample area, but if it does contain a subsection of the sample\n        area, the surface extents should be provided by setting the device\n",
                    "rendered": {
                      "text": "\n        The acquire callback should create a surface (preferably an image\n        surface created to match the target using\n        :meth:`Surface.create_similar_image`) that defines at least the region\n        of interest specified by extents. The surface is allowed to be the\n        entire sample area, but if it does contain a subsection of the sample\n        area, the surface extents should be provided by setting the device\n",
                      "markdown": "`\n        The acquire callback should create a surface (preferably an image\n        surface created to match the target using\n        :meth:`Surface.create_similar_image`) that defines at least the region\n        of interest specified by extents. The surface is allowed to be the\n        entire sample area, but if it does contain a subsection of the sample\n        area, the surface extents should be provided by setting the device\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5004,
                  "startColumn": 51,
                  "endLine": 5004,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    images and decompress sources on the fly and discard old ones to conserve\n    memory.\n\n    For the raster source to be effective, you must at least specify the acquire\n    and release callbacks which are used to retrieve the pixel data for the region\n    of interest and demark when it can be freed afterwards. Other callbacks are\n    provided for when the pattern is copied temporarily during rasterisation, or\n",
                    "rendered": {
                      "text": "    images and decompress sources on the fly and discard old ones to conserve\n    memory.\n\n    For the raster source to be effective, you must at least specify the acquire\n    and release callbacks which are used to retrieve the pixel data for the region\n    of interest and demark when it can be freed afterwards. Other callbacks are\n    provided for when the pattern is copied temporarily during rasterisation, or\n",
                      "markdown": "`    images and decompress sources on the fly and discard old ones to conserve\n    memory.\n\n    For the raster source to be effective, you must at least specify the acquire\n    and release callbacks which are used to retrieve the pixel data for the region\n    of interest and demark when it can be freed afterwards. Other callbacks are\n    provided for when the pattern is copied temporarily during rasterisation, or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4998,
                  "startColumn": 37,
                  "endLine": 4998,
                  "endColumn": 41,
                  "snippet": {
                    "text": "class RasterSourcePattern(Pattern):\n    \"\"\"\n    The raster source provides the ability to supply arbitrary pixel data whilst\n    rendering. The pixels are queried at the time of rasterisation by means of\n    user callback functions, allowing for the ultimate flexibility. For example,\n    in handling compressed image sources, you may keep a MRU cache of decompressed\n    images and decompress sources on the fly and discard old ones to conserve\n",
                    "rendered": {
                      "text": "class RasterSourcePattern(Pattern):\n    \"\"\"\n    The raster source provides the ability to supply arbitrary pixel data whilst\n    rendering. The pixels are queried at the time of rasterisation by means of\n    user callback functions, allowing for the ultimate flexibility. For example,\n    in handling compressed image sources, you may keep a MRU cache of decompressed\n    images and decompress sources on the fly and discard old ones to conserve\n",
                      "markdown": "`class RasterSourcePattern(Pattern):\n    \"\"\"\n    The raster source provides the ability to supply arbitrary pixel data whilst\n    rendering. The pixels are queried at the time of rasterisation by means of\n    user callback functions, allowing for the ultimate flexibility. For example,\n    in handling compressed image sources, you may keep a MRU cache of decompressed\n    images and decompress sources on the fly and discard old ones to conserve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4938,
                  "startColumn": 35,
                  "endLine": 4938,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        file. See :class:`SVGUnit` for a list of available unit values that can\n        be used here.\n\n        This function can be called at any time before generating the SVG file.\n\n        However to minimize the risk of ambiguities it's recommended to call it\n        before any drawing operations have been performed on the given surface,\n",
                    "rendered": {
                      "text": "        file. See :class:`SVGUnit` for a list of available unit values that can\n        be used here.\n\n        This function can be called at any time before generating the SVG file.\n\n        However to minimize the risk of ambiguities it's recommended to call it\n        before any drawing operations have been performed on the given surface,\n",
                      "markdown": "`        file. See :class:`SVGUnit` for a list of available unit values that can\n        be used here.\n\n        This function can be called at any time before generating the SVG file.\n\n        However to minimize the risk of ambiguities it's recommended to call it\n        before any drawing operations have been performed on the given surface,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4740,
                  "startColumn": 16,
                  "endLine": 4740,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        the first page of any surface. After a call to :meth:`Context.show_page`\n        or :meth:`Context.copy_page` comments are unambiguously directed to the\n        PageSetup section of the current page. But it doesn't hurt to call this\n        function at the beginning of every page as that consistency may make the\n        calling code simpler.\n\n        As a final note, cairo automatically generates several comments on\n",
                    "rendered": {
                      "text": "        the first page of any surface. After a call to :meth:`Context.show_page`\n        or :meth:`Context.copy_page` comments are unambiguously directed to the\n        PageSetup section of the current page. But it doesn't hurt to call this\n        function at the beginning of every page as that consistency may make the\n        calling code simpler.\n\n        As a final note, cairo automatically generates several comments on\n",
                      "markdown": "`        the first page of any surface. After a call to :meth:`Context.show_page`\n        or :meth:`Context.copy_page` comments are unambiguously directed to the\n        PageSetup section of the current page. But it doesn't hurt to call this\n        function at the beginning of every page as that consistency may make the\n        calling code simpler.\n\n        As a final note, cairo automatically generates several comments on\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4686,
                  "startColumn": 38,
                  "endLine": 4686,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        This function indicates that subsequent calls to :meth:`.dsc_comment`\n        should direct comments to the Setup section of the PostScript output.\n\n        This function should be called at most once per surface, and must be\n        called before any call to :meth:`.dsc_begin_page_setup` and before any\n        drawing is performed to the surface.\n\n",
                    "rendered": {
                      "text": "        This function indicates that subsequent calls to :meth:`.dsc_comment`\n        should direct comments to the Setup section of the PostScript output.\n\n        This function should be called at most once per surface, and must be\n        called before any call to :meth:`.dsc_begin_page_setup` and before any\n        drawing is performed to the surface.\n\n",
                      "markdown": "`        This function indicates that subsequent calls to :meth:`.dsc_comment`\n        should direct comments to the Setup section of the PostScript output.\n\n        This function should be called at most once per surface, and must be\n        called before any call to :meth:`.dsc_begin_page_setup` and before any\n        drawing is performed to the surface.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4445,
                  "startColumn": 67,
                  "endLine": 4446,
                  "snippet": {
                    "text": "\n        Set an internal control point of the current patch.\n\n        Valid values for point_num are from 0 to 3 and identify the control\n        points as explained in :class:`MeshPattern`.\n        \"\"\"\n\n    def set_corner_color_rgb(self, corner_num: int, red: float, green: float, blue: float) -> None:\n",
                    "rendered": {
                      "text": "\n        Set an internal control point of the current patch.\n\n        Valid values for point_num are from 0 to 3 and identify the control\n        points as explained in :class:`MeshPattern`.\n        \"\"\"\n\n    def set_corner_color_rgb(self, corner_num: int, red: float, green: float, blue: float) -> None:\n",
                      "markdown": "`\n        Set an internal control point of the current patch.\n\n        Valid values for point_num are from 0 to 3 and identify the control\n        points as explained in :class:`MeshPattern`.\n        \"\"\"\n\n    def set_corner_color_rgb(self, corner_num: int, red: float, green: float, blue: float) -> None:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4443,
                  "startColumn": 23,
                  "endLine": 4443,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        :param y: the Y coordinate of the control point\n        :raises Error:\n\n        Set an internal control point of the current patch.\n\n        Valid values for point_num are from 0 to 3 and identify the control\n        points as explained in :class:`MeshPattern`.\n",
                    "rendered": {
                      "text": "        :param y: the Y coordinate of the control point\n        :raises Error:\n\n        Set an internal control point of the current patch.\n\n        Valid values for point_num are from 0 to 3 and identify the control\n        points as explained in :class:`MeshPattern`.\n",
                      "markdown": "`        :param y: the Y coordinate of the control point\n        :raises Error:\n\n        Set an internal control point of the current patch.\n\n        Valid values for point_num are from 0 to 3 and identify the control\n        points as explained in :class:`MeshPattern`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4440,
                  "startColumn": 41,
                  "endLine": 4440,
                  "endColumn": 50,
                  "snippet": {
                    "text": "        \"\"\"\n        :param point_num: the control point to set the position for\n        :param x: the X coordinate of the control point\n        :param y: the Y coordinate of the control point\n        :raises Error:\n\n        Set an internal control point of the current patch.\n",
                    "rendered": {
                      "text": "        \"\"\"\n        :param point_num: the control point to set the position for\n        :param x: the X coordinate of the control point\n        :param y: the Y coordinate of the control point\n        :raises Error:\n\n        Set an internal control point of the current patch.\n",
                      "markdown": "`        \"\"\"\n        :param point_num: the control point to set the position for\n        :param x: the X coordinate of the control point\n        :param y: the Y coordinate of the control point\n        :raises Error:\n\n        Set an internal control point of the current patch.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4439,
                  "startColumn": 41,
                  "endLine": 4439,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    def set_control_point(self, point_num: int, x: float, y: float) -> None:\n        \"\"\"\n        :param point_num: the control point to set the position for\n        :param x: the X coordinate of the control point\n        :param y: the Y coordinate of the control point\n        :raises Error:\n\n",
                    "rendered": {
                      "text": "    def set_control_point(self, point_num: int, x: float, y: float) -> None:\n        \"\"\"\n        :param point_num: the control point to set the position for\n        :param x: the X coordinate of the control point\n        :param y: the Y coordinate of the control point\n        :raises Error:\n\n",
                      "markdown": "`    def set_control_point(self, point_num: int, x: float, y: float) -> None:\n        \"\"\"\n        :param point_num: the control point to set the position for\n        :param x: the X coordinate of the control point\n        :param y: the Y coordinate of the control point\n        :raises Error:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4438,
                  "startColumn": 29,
                  "endLine": 4438,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n    def set_control_point(self, point_num: int, x: float, y: float) -> None:\n        \"\"\"\n        :param point_num: the control point to set the position for\n        :param x: the X coordinate of the control point\n        :param y: the Y coordinate of the control point\n        :raises Error:\n",
                    "rendered": {
                      "text": "\n    def set_control_point(self, point_num: int, x: float, y: float) -> None:\n        \"\"\"\n        :param point_num: the control point to set the position for\n        :param x: the X coordinate of the control point\n        :param y: the Y coordinate of the control point\n        :raises Error:\n",
                      "markdown": "`\n    def set_control_point(self, point_num: int, x: float, y: float) -> None:\n        \"\"\"\n        :param point_num: the control point to set the position for\n        :param x: the X coordinate of the control point\n        :param y: the Y coordinate of the control point\n        :raises Error:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4378,
                  "startColumn": 71,
                  "endLine": 4379,
                  "snippet": {
                    "text": "        ``patch_num`` can range from 0 to n-1 where n is the number returned\n        by :meth:`get_patch_count`.\n\n        Valid values for ``point_num`` are from 0 to 3 and identify the control\n        points as explained in :class:`MeshPattern`.\n        \"\"\"\n\n    def get_corner_color_rgba(self, patch_num: int, corner_num: int) -> Tuple[float, float, float, float]:\n",
                    "rendered": {
                      "text": "        ``patch_num`` can range from 0 to n-1 where n is the number returned\n        by :meth:`get_patch_count`.\n\n        Valid values for ``point_num`` are from 0 to 3 and identify the control\n        points as explained in :class:`MeshPattern`.\n        \"\"\"\n\n    def get_corner_color_rgba(self, patch_num: int, corner_num: int) -> Tuple[float, float, float, float]:\n",
                      "markdown": "`        ``patch_num`` can range from 0 to n-1 where n is the number returned\n        by :meth:`get_patch_count`.\n\n        Valid values for ``point_num`` are from 0 to 3 and identify the control\n        points as explained in :class:`MeshPattern`.\n        \"\"\"\n\n    def get_corner_color_rgba(self, patch_num: int, corner_num: int) -> Tuple[float, float, float, float]:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4372,
                  "startColumn": 16,
                  "endLine": 4372,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        :returns: a (x, y) tuple of float - coordinates of the control point\n        :raises Error:\n\n        Gets the control point point_num of patch patch_num for a mesh\n        pattern.\n\n        ``patch_num`` can range from 0 to n-1 where n is the number returned\n",
                    "rendered": {
                      "text": "        :returns: a (x, y) tuple of float - coordinates of the control point\n        :raises Error:\n\n        Gets the control point point_num of patch patch_num for a mesh\n        pattern.\n\n        ``patch_num`` can range from 0 to n-1 where n is the number returned\n",
                      "markdown": "`        :returns: a (x, y) tuple of float - coordinates of the control point\n        :raises Error:\n\n        Gets the control point point_num of patch patch_num for a mesh\n        pattern.\n\n        ``patch_num`` can range from 0 to n-1 where n is the number returned\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4369,
                  "startColumn": 62,
                  "endLine": 4369,
                  "endColumn": 71,
                  "snippet": {
                    "text": "        \"\"\"\n        :param patch_num: the patch number to return data for\n        :param point_num: he control point number to return data for\n        :returns: a (x, y) tuple of float - coordinates of the control point\n        :raises Error:\n\n        Gets the control point point_num of patch patch_num for a mesh\n",
                    "rendered": {
                      "text": "        \"\"\"\n        :param patch_num: the patch number to return data for\n        :param point_num: he control point number to return data for\n        :returns: a (x, y) tuple of float - coordinates of the control point\n        :raises Error:\n\n        Gets the control point point_num of patch patch_num for a mesh\n",
                      "markdown": "`        \"\"\"\n        :param patch_num: the patch number to return data for\n        :param point_num: he control point number to return data for\n        :returns: a (x, y) tuple of float - coordinates of the control point\n        :raises Error:\n\n        Gets the control point point_num of patch patch_num for a mesh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4368,
                  "startColumn": 28,
                  "endLine": 4368,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    def get_control_point(self, patch_num: int, point_num: int) -> Tuple[float, float]:\n        \"\"\"\n        :param patch_num: the patch number to return data for\n        :param point_num: he control point number to return data for\n        :returns: a (x, y) tuple of float - coordinates of the control point\n        :raises Error:\n\n",
                    "rendered": {
                      "text": "    def get_control_point(self, patch_num: int, point_num: int) -> Tuple[float, float]:\n        \"\"\"\n        :param patch_num: the patch number to return data for\n        :param point_num: he control point number to return data for\n        :returns: a (x, y) tuple of float - coordinates of the control point\n        :raises Error:\n\n",
                      "markdown": "`    def get_control_point(self, patch_num: int, point_num: int) -> Tuple[float, float]:\n        \"\"\"\n        :param patch_num: the patch number to return data for\n        :param point_num: he control point number to return data for\n        :returns: a (x, y) tuple of float - coordinates of the control point\n        :raises Error:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4345,
                  "startColumn": 29,
                  "endLine": 4345,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n        Adds a cubic Bézier spline to the current patch from the current point\n        to position (x3 , y3 ) in pattern-space coordinates, using (x1 , y1 )\n        and (x2 , y2 ) as the control points.\n\n        If the current patch has no current point before the call to\n        :meth:`curve_to`, this function will behave as if\n",
                    "rendered": {
                      "text": "\n        Adds a cubic Bézier spline to the current patch from the current point\n        to position (x3 , y3 ) in pattern-space coordinates, using (x1 , y1 )\n        and (x2 , y2 ) as the control points.\n\n        If the current patch has no current point before the call to\n        :meth:`curve_to`, this function will behave as if\n",
                      "markdown": "`\n        Adds a cubic Bézier spline to the current patch from the current point\n        to position (x3 , y3 ) in pattern-space coordinates, using (x1 , y1 )\n        and (x2 , y2 ) as the control points.\n\n        If the current patch has no current point before the call to\n        :meth:`curve_to`, this function will behave as if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4338,
                  "startColumn": 49,
                  "endLine": 4338,
                  "endColumn": 58,
                  "snippet": {
                    "text": "        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n        :param y3: the Y coordinate of the end of the curve\n        :raises Error:\n",
                    "rendered": {
                      "text": "        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n        :param y3: the Y coordinate of the end of the curve\n        :raises Error:\n",
                      "markdown": "`        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n        :param y3: the Y coordinate of the end of the curve\n        :raises Error:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4337,
                  "startColumn": 49,
                  "endLine": 4337,
                  "endColumn": 58,
                  "snippet": {
                    "text": "        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n        :param y3: the Y coordinate of the end of the curve\n",
                    "rendered": {
                      "text": "        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n        :param y3: the Y coordinate of the end of the curve\n",
                      "markdown": "`        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n        :param y3: the Y coordinate of the end of the curve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4336,
                  "startColumn": 48,
                  "endLine": 4336,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    def curve_to(self, x1: float, y1: float, x2: float, y2: float, x3: float, y3: float) -> None:\n        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n",
                    "rendered": {
                      "text": "    def curve_to(self, x1: float, y1: float, x2: float, y2: float, x3: float, y3: float) -> None:\n        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n",
                      "markdown": "`    def curve_to(self, x1: float, y1: float, x2: float, y2: float, x3: float, y3: float) -> None:\n        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4335,
                  "startColumn": 48,
                  "endLine": 4335,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n    def curve_to(self, x1: float, y1: float, x2: float, y2: float, x3: float, y3: float) -> None:\n        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n",
                    "rendered": {
                      "text": "\n    def curve_to(self, x1: float, y1: float, x2: float, y2: float, x3: float, y3: float) -> None:\n        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n",
                      "markdown": "`\n    def curve_to(self, x1: float, y1: float, x2: float, y2: float, x3: float, y3: float) -> None:\n        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4246,
                  "startColumn": 47,
                  "endLine": 4246,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n    Patches may be oriented differently to the above diagram. For example the\n    first point could be at the top left. The diagram only shows the\n    relationship between the sides, corners and control points. Regardless of\n    where the first point is located, when specifying colors, corner 0 will\n    always be the first point, corner 1 the point between side 0 and side 1\n    etc.\n",
                    "rendered": {
                      "text": "\n    Patches may be oriented differently to the above diagram. For example the\n    first point could be at the top left. The diagram only shows the\n    relationship between the sides, corners and control points. Regardless of\n    where the first point is located, when specifying colors, corner 0 will\n    always be the first point, corner 1 the point between side 0 and side 1\n    etc.\n",
                      "markdown": "`\n    Patches may be oriented differently to the above diagram. For example the\n    first point could be at the top left. The diagram only shows the\n    relationship between the sides, corners and control points. Regardless of\n    where the first point is located, when specifying colors, corner 0 will\n    always be the first point, corner 1 the point between side 0 and side 1\n    etc.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4245,
                  "startColumn": 24,
                  "endLine": 4245,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    side have the same color, the patch is a Gouraud-shaded triangle.\n\n    Patches may be oriented differently to the above diagram. For example the\n    first point could be at the top left. The diagram only shows the\n    relationship between the sides, corners and control points. Regardless of\n    where the first point is located, when specifying colors, corner 0 will\n    always be the first point, corner 1 the point between side 0 and side 1\n",
                    "rendered": {
                      "text": "    side have the same color, the patch is a Gouraud-shaded triangle.\n\n    Patches may be oriented differently to the above diagram. For example the\n    first point could be at the top left. The diagram only shows the\n    relationship between the sides, corners and control points. Regardless of\n    where the first point is located, when specifying colors, corner 0 will\n    always be the first point, corner 1 the point between side 0 and side 1\n",
                      "markdown": "`    side have the same color, the patch is a Gouraud-shaded triangle.\n\n    Patches may be oriented differently to the above diagram. For example the\n    first point could be at the top left. The diagram only shows the\n    relationship between the sides, corners and control points. Regardless of\n    where the first point is located, when specifying colors, corner 0 will\n    always be the first point, corner 1 the point between side 0 and side 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4238,
                  "startColumn": 70,
                  "endLine": 4239,
                  "snippet": {
                    "text": "    for a Coons patch, i.e. if no control points are specified the patch is a\n    Coons patch.\n\n    A triangle is a special case of the tensor-product patch where the control\n    points are implicitly defined by the sides of the patch, all the sides are\n    lines and one of them has length 0, i.e. if the patch is specified using\n    just 3 lines, it is a triangle. If the corners connected by the 0-length\n    side have the same color, the patch is a Gouraud-shaded triangle.\n",
                    "rendered": {
                      "text": "    for a Coons patch, i.e. if no control points are specified the patch is a\n    Coons patch.\n\n    A triangle is a special case of the tensor-product patch where the control\n    points are implicitly defined by the sides of the patch, all the sides are\n    lines and one of them has length 0, i.e. if the patch is specified using\n    just 3 lines, it is a triangle. If the corners connected by the 0-length\n    side have the same color, the patch is a Gouraud-shaded triangle.\n",
                      "markdown": "`    for a Coons patch, i.e. if no control points are specified the patch is a\n    Coons patch.\n\n    A triangle is a special case of the tensor-product patch where the control\n    points are implicitly defined by the sides of the patch, all the sides are\n    lines and one of them has length 0, i.e. if the patch is specified using\n    just 3 lines, it is a triangle. If the corners connected by the 0-length\n    side have the same color, the patch is a Gouraud-shaded triangle.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4235,
                  "startColumn": 33,
                  "endLine": 4235,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    A Coons patch is a special case of the tensor-product patch where the\n    control points are implicitly defined by the sides of the patch. The\n    default value for any control point not specified is the implicit value\n    for a Coons patch, i.e. if no control points are specified the patch is a\n    Coons patch.\n\n    A triangle is a special case of the tensor-product patch where the control\n",
                    "rendered": {
                      "text": "    A Coons patch is a special case of the tensor-product patch where the\n    control points are implicitly defined by the sides of the patch. The\n    default value for any control point not specified is the implicit value\n    for a Coons patch, i.e. if no control points are specified the patch is a\n    Coons patch.\n\n    A triangle is a special case of the tensor-product patch where the control\n",
                      "markdown": "`    A Coons patch is a special case of the tensor-product patch where the\n    control points are implicitly defined by the sides of the patch. The\n    default value for any control point not specified is the implicit value\n    for a Coons patch, i.e. if no control points are specified the patch is a\n    Coons patch.\n\n    A triangle is a special case of the tensor-product patch where the control\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4234,
                  "startColumn": 25,
                  "endLine": 4234,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n    A Coons patch is a special case of the tensor-product patch where the\n    control points are implicitly defined by the sides of the patch. The\n    default value for any control point not specified is the implicit value\n    for a Coons patch, i.e. if no control points are specified the patch is a\n    Coons patch.\n\n",
                    "rendered": {
                      "text": "\n    A Coons patch is a special case of the tensor-product patch where the\n    control points are implicitly defined by the sides of the patch. The\n    default value for any control point not specified is the implicit value\n    for a Coons patch, i.e. if no control points are specified the patch is a\n    Coons patch.\n\n",
                      "markdown": "`\n    A Coons patch is a special case of the tensor-product patch where the\n    control points are implicitly defined by the sides of the patch. The\n    default value for any control point not specified is the implicit value\n    for a Coons patch, i.e. if no control points are specified the patch is a\n    Coons patch.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4233,
                  "startColumn": 3,
                  "endLine": 4233,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    whose color is not explicitly specified defaults to transparent black.\n\n    A Coons patch is a special case of the tensor-product patch where the\n    control points are implicitly defined by the sides of the patch. The\n    default value for any control point not specified is the implicit value\n    for a Coons patch, i.e. if no control points are specified the patch is a\n    Coons patch.\n",
                    "rendered": {
                      "text": "    whose color is not explicitly specified defaults to transparent black.\n\n    A Coons patch is a special case of the tensor-product patch where the\n    control points are implicitly defined by the sides of the patch. The\n    default value for any control point not specified is the implicit value\n    for a Coons patch, i.e. if no control points are specified the patch is a\n    Coons patch.\n",
                      "markdown": "`    whose color is not explicitly specified defaults to transparent black.\n\n    A Coons patch is a special case of the tensor-product patch where the\n    control points are implicitly defined by the sides of the patch. The\n    default value for any control point not specified is the implicit value\n    for a Coons patch, i.e. if no control points are specified the patch is a\n    Coons patch.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4228,
                  "startColumn": 3,
                  "endLine": 4228,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    The four additional control points (P0, P1, P2, P3) in a patch can be\n    specified with :meth:`set_control_point`.\n\n    At each corner of the patch (C0, C1, C2, C3) a color may be specified with\n    :meth:`set_corner_color_rgb` or :meth:`set_corner_color_rgba`. Any corner\n    whose color is not explicitly specified defaults to transparent black.\n\n",
                    "rendered": {
                      "text": "    The four additional control points (P0, P1, P2, P3) in a patch can be\n    specified with :meth:`set_control_point`.\n\n    At each corner of the patch (C0, C1, C2, C3) a color may be specified with\n    :meth:`set_corner_color_rgb` or :meth:`set_corner_color_rgba`. Any corner\n    whose color is not explicitly specified defaults to transparent black.\n\n",
                      "markdown": "`    The four additional control points (P0, P1, P2, P3) in a patch can be\n    specified with :meth:`set_control_point`.\n\n    At each corner of the patch (C0, C1, C2, C3) a color may be specified with\n    :meth:`set_corner_color_rgb` or :meth:`set_corner_color_rgba`. Any corner\n    whose color is not explicitly specified defaults to transparent black.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4225,
                  "startColumn": 23,
                  "endLine": 4225,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    :meth:`move_to` to specify the first point in the patch (C0). Then the\n    sides are specified with calls to :meth:`curve_to` and :meth:`line_to`.\n\n    The four additional control points (P0, P1, P2, P3) in a patch can be\n    specified with :meth:`set_control_point`.\n\n    At each corner of the patch (C0, C1, C2, C3) a color may be specified with\n",
                    "rendered": {
                      "text": "    :meth:`move_to` to specify the first point in the patch (C0). Then the\n    sides are specified with calls to :meth:`curve_to` and :meth:`line_to`.\n\n    The four additional control points (P0, P1, P2, P3) in a patch can be\n    specified with :meth:`set_control_point`.\n\n    At each corner of the patch (C0, C1, C2, C3) a color may be specified with\n",
                      "markdown": "`    :meth:`move_to` to specify the first point in the patch (C0). Then the\n    sides are specified with calls to :meth:`curve_to` and :meth:`line_to`.\n\n    The four additional control points (P0, P1, P2, P3) in a patch can be\n    specified with :meth:`set_control_point`.\n\n    At each corner of the patch (C0, C1, C2, C3) a color may be specified with\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4200,
                  "startColumn": 3,
                  "endLine": 4200,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n    A tensor-product patch is defined by 4 Bézier curves (side 0, 1, 2, 3) and\n    by 4 additional control points (P0, P1, P2, P3) that provide further\n    control over the patch and complete the definition of the tensor-product\n    patch. The corner C0 is the first point of the patch.\n\n    Degenerate sides are permitted so straight lines may be used. A zero\n",
                    "rendered": {
                      "text": "\n    A tensor-product patch is defined by 4 Bézier curves (side 0, 1, 2, 3) and\n    by 4 additional control points (P0, P1, P2, P3) that provide further\n    control over the patch and complete the definition of the tensor-product\n    patch. The corner C0 is the first point of the patch.\n\n    Degenerate sides are permitted so straight lines may be used. A zero\n",
                      "markdown": "`\n    A tensor-product patch is defined by 4 Bézier curves (side 0, 1, 2, 3) and\n    by 4 additional control points (P0, P1, P2, P3) that provide further\n    control over the patch and complete the definition of the tensor-product\n    patch. The corner C0 is the first point of the patch.\n\n    Degenerate sides are permitted so straight lines may be used. A zero\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4199,
                  "startColumn": 19,
                  "endLine": 4199,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    status with a status of :attr:`cairo.Status.INVALID_MESH_CONSTRUCTION`.\n\n    A tensor-product patch is defined by 4 Bézier curves (side 0, 1, 2, 3) and\n    by 4 additional control points (P0, P1, P2, P3) that provide further\n    control over the patch and complete the definition of the tensor-product\n    patch. The corner C0 is the first point of the patch.\n\n",
                    "rendered": {
                      "text": "    status with a status of :attr:`cairo.Status.INVALID_MESH_CONSTRUCTION`.\n\n    A tensor-product patch is defined by 4 Bézier curves (side 0, 1, 2, 3) and\n    by 4 additional control points (P0, P1, P2, P3) that provide further\n    control over the patch and complete the definition of the tensor-product\n    patch. The corner C0 is the first point of the patch.\n\n",
                      "markdown": "`    status with a status of :attr:`cairo.Status.INVALID_MESH_CONSTRUCTION`.\n\n    A tensor-product patch is defined by 4 Bézier curves (side 0, 1, 2, 3) and\n    by 4 additional control points (P0, P1, P2, P3) that provide further\n    control over the patch and complete the definition of the tensor-product\n    patch. The corner C0 is the first point of the patch.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4131,
                  "startColumn": 26,
                  "endLine": 4131,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n\n        The color is specified in the same way as in :meth:`Context.set_source_rgb`.\n",
                    "rendered": {
                      "text": "        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n\n        The color is specified in the same way as in :meth:`Context.set_source_rgb`.\n",
                      "markdown": "`        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n\n        The color is specified in the same way as in :meth:`Context.set_source_rgb`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4130,
                  "startColumn": 26,
                  "endLine": 4130,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n\n",
                    "rendered": {
                      "text": "\n        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n\n",
                      "markdown": "`\n        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4129,
                  "startColumn": 41,
                  "endLine": 4129,
                  "endColumn": 50,
                  "snippet": {
                    "text": "        :param alpha: alpha component of color\n\n        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n",
                    "rendered": {
                      "text": "        :param alpha: alpha component of color\n\n        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n",
                      "markdown": "`        :param alpha: alpha component of color\n\n        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4108,
                  "startColumn": 26,
                  "endLine": 4108,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n\n        The color is specified in the same way as in :meth:`Context.set_source_rgb`.\n",
                    "rendered": {
                      "text": "        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n\n        The color is specified in the same way as in :meth:`Context.set_source_rgb`.\n",
                      "markdown": "`        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n\n        The color is specified in the same way as in :meth:`Context.set_source_rgb`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4107,
                  "startColumn": 26,
                  "endLine": 4107,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n\n",
                    "rendered": {
                      "text": "\n        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n\n",
                      "markdown": "`\n        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4106,
                  "startColumn": 41,
                  "endLine": 4106,
                  "endColumn": 50,
                  "snippet": {
                    "text": "        :param blue: blue component of color\n\n        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n",
                    "rendered": {
                      "text": "        :param blue: blue component of color\n\n        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n",
                      "markdown": "`        :param blue: blue component of color\n\n        Adds an opaque color stop to a *Gradient* pattern. The offset specifies\n        the location along the gradient's control vector. For example, a\n        *LinearGradient's* control vector is from (x0,y0) to (x1,y1) while a\n        *RadialGradient's* control vector is from any point on the start circle\n        to the corresponding point on the end circle.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4019,
                  "startColumn": 55,
                  "endLine": 4019,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n        Like :meth:`Context.show_text`, After this call the current point is\n        moved to the origin of where the next glyph would be placed in this same\n        progression. That is, the current point will be at the origin of the\n        final glyph offset by its advance values.  This allows for chaining\n        multiple calls to to :meth:`Context.text_path` without having to set\n        current point in between.\n",
                    "rendered": {
                      "text": "\n        Like :meth:`Context.show_text`, After this call the current point is\n        moved to the origin of where the next glyph would be placed in this same\n        progression. That is, the current point will be at the origin of the\n        final glyph offset by its advance values.  This allows for chaining\n        multiple calls to to :meth:`Context.text_path` without having to set\n        current point in between.\n",
                      "markdown": "`\n        Like :meth:`Context.show_text`, After this call the current point is\n        moved to the origin of where the next glyph would be placed in this same\n        progression. That is, the current point will be at the origin of the\n        final glyph offset by its advance values.  This allows for chaining\n        multiple calls to to :meth:`Context.text_path` without having to set\n        current point in between.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3894,
                  "startColumn": 45,
                  "endLine": 3894,
                  "endColumn": 49,
                  "snippet": {
                    "text": "        coordinate as the :meth:`.move_to`. If the cap style is\n        :attr:`cairo.LineCap.ROUND` then these sub-paths will be drawn as\n        circular dots. Note that in the case of :attr:`cairo.LineCap.SQUARE` a\n        degenerate sub-path will not be drawn at all, (since the correct\n        orientation is indeterminate).\n\n        In no case will a cap style of :attr:`cairo.LineCap.BUTT` cause anything\n",
                    "rendered": {
                      "text": "        coordinate as the :meth:`.move_to`. If the cap style is\n        :attr:`cairo.LineCap.ROUND` then these sub-paths will be drawn as\n        circular dots. Note that in the case of :attr:`cairo.LineCap.SQUARE` a\n        degenerate sub-path will not be drawn at all, (since the correct\n        orientation is indeterminate).\n\n        In no case will a cap style of :attr:`cairo.LineCap.BUTT` cause anything\n",
                      "markdown": "`        coordinate as the :meth:`.move_to`. If the cap style is\n        :attr:`cairo.LineCap.ROUND` then these sub-paths will be drawn as\n        circular dots. Note that in the case of :attr:`cairo.LineCap.SQUARE` a\n        degenerate sub-path will not be drawn at all, (since the correct\n        orientation is indeterminate).\n\n        In no case will a cap style of :attr:`cairo.LineCap.BUTT` cause anything\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3830,
                  "startColumn": 29,
                  "endLine": 3830,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n        After this call the current point is moved to the origin of where the\n        next glyph would be placed in this same progression. That is, the\n        current point will be at the origin of the final glyph offset by its\n        advance values. This allows for easy display of a single logical string\n        with multiple calls to :meth:`.show_text`.\n\n",
                    "rendered": {
                      "text": "\n        After this call the current point is moved to the origin of where the\n        next glyph would be placed in this same progression. That is, the\n        current point will be at the origin of the final glyph offset by its\n        advance values. This allows for easy display of a single logical string\n        with multiple calls to :meth:`.show_text`.\n\n",
                      "markdown": "`\n        After this call the current point is moved to the origin of where the\n        next glyph would be placed in this same progression. That is, the\n        current point will be at the origin of the final glyph offset by its\n        advance values. This allows for easy display of a single logical string\n        with multiple calls to :meth:`.show_text`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3824,
                  "startColumn": 51,
                  "endLine": 3824,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        and font_options.\n\n        This function first computes a set of glyphs for the string of text. The\n        first glyph is placed so that its origin is at the current point. The\n        origin of each subsequent glyph is offset from that of the previous\n        glyph by the advance values of the previous glyph.\n\n",
                    "rendered": {
                      "text": "        and font_options.\n\n        This function first computes a set of glyphs for the string of text. The\n        first glyph is placed so that its origin is at the current point. The\n        origin of each subsequent glyph is offset from that of the previous\n        glyph by the advance values of the previous glyph.\n\n",
                      "markdown": "`        and font_options.\n\n        This function first computes a set of glyphs for the string of text. The\n        first glyph is placed so that its origin is at the current point. The\n        origin of each subsequent glyph is offset from that of the previous\n        glyph by the advance values of the previous glyph.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3768,
                  "startColumn": 65,
                  "endLine": 3768,
                  "endColumn": 69,
                  "snippet": {
                    "text": "        :class:`Surface` and setting it as the source in :class:`Context` with\n        :meth:`.set_source`.\n\n        The *x* and *y* parameters give the user-space coordinate at which the\n        surface origin should appear. (The surface origin is its upper-left\n        corner before any transformation has been applied.) The *x* and *y*\n        patterns are negated and then set as translation values in the pattern\n",
                    "rendered": {
                      "text": "        :class:`Surface` and setting it as the source in :class:`Context` with\n        :meth:`.set_source`.\n\n        The *x* and *y* parameters give the user-space coordinate at which the\n        surface origin should appear. (The surface origin is its upper-left\n        corner before any transformation has been applied.) The *x* and *y*\n        patterns are negated and then set as translation values in the pattern\n",
                      "markdown": "`        :class:`Surface` and setting it as the source in :class:`Context` with\n        :meth:`.set_source`.\n\n        The *x* and *y* parameters give the user-space coordinate at which the\n        surface origin should appear. (The surface origin is its upper-left\n        corner before any transformation has been applied.) The *x* and *y*\n        patterns are negated and then set as translation values in the pattern\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3713,
                  "startColumn": 23,
                  "endLine": 3713,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        new source pattern is set.\n\n        Note: The pattern's transformation matrix will be locked to the user\n        space in effect at the time of :meth:`.set_source`. This means that\n        further modifications of the current transformation matrix will not\n        affect the source pattern. See :meth:`Pattern.set_matrix`.\n\n",
                    "rendered": {
                      "text": "        new source pattern is set.\n\n        Note: The pattern's transformation matrix will be locked to the user\n        space in effect at the time of :meth:`.set_source`. This means that\n        further modifications of the current transformation matrix will not\n        affect the source pattern. See :meth:`Pattern.set_matrix`.\n\n",
                      "markdown": "`        new source pattern is set.\n\n        Note: The pattern's transformation matrix will be locked to the user\n        space in effect at the time of :meth:`.set_source`. This means that\n        further modifications of the current transformation matrix will not\n        affect the source pattern. See :meth:`Pattern.set_matrix`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3675,
                  "startColumn": 51,
                  "endLine": 3675,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        The default miter limit value is 10.0, which will convert joins with\n        interior angles less than 11 degrees to bevels instead of miters. For\n        reference, a miter limit of 2.0 makes the miter cutoff at 60 degrees,\n        and a miter limit of 1.414 makes the cutoff at 90 degrees.\n\n        A miter limit for a desired angle can be computed as::\n\n",
                    "rendered": {
                      "text": "        The default miter limit value is 10.0, which will convert joins with\n        interior angles less than 11 degrees to bevels instead of miters. For\n        reference, a miter limit of 2.0 makes the miter cutoff at 60 degrees,\n        and a miter limit of 1.414 makes the cutoff at 90 degrees.\n\n        A miter limit for a desired angle can be computed as::\n\n",
                      "markdown": "`        The default miter limit value is 10.0, which will convert joins with\n        interior angles less than 11 degrees to bevels instead of miters. For\n        reference, a miter limit of 2.0 makes the miter cutoff at 60 degrees,\n        and a miter limit of 1.414 makes the cutoff at 90 degrees.\n\n        A miter limit for a desired angle can be computed as::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3674,
                  "startColumn": 62,
                  "endLine": 3674,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n        The default miter limit value is 10.0, which will convert joins with\n        interior angles less than 11 degrees to bevels instead of miters. For\n        reference, a miter limit of 2.0 makes the miter cutoff at 60 degrees,\n        and a miter limit of 1.414 makes the cutoff at 90 degrees.\n\n        A miter limit for a desired angle can be computed as::\n",
                    "rendered": {
                      "text": "\n        The default miter limit value is 10.0, which will convert joins with\n        interior angles less than 11 degrees to bevels instead of miters. For\n        reference, a miter limit of 2.0 makes the miter cutoff at 60 degrees,\n        and a miter limit of 1.414 makes the cutoff at 90 degrees.\n\n        A miter limit for a desired angle can be computed as::\n",
                      "markdown": "`\n        The default miter limit value is 10.0, which will convert joins with\n        interior angles less than 11 degrees to bevels instead of miters. For\n        reference, a miter limit of 2.0 makes the miter cutoff at 60 degrees,\n        and a miter limit of 1.414 makes the cutoff at 90 degrees.\n\n        A miter limit for a desired angle can be computed as::\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3633,
                  "startColumn": 55,
                  "endLine": 3633,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n        Note: When the description above refers to user space and CTM it refers\n        to the user space and CTM in effect at the time of the stroking\n        operation, not the user space and CTM in effect at the time of the call\n        to :meth:`.set_line_width`. The simplest usage makes both of these\n        spaces identical. That is, if there is no change to the CTM between a\n        call to :meth:`.set_line_width` and the stroking operation, then one can\n",
                    "rendered": {
                      "text": "\n        Note: When the description above refers to user space and CTM it refers\n        to the user space and CTM in effect at the time of the stroking\n        operation, not the user space and CTM in effect at the time of the call\n        to :meth:`.set_line_width`. The simplest usage makes both of these\n        spaces identical. That is, if there is no change to the CTM between a\n        call to :meth:`.set_line_width` and the stroking operation, then one can\n",
                      "markdown": "`\n        Note: When the description above refers to user space and CTM it refers\n        to the user space and CTM in effect at the time of the stroking\n        operation, not the user space and CTM in effect at the time of the call\n        to :meth:`.set_line_width`. The simplest usage makes both of these\n        spaces identical. That is, if there is no change to the CTM between a\n        call to :meth:`.set_line_width` and the stroking operation, then one can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3632,
                  "startColumn": 43,
                  "endLine": 3632,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        scaling/shear/rotation of the CTM).\n\n        Note: When the description above refers to user space and CTM it refers\n        to the user space and CTM in effect at the time of the stroking\n        operation, not the user space and CTM in effect at the time of the call\n        to :meth:`.set_line_width`. The simplest usage makes both of these\n        spaces identical. That is, if there is no change to the CTM between a\n",
                    "rendered": {
                      "text": "        scaling/shear/rotation of the CTM).\n\n        Note: When the description above refers to user space and CTM it refers\n        to the user space and CTM in effect at the time of the stroking\n        operation, not the user space and CTM in effect at the time of the call\n        to :meth:`.set_line_width`. The simplest usage makes both of these\n        spaces identical. That is, if there is no change to the CTM between a\n",
                      "markdown": "`        scaling/shear/rotation of the CTM).\n\n        Note: When the description above refers to user space and CTM it refers\n        to the user space and CTM in effect at the time of the stroking\n        operation, not the user space and CTM in effect at the time of the call\n        to :meth:`.set_line_width`. The simplest usage makes both of these\n        spaces identical. That is, if there is no change to the CTM between a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3584,
                  "startColumn": 42,
                  "endLine": 3584,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        - svg: Encoded as 1px non-scaling-stroke.\n        - script: Encoded with set-hairline function.\n\n        Cairo will always render hairlines at 1 device unit wide, even if an\n        anisotropic scaling was applied to the stroke width. In the wild,\n        handling of this situation is not well-defined. Some PDF, PS, and SVG\n        renderers match Cairo's output, but some very popular implementations\n",
                    "rendered": {
                      "text": "        - svg: Encoded as 1px non-scaling-stroke.\n        - script: Encoded with set-hairline function.\n\n        Cairo will always render hairlines at 1 device unit wide, even if an\n        anisotropic scaling was applied to the stroke width. In the wild,\n        handling of this situation is not well-defined. Some PDF, PS, and SVG\n        renderers match Cairo's output, but some very popular implementations\n",
                      "markdown": "`        - svg: Encoded as 1px non-scaling-stroke.\n        - script: Encoded with set-hairline function.\n\n        Cairo will always render hairlines at 1 device unit wide, even if an\n        anisotropic scaling was applied to the stroke width. In the wild,\n        handling of this situation is not well-defined. Some PDF, PS, and SVG\n        renderers match Cairo's output, but some very popular implementations\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3574,
                  "startColumn": 49,
                  "endLine": 3574,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        :param set_hairline: whether or not to set hairline mode\n\n        Sets lines within the cairo context to be hairlines. Hairlines are\n        logically zero-width lines that are drawn at the thinnest renderable\n        width possible in the current context. On surfaces with native hairline\n        support, the native hairline functionality will be used. Surfaces that\n        support hairlines include:\n",
                    "rendered": {
                      "text": "        :param set_hairline: whether or not to set hairline mode\n\n        Sets lines within the cairo context to be hairlines. Hairlines are\n        logically zero-width lines that are drawn at the thinnest renderable\n        width possible in the current context. On surfaces with native hairline\n        support, the native hairline functionality will be used. Surfaces that\n        support hairlines include:\n",
                      "markdown": "`        :param set_hairline: whether or not to set hairline mode\n\n        Sets lines within the cairo context to be hairlines. Hairlines are\n        logically zero-width lines that are drawn at the thinnest renderable\n        width possible in the current context. On surfaces with native hairline\n        support, the native hairline functionality will be used. Surfaces that\n        support hairlines include:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3501,
                  "startColumn": 71,
                  "endLine": 3501,
                  "endColumn": 75,
                  "snippet": {
                    "text": "        in order to distributed dots or squares along a path.\n\n        Note: The length values are in user-space units as evaluated at the time\n        of stroking. This is not necessarily the same as the user space at the\n        time of :meth:`.set_dash`.\n\n        If the number of dashes is 0 dashing is disabled.\n",
                    "rendered": {
                      "text": "        in order to distributed dots or squares along a path.\n\n        Note: The length values are in user-space units as evaluated at the time\n        of stroking. This is not necessarily the same as the user space at the\n        time of :meth:`.set_dash`.\n\n        If the number of dashes is 0 dashing is disabled.\n",
                      "markdown": "`        in order to distributed dots or squares along a path.\n\n        Note: The length values are in user-space units as evaluated at the time\n        of stroking. This is not necessarily the same as the user space at the\n        time of :meth:`.set_dash`.\n\n        If the number of dashes is 0 dashing is disabled.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3500,
                  "startColumn": 68,
                  "endLine": 3500,
                  "endColumn": 72,
                  "snippet": {
                    "text": "        0.0 with :attr:`cairo.LineCap.ROUND` or :attr:`cairo.LineCap.SQUARE`\n        in order to distributed dots or squares along a path.\n\n        Note: The length values are in user-space units as evaluated at the time\n        of stroking. This is not necessarily the same as the user space at the\n        time of :meth:`.set_dash`.\n\n",
                    "rendered": {
                      "text": "        0.0 with :attr:`cairo.LineCap.ROUND` or :attr:`cairo.LineCap.SQUARE`\n        in order to distributed dots or squares along a path.\n\n        Note: The length values are in user-space units as evaluated at the time\n        of stroking. This is not necessarily the same as the user space at the\n        time of :meth:`.set_dash`.\n\n",
                      "markdown": "`        0.0 with :attr:`cairo.LineCap.ROUND` or :attr:`cairo.LineCap.SQUARE`\n        in order to distributed dots or squares along a path.\n\n        Note: The length values are in user-space units as evaluated at the time\n        of stroking. This is not necessarily the same as the user space at the\n        time of :meth:`.set_dash`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3492,
                  "startColumn": 65,
                  "endLine": 3492,
                  "endColumn": 69,
                  "snippet": {
                    "text": "        Sets the dash pattern to be used by :meth:`.stroke`. A dash pattern is\n        specified by *dashes* - a sequence of positive values. Each value\n        provides the length of alternate \"on\" and \"off\" portions of the\n        stroke. The *offset* specifies an offset into the pattern at which the\n        stroke begins.\n\n        Each \"on\" segment will have caps applied as if the segment were a\n",
                    "rendered": {
                      "text": "        Sets the dash pattern to be used by :meth:`.stroke`. A dash pattern is\n        specified by *dashes* - a sequence of positive values. Each value\n        provides the length of alternate \"on\" and \"off\" portions of the\n        stroke. The *offset* specifies an offset into the pattern at which the\n        stroke begins.\n\n        Each \"on\" segment will have caps applied as if the segment were a\n",
                      "markdown": "`        Sets the dash pattern to be used by :meth:`.stroke`. A dash pattern is\n        specified by *dashes* - a sequence of positive values. Each value\n        provides the length of alternate \"on\" and \"off\" portions of the\n        stroke. The *offset* specifies an offset into the pattern at which the\n        stroke begins.\n\n        Each \"on\" segment will have caps applied as if the segment were a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3484,
                  "startColumn": 54,
                  "endLine": 3484,
                  "endColumn": 58,
                  "snippet": {
                    "text": "        \"\"\"\n        :param dashes: a sequence specifying alternate lengths of on and off\n            stroke portions as float.\n        :param offset: an offset into the dash pattern at which the stroke\n            should start, defaults to 0.\n        :raises: :exc:`cairo.Error` if any value in *dashes* is negative, or if\n            all values are 0.\n",
                    "rendered": {
                      "text": "        \"\"\"\n        :param dashes: a sequence specifying alternate lengths of on and off\n            stroke portions as float.\n        :param offset: an offset into the dash pattern at which the stroke\n            should start, defaults to 0.\n        :raises: :exc:`cairo.Error` if any value in *dashes* is negative, or if\n            all values are 0.\n",
                      "markdown": "`        \"\"\"\n        :param dashes: a sequence specifying alternate lengths of on and off\n            stroke portions as float.\n        :param offset: an offset into the dash pattern at which the stroke\n            should start, defaults to 0.\n        :raises: :exc:`cairo.Error` if any value in *dashes* is negative, or if\n            all values are 0.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3473,
                  "startColumn": 26,
                  "endLine": 3473,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n        Set the antialiasing mode of the rasterizer used for drawing shapes.\n        This value is a hint, and a particular backend may or may not support a\n        particular value.  At the current time, no backend supports\n        :attr:`cairo.Antialias.SUBPIXEL` when drawing shapes.\n\n        Note that this option does not affect text rendering, instead see\n",
                    "rendered": {
                      "text": "\n        Set the antialiasing mode of the rasterizer used for drawing shapes.\n        This value is a hint, and a particular backend may or may not support a\n        particular value.  At the current time, no backend supports\n        :attr:`cairo.Antialias.SUBPIXEL` when drawing shapes.\n\n        Note that this option does not affect text rendering, instead see\n",
                      "markdown": "`\n        Set the antialiasing mode of the rasterizer used for drawing shapes.\n        This value is a hint, and a particular backend may or may not support a\n        particular value.  At the current time, no backend supports\n        :attr:`cairo.Antialias.SUBPIXEL` when drawing shapes.\n\n        Note that this option does not affect text rendering, instead see\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3333,
                  "startColumn": 11,
                  "endLine": 3333,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        offsets are relative to the current point. Adds a cubic Bézier spline to\n        the path from the current point to a point offset from the current point\n        by *(dx3, dy3)*, using points offset by *(dx1, dy1)* and *(dx2, dy2)* as\n        the control points. After this call the current point will be offset by\n        *(dx3, dy3)*.\n\n        Given a current point of (x, y), ``ctx.rel_curve_to(dx1, dy1, dx2, dy2,\n",
                    "rendered": {
                      "text": "        offsets are relative to the current point. Adds a cubic Bézier spline to\n        the path from the current point to a point offset from the current point\n        by *(dx3, dy3)*, using points offset by *(dx1, dy1)* and *(dx2, dy2)* as\n        the control points. After this call the current point will be offset by\n        *(dx3, dy3)*.\n\n        Given a current point of (x, y), ``ctx.rel_curve_to(dx1, dy1, dx2, dy2,\n",
                      "markdown": "`        offsets are relative to the current point. Adds a cubic Bézier spline to\n        the path from the current point to a point offset from the current point\n        by *(dx3, dy3)*, using points offset by *(dx1, dy1)* and *(dx2, dy2)* as\n        the control points. After this call the current point will be offset by\n        *(dx3, dy3)*.\n\n        Given a current point of (x, y), ``ctx.rel_curve_to(dx1, dy1, dx2, dy2,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3324,
                  "startColumn": 46,
                  "endLine": 3324,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        :param dx1: the X offset to the first control point\n        :param dy1: the Y offset to the first control point\n        :param dx2: the X offset to the second control point\n        :param dy2: the Y offset to the second control point\n        :param dx3: the X offset to the end of the curve\n        :param dy3: the Y offset to the end of the curve\n        :raises: :exc:`cairo.Error` if called with no current point.\n",
                    "rendered": {
                      "text": "        :param dx1: the X offset to the first control point\n        :param dy1: the Y offset to the first control point\n        :param dx2: the X offset to the second control point\n        :param dy2: the Y offset to the second control point\n        :param dx3: the X offset to the end of the curve\n        :param dy3: the Y offset to the end of the curve\n        :raises: :exc:`cairo.Error` if called with no current point.\n",
                      "markdown": "`        :param dx1: the X offset to the first control point\n        :param dy1: the Y offset to the first control point\n        :param dx2: the X offset to the second control point\n        :param dy2: the Y offset to the second control point\n        :param dx3: the X offset to the end of the curve\n        :param dy3: the Y offset to the end of the curve\n        :raises: :exc:`cairo.Error` if called with no current point.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3323,
                  "startColumn": 46,
                  "endLine": 3323,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        \"\"\"\n        :param dx1: the X offset to the first control point\n        :param dy1: the Y offset to the first control point\n        :param dx2: the X offset to the second control point\n        :param dy2: the Y offset to the second control point\n        :param dx3: the X offset to the end of the curve\n        :param dy3: the Y offset to the end of the curve\n",
                    "rendered": {
                      "text": "        \"\"\"\n        :param dx1: the X offset to the first control point\n        :param dy1: the Y offset to the first control point\n        :param dx2: the X offset to the second control point\n        :param dy2: the Y offset to the second control point\n        :param dx3: the X offset to the end of the curve\n        :param dy3: the Y offset to the end of the curve\n",
                      "markdown": "`        \"\"\"\n        :param dx1: the X offset to the first control point\n        :param dy1: the Y offset to the first control point\n        :param dx2: the X offset to the second control point\n        :param dy2: the Y offset to the second control point\n        :param dx3: the X offset to the end of the curve\n        :param dy3: the Y offset to the end of the curve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3322,
                  "startColumn": 45,
                  "endLine": 3322,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    def rel_curve_to(self, dx1: float, dy1: float, dx2: float, dy2: float, dx3: float, dy3: float) -> None:\n        \"\"\"\n        :param dx1: the X offset to the first control point\n        :param dy1: the Y offset to the first control point\n        :param dx2: the X offset to the second control point\n        :param dy2: the Y offset to the second control point\n        :param dx3: the X offset to the end of the curve\n",
                    "rendered": {
                      "text": "    def rel_curve_to(self, dx1: float, dy1: float, dx2: float, dy2: float, dx3: float, dy3: float) -> None:\n        \"\"\"\n        :param dx1: the X offset to the first control point\n        :param dy1: the Y offset to the first control point\n        :param dx2: the X offset to the second control point\n        :param dy2: the Y offset to the second control point\n        :param dx3: the X offset to the end of the curve\n",
                      "markdown": "`    def rel_curve_to(self, dx1: float, dy1: float, dx2: float, dy2: float, dx3: float, dy3: float) -> None:\n        \"\"\"\n        :param dx1: the X offset to the first control point\n        :param dy1: the Y offset to the first control point\n        :param dx2: the X offset to the second control point\n        :param dy2: the Y offset to the second control point\n        :param dx3: the X offset to the end of the curve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3321,
                  "startColumn": 45,
                  "endLine": 3321,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n    def rel_curve_to(self, dx1: float, dy1: float, dx2: float, dy2: float, dx3: float, dy3: float) -> None:\n        \"\"\"\n        :param dx1: the X offset to the first control point\n        :param dy1: the Y offset to the first control point\n        :param dx2: the X offset to the second control point\n        :param dy2: the Y offset to the second control point\n",
                    "rendered": {
                      "text": "\n    def rel_curve_to(self, dx1: float, dy1: float, dx2: float, dy2: float, dx3: float, dy3: float) -> None:\n        \"\"\"\n        :param dx1: the X offset to the first control point\n        :param dy1: the Y offset to the first control point\n        :param dx2: the X offset to the second control point\n        :param dy2: the Y offset to the second control point\n",
                      "markdown": "`\n    def rel_curve_to(self, dx1: float, dy1: float, dx2: float, dy2: float, dx3: float, dy3: float) -> None:\n        \"\"\"\n        :param dx1: the X offset to the first control point\n        :param dy1: the Y offset to the first control point\n        :param dx2: the X offset to the second control point\n        :param dy2: the Y offset to the second control point\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3308,
                  "startColumn": 7,
                  "endLine": 3308,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        :param height: the height of the rectangle\n\n        Adds a closed sub-path rectangle of the given size to the current path\n        at position *(x, y)* in user-space coordinates.\n\n        This function is logically equivalent to::\n\n",
                    "rendered": {
                      "text": "        :param height: the height of the rectangle\n\n        Adds a closed sub-path rectangle of the given size to the current path\n        at position *(x, y)* in user-space coordinates.\n\n        This function is logically equivalent to::\n\n",
                      "markdown": "`        :param height: the height of the rectangle\n\n        Adds a closed sub-path rectangle of the given size to the current path\n        at position *(x, y)* in user-space coordinates.\n\n        This function is logically equivalent to::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3292,
                  "startColumn": 71,
                  "endLine": 3293,
                  "snippet": {
                    "text": "        calls provide the result of any drawing to the group as a pattern,\n        (either as an explicit object, or set as the source pattern).\n\n        The group will have a content type of *content*. The ability to control\n        this content type is the only distinction between this function and\n        :meth:`Context.push_group` which you should see for a more detailed\n        description of group rendering.\n\n",
                    "rendered": {
                      "text": "        calls provide the result of any drawing to the group as a pattern,\n        (either as an explicit object, or set as the source pattern).\n\n        The group will have a content type of *content*. The ability to control\n        this content type is the only distinction between this function and\n        :meth:`Context.push_group` which you should see for a more detailed\n        description of group rendering.\n\n",
                      "markdown": "`        calls provide the result of any drawing to the group as a pattern,\n        (either as an explicit object, or set as the source pattern).\n\n        The group will have a content type of *content*. The ability to control\n        this content type is the only distinction between this function and\n        :meth:`Context.push_group` which you should see for a more detailed\n        description of group rendering.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3113,
                  "startColumn": 30,
                  "endLine": 3113,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        \"\"\"\n        :param surface: a :class:`Surface`\n        :param x: X coordinate at which to place the origin of *surface*\n        :param y: Y coordinate at which to place the origin of *surface*\n\n        A drawing operator that paints the current source using the alpha\n        channel of *surface* as a mask. (Opaque areas of *surface* are painted\n",
                    "rendered": {
                      "text": "        \"\"\"\n        :param surface: a :class:`Surface`\n        :param x: X coordinate at which to place the origin of *surface*\n        :param y: Y coordinate at which to place the origin of *surface*\n\n        A drawing operator that paints the current source using the alpha\n        channel of *surface* as a mask. (Opaque areas of *surface* are painted\n",
                      "markdown": "`        \"\"\"\n        :param surface: a :class:`Surface`\n        :param x: X coordinate at which to place the origin of *surface*\n        :param y: Y coordinate at which to place the origin of *surface*\n\n        A drawing operator that paints the current source using the alpha\n        channel of *surface* as a mask. (Opaque areas of *surface* are painted\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3112,
                  "startColumn": 30,
                  "endLine": 3112,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    def mask_surface(self, surface: Surface, x: float = 0.0, y: float = 0.0) -> None:\n        \"\"\"\n        :param surface: a :class:`Surface`\n        :param x: X coordinate at which to place the origin of *surface*\n        :param y: Y coordinate at which to place the origin of *surface*\n\n        A drawing operator that paints the current source using the alpha\n",
                    "rendered": {
                      "text": "    def mask_surface(self, surface: Surface, x: float = 0.0, y: float = 0.0) -> None:\n        \"\"\"\n        :param surface: a :class:`Surface`\n        :param x: X coordinate at which to place the origin of *surface*\n        :param y: Y coordinate at which to place the origin of *surface*\n\n        A drawing operator that paints the current source using the alpha\n",
                      "markdown": "`    def mask_surface(self, surface: Surface, x: float = 0.0, y: float = 0.0) -> None:\n        \"\"\"\n        :param surface: a :class:`Surface`\n        :param x: X coordinate at which to place the origin of *surface*\n        :param y: Y coordinate at which to place the origin of *surface*\n\n        A drawing operator that paints the current source using the alpha\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2746,
                  "startColumn": 25,
                  "endLine": 2746,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n        Adds a cubic Bézier spline to the path from the current point to\n        position *(x3, y3)* in user-space coordinates, using *(x1, y1)* and\n        *(x2, y2)* as the control points. After this call the current point will\n        be *(x3, y3)*.\n\n        If there is no current point before the call to :meth:`.curve_to`\n",
                    "rendered": {
                      "text": "\n        Adds a cubic Bézier spline to the path from the current point to\n        position *(x3, y3)* in user-space coordinates, using *(x1, y1)* and\n        *(x2, y2)* as the control points. After this call the current point will\n        be *(x3, y3)*.\n\n        If there is no current point before the call to :meth:`.curve_to`\n",
                      "markdown": "`\n        Adds a cubic Bézier spline to the path from the current point to\n        position *(x3, y3)* in user-space coordinates, using *(x1, y1)* and\n        *(x2, y2)* as the control points. After this call the current point will\n        be *(x3, y3)*.\n\n        If there is no current point before the call to :meth:`.curve_to`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2740,
                  "startColumn": 49,
                  "endLine": 2740,
                  "endColumn": 58,
                  "snippet": {
                    "text": "        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n        :param y3: the Y coordinate of the end of the curve\n\n",
                    "rendered": {
                      "text": "        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n        :param y3: the Y coordinate of the end of the curve\n\n",
                      "markdown": "`        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n        :param y3: the Y coordinate of the end of the curve\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2739,
                  "startColumn": 49,
                  "endLine": 2739,
                  "endColumn": 58,
                  "snippet": {
                    "text": "        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n        :param y3: the Y coordinate of the end of the curve\n",
                    "rendered": {
                      "text": "        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n        :param y3: the Y coordinate of the end of the curve\n",
                      "markdown": "`        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n        :param y3: the Y coordinate of the end of the curve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2738,
                  "startColumn": 48,
                  "endLine": 2738,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    def curve_to(self, x1: float, y1: float, x2: float, y2: float, x3: float, y3: float) -> None:\n        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n",
                    "rendered": {
                      "text": "    def curve_to(self, x1: float, y1: float, x2: float, y2: float, x3: float, y3: float) -> None:\n        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n",
                      "markdown": "`    def curve_to(self, x1: float, y1: float, x2: float, y2: float, x3: float, y3: float) -> None:\n        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n        :param x3: the X coordinate of the end of the curve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2737,
                  "startColumn": 48,
                  "endLine": 2737,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n    def curve_to(self, x1: float, y1: float, x2: float, y2: float, x3: float, y3: float) -> None:\n        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n",
                    "rendered": {
                      "text": "\n    def curve_to(self, x1: float, y1: float, x2: float, y2: float, x3: float, y3: float) -> None:\n        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n",
                      "markdown": "`\n    def curve_to(self, x1: float, y1: float, x2: float, y2: float, x3: float, y3: float) -> None:\n        \"\"\"\n        :param x1: the X coordinate of the first control point\n        :param y1: the Y coordinate of the first control point\n        :param x2: the X coordinate of the second control point\n        :param y2: the Y coordinate of the second control point\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2673,
                  "startColumn": 29,
                  "endLine": 2673,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        Adds a line segment to the path from the current point to the beginning\n        of the current sub-path, (the most recent point passed to\n        :meth:`Context.move_to`), and closes this sub-path. After this call the\n        current point will be at the joined endpoint of the sub-path.\n\n        The behavior of :meth:`.close_path` is distinct from simply calling\n        :meth:`Context.line_to` with the equivalent coordinate in the case of\n",
                    "rendered": {
                      "text": "        Adds a line segment to the path from the current point to the beginning\n        of the current sub-path, (the most recent point passed to\n        :meth:`Context.move_to`), and closes this sub-path. After this call the\n        current point will be at the joined endpoint of the sub-path.\n\n        The behavior of :meth:`.close_path` is distinct from simply calling\n        :meth:`Context.line_to` with the equivalent coordinate in the case of\n",
                      "markdown": "`        Adds a line segment to the path from the current point to the beginning\n        of the current sub-path, (the most recent point passed to\n        :meth:`Context.move_to`), and closes this sub-path. After this call the\n        current point will be at the joined endpoint of the sub-path.\n\n        The behavior of :meth:`.close_path` is distinct from simply calling\n        :meth:`Context.line_to` with the equivalent coordinate in the case of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2601,
                  "startColumn": 45,
                  "endLine": 2601,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n        Adds a circular arc of the given *radius* to the current path. The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of decreasing angles to end at *angle2*. If *angle2* is\n        greater than *angle1* it will be progressively decreased by 2*PI until\n        it is less than *angle1*.\n\n",
                    "rendered": {
                      "text": "\n        Adds a circular arc of the given *radius* to the current path. The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of decreasing angles to end at *angle2*. If *angle2* is\n        greater than *angle1* it will be progressively decreased by 2*PI until\n        it is less than *angle1*.\n\n",
                      "markdown": "`\n        Adds a circular arc of the given *radius* to the current path. The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of decreasing angles to end at *angle2*. If *angle2* is\n        greater than *angle1* it will be progressively decreased by 2*PI until\n        it is less than *angle1*.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2600,
                  "startColumn": 41,
                  "endLine": 2600,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        :param angle2: the end angle, in radians\n\n        Adds a circular arc of the given *radius* to the current path. The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of decreasing angles to end at *angle2*. If *angle2* is\n        greater than *angle1* it will be progressively decreased by 2*PI until\n        it is less than *angle1*.\n",
                    "rendered": {
                      "text": "        :param angle2: the end angle, in radians\n\n        Adds a circular arc of the given *radius* to the current path. The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of decreasing angles to end at *angle2*. If *angle2* is\n        greater than *angle1* it will be progressively decreased by 2*PI until\n        it is less than *angle1*.\n",
                      "markdown": "`        :param angle2: the end angle, in radians\n\n        Adds a circular arc of the given *radius* to the current path. The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of decreasing angles to end at *angle2*. If *angle2* is\n        greater than *angle1* it will be progressively decreased by 2*PI until\n        it is less than *angle1*.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2600,
                  "startColumn": 19,
                  "endLine": 2600,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        :param angle2: the end angle, in radians\n\n        Adds a circular arc of the given *radius* to the current path. The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of decreasing angles to end at *angle2*. If *angle2* is\n        greater than *angle1* it will be progressively decreased by 2*PI until\n        it is less than *angle1*.\n",
                    "rendered": {
                      "text": "        :param angle2: the end angle, in radians\n\n        Adds a circular arc of the given *radius* to the current path. The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of decreasing angles to end at *angle2*. If *angle2* is\n        greater than *angle1* it will be progressively decreased by 2*PI until\n        it is less than *angle1*.\n",
                      "markdown": "`        :param angle2: the end angle, in radians\n\n        Adds a circular arc of the given *radius* to the current path. The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of decreasing angles to end at *angle2*. If *angle2* is\n        greater than *angle1* it will be progressively decreased by 2*PI until\n        it is less than *angle1*.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2557,
                  "startColumn": 45,
                  "endLine": 2557,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n        Adds a circular arc of the given *radius* to the current path.  The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of increasing angles to end at *angle2*. If *angle2* is less\n        than *angle1* it will be progressively increased by 2*PI until it is\n        greater than *angle1*.\n\n",
                    "rendered": {
                      "text": "\n        Adds a circular arc of the given *radius* to the current path.  The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of increasing angles to end at *angle2*. If *angle2* is less\n        than *angle1* it will be progressively increased by 2*PI until it is\n        greater than *angle1*.\n\n",
                      "markdown": "`\n        Adds a circular arc of the given *radius* to the current path.  The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of increasing angles to end at *angle2*. If *angle2* is less\n        than *angle1* it will be progressively increased by 2*PI until it is\n        greater than *angle1*.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2556,
                  "startColumn": 41,
                  "endLine": 2556,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        :param angle2: the end angle, in radians\n\n        Adds a circular arc of the given *radius* to the current path.  The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of increasing angles to end at *angle2*. If *angle2* is less\n        than *angle1* it will be progressively increased by 2*PI until it is\n        greater than *angle1*.\n",
                    "rendered": {
                      "text": "        :param angle2: the end angle, in radians\n\n        Adds a circular arc of the given *radius* to the current path.  The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of increasing angles to end at *angle2*. If *angle2* is less\n        than *angle1* it will be progressively increased by 2*PI until it is\n        greater than *angle1*.\n",
                      "markdown": "`        :param angle2: the end angle, in radians\n\n        Adds a circular arc of the given *radius* to the current path.  The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of increasing angles to end at *angle2*. If *angle2* is less\n        than *angle1* it will be progressively increased by 2*PI until it is\n        greater than *angle1*.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2556,
                  "startColumn": 19,
                  "endLine": 2556,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        :param angle2: the end angle, in radians\n\n        Adds a circular arc of the given *radius* to the current path.  The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of increasing angles to end at *angle2*. If *angle2* is less\n        than *angle1* it will be progressively increased by 2*PI until it is\n        greater than *angle1*.\n",
                    "rendered": {
                      "text": "        :param angle2: the end angle, in radians\n\n        Adds a circular arc of the given *radius* to the current path.  The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of increasing angles to end at *angle2*. If *angle2* is less\n        than *angle1* it will be progressively increased by 2*PI until it is\n        greater than *angle1*.\n",
                      "markdown": "`        :param angle2: the end angle, in radians\n\n        Adds a circular arc of the given *radius* to the current path.  The arc\n        is centered at (*xc, yc*), begins at *angle1* and proceeds in the\n        direction of increasing angles to end at *angle2*. If *angle2* is less\n        than *angle1* it will be progressively increased by 2*PI until it is\n        greater than *angle1*.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2305,
                  "startColumn": 55,
                  "endLine": 2305,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        still possible, but they are always performed at the native device\n        resolution. So this function has no effect on those backends.\n\n        Note: The fallback resolution only takes effect at the time of\n        completing a page (with :meth:`Context.show_page` or\n        :meth:`Context.copy_page`) so there is currently no way to have more\n        than one fallback resolution in effect on a single page.\n",
                    "rendered": {
                      "text": "        still possible, but they are always performed at the native device\n        resolution. So this function has no effect on those backends.\n\n        Note: The fallback resolution only takes effect at the time of\n        completing a page (with :meth:`Context.show_page` or\n        :meth:`Context.copy_page`) so there is currently no way to have more\n        than one fallback resolution in effect on a single page.\n",
                      "markdown": "`        still possible, but they are always performed at the native device\n        resolution. So this function has no effect on those backends.\n\n        Note: The fallback resolution only takes effect at the time of\n        completing a page (with :meth:`Context.show_page` or\n        :meth:`Context.copy_page`) so there is currently no way to have more\n        than one fallback resolution in effect on a single page.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2302,
                  "startColumn": 53,
                  "endLine": 2302,
                  "endColumn": 57,
                  "snippet": {
                    "text": "        svg backends.\n\n        For backends that are natively raster-oriented, image fallbacks are\n        still possible, but they are always performed at the native device\n        resolution. So this function has no effect on those backends.\n\n        Note: The fallback resolution only takes effect at the time of\n",
                    "rendered": {
                      "text": "        svg backends.\n\n        For backends that are natively raster-oriented, image fallbacks are\n        still possible, but they are always performed at the native device\n        resolution. So this function has no effect on those backends.\n\n        Note: The fallback resolution only takes effect at the time of\n",
                      "markdown": "`        svg backends.\n\n        For backends that are natively raster-oriented, image fallbacks are\n        still possible, but they are always performed at the native device\n        resolution. So this function has no effect on those backends.\n\n        Note: The fallback resolution only takes effect at the time of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2275,
                  "startColumn": 47,
                  "endLine": 2275,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n        Sets a scale that is multiplied to the device coordinates determined by\n        the CTM when drawing to surface . One common use for this is to render\n        to very high resolution display devices at a scale factor, so that code\n        that assumes 1 pixel will be a certain size will still work. Setting a\n        transformation via :meth:`Context.translate` isn't sufficient to do\n        this, since functions like :meth:`Context.device_to_user` will expose\n",
                    "rendered": {
                      "text": "\n        Sets a scale that is multiplied to the device coordinates determined by\n        the CTM when drawing to surface . One common use for this is to render\n        to very high resolution display devices at a scale factor, so that code\n        that assumes 1 pixel will be a certain size will still work. Setting a\n        transformation via :meth:`Context.translate` isn't sufficient to do\n        this, since functions like :meth:`Context.device_to_user` will expose\n",
                      "markdown": "`\n        Sets a scale that is multiplied to the device coordinates determined by\n        the CTM when drawing to surface . One common use for this is to render\n        to very high resolution display devices at a scale factor, so that code\n        that assumes 1 pixel will be a certain size will still work. Setting a\n        transformation via :meth:`Context.translate` isn't sufficient to do\n        this, since functions like :meth:`Context.device_to_user` will expose\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2197,
                  "startColumn": 59,
                  "endLine": 2197,
                  "endColumn": 63,
                  "snippet": {
                    "text": "        :meth:`Context.show_text_glyphs` call.\n\n        Note: Even if this function returns :obj:`False`, a\n        :meth:`Context.show_text_glyphs` operation targeted at surface will\n        still succeed. It just will act like a :meth:`Context.show_glyphs`\n        operation. Users can use this function to avoid computing UTF-8 text and\n        cluster mapping if the target surface does not use it.\n",
                    "rendered": {
                      "text": "        :meth:`Context.show_text_glyphs` call.\n\n        Note: Even if this function returns :obj:`False`, a\n        :meth:`Context.show_text_glyphs` operation targeted at surface will\n        still succeed. It just will act like a :meth:`Context.show_glyphs`\n        operation. Users can use this function to avoid computing UTF-8 text and\n        cluster mapping if the target surface does not use it.\n",
                      "markdown": "`        :meth:`Context.show_text_glyphs` call.\n\n        Note: Even if this function returns :obj:`False`, a\n        :meth:`Context.show_text_glyphs` operation targeted at surface will\n        still succeed. It just will act like a :meth:`Context.show_glyphs`\n        operation. Users can use this function to avoid computing UTF-8 text and\n        cluster mapping if the target surface does not use it.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 1956,
                  "startColumn": 56,
                  "endLine": 1956,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n        .. note::\n\n            You must never acquire two different devices at the same time\n            unless this is explicitly allowed. Otherwise the possibility of\n            deadlocks exist. As various Cairo functions can acquire devices\n            when called, these functions may also cause deadlocks when you\n",
                    "rendered": {
                      "text": "\n        .. note::\n\n            You must never acquire two different devices at the same time\n            unless this is explicitly allowed. Otherwise the possibility of\n            deadlocks exist. As various Cairo functions can acquire devices\n            when called, these functions may also cause deadlocks when you\n",
                      "markdown": "`\n        .. note::\n\n            You must never acquire two different devices at the same time\n            unless this is explicitly allowed. Otherwise the possibility of\n            deadlocks exist. As various Cairo functions can acquire devices\n            when called, these functions may also cause deadlocks when you\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 1848,
                  "startColumn": 73,
                  "endLine": 1848,
                  "endColumn": 77,
                  "snippet": {
                    "text": "            :param text: text\n\n            Gets the extents for a string of text. The extents describe a user-space\n            rectangle that encloses the \"inked\" portion of the text drawn at the\n            origin (0,0) (as it would be drawn by :meth:`Context.show_text` if the\n            cairo graphics state were set to the same font_face, font_matrix, ctm,\n            and font_options as *ScaledFont*).  Additionally, the x_advance and\n",
                    "rendered": {
                      "text": "            :param text: text\n\n            Gets the extents for a string of text. The extents describe a user-space\n            rectangle that encloses the \"inked\" portion of the text drawn at the\n            origin (0,0) (as it would be drawn by :meth:`Context.show_text` if the\n            cairo graphics state were set to the same font_face, font_matrix, ctm,\n            and font_options as *ScaledFont*).  Additionally, the x_advance and\n",
                      "markdown": "`            :param text: text\n\n            Gets the extents for a string of text. The extents describe a user-space\n            rectangle that encloses the \"inked\" portion of the text drawn at the\n            origin (0,0) (as it would be drawn by :meth:`Context.show_text` if the\n            cairo graphics state were set to the same font_face, font_matrix, ctm,\n            and font_options as *ScaledFont*).  Additionally, the x_advance and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 1724,
                  "startColumn": 25,
                  "endLine": 1724,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        :param alpha: alpha component of color\n\n        Sets a custom palette color for the font options object. This overrides\n        the palette color at the specified color index. This override is\n        independent of the selected palette index and will remain in place even\n        if :meth:`FontOptions.set_color_palette` is called to change the palette\n        index.\n",
                    "rendered": {
                      "text": "        :param alpha: alpha component of color\n\n        Sets a custom palette color for the font options object. This overrides\n        the palette color at the specified color index. This override is\n        independent of the selected palette index and will remain in place even\n        if :meth:`FontOptions.set_color_palette` is called to change the palette\n        index.\n",
                      "markdown": "`        :param alpha: alpha component of color\n\n        Sets a custom palette color for the font options object. This overrides\n        the palette color at the specified color index. This override is\n        independent of the selected palette index and will remain in place even\n        if :meth:`FontOptions.set_color_palette` is called to change the palette\n        index.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 1401,
                  "startColumn": 21,
                  "endLine": 1401,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    to some UTF-8 text.\n\n    For a cluster to be valid, both ``num_bytes`` and ``num_glyphs`` should be\n    non-negative, and at least one should be non-zero. Note that clusters with\n    zero glyphs are not as well supported as normal clusters. For example, PDF\n    rendering applications typically ignore those clusters when PDF text is\n    being selected.\n",
                    "rendered": {
                      "text": "    to some UTF-8 text.\n\n    For a cluster to be valid, both ``num_bytes`` and ``num_glyphs`` should be\n    non-negative, and at least one should be non-zero. Note that clusters with\n    zero glyphs are not as well supported as normal clusters. For example, PDF\n    rendering applications typically ignore those clusters when PDF text is\n    being selected.\n",
                      "markdown": "`    to some UTF-8 text.\n\n    For a cluster to be valid, both ``num_bytes`` and ``num_glyphs`` should be\n    non-negative, and at least one should be non-zero. Note that clusters with\n    zero glyphs are not as well supported as normal clusters. For example, PDF\n    rendering applications typically ignore those clusters when PDF text is\n    being selected.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 1350,
                  "startColumn": 26,
                  "endLine": 1350,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n        Set the dithering mode of the rasterizer used for drawing shapes. This\n        value is a hint, and a particular backend may or may not support a\n        particular value.  At the current time, only pixman is supported.\n\n        .. versionadded:: 1.25.0 Only available with cairo 1.18.0+\n        \"\"\"\n",
                    "rendered": {
                      "text": "\n        Set the dithering mode of the rasterizer used for drawing shapes. This\n        value is a hint, and a particular backend may or may not support a\n        particular value.  At the current time, only pixman is supported.\n\n        .. versionadded:: 1.25.0 Only available with cairo 1.18.0+\n        \"\"\"\n",
                      "markdown": "`\n        Set the dithering mode of the rasterizer used for drawing shapes. This\n        value is a hint, and a particular backend may or may not support a\n        particular value.  At the current time, only pixman is supported.\n\n        .. versionadded:: 1.25.0 Only available with cairo 1.18.0+\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 1329,
                  "startColumn": 37,
                  "endLine": 1329,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            pattern.set_matrix(matrix)\n\n        Meanwhile, using values of 2.0 rather than 0.5 in the code above would\n        cause the *Pattern* to appear at half of its default size.\n\n        Also, please note the discussion of the user-space locking semantics of\n        :class:`Context.set_source`.\n",
                    "rendered": {
                      "text": "            pattern.set_matrix(matrix)\n\n        Meanwhile, using values of 2.0 rather than 0.5 in the code above would\n        cause the *Pattern* to appear at half of its default size.\n\n        Also, please note the discussion of the user-space locking semantics of\n        :class:`Context.set_source`.\n",
                      "markdown": "`            pattern.set_matrix(matrix)\n\n        Meanwhile, using values of 2.0 rather than 0.5 in the code above would\n        cause the *Pattern* to appear at half of its default size.\n\n        Also, please note the discussion of the user-space locking semantics of\n        :class:`Context.set_source`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 1279,
                  "startColumn": 35,
                  "endLine": 1279,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        :param filter: a filter describing the filter\n            to use for resizing the pattern\n\n        Note that you might want to control filtering even when you do not have\n        an explicit *Pattern* object, (for example when using\n        :meth:`Context.set_source_surface`). In these cases, it is convenient to\n        use :meth:`Context.get_source` to get access to the pattern that cairo\n",
                    "rendered": {
                      "text": "        :param filter: a filter describing the filter\n            to use for resizing the pattern\n\n        Note that you might want to control filtering even when you do not have\n        an explicit *Pattern* object, (for example when using\n        :meth:`Context.set_source_surface`). In these cases, it is convenient to\n        use :meth:`Context.get_source` to get access to the pattern that cairo\n",
                      "markdown": "`        :param filter: a filter describing the filter\n            to use for resizing the pattern\n\n        Note that you might want to control filtering even when you do not have\n        an explicit *Pattern* object, (for example when using\n        :meth:`Context.set_source_surface`). In these cases, it is convenient to\n        use :meth:`Context.get_source` to get access to the pattern that cairo\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 729,
                  "startColumn": 38,
                  "endLine": 729,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n    REFLECT: \"Extend\" = ...\n    \"\"\"\n    the pattern is tiled by reflecting at the edges (Implemented for\n    surface patterns since 1.6)\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "\n    REFLECT: \"Extend\" = ...\n    \"\"\"\n    the pattern is tiled by reflecting at the edges (Implemented for\n    surface patterns since 1.6)\n    \"\"\"\n\n",
                      "markdown": "`\n    REFLECT: \"Extend\" = ...\n    \"\"\"\n    the pattern is tiled by reflecting at the edges (Implemented for\n    surface patterns since 1.6)\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 694,
                  "startColumn": 20,
                  "endLine": 694,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    SCREEN: \"Operator\" = ...\n    \"\"\"\n    source and destination are complemented and multiplied. This causes\n    the result to be at least as light as the lighter inputs.\n    \"\"\"\n\n    SOFT_LIGHT: \"Operator\" = ...\n",
                    "rendered": {
                      "text": "    SCREEN: \"Operator\" = ...\n    \"\"\"\n    source and destination are complemented and multiplied. This causes\n    the result to be at least as light as the lighter inputs.\n    \"\"\"\n\n    SOFT_LIGHT: \"Operator\" = ...\n",
                      "markdown": "`    SCREEN: \"Operator\" = ...\n    \"\"\"\n    source and destination are complemented and multiplied. This causes\n    the result to be at least as light as the lighter inputs.\n    \"\"\"\n\n    SOFT_LIGHT: \"Operator\" = ...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 673,
                  "startColumn": 9,
                  "endLine": 673,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    MULTIPLY: \"Operator\" = ...\n    \"\"\"\n    source and destination layers are multiplied. This causes the result\n    to be at least as dark as the darker inputs.\n    \"\"\"\n\n    OUT: \"Operator\" = ...\n",
                    "rendered": {
                      "text": "    MULTIPLY: \"Operator\" = ...\n    \"\"\"\n    source and destination layers are multiplied. This causes the result\n    to be at least as dark as the darker inputs.\n    \"\"\"\n\n    OUT: \"Operator\" = ...\n",
                      "markdown": "`    MULTIPLY: \"Operator\" = ...\n    \"\"\"\n    source and destination layers are multiplied. This causes the result\n    to be at least as dark as the darker inputs.\n    \"\"\"\n\n    OUT: \"Operator\" = ...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 519,
                  "startColumn": 43,
                  "endLine": 519,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    BEVEL: \"LineJoin\" = ...\n    \"\"\"\n    use a cut-off join, the join is cut off at half the line width from\n    the joint point\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "\n    BEVEL: \"LineJoin\" = ...\n    \"\"\"\n    use a cut-off join, the join is cut off at half the line width from\n    the joint point\n    \"\"\"\n\n",
                      "markdown": "`\n    BEVEL: \"LineJoin\" = ...\n    \"\"\"\n    use a cut-off join, the join is cut off at half the line width from\n    the joint point\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 499,
                  "startColumn": 35,
                  "endLine": 499,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    \"\"\"\n\n    BUTT: \"LineCap\" = ...\n    \"\"\"start(stop) the line exactly at the start(end) point\"\"\"\n\n    ROUND: \"LineCap\" = ...\n    \"\"\"use a round ending, the center of the circle is the end point\"\"\"\n",
                    "rendered": {
                      "text": "    \"\"\"\n\n    BUTT: \"LineCap\" = ...\n    \"\"\"start(stop) the line exactly at the start(end) point\"\"\"\n\n    ROUND: \"LineCap\" = ...\n    \"\"\"use a round ending, the center of the circle is the end point\"\"\"\n",
                      "markdown": "`    \"\"\"\n\n    BUTT: \"LineCap\" = ...\n    \"\"\"start(stop) the line exactly at the start(end) point\"\"\"\n\n    ROUND: \"LineCap\" = ...\n    \"\"\"use a round ending, the center of the circle is the end point\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 57,
                  "endLine": 486,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n\n    VRGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with red at the top\"\"\"\n\nclass LineCap(_IntEnum):\n    \"\"\"\n",
                    "rendered": {
                      "text": "    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n\n    VRGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with red at the top\"\"\"\n\nclass LineCap(_IntEnum):\n    \"\"\"\n",
                      "markdown": "`    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n\n    VRGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with red at the top\"\"\"\n\nclass LineCap(_IntEnum):\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 483,
                  "startColumn": 58,
                  "endLine": 483,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    \"\"\"Subpixel elements are arranged horizontally with red at the left\"\"\"\n\n    VBGR: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n\n    VRGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with red at the top\"\"\"\n",
                    "rendered": {
                      "text": "    \"\"\"Subpixel elements are arranged horizontally with red at the left\"\"\"\n\n    VBGR: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n\n    VRGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with red at the top\"\"\"\n",
                      "markdown": "`    \"\"\"Subpixel elements are arranged horizontally with red at the left\"\"\"\n\n    VBGR: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n\n    VRGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with red at the top\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 480,
                  "startColumn": 59,
                  "endLine": 480,
                  "endColumn": 63,
                  "snippet": {
                    "text": "    \"\"\"Use the default subpixel order for for the target device\"\"\"\n\n    RGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged horizontally with red at the left\"\"\"\n\n    VBGR: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n",
                    "rendered": {
                      "text": "    \"\"\"Use the default subpixel order for for the target device\"\"\"\n\n    RGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged horizontally with red at the left\"\"\"\n\n    VBGR: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n",
                      "markdown": "`    \"\"\"Use the default subpixel order for for the target device\"\"\"\n\n    RGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged horizontally with red at the left\"\"\"\n\n    VBGR: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 474,
                  "startColumn": 60,
                  "endLine": 474,
                  "endColumn": 64,
                  "snippet": {
                    "text": "    \"\"\"\n\n    BGR: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged horizontally with blue at the left\"\"\"\n\n    DEFAULT: \"SubpixelOrder\" = ...\n    \"\"\"Use the default subpixel order for for the target device\"\"\"\n",
                    "rendered": {
                      "text": "    \"\"\"\n\n    BGR: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged horizontally with blue at the left\"\"\"\n\n    DEFAULT: \"SubpixelOrder\" = ...\n    \"\"\"Use the default subpixel order for for the target device\"\"\"\n",
                      "markdown": "`    \"\"\"\n\n    BGR: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged horizontally with blue at the left\"\"\"\n\n    DEFAULT: \"SubpixelOrder\" = ...\n    \"\"\"Use the default subpixel order for for the target device\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 18,
                  "endLine": 407,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n    DEFAULT: \"Dither\" = ...\n    \"\"\"\n    Default choice at cairo compile time. Currently NONE.\n    \"\"\"\n\n    FAST: \"Dither\" = ...\n",
                    "rendered": {
                      "text": "\n    DEFAULT: \"Dither\" = ...\n    \"\"\"\n    Default choice at cairo compile time. Currently NONE.\n    \"\"\"\n\n    FAST: \"Dither\" = ...\n",
                      "markdown": "`\n    DEFAULT: \"Dither\" = ...\n    \"\"\"\n    Default choice at cairo compile time. Currently NONE.\n    \"\"\"\n\n    FAST: \"Dither\" = ...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 53,
                  "endLine": 342,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    These constants specify whether to hint font metrics; hinting font metrics\n    means quantizing them so that they are integer values in device space.\n    Doing this improves the consistency of letter and line spacing, however it\n    also means that text will be laid out differently at different zoom\n    factors.\n\n    .. versionadded:: 1.13\n",
                    "rendered": {
                      "text": "    These constants specify whether to hint font metrics; hinting font metrics\n    means quantizing them so that they are integer values in device space.\n    Doing this improves the consistency of letter and line spacing, however it\n    also means that text will be laid out differently at different zoom\n    factors.\n\n    .. versionadded:: 1.13\n",
                      "markdown": "`    These constants specify whether to hint font metrics; hinting font metrics\n    means quantizing them so that they are integer values in device space.\n    Doing this improves the consistency of letter and line spacing, however it\n    also means that text will be laid out differently at different zoom\n    factors.\n\n    .. versionadded:: 1.13\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 56,
                  "endLine": 218,
                  "endColumn": 60,
                  "snippet": {
                    "text": "    \"\"\"\n    These constants are used to select how paths are filled. For both fill\n    rules, whether or not a point is included in the fill is determined by\n    taking a ray from that point to infinity and looking at intersections with\n    the path. The ray can be in any direction, as long as it doesn't pass\n    through the end point of a segment or have a tricky intersection such as\n    intersecting tangent to the path. (Note that filling is not actually\n",
                    "rendered": {
                      "text": "    \"\"\"\n    These constants are used to select how paths are filled. For both fill\n    rules, whether or not a point is included in the fill is determined by\n    taking a ray from that point to infinity and looking at intersections with\n    the path. The ray can be in any direction, as long as it doesn't pass\n    through the end point of a segment or have a tricky intersection such as\n    intersecting tangent to the path. (Note that filling is not actually\n",
                      "markdown": "`    \"\"\"\n    These constants are used to select how paths are filled. For both fill\n    rules, whether or not a point is included in the fill is determined by\n    taking a ray from that point to infinity and looking at intersections with\n    the path. The ray can be in any direction, as long as it doesn't pass\n    through the end point of a segment or have a tricky intersection such as\n    intersecting tangent to the path. (Note that filling is not actually\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 39,
                  "endLine": 165,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n    BEST: \"Antialias\" = ...\n    \"\"\"\n    Hint that the backend should render at the highest quality, sacrificing\n    speed if necessary.\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "\n    BEST: \"Antialias\" = ...\n    \"\"\"\n    Hint that the backend should render at the highest quality, sacrificing\n    speed if necessary.\n    \"\"\"\n\n",
                      "markdown": "`\n    BEST: \"Antialias\" = ...\n    \"\"\"\n    Hint that the backend should render at the highest quality, sacrificing\n    speed if necessary.\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 53,
                  "endLine": 92,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nCAIRO_VERSION_MICRO: int = ...\n\"\"\"\nThe micro component of the version of cairo available at compile-time.\n\n.. versionadded:: 1.18.0\n\"\"\"\n",
                    "rendered": {
                      "text": "\nCAIRO_VERSION_MICRO: int = ...\n\"\"\"\nThe micro component of the version of cairo available at compile-time.\n\n.. versionadded:: 1.18.0\n\"\"\"\n",
                      "markdown": "`\nCAIRO_VERSION_MICRO: int = ...\n\"\"\"\nThe micro component of the version of cairo available at compile-time.\n\n.. versionadded:: 1.18.0\n\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 53,
                  "endLine": 85,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nCAIRO_VERSION_MINOR: int = ...\n\"\"\"\nThe minor component of the version of cairo available at compile-time.\n\n.. versionadded:: 1.18.0\n\"\"\"\n",
                    "rendered": {
                      "text": "\nCAIRO_VERSION_MINOR: int = ...\n\"\"\"\nThe minor component of the version of cairo available at compile-time.\n\n.. versionadded:: 1.18.0\n\"\"\"\n",
                      "markdown": "`\nCAIRO_VERSION_MINOR: int = ...\n\"\"\"\nThe minor component of the version of cairo available at compile-time.\n\n.. versionadded:: 1.18.0\n\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 53,
                  "endLine": 78,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nCAIRO_VERSION_MAJOR: int = ...\n\"\"\"\nThe major component of the version of cairo available at compile-time.\n\n.. versionadded:: 1.18.0\n\"\"\"\n",
                    "rendered": {
                      "text": "\nCAIRO_VERSION_MAJOR: int = ...\n\"\"\"\nThe major component of the version of cairo available at compile-time.\n\n.. versionadded:: 1.18.0\n\"\"\"\n",
                      "markdown": "`\nCAIRO_VERSION_MAJOR: int = ...\n\"\"\"\nThe major component of the version of cairo available at compile-time.\n\n.. versionadded:: 1.18.0\n\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 73,
                  "endLine": 71,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\nCAIRO_VERSION_STRING: str = ...\n\"\"\"\nA human-readable string literal containing the version of cairo available\nat compile-time, in the form of \"X.Y.Z\".\n\n.. versionadded:: 1.18.0\n\"\"\"\n",
                    "rendered": {
                      "text": "\nCAIRO_VERSION_STRING: str = ...\n\"\"\"\nA human-readable string literal containing the version of cairo available\nat compile-time, in the form of \"X.Y.Z\".\n\n.. versionadded:: 1.18.0\n\"\"\"\n",
                      "markdown": "`\nCAIRO_VERSION_STRING: str = ...\n\"\"\"\nA human-readable string literal containing the version of cairo available\nat compile-time, in the form of \"X.Y.Z\".\n\n.. versionadded:: 1.18.0\n\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 30,
                  "endLine": 62,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\nCAIRO_VERSION: int = ...\n\"\"\"\nThe version of cairo available at compile-time in the same format as\nreturned by :func:`cairo_version`\n\n.. versionadded:: 1.18.0\n",
                    "rendered": {
                      "text": "\nCAIRO_VERSION: int = ...\n\"\"\"\nThe version of cairo available at compile-time in the same format as\nreturned by :func:`cairo_version`\n\n.. versionadded:: 1.18.0\n",
                      "markdown": "`\nCAIRO_VERSION: int = ...\n\"\"\"\nThe version of cairo available at compile-time in the same format as\nreturned by :func:`cairo_version`\n\n.. versionadded:: 1.18.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5535,
                  "startColumn": 27,
                  "endLine": 5535,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n        Informs cairo of the new size of the X Drawable underlying the surface.\n        For a surface created for a Window (rather than a Pixmap), this function\n        must be called each time the size of the window changes. (For a\n        subwindow, you are normally resizing the window yourself, but for a\n        toplevel window, it is necessary to listen for ConfigureNotify events.)\n\n",
                    "rendered": {
                      "text": "\n        Informs cairo of the new size of the X Drawable underlying the surface.\n        For a surface created for a Window (rather than a Pixmap), this function\n        must be called each time the size of the window changes. (For a\n        subwindow, you are normally resizing the window yourself, but for a\n        toplevel window, it is necessary to listen for ConfigureNotify events.)\n\n",
                      "markdown": "`\n        Informs cairo of the new size of the X Drawable underlying the surface.\n        For a surface created for a Window (rather than a Pixmap), this function\n        must be called each time the size of the window changes. (For a\n        subwindow, you are normally resizing the window yourself, but for a\n        toplevel window, it is necessary to listen for ConfigureNotify events.)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5387,
                  "startColumn": 19,
                  "endLine": 5387,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n    def __init__(self, red: float, green: float, blue: float, alpha: float=1.0) -> None:\n        \"\"\"\n        :param red: red component of the color\n        :param green: green component of the color\n        :param blue: blue component of the color\n        :param alpha: alpha component of the color\n",
                    "rendered": {
                      "text": "\n    def __init__(self, red: float, green: float, blue: float, alpha: float=1.0) -> None:\n        \"\"\"\n        :param red: red component of the color\n        :param green: green component of the color\n        :param blue: blue component of the color\n        :param alpha: alpha component of the color\n",
                      "markdown": "`\n    def __init__(self, red: float, green: float, blue: float, alpha: float=1.0) -> None:\n        \"\"\"\n        :param red: red component of the color\n        :param green: green component of the color\n        :param blue: blue component of the color\n        :param alpha: alpha component of the color\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5336,
                  "startColumn": 26,
                  "endLine": 5336,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    @classmethod\n    def create_for_target(cls, script: ScriptDevice, target: Surface) -> \"ScriptSurface\":\n        \"\"\"\n        :param script: the script (output device)\n        :param target: a target surface to wrap\n        :raises cairo.Error:\n\n",
                    "rendered": {
                      "text": "    @classmethod\n    def create_for_target(cls, script: ScriptDevice, target: Surface) -> \"ScriptSurface\":\n        \"\"\"\n        :param script: the script (output device)\n        :param target: a target surface to wrap\n        :raises cairo.Error:\n\n",
                      "markdown": "`    @classmethod\n    def create_for_target(cls, script: ScriptDevice, target: Surface) -> \"ScriptSurface\":\n        \"\"\"\n        :param script: the script (output device)\n        :param target: a target surface to wrap\n        :raises cairo.Error:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5324,
                  "startColumn": 26,
                  "endLine": 5324,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n    def __init__(self, script: ScriptDevice, content: Content, width: float, height: float) -> None:\n        \"\"\"\n        :param script: the script (output device)\n        :param content: the content of the surface\n        :param width: width in pixels\n        :param height: height in pixels\n",
                    "rendered": {
                      "text": "\n    def __init__(self, script: ScriptDevice, content: Content, width: float, height: float) -> None:\n        \"\"\"\n        :param script: the script (output device)\n        :param content: the content of the surface\n        :param width: width in pixels\n        :param height: height in pixels\n",
                      "markdown": "`\n    def __init__(self, script: ScriptDevice, content: Content, width: float, height: float) -> None:\n        \"\"\"\n        :param script: the script (output device)\n        :param content: the content of the surface\n        :param width: width in pixels\n        :param height: height in pixels\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5315,
                  "startColumn": 65,
                  "endLine": 5315,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\nclass ScriptSurface(Surface):\n    \"\"\"\n    The script surface provides the ability to render to a native script that\n    matches the cairo drawing model. The scripts can be replayed using tools\n    under the util/cairo-script directory, or with cairo-perf-trace.\n\n",
                    "rendered": {
                      "text": "\nclass ScriptSurface(Surface):\n    \"\"\"\n    The script surface provides the ability to render to a native script that\n    matches the cairo drawing model. The scripts can be replayed using tools\n    under the util/cairo-script directory, or with cairo-perf-trace.\n\n",
                      "markdown": "`\nclass ScriptSurface(Surface):\n    \"\"\"\n    The script surface provides the ability to render to a native script that\n    matches the cairo drawing model. The scripts can be replayed using tools\n    under the util/cairo-script directory, or with cairo-perf-trace.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5315,
                  "startColumn": 7,
                  "endLine": 5315,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\nclass ScriptSurface(Surface):\n    \"\"\"\n    The script surface provides the ability to render to a native script that\n    matches the cairo drawing model. The scripts can be replayed using tools\n    under the util/cairo-script directory, or with cairo-perf-trace.\n\n",
                    "rendered": {
                      "text": "\nclass ScriptSurface(Surface):\n    \"\"\"\n    The script surface provides the ability to render to a native script that\n    matches the cairo drawing model. The scripts can be replayed using tools\n    under the util/cairo-script directory, or with cairo-perf-trace.\n\n",
                      "markdown": "`\nclass ScriptSurface(Surface):\n    \"\"\"\n    The script surface provides the ability to render to a native script that\n    matches the cairo drawing model. The scripts can be replayed using tools\n    under the util/cairo-script directory, or with cairo-perf-trace.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5294,
                  "startColumn": 19,
                  "endLine": 5294,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        \"\"\"\n        :returns: the current output mode of the script\n\n        Queries the script for its current output mode.\n        \"\"\"\n\n    def write_comment(self, comment: str) -> None:\n",
                    "rendered": {
                      "text": "        \"\"\"\n        :returns: the current output mode of the script\n\n        Queries the script for its current output mode.\n        \"\"\"\n\n    def write_comment(self, comment: str) -> None:\n",
                      "markdown": "`        \"\"\"\n        :returns: the current output mode of the script\n\n        Queries the script for its current output mode.\n        \"\"\"\n\n    def write_comment(self, comment: str) -> None:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5292,
                  "startColumn": 48,
                  "endLine": 5293,
                  "snippet": {
                    "text": "\n    def get_mode(self) -> ScriptMode:\n        \"\"\"\n        :returns: the current output mode of the script\n\n        Queries the script for its current output mode.\n        \"\"\"\n\n",
                    "rendered": {
                      "text": "\n    def get_mode(self) -> ScriptMode:\n        \"\"\"\n        :returns: the current output mode of the script\n\n        Queries the script for its current output mode.\n        \"\"\"\n\n",
                      "markdown": "`\n    def get_mode(self) -> ScriptMode:\n        \"\"\"\n        :returns: the current output mode of the script\n\n        Queries the script for its current output mode.\n        \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5287,
                  "startColumn": 37,
                  "endLine": 5288,
                  "snippet": {
                    "text": "        \"\"\"\n        :param mode: the new mode\n\n        Change the output mode of the script\n        \"\"\"\n\n    def get_mode(self) -> ScriptMode:\n        \"\"\"\n",
                    "rendered": {
                      "text": "        \"\"\"\n        :param mode: the new mode\n\n        Change the output mode of the script\n        \"\"\"\n\n    def get_mode(self) -> ScriptMode:\n        \"\"\"\n",
                      "markdown": "`        \"\"\"\n        :param mode: the new mode\n\n        Change the output mode of the script\n        \"\"\"\n\n    def get_mode(self) -> ScriptMode:\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5116,
                  "startColumn": 24,
                  "endLine": 5116,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n    A *RecordingSurface* is logically unbounded, i.e. it has no implicit\n    constraint on the size of the drawing surface. However, in practice this is\n    rarely useful as you wish to replay against a particular target surface with\n    known bounds. For this case, it is more efficient to specify the target\n    extents to the recording surface upon creation.\n\n",
                    "rendered": {
                      "text": "\n    A *RecordingSurface* is logically unbounded, i.e. it has no implicit\n    constraint on the size of the drawing surface. However, in practice this is\n    rarely useful as you wish to replay against a particular target surface with\n    known bounds. For this case, it is more efficient to specify the target\n    extents to the recording surface upon creation.\n\n",
                      "markdown": "`\n    A *RecordingSurface* is logically unbounded, i.e. it has no implicit\n    constraint on the size of the drawing surface. However, in practice this is\n    rarely useful as you wish to replay against a particular target surface with\n    known bounds. For this case, it is more efficient to specify the target\n    extents to the recording surface upon creation.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 5018,
                  "startColumn": 33,
                  "endLine": 5018,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        \"\"\"\n        :param content:\n            content type for the pixel data that will be returned. Knowing the\n            content type ahead of time is used for analysing the operation and\n            picking the appropriate rendering path.\n        :param width:\n            maximum size of the sample area\n",
                    "rendered": {
                      "text": "        \"\"\"\n        :param content:\n            content type for the pixel data that will be returned. Knowing the\n            content type ahead of time is used for analysing the operation and\n            picking the appropriate rendering path.\n        :param width:\n            maximum size of the sample area\n",
                      "markdown": "`        \"\"\"\n        :param content:\n            content type for the pixel data that will be returned. Knowing the\n            content type ahead of time is used for analysing the operation and\n            picking the appropriate rendering path.\n        :param width:\n            maximum size of the sample area\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4998,
                  "startColumn": 44,
                  "endLine": 4998,
                  "endColumn": 50,
                  "snippet": {
                    "text": "class RasterSourcePattern(Pattern):\n    \"\"\"\n    The raster source provides the ability to supply arbitrary pixel data whilst\n    rendering. The pixels are queried at the time of rasterisation by means of\n    user callback functions, allowing for the ultimate flexibility. For example,\n    in handling compressed image sources, you may keep a MRU cache of decompressed\n    images and decompress sources on the fly and discard old ones to conserve\n",
                    "rendered": {
                      "text": "class RasterSourcePattern(Pattern):\n    \"\"\"\n    The raster source provides the ability to supply arbitrary pixel data whilst\n    rendering. The pixels are queried at the time of rasterisation by means of\n    user callback functions, allowing for the ultimate flexibility. For example,\n    in handling compressed image sources, you may keep a MRU cache of decompressed\n    images and decompress sources on the fly and discard old ones to conserve\n",
                      "markdown": "`class RasterSourcePattern(Pattern):\n    \"\"\"\n    The raster source provides the ability to supply arbitrary pixel data whilst\n    rendering. The pixels are queried at the time of rasterisation by means of\n    user callback functions, allowing for the ultimate flexibility. For example,\n    in handling compressed image sources, you may keep a MRU cache of decompressed\n    images and decompress sources on the fly and discard old ones to conserve\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4938,
                  "startColumn": 42,
                  "endLine": 4938,
                  "endColumn": 48,
                  "snippet": {
                    "text": "        file. See :class:`SVGUnit` for a list of available unit values that can\n        be used here.\n\n        This function can be called at any time before generating the SVG file.\n\n        However to minimize the risk of ambiguities it's recommended to call it\n        before any drawing operations have been performed on the given surface,\n",
                    "rendered": {
                      "text": "        file. See :class:`SVGUnit` for a list of available unit values that can\n        be used here.\n\n        This function can be called at any time before generating the SVG file.\n\n        However to minimize the risk of ambiguities it's recommended to call it\n        before any drawing operations have been performed on the given surface,\n",
                      "markdown": "`        file. See :class:`SVGUnit` for a list of available unit values that can\n        be used here.\n\n        This function can be called at any time before generating the SVG file.\n\n        However to minimize the risk of ambiguities it's recommended to call it\n        before any drawing operations have been performed on the given surface,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4618,
                  "startColumn": 19,
                  "endLine": 4618,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        Set document metadata. The :attr:`PDFMetadata.CREATE_DATE` and\n        :attr:`PDFMetadata.MOD_DATE` values must be in ISO-8601 format:\n        YYYY-MM-DDThh:mm:ss. An optional timezone of the form \"[+/-]hh:mm\" or\n        \"Z\" for UTC time can be appended. All other metadata values can be any\n        UTF-8 string.\n\n        .. versionadded:: 1.18.0 Only available with cairo 1.15.10+\n",
                    "rendered": {
                      "text": "        Set document metadata. The :attr:`PDFMetadata.CREATE_DATE` and\n        :attr:`PDFMetadata.MOD_DATE` values must be in ISO-8601 format:\n        YYYY-MM-DDThh:mm:ss. An optional timezone of the form \"[+/-]hh:mm\" or\n        \"Z\" for UTC time can be appended. All other metadata values can be any\n        UTF-8 string.\n\n        .. versionadded:: 1.18.0 Only available with cairo 1.15.10+\n",
                      "markdown": "`        Set document metadata. The :attr:`PDFMetadata.CREATE_DATE` and\n        :attr:`PDFMetadata.MOD_DATE` values must be in ISO-8601 format:\n        YYYY-MM-DDThh:mm:ss. An optional timezone of the form \"[+/-]hh:mm\" or\n        \"Z\" for UTC time can be appended. All other metadata values can be any\n        UTF-8 string.\n\n        .. versionadded:: 1.18.0 Only available with cairo 1.15.10+\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4597,
                  "startColumn": 78,
                  "endLine": 4598,
                  "snippet": {
                    "text": "    def add_outline(self, parent_id: int, utf8: str, link_attribs: str, flags: PDFOutlineFlags) -> int:\n        \"\"\"\n        :param parent_id:\n            the id of the parent item or :data:`PDF_OUTLINE_ROOT` if this is a top\n            level item.\n        :param utf8:\n            the name of the outline\n        :param link_attribs:\n",
                    "rendered": {
                      "text": "    def add_outline(self, parent_id: int, utf8: str, link_attribs: str, flags: PDFOutlineFlags) -> int:\n        \"\"\"\n        :param parent_id:\n            the id of the parent item or :data:`PDF_OUTLINE_ROOT` if this is a top\n            level item.\n        :param utf8:\n            the name of the outline\n        :param link_attribs:\n",
                      "markdown": "`    def add_outline(self, parent_id: int, utf8: str, link_attribs: str, flags: PDFOutlineFlags) -> int:\n        \"\"\"\n        :param parent_id:\n            the id of the parent item or :data:`PDF_OUTLINE_ROOT` if this is a top\n            level item.\n        :param utf8:\n            the name of the outline\n        :param link_attribs:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4469,
                  "startColumn": 19,
                  "endLine": 4469,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    def set_corner_color_rgba(self, corner_num: int, red: float, green: float, blue: float, alpha: float) -> None:\n        \"\"\"\n        :param corner_num: the corner to set the color for\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :param alpha: alpha component of color\n",
                    "rendered": {
                      "text": "    def set_corner_color_rgba(self, corner_num: int, red: float, green: float, blue: float, alpha: float) -> None:\n        \"\"\"\n        :param corner_num: the corner to set the color for\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :param alpha: alpha component of color\n",
                      "markdown": "`    def set_corner_color_rgba(self, corner_num: int, red: float, green: float, blue: float, alpha: float) -> None:\n        \"\"\"\n        :param corner_num: the corner to set the color for\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :param alpha: alpha component of color\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4452,
                  "startColumn": 19,
                  "endLine": 4452,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    def set_corner_color_rgb(self, corner_num: int, red: float, green: float, blue: float) -> None:\n        \"\"\"\n        :param corner_num: the corner to set the color for\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :raises Error:\n",
                    "rendered": {
                      "text": "    def set_corner_color_rgb(self, corner_num: int, red: float, green: float, blue: float) -> None:\n        \"\"\"\n        :param corner_num: the corner to set the color for\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :raises Error:\n",
                      "markdown": "`    def set_corner_color_rgb(self, corner_num: int, red: float, green: float, blue: float) -> None:\n        \"\"\"\n        :param corner_num: the corner to set the color for\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :raises Error:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4245,
                  "startColumn": 31,
                  "endLine": 4245,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    side have the same color, the patch is a Gouraud-shaded triangle.\n\n    Patches may be oriented differently to the above diagram. For example the\n    first point could be at the top left. The diagram only shows the\n    relationship between the sides, corners and control points. Regardless of\n    where the first point is located, when specifying colors, corner 0 will\n    always be the first point, corner 1 the point between side 0 and side 1\n",
                    "rendered": {
                      "text": "    side have the same color, the patch is a Gouraud-shaded triangle.\n\n    Patches may be oriented differently to the above diagram. For example the\n    first point could be at the top left. The diagram only shows the\n    relationship between the sides, corners and control points. Regardless of\n    where the first point is located, when specifying colors, corner 0 will\n    always be the first point, corner 1 the point between side 0 and side 1\n",
                      "markdown": "`    side have the same color, the patch is a Gouraud-shaded triangle.\n\n    Patches may be oriented differently to the above diagram. For example the\n    first point could be at the top left. The diagram only shows the\n    relationship between the sides, corners and control points. Regardless of\n    where the first point is located, when specifying colors, corner 0 will\n    always be the first point, corner 1 the point between side 0 and side 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4123,
                  "startColumn": 19,
                  "endLine": 4123,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    def add_color_stop_rgba(self, offset: float, red: float, green: float, blue: float, alpha: float) -> None:\n        \"\"\"\n        :param offset: an offset in the range [0.0 .. 1.0]\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :param alpha: alpha component of color\n",
                    "rendered": {
                      "text": "    def add_color_stop_rgba(self, offset: float, red: float, green: float, blue: float, alpha: float) -> None:\n        \"\"\"\n        :param offset: an offset in the range [0.0 .. 1.0]\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :param alpha: alpha component of color\n",
                      "markdown": "`    def add_color_stop_rgba(self, offset: float, red: float, green: float, blue: float, alpha: float) -> None:\n        \"\"\"\n        :param offset: an offset in the range [0.0 .. 1.0]\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :param alpha: alpha component of color\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 4101,
                  "startColumn": 19,
                  "endLine": 4101,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    def add_color_stop_rgb(self, offset: float, red: float, green: float, blue: float) -> None:\n        \"\"\"\n        :param offset: an offset in the range [0.0 .. 1.0]\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n\n",
                    "rendered": {
                      "text": "    def add_color_stop_rgb(self, offset: float, red: float, green: float, blue: float) -> None:\n        \"\"\"\n        :param offset: an offset in the range [0.0 .. 1.0]\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n\n",
                      "markdown": "`    def add_color_stop_rgb(self, offset: float, red: float, green: float, blue: float) -> None:\n        \"\"\"\n        :param offset: an offset in the range [0.0 .. 1.0]\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3933,
                  "startColumn": 52,
                  "endLine": 3933,
                  "endColumn": 58,
                  "snippet": {
                    "text": "    def stroke_preserve(self) -> None:\n        \"\"\"\n        A drawing operator that strokes the current path according to the\n        current line width, line join, line cap, and dash settings. Unlike\n        :meth:`.stroke`, :meth:`.stroke_preserve` preserves the path within the\n        cairo context.\n\n",
                    "rendered": {
                      "text": "    def stroke_preserve(self) -> None:\n        \"\"\"\n        A drawing operator that strokes the current path according to the\n        current line width, line join, line cap, and dash settings. Unlike\n        :meth:`.stroke`, :meth:`.stroke_preserve` preserves the path within the\n        cairo context.\n\n",
                      "markdown": "`    def stroke_preserve(self) -> None:\n        \"\"\"\n        A drawing operator that strokes the current path according to the\n        current line width, line join, line cap, and dash settings. Unlike\n        :meth:`.stroke`, :meth:`.stroke_preserve` preserves the path within the\n        cairo context.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3906,
                  "startColumn": 15,
                  "endLine": 3906,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        :returns: (x1, y1, x2, y2), all float\n\n        * *x1*: left of the resulting extents\n        * *y1*: top of the resulting extents\n        * *x2*: right of the resulting extents\n        * *y2*: bottom of the resulting extents\n\n",
                    "rendered": {
                      "text": "        :returns: (x1, y1, x2, y2), all float\n\n        * *x1*: left of the resulting extents\n        * *y1*: top of the resulting extents\n        * *x2*: right of the resulting extents\n        * *y2*: bottom of the resulting extents\n\n",
                      "markdown": "`        :returns: (x1, y1, x2, y2), all float\n\n        * *x1*: left of the resulting extents\n        * *y1*: top of the resulting extents\n        * *x2*: right of the resulting extents\n        * *y2*: bottom of the resulting extents\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3874,
                  "startColumn": 52,
                  "endLine": 3874,
                  "endColumn": 58,
                  "snippet": {
                    "text": "    def stroke(self) -> None:\n        \"\"\"\n        A drawing operator that strokes the current path according to the\n        current line width, line join, line cap, and dash settings. After\n        :meth:`.stroke`, the current path will be cleared from the cairo\n        context. See :meth:`.set_line_width`, :meth:`.set_line_join`,\n        :meth:`.set_line_cap`, :meth:`.set_dash`, and :meth:`.stroke_preserve`.\n",
                    "rendered": {
                      "text": "    def stroke(self) -> None:\n        \"\"\"\n        A drawing operator that strokes the current path according to the\n        current line width, line join, line cap, and dash settings. After\n        :meth:`.stroke`, the current path will be cleared from the cairo\n        context. See :meth:`.set_line_width`, :meth:`.set_line_join`,\n        :meth:`.set_line_cap`, :meth:`.set_dash`, and :meth:`.stroke_preserve`.\n",
                      "markdown": "`    def stroke(self) -> None:\n        \"\"\"\n        A drawing operator that strokes the current path according to the\n        current line width, line join, line cap, and dash settings. After\n        :meth:`.stroke`, the current path will be cleared from the cairo\n        context. See :meth:`.set_line_width`, :meth:`.set_line_join`,\n        :meth:`.set_line_cap`, :meth:`.set_dash`, and :meth:`.stroke_preserve`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3741,
                  "startColumn": 19,
                  "endLine": 3741,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n    def set_source_rgba(self, red: float, green: float, blue: float, alpha: float = 1.0) -> None:\n        \"\"\"\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :param alpha: alpha component of color\n",
                    "rendered": {
                      "text": "\n    def set_source_rgba(self, red: float, green: float, blue: float, alpha: float = 1.0) -> None:\n        \"\"\"\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :param alpha: alpha component of color\n",
                      "markdown": "`\n    def set_source_rgba(self, red: float, green: float, blue: float, alpha: float = 1.0) -> None:\n        \"\"\"\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :param alpha: alpha component of color\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3723,
                  "startColumn": 19,
                  "endLine": 3723,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n    def set_source_rgb(self, red: float, green: float, blue: float) -> None:\n        \"\"\"\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n\n",
                    "rendered": {
                      "text": "\n    def set_source_rgb(self, red: float, green: float, blue: float) -> None:\n        \"\"\"\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n\n",
                      "markdown": "`\n    def set_source_rgb(self, red: float, green: float, blue: float) -> None:\n        \"\"\"\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3713,
                  "startColumn": 30,
                  "endLine": 3713,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        new source pattern is set.\n\n        Note: The pattern's transformation matrix will be locked to the user\n        space in effect at the time of :meth:`.set_source`. This means that\n        further modifications of the current transformation matrix will not\n        affect the source pattern. See :meth:`Pattern.set_matrix`.\n\n",
                    "rendered": {
                      "text": "        new source pattern is set.\n\n        Note: The pattern's transformation matrix will be locked to the user\n        space in effect at the time of :meth:`.set_source`. This means that\n        further modifications of the current transformation matrix will not\n        affect the source pattern. See :meth:`Pattern.set_matrix`.\n\n",
                      "markdown": "`        new source pattern is set.\n\n        Note: The pattern's transformation matrix will be locked to the user\n        space in effect at the time of :meth:`.set_source`. This means that\n        further modifications of the current transformation matrix will not\n        affect the source pattern. See :meth:`Pattern.set_matrix`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3633,
                  "startColumn": 62,
                  "endLine": 3633,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n        Note: When the description above refers to user space and CTM it refers\n        to the user space and CTM in effect at the time of the stroking\n        operation, not the user space and CTM in effect at the time of the call\n        to :meth:`.set_line_width`. The simplest usage makes both of these\n        spaces identical. That is, if there is no change to the CTM between a\n        call to :meth:`.set_line_width` and the stroking operation, then one can\n",
                    "rendered": {
                      "text": "\n        Note: When the description above refers to user space and CTM it refers\n        to the user space and CTM in effect at the time of the stroking\n        operation, not the user space and CTM in effect at the time of the call\n        to :meth:`.set_line_width`. The simplest usage makes both of these\n        spaces identical. That is, if there is no change to the CTM between a\n        call to :meth:`.set_line_width` and the stroking operation, then one can\n",
                      "markdown": "`\n        Note: When the description above refers to user space and CTM it refers\n        to the user space and CTM in effect at the time of the stroking\n        operation, not the user space and CTM in effect at the time of the call\n        to :meth:`.set_line_width`. The simplest usage makes both of these\n        spaces identical. That is, if there is no change to the CTM between a\n        call to :meth:`.set_line_width` and the stroking operation, then one can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3632,
                  "startColumn": 50,
                  "endLine": 3632,
                  "endColumn": 56,
                  "snippet": {
                    "text": "        scaling/shear/rotation of the CTM).\n\n        Note: When the description above refers to user space and CTM it refers\n        to the user space and CTM in effect at the time of the stroking\n        operation, not the user space and CTM in effect at the time of the call\n        to :meth:`.set_line_width`. The simplest usage makes both of these\n        spaces identical. That is, if there is no change to the CTM between a\n",
                    "rendered": {
                      "text": "        scaling/shear/rotation of the CTM).\n\n        Note: When the description above refers to user space and CTM it refers\n        to the user space and CTM in effect at the time of the stroking\n        operation, not the user space and CTM in effect at the time of the call\n        to :meth:`.set_line_width`. The simplest usage makes both of these\n        spaces identical. That is, if there is no change to the CTM between a\n",
                      "markdown": "`        scaling/shear/rotation of the CTM).\n\n        Note: When the description above refers to user space and CTM it refers\n        to the user space and CTM in effect at the time of the stroking\n        operation, not the user space and CTM in effect at the time of the call\n        to :meth:`.set_line_width`. The simplest usage makes both of these\n        spaces identical. That is, if there is no change to the CTM between a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3502,
                  "startColumn": 7,
                  "endLine": 3502,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n        Note: The length values are in user-space units as evaluated at the time\n        of stroking. This is not necessarily the same as the user space at the\n        time of :meth:`.set_dash`.\n\n        If the number of dashes is 0 dashing is disabled.\n\n",
                    "rendered": {
                      "text": "\n        Note: The length values are in user-space units as evaluated at the time\n        of stroking. This is not necessarily the same as the user space at the\n        time of :meth:`.set_dash`.\n\n        If the number of dashes is 0 dashing is disabled.\n\n",
                      "markdown": "`\n        Note: The length values are in user-space units as evaluated at the time\n        of stroking. This is not necessarily the same as the user space at the\n        time of :meth:`.set_dash`.\n\n        If the number of dashes is 0 dashing is disabled.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3500,
                  "startColumn": 75,
                  "endLine": 3501,
                  "snippet": {
                    "text": "        0.0 with :attr:`cairo.LineCap.ROUND` or :attr:`cairo.LineCap.SQUARE`\n        in order to distributed dots or squares along a path.\n\n        Note: The length values are in user-space units as evaluated at the time\n        of stroking. This is not necessarily the same as the user space at the\n        time of :meth:`.set_dash`.\n\n        If the number of dashes is 0 dashing is disabled.\n",
                    "rendered": {
                      "text": "        0.0 with :attr:`cairo.LineCap.ROUND` or :attr:`cairo.LineCap.SQUARE`\n        in order to distributed dots or squares along a path.\n\n        Note: The length values are in user-space units as evaluated at the time\n        of stroking. This is not necessarily the same as the user space at the\n        time of :meth:`.set_dash`.\n\n        If the number of dashes is 0 dashing is disabled.\n",
                      "markdown": "`        0.0 with :attr:`cairo.LineCap.ROUND` or :attr:`cairo.LineCap.SQUARE`\n        in order to distributed dots or squares along a path.\n\n        Note: The length values are in user-space units as evaluated at the time\n        of stroking. This is not necessarily the same as the user space at the\n        time of :meth:`.set_dash`.\n\n        If the number of dashes is 0 dashing is disabled.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3489,
                  "startColumn": 62,
                  "endLine": 3489,
                  "endColumn": 68,
                  "snippet": {
                    "text": "        :raises: :exc:`cairo.Error` if any value in *dashes* is negative, or if\n            all values are 0.\n\n        Sets the dash pattern to be used by :meth:`.stroke`. A dash pattern is\n        specified by *dashes* - a sequence of positive values. Each value\n        provides the length of alternate \"on\" and \"off\" portions of the\n        stroke. The *offset* specifies an offset into the pattern at which the\n",
                    "rendered": {
                      "text": "        :raises: :exc:`cairo.Error` if any value in *dashes* is negative, or if\n            all values are 0.\n\n        Sets the dash pattern to be used by :meth:`.stroke`. A dash pattern is\n        specified by *dashes* - a sequence of positive values. Each value\n        provides the length of alternate \"on\" and \"off\" portions of the\n        stroke. The *offset* specifies an offset into the pattern at which the\n",
                      "markdown": "`        :raises: :exc:`cairo.Error` if any value in *dashes* is negative, or if\n            all values are 0.\n\n        Sets the dash pattern to be used by :meth:`.stroke`. A dash pattern is\n        specified by *dashes* - a sequence of positive values. Each value\n        provides the length of alternate \"on\" and \"off\" portions of the\n        stroke. The *offset* specifies an offset into the pattern at which the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3489,
                  "startColumn": 16,
                  "endLine": 3489,
                  "endColumn": 22,
                  "snippet": {
                    "text": "        :raises: :exc:`cairo.Error` if any value in *dashes* is negative, or if\n            all values are 0.\n\n        Sets the dash pattern to be used by :meth:`.stroke`. A dash pattern is\n        specified by *dashes* - a sequence of positive values. Each value\n        provides the length of alternate \"on\" and \"off\" portions of the\n        stroke. The *offset* specifies an offset into the pattern at which the\n",
                    "rendered": {
                      "text": "        :raises: :exc:`cairo.Error` if any value in *dashes* is negative, or if\n            all values are 0.\n\n        Sets the dash pattern to be used by :meth:`.stroke`. A dash pattern is\n        specified by *dashes* - a sequence of positive values. Each value\n        provides the length of alternate \"on\" and \"off\" portions of the\n        stroke. The *offset* specifies an offset into the pattern at which the\n",
                      "markdown": "`        :raises: :exc:`cairo.Error` if any value in *dashes* is negative, or if\n            all values are 0.\n\n        Sets the dash pattern to be used by :meth:`.stroke`. A dash pattern is\n        specified by *dashes* - a sequence of positive values. Each value\n        provides the length of alternate \"on\" and \"off\" portions of the\n        stroke. The *offset* specifies an offset into the pattern at which the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3484,
                  "startColumn": 41,
                  "endLine": 3484,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        \"\"\"\n        :param dashes: a sequence specifying alternate lengths of on and off\n            stroke portions as float.\n        :param offset: an offset into the dash pattern at which the stroke\n            should start, defaults to 0.\n        :raises: :exc:`cairo.Error` if any value in *dashes* is negative, or if\n            all values are 0.\n",
                    "rendered": {
                      "text": "        \"\"\"\n        :param dashes: a sequence specifying alternate lengths of on and off\n            stroke portions as float.\n        :param offset: an offset into the dash pattern at which the stroke\n            should start, defaults to 0.\n        :raises: :exc:`cairo.Error` if any value in *dashes* is negative, or if\n            all values are 0.\n",
                      "markdown": "`        \"\"\"\n        :param dashes: a sequence specifying alternate lengths of on and off\n            stroke portions as float.\n        :param offset: an offset into the dash pattern at which the stroke\n            should start, defaults to 0.\n        :raises: :exc:`cairo.Error` if any value in *dashes* is negative, or if\n            all values are 0.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3303,
                  "startColumn": 41,
                  "endLine": 3303,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    def rectangle(self, x: float, y: float, width: float, height: float) -> None:\n        \"\"\"\n        :param x: the X coordinate of the top left corner of the rectangle\n        :param y: the Y coordinate to the top left corner of the rectangle\n        :param width: the width of the rectangle\n        :param height: the height of the rectangle\n\n",
                    "rendered": {
                      "text": "    def rectangle(self, x: float, y: float, width: float, height: float) -> None:\n        \"\"\"\n        :param x: the X coordinate of the top left corner of the rectangle\n        :param y: the Y coordinate to the top left corner of the rectangle\n        :param width: the width of the rectangle\n        :param height: the height of the rectangle\n\n",
                      "markdown": "`    def rectangle(self, x: float, y: float, width: float, height: float) -> None:\n        \"\"\"\n        :param x: the X coordinate of the top left corner of the rectangle\n        :param y: the Y coordinate to the top left corner of the rectangle\n        :param width: the width of the rectangle\n        :param height: the height of the rectangle\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3302,
                  "startColumn": 41,
                  "endLine": 3302,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n    def rectangle(self, x: float, y: float, width: float, height: float) -> None:\n        \"\"\"\n        :param x: the X coordinate of the top left corner of the rectangle\n        :param y: the Y coordinate to the top left corner of the rectangle\n        :param width: the width of the rectangle\n        :param height: the height of the rectangle\n",
                    "rendered": {
                      "text": "\n    def rectangle(self, x: float, y: float, width: float, height: float) -> None:\n        \"\"\"\n        :param x: the X coordinate of the top left corner of the rectangle\n        :param y: the Y coordinate to the top left corner of the rectangle\n        :param width: the width of the rectangle\n        :param height: the height of the rectangle\n",
                      "markdown": "`\n    def rectangle(self, x: float, y: float, width: float, height: float) -> None:\n        \"\"\"\n        :param x: the X coordinate of the top left corner of the rectangle\n        :param y: the Y coordinate to the top left corner of the rectangle\n        :param width: the width of the rectangle\n        :param height: the height of the rectangle\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 3172,
                  "startColumn": 15,
                  "endLine": 3172,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        :returns: (x1, y1, x2, y2), all float\n\n        * *x1*: left of the resulting extents\n        * *y1*: top of the resulting extents\n        * *x2*: right of the resulting extents\n        * *y2*: bottom of the resulting extents\n\n",
                    "rendered": {
                      "text": "        :returns: (x1, y1, x2, y2), all float\n\n        * *x1*: left of the resulting extents\n        * *y1*: top of the resulting extents\n        * *x2*: right of the resulting extents\n        * *y2*: bottom of the resulting extents\n\n",
                      "markdown": "`        :returns: (x1, y1, x2, y2), all float\n\n        * *x1*: left of the resulting extents\n        * *y1*: top of the resulting extents\n        * *x2*: right of the resulting extents\n        * *y2*: bottom of the resulting extents\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2886,
                  "startColumn": 58,
                  "endLine": 2886,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\n    def get_dash_count(self) -> int:\n        \"\"\"\n        :returns: the length of the dash array, or 0 if no dash array set.\n\n        See also :meth:`Context.set_dash` and :meth:`Context.get_dash`.\n\n",
                    "rendered": {
                      "text": "\n    def get_dash_count(self) -> int:\n        \"\"\"\n        :returns: the length of the dash array, or 0 if no dash array set.\n\n        See also :meth:`Context.set_dash` and :meth:`Context.get_dash`.\n\n",
                      "markdown": "`\n    def get_dash_count(self) -> int:\n        \"\"\"\n        :returns: the length of the dash array, or 0 if no dash array set.\n\n        See also :meth:`Context.set_dash` and :meth:`Context.get_dash`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2886,
                  "startColumn": 35,
                  "endLine": 2886,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    def get_dash_count(self) -> int:\n        \"\"\"\n        :returns: the length of the dash array, or 0 if no dash array set.\n\n        See also :meth:`Context.set_dash` and :meth:`Context.get_dash`.\n\n",
                    "rendered": {
                      "text": "\n    def get_dash_count(self) -> int:\n        \"\"\"\n        :returns: the length of the dash array, or 0 if no dash array set.\n\n        See also :meth:`Context.set_dash` and :meth:`Context.get_dash`.\n\n",
                      "markdown": "`\n    def get_dash_count(self) -> int:\n        \"\"\"\n        :returns: the length of the dash array, or 0 if no dash array set.\n\n        See also :meth:`Context.set_dash` and :meth:`Context.get_dash`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2879,
                  "startColumn": 24,
                  "endLine": 2879,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        * *dashes*: return value as a tuple for the dash array\n        * *offset*: return value as float for the current dash offset\n\n        Gets the current dash array.\n\n        .. versionadded:: 1.4\n        \"\"\"\n",
                    "rendered": {
                      "text": "        * *dashes*: return value as a tuple for the dash array\n        * *offset*: return value as float for the current dash offset\n\n        Gets the current dash array.\n\n        .. versionadded:: 1.4\n        \"\"\"\n",
                      "markdown": "`        * *dashes*: return value as a tuple for the dash array\n        * *offset*: return value as float for the current dash offset\n\n        Gets the current dash array.\n\n        .. versionadded:: 1.4\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2877,
                  "startColumn": 57,
                  "endLine": 2877,
                  "endColumn": 63,
                  "snippet": {
                    "text": "        :returns: (dashes, offset)\n\n        * *dashes*: return value as a tuple for the dash array\n        * *offset*: return value as float for the current dash offset\n\n        Gets the current dash array.\n\n",
                    "rendered": {
                      "text": "        :returns: (dashes, offset)\n\n        * *dashes*: return value as a tuple for the dash array\n        * *offset*: return value as float for the current dash offset\n\n        Gets the current dash array.\n\n",
                      "markdown": "`        :returns: (dashes, offset)\n\n        * *dashes*: return value as a tuple for the dash array\n        * *offset*: return value as float for the current dash offset\n\n        Gets the current dash array.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2876,
                  "startColumn": 51,
                  "endLine": 2876,
                  "endColumn": 57,
                  "snippet": {
                    "text": "        \"\"\"\n        :returns: (dashes, offset)\n\n        * *dashes*: return value as a tuple for the dash array\n        * *offset*: return value as float for the current dash offset\n\n        Gets the current dash array.\n",
                    "rendered": {
                      "text": "        \"\"\"\n        :returns: (dashes, offset)\n\n        * *dashes*: return value as a tuple for the dash array\n        * *offset*: return value as float for the current dash offset\n\n        Gets the current dash array.\n",
                      "markdown": "`        \"\"\"\n        :returns: (dashes, offset)\n\n        * *dashes*: return value as a tuple for the dash array\n        * *offset*: return value as float for the current dash offset\n\n        Gets the current dash array.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2791,
                  "startColumn": 15,
                  "endLine": 2791,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        :returns: (x1, y1, x2, y2), all float\n\n        * *x1*: left of the resulting extents\n        * *y1*: top of the resulting extents\n        * *x2*: right of the resulting extents\n        * *y2*: bottom of the resulting extents\n\n",
                    "rendered": {
                      "text": "        :returns: (x1, y1, x2, y2), all float\n\n        * *x1*: left of the resulting extents\n        * *y1*: top of the resulting extents\n        * *x2*: right of the resulting extents\n        * *y2*: bottom of the resulting extents\n\n",
                      "markdown": "`        :returns: (x1, y1, x2, y2), all float\n\n        * *x1*: left of the resulting extents\n        * *y1*: top of the resulting extents\n        * *x2*: right of the resulting extents\n        * *y2*: bottom of the resulting extents\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2636,
                  "startColumn": 15,
                  "endLine": 2636,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        :returns: (x1, y1, x2, y2), all float\n\n        * *x1*: left of the resulting extents\n        * *y1*: top of the resulting extents\n        * *x2*: right of the resulting extents\n        * *y2*: bottom of the resulting extents\n\n",
                    "rendered": {
                      "text": "        :returns: (x1, y1, x2, y2), all float\n\n        * *x1*: left of the resulting extents\n        * *y1*: top of the resulting extents\n        * *x2*: right of the resulting extents\n        * *y2*: bottom of the resulting extents\n\n",
                      "markdown": "`        :returns: (x1, y1, x2, y2), all float\n\n        * *x1*: left of the resulting extents\n        * *y1*: top of the resulting extents\n        * *x2*: right of the resulting extents\n        * *y2*: bottom of the resulting extents\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 2305,
                  "startColumn": 62,
                  "endLine": 2305,
                  "endColumn": 68,
                  "snippet": {
                    "text": "        still possible, but they are always performed at the native device\n        resolution. So this function has no effect on those backends.\n\n        Note: The fallback resolution only takes effect at the time of\n        completing a page (with :meth:`Context.show_page` or\n        :meth:`Context.copy_page`) so there is currently no way to have more\n        than one fallback resolution in effect on a single page.\n",
                    "rendered": {
                      "text": "        still possible, but they are always performed at the native device\n        resolution. So this function has no effect on those backends.\n\n        Note: The fallback resolution only takes effect at the time of\n        completing a page (with :meth:`Context.show_page` or\n        :meth:`Context.copy_page`) so there is currently no way to have more\n        than one fallback resolution in effect on a single page.\n",
                      "markdown": "`        still possible, but they are always performed at the native device\n        resolution. So this function has no effect on those backends.\n\n        Note: The fallback resolution only takes effect at the time of\n        completing a page (with :meth:`Context.show_page` or\n        :meth:`Context.copy_page`) so there is currently no way to have more\n        than one fallback resolution in effect on a single page.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 1956,
                  "startColumn": 68,
                  "endLine": 1957,
                  "snippet": {
                    "text": "\n        .. note::\n\n            You must never acquire two different devices at the same time\n            unless this is explicitly allowed. Otherwise the possibility of\n            deadlocks exist. As various Cairo functions can acquire devices\n            when called, these functions may also cause deadlocks when you\n            call them with an acquired device. So you must not have a device\n",
                    "rendered": {
                      "text": "\n        .. note::\n\n            You must never acquire two different devices at the same time\n            unless this is explicitly allowed. Otherwise the possibility of\n            deadlocks exist. As various Cairo functions can acquire devices\n            when called, these functions may also cause deadlocks when you\n            call them with an acquired device. So you must not have a device\n",
                      "markdown": "`\n        .. note::\n\n            You must never acquire two different devices at the same time\n            unless this is explicitly allowed. Otherwise the possibility of\n            deadlocks exist. As various Cairo functions can acquire devices\n            when called, these functions may also cause deadlocks when you\n            call them with an acquired device. So you must not have a device\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 1718,
                  "startColumn": 19,
                  "endLine": 1718,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    def set_custom_palette_color(self, index: int, red: float, green: float, blue: float, alpha: float) -> None:\n        \"\"\"\n        :param index: the index of the color to set\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :param alpha: alpha component of color\n",
                    "rendered": {
                      "text": "    def set_custom_palette_color(self, index: int, red: float, green: float, blue: float, alpha: float) -> None:\n        \"\"\"\n        :param index: the index of the color to set\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :param alpha: alpha component of color\n",
                      "markdown": "`    def set_custom_palette_color(self, index: int, red: float, green: float, blue: float, alpha: float) -> None:\n        \"\"\"\n        :param index: the index of the color to set\n        :param red: red component of color\n        :param green: green component of color\n        :param blue: blue component of color\n        :param alpha: alpha component of color\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 1492,
                  "startColumn": 31,
                  "endLine": 1492,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        :param x:\n            X coordinate of the left side of the rectangle.\n        :param y:\n            Y coordinate of the top side of the rectangle.\n        :param width:\n            Width of the rectangle.\n        :param height:\n",
                    "rendered": {
                      "text": "        :param x:\n            X coordinate of the left side of the rectangle.\n        :param y:\n            Y coordinate of the top side of the rectangle.\n        :param width:\n            Width of the rectangle.\n        :param height:\n",
                      "markdown": "`        :param x:\n            X coordinate of the left side of the rectangle.\n        :param y:\n            Y coordinate of the top side of the rectangle.\n        :param width:\n            Width of the rectangle.\n        :param height:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 1029,
                  "startColumn": 12,
                  "endLine": 1029,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\nclass ScriptMode(_IntEnum):\n    \"\"\"\n    A set of script output variants.\n\n    .. versionadded:: 1.14\n    \"\"\"\n",
                    "rendered": {
                      "text": "\nclass ScriptMode(_IntEnum):\n    \"\"\"\n    A set of script output variants.\n\n    .. versionadded:: 1.14\n    \"\"\"\n",
                      "markdown": "`\nclass ScriptMode(_IntEnum):\n    \"\"\"\n    A set of script output variants.\n\n    .. versionadded:: 1.14\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 680,
                  "startColumn": 27,
                  "endLine": 680,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    \"\"\"draw source where there was no destination content (unbounded)\"\"\"\n\n    OVER: \"Operator\" = ...\n    \"\"\"draw source layer on top of destination layer (bounded)\"\"\"\n\n    OVERLAY: \"Operator\" = ...\n    \"\"\"\n",
                    "rendered": {
                      "text": "    \"\"\"draw source where there was no destination content (unbounded)\"\"\"\n\n    OVER: \"Operator\" = ...\n    \"\"\"draw source layer on top of destination layer (bounded)\"\"\"\n\n    OVERLAY: \"Operator\" = ...\n    \"\"\"\n",
                      "markdown": "`    \"\"\"draw source where there was no destination content (unbounded)\"\"\"\n\n    OVER: \"Operator\" = ...\n    \"\"\"draw source layer on top of destination layer (bounded)\"\"\"\n\n    OVERLAY: \"Operator\" = ...\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 623,
                  "startColumn": 26,
                  "endLine": 623,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    \"\"\"leave destination only where there was no source content\"\"\"\n\n    DEST_OVER: \"Operator\" = ...\n    \"\"\"draw destination on top of source\"\"\"\n\n    DIFFERENCE: \"Operator\" = ...\n    \"\"\"Takes the difference of the source and destination color.\"\"\"\n",
                    "rendered": {
                      "text": "    \"\"\"leave destination only where there was no source content\"\"\"\n\n    DEST_OVER: \"Operator\" = ...\n    \"\"\"draw destination on top of source\"\"\"\n\n    DIFFERENCE: \"Operator\" = ...\n    \"\"\"Takes the difference of the source and destination color.\"\"\"\n",
                      "markdown": "`    \"\"\"leave destination only where there was no source content\"\"\"\n\n    DEST_OVER: \"Operator\" = ...\n    \"\"\"draw destination on top of source\"\"\"\n\n    DIFFERENCE: \"Operator\" = ...\n    \"\"\"Takes the difference of the source and destination color.\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 614,
                  "startColumn": 27,
                  "endLine": 614,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    \"\"\"ignore the source\"\"\"\n\n    DEST_ATOP: \"Operator\" = ...\n    \"\"\"leave destination on top of source content and only there (unbounded)\"\"\"\n\n    DEST_IN: \"Operator\" = ...\n    \"\"\"leave destination only where there was source content (unbounded)\"\"\"\n",
                    "rendered": {
                      "text": "    \"\"\"ignore the source\"\"\"\n\n    DEST_ATOP: \"Operator\" = ...\n    \"\"\"leave destination on top of source content and only there (unbounded)\"\"\"\n\n    DEST_IN: \"Operator\" = ...\n    \"\"\"leave destination only where there was source content (unbounded)\"\"\"\n",
                      "markdown": "`    \"\"\"ignore the source\"\"\"\n\n    DEST_ATOP: \"Operator\" = ...\n    \"\"\"leave destination on top of source content and only there (unbounded)\"\"\"\n\n    DEST_IN: \"Operator\" = ...\n    \"\"\"leave destination only where there was source content (unbounded)\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 593,
                  "startColumn": 21,
                  "endLine": 593,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    \"\"\"source and destination layers are accumulated\"\"\"\n\n    ATOP: \"Operator\" = ...\n    \"\"\"draw source on top of destination content and only there\"\"\"\n\n    CLEAR: \"Operator\" = ...\n    \"\"\"clear destination layer (bounded)\"\"\"\n",
                    "rendered": {
                      "text": "    \"\"\"source and destination layers are accumulated\"\"\"\n\n    ATOP: \"Operator\" = ...\n    \"\"\"draw source on top of destination content and only there\"\"\"\n\n    CLEAR: \"Operator\" = ...\n    \"\"\"clear destination layer (bounded)\"\"\"\n",
                      "markdown": "`    \"\"\"source and destination layers are accumulated\"\"\"\n\n    ATOP: \"Operator\" = ...\n    \"\"\"draw source on top of destination content and only there\"\"\"\n\n    CLEAR: \"Operator\" = ...\n    \"\"\"clear destination layer (bounded)\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 519,
                  "startColumn": 35,
                  "endLine": 519,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n    BEVEL: \"LineJoin\" = ...\n    \"\"\"\n    use a cut-off join, the join is cut off at half the line width from\n    the joint point\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "\n    BEVEL: \"LineJoin\" = ...\n    \"\"\"\n    use a cut-off join, the join is cut off at half the line width from\n    the joint point\n    \"\"\"\n\n",
                      "markdown": "`\n    BEVEL: \"LineJoin\" = ...\n    \"\"\"\n    use a cut-off join, the join is cut off at half the line width from\n    the joint point\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 53,
                  "endLine": 486,
                  "endColumn": 58,
                  "snippet": {
                    "text": "    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n\n    VRGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with red at the top\"\"\"\n\nclass LineCap(_IntEnum):\n    \"\"\"\n",
                    "rendered": {
                      "text": "    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n\n    VRGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with red at the top\"\"\"\n\nclass LineCap(_IntEnum):\n    \"\"\"\n",
                      "markdown": "`    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n\n    VRGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with red at the top\"\"\"\n\nclass LineCap(_IntEnum):\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 480,
                  "startColumn": 55,
                  "endLine": 480,
                  "endColumn": 60,
                  "snippet": {
                    "text": "    \"\"\"Use the default subpixel order for for the target device\"\"\"\n\n    RGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged horizontally with red at the left\"\"\"\n\n    VBGR: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n",
                    "rendered": {
                      "text": "    \"\"\"Use the default subpixel order for for the target device\"\"\"\n\n    RGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged horizontally with red at the left\"\"\"\n\n    VBGR: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n",
                      "markdown": "`    \"\"\"Use the default subpixel order for for the target device\"\"\"\n\n    RGB: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged horizontally with red at the left\"\"\"\n\n    VBGR: \"SubpixelOrder\" = ...\n    \"\"\"Subpixel elements are arranged vertically with blue at the top\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 40,
                  "endLine": 306,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n    RGB16_565: \"Format\" = ...\n    \"\"\"\n    each pixel is a 16-bit quantity with red in the upper 5 bits, then\n    green in the middle 6 bits, and blue in the lower 5 bits.\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "\n    RGB16_565: \"Format\" = ...\n    \"\"\"\n    each pixel is a 16-bit quantity with red in the upper 5 bits, then\n    green in the middle 6 bits, and blue in the lower 5 bits.\n    \"\"\"\n\n",
                      "markdown": "`\n    RGB16_565: \"Format\" = ...\n    \"\"\"\n    each pixel is a 16-bit quantity with red in the upper 5 bits, then\n    green in the middle 6 bits, and blue in the lower 5 bits.\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 3,
                  "endLine": 298,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    each pixel is a 32-bit quantity, with alpha in the upper 8 bits, then\n    red, then green, then blue. The 32-bit quantities are stored\n    native-endian. Pre-multiplied alpha is used. (That is, 50% transparent\n    red is 0x80800000, not 0x80ff0000.)\n    \"\"\"\n\n    INVALID: \"Format\" = ...\n",
                    "rendered": {
                      "text": "    each pixel is a 32-bit quantity, with alpha in the upper 8 bits, then\n    red, then green, then blue. The 32-bit quantities are stored\n    native-endian. Pre-multiplied alpha is used. (That is, 50% transparent\n    red is 0x80800000, not 0x80ff0000.)\n    \"\"\"\n\n    INVALID: \"Format\" = ...\n",
                      "markdown": "`    each pixel is a 32-bit quantity, with alpha in the upper 8 bits, then\n    red, then green, then blue. The 32-bit quantities are stored\n    native-endian. Pre-multiplied alpha is used. (That is, 50% transparent\n    red is 0x80800000, not 0x80ff0000.)\n    \"\"\"\n\n    INVALID: \"Format\" = ...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-cairo-1.27.0-r0.apk/py3-cairo-1.27.0-r0/usr/lib/python3.12/site-packages/cairo/__init__.pyi"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 35,
                  "endLine": 146,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        :param x:\n            X coordinate of the left side of the rectangle\n        :param y:\n            Y coordinate of the the top side of the rectangle\n        :param width:\n            width of the rectangle\n        :param height:\n",
                    "rendered": {
                      "text": "        :param x:\n            X coordinate of the left side of the rectangle\n        :param y:\n            Y coordinate of the the top side of the rectangle\n        :param width:\n            width of the rectangle\n        :param height:\n",
                      "markdown": "`        :param x:\n            X coordinate of the left side of the rectangle\n        :param y:\n            Y coordinate of the the top side of the rectangle\n        :param width:\n            width of the rectangle\n        :param height:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}