{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 18,
                  "endLine": 479,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      xml_filter_plugin.filter(event)\n\n      expect(event.get(\"tags\")).to_not be nil\n      expect(event.get('tags')).to include '_xmlparsefailure'\n    end\n\n    it 'logs a helpful message' do\n",
                    "rendered": {
                      "text": "      xml_filter_plugin.filter(event)\n\n      expect(event.get(\"tags\")).to_not be nil\n      expect(event.get('tags')).to include '_xmlparsefailure'\n    end\n\n    it 'logs a helpful message' do\n",
                      "markdown": "`      xml_filter_plugin.filter(event)\n\n      expect(event.get(\"tags\")).to_not be nil\n      expect(event.get('tags')).to include '_xmlparsefailure'\n    end\n\n    it 'logs a helpful message' do\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 18,
                  "endLine": 478,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    it 'emits the event with an error tag' do\n      xml_filter_plugin.filter(event)\n\n      expect(event.get(\"tags\")).to_not be nil\n      expect(event.get('tags')).to include '_xmlparsefailure'\n    end\n\n",
                    "rendered": {
                      "text": "    it 'emits the event with an error tag' do\n      xml_filter_plugin.filter(event)\n\n      expect(event.get(\"tags\")).to_not be nil\n      expect(event.get('tags')).to include '_xmlparsefailure'\n    end\n\n",
                      "markdown": "`    it 'emits the event with an error tag' do\n      xml_filter_plugin.filter(event)\n\n      expect(event.get(\"tags\")).to_not be nil\n      expect(event.get('tags')).to include '_xmlparsefailure'\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 444,
                  "startColumn": 21,
                  "endLine": 444,
                  "endColumn": 26,
                  "snippet": {
                    "text": "      it 'does fail parsing' do\n        subject.filter(event)\n        expect( event.get(\"tags\") ).to_not be nil\n        expect( event.get(\"tags\") ).to include '_xmlparsefailure'\n      end\n    end\n  end\n",
                    "rendered": {
                      "text": "      it 'does fail parsing' do\n        subject.filter(event)\n        expect( event.get(\"tags\") ).to_not be nil\n        expect( event.get(\"tags\") ).to include '_xmlparsefailure'\n      end\n    end\n  end\n",
                      "markdown": "`      it 'does fail parsing' do\n        subject.filter(event)\n        expect( event.get(\"tags\") ).to_not be nil\n        expect( event.get(\"tags\") ).to include '_xmlparsefailure'\n      end\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 443,
                  "startColumn": 21,
                  "endLine": 443,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n      it 'does fail parsing' do\n        subject.filter(event)\n        expect( event.get(\"tags\") ).to_not be nil\n        expect( event.get(\"tags\") ).to include '_xmlparsefailure'\n      end\n    end\n",
                    "rendered": {
                      "text": "\n      it 'does fail parsing' do\n        subject.filter(event)\n        expect( event.get(\"tags\") ).to_not be nil\n        expect( event.get(\"tags\") ).to include '_xmlparsefailure'\n      end\n    end\n",
                      "markdown": "`\n      it 'does fail parsing' do\n        subject.filter(event)\n        expect( event.get(\"tags\") ).to_not be nil\n        expect( event.get(\"tags\") ).to include '_xmlparsefailure'\n      end\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 435,
                  "startColumn": 19,
                  "endLine": 435,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n    it 'does not fail (by default)' do\n      subject.filter(event)\n      expect( event.get(\"tags\") ).to be nil\n    end\n\n    context 'strict option' do\n",
                    "rendered": {
                      "text": "\n    it 'does not fail (by default)' do\n      subject.filter(event)\n      expect( event.get(\"tags\") ).to be nil\n    end\n\n    context 'strict option' do\n",
                      "markdown": "`\n    it 'does not fail (by default)' do\n      subject.filter(event)\n      expect( event.get(\"tags\") ).to be nil\n    end\n\n    context 'strict option' do\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 418,
                  "startColumn": 24,
                  "endLine": 418,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n      sample(\"raw\" => '<foobar></foobar>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"xpath_field\")}.nil?\n      end\n    end\n  end\n",
                    "rendered": {
                      "text": "\n      sample(\"raw\" => '<foobar></foobar>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"xpath_field\")}.nil?\n      end\n    end\n  end\n",
                      "markdown": "`\n      sample(\"raw\" => '<foobar></foobar>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"xpath_field\")}.nil?\n      end\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 417,
                  "startColumn": 24,
                  "endLine": 417,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      CONFIG\n\n      sample(\"raw\" => '<foobar></foobar>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"xpath_field\")}.nil?\n      end\n    end\n",
                    "rendered": {
                      "text": "      CONFIG\n\n      sample(\"raw\" => '<foobar></foobar>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"xpath_field\")}.nil?\n      end\n    end\n",
                      "markdown": "`      CONFIG\n\n      sample(\"raw\" => '<foobar></foobar>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"xpath_field\")}.nil?\n      end\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 24,
                  "endLine": 402,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => { 'content' => 'text1' }, 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n    describe \"does not set empty array event on failed xpath\" do\n",
                    "rendered": {
                      "text": "\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => { 'content' => 'text1' }, 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n    describe \"does not set empty array event on failed xpath\" do\n",
                      "markdown": "`\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => { 'content' => 'text1' }, 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n    describe \"does not set empty array event on failed xpath\" do\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 401,
                  "startColumn": 24,
                  "endLine": 401,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      CONFIG\n\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => { 'content' => 'text1' }, 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n",
                    "rendered": {
                      "text": "      CONFIG\n\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => { 'content' => 'text1' }, 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n",
                      "markdown": "`      CONFIG\n\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => { 'content' => 'text1' }, 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 24,
                  "endLine": 385,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => 'text1', 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n    describe \"force_content => true\" do\n",
                    "rendered": {
                      "text": "\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => 'text1', 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n    describe \"force_content => true\" do\n",
                      "markdown": "`\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => 'text1', 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n    describe \"force_content => true\" do\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 384,
                  "startColumn": 24,
                  "endLine": 384,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      CONFIG\n\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => 'text1', 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n",
                    "rendered": {
                      "text": "      CONFIG\n\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => 'text1', 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n",
                      "markdown": "`      CONFIG\n\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => 'text1', 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 365,
                  "startColumn": 24,
                  "endLine": 365,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\"]}\n      end\n    end\n  end\n",
                    "rendered": {
                      "text": "\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\"]}\n      end\n    end\n  end\n",
                      "markdown": "`\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\"]}\n      end\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 24,
                  "endLine": 364,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      CONFIG\n\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\"]}\n      end\n    end\n",
                    "rendered": {
                      "text": "      CONFIG\n\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\"]}\n      end\n    end\n",
                      "markdown": "`      CONFIG\n\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\"]}\n      end\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 24,
                  "endLine": 348,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\", {}]}\n      end\n    end\n\n",
                    "rendered": {
                      "text": "\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\", {}]}\n      end\n    end\n\n",
                      "markdown": "`\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\", {}]}\n      end\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 24,
                  "endLine": 347,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      CONFIG\n\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\", {}]}\n      end\n    end\n",
                    "rendered": {
                      "text": "      CONFIG\n\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\", {}]}\n      end\n    end\n",
                      "markdown": "`      CONFIG\n\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\", {}]}\n      end\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 22,
                  "endLine": 330,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"xmldata\" => '<element><field1>bbb</field1><field2>789</field2><field3>e3f<field3></element>') do\n      insist { subject.get(\"field1\") } == \"bbb\"\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"xmldata\" => '<element><field1>bbb</field1><field2>789</field2><field3>e3f<field3></element>') do\n      insist { subject.get(\"field1\") } == \"bbb\"\n    end\n  end\n\n",
                      "markdown": "`\n    # Single value\n    sample(\"xmldata\" => '<element><field1>bbb</field1><field2>789</field2><field3>e3f<field3></element>') do\n      insist { subject.get(\"field1\") } == \"bbb\"\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 22,
                  "endLine": 310,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><bar>Content</bar></foo>') do\n      insist { subject.get(\"parseddata\") } == { \"bar\" => \"Content\" }\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><bar>Content</bar></foo>') do\n      insist { subject.get(\"parseddata\") } == { \"bar\" => \"Content\" }\n    end\n  end\n\n",
                      "markdown": "`\n    # Single value\n    sample(\"xmldata\" => '<foo><bar>Content</bar></foo>') do\n      insist { subject.get(\"parseddata\") } == { \"bar\" => \"Content\" }\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 22,
                  "endLine": 293,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><bar>Content</bar></foo>') do\n      insist { subject.get(\"parseddata\") } == { \"bar\" => [\"Content\"] }\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><bar>Content</bar></foo>') do\n      insist { subject.get(\"parseddata\") } == { \"bar\" => [\"Content\"] }\n    end\n  end\n\n",
                      "markdown": "`\n    # Single value\n    sample(\"xmldata\" => '<foo><bar>Content</bar></foo>') do\n      insist { subject.get(\"parseddata\") } == { \"bar\" => [\"Content\"] }\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 22,
                  "endLine": 276,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n      insist { subject.get(\"xpath_field\") } == [\"<div>Content</div>\"]\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n      insist { subject.get(\"xpath_field\") } == [\"<div>Content</div>\"]\n    end\n  end\n\n",
                      "markdown": "`\n    # Single value\n    sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n      insist { subject.get(\"xpath_field\") } == [\"<div>Content</div>\"]\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 24,
                  "endLine": 258,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n      # Single value\n      sample(\"xmldata\" => '<foo><h:div xmlns:h=\"http://www.w3.org/TR/html4/\">Content</h:div></foo>') do\n        insist { subject.get(\"xpath_field\") } == [\"<h:div xmlns:h=\\\"http://www.w3.org/TR/html4/\\\">Content</h:div>\"]\n      end\n  end\n\n",
                    "rendered": {
                      "text": "\n      # Single value\n      sample(\"xmldata\" => '<foo><h:div xmlns:h=\"http://www.w3.org/TR/html4/\">Content</h:div></foo>') do\n        insist { subject.get(\"xpath_field\") } == [\"<h:div xmlns:h=\\\"http://www.w3.org/TR/html4/\\\">Content</h:div>\"]\n      end\n  end\n\n",
                      "markdown": "`\n      # Single value\n      sample(\"xmldata\" => '<foo><h:div xmlns:h=\"http://www.w3.org/TR/html4/\">Content</h:div></foo>') do\n        insist { subject.get(\"xpath_field\") } == [\"<h:div xmlns:h=\\\"http://www.w3.org/TR/html4/\\\">Content</h:div>\"]\n      end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 24,
                  "endLine": 239,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n      # Single value\n      sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n        insist { subject.get(\"xpath_field\") } == [\"<h:div>Content</h:div>\"]\n      end\n  end\n\n",
                    "rendered": {
                      "text": "\n      # Single value\n      sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n        insist { subject.get(\"xpath_field\") } == [\"<h:div>Content</h:div>\"]\n      end\n  end\n\n",
                      "markdown": "`\n      # Single value\n      sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n        insist { subject.get(\"xpath_field\") } == [\"<h:div>Content</h:div>\"]\n      end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 22,
                  "endLine": 220,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n      insist { subject.get(\"xpath_field\") } == [\"<h:div>Content</h:div>\"]\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n      insist { subject.get(\"xpath_field\") } == [\"<h:div>Content</h:div>\"]\n    end\n  end\n\n",
                      "markdown": "`\n    # Single value\n    sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n      insist { subject.get(\"xpath_field\") } == [\"<h:div>Content</h:div>\"]\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 22,
                  "endLine": 202,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # Single value\n    sample(\"xmldata\" => '<foo><key>Français</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"Français\"]\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    # Single value\n    sample(\"xmldata\" => '<foo><key>Français</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"Français\"]\n    end\n  end\n\n",
                      "markdown": "`    # Single value\n    sample(\"xmldata\" => '<foo><key>Français</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"Français\"]\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 22,
                  "endLine": 201,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><key>Français</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"Français\"]\n    end\n  end\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><key>Français</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"Français\"]\n    end\n  end\n",
                      "markdown": "`\n    # Single value\n    sample(\"xmldata\" => '<foo><key>Français</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"Français\"]\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 22,
                  "endLine": 184,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    #Multiple values\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value1\",\"value2\"]\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    #Multiple values\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value1\",\"value2\"]\n    end\n  end\n\n",
                      "markdown": "`    #Multiple values\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value1\",\"value2\"]\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 22,
                  "endLine": 183,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #Multiple values\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value1\",\"value2\"]\n    end\n  end\n",
                    "rendered": {
                      "text": "\n    #Multiple values\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value1\",\"value2\"]\n    end\n  end\n",
                      "markdown": "`\n    #Multiple values\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value1\",\"value2\"]\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 22,
                  "endLine": 178,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # Single value\n    sample(\"xmldata\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value\"]\n    end\n\n    #Multiple values\n",
                    "rendered": {
                      "text": "    # Single value\n    sample(\"xmldata\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value\"]\n    end\n\n    #Multiple values\n",
                      "markdown": "`    # Single value\n    sample(\"xmldata\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value\"]\n    end\n\n    #Multiple values\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 22,
                  "endLine": 177,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value\"]\n    end\n\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value\"]\n    end\n\n",
                      "markdown": "`\n    # Single value\n    sample(\"xmldata\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value\"]\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 22,
                  "endLine": 160,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n\n",
                      "markdown": "`\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 22,
                  "endLine": 159,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    CONFIG\n\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n",
                    "rendered": {
                      "text": "    CONFIG\n\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n",
                      "markdown": "`    CONFIG\n\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 22,
                  "endLine": 143,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #From bad xml\n    sample(\"xmldata\" => '<foo /') do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    #From bad xml\n    sample(\"xmldata\" => '<foo /') do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n    end\n  end\n\n",
                      "markdown": "`\n    #From bad xml\n    sample(\"xmldata\" => '<foo /') do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 22,
                  "endLine": 138,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    #From parse xml with hash as a value\n    sample(\"xmldata\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n    #From bad xml\n",
                    "rendered": {
                      "text": "    #From parse xml with hash as a value\n    sample(\"xmldata\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n    #From bad xml\n",
                      "markdown": "`    #From parse xml with hash as a value\n    sample(\"xmldata\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n    #From bad xml\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 22,
                  "endLine": 137,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #From parse xml with hash as a value\n    sample(\"xmldata\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n",
                    "rendered": {
                      "text": "\n    #From parse xml with hash as a value\n    sample(\"xmldata\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n",
                      "markdown": "`\n    #From parse xml with hash as a value\n    sample(\"xmldata\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 22,
                  "endLine": 132,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    #From parse xml with array as a value\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n    #From parse xml with hash as a value\n",
                    "rendered": {
                      "text": "    #From parse xml with array as a value\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n    #From parse xml with hash as a value\n",
                      "markdown": "`    #From parse xml with array as a value\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n    #From parse xml with hash as a value\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 22,
                  "endLine": 131,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #From parse xml with array as a value\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n",
                    "rendered": {
                      "text": "\n    #From parse xml with array as a value\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n",
                      "markdown": "`\n    #From parse xml with array as a value\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 22,
                  "endLine": 126,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => \"value\"}\n    end\n\n    #From parse xml with array as a value\n",
                    "rendered": {
                      "text": "\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => \"value\"}\n    end\n\n    #From parse xml with array as a value\n",
                      "markdown": "`\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => \"value\"}\n    end\n\n    #From parse xml with array as a value\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 22,
                  "endLine": 125,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    CONFIG\n\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => \"value\"}\n    end\n\n",
                    "rendered": {
                      "text": "    CONFIG\n\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => \"value\"}\n    end\n\n",
                      "markdown": "`    CONFIG\n\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => \"value\"}\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 22,
                  "endLine": 108,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    #Multiple values\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value1\",\"value2\"]\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    #Multiple values\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value1\",\"value2\"]\n    end\n  end\n\n",
                      "markdown": "`    #Multiple values\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value1\",\"value2\"]\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 22,
                  "endLine": 107,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #Multiple values\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value1\",\"value2\"]\n    end\n  end\n",
                    "rendered": {
                      "text": "\n    #Multiple values\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value1\",\"value2\"]\n    end\n  end\n",
                      "markdown": "`\n    #Multiple values\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value1\",\"value2\"]\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 22,
                  "endLine": 102,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # Single value\n    sample(\"raw\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value\"]\n    end\n\n    #Multiple values\n",
                    "rendered": {
                      "text": "    # Single value\n    sample(\"raw\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value\"]\n    end\n\n    #Multiple values\n",
                      "markdown": "`    # Single value\n    sample(\"raw\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value\"]\n    end\n\n    #Multiple values\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 22,
                  "endLine": 101,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"raw\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value\"]\n    end\n\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"raw\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value\"]\n    end\n\n",
                      "markdown": "`\n    # Single value\n    sample(\"raw\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value\"]\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 22,
                  "endLine": 84,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n\n",
                      "markdown": "`\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 22,
                  "endLine": 83,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    CONFIG\n\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n",
                    "rendered": {
                      "text": "    CONFIG\n\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n",
                      "markdown": "`    CONFIG\n\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 22,
                  "endLine": 67,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #From bad xml\n    sample(\"raw\" => '<foo /') do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    #From bad xml\n    sample(\"raw\" => '<foo /') do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n    end\n  end\n\n",
                      "markdown": "`\n    #From bad xml\n    sample(\"raw\" => '<foo /') do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 22,
                  "endLine": 62,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # fail for non string single item array\n    sample(\"raw\" => [{\"foo\" => \"bar\"}]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    #From bad xml\n",
                    "rendered": {
                      "text": "    # fail for non string single item array\n    sample(\"raw\" => [{\"foo\" => \"bar\"}]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    #From bad xml\n",
                      "markdown": "`    # fail for non string single item array\n    sample(\"raw\" => [{\"foo\" => \"bar\"}]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    #From bad xml\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 22,
                  "endLine": 61,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # fail for non string single item array\n    sample(\"raw\" => [{\"foo\" => \"bar\"}]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                    "rendered": {
                      "text": "\n    # fail for non string single item array\n    sample(\"raw\" => [{\"foo\" => \"bar\"}]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                      "markdown": "`\n    # fail for non string single item array\n    sample(\"raw\" => [{\"foo\" => \"bar\"}]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 22,
                  "endLine": 56,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # fail for non string field\n    sample(\"raw\" => {\"foo\" => \"bar\"}) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail for non string single item array\n",
                    "rendered": {
                      "text": "    # fail for non string field\n    sample(\"raw\" => {\"foo\" => \"bar\"}) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail for non string single item array\n",
                      "markdown": "`    # fail for non string field\n    sample(\"raw\" => {\"foo\" => \"bar\"}) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail for non string single item array\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 22,
                  "endLine": 55,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # fail for non string field\n    sample(\"raw\" => {\"foo\" => \"bar\"}) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                    "rendered": {
                      "text": "\n    # fail for non string field\n    sample(\"raw\" => {\"foo\" => \"bar\"}) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                      "markdown": "`\n    # fail for non string field\n    sample(\"raw\" => {\"foo\" => \"bar\"}) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 22,
                  "endLine": 50,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # fail in empty array\n    sample(\"raw\" => []) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail for non string field\n",
                    "rendered": {
                      "text": "    # fail in empty array\n    sample(\"raw\" => []) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail for non string field\n",
                      "markdown": "`    # fail in empty array\n    sample(\"raw\" => []) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail for non string field\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 22,
                  "endLine": 49,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # fail in empty array\n    sample(\"raw\" => []) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                    "rendered": {
                      "text": "\n    # fail in empty array\n    sample(\"raw\" => []) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                      "markdown": "`\n    # fail in empty array\n    sample(\"raw\" => []) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 22,
                  "endLine": 44,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # fail in multi items array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\", \"jojoba\"]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail in empty array\n",
                    "rendered": {
                      "text": "    # fail in multi items array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\", \"jojoba\"]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail in empty array\n",
                      "markdown": "`    # fail in multi items array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\", \"jojoba\"]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail in empty array\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 22,
                  "endLine": 43,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # fail in multi items array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\", \"jojoba\"]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                    "rendered": {
                      "text": "\n    # fail in multi items array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\", \"jojoba\"]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                      "markdown": "`\n    # fail in multi items array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\", \"jojoba\"]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 22,
                  "endLine": 38,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # parse xml in single item array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\"]) do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"bar\" => \"baz\"}\n    end\n\n    # fail in multi items array\n",
                    "rendered": {
                      "text": "    # parse xml in single item array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\"]) do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"bar\" => \"baz\"}\n    end\n\n    # fail in multi items array\n",
                      "markdown": "`    # parse xml in single item array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\"]) do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"bar\" => \"baz\"}\n    end\n\n    # fail in multi items array\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 22,
                  "endLine": 37,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # parse xml in single item array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\"]) do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"bar\" => \"baz\"}\n    end\n\n",
                    "rendered": {
                      "text": "\n    # parse xml in single item array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\"]) do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"bar\" => \"baz\"}\n    end\n\n",
                      "markdown": "`\n    # parse xml in single item array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\"]) do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"bar\" => \"baz\"}\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 22,
                  "endLine": 32,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    #From parse xml with hash as a value\n    sample(\"raw\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n    # parse xml in single item array\n",
                    "rendered": {
                      "text": "    #From parse xml with hash as a value\n    sample(\"raw\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n    # parse xml in single item array\n",
                      "markdown": "`    #From parse xml with hash as a value\n    sample(\"raw\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n    # parse xml in single item array\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 22,
                  "endLine": 31,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #From parse xml with hash as a value\n    sample(\"raw\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n",
                    "rendered": {
                      "text": "\n    #From parse xml with hash as a value\n    sample(\"raw\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n",
                      "markdown": "`\n    #From parse xml with hash as a value\n    sample(\"raw\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 22,
                  "endLine": 26,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    #From parse xml with array as a value\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n    #From parse xml with hash as a value\n",
                    "rendered": {
                      "text": "    #From parse xml with array as a value\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n    #From parse xml with hash as a value\n",
                      "markdown": "`    #From parse xml with array as a value\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n    #From parse xml with hash as a value\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 22,
                  "endLine": 25,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #From parse xml with array as a value\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n",
                    "rendered": {
                      "text": "\n    #From parse xml with array as a value\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n",
                      "markdown": "`\n    #From parse xml with array as a value\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 22,
                  "endLine": 20,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => \"value\"}\n    end\n\n    #From parse xml with array as a value\n",
                    "rendered": {
                      "text": "\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => \"value\"}\n    end\n\n    #From parse xml with array as a value\n",
                      "markdown": "`\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => \"value\"}\n    end\n\n    #From parse xml with array as a value\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 22,
                  "endLine": 19,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    CONFIG\n\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => \"value\"}\n    end\n\n",
                    "rendered": {
                      "text": "    CONFIG\n\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => \"value\"}\n    end\n\n",
                      "markdown": "`    CONFIG\n\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => \"value\"}\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 521,
                  "startColumn": 7,
                  "endLine": 521,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      let(:parse_options) { 'strict,invalid0' }\n\n      it 'fails to register' do\n        expect { subject.register }.to raise_error(LogStash::ConfigurationError, 'unsupported parse option: \"invalid0\"')\n      end\n    end\n  end\n",
                    "rendered": {
                      "text": "      let(:parse_options) { 'strict,invalid0' }\n\n      it 'fails to register' do\n        expect { subject.register }.to raise_error(LogStash::ConfigurationError, 'unsupported parse option: \"invalid0\"')\n      end\n    end\n  end\n",
                      "markdown": "`      let(:parse_options) { 'strict,invalid0' }\n\n      it 'fails to register' do\n        expect { subject.register }.to raise_error(LogStash::ConfigurationError, 'unsupported parse option: \"invalid0\"')\n      end\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 40,
                  "endLine": 281,
                  "endColumn": 82,
                  "snippet": {
                    "text": "        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"1d7c0c63fda12dc6165d0c3cb112bb07ae9b679b\"\n      }\n    }\n  ],\n",
                    "rendered": {
                      "text": "        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"1d7c0c63fda12dc6165d0c3cb112bb07ae9b679b\"\n      }\n    }\n  ],\n",
                      "markdown": "`        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"1d7c0c63fda12dc6165d0c3cb112bb07ae9b679b\"\n      }\n    }\n  ],\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 27,
                  "endLine": 243,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"3721554dae93eeed9a6ddddef6d2f315ebbeb387baef8ef202e8da2c345bdcff9875c55bc5f0824a726e0b9ff41922f16887df52eafcdbc3878c58a520482e49\"\n        }\n      ]\n    }\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"3721554dae93eeed9a6ddddef6d2f315ebbeb387baef8ef202e8da2c345bdcff9875c55bc5f0824a726e0b9ff41922f16887df52eafcdbc3878c58a520482e49\"\n        }\n      ]\n    }\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"3721554dae93eeed9a6ddddef6d2f315ebbeb387baef8ef202e8da2c345bdcff9875c55bc5f0824a726e0b9ff41922f16887df52eafcdbc3878c58a520482e49\"\n        }\n      ]\n    }\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 27,
                  "endLine": 239,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1de943f0f6ef342a1fc7eeed755af164699d540678849cd3c8253ec0755d281b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1de943f0f6ef342a1fc7eeed755af164699d540678849cd3c8253ec0755d281b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1de943f0f6ef342a1fc7eeed755af164699d540678849cd3c8253ec0755d281b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 27,
                  "endLine": 235,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"99cae926fe07385ae7382a36ff1f3648c445e44d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"99cae926fe07385ae7382a36ff1f3648c445e44d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"99cae926fe07385ae7382a36ff1f3648c445e44d\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 27,
                  "endLine": 224,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e541a1e5f7e8d3ff98ad6d7b7596652de60ac6fa2ba98440e0608482ac44b3a59d13f829a74c4cf59e413ab9b032d72d4f0d462a05950fae41f7bebd0d1d7e0e\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e541a1e5f7e8d3ff98ad6d7b7596652de60ac6fa2ba98440e0608482ac44b3a59d13f829a74c4cf59e413ab9b032d72d4f0d462a05950fae41f7bebd0d1d7e0e\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e541a1e5f7e8d3ff98ad6d7b7596652de60ac6fa2ba98440e0608482ac44b3a59d13f829a74c4cf59e413ab9b032d72d4f0d462a05950fae41f7bebd0d1d7e0e\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 27,
                  "endLine": 220,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"9560d3897403b39ca30f45d38173c7e7114fc042e1f34217bda9314b67b45c92\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"9560d3897403b39ca30f45d38173c7e7114fc042e1f34217bda9314b67b45c92\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"9560d3897403b39ca30f45d38173c7e7114fc042e1f34217bda9314b67b45c92\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 27,
                  "endLine": 216,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"86cad0673445e2c42a3df4f11090e72c38251f76\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"86cad0673445e2c42a3df4f11090e72c38251f76\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"86cad0673445e2c42a3df4f11090e72c38251f76\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 27,
                  "endLine": 205,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e8492f2843161547b3167dfca239076fa21f663c47f7654accfae8676309dc8b03997b2fa8d7426e4cdbdff01057e7aa12a10c8e951822808702df3cd700ab4f\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e8492f2843161547b3167dfca239076fa21f663c47f7654accfae8676309dc8b03997b2fa8d7426e4cdbdff01057e7aa12a10c8e951822808702df3cd700ab4f\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e8492f2843161547b3167dfca239076fa21f663c47f7654accfae8676309dc8b03997b2fa8d7426e4cdbdff01057e7aa12a10c8e951822808702df3cd700ab4f\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 27,
                  "endLine": 201,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"170757ee941361aab142e84aff0f9f14c5cf2333f28501168a59192b66985420\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"170757ee941361aab142e84aff0f9f14c5cf2333f28501168a59192b66985420\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"170757ee941361aab142e84aff0f9f14c5cf2333f28501168a59192b66985420\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 27,
                  "endLine": 197,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"e370118b9ee490b6e7fe12cde42d3594f7bb41b8\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"e370118b9ee490b6e7fe12cde42d3594f7bb41b8\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"e370118b9ee490b6e7fe12cde42d3594f7bb41b8\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 27,
                  "endLine": 186,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"b6fa9bb38c96fa7d12ac4df442fa9b12e725cfc9eddd306e5c005957a9f698ca6810f908add076f321de222995bfcfb879d5ffff015050860933abf6b5c81681\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"b6fa9bb38c96fa7d12ac4df442fa9b12e725cfc9eddd306e5c005957a9f698ca6810f908add076f321de222995bfcfb879d5ffff015050860933abf6b5c81681\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"b6fa9bb38c96fa7d12ac4df442fa9b12e725cfc9eddd306e5c005957a9f698ca6810f908add076f321de222995bfcfb879d5ffff015050860933abf6b5c81681\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 27,
                  "endLine": 182,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c008b98c7a41f0543e284749426ccef5bd85291e7d31e73fa66d20d0972da755\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c008b98c7a41f0543e284749426ccef5bd85291e7d31e73fa66d20d0972da755\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c008b98c7a41f0543e284749426ccef5bd85291e7d31e73fa66d20d0972da755\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 27,
                  "endLine": 178,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9e78978b7262547d8d6a691e74feea556e281698\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9e78978b7262547d8d6a691e74feea556e281698\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9e78978b7262547d8d6a691e74feea556e281698\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 27,
                  "endLine": 167,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0313ce033a2cb8aaebf4a0f393388e435ae577e51bc974603c4d5313fff146423a402deeb0a2fdc4f0f06679268f2d36a97b81d4b6164b5cdef56376230c0269\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0313ce033a2cb8aaebf4a0f393388e435ae577e51bc974603c4d5313fff146423a402deeb0a2fdc4f0f06679268f2d36a97b81d4b6164b5cdef56376230c0269\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0313ce033a2cb8aaebf4a0f393388e435ae577e51bc974603c4d5313fff146423a402deeb0a2fdc4f0f06679268f2d36a97b81d4b6164b5cdef56376230c0269\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 27,
                  "endLine": 163,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"d60c39b3d4955e1c3286066c55e61419feda5432aaa1ba7190b24946fb715902\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"d60c39b3d4955e1c3286066c55e61419feda5432aaa1ba7190b24946fb715902\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"d60c39b3d4955e1c3286066c55e61419feda5432aaa1ba7190b24946fb715902\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 27,
                  "endLine": 159,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"ee8003c0271d5cb1908cf45fe35e46fa48a46610\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"ee8003c0271d5cb1908cf45fe35e46fa48a46610\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"ee8003c0271d5cb1908cf45fe35e46fa48a46610\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 27,
                  "endLine": 148,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c0d077620190255680eae6d346a84a75a4ef647f89c1c66e70708c7a234843ee9d20b9b80907b2cc145cbca1de282823f592f0f821e11e5c9b003f5f33c3bc99\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c0d077620190255680eae6d346a84a75a4ef647f89c1c66e70708c7a234843ee9d20b9b80907b2cc145cbca1de282823f592f0f821e11e5c9b003f5f33c3bc99\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c0d077620190255680eae6d346a84a75a4ef647f89c1c66e70708c7a234843ee9d20b9b80907b2cc145cbca1de282823f592f0f821e11e5c9b003f5f33c3bc99\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 27,
                  "endLine": 144,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"5b76e053f2c17b5e10d117fa844f69bbf38f0fec4a484535c61e688fc7846b04\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"5b76e053f2c17b5e10d117fa844f69bbf38f0fec4a484535c61e688fc7846b04\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"5b76e053f2c17b5e10d117fa844f69bbf38f0fec4a484535c61e688fc7846b04\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 27,
                  "endLine": 140,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"0a1c2bf2e51a47ae3477614f9f6b4019b4bf53fa\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"0a1c2bf2e51a47ae3477614f9f6b4019b4bf53fa\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"0a1c2bf2e51a47ae3477614f9f6b4019b4bf53fa\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 27,
                  "endLine": 129,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"250955f2f669b8b37f78b706f8f86152917db4cc4cfadc12bcd5537df85ed84d13fd76c954894f1cc5b3c15bd727bb05aa6463d9319de54c26ffd868c836d788\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"250955f2f669b8b37f78b706f8f86152917db4cc4cfadc12bcd5537df85ed84d13fd76c954894f1cc5b3c15bd727bb05aa6463d9319de54c26ffd868c836d788\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"250955f2f669b8b37f78b706f8f86152917db4cc4cfadc12bcd5537df85ed84d13fd76c954894f1cc5b3c15bd727bb05aa6463d9319de54c26ffd868c836d788\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 27,
                  "endLine": 125,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"24271037492b526a1b2ed201d0847a3ed4aa7e40ed23e60f3f7a768c2d67c4ee\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"24271037492b526a1b2ed201d0847a3ed4aa7e40ed23e60f3f7a768c2d67c4ee\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"24271037492b526a1b2ed201d0847a3ed4aa7e40ed23e60f3f7a768c2d67c4ee\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 27,
                  "endLine": 121,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"121eaf37066a3a16cb70bf6fbc5e8687a5c1ede2\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"121eaf37066a3a16cb70bf6fbc5e8687a5c1ede2\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"121eaf37066a3a16cb70bf6fbc5e8687a5c1ede2\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 27,
                  "endLine": 110,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"243fbac14a59d8894c4f32d808facb47197ce34ebb4ebdd20ad12cdb19a9cfb45ed28f693c5f62c720266b5bb1f321361e361515a667b66dc2332cbb833b0800\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"243fbac14a59d8894c4f32d808facb47197ce34ebb4ebdd20ad12cdb19a9cfb45ed28f693c5f62c720266b5bb1f321361e361515a667b66dc2332cbb833b0800\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"243fbac14a59d8894c4f32d808facb47197ce34ebb4ebdd20ad12cdb19a9cfb45ed28f693c5f62c720266b5bb1f321361e361515a667b66dc2332cbb833b0800\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 27,
                  "endLine": 106,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7f11abf94ab761bc849033573542324e8a46332cafbf6fda21ceb43c92c4902e\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7f11abf94ab761bc849033573542324e8a46332cafbf6fda21ceb43c92c4902e\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7f11abf94ab761bc849033573542324e8a46332cafbf6fda21ceb43c92c4902e\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 27,
                  "endLine": 102,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"696ef2700f85032c1c0b06c94c8292043b9fdedc\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"696ef2700f85032c1c0b06c94c8292043b9fdedc\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"696ef2700f85032c1c0b06c94c8292043b9fdedc\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 27,
                  "endLine": 91,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"3adfe68ba1812f2c6b270dc8d79b7d4942b678b802391c52dea550ab2cc708c0cdec9da747891ac32dc8d747cc29b96fd2df1bcdd66bc9a720fc1ee57501c3eb\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"3adfe68ba1812f2c6b270dc8d79b7d4942b678b802391c52dea550ab2cc708c0cdec9da747891ac32dc8d747cc29b96fd2df1bcdd66bc9a720fc1ee57501c3eb\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"3adfe68ba1812f2c6b270dc8d79b7d4942b678b802391c52dea550ab2cc708c0cdec9da747891ac32dc8d747cc29b96fd2df1bcdd66bc9a720fc1ee57501c3eb\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 27,
                  "endLine": 87,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"5ecaaffdaf4ccb19b7c14120c4bfefa5f8825950e9f61f1c6f41f3d70c5749ac\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"5ecaaffdaf4ccb19b7c14120c4bfefa5f8825950e9f61f1c6f41f3d70c5749ac\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"5ecaaffdaf4ccb19b7c14120c4bfefa5f8825950e9f61f1c6f41f3d70c5749ac\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 27,
                  "endLine": 83,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9706cde90ffde29ab7e8bc0014f6afbe69426c8e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9706cde90ffde29ab7e8bc0014f6afbe69426c8e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9706cde90ffde29ab7e8bc0014f6afbe69426c8e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 27,
                  "endLine": 72,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7a2381bd6052ed8a518b586faf980a627d008956741a00b26c4e77fc3674dd12b87b029c6346e4537c0940db7f2d17033e18a14a3763ebab8228e3191ebea7ed\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7a2381bd6052ed8a518b586faf980a627d008956741a00b26c4e77fc3674dd12b87b029c6346e4537c0940db7f2d17033e18a14a3763ebab8228e3191ebea7ed\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7a2381bd6052ed8a518b586faf980a627d008956741a00b26c4e77fc3674dd12b87b029c6346e4537c0940db7f2d17033e18a14a3763ebab8228e3191ebea7ed\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 27,
                  "endLine": 68,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a272d0d546e7f105829c17f5302e1eaea16b32ac4dd69c2df9cd3f8340fb6dc2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a272d0d546e7f105829c17f5302e1eaea16b32ac4dd69c2df9cd3f8340fb6dc2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a272d0d546e7f105829c17f5302e1eaea16b32ac4dd69c2df9cd3f8340fb6dc2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 27,
                  "endLine": 64,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"bbe401dfc42fcd6c7c784c381c1b8d50550eeb89\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"bbe401dfc42fcd6c7c784c381c1b8d50550eeb89\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"bbe401dfc42fcd6c7c784c381c1b8d50550eeb89\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 27,
                  "endLine": 53,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"8a5f999fa367ec5eb046b11d8fd5b17180a18351d1ea1290d3abf5722e3fe2d6db4dfb37beb853fb1e6526b2f9b4f5ff6cd22f2587762bd4c9b775ec53f4cb20\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"8a5f999fa367ec5eb046b11d8fd5b17180a18351d1ea1290d3abf5722e3fe2d6db4dfb37beb853fb1e6526b2f9b4f5ff6cd22f2587762bd4c9b775ec53f4cb20\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"8a5f999fa367ec5eb046b11d8fd5b17180a18351d1ea1290d3abf5722e3fe2d6db4dfb37beb853fb1e6526b2f9b4f5ff6cd22f2587762bd4c9b775ec53f4cb20\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 27,
                  "endLine": 49,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"00018f24eb04cf6799b3de6e8b6e9c02ddaa1afa4e390db06ffa81d003b46b7f\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"00018f24eb04cf6799b3de6e8b6e9c02ddaa1afa4e390db06ffa81d003b46b7f\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"00018f24eb04cf6799b3de6e8b6e9c02ddaa1afa4e390db06ffa81d003b46b7f\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 27,
                  "endLine": 45,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"78bb5dc58d6ade060595ec1edbe4e4667a1b80fa\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"78bb5dc58d6ade060595ec1edbe4e4667a1b80fa\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"78bb5dc58d6ade060595ec1edbe4e4667a1b80fa\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 27,
                  "endLine": 34,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"eb797c4bf0143b82b1939c5650daa203da0b4ebeecafdfc21fb42fea61847de9f1f6b692f7b11f89cea52c8717a284b07669b910c3be63eaa4cfe1dfee6c2c46\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"eb797c4bf0143b82b1939c5650daa203da0b4ebeecafdfc21fb42fea61847de9f1f6b692f7b11f89cea52c8717a284b07669b910c3be63eaa4cfe1dfee6c2c46\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"eb797c4bf0143b82b1939c5650daa203da0b4ebeecafdfc21fb42fea61847de9f1f6b692f7b11f89cea52c8717a284b07669b910c3be63eaa4cfe1dfee6c2c46\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 27,
                  "endLine": 30,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cf7f40990145014a620361f765cbf1c430fc0d8f2d995da5c3c292d248a24206\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cf7f40990145014a620361f765cbf1c430fc0d8f2d995da5c3c292d248a24206\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cf7f40990145014a620361f765cbf1c430fc0d8f2d995da5c3c292d248a24206\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/var/lib/db/sbom/logstash-filter-xml-4.2.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 27,
                  "endLine": 26,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c4544b9cde4e3d4cef474db86b9463ebc5af7f63\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c4544b9cde4e3d4cef474db86b9463ebc5af7f63\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c4544b9cde4e3d4cef474db86b9463ebc5af7f63\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/specifications/logstash-filter-xml-4.2.0.gemspec"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 76,
                  "endLine": 13,
                  "endColumn": 81,
                  "snippet": {
                    "text": "  s.require_paths = [\"lib\".freeze]\n  s.authors = [\"Elastic\".freeze]\n  s.date = \"2024-02-14\"\n  s.description = \"This gem is a Logstash plugin required to be installed on top of the Logstash core pipeline using $LS_HOME/bin/logstash-plugin install gemname. This gem is not a stand-alone program\".freeze\n  s.email = \"info@elastic.co\".freeze\n  s.homepage = \"http://www.elastic.co/guide/en/logstash/current/index.html\".freeze\n  s.licenses = [\"Apache License (2.0)\".freeze]\n",
                    "rendered": {
                      "text": "  s.require_paths = [\"lib\".freeze]\n  s.authors = [\"Elastic\".freeze]\n  s.date = \"2024-02-14\"\n  s.description = \"This gem is a Logstash plugin required to be installed on top of the Logstash core pipeline using $LS_HOME/bin/logstash-plugin install gemname. This gem is not a stand-alone program\".freeze\n  s.email = \"info@elastic.co\".freeze\n  s.homepage = \"http://www.elastic.co/guide/en/logstash/current/index.html\".freeze\n  s.licenses = [\"Apache License (2.0)\".freeze]\n",
                      "markdown": "`  s.require_paths = [\"lib\".freeze]\n  s.authors = [\"Elastic\".freeze]\n  s.date = \"2024-02-14\"\n  s.description = \"This gem is a Logstash plugin required to be installed on top of the Logstash core pipeline using $LS_HOME/bin/logstash-plugin install gemname. This gem is not a stand-alone program\".freeze\n  s.email = \"info@elastic.co\".freeze\n  s.homepage = \"http://www.elastic.co/guide/en/logstash/current/index.html\".freeze\n  s.licenses = [\"Apache License (2.0)\".freeze]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/specifications/logstash-filter-xml-4.2.0.gemspec"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 33,
                  "endLine": 2,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# -*- encoding: utf-8 -*-\n# stub: logstash-filter-xml 4.2.0 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"logstash-filter-xml\".freeze\n",
                    "rendered": {
                      "text": "# -*- encoding: utf-8 -*-\n# stub: logstash-filter-xml 4.2.0 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"logstash-filter-xml\".freeze\n",
                      "markdown": "`# -*- encoding: utf-8 -*-\n# stub: logstash-filter-xml 4.2.0 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"logstash-filter-xml\".freeze\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/lib/logstash/filters/xml.rb"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 17,
                  "endLine": 128,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n    @logger.debug? && @logger.debug(\"Running xml filter\", :event => event)\n\n    value = event.get(@source)\n    return unless value\n\n    if value.is_a?(Array)\n",
                    "rendered": {
                      "text": "\n    @logger.debug? && @logger.debug(\"Running xml filter\", :event => event)\n\n    value = event.get(@source)\n    return unless value\n\n    if value.is_a?(Array)\n",
                      "markdown": "`\n    @logger.debug? && @logger.debug(\"Running xml filter\", :event => event)\n\n    value = event.get(@source)\n    return unless value\n\n    if value.is_a?(Array)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/lib/logstash/filters/xml.rb"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 30,
                  "endLine": 76,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  # false will prevent storing single elements in arrays.\n  config :force_array, :validate => :boolean, :default => true\n\n  # By default the filter will expand attributes differently from content inside\n  # of tags. This option allows you to force text content and attributes to always\n  # parse to a hash value.\n  config :force_content, :validate => :boolean, :default => false\n",
                    "rendered": {
                      "text": "  # false will prevent storing single elements in arrays.\n  config :force_array, :validate => :boolean, :default => true\n\n  # By default the filter will expand attributes differently from content inside\n  # of tags. This option allows you to force text content and attributes to always\n  # parse to a hash value.\n  config :force_content, :validate => :boolean, :default => false\n",
                      "markdown": "`  # false will prevent storing single elements in arrays.\n  config :force_array, :validate => :boolean, :default => true\n\n  # By default the filter will expand attributes differently from content inside\n  # of tags. This option allows you to force text content and attributes to always\n  # parse to a hash value.\n  config :force_content, :validate => :boolean, :default => false\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/lib/logstash/filters/xml.rb"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 30,
                  "endLine": 76,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  # false will prevent storing single elements in arrays.\n  config :force_array, :validate => :boolean, :default => true\n\n  # By default the filter will expand attributes differently from content inside\n  # of tags. This option allows you to force text content and attributes to always\n  # parse to a hash value.\n  config :force_content, :validate => :boolean, :default => false\n",
                    "rendered": {
                      "text": "  # false will prevent storing single elements in arrays.\n  config :force_array, :validate => :boolean, :default => true\n\n  # By default the filter will expand attributes differently from content inside\n  # of tags. This option allows you to force text content and attributes to always\n  # parse to a hash value.\n  config :force_content, :validate => :boolean, :default => false\n",
                      "markdown": "`  # false will prevent storing single elements in arrays.\n  config :force_array, :validate => :boolean, :default => true\n\n  # By default the filter will expand attributes differently from content inside\n  # of tags. This option allows you to force text content and attributes to always\n  # parse to a hash value.\n  config :force_content, :validate => :boolean, :default => false\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/CHANGELOG.md"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 30,
                  "endLine": 66,
                  "endColumn": 38,
                  "snippet": {
                    "text": "## 2.0.0\n - Plugins were updated to follow the new shutdown semantic, this mainly allows Logstash to instruct input plugins to terminate gracefully,\n   instead of using Thread.raise on the plugins' threads. Ref: https://github.com/elastic/logstash/pull/3895\n - Dependency on logstash-core update to 2.0\n",
                    "rendered": {
                      "text": "## 2.0.0\n - Plugins were updated to follow the new shutdown semantic, this mainly allows Logstash to instruct input plugins to terminate gracefully,\n   instead of using Thread.raise on the plugins' threads. Ref: https://github.com/elastic/logstash/pull/3895\n - Dependency on logstash-core update to 2.0\n",
                      "markdown": "`## 2.0.0\n - Plugins were updated to follow the new shutdown semantic, this mainly allows Logstash to instruct input plugins to terminate gracefully,\n   instead of using Thread.raise on the plugins' threads. Ref: https://github.com/elastic/logstash/pull/3895\n - Dependency on logstash-core update to 2.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/CHANGELOG.md"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 90,
                  "endLine": 52,
                  "endColumn": 98,
                  "snippet": {
                    "text": "  - Added setting to disable forcing single values to be added in arrays. Ref: https://github.com/logstash-plugins/logstash-filter-xml/pull/28.\n\n## 2.1.3\n  - Depend on logstash-core-plugin-api instead of logstash-core, removing the need to mass update plugins on major releases of logstash\n\n## 2.1.2\n  - New dependency requirements for logstash-core for the 5.0 release\n",
                    "rendered": {
                      "text": "  - Added setting to disable forcing single values to be added in arrays. Ref: https://github.com/logstash-plugins/logstash-filter-xml/pull/28.\n\n## 2.1.3\n  - Depend on logstash-core-plugin-api instead of logstash-core, removing the need to mass update plugins on major releases of logstash\n\n## 2.1.2\n  - New dependency requirements for logstash-core for the 5.0 release\n",
                      "markdown": "`  - Added setting to disable forcing single values to be added in arrays. Ref: https://github.com/logstash-plugins/logstash-filter-xml/pull/28.\n\n## 2.1.3\n  - Depend on logstash-core-plugin-api instead of logstash-core, removing the need to mass update plugins on major releases of logstash\n\n## 2.1.2\n  - New dependency requirements for logstash-core for the 5.0 release\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/CHANGELOG.md"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 3,
                  "endLine": 46,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  - Republish all the gems under jruby.\n\n## 3.0.0\n  - Update the plugin to the version 2.0 of the plugin api, this change is required for Logstash 5.0 compatibility. See https://github.com/elastic/logstash/issues/5141\n\n## 2.1.4\n  - Added setting to disable forcing single values to be added in arrays. Ref: https://github.com/logstash-plugins/logstash-filter-xml/pull/28.\n",
                    "rendered": {
                      "text": "  - Republish all the gems under jruby.\n\n## 3.0.0\n  - Update the plugin to the version 2.0 of the plugin api, this change is required for Logstash 5.0 compatibility. See https://github.com/elastic/logstash/issues/5141\n\n## 2.1.4\n  - Added setting to disable forcing single values to be added in arrays. Ref: https://github.com/logstash-plugins/logstash-filter-xml/pull/28.\n",
                      "markdown": "`  - Republish all the gems under jruby.\n\n## 3.0.0\n  - Update the plugin to the version 2.0 of the plugin api, this change is required for Logstash 5.0 compatibility. See https://github.com/elastic/logstash/issues/5141\n\n## 2.1.4\n  - Added setting to disable forcing single values to be added in arrays. Ref: https://github.com/logstash-plugins/logstash-filter-xml/pull/28.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/CHANGELOG.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  - Fixed force_array behavior with nested elements [#57](https://github.com/logstash-plugins/logstash-filter-xml/pull/57)\n\n## 4.0.5\n  - Update gemspec summary\n\n## 4.0.4\n  - Fix some documentation issues\n",
                    "rendered": {
                      "text": "  - Fixed force_array behavior with nested elements [#57](https://github.com/logstash-plugins/logstash-filter-xml/pull/57)\n\n## 4.0.5\n  - Update gemspec summary\n\n## 4.0.4\n  - Fix some documentation issues\n",
                      "markdown": "`  - Fixed force_array behavior with nested elements [#57](https://github.com/logstash-plugins/logstash-filter-xml/pull/57)\n\n## 4.0.5\n  - Update gemspec summary\n\n## 4.0.4\n  - Fix some documentation issues\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/CHANGELOG.md"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 39,
                  "endLine": 15,
                  "endColumn": 48,
                  "snippet": {
                    "text": "  - Fix: exceptions thrown while handling events no longer crash the pipeline [#73](https://github.com/logstash-plugins/logstash-filter-xml/pull/73)\n\n## 4.1.0\n  - Feat: added parser_options for more control over XML parsing [#68](https://github.com/logstash-plugins/logstash-filter-xml/pull/68)\n\n## 4.0.7\n  - Fixed creation of empty arrays when xpath failed [#59](https://github.com/logstash-plugins/logstash-filter-xml/pull/59)\n",
                    "rendered": {
                      "text": "  - Fix: exceptions thrown while handling events no longer crash the pipeline [#73](https://github.com/logstash-plugins/logstash-filter-xml/pull/73)\n\n## 4.1.0\n  - Feat: added parser_options for more control over XML parsing [#68](https://github.com/logstash-plugins/logstash-filter-xml/pull/68)\n\n## 4.0.7\n  - Fixed creation of empty arrays when xpath failed [#59](https://github.com/logstash-plugins/logstash-filter-xml/pull/59)\n",
                      "markdown": "`  - Fix: exceptions thrown while handling events no longer crash the pipeline [#73](https://github.com/logstash-plugins/logstash-filter-xml/pull/73)\n\n## 4.1.0\n  - Feat: added parser_options for more control over XML parsing [#68](https://github.com/logstash-plugins/logstash-filter-xml/pull/68)\n\n## 4.0.7\n  - Fixed creation of empty arrays when xpath failed [#59](https://github.com/logstash-plugins/logstash-filter-xml/pull/59)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 3,
                  "endLine": 2,
                  "endColumn": 11,
                  "snippet": {
                    "text": "## 4.2.0\n  - Update Nokogiri dependency version [#78](https://github.com/logstash-plugins/logstash-filter-xml/pull/78)\n\n## 4.1.3\n  - [DOC] Updated URL for current xsl reference docs [#70](https://github.com/logstash-plugins/logstash-filter-xml/pull/70)\n",
                    "rendered": {
                      "text": "## 4.2.0\n  - Update Nokogiri dependency version [#78](https://github.com/logstash-plugins/logstash-filter-xml/pull/78)\n\n## 4.1.3\n  - [DOC] Updated URL for current xsl reference docs [#70](https://github.com/logstash-plugins/logstash-filter-xml/pull/70)\n",
                      "markdown": "`## 4.2.0\n  - Update Nokogiri dependency version [#78](https://github.com/logstash-plugins/logstash-filter-xml/pull/78)\n\n## 4.1.3\n  - [DOC] Updated URL for current xsl reference docs [#70](https://github.com/logstash-plugins/logstash-filter-xml/pull/70)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/docs/index.asciidoc"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 1,
                  "endLine": 103,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Currently supported options are:\n\n - `strict` - forces the parser to fail early instead of accumulating errors when content is not valid xml.\n \nControl characters such as ASCII 0x0 are not allowed and _always_ result in non-valid XML.\n\nWhen XML content is not valid, it will be tagged as `_xmlparsefailure`.\n\n",
                    "rendered": {
                      "text": "Currently supported options are:\n\n - `strict` - forces the parser to fail early instead of accumulating errors when content is not valid xml.\n \nControl characters such as ASCII 0x0 are not allowed and _always_ result in non-valid XML.\n\nWhen XML content is not valid, it will be tagged as `_xmlparsefailure`.\n\n",
                      "markdown": "`Currently supported options are:\n\n - `strict` - forces the parser to fail early instead of accumulating errors when content is not valid xml.\n \nControl characters such as ASCII 0x0 are not allowed and _always_ result in non-valid XML.\n\nWhen XML content is not valid, it will be tagged as `_xmlparsefailure`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/docs/index.asciidoc"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 41,
                  "endLine": 97,
                  "endColumn": 50,
                  "snippet": {
                    "text": "  * Value type is <<string,string>>\n  * There is no default value for this setting.\n\nSetting XML parse options allows for more control of the parsing process.\nBy default the parser is not strict and thus accepts some invalid content.\nCurrently supported options are:\n\n",
                    "rendered": {
                      "text": "  * Value type is <<string,string>>\n  * There is no default value for this setting.\n\nSetting XML parse options allows for more control of the parsing process.\nBy default the parser is not strict and thus accepts some invalid content.\nCurrently supported options are:\n\n",
                      "markdown": "`  * Value type is <<string,string>>\n  * There is no default value for this setting.\n\nSetting XML parse options allows for more control of the parsing process.\nBy default the parser is not strict and thus accepts some invalid content.\nCurrently supported options are:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/docs/index.asciidoc"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 26,
                  "endLine": 66,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  * Value type is <<boolean,boolean>>\n  * Default value is `false`\n\nBy default the filter will expand attributes differently from content inside\nof tags. This option allows you to force text content and attributes to always\nparse to a hash value.\n\n",
                    "rendered": {
                      "text": "  * Value type is <<boolean,boolean>>\n  * Default value is `false`\n\nBy default the filter will expand attributes differently from content inside\nof tags. This option allows you to force text content and attributes to always\nparse to a hash value.\n\n",
                      "markdown": "`  * Value type is <<boolean,boolean>>\n  * Default value is `false`\n\nBy default the filter will expand attributes differently from content inside\nof tags. This option allows you to force text content and attributes to always\nparse to a hash value.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/docs/index.asciidoc"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 26,
                  "endLine": 66,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  * Value type is <<boolean,boolean>>\n  * Default value is `false`\n\nBy default the filter will expand attributes differently from content inside\nof tags. This option allows you to force text content and attributes to always\nparse to a hash value.\n\n",
                    "rendered": {
                      "text": "  * Value type is <<boolean,boolean>>\n  * Default value is `false`\n\nBy default the filter will expand attributes differently from content inside\nof tags. This option allows you to force text content and attributes to always\nparse to a hash value.\n\n",
                      "markdown": "`  * Value type is <<boolean,boolean>>\n  * Default value is `false`\n\nBy default the filter will expand attributes differently from content inside\nof tags. This option allows you to force text content and attributes to always\nparse to a hash value.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 18,
                  "endLine": 479,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      xml_filter_plugin.filter(event)\n\n      expect(event.get(\"tags\")).to_not be nil\n      expect(event.get('tags')).to include '_xmlparsefailure'\n    end\n\n    it 'logs a helpful message' do\n",
                    "rendered": {
                      "text": "      xml_filter_plugin.filter(event)\n\n      expect(event.get(\"tags\")).to_not be nil\n      expect(event.get('tags')).to include '_xmlparsefailure'\n    end\n\n    it 'logs a helpful message' do\n",
                      "markdown": "`      xml_filter_plugin.filter(event)\n\n      expect(event.get(\"tags\")).to_not be nil\n      expect(event.get('tags')).to include '_xmlparsefailure'\n    end\n\n    it 'logs a helpful message' do\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 18,
                  "endLine": 478,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    it 'emits the event with an error tag' do\n      xml_filter_plugin.filter(event)\n\n      expect(event.get(\"tags\")).to_not be nil\n      expect(event.get('tags')).to include '_xmlparsefailure'\n    end\n\n",
                    "rendered": {
                      "text": "    it 'emits the event with an error tag' do\n      xml_filter_plugin.filter(event)\n\n      expect(event.get(\"tags\")).to_not be nil\n      expect(event.get('tags')).to include '_xmlparsefailure'\n    end\n\n",
                      "markdown": "`    it 'emits the event with an error tag' do\n      xml_filter_plugin.filter(event)\n\n      expect(event.get(\"tags\")).to_not be nil\n      expect(event.get('tags')).to include '_xmlparsefailure'\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 444,
                  "startColumn": 21,
                  "endLine": 444,
                  "endColumn": 26,
                  "snippet": {
                    "text": "      it 'does fail parsing' do\n        subject.filter(event)\n        expect( event.get(\"tags\") ).to_not be nil\n        expect( event.get(\"tags\") ).to include '_xmlparsefailure'\n      end\n    end\n  end\n",
                    "rendered": {
                      "text": "      it 'does fail parsing' do\n        subject.filter(event)\n        expect( event.get(\"tags\") ).to_not be nil\n        expect( event.get(\"tags\") ).to include '_xmlparsefailure'\n      end\n    end\n  end\n",
                      "markdown": "`      it 'does fail parsing' do\n        subject.filter(event)\n        expect( event.get(\"tags\") ).to_not be nil\n        expect( event.get(\"tags\") ).to include '_xmlparsefailure'\n      end\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 443,
                  "startColumn": 21,
                  "endLine": 443,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n      it 'does fail parsing' do\n        subject.filter(event)\n        expect( event.get(\"tags\") ).to_not be nil\n        expect( event.get(\"tags\") ).to include '_xmlparsefailure'\n      end\n    end\n",
                    "rendered": {
                      "text": "\n      it 'does fail parsing' do\n        subject.filter(event)\n        expect( event.get(\"tags\") ).to_not be nil\n        expect( event.get(\"tags\") ).to include '_xmlparsefailure'\n      end\n    end\n",
                      "markdown": "`\n      it 'does fail parsing' do\n        subject.filter(event)\n        expect( event.get(\"tags\") ).to_not be nil\n        expect( event.get(\"tags\") ).to include '_xmlparsefailure'\n      end\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 435,
                  "startColumn": 19,
                  "endLine": 435,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n    it 'does not fail (by default)' do\n      subject.filter(event)\n      expect( event.get(\"tags\") ).to be nil\n    end\n\n    context 'strict option' do\n",
                    "rendered": {
                      "text": "\n    it 'does not fail (by default)' do\n      subject.filter(event)\n      expect( event.get(\"tags\") ).to be nil\n    end\n\n    context 'strict option' do\n",
                      "markdown": "`\n    it 'does not fail (by default)' do\n      subject.filter(event)\n      expect( event.get(\"tags\") ).to be nil\n    end\n\n    context 'strict option' do\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 418,
                  "startColumn": 24,
                  "endLine": 418,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n      sample(\"raw\" => '<foobar></foobar>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"xpath_field\")}.nil?\n      end\n    end\n  end\n",
                    "rendered": {
                      "text": "\n      sample(\"raw\" => '<foobar></foobar>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"xpath_field\")}.nil?\n      end\n    end\n  end\n",
                      "markdown": "`\n      sample(\"raw\" => '<foobar></foobar>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"xpath_field\")}.nil?\n      end\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 417,
                  "startColumn": 24,
                  "endLine": 417,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      CONFIG\n\n      sample(\"raw\" => '<foobar></foobar>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"xpath_field\")}.nil?\n      end\n    end\n",
                    "rendered": {
                      "text": "      CONFIG\n\n      sample(\"raw\" => '<foobar></foobar>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"xpath_field\")}.nil?\n      end\n    end\n",
                      "markdown": "`      CONFIG\n\n      sample(\"raw\" => '<foobar></foobar>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"xpath_field\")}.nil?\n      end\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 24,
                  "endLine": 402,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => { 'content' => 'text1' }, 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n    describe \"does not set empty array event on failed xpath\" do\n",
                    "rendered": {
                      "text": "\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => { 'content' => 'text1' }, 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n    describe \"does not set empty array event on failed xpath\" do\n",
                      "markdown": "`\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => { 'content' => 'text1' }, 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n    describe \"does not set empty array event on failed xpath\" do\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 401,
                  "startColumn": 24,
                  "endLine": 401,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      CONFIG\n\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => { 'content' => 'text1' }, 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n",
                    "rendered": {
                      "text": "      CONFIG\n\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => { 'content' => 'text1' }, 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n",
                      "markdown": "`      CONFIG\n\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => { 'content' => 'text1' }, 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 24,
                  "endLine": 385,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => 'text1', 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n    describe \"force_content => true\" do\n",
                    "rendered": {
                      "text": "\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => 'text1', 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n    describe \"force_content => true\" do\n",
                      "markdown": "`\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => 'text1', 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n    describe \"force_content => true\" do\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 384,
                  "startColumn": 24,
                  "endLine": 384,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      CONFIG\n\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => 'text1', 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n",
                    "rendered": {
                      "text": "      CONFIG\n\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => 'text1', 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n",
                      "markdown": "`      CONFIG\n\n      sample(\"xmldata\" => '<opt><x>text1</x><y a=\"2\">text2</y></opt>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } ==  { 'x' => 'text1', 'y' => { 'a' => '2', 'content' => 'text2' } }\n      end\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 365,
                  "startColumn": 24,
                  "endLine": 365,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\"]}\n      end\n    end\n  end\n",
                    "rendered": {
                      "text": "\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\"]}\n      end\n    end\n  end\n",
                      "markdown": "`\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\"]}\n      end\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 24,
                  "endLine": 364,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      CONFIG\n\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\"]}\n      end\n    end\n",
                    "rendered": {
                      "text": "      CONFIG\n\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\"]}\n      end\n    end\n",
                      "markdown": "`      CONFIG\n\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\"]}\n      end\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 24,
                  "endLine": 348,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\", {}]}\n      end\n    end\n\n",
                    "rendered": {
                      "text": "\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\", {}]}\n      end\n    end\n\n",
                      "markdown": "`\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\", {}]}\n      end\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 24,
                  "endLine": 347,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      CONFIG\n\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\", {}]}\n      end\n    end\n",
                    "rendered": {
                      "text": "      CONFIG\n\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\", {}]}\n      end\n    end\n",
                      "markdown": "`      CONFIG\n\n      sample(\"xmldata\" => '<foo><key>value1</key><key></key></foo>') do\n        insist { subject.get(\"tags\") }.nil?\n        insist { subject.get(\"data\") } == {\"key\" => [\"value1\", {}]}\n      end\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 22,
                  "endLine": 330,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"xmldata\" => '<element><field1>bbb</field1><field2>789</field2><field3>e3f<field3></element>') do\n      insist { subject.get(\"field1\") } == \"bbb\"\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"xmldata\" => '<element><field1>bbb</field1><field2>789</field2><field3>e3f<field3></element>') do\n      insist { subject.get(\"field1\") } == \"bbb\"\n    end\n  end\n\n",
                      "markdown": "`\n    # Single value\n    sample(\"xmldata\" => '<element><field1>bbb</field1><field2>789</field2><field3>e3f<field3></element>') do\n      insist { subject.get(\"field1\") } == \"bbb\"\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 22,
                  "endLine": 310,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><bar>Content</bar></foo>') do\n      insist { subject.get(\"parseddata\") } == { \"bar\" => \"Content\" }\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><bar>Content</bar></foo>') do\n      insist { subject.get(\"parseddata\") } == { \"bar\" => \"Content\" }\n    end\n  end\n\n",
                      "markdown": "`\n    # Single value\n    sample(\"xmldata\" => '<foo><bar>Content</bar></foo>') do\n      insist { subject.get(\"parseddata\") } == { \"bar\" => \"Content\" }\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 22,
                  "endLine": 293,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><bar>Content</bar></foo>') do\n      insist { subject.get(\"parseddata\") } == { \"bar\" => [\"Content\"] }\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><bar>Content</bar></foo>') do\n      insist { subject.get(\"parseddata\") } == { \"bar\" => [\"Content\"] }\n    end\n  end\n\n",
                      "markdown": "`\n    # Single value\n    sample(\"xmldata\" => '<foo><bar>Content</bar></foo>') do\n      insist { subject.get(\"parseddata\") } == { \"bar\" => [\"Content\"] }\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 22,
                  "endLine": 276,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n      insist { subject.get(\"xpath_field\") } == [\"<div>Content</div>\"]\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n      insist { subject.get(\"xpath_field\") } == [\"<div>Content</div>\"]\n    end\n  end\n\n",
                      "markdown": "`\n    # Single value\n    sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n      insist { subject.get(\"xpath_field\") } == [\"<div>Content</div>\"]\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 24,
                  "endLine": 258,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n      # Single value\n      sample(\"xmldata\" => '<foo><h:div xmlns:h=\"http://www.w3.org/TR/html4/\">Content</h:div></foo>') do\n        insist { subject.get(\"xpath_field\") } == [\"<h:div xmlns:h=\\\"http://www.w3.org/TR/html4/\\\">Content</h:div>\"]\n      end\n  end\n\n",
                    "rendered": {
                      "text": "\n      # Single value\n      sample(\"xmldata\" => '<foo><h:div xmlns:h=\"http://www.w3.org/TR/html4/\">Content</h:div></foo>') do\n        insist { subject.get(\"xpath_field\") } == [\"<h:div xmlns:h=\\\"http://www.w3.org/TR/html4/\\\">Content</h:div>\"]\n      end\n  end\n\n",
                      "markdown": "`\n      # Single value\n      sample(\"xmldata\" => '<foo><h:div xmlns:h=\"http://www.w3.org/TR/html4/\">Content</h:div></foo>') do\n        insist { subject.get(\"xpath_field\") } == [\"<h:div xmlns:h=\\\"http://www.w3.org/TR/html4/\\\">Content</h:div>\"]\n      end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 24,
                  "endLine": 239,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n      # Single value\n      sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n        insist { subject.get(\"xpath_field\") } == [\"<h:div>Content</h:div>\"]\n      end\n  end\n\n",
                    "rendered": {
                      "text": "\n      # Single value\n      sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n        insist { subject.get(\"xpath_field\") } == [\"<h:div>Content</h:div>\"]\n      end\n  end\n\n",
                      "markdown": "`\n      # Single value\n      sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n        insist { subject.get(\"xpath_field\") } == [\"<h:div>Content</h:div>\"]\n      end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 22,
                  "endLine": 220,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n      insist { subject.get(\"xpath_field\") } == [\"<h:div>Content</h:div>\"]\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n      insist { subject.get(\"xpath_field\") } == [\"<h:div>Content</h:div>\"]\n    end\n  end\n\n",
                      "markdown": "`\n    # Single value\n    sample(\"xmldata\" => '<foo xmlns:h=\"http://www.w3.org/TR/html4/\"><h:div>Content</h:div></foo>') do\n      insist { subject.get(\"xpath_field\") } == [\"<h:div>Content</h:div>\"]\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 22,
                  "endLine": 202,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # Single value\n    sample(\"xmldata\" => '<foo><key>Français</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"Français\"]\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    # Single value\n    sample(\"xmldata\" => '<foo><key>Français</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"Français\"]\n    end\n  end\n\n",
                      "markdown": "`    # Single value\n    sample(\"xmldata\" => '<foo><key>Français</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"Français\"]\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 22,
                  "endLine": 201,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><key>Français</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"Français\"]\n    end\n  end\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><key>Français</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"Français\"]\n    end\n  end\n",
                      "markdown": "`\n    # Single value\n    sample(\"xmldata\" => '<foo><key>Français</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"Français\"]\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 22,
                  "endLine": 184,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    #Multiple values\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value1\",\"value2\"]\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    #Multiple values\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value1\",\"value2\"]\n    end\n  end\n\n",
                      "markdown": "`    #Multiple values\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value1\",\"value2\"]\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 22,
                  "endLine": 183,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #Multiple values\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value1\",\"value2\"]\n    end\n  end\n",
                    "rendered": {
                      "text": "\n    #Multiple values\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value1\",\"value2\"]\n    end\n  end\n",
                      "markdown": "`\n    #Multiple values\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value1\",\"value2\"]\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 22,
                  "endLine": 178,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # Single value\n    sample(\"xmldata\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value\"]\n    end\n\n    #Multiple values\n",
                    "rendered": {
                      "text": "    # Single value\n    sample(\"xmldata\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value\"]\n    end\n\n    #Multiple values\n",
                      "markdown": "`    # Single value\n    sample(\"xmldata\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value\"]\n    end\n\n    #Multiple values\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 22,
                  "endLine": 177,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value\"]\n    end\n\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"xmldata\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value\"]\n    end\n\n",
                      "markdown": "`\n    # Single value\n    sample(\"xmldata\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\") } == [\"value\"]\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 22,
                  "endLine": 160,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n\n",
                      "markdown": "`\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 22,
                  "endLine": 159,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    CONFIG\n\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n",
                    "rendered": {
                      "text": "    CONFIG\n\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n",
                      "markdown": "`    CONFIG\n\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 22,
                  "endLine": 143,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #From bad xml\n    sample(\"xmldata\" => '<foo /') do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    #From bad xml\n    sample(\"xmldata\" => '<foo /') do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n    end\n  end\n\n",
                      "markdown": "`\n    #From bad xml\n    sample(\"xmldata\" => '<foo /') do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 22,
                  "endLine": 138,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    #From parse xml with hash as a value\n    sample(\"xmldata\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n    #From bad xml\n",
                    "rendered": {
                      "text": "    #From parse xml with hash as a value\n    sample(\"xmldata\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n    #From bad xml\n",
                      "markdown": "`    #From parse xml with hash as a value\n    sample(\"xmldata\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n    #From bad xml\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 22,
                  "endLine": 137,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #From parse xml with hash as a value\n    sample(\"xmldata\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n",
                    "rendered": {
                      "text": "\n    #From parse xml with hash as a value\n    sample(\"xmldata\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n",
                      "markdown": "`\n    #From parse xml with hash as a value\n    sample(\"xmldata\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 22,
                  "endLine": 132,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    #From parse xml with array as a value\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n    #From parse xml with hash as a value\n",
                    "rendered": {
                      "text": "    #From parse xml with array as a value\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n    #From parse xml with hash as a value\n",
                      "markdown": "`    #From parse xml with array as a value\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n    #From parse xml with hash as a value\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 22,
                  "endLine": 131,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #From parse xml with array as a value\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n",
                    "rendered": {
                      "text": "\n    #From parse xml with array as a value\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n",
                      "markdown": "`\n    #From parse xml with array as a value\n    sample(\"xmldata\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 22,
                  "endLine": 126,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => \"value\"}\n    end\n\n    #From parse xml with array as a value\n",
                    "rendered": {
                      "text": "\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => \"value\"}\n    end\n\n    #From parse xml with array as a value\n",
                      "markdown": "`\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => \"value\"}\n    end\n\n    #From parse xml with array as a value\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 22,
                  "endLine": 125,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    CONFIG\n\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => \"value\"}\n    end\n\n",
                    "rendered": {
                      "text": "    CONFIG\n\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => \"value\"}\n    end\n\n",
                      "markdown": "`    CONFIG\n\n    sample(\"xmldata\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\") } == {\"key\" => \"value\"}\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 22,
                  "endLine": 108,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    #Multiple values\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value1\",\"value2\"]\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    #Multiple values\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value1\",\"value2\"]\n    end\n  end\n\n",
                      "markdown": "`    #Multiple values\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value1\",\"value2\"]\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 22,
                  "endLine": 107,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #Multiple values\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value1\",\"value2\"]\n    end\n  end\n",
                    "rendered": {
                      "text": "\n    #Multiple values\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value1\",\"value2\"]\n    end\n  end\n",
                      "markdown": "`\n    #Multiple values\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value1\",\"value2\"]\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 22,
                  "endLine": 102,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # Single value\n    sample(\"raw\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value\"]\n    end\n\n    #Multiple values\n",
                    "rendered": {
                      "text": "    # Single value\n    sample(\"raw\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value\"]\n    end\n\n    #Multiple values\n",
                      "markdown": "`    # Single value\n    sample(\"raw\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value\"]\n    end\n\n    #Multiple values\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 22,
                  "endLine": 101,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # Single value\n    sample(\"raw\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value\"]\n    end\n\n",
                    "rendered": {
                      "text": "\n    # Single value\n    sample(\"raw\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value\"]\n    end\n\n",
                      "markdown": "`\n    # Single value\n    sample(\"raw\" => '<foo><key>value</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"xpath_field\")} == [\"value\"]\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 22,
                  "endLine": 84,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n\n",
                      "markdown": "`\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 22,
                  "endLine": 83,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    CONFIG\n\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n",
                    "rendered": {
                      "text": "    CONFIG\n\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n",
                      "markdown": "`    CONFIG\n\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == nil\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 22,
                  "endLine": 67,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #From bad xml\n    sample(\"raw\" => '<foo /') do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n    end\n  end\n\n",
                    "rendered": {
                      "text": "\n    #From bad xml\n    sample(\"raw\" => '<foo /') do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n    end\n  end\n\n",
                      "markdown": "`\n    #From bad xml\n    sample(\"raw\" => '<foo /') do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 22,
                  "endLine": 62,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # fail for non string single item array\n    sample(\"raw\" => [{\"foo\" => \"bar\"}]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    #From bad xml\n",
                    "rendered": {
                      "text": "    # fail for non string single item array\n    sample(\"raw\" => [{\"foo\" => \"bar\"}]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    #From bad xml\n",
                      "markdown": "`    # fail for non string single item array\n    sample(\"raw\" => [{\"foo\" => \"bar\"}]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    #From bad xml\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 22,
                  "endLine": 61,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # fail for non string single item array\n    sample(\"raw\" => [{\"foo\" => \"bar\"}]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                    "rendered": {
                      "text": "\n    # fail for non string single item array\n    sample(\"raw\" => [{\"foo\" => \"bar\"}]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                      "markdown": "`\n    # fail for non string single item array\n    sample(\"raw\" => [{\"foo\" => \"bar\"}]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 22,
                  "endLine": 56,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # fail for non string field\n    sample(\"raw\" => {\"foo\" => \"bar\"}) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail for non string single item array\n",
                    "rendered": {
                      "text": "    # fail for non string field\n    sample(\"raw\" => {\"foo\" => \"bar\"}) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail for non string single item array\n",
                      "markdown": "`    # fail for non string field\n    sample(\"raw\" => {\"foo\" => \"bar\"}) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail for non string single item array\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 22,
                  "endLine": 55,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # fail for non string field\n    sample(\"raw\" => {\"foo\" => \"bar\"}) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                    "rendered": {
                      "text": "\n    # fail for non string field\n    sample(\"raw\" => {\"foo\" => \"bar\"}) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                      "markdown": "`\n    # fail for non string field\n    sample(\"raw\" => {\"foo\" => \"bar\"}) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 22,
                  "endLine": 50,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # fail in empty array\n    sample(\"raw\" => []) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail for non string field\n",
                    "rendered": {
                      "text": "    # fail in empty array\n    sample(\"raw\" => []) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail for non string field\n",
                      "markdown": "`    # fail in empty array\n    sample(\"raw\" => []) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail for non string field\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 22,
                  "endLine": 49,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # fail in empty array\n    sample(\"raw\" => []) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                    "rendered": {
                      "text": "\n    # fail in empty array\n    sample(\"raw\" => []) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                      "markdown": "`\n    # fail in empty array\n    sample(\"raw\" => []) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 22,
                  "endLine": 44,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # fail in multi items array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\", \"jojoba\"]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail in empty array\n",
                    "rendered": {
                      "text": "    # fail in multi items array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\", \"jojoba\"]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail in empty array\n",
                      "markdown": "`    # fail in multi items array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\", \"jojoba\"]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n    # fail in empty array\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 22,
                  "endLine": 43,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # fail in multi items array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\", \"jojoba\"]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                    "rendered": {
                      "text": "\n    # fail in multi items array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\", \"jojoba\"]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n",
                      "markdown": "`\n    # fail in multi items array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\", \"jojoba\"]) do\n      insist { subject.get(\"tags\") }.include?(\"_xmlparsefailure\")\n      insist { subject.get(\"data\")} == nil\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 22,
                  "endLine": 38,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # parse xml in single item array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\"]) do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"bar\" => \"baz\"}\n    end\n\n    # fail in multi items array\n",
                    "rendered": {
                      "text": "    # parse xml in single item array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\"]) do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"bar\" => \"baz\"}\n    end\n\n    # fail in multi items array\n",
                      "markdown": "`    # parse xml in single item array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\"]) do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"bar\" => \"baz\"}\n    end\n\n    # fail in multi items array\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 22,
                  "endLine": 37,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    # parse xml in single item array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\"]) do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"bar\" => \"baz\"}\n    end\n\n",
                    "rendered": {
                      "text": "\n    # parse xml in single item array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\"]) do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"bar\" => \"baz\"}\n    end\n\n",
                      "markdown": "`\n    # parse xml in single item array\n    sample(\"raw\" => [\"<foo bar=\\\"baz\\\"/>\"]) do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"bar\" => \"baz\"}\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 22,
                  "endLine": 32,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    #From parse xml with hash as a value\n    sample(\"raw\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n    # parse xml in single item array\n",
                    "rendered": {
                      "text": "    #From parse xml with hash as a value\n    sample(\"raw\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n    # parse xml in single item array\n",
                      "markdown": "`    #From parse xml with hash as a value\n    sample(\"raw\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n    # parse xml in single item array\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 22,
                  "endLine": 31,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #From parse xml with hash as a value\n    sample(\"raw\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n",
                    "rendered": {
                      "text": "\n    #From parse xml with hash as a value\n    sample(\"raw\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n",
                      "markdown": "`\n    #From parse xml with hash as a value\n    sample(\"raw\" => '<foo><key1><key2>value</key2></key1></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key1\" => [{\"key2\" => [\"value\"]}]}\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 22,
                  "endLine": 26,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    #From parse xml with array as a value\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n    #From parse xml with hash as a value\n",
                    "rendered": {
                      "text": "    #From parse xml with array as a value\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n    #From parse xml with hash as a value\n",
                      "markdown": "`    #From parse xml with array as a value\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n    #From parse xml with hash as a value\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 22,
                  "endLine": 25,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    #From parse xml with array as a value\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n",
                    "rendered": {
                      "text": "\n    #From parse xml with array as a value\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n",
                      "markdown": "`\n    #From parse xml with array as a value\n    sample(\"raw\" => '<foo><key>value1</key><key>value2</key></foo>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => [\"value1\", \"value2\"]}\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 22,
                  "endLine": 20,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => \"value\"}\n    end\n\n    #From parse xml with array as a value\n",
                    "rendered": {
                      "text": "\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => \"value\"}\n    end\n\n    #From parse xml with array as a value\n",
                      "markdown": "`\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => \"value\"}\n    end\n\n    #From parse xml with array as a value\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 22,
                  "endLine": 19,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    CONFIG\n\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => \"value\"}\n    end\n\n",
                    "rendered": {
                      "text": "    CONFIG\n\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => \"value\"}\n    end\n\n",
                      "markdown": "`    CONFIG\n\n    sample(\"raw\" => '<foo key=\"value\"/>') do\n      insist { subject.get(\"tags\") }.nil?\n      insist { subject.get(\"data\")} == {\"key\" => \"value\"}\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/spec/filters/xml_spec.rb"
                },
                "region": {
                  "startLine": 521,
                  "startColumn": 7,
                  "endLine": 521,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      let(:parse_options) { 'strict,invalid0' }\n\n      it 'fails to register' do\n        expect { subject.register }.to raise_error(LogStash::ConfigurationError, 'unsupported parse option: \"invalid0\"')\n      end\n    end\n  end\n",
                    "rendered": {
                      "text": "      let(:parse_options) { 'strict,invalid0' }\n\n      it 'fails to register' do\n        expect { subject.register }.to raise_error(LogStash::ConfigurationError, 'unsupported parse option: \"invalid0\"')\n      end\n    end\n  end\n",
                      "markdown": "`      let(:parse_options) { 'strict,invalid0' }\n\n      it 'fails to register' do\n        expect { subject.register }.to raise_error(LogStash::ConfigurationError, 'unsupported parse option: \"invalid0\"')\n      end\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/logstash-filter-xml.gemspec"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 71,
                  "endLine": 25,
                  "endColumn": 77,
                  "snippet": {
                    "text": "  # Gem dependencies\n  s.add_runtime_dependency 'logstash-core', '>= 8.4.0' # this provides Ruby 2.6.0\n  s.add_runtime_dependency \"logstash-core-plugin-api\", \">= 1.60\", \"<= 2.99\"\n  s.add_runtime_dependency 'nokogiri', '>= 1.16.2' # >= 1.13.0 requires Ruby 2.6+\n  s.add_runtime_dependency 'xml-simple'\n\n  s.add_development_dependency 'logstash-devutils'\n",
                    "rendered": {
                      "text": "  # Gem dependencies\n  s.add_runtime_dependency 'logstash-core', '>= 8.4.0' # this provides Ruby 2.6.0\n  s.add_runtime_dependency \"logstash-core-plugin-api\", \">= 1.60\", \"<= 2.99\"\n  s.add_runtime_dependency 'nokogiri', '>= 1.16.2' # >= 1.13.0 requires Ruby 2.6+\n  s.add_runtime_dependency 'xml-simple'\n\n  s.add_development_dependency 'logstash-devutils'\n",
                      "markdown": "`  # Gem dependencies\n  s.add_runtime_dependency 'logstash-core', '>= 8.4.0' # this provides Ruby 2.6.0\n  s.add_runtime_dependency \"logstash-core-plugin-api\", \">= 1.60\", \"<= 2.99\"\n  s.add_runtime_dependency 'nokogiri', '>= 1.16.2' # >= 1.13.0 requires Ruby 2.6+\n  s.add_runtime_dependency 'xml-simple'\n\n  s.add_development_dependency 'logstash-devutils'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/logstash-filter-xml.gemspec"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 70,
                  "endLine": 23,
                  "endColumn": 76,
                  "snippet": {
                    "text": "  s.metadata = { \"logstash_plugin\" => \"true\", \"logstash_group\" => \"filter\" }\n\n  # Gem dependencies\n  s.add_runtime_dependency 'logstash-core', '>= 8.4.0' # this provides Ruby 2.6.0\n  s.add_runtime_dependency \"logstash-core-plugin-api\", \">= 1.60\", \"<= 2.99\"\n  s.add_runtime_dependency 'nokogiri', '>= 1.16.2' # >= 1.13.0 requires Ruby 2.6+\n  s.add_runtime_dependency 'xml-simple'\n",
                    "rendered": {
                      "text": "  s.metadata = { \"logstash_plugin\" => \"true\", \"logstash_group\" => \"filter\" }\n\n  # Gem dependencies\n  s.add_runtime_dependency 'logstash-core', '>= 8.4.0' # this provides Ruby 2.6.0\n  s.add_runtime_dependency \"logstash-core-plugin-api\", \">= 1.60\", \"<= 2.99\"\n  s.add_runtime_dependency 'nokogiri', '>= 1.16.2' # >= 1.13.0 requires Ruby 2.6+\n  s.add_runtime_dependency 'xml-simple'\n",
                      "markdown": "`  s.metadata = { \"logstash_plugin\" => \"true\", \"logstash_group\" => \"filter\" }\n\n  # Gem dependencies\n  s.add_runtime_dependency 'logstash-core', '>= 8.4.0' # this provides Ruby 2.6.0\n  s.add_runtime_dependency \"logstash-core-plugin-api\", \">= 1.60\", \"<= 2.99\"\n  s.add_runtime_dependency 'nokogiri', '>= 1.16.2' # >= 1.13.0 requires Ruby 2.6+\n  s.add_runtime_dependency 'xml-simple'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/logstash-filter-xml.gemspec"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 80,
                  "endLine": 7,
                  "endColumn": 85,
                  "snippet": {
                    "text": "  s.version         = '4.2.0'\n  s.licenses        = ['Apache License (2.0)']\n  s.summary         = \"Parses XML into fields\"\n  s.description     = \"This gem is a Logstash plugin required to be installed on top of the Logstash core pipeline using $LS_HOME/bin/logstash-plugin install gemname. This gem is not a stand-alone program\"\n  s.authors         = [\"Elastic\"]\n  s.email           = 'info@elastic.co'\n  s.homepage        = \"http://www.elastic.co/guide/en/logstash/current/index.html\"\n",
                    "rendered": {
                      "text": "  s.version         = '4.2.0'\n  s.licenses        = ['Apache License (2.0)']\n  s.summary         = \"Parses XML into fields\"\n  s.description     = \"This gem is a Logstash plugin required to be installed on top of the Logstash core pipeline using $LS_HOME/bin/logstash-plugin install gemname. This gem is not a stand-alone program\"\n  s.authors         = [\"Elastic\"]\n  s.email           = 'info@elastic.co'\n  s.homepage        = \"http://www.elastic.co/guide/en/logstash/current/index.html\"\n",
                      "markdown": "`  s.version         = '4.2.0'\n  s.licenses        = ['Apache License (2.0)']\n  s.summary         = \"Parses XML into fields\"\n  s.description     = \"This gem is a Logstash plugin required to be installed on top of the Logstash core pipeline using $LS_HOME/bin/logstash-plugin install gemname. This gem is not a stand-alone program\"\n  s.authors         = [\"Elastic\"]\n  s.email           = 'info@elastic.co'\n  s.homepage        = \"http://www.elastic.co/guide/en/logstash/current/index.html\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/logstash-filter-xml.gemspec"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 71,
                  "endLine": 25,
                  "endColumn": 77,
                  "snippet": {
                    "text": "  # Gem dependencies\n  s.add_runtime_dependency 'logstash-core', '>= 8.4.0' # this provides Ruby 2.6.0\n  s.add_runtime_dependency \"logstash-core-plugin-api\", \">= 1.60\", \"<= 2.99\"\n  s.add_runtime_dependency 'nokogiri', '>= 1.16.2' # >= 1.13.0 requires Ruby 2.6+\n  s.add_runtime_dependency 'xml-simple'\n\n  s.add_development_dependency 'logstash-devutils'\n",
                    "rendered": {
                      "text": "  # Gem dependencies\n  s.add_runtime_dependency 'logstash-core', '>= 8.4.0' # this provides Ruby 2.6.0\n  s.add_runtime_dependency \"logstash-core-plugin-api\", \">= 1.60\", \"<= 2.99\"\n  s.add_runtime_dependency 'nokogiri', '>= 1.16.2' # >= 1.13.0 requires Ruby 2.6+\n  s.add_runtime_dependency 'xml-simple'\n\n  s.add_development_dependency 'logstash-devutils'\n",
                      "markdown": "`  # Gem dependencies\n  s.add_runtime_dependency 'logstash-core', '>= 8.4.0' # this provides Ruby 2.6.0\n  s.add_runtime_dependency \"logstash-core-plugin-api\", \">= 1.60\", \"<= 2.99\"\n  s.add_runtime_dependency 'nokogiri', '>= 1.16.2' # >= 1.13.0 requires Ruby 2.6+\n  s.add_runtime_dependency 'xml-simple'\n\n  s.add_development_dependency 'logstash-devutils'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/logstash-filter-xml.gemspec"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 70,
                  "endLine": 23,
                  "endColumn": 76,
                  "snippet": {
                    "text": "  s.metadata = { \"logstash_plugin\" => \"true\", \"logstash_group\" => \"filter\" }\n\n  # Gem dependencies\n  s.add_runtime_dependency 'logstash-core', '>= 8.4.0' # this provides Ruby 2.6.0\n  s.add_runtime_dependency \"logstash-core-plugin-api\", \">= 1.60\", \"<= 2.99\"\n  s.add_runtime_dependency 'nokogiri', '>= 1.16.2' # >= 1.13.0 requires Ruby 2.6+\n  s.add_runtime_dependency 'xml-simple'\n",
                    "rendered": {
                      "text": "  s.metadata = { \"logstash_plugin\" => \"true\", \"logstash_group\" => \"filter\" }\n\n  # Gem dependencies\n  s.add_runtime_dependency 'logstash-core', '>= 8.4.0' # this provides Ruby 2.6.0\n  s.add_runtime_dependency \"logstash-core-plugin-api\", \">= 1.60\", \"<= 2.99\"\n  s.add_runtime_dependency 'nokogiri', '>= 1.16.2' # >= 1.13.0 requires Ruby 2.6+\n  s.add_runtime_dependency 'xml-simple'\n",
                      "markdown": "`  s.metadata = { \"logstash_plugin\" => \"true\", \"logstash_group\" => \"filter\" }\n\n  # Gem dependencies\n  s.add_runtime_dependency 'logstash-core', '>= 8.4.0' # this provides Ruby 2.6.0\n  s.add_runtime_dependency \"logstash-core-plugin-api\", \">= 1.60\", \"<= 2.99\"\n  s.add_runtime_dependency 'nokogiri', '>= 1.16.2' # >= 1.13.0 requires Ruby 2.6+\n  s.add_runtime_dependency 'xml-simple'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/logstash-filter-xml.gemspec"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 80,
                  "endLine": 7,
                  "endColumn": 85,
                  "snippet": {
                    "text": "  s.version         = '4.2.0'\n  s.licenses        = ['Apache License (2.0)']\n  s.summary         = \"Parses XML into fields\"\n  s.description     = \"This gem is a Logstash plugin required to be installed on top of the Logstash core pipeline using $LS_HOME/bin/logstash-plugin install gemname. This gem is not a stand-alone program\"\n  s.authors         = [\"Elastic\"]\n  s.email           = 'info@elastic.co'\n  s.homepage        = \"http://www.elastic.co/guide/en/logstash/current/index.html\"\n",
                    "rendered": {
                      "text": "  s.version         = '4.2.0'\n  s.licenses        = ['Apache License (2.0)']\n  s.summary         = \"Parses XML into fields\"\n  s.description     = \"This gem is a Logstash plugin required to be installed on top of the Logstash core pipeline using $LS_HOME/bin/logstash-plugin install gemname. This gem is not a stand-alone program\"\n  s.authors         = [\"Elastic\"]\n  s.email           = 'info@elastic.co'\n  s.homepage        = \"http://www.elastic.co/guide/en/logstash/current/index.html\"\n",
                      "markdown": "`  s.version         = '4.2.0'\n  s.licenses        = ['Apache License (2.0)']\n  s.summary         = \"Parses XML into fields\"\n  s.description     = \"This gem is a Logstash plugin required to be installed on top of the Logstash core pipeline using $LS_HOME/bin/logstash-plugin install gemname. This gem is not a stand-alone program\"\n  s.authors         = [\"Elastic\"]\n  s.email           = 'info@elastic.co'\n  s.homepage        = \"http://www.elastic.co/guide/en/logstash/current/index.html\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/lib/logstash/filters/xml.rb"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 17,
                  "endLine": 128,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n    @logger.debug? && @logger.debug(\"Running xml filter\", :event => event)\n\n    value = event.get(@source)\n    return unless value\n\n    if value.is_a?(Array)\n",
                    "rendered": {
                      "text": "\n    @logger.debug? && @logger.debug(\"Running xml filter\", :event => event)\n\n    value = event.get(@source)\n    return unless value\n\n    if value.is_a?(Array)\n",
                      "markdown": "`\n    @logger.debug? && @logger.debug(\"Running xml filter\", :event => event)\n\n    value = event.get(@source)\n    return unless value\n\n    if value.is_a?(Array)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/lib/logstash/filters/xml.rb"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 30,
                  "endLine": 76,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  # false will prevent storing single elements in arrays.\n  config :force_array, :validate => :boolean, :default => true\n\n  # By default the filter will expand attributes differently from content inside\n  # of tags. This option allows you to force text content and attributes to always\n  # parse to a hash value.\n  config :force_content, :validate => :boolean, :default => false\n",
                    "rendered": {
                      "text": "  # false will prevent storing single elements in arrays.\n  config :force_array, :validate => :boolean, :default => true\n\n  # By default the filter will expand attributes differently from content inside\n  # of tags. This option allows you to force text content and attributes to always\n  # parse to a hash value.\n  config :force_content, :validate => :boolean, :default => false\n",
                      "markdown": "`  # false will prevent storing single elements in arrays.\n  config :force_array, :validate => :boolean, :default => true\n\n  # By default the filter will expand attributes differently from content inside\n  # of tags. This option allows you to force text content and attributes to always\n  # parse to a hash value.\n  config :force_content, :validate => :boolean, :default => false\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/lib/logstash/filters/xml.rb"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 30,
                  "endLine": 76,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  # false will prevent storing single elements in arrays.\n  config :force_array, :validate => :boolean, :default => true\n\n  # By default the filter will expand attributes differently from content inside\n  # of tags. This option allows you to force text content and attributes to always\n  # parse to a hash value.\n  config :force_content, :validate => :boolean, :default => false\n",
                    "rendered": {
                      "text": "  # false will prevent storing single elements in arrays.\n  config :force_array, :validate => :boolean, :default => true\n\n  # By default the filter will expand attributes differently from content inside\n  # of tags. This option allows you to force text content and attributes to always\n  # parse to a hash value.\n  config :force_content, :validate => :boolean, :default => false\n",
                      "markdown": "`  # false will prevent storing single elements in arrays.\n  config :force_array, :validate => :boolean, :default => true\n\n  # By default the filter will expand attributes differently from content inside\n  # of tags. This option allows you to force text content and attributes to always\n  # parse to a hash value.\n  config :force_content, :validate => :boolean, :default => false\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/README.md"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 3,
                  "endLine": 69,
                  "endColumn": 3,
                  "snippet": {
                    "text": "- Run Logstash with your plugin\n```sh\nbin/logstash -e 'filter {awesome {}}'\n```\nAt this point any modifications to the plugin code will be applied to this local Logstash setup. After modifying the plugin, simply rerun Logstash.\n\n#### 2.2 Run in an installed Logstash\n\n",
                    "rendered": {
                      "text": "- Run Logstash with your plugin\n```sh\nbin/logstash -e 'filter {awesome {}}'\n```\nAt this point any modifications to the plugin code will be applied to this local Logstash setup. After modifying the plugin, simply rerun Logstash.\n\n#### 2.2 Run in an installed Logstash\n\n",
                      "markdown": "`- Run Logstash with your plugin\n```sh\nbin/logstash -e 'filter {awesome {}}'\n```\nAt this point any modifications to the plugin code will be applied to this local Logstash setup. After modifying the plugin, simply rerun Logstash.\n\n#### 2.2 Run in an installed Logstash\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/README.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 1,
                  "endLine": 36,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n#### Test\n\n- Update your dependencies\n\n```sh\nbundle install\n",
                    "rendered": {
                      "text": "\n#### Test\n\n- Update your dependencies\n\n```sh\nbundle install\n",
                      "markdown": "`\n#### Test\n\n- Update your dependencies\n\n```sh\nbundle install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/CHANGELOG.md"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 30,
                  "endLine": 66,
                  "endColumn": 38,
                  "snippet": {
                    "text": "## 2.0.0\n - Plugins were updated to follow the new shutdown semantic, this mainly allows Logstash to instruct input plugins to terminate gracefully,\n   instead of using Thread.raise on the plugins' threads. Ref: https://github.com/elastic/logstash/pull/3895\n - Dependency on logstash-core update to 2.0\n",
                    "rendered": {
                      "text": "## 2.0.0\n - Plugins were updated to follow the new shutdown semantic, this mainly allows Logstash to instruct input plugins to terminate gracefully,\n   instead of using Thread.raise on the plugins' threads. Ref: https://github.com/elastic/logstash/pull/3895\n - Dependency on logstash-core update to 2.0\n",
                      "markdown": "`## 2.0.0\n - Plugins were updated to follow the new shutdown semantic, this mainly allows Logstash to instruct input plugins to terminate gracefully,\n   instead of using Thread.raise on the plugins' threads. Ref: https://github.com/elastic/logstash/pull/3895\n - Dependency on logstash-core update to 2.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/CHANGELOG.md"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 90,
                  "endLine": 52,
                  "endColumn": 98,
                  "snippet": {
                    "text": "  - Added setting to disable forcing single values to be added in arrays. Ref: https://github.com/logstash-plugins/logstash-filter-xml/pull/28.\n\n## 2.1.3\n  - Depend on logstash-core-plugin-api instead of logstash-core, removing the need to mass update plugins on major releases of logstash\n\n## 2.1.2\n  - New dependency requirements for logstash-core for the 5.0 release\n",
                    "rendered": {
                      "text": "  - Added setting to disable forcing single values to be added in arrays. Ref: https://github.com/logstash-plugins/logstash-filter-xml/pull/28.\n\n## 2.1.3\n  - Depend on logstash-core-plugin-api instead of logstash-core, removing the need to mass update plugins on major releases of logstash\n\n## 2.1.2\n  - New dependency requirements for logstash-core for the 5.0 release\n",
                      "markdown": "`  - Added setting to disable forcing single values to be added in arrays. Ref: https://github.com/logstash-plugins/logstash-filter-xml/pull/28.\n\n## 2.1.3\n  - Depend on logstash-core-plugin-api instead of logstash-core, removing the need to mass update plugins on major releases of logstash\n\n## 2.1.2\n  - New dependency requirements for logstash-core for the 5.0 release\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/CHANGELOG.md"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 3,
                  "endLine": 46,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  - Republish all the gems under jruby.\n\n## 3.0.0\n  - Update the plugin to the version 2.0 of the plugin api, this change is required for Logstash 5.0 compatibility. See https://github.com/elastic/logstash/issues/5141\n\n## 2.1.4\n  - Added setting to disable forcing single values to be added in arrays. Ref: https://github.com/logstash-plugins/logstash-filter-xml/pull/28.\n",
                    "rendered": {
                      "text": "  - Republish all the gems under jruby.\n\n## 3.0.0\n  - Update the plugin to the version 2.0 of the plugin api, this change is required for Logstash 5.0 compatibility. See https://github.com/elastic/logstash/issues/5141\n\n## 2.1.4\n  - Added setting to disable forcing single values to be added in arrays. Ref: https://github.com/logstash-plugins/logstash-filter-xml/pull/28.\n",
                      "markdown": "`  - Republish all the gems under jruby.\n\n## 3.0.0\n  - Update the plugin to the version 2.0 of the plugin api, this change is required for Logstash 5.0 compatibility. See https://github.com/elastic/logstash/issues/5141\n\n## 2.1.4\n  - Added setting to disable forcing single values to be added in arrays. Ref: https://github.com/logstash-plugins/logstash-filter-xml/pull/28.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/CHANGELOG.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  - Fixed force_array behavior with nested elements [#57](https://github.com/logstash-plugins/logstash-filter-xml/pull/57)\n\n## 4.0.5\n  - Update gemspec summary\n\n## 4.0.4\n  - Fix some documentation issues\n",
                    "rendered": {
                      "text": "  - Fixed force_array behavior with nested elements [#57](https://github.com/logstash-plugins/logstash-filter-xml/pull/57)\n\n## 4.0.5\n  - Update gemspec summary\n\n## 4.0.4\n  - Fix some documentation issues\n",
                      "markdown": "`  - Fixed force_array behavior with nested elements [#57](https://github.com/logstash-plugins/logstash-filter-xml/pull/57)\n\n## 4.0.5\n  - Update gemspec summary\n\n## 4.0.4\n  - Fix some documentation issues\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/CHANGELOG.md"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 39,
                  "endLine": 15,
                  "endColumn": 48,
                  "snippet": {
                    "text": "  - Fix: exceptions thrown while handling events no longer crash the pipeline [#73](https://github.com/logstash-plugins/logstash-filter-xml/pull/73)\n\n## 4.1.0\n  - Feat: added parser_options for more control over XML parsing [#68](https://github.com/logstash-plugins/logstash-filter-xml/pull/68)\n\n## 4.0.7\n  - Fixed creation of empty arrays when xpath failed [#59](https://github.com/logstash-plugins/logstash-filter-xml/pull/59)\n",
                    "rendered": {
                      "text": "  - Fix: exceptions thrown while handling events no longer crash the pipeline [#73](https://github.com/logstash-plugins/logstash-filter-xml/pull/73)\n\n## 4.1.0\n  - Feat: added parser_options for more control over XML parsing [#68](https://github.com/logstash-plugins/logstash-filter-xml/pull/68)\n\n## 4.0.7\n  - Fixed creation of empty arrays when xpath failed [#59](https://github.com/logstash-plugins/logstash-filter-xml/pull/59)\n",
                      "markdown": "`  - Fix: exceptions thrown while handling events no longer crash the pipeline [#73](https://github.com/logstash-plugins/logstash-filter-xml/pull/73)\n\n## 4.1.0\n  - Feat: added parser_options for more control over XML parsing [#68](https://github.com/logstash-plugins/logstash-filter-xml/pull/68)\n\n## 4.0.7\n  - Fixed creation of empty arrays when xpath failed [#59](https://github.com/logstash-plugins/logstash-filter-xml/pull/59)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/data.tar.gz/data.tar/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 3,
                  "endLine": 2,
                  "endColumn": 11,
                  "snippet": {
                    "text": "## 4.2.0\n  - Update Nokogiri dependency version [#78](https://github.com/logstash-plugins/logstash-filter-xml/pull/78)\n\n## 4.1.3\n  - [DOC] Updated URL for current xsl reference docs [#70](https://github.com/logstash-plugins/logstash-filter-xml/pull/70)\n",
                    "rendered": {
                      "text": "## 4.2.0\n  - Update Nokogiri dependency version [#78](https://github.com/logstash-plugins/logstash-filter-xml/pull/78)\n\n## 4.1.3\n  - [DOC] Updated URL for current xsl reference docs [#70](https://github.com/logstash-plugins/logstash-filter-xml/pull/70)\n",
                      "markdown": "`## 4.2.0\n  - Update Nokogiri dependency version [#78](https://github.com/logstash-plugins/logstash-filter-xml/pull/78)\n\n## 4.1.3\n  - [DOC] Updated URL for current xsl reference docs [#70](https://github.com/logstash-plugins/logstash-filter-xml/pull/70)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/docs/index.asciidoc"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 1,
                  "endLine": 103,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Currently supported options are:\n\n - `strict` - forces the parser to fail early instead of accumulating errors when content is not valid xml.\n \nControl characters such as ASCII 0x0 are not allowed and _always_ result in non-valid XML.\n\nWhen XML content is not valid, it will be tagged as `_xmlparsefailure`.\n\n",
                    "rendered": {
                      "text": "Currently supported options are:\n\n - `strict` - forces the parser to fail early instead of accumulating errors when content is not valid xml.\n \nControl characters such as ASCII 0x0 are not allowed and _always_ result in non-valid XML.\n\nWhen XML content is not valid, it will be tagged as `_xmlparsefailure`.\n\n",
                      "markdown": "`Currently supported options are:\n\n - `strict` - forces the parser to fail early instead of accumulating errors when content is not valid xml.\n \nControl characters such as ASCII 0x0 are not allowed and _always_ result in non-valid XML.\n\nWhen XML content is not valid, it will be tagged as `_xmlparsefailure`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/docs/index.asciidoc"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 41,
                  "endLine": 97,
                  "endColumn": 50,
                  "snippet": {
                    "text": "  * Value type is <<string,string>>\n  * There is no default value for this setting.\n\nSetting XML parse options allows for more control of the parsing process.\nBy default the parser is not strict and thus accepts some invalid content.\nCurrently supported options are:\n\n",
                    "rendered": {
                      "text": "  * Value type is <<string,string>>\n  * There is no default value for this setting.\n\nSetting XML parse options allows for more control of the parsing process.\nBy default the parser is not strict and thus accepts some invalid content.\nCurrently supported options are:\n\n",
                      "markdown": "`  * Value type is <<string,string>>\n  * There is no default value for this setting.\n\nSetting XML parse options allows for more control of the parsing process.\nBy default the parser is not strict and thus accepts some invalid content.\nCurrently supported options are:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/docs/index.asciidoc"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 26,
                  "endLine": 66,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  * Value type is <<boolean,boolean>>\n  * Default value is `false`\n\nBy default the filter will expand attributes differently from content inside\nof tags. This option allows you to force text content and attributes to always\nparse to a hash value.\n\n",
                    "rendered": {
                      "text": "  * Value type is <<boolean,boolean>>\n  * Default value is `false`\n\nBy default the filter will expand attributes differently from content inside\nof tags. This option allows you to force text content and attributes to always\nparse to a hash value.\n\n",
                      "markdown": "`  * Value type is <<boolean,boolean>>\n  * Default value is `false`\n\nBy default the filter will expand attributes differently from content inside\nof tags. This option allows you to force text content and attributes to always\nparse to a hash value.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/docs/index.asciidoc"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 26,
                  "endLine": 66,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  * Value type is <<boolean,boolean>>\n  * Default value is `false`\n\nBy default the filter will expand attributes differently from content inside\nof tags. This option allows you to force text content and attributes to always\nparse to a hash value.\n\n",
                    "rendered": {
                      "text": "  * Value type is <<boolean,boolean>>\n  * Default value is `false`\n\nBy default the filter will expand attributes differently from content inside\nof tags. This option allows you to force text content and attributes to always\nparse to a hash value.\n\n",
                      "markdown": "`  * Value type is <<boolean,boolean>>\n  * Default value is `false`\n\nBy default the filter will expand attributes differently from content inside\nof tags. This option allows you to force text content and attributes to always\nparse to a hash value.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/README.md"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 3,
                  "endLine": 69,
                  "endColumn": 3,
                  "snippet": {
                    "text": "- Run Logstash with your plugin\n```sh\nbin/logstash -e 'filter {awesome {}}'\n```\nAt this point any modifications to the plugin code will be applied to this local Logstash setup. After modifying the plugin, simply rerun Logstash.\n\n#### 2.2 Run in an installed Logstash\n\n",
                    "rendered": {
                      "text": "- Run Logstash with your plugin\n```sh\nbin/logstash -e 'filter {awesome {}}'\n```\nAt this point any modifications to the plugin code will be applied to this local Logstash setup. After modifying the plugin, simply rerun Logstash.\n\n#### 2.2 Run in an installed Logstash\n\n",
                      "markdown": "`- Run Logstash with your plugin\n```sh\nbin/logstash -e 'filter {awesome {}}'\n```\nAt this point any modifications to the plugin code will be applied to this local Logstash setup. After modifying the plugin, simply rerun Logstash.\n\n#### 2.2 Run in an installed Logstash\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/gems/logstash-filter-xml-4.2.0/README.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 1,
                  "endLine": 36,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n#### Test\n\n- Update your dependencies\n\n```sh\nbundle install\n",
                    "rendered": {
                      "text": "\n#### Test\n\n- Update your dependencies\n\n```sh\nbundle install\n",
                      "markdown": "`\n#### Test\n\n- Update your dependencies\n\n```sh\nbundle install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/metadata.gz/metadata"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 70,
                  "endLine": 103,
                  "endColumn": 75,
                  "snippet": {
                    "text": "    - - \">=\"\n      - !ruby/object:Gem::Version\n        version: '0'\ndescription: This gem is a Logstash plugin required to be installed on top of the\n  Logstash core pipeline using $LS_HOME/bin/logstash-plugin install gemname. This\n  gem is not a stand-alone program\nemail: info@elastic.co\n",
                    "rendered": {
                      "text": "    - - \">=\"\n      - !ruby/object:Gem::Version\n        version: '0'\ndescription: This gem is a Logstash plugin required to be installed on top of the\n  Logstash core pipeline using $LS_HOME/bin/logstash-plugin install gemname. This\n  gem is not a stand-alone program\nemail: info@elastic.co\n",
                      "markdown": "`    - - \">=\"\n      - !ruby/object:Gem::Version\n        version: '0'\ndescription: This gem is a Logstash plugin required to be installed on top of the\n  Logstash core pipeline using $LS_HOME/bin/logstash-plugin install gemname. This\n  gem is not a stand-alone program\nemail: info@elastic.co\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/logstash-filter-xml-4.2.0-r1.apk/logstash-filter-xml-4.2.0-r1/usr/share/jruby/lib/ruby/gems/shared/cache/logstash-filter-xml-4.2.0.gem/metadata.gz/metadata"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 9,
                  "endLine": 6,
                  "snippet": {
                    "text": "name: logstash-filter-xml\nversion: !ruby/object:Gem::Version\n  version: 4.2.0\nplatform: ruby\nauthors:\n- Elastic\nautorequire:\nbindir: bin\n",
                    "rendered": {
                      "text": "name: logstash-filter-xml\nversion: !ruby/object:Gem::Version\n  version: 4.2.0\nplatform: ruby\nauthors:\n- Elastic\nautorequire:\nbindir: bin\n",
                      "markdown": "`name: logstash-filter-xml\nversion: !ruby/object:Gem::Version\n  version: 4.2.0\nplatform: ruby\nauthors:\n- Elastic\nautorequire:\nbindir: bin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}