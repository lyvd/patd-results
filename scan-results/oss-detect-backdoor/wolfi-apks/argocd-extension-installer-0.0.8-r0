{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/.PKGINFO"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 8,
                  "endLine": 14,
                  "snippet": {
                    "text": "builddate = 1728590663\nlicense = Apache-2.0\ndepend = busybox\ndepend = curl\ndepend = file\ndatahash = 7b468503b28c407ad389686d825e99680f999bef642f8e26bf3dbabb4ab3f90d\n",
                    "rendered": {
                      "text": "builddate = 1728590663\nlicense = Apache-2.0\ndepend = busybox\ndepend = curl\ndepend = file\ndatahash = 7b468503b28c407ad389686d825e99680f999bef642f8e26bf3dbabb4ab3f90d\n",
                      "markdown": "`builddate = 1728590663\nlicense = Apache-2.0\ndepend = busybox\ndepend = curl\ndepend = file\ndatahash = 7b468503b28c407ad389686d825e99680f999bef642f8e26bf3dbabb4ab3f90d\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/.PKGINFO"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 8,
                  "endLine": 13,
                  "snippet": {
                    "text": "commit = 1272ba5d05863953be9519fb8db70c85ee38470d\nbuilddate = 1728590663\nlicense = Apache-2.0\ndepend = busybox\ndepend = curl\ndepend = file\ndatahash = 7b468503b28c407ad389686d825e99680f999bef642f8e26bf3dbabb4ab3f90d\n",
                    "rendered": {
                      "text": "commit = 1272ba5d05863953be9519fb8db70c85ee38470d\nbuilddate = 1728590663\nlicense = Apache-2.0\ndepend = busybox\ndepend = curl\ndepend = file\ndatahash = 7b468503b28c407ad389686d825e99680f999bef642f8e26bf3dbabb4ab3f90d\n",
                      "markdown": "`commit = 1272ba5d05863953be9519fb8db70c85ee38470d\nbuilddate = 1728590663\nlicense = Apache-2.0\ndepend = busybox\ndepend = curl\ndepend = file\ndatahash = 7b468503b28c407ad389686d825e99680f999bef642f8e26bf3dbabb4ab3f90d\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/home/ext-installer/install.sh"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 41,
                  "endLine": 84,
                  "endColumn": 45,
                  "snippet": {
                    "text": "  js_variable=$(echo \"$ext_vars\" | jq -r 'to_entries | map(\"\\\"\" + (.key | ascii_upcase) + \"\\\": \\\"\" + .value + \"\\\"\") | join(\", \")')\n  js_vars_wrap=\"((window) => { const vars = { $js_variable }; window.${sanitized_extension_name}_VARS = vars; })(window);\"\n  if [ -d \"$ext_installed_path\" ]; then\n      echo \"Exporting extension vars file at $js_file_path\"\n      echo \"$js_vars_wrap\" > \"$js_file_path\"\n  else\n      echo \"$ext_installed_path path doesn't exist, extension vars failed to be exported \"\n",
                    "rendered": {
                      "text": "  js_variable=$(echo \"$ext_vars\" | jq -r 'to_entries | map(\"\\\"\" + (.key | ascii_upcase) + \"\\\": \\\"\" + .value + \"\\\"\") | join(\", \")')\n  js_vars_wrap=\"((window) => { const vars = { $js_variable }; window.${sanitized_extension_name}_VARS = vars; })(window);\"\n  if [ -d \"$ext_installed_path\" ]; then\n      echo \"Exporting extension vars file at $js_file_path\"\n      echo \"$js_vars_wrap\" > \"$js_file_path\"\n  else\n      echo \"$ext_installed_path path doesn't exist, extension vars failed to be exported \"\n",
                      "markdown": "`  js_variable=$(echo \"$ext_vars\" | jq -r 'to_entries | map(\"\\\"\" + (.key | ascii_upcase) + \"\\\": \\\"\" + .value + \"\\\"\") | join(\", \")')\n  js_vars_wrap=\"((window) => { const vars = { $js_variable }; window.${sanitized_extension_name}_VARS = vars; })(window);\"\n  if [ -d \"$ext_installed_path\" ]; then\n      echo \"Exporting extension vars file at $js_file_path\"\n      echo \"$js_vars_wrap\" > \"$js_file_path\"\n  else\n      echo \"$ext_installed_path path doesn't exist, extension vars failed to be exported \"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/home/ext-installer/install.sh"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 20,
                  "endLine": 103,
                  "endColumn": 25,
                  "snippet": {
                    "text": "ext_version=\"${EXTENSION_VERSION:-}\"\next_url=\"${EXTENSION_URL:-}\"\nif [ \"$ext_url\" = \"\" ]; then\n    echo \"error: the env var EXTENSION_URL must be provided\"\n    exit 1\nfi\nchecksum_url=\"${EXTENSION_CHECKSUM_URL:-}\"\n",
                    "rendered": {
                      "text": "ext_version=\"${EXTENSION_VERSION:-}\"\next_url=\"${EXTENSION_URL:-}\"\nif [ \"$ext_url\" = \"\" ]; then\n    echo \"error: the env var EXTENSION_URL must be provided\"\n    exit 1\nfi\nchecksum_url=\"${EXTENSION_CHECKSUM_URL:-}\"\n",
                      "markdown": "`ext_version=\"${EXTENSION_VERSION:-}\"\next_url=\"${EXTENSION_URL:-}\"\nif [ \"$ext_url\" = \"\" ]; then\n    echo \"error: the env var EXTENSION_URL must be provided\"\n    exit 1\nfi\nchecksum_url=\"${EXTENSION_CHECKSUM_URL:-}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/home/ext-installer/install.sh"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 2,
                  "endLine": 92,
                  "snippet": {
                    "text": "  fi\n}\n\n## Script\next_enabled=\"${EXTENSION_ENABLED:-true}\"\next_name=\"${EXTENSION_NAME:-}\"\n\nif [ \"$ext_enabled\" != \"true\" ]; then\n",
                    "rendered": {
                      "text": "  fi\n}\n\n## Script\next_enabled=\"${EXTENSION_ENABLED:-true}\"\next_name=\"${EXTENSION_NAME:-}\"\n\nif [ \"$ext_enabled\" != \"true\" ]; then\n",
                      "markdown": "`  fi\n}\n\n## Script\next_enabled=\"${EXTENSION_ENABLED:-true}\"\next_name=\"${EXTENSION_NAME:-}\"\n\nif [ \"$ext_enabled\" != \"true\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/home/ext-installer/install.sh"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 96,
                  "endLine": 77,
                  "endColumn": 102,
                  "snippet": {
                    "text": "\ncreate_extension_js_file_with_vars() {\n  echo \"Generating extension vars js file...\"\n  ext_installed_path=$(find /tmp/extensions/resources -type d -name \"extension*-$ext_name*.js\" | head -n 1)\n  sanitized_extension_name=$(echo \"${ext_name//-/_}\" | tr '[:lower:]' '[:upper:]')\n  ext_js_file_name=\"${sanitized_extension_name}_vars\"\n  js_file_path=\"${ext_installed_path}/extension-0-${ext_js_file_name}.js\"\n",
                    "rendered": {
                      "text": "\ncreate_extension_js_file_with_vars() {\n  echo \"Generating extension vars js file...\"\n  ext_installed_path=$(find /tmp/extensions/resources -type d -name \"extension*-$ext_name*.js\" | head -n 1)\n  sanitized_extension_name=$(echo \"${ext_name//-/_}\" | tr '[:lower:]' '[:upper:]')\n  ext_js_file_name=\"${sanitized_extension_name}_vars\"\n  js_file_path=\"${ext_installed_path}/extension-0-${ext_js_file_name}.js\"\n",
                      "markdown": "`\ncreate_extension_js_file_with_vars() {\n  echo \"Generating extension vars js file...\"\n  ext_installed_path=$(find /tmp/extensions/resources -type d -name \"extension*-$ext_name*.js\" | head -n 1)\n  sanitized_extension_name=$(echo \"${ext_name//-/_}\" | tr '[:lower:]' '[:upper:]')\n  ext_js_file_name=\"${sanitized_extension_name}_vars\"\n  js_file_path=\"${ext_installed_path}/extension-0-${ext_js_file_name}.js\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/home/ext-installer/install.sh"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 3,
                  "endLine": 65,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    if [ ! -d \"/tmp/extensions/resources\" ]; then\n        mkdir -p /tmp/extensions/resources\n    fi\n    cp -Rf resources/* /tmp/extensions/resources/\n\n    if [ -n \"$ext_vars\" ] && [ -n \"$ext_name\" ]; then\n        create_extension_js_file_with_vars\n",
                    "rendered": {
                      "text": "    if [ ! -d \"/tmp/extensions/resources\" ]; then\n        mkdir -p /tmp/extensions/resources\n    fi\n    cp -Rf resources/* /tmp/extensions/resources/\n\n    if [ -n \"$ext_vars\" ] && [ -n \"$ext_name\" ]; then\n        create_extension_js_file_with_vars\n",
                      "markdown": "`    if [ ! -d \"/tmp/extensions/resources\" ]; then\n        mkdir -p /tmp/extensions/resources\n    fi\n    cp -Rf resources/* /tmp/extensions/resources/\n\n    if [ -n \"$ext_vars\" ] && [ -n \"$ext_name\" ]; then\n        create_extension_js_file_with_vars\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/home/ext-installer/install.sh"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 7,
                  "endLine": 56,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    if [ \"$mime_type\" = \"application/gzip\" ]; then\n        tar -zxf $ext_filename\n    elif [ \"$mime_type\" = \"application/x-tar\" ]; then\n        tar -xf $ext_filename\n    else\n        echo \"error: unsupported extension archive: $mime_type\"\n        echo \"supported formats: gzip and tar\"\n",
                    "rendered": {
                      "text": "    if [ \"$mime_type\" = \"application/gzip\" ]; then\n        tar -zxf $ext_filename\n    elif [ \"$mime_type\" = \"application/x-tar\" ]; then\n        tar -xf $ext_filename\n    else\n        echo \"error: unsupported extension archive: $mime_type\"\n        echo \"supported formats: gzip and tar\"\n",
                      "markdown": "`    if [ \"$mime_type\" = \"application/gzip\" ]; then\n        tar -zxf $ext_filename\n    elif [ \"$mime_type\" = \"application/x-tar\" ]; then\n        tar -xf $ext_filename\n    else\n        echo \"error: unsupported extension archive: $mime_type\"\n        echo \"supported formats: gzip and tar\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/home/ext-installer/install.sh"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 7,
                  "endLine": 54,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    cd $download_dir\n    local mime_type=$(file --mime-type \"$ext_filename\" | awk '{print $2}')\n    if [ \"$mime_type\" = \"application/gzip\" ]; then\n        tar -zxf $ext_filename\n    elif [ \"$mime_type\" = \"application/x-tar\" ]; then\n        tar -xf $ext_filename\n    else\n",
                    "rendered": {
                      "text": "    cd $download_dir\n    local mime_type=$(file --mime-type \"$ext_filename\" | awk '{print $2}')\n    if [ \"$mime_type\" = \"application/gzip\" ]; then\n        tar -zxf $ext_filename\n    elif [ \"$mime_type\" = \"application/x-tar\" ]; then\n        tar -xf $ext_filename\n    else\n",
                      "markdown": "`    cd $download_dir\n    local mime_type=$(file --mime-type \"$ext_filename\" | awk '{print $2}')\n    if [ \"$mime_type\" = \"application/gzip\" ]; then\n        tar -zxf $ext_filename\n    elif [ \"$mime_type\" = \"application/x-tar\" ]; then\n        tar -xf $ext_filename\n    else\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/home/ext-installer/install.sh"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 56,
                  "endLine": 52,
                  "endColumn": 61,
                  "snippet": {
                    "text": "install_extension() {\n    echo \"Installing the UI extension...\"\n    cd $download_dir\n    local mime_type=$(file --mime-type \"$ext_filename\" | awk '{print $2}')\n    if [ \"$mime_type\" = \"application/gzip\" ]; then\n        tar -zxf $ext_filename\n    elif [ \"$mime_type\" = \"application/x-tar\" ]; then\n",
                    "rendered": {
                      "text": "install_extension() {\n    echo \"Installing the UI extension...\"\n    cd $download_dir\n    local mime_type=$(file --mime-type \"$ext_filename\" | awk '{print $2}')\n    if [ \"$mime_type\" = \"application/gzip\" ]; then\n        tar -zxf $ext_filename\n    elif [ \"$mime_type\" = \"application/x-tar\" ]; then\n",
                      "markdown": "`install_extension() {\n    echo \"Installing the UI extension...\"\n    cd $download_dir\n    local mime_type=$(file --mime-type \"$ext_filename\" | awk '{print $2}')\n    if [ \"$mime_type\" = \"application/gzip\" ]; then\n        tar -zxf $ext_filename\n    elif [ \"$mime_type\" = \"application/x-tar\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/home/ext-installer/install.sh"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 43,
                  "endLine": 40,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    if [ \"$checksum_url\" != \"\" ]; then\n        echo \"Validating the UI extension checksum...\"\n        expected_sha=$(curl -Lf $checksum_url | grep \"$ext_filename\" | awk '{print $1;}')\n        current_sha=$(sha256sum $ext_file | awk '{print $1;}')\n        if [ \"$expected_sha\" != \"$current_sha\" ]; then\n            echo \"ERROR: extension checksum mismatch\"\n            exit 1\n",
                    "rendered": {
                      "text": "    if [ \"$checksum_url\" != \"\" ]; then\n        echo \"Validating the UI extension checksum...\"\n        expected_sha=$(curl -Lf $checksum_url | grep \"$ext_filename\" | awk '{print $1;}')\n        current_sha=$(sha256sum $ext_file | awk '{print $1;}')\n        if [ \"$expected_sha\" != \"$current_sha\" ]; then\n            echo \"ERROR: extension checksum mismatch\"\n            exit 1\n",
                      "markdown": "`    if [ \"$checksum_url\" != \"\" ]; then\n        echo \"Validating the UI extension checksum...\"\n        expected_sha=$(curl -Lf $checksum_url | grep \"$ext_filename\" | awk '{print $1;}')\n        current_sha=$(sha256sum $ext_file | awk '{print $1;}')\n        if [ \"$expected_sha\" != \"$current_sha\" ]; then\n            echo \"ERROR: extension checksum mismatch\"\n            exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/home/ext-installer/install.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 70,
                  "endLine": 39,
                  "endColumn": 75,
                  "snippet": {
                    "text": "    curl -Lf --max-time $download_max_sec $ext_url -o $ext_file\n    if [ \"$checksum_url\" != \"\" ]; then\n        echo \"Validating the UI extension checksum...\"\n        expected_sha=$(curl -Lf $checksum_url | grep \"$ext_filename\" | awk '{print $1;}')\n        current_sha=$(sha256sum $ext_file | awk '{print $1;}')\n        if [ \"$expected_sha\" != \"$current_sha\" ]; then\n            echo \"ERROR: extension checksum mismatch\"\n",
                    "rendered": {
                      "text": "    curl -Lf --max-time $download_max_sec $ext_url -o $ext_file\n    if [ \"$checksum_url\" != \"\" ]; then\n        echo \"Validating the UI extension checksum...\"\n        expected_sha=$(curl -Lf $checksum_url | grep \"$ext_filename\" | awk '{print $1;}')\n        current_sha=$(sha256sum $ext_file | awk '{print $1;}')\n        if [ \"$expected_sha\" != \"$current_sha\" ]; then\n            echo \"ERROR: extension checksum mismatch\"\n",
                      "markdown": "`    curl -Lf --max-time $download_max_sec $ext_url -o $ext_file\n    if [ \"$checksum_url\" != \"\" ]; then\n        echo \"Validating the UI extension checksum...\"\n        expected_sha=$(curl -Lf $checksum_url | grep \"$ext_filename\" | awk '{print $1;}')\n        current_sha=$(sha256sum $ext_file | awk '{print $1;}')\n        if [ \"$expected_sha\" != \"$current_sha\" ]; then\n            echo \"ERROR: extension checksum mismatch\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/home/ext-installer/install.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 47,
                  "endLine": 39,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    curl -Lf --max-time $download_max_sec $ext_url -o $ext_file\n    if [ \"$checksum_url\" != \"\" ]; then\n        echo \"Validating the UI extension checksum...\"\n        expected_sha=$(curl -Lf $checksum_url | grep \"$ext_filename\" | awk '{print $1;}')\n        current_sha=$(sha256sum $ext_file | awk '{print $1;}')\n        if [ \"$expected_sha\" != \"$current_sha\" ]; then\n            echo \"ERROR: extension checksum mismatch\"\n",
                    "rendered": {
                      "text": "    curl -Lf --max-time $download_max_sec $ext_url -o $ext_file\n    if [ \"$checksum_url\" != \"\" ]; then\n        echo \"Validating the UI extension checksum...\"\n        expected_sha=$(curl -Lf $checksum_url | grep \"$ext_filename\" | awk '{print $1;}')\n        current_sha=$(sha256sum $ext_file | awk '{print $1;}')\n        if [ \"$expected_sha\" != \"$current_sha\" ]; then\n            echo \"ERROR: extension checksum mismatch\"\n",
                      "markdown": "`    curl -Lf --max-time $download_max_sec $ext_url -o $ext_file\n    if [ \"$checksum_url\" != \"\" ]; then\n        echo \"Validating the UI extension checksum...\"\n        expected_sha=$(curl -Lf $checksum_url | grep \"$ext_filename\" | awk '{print $1;}')\n        current_sha=$(sha256sum $ext_file | awk '{print $1;}')\n        if [ \"$expected_sha\" != \"$current_sha\" ]; then\n            echo \"ERROR: extension checksum mismatch\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/home/ext-installer/install.sh"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 9,
                  "snippet": {
                    "text": "download_extension() {\n    mkdir -p $download_dir\n    echo \"Downloading the UI extension...\"\n    curl -Lf --max-time $download_max_sec $ext_url -o $ext_file\n    if [ \"$checksum_url\" != \"\" ]; then\n        echo \"Validating the UI extension checksum...\"\n        expected_sha=$(curl -Lf $checksum_url | grep \"$ext_filename\" | awk '{print $1;}')\n",
                    "rendered": {
                      "text": "download_extension() {\n    mkdir -p $download_dir\n    echo \"Downloading the UI extension...\"\n    curl -Lf --max-time $download_max_sec $ext_url -o $ext_file\n    if [ \"$checksum_url\" != \"\" ]; then\n        echo \"Validating the UI extension checksum...\"\n        expected_sha=$(curl -Lf $checksum_url | grep \"$ext_filename\" | awk '{print $1;}')\n",
                      "markdown": "`download_extension() {\n    mkdir -p $download_dir\n    echo \"Downloading the UI extension...\"\n    curl -Lf --max-time $download_max_sec $ext_url -o $ext_file\n    if [ \"$checksum_url\" != \"\" ]; then\n        echo \"Validating the UI extension checksum...\"\n        expected_sha=$(curl -Lf $checksum_url | grep \"$ext_filename\" | awk '{print $1;}')\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/argocd-extension-installer-0.0.8-r0.apk/argocd-extension-installer-0.0.8-r0/home/ext-installer/install.sh"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "endLine": 8,
                  "endColumn": 27,
                  "snippet": {
                    "text": "# will return the current system uptime in milliseconds\nuptime_ms() {\n    # this is necessary to be able to return a value with milliseconds\n    # precision as busybox 'date' command does not support %N format\n    read up rest </proc/uptime\n    echo $(( 10 * (${up%.*}${up#*.}) ))\n}\n",
                    "rendered": {
                      "text": "# will return the current system uptime in milliseconds\nuptime_ms() {\n    # this is necessary to be able to return a value with milliseconds\n    # precision as busybox 'date' command does not support %N format\n    read up rest </proc/uptime\n    echo $(( 10 * (${up%.*}${up#*.}) ))\n}\n",
                      "markdown": "`# will return the current system uptime in milliseconds\nuptime_ms() {\n    # this is necessary to be able to return a value with milliseconds\n    # precision as busybox 'date' command does not support %N format\n    read up rest </proc/uptime\n    echo $(( 10 * (${up%.*}${up#*.}) ))\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}