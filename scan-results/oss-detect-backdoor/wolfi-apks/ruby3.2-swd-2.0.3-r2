{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-swd-2.0.3-r2.apk/ruby3.2-swd-2.0.3-r2/usr/lib/ruby/gems/3.2.0/gems/swd-2.0.3/lib/swd/resource.rb"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 19,
                  "endLine": 29,
                  "snippet": {
                    "text": "    def endpoint\n      SWD.url_builder.build [nil, host, port, path, {\n        :principal => principal,\n        :service => service\n      }.to_query, nil]\n    rescue URI::Error => e\n      raise Exception.new(e.message)\n    end\n",
                    "rendered": {
                      "text": "    def endpoint\n      SWD.url_builder.build [nil, host, port, path, {\n        :principal => principal,\n        :service => service\n      }.to_query, nil]\n    rescue URI::Error => e\n      raise Exception.new(e.message)\n    end\n",
                      "markdown": "`    def endpoint\n      SWD.url_builder.build [nil, host, port, path, {\n        :principal => principal,\n        :service => service\n      }.to_query, nil]\n    rescue URI::Error => e\n      raise Exception.new(e.message)\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-swd-2.0.3-r2.apk/ruby3.2-swd-2.0.3-r2/usr/lib/ruby/gems/3.2.0/specifications/swd-2.0.3.gemspec"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 17,
                  "endLine": 2,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# -*- encoding: utf-8 -*-\n# stub: swd 2.0.3 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"swd\".freeze\n",
                    "rendered": {
                      "text": "# -*- encoding: utf-8 -*-\n# stub: swd 2.0.3 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"swd\".freeze\n",
                      "markdown": "`# -*- encoding: utf-8 -*-\n# stub: swd 2.0.3 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"swd\".freeze\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-swd-2.0.3-r2.apk/ruby3.2-swd-2.0.3-r2/usr/lib/ruby/gems/3.2.0/gems/swd-2.0.3/.gitignore"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 2,
                  "endLine": 14,
                  "snippet": {
                    "text": "\\#*\n.\\#*\n\n## VIM\n*.swp\n\n## PROJECT::GENERAL\ncoverage*\n",
                    "rendered": {
                      "text": "\\#*\n.\\#*\n\n## VIM\n*.swp\n\n## PROJECT::GENERAL\ncoverage*\n",
                      "markdown": "`\\#*\n.\\#*\n\n## VIM\n*.swp\n\n## PROJECT::GENERAL\ncoverage*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-swd-2.0.3-r2.apk/ruby3.2-swd-2.0.3-r2/usr/lib/ruby/gems/3.2.0/gems/swd-2.0.3/.gitignore"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 2,
                  "endLine": 9,
                  "snippet": {
                    "text": "*.tmproj\ntmtags\n\n## EMACS\n*~\n\\#*\n.\\#*\n\n",
                    "rendered": {
                      "text": "*.tmproj\ntmtags\n\n## EMACS\n*~\n\\#*\n.\\#*\n\n",
                      "markdown": "`*.tmproj\ntmtags\n\n## EMACS\n*~\n\\#*\n.\\#*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-swd-2.0.3-r2.apk/ruby3.2-swd-2.0.3-r2/usr/lib/ruby/gems/3.2.0/gems/swd-2.0.3/spec/swd/resource_spec.rb"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 11,
                  "endLine": 142,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      context 'when other error happened' do\n        it 'should raise SWD::HttpError' do\n          mock_json resource.endpoint, 'blank', :status => 500 do\n            expect { res = resource.discover! }.to raise_error SWD::HttpError\n          end\n        end\n      end\n",
                    "rendered": {
                      "text": "      context 'when other error happened' do\n        it 'should raise SWD::HttpError' do\n          mock_json resource.endpoint, 'blank', :status => 500 do\n            expect { res = resource.discover! }.to raise_error SWD::HttpError\n          end\n        end\n      end\n",
                      "markdown": "`      context 'when other error happened' do\n        it 'should raise SWD::HttpError' do\n          mock_json resource.endpoint, 'blank', :status => 500 do\n            expect { res = resource.discover! }.to raise_error SWD::HttpError\n          end\n        end\n      end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-swd-2.0.3-r2.apk/ruby3.2-swd-2.0.3-r2/usr/lib/ruby/gems/3.2.0/gems/swd-2.0.3/spec/swd/resource_spec.rb"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 11,
                  "endLine": 134,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      context 'when not found' do\n        it 'should raise SWD::NotFound' do\n          mock_json resource.endpoint, 'blank', :status => 404 do\n            expect { res = resource.discover! }.to raise_error SWD::NotFound\n          end\n        end\n      end\n",
                    "rendered": {
                      "text": "      context 'when not found' do\n        it 'should raise SWD::NotFound' do\n          mock_json resource.endpoint, 'blank', :status => 404 do\n            expect { res = resource.discover! }.to raise_error SWD::NotFound\n          end\n        end\n      end\n",
                      "markdown": "`      context 'when not found' do\n        it 'should raise SWD::NotFound' do\n          mock_json resource.endpoint, 'blank', :status => 404 do\n            expect { res = resource.discover! }.to raise_error SWD::NotFound\n          end\n        end\n      end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-swd-2.0.3-r2.apk/ruby3.2-swd-2.0.3-r2/usr/lib/ruby/gems/3.2.0/gems/swd-2.0.3/spec/swd/resource_spec.rb"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 11,
                  "endLine": 126,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      context 'when forbidden' do\n        it 'should raise SWD::Forbidden' do\n          mock_json resource.endpoint, 'blank', :status => 403 do\n            expect { res = resource.discover! }.to raise_error SWD::Forbidden\n          end\n        end\n      end\n",
                    "rendered": {
                      "text": "      context 'when forbidden' do\n        it 'should raise SWD::Forbidden' do\n          mock_json resource.endpoint, 'blank', :status => 403 do\n            expect { res = resource.discover! }.to raise_error SWD::Forbidden\n          end\n        end\n      end\n",
                      "markdown": "`      context 'when forbidden' do\n        it 'should raise SWD::Forbidden' do\n          mock_json resource.endpoint, 'blank', :status => 403 do\n            expect { res = resource.discover! }.to raise_error SWD::Forbidden\n          end\n        end\n      end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-swd-2.0.3-r2.apk/ruby3.2-swd-2.0.3-r2/usr/lib/ruby/gems/3.2.0/gems/swd-2.0.3/spec/swd/resource_spec.rb"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 11,
                  "endLine": 118,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      context 'when unauthorized' do\n        it 'should raise SWD::Unauthorized' do\n          mock_json resource.endpoint, 'blank', :status => 401 do\n            expect { res = resource.discover! }.to raise_error SWD::Unauthorized\n          end\n        end\n      end\n",
                    "rendered": {
                      "text": "      context 'when unauthorized' do\n        it 'should raise SWD::Unauthorized' do\n          mock_json resource.endpoint, 'blank', :status => 401 do\n            expect { res = resource.discover! }.to raise_error SWD::Unauthorized\n          end\n        end\n      end\n",
                      "markdown": "`      context 'when unauthorized' do\n        it 'should raise SWD::Unauthorized' do\n          mock_json resource.endpoint, 'blank', :status => 401 do\n            expect { res = resource.discover! }.to raise_error SWD::Unauthorized\n          end\n        end\n      end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-swd-2.0.3-r2.apk/ruby3.2-swd-2.0.3-r2/usr/lib/ruby/gems/3.2.0/gems/swd-2.0.3/spec/swd/resource_spec.rb"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 11,
                  "endLine": 110,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      context 'when bad request' do\n        it 'should raise SWD::BadRequest' do\n          mock_json resource.endpoint, 'blank', :status => 400 do\n            expect { res = resource.discover! }.to raise_error SWD::BadRequest\n          end\n        end\n      end\n",
                    "rendered": {
                      "text": "      context 'when bad request' do\n        it 'should raise SWD::BadRequest' do\n          mock_json resource.endpoint, 'blank', :status => 400 do\n            expect { res = resource.discover! }.to raise_error SWD::BadRequest\n          end\n        end\n      end\n",
                      "markdown": "`      context 'when bad request' do\n        it 'should raise SWD::BadRequest' do\n          mock_json resource.endpoint, 'blank', :status => 400 do\n            expect { res = resource.discover! }.to raise_error SWD::BadRequest\n          end\n        end\n      end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-swd-2.0.3-r2.apk/ruby3.2-swd-2.0.3-r2/usr/lib/ruby/gems/3.2.0/gems/swd-2.0.3/spec/swd/resource_spec.rb"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 9,
                  "endLine": 103,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      context 'when Faraday::Error without response' do\n        it do\n          expect(SWD.http_client).to receive(:get).and_raise(Faraday::Error)\n          expect { res = resource.discover! }.to raise_error SWD::Exception\n        end\n      end\n\n",
                    "rendered": {
                      "text": "      context 'when Faraday::Error without response' do\n        it do\n          expect(SWD.http_client).to receive(:get).and_raise(Faraday::Error)\n          expect { res = resource.discover! }.to raise_error SWD::Exception\n        end\n      end\n\n",
                      "markdown": "`      context 'when Faraday::Error without response' do\n        it do\n          expect(SWD.http_client).to receive(:get).and_raise(Faraday::Error)\n          expect { res = resource.discover! }.to raise_error SWD::Exception\n        end\n      end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-swd-2.0.3-r2.apk/ruby3.2-swd-2.0.3-r2/usr/lib/ruby/gems/3.2.0/gems/swd-2.0.3/spec/swd/resource_spec.rb"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 11,
                  "endLine": 52,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      context 'when expired' do\n        it 'should return SWD::Response' do\n          mock_json resource.endpoint, 'redirect_expired' do\n            expect { res = resource.discover! }.to raise_error SWD::Resource::Expired\n          end\n        end\n      end\n",
                    "rendered": {
                      "text": "      context 'when expired' do\n        it 'should return SWD::Response' do\n          mock_json resource.endpoint, 'redirect_expired' do\n            expect { res = resource.discover! }.to raise_error SWD::Resource::Expired\n          end\n        end\n      end\n",
                      "markdown": "`      context 'when expired' do\n        it 'should return SWD::Response' do\n          mock_json resource.endpoint, 'redirect_expired' do\n            expect { res = resource.discover! }.to raise_error SWD::Resource::Expired\n          end\n        end\n      end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-swd-2.0.3-r2.apk/ruby3.2-swd-2.0.3-r2/usr/lib/ruby/gems/3.2.0/gems/swd-2.0.3/spec/swd/resource_spec.rb"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 5,
                  "endLine": 18,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n  [:principal, :service, :host].each do |key|\n    it \"should require #{key}\" do\n      expect do\n        SWD::Resource.new attributes.merge(key => nil)\n      end.to raise_error AttrRequired::AttrMissing\n    end\n",
                    "rendered": {
                      "text": "\n  [:principal, :service, :host].each do |key|\n    it \"should require #{key}\" do\n      expect do\n        SWD::Resource.new attributes.merge(key => nil)\n      end.to raise_error AttrRequired::AttrMissing\n    end\n",
                      "markdown": "`\n  [:principal, :service, :host].each do |key|\n    it \"should require #{key}\" do\n      expect do\n        SWD::Resource.new attributes.merge(key => nil)\n      end.to raise_error AttrRequired::AttrMissing\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ruby3.2-swd-2.0.3-r2.apk/ruby3.2-swd-2.0.3-r2/usr/lib/ruby/gems/3.2.0/gems/swd-2.0.3/.github/workflows/spec.yml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 18,
                  "endLine": 26,
                  "snippet": {
                    "text": "\n    steps:\n    - uses: actions/checkout@v3\n    - name: Set up Ruby\n      uses: ruby/setup-ruby@v1\n      with:\n        ruby-version: ${{ matrix.ruby-version }}\n        bundler-cache: true\n",
                    "rendered": {
                      "text": "\n    steps:\n    - uses: actions/checkout@v3\n    - name: Set up Ruby\n      uses: ruby/setup-ruby@v1\n      with:\n        ruby-version: ${{ matrix.ruby-version }}\n        bundler-cache: true\n",
                      "markdown": "`\n    steps:\n    - uses: actions/checkout@v3\n    - name: Set up Ruby\n      uses: ruby/setup-ruby@v1\n      with:\n        ruby-version: ${{ matrix.ruby-version }}\n        bundler-cache: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}