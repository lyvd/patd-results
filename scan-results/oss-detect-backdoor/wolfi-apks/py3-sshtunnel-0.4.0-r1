{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1669,
                  "startColumn": 50,
                  "endLine": 1669,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            do_something(server.local_bind_port)\n    \"\"\"\n    # Attach a console handler to the logger or create one if not passed\n    kwargs['logger'] = create_logger(logger=kwargs.get('logger', None),\n                                     loglevel=kwargs.pop('debug_level', None))\n\n    ssh_address_or_host = kwargs.pop('ssh_address_or_host', None)\n",
                    "rendered": {
                      "text": "            do_something(server.local_bind_port)\n    \"\"\"\n    # Attach a console handler to the logger or create one if not passed\n    kwargs['logger'] = create_logger(logger=kwargs.get('logger', None),\n                                     loglevel=kwargs.pop('debug_level', None))\n\n    ssh_address_or_host = kwargs.pop('ssh_address_or_host', None)\n",
                      "markdown": "`            do_something(server.local_bind_port)\n    \"\"\"\n    # Attach a console handler to the logger or create one if not passed\n    kwargs['logger'] = create_logger(logger=kwargs.get('logger', None),\n                                     loglevel=kwargs.pop('debug_level', None))\n\n    ssh_address_or_host = kwargs.pop('ssh_address_or_host', None)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1028,
                  "startColumn": 43,
                  "endLine": 1028,
                  "endColumn": 48,
                  "snippet": {
                    "text": "            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n                                      proxycommand else None)\n            if compression is None:\n                compression = hostname_info.get('compression', '')\n                compression = True if compression.upper() == 'YES' else False\n        except IOError:\n            if logger:\n",
                    "rendered": {
                      "text": "            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n                                      proxycommand else None)\n            if compression is None:\n                compression = hostname_info.get('compression', '')\n                compression = True if compression.upper() == 'YES' else False\n        except IOError:\n            if logger:\n",
                      "markdown": "`            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n                                      proxycommand else None)\n            if compression is None:\n                compression = hostname_info.get('compression', '')\n                compression = True if compression.upper() == 'YES' else False\n        except IOError:\n            if logger:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1024,
                  "startColumn": 40,
                  "endLine": 1024,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n                                      proxycommand else None)\n            if compression is None:\n",
                    "rendered": {
                      "text": "            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n                                      proxycommand else None)\n            if compression is None:\n",
                      "markdown": "`            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n                                      proxycommand else None)\n            if compression is None:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1022,
                  "startColumn": 48,
                  "endLine": 1022,
                  "endColumn": 53,
                  "snippet": {
                    "text": "                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n",
                    "rendered": {
                      "text": "                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n",
                      "markdown": "`                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1021,
                  "startColumn": 36,
                  "endLine": 1021,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n",
                    "rendered": {
                      "text": "                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n",
                      "markdown": "`                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1019,
                  "startColumn": 29,
                  "endLine": 1019,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            )\n            ssh_pkey = (\n                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n",
                    "rendered": {
                      "text": "            )\n            ssh_pkey = (\n                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n",
                      "markdown": "`            )\n            ssh_pkey = (\n                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1015,
                  "startColumn": 29,
                  "endLine": 1015,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            # last resort: use the 'login name' of the user\n            ssh_username = (\n                ssh_username or\n                hostname_info.get('user')\n            )\n            ssh_pkey = (\n                ssh_pkey or\n",
                    "rendered": {
                      "text": "            # last resort: use the 'login name' of the user\n            ssh_username = (\n                ssh_username or\n                hostname_info.get('user')\n            )\n            ssh_pkey = (\n                ssh_pkey or\n",
                      "markdown": "`            # last resort: use the 'login name' of the user\n            ssh_username = (\n                ssh_username or\n                hostname_info.get('user')\n            )\n            ssh_pkey = (\n                ssh_pkey or\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 804,
                  "startColumn": 66,
                  "endLine": 804,
                  "endColumn": 71,
                  "snippet": {
                    "text": "            connect_to = ('127.0.0.1', _srv.local_port) \\\n                if _srv.local_host == '0.0.0.0' else _srv.local_address\n            s.connect(connect_to)\n            self.tunnel_is_up[_srv.local_address] = _srv.tunnel_ok.get(\n                timeout=TUNNEL_TIMEOUT * 1.1\n            )\n            self.logger.debug(\n",
                    "rendered": {
                      "text": "            connect_to = ('127.0.0.1', _srv.local_port) \\\n                if _srv.local_host == '0.0.0.0' else _srv.local_address\n            s.connect(connect_to)\n            self.tunnel_is_up[_srv.local_address] = _srv.tunnel_ok.get(\n                timeout=TUNNEL_TIMEOUT * 1.1\n            )\n            self.logger.debug(\n",
                      "markdown": "`            connect_to = ('127.0.0.1', _srv.local_port) \\\n                if _srv.local_host == '0.0.0.0' else _srv.local_address\n            s.connect(connect_to)\n            self.tunnel_is_up[_srv.local_address] = _srv.tunnel_ok.get(\n                timeout=TUNNEL_TIMEOUT * 1.1\n            )\n            self.logger.debug(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 772,
                  "startColumn": 32,
                  "endLine": 772,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            return False\n\n        self.check_tunnels()\n        return self.tunnel_is_up.get(target, True)\n\n    def check_tunnels(self):\n        \"\"\"\n",
                    "rendered": {
                      "text": "            return False\n\n        self.check_tunnels()\n        return self.tunnel_is_up.get(target, True)\n\n    def check_tunnels(self):\n        \"\"\"\n",
                      "markdown": "`            return False\n\n        self.check_tunnels()\n        return self.tunnel_is_up.get(target, True)\n\n    def check_tunnels(self):\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1893,
                  "startColumn": 24,
                  "endLine": 1893,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        -L (local_bind_address), default to 0.0.0.0:22\n        -k (ssh_host_key)\n        -K (private_key_file), may be gathered from SSH_CONFIG_FILE\n        -S (private_key_password)\n        -t (threaded), allow concurrent connections over tunnels\n        -v (verbose), up to 3 (-vvv) to raise loglevel from ERROR to DEBUG\n        -V (version)\n",
                    "rendered": {
                      "text": "        -L (local_bind_address), default to 0.0.0.0:22\n        -k (ssh_host_key)\n        -K (private_key_file), may be gathered from SSH_CONFIG_FILE\n        -S (private_key_password)\n        -t (threaded), allow concurrent connections over tunnels\n        -v (verbose), up to 3 (-vvv) to raise loglevel from ERROR to DEBUG\n        -V (version)\n",
                      "markdown": "`        -L (local_bind_address), default to 0.0.0.0:22\n        -k (ssh_host_key)\n        -K (private_key_file), may be gathered from SSH_CONFIG_FILE\n        -S (private_key_password)\n        -t (threaded), allow concurrent connections over tunnels\n        -v (verbose), up to 3 (-vvv) to raise loglevel from ERROR to DEBUG\n        -V (version)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1893,
                  "startColumn": 12,
                  "endLine": 1893,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        -L (local_bind_address), default to 0.0.0.0:22\n        -k (ssh_host_key)\n        -K (private_key_file), may be gathered from SSH_CONFIG_FILE\n        -S (private_key_password)\n        -t (threaded), allow concurrent connections over tunnels\n        -v (verbose), up to 3 (-vvv) to raise loglevel from ERROR to DEBUG\n        -V (version)\n",
                    "rendered": {
                      "text": "        -L (local_bind_address), default to 0.0.0.0:22\n        -k (ssh_host_key)\n        -K (private_key_file), may be gathered from SSH_CONFIG_FILE\n        -S (private_key_password)\n        -t (threaded), allow concurrent connections over tunnels\n        -v (verbose), up to 3 (-vvv) to raise loglevel from ERROR to DEBUG\n        -V (version)\n",
                      "markdown": "`        -L (local_bind_address), default to 0.0.0.0:22\n        -k (ssh_host_key)\n        -K (private_key_file), may be gathered from SSH_CONFIG_FILE\n        -S (private_key_password)\n        -t (threaded), allow concurrent connections over tunnels\n        -v (verbose), up to 3 (-vvv) to raise loglevel from ERROR to DEBUG\n        -V (version)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1892,
                  "startColumn": 12,
                  "endLine": 1892,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        -P (password)\n        -L (local_bind_address), default to 0.0.0.0:22\n        -k (ssh_host_key)\n        -K (private_key_file), may be gathered from SSH_CONFIG_FILE\n        -S (private_key_password)\n        -t (threaded), allow concurrent connections over tunnels\n        -v (verbose), up to 3 (-vvv) to raise loglevel from ERROR to DEBUG\n",
                    "rendered": {
                      "text": "        -P (password)\n        -L (local_bind_address), default to 0.0.0.0:22\n        -k (ssh_host_key)\n        -K (private_key_file), may be gathered from SSH_CONFIG_FILE\n        -S (private_key_password)\n        -t (threaded), allow concurrent connections over tunnels\n        -v (verbose), up to 3 (-vvv) to raise loglevel from ERROR to DEBUG\n",
                      "markdown": "`        -P (password)\n        -L (local_bind_address), default to 0.0.0.0:22\n        -k (ssh_host_key)\n        -K (private_key_file), may be gathered from SSH_CONFIG_FILE\n        -S (private_key_password)\n        -t (threaded), allow concurrent connections over tunnels\n        -v (verbose), up to 3 (-vvv) to raise loglevel from ERROR to DEBUG\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1889,
                  "startColumn": 12,
                  "endLine": 1889,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        Optional:\n        -U (username) we may gather it from SSH_CONFIG_FILE or current username\n        -p (server_port), defaults to 22\n        -P (password)\n        -L (local_bind_address), default to 0.0.0.0:22\n        -k (ssh_host_key)\n        -K (private_key_file), may be gathered from SSH_CONFIG_FILE\n",
                    "rendered": {
                      "text": "        Optional:\n        -U (username) we may gather it from SSH_CONFIG_FILE or current username\n        -p (server_port), defaults to 22\n        -P (password)\n        -L (local_bind_address), default to 0.0.0.0:22\n        -k (ssh_host_key)\n        -K (private_key_file), may be gathered from SSH_CONFIG_FILE\n",
                      "markdown": "`        Optional:\n        -U (username) we may gather it from SSH_CONFIG_FILE or current username\n        -p (server_port), defaults to 22\n        -P (password)\n        -L (local_bind_address), default to 0.0.0.0:22\n        -k (ssh_host_key)\n        -K (private_key_file), may be gathered from SSH_CONFIG_FILE\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1815,
                  "startColumn": 40,
                  "endLine": 1815,
                  "endColumn": 48,
                  "snippet": {
                    "text": "        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n        help='RSA/DSS/ECDSA private key password'\n    )\n\n    parser.add_argument(\n",
                    "rendered": {
                      "text": "        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n        help='RSA/DSS/ECDSA private key password'\n    )\n\n    parser.add_argument(\n",
                      "markdown": "`        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n        help='RSA/DSS/ECDSA private key password'\n    )\n\n    parser.add_argument(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1813,
                  "startColumn": 21,
                  "endLine": 1813,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n        help='RSA/DSS/ECDSA private key password'\n    )\n",
                    "rendered": {
                      "text": "    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n        help='RSA/DSS/ECDSA private key password'\n    )\n",
                      "markdown": "`    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n        help='RSA/DSS/ECDSA private key password'\n    )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1812,
                  "startColumn": 30,
                  "endLine": 1812,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n        help='RSA/DSS/ECDSA private key password'\n",
                    "rendered": {
                      "text": "\n    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n        help='RSA/DSS/ECDSA private key password'\n",
                      "markdown": "`\n    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n        help='RSA/DSS/ECDSA private key password'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1812,
                  "startColumn": 18,
                  "endLine": 1812,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n        help='RSA/DSS/ECDSA private key password'\n",
                    "rendered": {
                      "text": "\n    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n        help='RSA/DSS/ECDSA private key password'\n",
                      "markdown": "`\n    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n        help='RSA/DSS/ECDSA private key password'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1811,
                  "startColumn": 29,
                  "endLine": 1811,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    )\n\n    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n",
                    "rendered": {
                      "text": "    )\n\n    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n",
                      "markdown": "`    )\n\n    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1811,
                  "startColumn": 17,
                  "endLine": 1811,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    )\n\n    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n",
                    "rendered": {
                      "text": "    )\n\n    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n",
                      "markdown": "`    )\n\n    parser.add_argument(\n        '-S', '--private_key_password',\n        dest='ssh_private_key_password',\n        metavar='KEY_PASSWORD',\n        type=str,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1804,
                  "startColumn": 18,
                  "endLine": 1804,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n    parser.add_argument(\n        '-K', '--private_key_file',\n        dest='ssh_private_key',\n        metavar='KEY_FILE',\n        type=str,\n        help='RSA/DSS/ECDSA private key file'\n",
                    "rendered": {
                      "text": "\n    parser.add_argument(\n        '-K', '--private_key_file',\n        dest='ssh_private_key',\n        metavar='KEY_FILE',\n        type=str,\n        help='RSA/DSS/ECDSA private key file'\n",
                      "markdown": "`\n    parser.add_argument(\n        '-K', '--private_key_file',\n        dest='ssh_private_key',\n        metavar='KEY_FILE',\n        type=str,\n        help='RSA/DSS/ECDSA private key file'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1803,
                  "startColumn": 17,
                  "endLine": 1803,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    )\n\n    parser.add_argument(\n        '-K', '--private_key_file',\n        dest='ssh_private_key',\n        metavar='KEY_FILE',\n        type=str,\n",
                    "rendered": {
                      "text": "    )\n\n    parser.add_argument(\n        '-K', '--private_key_file',\n        dest='ssh_private_key',\n        metavar='KEY_FILE',\n        type=str,\n",
                      "markdown": "`    )\n\n    parser.add_argument(\n        '-K', '--private_key_file',\n        dest='ssh_private_key',\n        metavar='KEY_FILE',\n        type=str,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1761,
                  "startColumn": 33,
                  "endLine": 1761,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        '-P', '--password',\n        type=str,\n        dest='ssh_password',\n        help='SSH server account password'\n    )\n\n    parser.add_argument(\n",
                    "rendered": {
                      "text": "        '-P', '--password',\n        type=str,\n        dest='ssh_password',\n        help='SSH server account password'\n    )\n\n    parser.add_argument(\n",
                      "markdown": "`        '-P', '--password',\n        type=str,\n        dest='ssh_password',\n        help='SSH server account password'\n    )\n\n    parser.add_argument(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1760,
                  "startColumn": 18,
                  "endLine": 1760,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    parser.add_argument(\n        '-P', '--password',\n        type=str,\n        dest='ssh_password',\n        help='SSH server account password'\n    )\n\n",
                    "rendered": {
                      "text": "    parser.add_argument(\n        '-P', '--password',\n        type=str,\n        dest='ssh_password',\n        help='SSH server account password'\n    )\n\n",
                      "markdown": "`    parser.add_argument(\n        '-P', '--password',\n        type=str,\n        dest='ssh_password',\n        help='SSH server account password'\n    )\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1758,
                  "startColumn": 17,
                  "endLine": 1758,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    )\n\n    parser.add_argument(\n        '-P', '--password',\n        type=str,\n        dest='ssh_password',\n        help='SSH server account password'\n",
                    "rendered": {
                      "text": "    )\n\n    parser.add_argument(\n        '-P', '--password',\n        type=str,\n        dest='ssh_password',\n        help='SSH server account password'\n",
                      "markdown": "`    )\n\n    parser.add_argument(\n        '-P', '--password',\n        type=str,\n        dest='ssh_password',\n        help='SSH server account password'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1658,
                  "startColumn": 42,
                  "endLine": 1658,
                  "endColumn": 50,
                  "snippet": {
                    "text": "        with open_tunnel(SERVER,\n                         ssh_username=SSH_USER,\n                         ssh_port=22,\n                         ssh_password=SSH_PASSWORD,\n                         remote_bind_address=(REMOTE_HOST, REMOTE_PORT),\n                         local_bind_address=('', LOCAL_PORT)) as server:\n            def do_something(port):\n",
                    "rendered": {
                      "text": "        with open_tunnel(SERVER,\n                         ssh_username=SSH_USER,\n                         ssh_port=22,\n                         ssh_password=SSH_PASSWORD,\n                         remote_bind_address=(REMOTE_HOST, REMOTE_PORT),\n                         local_bind_address=('', LOCAL_PORT)) as server:\n            def do_something(port):\n",
                      "markdown": "`        with open_tunnel(SERVER,\n                         ssh_username=SSH_USER,\n                         ssh_port=22,\n                         ssh_password=SSH_PASSWORD,\n                         remote_bind_address=(REMOTE_HOST, REMOTE_PORT),\n                         local_bind_address=('', LOCAL_PORT)) as server:\n            def do_something(port):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1658,
                  "startColumn": 29,
                  "endLine": 1658,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        with open_tunnel(SERVER,\n                         ssh_username=SSH_USER,\n                         ssh_port=22,\n                         ssh_password=SSH_PASSWORD,\n                         remote_bind_address=(REMOTE_HOST, REMOTE_PORT),\n                         local_bind_address=('', LOCAL_PORT)) as server:\n            def do_something(port):\n",
                    "rendered": {
                      "text": "        with open_tunnel(SERVER,\n                         ssh_username=SSH_USER,\n                         ssh_port=22,\n                         ssh_password=SSH_PASSWORD,\n                         remote_bind_address=(REMOTE_HOST, REMOTE_PORT),\n                         local_bind_address=('', LOCAL_PORT)) as server:\n            def do_something(port):\n",
                      "markdown": "`        with open_tunnel(SERVER,\n                         ssh_username=SSH_USER,\n                         ssh_port=22,\n                         ssh_password=SSH_PASSWORD,\n                         remote_bind_address=(REMOTE_HOST, REMOTE_PORT),\n                         local_bind_address=('', LOCAL_PORT)) as server:\n            def do_something(port):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1591,
                  "startColumn": 37,
                  "endLine": 1591,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n            '' if self.is_alive else 'not ',\n            'disabled' if not self.set_keepalive else\n            'every {0} sec'.format(self.set_keepalive),\n",
                    "rendered": {
                      "text": "            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n            '' if self.is_alive else 'not ',\n            'disabled' if not self.set_keepalive else\n            'every {0} sec'.format(self.set_keepalive),\n",
                      "markdown": "`            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n            '' if self.is_alive else 'not ',\n            'disabled' if not self.set_keepalive else\n            'every {0} sec'.format(self.set_keepalive),\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1591,
                  "startColumn": 16,
                  "endLine": 1591,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n            '' if self.is_alive else 'not ',\n            'disabled' if not self.set_keepalive else\n            'every {0} sec'.format(self.set_keepalive),\n",
                    "rendered": {
                      "text": "            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n            '' if self.is_alive else 'not ',\n            'disabled' if not self.set_keepalive else\n            'every {0} sec'.format(self.set_keepalive),\n",
                      "markdown": "`            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n            '' if self.is_alive else 'not ',\n            'disabled' if not self.set_keepalive else\n            'every {0} sec'.format(self.set_keepalive),\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1589,
                  "startColumn": 16,
                  "endLine": 1589,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n            '' if self.is_alive else 'not ',\n",
                    "rendered": {
                      "text": "            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n            '' if self.is_alive else 'not ',\n",
                      "markdown": "`            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n            '' if self.is_alive else 'not ',\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1588,
                  "startColumn": 41,
                  "endLine": 1588,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            self.__class__,\n            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n",
                    "rendered": {
                      "text": "            self.__class__,\n            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n",
                      "markdown": "`            self.__class__,\n            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1588,
                  "startColumn": 16,
                  "endLine": 1588,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            self.__class__,\n            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n",
                    "rendered": {
                      "text": "            self.__class__,\n            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n",
                      "markdown": "`            self.__class__,\n            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n            self.ssh_host_key if self.ssh_host_key else 'not checked',\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1587,
                  "startColumn": 16,
                  "endLine": 1587,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        return (template.format(\n            self.__class__,\n            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n",
                    "rendered": {
                      "text": "        return (template.format(\n            self.__class__,\n            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n",
                      "markdown": "`        return (template.format(\n            self.__class__,\n            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n            credentials,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1586,
                  "startColumn": 16,
                  "endLine": 1586,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                                    'remote binds: {14}'])\n        return (template.format(\n            self.__class__,\n            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n",
                    "rendered": {
                      "text": "                                    'remote binds: {14}'])\n        return (template.format(\n            self.__class__,\n            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n",
                      "markdown": "`                                    'remote binds: {14}'])\n        return (template.format(\n            self.__class__,\n            self.ssh_host,\n            self.ssh_port,\n            self.ssh_proxy.cmd[1] if self.ssh_proxy else 'no',\n            self.ssh_username,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1567,
                  "startColumn": 23,
                  "endLine": 1567,
                  "endColumn": 27,
                  "snippet": {
                    "text": "            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n        }\n        _remove_none_values(credentials)\n        template = os.linesep.join(['{0} object',\n",
                    "rendered": {
                      "text": "            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n        }\n        _remove_none_values(credentials)\n        template = os.linesep.join(['{0} object',\n",
                      "markdown": "`            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n        }\n        _remove_none_values(credentials)\n        template = os.linesep.join(['{0} object',\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1566,
                  "startColumn": 37,
                  "endLine": 1566,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        credentials = {\n            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n        }\n        _remove_none_values(credentials)\n",
                    "rendered": {
                      "text": "        credentials = {\n            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n        }\n        _remove_none_values(credentials)\n",
                      "markdown": "`        credentials = {\n            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n        }\n        _remove_none_values(credentials)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1564,
                  "startColumn": 33,
                  "endLine": 1564,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    def __str__(self):\n        credentials = {\n            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n",
                    "rendered": {
                      "text": "\n    def __str__(self):\n        credentials = {\n            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n",
                      "markdown": "`\n    def __str__(self):\n        credentials = {\n            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1564,
                  "startColumn": 28,
                  "endLine": 1564,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n    def __str__(self):\n        credentials = {\n            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n",
                    "rendered": {
                      "text": "\n    def __str__(self):\n        credentials = {\n            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n",
                      "markdown": "`\n    def __str__(self):\n        credentials = {\n            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1564,
                  "startColumn": 13,
                  "endLine": 1564,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n    def __str__(self):\n        credentials = {\n            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n",
                    "rendered": {
                      "text": "\n    def __str__(self):\n        credentials = {\n            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n",
                      "markdown": "`\n    def __str__(self):\n        credentials = {\n            'password': self.ssh_password,\n            'pkeys': [(key.get_name(), hexlify(key.get_fingerprint()))\n                      for key in self.ssh_pkeys]\n            if any(self.ssh_pkeys) else None\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1420,
                  "startColumn": 58,
                  "endLine": 1420,
                  "endColumn": 66,
                  "snippet": {
                    "text": "                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n                    return\n            except paramiko.AuthenticationException:\n",
                    "rendered": {
                      "text": "                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n                    return\n            except paramiko.AuthenticationException:\n",
                      "markdown": "`                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n                    return\n            except paramiko.AuthenticationException:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1420,
                  "startColumn": 53,
                  "endLine": 1420,
                  "endColumn": 57,
                  "snippet": {
                    "text": "                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n                    return\n            except paramiko.AuthenticationException:\n",
                    "rendered": {
                      "text": "                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n                    return\n            except paramiko.AuthenticationException:\n",
                      "markdown": "`                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n                    return\n            except paramiko.AuthenticationException:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1420,
                  "startColumn": 40,
                  "endLine": 1420,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n                    return\n            except paramiko.AuthenticationException:\n",
                    "rendered": {
                      "text": "                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n                    return\n            except paramiko.AuthenticationException:\n",
                      "markdown": "`                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n                    return\n            except paramiko.AuthenticationException:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1419,
                  "startColumn": 53,
                  "endLine": 1419,
                  "endColumn": 57,
                  "snippet": {
                    "text": "            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n                    return\n",
                    "rendered": {
                      "text": "            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n                    return\n",
                      "markdown": "`            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n                    return\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1418,
                  "startColumn": 52,
                  "endLine": 1418,
                  "endColumn": 56,
                  "snippet": {
                    "text": "                              .format('*' * len(self.ssh_password)))\n            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n",
                    "rendered": {
                      "text": "                              .format('*' * len(self.ssh_password)))\n            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n",
                      "markdown": "`                              .format('*' * len(self.ssh_password)))\n            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        password=self.ssh_password)\n                if self._transport.is_alive:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1415,
                  "startColumn": 57,
                  "endLine": 1415,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n",
                    "rendered": {
                      "text": "\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n",
                      "markdown": "`\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1415,
                  "startColumn": 52,
                  "endLine": 1415,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n",
                    "rendered": {
                      "text": "\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n",
                      "markdown": "`\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1414,
                  "startColumn": 53,
                  "endLine": 1414,
                  "endColumn": 61,
                  "snippet": {
                    "text": "                self._stop_transport()\n\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n                self._transport = self._get_transport()\n",
                    "rendered": {
                      "text": "                self._stop_transport()\n\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n                self._transport = self._get_transport()\n",
                      "markdown": "`                self._stop_transport()\n\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n                self._transport = self._get_transport()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1413,
                  "startColumn": 20,
                  "endLine": 1413,
                  "endColumn": 28,
                  "snippet": {
                    "text": "                self.logger.debug('Authentication error')\n                self._stop_transport()\n\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n",
                    "rendered": {
                      "text": "                self.logger.debug('Authentication error')\n                self._stop_transport()\n\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n",
                      "markdown": "`                self.logger.debug('Authentication error')\n                self._stop_transport()\n\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1413,
                  "startColumn": 15,
                  "endLine": 1413,
                  "endColumn": 19,
                  "snippet": {
                    "text": "                self.logger.debug('Authentication error')\n                self._stop_transport()\n\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n",
                    "rendered": {
                      "text": "                self.logger.debug('Authentication error')\n                self._stop_transport()\n\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n",
                      "markdown": "`                self.logger.debug('Authentication error')\n                self._stop_transport()\n\n        if self.ssh_password:  # avoid conflict using both pass and pkey\n            self.logger.debug('Trying to log in with password: {0}'\n                              .format('*' * len(self.ssh_password)))\n            try:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1405,
                  "startColumn": 53,
                  "endLine": 1405,
                  "endColumn": 57,
                  "snippet": {
                    "text": "            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        pkey=key)\n                if self._transport.is_alive:\n                    return\n",
                    "rendered": {
                      "text": "            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        pkey=key)\n                if self._transport.is_alive:\n                    return\n",
                      "markdown": "`            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        pkey=key)\n                if self._transport.is_alive:\n                    return\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1404,
                  "startColumn": 52,
                  "endLine": 1404,
                  "endColumn": 56,
                  "snippet": {
                    "text": "                              .format(hexlify(key.get_fingerprint())))\n            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        pkey=key)\n                if self._transport.is_alive:\n",
                    "rendered": {
                      "text": "                              .format(hexlify(key.get_fingerprint())))\n            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        pkey=key)\n                if self._transport.is_alive:\n",
                      "markdown": "`                              .format(hexlify(key.get_fingerprint())))\n            try:\n                self._transport = self._get_transport()\n                self._transport.connect(hostkey=self.ssh_host_key,\n                                        username=self.ssh_username,\n                                        pkey=key)\n                if self._transport.is_alive:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1399,
                  "startColumn": 23,
                  "endLine": 1399,
                  "endColumn": 27,
                  "snippet": {
                    "text": "         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n        \"\"\"\n        for key in self.ssh_pkeys:\n            self.logger.debug('Trying to log in with key: {0}'\n                              .format(hexlify(key.get_fingerprint())))\n            try:\n",
                    "rendered": {
                      "text": "         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n        \"\"\"\n        for key in self.ssh_pkeys:\n            self.logger.debug('Trying to log in with key: {0}'\n                              .format(hexlify(key.get_fingerprint())))\n            try:\n",
                      "markdown": "`         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n        \"\"\"\n        for key in self.ssh_pkeys:\n            self.logger.debug('Trying to log in with key: {0}'\n                              .format(hexlify(key.get_fingerprint())))\n            try:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1397,
                  "startColumn": 47,
                  "endLine": 1397,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        Open connection to SSH gateway\n         - First try with all keys loaded from an SSH agent (if allowed)\n         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n        \"\"\"\n        for key in self.ssh_pkeys:\n            self.logger.debug('Trying to log in with key: {0}'\n",
                    "rendered": {
                      "text": "        Open connection to SSH gateway\n         - First try with all keys loaded from an SSH agent (if allowed)\n         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n        \"\"\"\n        for key in self.ssh_pkeys:\n            self.logger.debug('Trying to log in with key: {0}'\n",
                      "markdown": "`        Open connection to SSH gateway\n         - First try with all keys loaded from an SSH agent (if allowed)\n         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n        \"\"\"\n        for key in self.ssh_pkeys:\n            self.logger.debug('Trying to log in with key: {0}'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1396,
                  "startColumn": 58,
                  "endLine": 1396,
                  "endColumn": 62,
                  "snippet": {
                    "text": "        \"\"\"\n        Open connection to SSH gateway\n         - First try with all keys loaded from an SSH agent (if allowed)\n         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n        \"\"\"\n        for key in self.ssh_pkeys:\n",
                    "rendered": {
                      "text": "        \"\"\"\n        Open connection to SSH gateway\n         - First try with all keys loaded from an SSH agent (if allowed)\n         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n        \"\"\"\n        for key in self.ssh_pkeys:\n",
                      "markdown": "`        \"\"\"\n        Open connection to SSH gateway\n         - First try with all keys loaded from an SSH agent (if allowed)\n         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n        \"\"\"\n        for key in self.ssh_pkeys:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1320,
                  "startColumn": 53,
                  "endLine": 1320,
                  "endColumn": 61,
                  "snippet": {
                    "text": "            except paramiko.SSHException:\n                if logger:\n                    logger.debug('Private key file ({0}) could not be loaded '\n                                 'as type {1} or bad password'\n                                 .format(pkey_file, pkey_class))\n        return ssh_pkey\n\n",
                    "rendered": {
                      "text": "            except paramiko.SSHException:\n                if logger:\n                    logger.debug('Private key file ({0}) could not be loaded '\n                                 'as type {1} or bad password'\n                                 .format(pkey_file, pkey_class))\n        return ssh_pkey\n\n",
                      "markdown": "`            except paramiko.SSHException:\n                if logger:\n                    logger.debug('Private key file ({0}) could not be loaded '\n                                 'as type {1} or bad password'\n                                 .format(pkey_file, pkey_class))\n        return ssh_pkey\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1317,
                  "startColumn": 27,
                  "endLine": 1317,
                  "endColumn": 31,
                  "snippet": {
                    "text": "                    logger.error('Password is required for key {0}'\n                                 .format(pkey_file))\n                break\n            except paramiko.SSHException:\n                if logger:\n                    logger.debug('Private key file ({0}) could not be loaded '\n                                 'as type {1} or bad password'\n",
                    "rendered": {
                      "text": "                    logger.error('Password is required for key {0}'\n                                 .format(pkey_file))\n                break\n            except paramiko.SSHException:\n                if logger:\n                    logger.debug('Private key file ({0}) could not be loaded '\n                                 'as type {1} or bad password'\n",
                      "markdown": "`                    logger.error('Password is required for key {0}'\n                                 .format(pkey_file))\n                break\n            except paramiko.SSHException:\n                if logger:\n                    logger.debug('Private key file ({0}) could not be loaded '\n                                 'as type {1} or bad password'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1314,
                  "startColumn": 34,
                  "endLine": 1314,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                break\n            except paramiko.PasswordRequiredException:\n                if logger:\n                    logger.error('Password is required for key {0}'\n                                 .format(pkey_file))\n                break\n            except paramiko.SSHException:\n",
                    "rendered": {
                      "text": "                break\n            except paramiko.PasswordRequiredException:\n                if logger:\n                    logger.error('Password is required for key {0}'\n                                 .format(pkey_file))\n                break\n            except paramiko.SSHException:\n",
                      "markdown": "`                break\n            except paramiko.PasswordRequiredException:\n                if logger:\n                    logger.error('Password is required for key {0}'\n                                 .format(pkey_file))\n                break\n            except paramiko.SSHException:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1312,
                  "startColumn": 28,
                  "endLine": 1312,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                    logger.debug('Private key file ({0}, {1}) successfully '\n                                 'loaded'.format(pkey_file, pkey_class))\n                break\n            except paramiko.PasswordRequiredException:\n                if logger:\n                    logger.error('Password is required for key {0}'\n                                 .format(pkey_file))\n",
                    "rendered": {
                      "text": "                    logger.debug('Private key file ({0}, {1}) successfully '\n                                 'loaded'.format(pkey_file, pkey_class))\n                break\n            except paramiko.PasswordRequiredException:\n                if logger:\n                    logger.error('Password is required for key {0}'\n                                 .format(pkey_file))\n",
                      "markdown": "`                    logger.debug('Private key file ({0}, {1}) successfully '\n                                 'loaded'.format(pkey_file, pkey_class))\n                break\n            except paramiko.PasswordRequiredException:\n                if logger:\n                    logger.error('Password is required for key {0}'\n                                 .format(pkey_file))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1306,
                  "startColumn": 34,
                  "endLine": 1306,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            try:\n                ssh_pkey = pkey_class.from_private_key_file(\n                    pkey_file,\n                    password=pkey_password\n                )\n                if logger:\n                    logger.debug('Private key file ({0}, {1}) successfully '\n",
                    "rendered": {
                      "text": "            try:\n                ssh_pkey = pkey_class.from_private_key_file(\n                    pkey_file,\n                    password=pkey_password\n                )\n                if logger:\n                    logger.debug('Private key file ({0}, {1}) successfully '\n",
                      "markdown": "`            try:\n                ssh_pkey = pkey_class.from_private_key_file(\n                    pkey_file,\n                    password=pkey_password\n                )\n                if logger:\n                    logger.debug('Private key file ({0}, {1}) successfully '\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1306,
                  "startColumn": 20,
                  "endLine": 1306,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            try:\n                ssh_pkey = pkey_class.from_private_key_file(\n                    pkey_file,\n                    password=pkey_password\n                )\n                if logger:\n                    logger.debug('Private key file ({0}, {1}) successfully '\n",
                    "rendered": {
                      "text": "            try:\n                ssh_pkey = pkey_class.from_private_key_file(\n                    pkey_file,\n                    password=pkey_password\n                )\n                if logger:\n                    logger.debug('Private key file ({0}, {1}) successfully '\n",
                      "markdown": "`            try:\n                ssh_pkey = pkey_class.from_private_key_file(\n                    pkey_file,\n                    password=pkey_password\n                )\n                if logger:\n                    logger.debug('Private key file ({0}, {1}) successfully '\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1304,
                  "startColumn": 43,
                  "endLine": 1304,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            key_types += (paramiko.Ed25519Key, )\n        for pkey_class in (key_type,) if key_type else key_types:\n            try:\n                ssh_pkey = pkey_class.from_private_key_file(\n                    pkey_file,\n                    password=pkey_password\n                )\n",
                    "rendered": {
                      "text": "            key_types += (paramiko.Ed25519Key, )\n        for pkey_class in (key_type,) if key_type else key_types:\n            try:\n                ssh_pkey = pkey_class.from_private_key_file(\n                    pkey_file,\n                    password=pkey_password\n                )\n",
                      "markdown": "`            key_types += (paramiko.Ed25519Key, )\n        for pkey_class in (key_type,) if key_type else key_types:\n            try:\n                ssh_pkey = pkey_class.from_private_key_file(\n                    pkey_file,\n                    password=pkey_password\n                )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1292,
                  "startColumn": 16,
                  "endLine": 1292,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                File containing a private key (RSA, DSS or ECDSA)\n        Keyword Arguments:\n            pkey_password (Optional[str]):\n                Password to decrypt the private key\n            logger (Optional[logging.Logger])\n        Return:\n            paramiko.Pkey\n",
                    "rendered": {
                      "text": "                File containing a private key (RSA, DSS or ECDSA)\n        Keyword Arguments:\n            pkey_password (Optional[str]):\n                Password to decrypt the private key\n            logger (Optional[logging.Logger])\n        Return:\n            paramiko.Pkey\n",
                      "markdown": "`                File containing a private key (RSA, DSS or ECDSA)\n        Keyword Arguments:\n            pkey_password (Optional[str]):\n                Password to decrypt the private key\n            logger (Optional[logging.Logger])\n        Return:\n            paramiko.Pkey\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1291,
                  "startColumn": 17,
                  "endLine": 1291,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            pkey_file (str):\n                File containing a private key (RSA, DSS or ECDSA)\n        Keyword Arguments:\n            pkey_password (Optional[str]):\n                Password to decrypt the private key\n            logger (Optional[logging.Logger])\n        Return:\n",
                    "rendered": {
                      "text": "            pkey_file (str):\n                File containing a private key (RSA, DSS or ECDSA)\n        Keyword Arguments:\n            pkey_password (Optional[str]):\n                Password to decrypt the private key\n            logger (Optional[logging.Logger])\n        Return:\n",
                      "markdown": "`            pkey_file (str):\n                File containing a private key (RSA, DSS or ECDSA)\n        Keyword Arguments:\n            pkey_password (Optional[str]):\n                Password to decrypt the private key\n            logger (Optional[logging.Logger])\n        Return:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1285,
                  "startColumn": 70,
                  "endLine": 1285,
                  "endColumn": 78,
                  "snippet": {
                    "text": "                              key_type=None,\n                              logger=None):\n        \"\"\"\n        Get SSH Public key from a private key file, given an optional password\n\n        Arguments:\n            pkey_file (str):\n",
                    "rendered": {
                      "text": "                              key_type=None,\n                              logger=None):\n        \"\"\"\n        Get SSH Public key from a private key file, given an optional password\n\n        Arguments:\n            pkey_file (str):\n",
                      "markdown": "`                              key_type=None,\n                              logger=None):\n        \"\"\"\n        Get SSH Public key from a private key file, given an optional password\n\n        Arguments:\n            pkey_file (str):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1281,
                  "startColumn": 35,
                  "endLine": 1281,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n    @staticmethod\n    def read_private_key_file(pkey_file,\n                              pkey_password=None,\n                              key_type=None,\n                              logger=None):\n        \"\"\"\n",
                    "rendered": {
                      "text": "\n    @staticmethod\n    def read_private_key_file(pkey_file,\n                              pkey_password=None,\n                              key_type=None,\n                              logger=None):\n        \"\"\"\n",
                      "markdown": "`\n    @staticmethod\n    def read_private_key_file(pkey_file,\n                              pkey_password=None,\n                              key_type=None,\n                              logger=None):\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1280,
                  "startColumn": 13,
                  "endLine": 1280,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        return attrib\n\n    @staticmethod\n    def read_private_key_file(pkey_file,\n                              pkey_password=None,\n                              key_type=None,\n                              logger=None):\n",
                    "rendered": {
                      "text": "        return attrib\n\n    @staticmethod\n    def read_private_key_file(pkey_file,\n                              pkey_password=None,\n                              key_type=None,\n                              logger=None):\n",
                      "markdown": "`        return attrib\n\n    @staticmethod\n    def read_private_key_file(pkey_file,\n                              pkey_password=None,\n                              key_type=None,\n                              logger=None):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1222,
                  "startColumn": 57,
                  "endLine": 1222,
                  "endColumn": 61,
                  "snippet": {
                    "text": "                return\n            except (paramiko.SSHException, socket.error) as e:\n                template = 'Could not connect to gateway {0}:{1} : {2}'\n                msg = template.format(self.ssh_host, self.ssh_port, e.args[0])\n                self.logger.error(msg)\n                return\n        for (rem, loc) in zip(self._remote_binds, self._local_binds):\n",
                    "rendered": {
                      "text": "                return\n            except (paramiko.SSHException, socket.error) as e:\n                template = 'Could not connect to gateway {0}:{1} : {2}'\n                msg = template.format(self.ssh_host, self.ssh_port, e.args[0])\n                self.logger.error(msg)\n                return\n        for (rem, loc) in zip(self._remote_binds, self._local_binds):\n",
                      "markdown": "`                return\n            except (paramiko.SSHException, socket.error) as e:\n                template = 'Could not connect to gateway {0}:{1} : {2}'\n                msg = template.format(self.ssh_host, self.ssh_port, e.args[0])\n                self.logger.error(msg)\n                return\n        for (rem, loc) in zip(self._remote_binds, self._local_binds):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1222,
                  "startColumn": 42,
                  "endLine": 1222,
                  "endColumn": 46,
                  "snippet": {
                    "text": "                return\n            except (paramiko.SSHException, socket.error) as e:\n                template = 'Could not connect to gateway {0}:{1} : {2}'\n                msg = template.format(self.ssh_host, self.ssh_port, e.args[0])\n                self.logger.error(msg)\n                return\n        for (rem, loc) in zip(self._remote_binds, self._local_binds):\n",
                    "rendered": {
                      "text": "                return\n            except (paramiko.SSHException, socket.error) as e:\n                template = 'Could not connect to gateway {0}:{1} : {2}'\n                msg = template.format(self.ssh_host, self.ssh_port, e.args[0])\n                self.logger.error(msg)\n                return\n        for (rem, loc) in zip(self._remote_binds, self._local_binds):\n",
                      "markdown": "`                return\n            except (paramiko.SSHException, socket.error) as e:\n                template = 'Could not connect to gateway {0}:{1} : {2}'\n                msg = template.format(self.ssh_host, self.ssh_port, e.args[0])\n                self.logger.error(msg)\n                return\n        for (rem, loc) in zip(self._remote_binds, self._local_binds):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1220,
                  "startColumn": 28,
                  "endLine": 1220,
                  "endColumn": 32,
                  "snippet": {
                    "text": "                    .format(self.ssh_host)\n                self.logger.error(msg)\n                return\n            except (paramiko.SSHException, socket.error) as e:\n                template = 'Could not connect to gateway {0}:{1} : {2}'\n                msg = template.format(self.ssh_host, self.ssh_port, e.args[0])\n                self.logger.error(msg)\n",
                    "rendered": {
                      "text": "                    .format(self.ssh_host)\n                self.logger.error(msg)\n                return\n            except (paramiko.SSHException, socket.error) as e:\n                template = 'Could not connect to gateway {0}:{1} : {2}'\n                msg = template.format(self.ssh_host, self.ssh_port, e.args[0])\n                self.logger.error(msg)\n",
                      "markdown": "`                    .format(self.ssh_host)\n                self.logger.error(msg)\n                return\n            except (paramiko.SSHException, socket.error) as e:\n                template = 'Could not connect to gateway {0}:{1} : {2}'\n                msg = template.format(self.ssh_host, self.ssh_port, e.args[0])\n                self.logger.error(msg)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1217,
                  "startColumn": 32,
                  "endLine": 1217,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                self._connect_to_gateway()\n            except socket.gaierror:  # raised by paramiko.Transport\n                msg = 'Could not resolve IP address for {0}, aborting!' \\\n                    .format(self.ssh_host)\n                self.logger.error(msg)\n                return\n            except (paramiko.SSHException, socket.error) as e:\n",
                    "rendered": {
                      "text": "                self._connect_to_gateway()\n            except socket.gaierror:  # raised by paramiko.Transport\n                msg = 'Could not resolve IP address for {0}, aborting!' \\\n                    .format(self.ssh_host)\n                self.logger.error(msg)\n                return\n            except (paramiko.SSHException, socket.error) as e:\n",
                      "markdown": "`                self._connect_to_gateway()\n            except socket.gaierror:  # raised by paramiko.Transport\n                msg = 'Could not resolve IP address for {0}, aborting!' \\\n                    .format(self.ssh_host)\n                self.logger.error(msg)\n                return\n            except (paramiko.SSHException, socket.error) as e:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1191,
                  "startColumn": 48,
                  "endLine": 1191,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n            _socket.settimeout(SSH_TIMEOUT)\n            _socket.connect((self.ssh_host, self.ssh_port))\n        transport = paramiko.Transport(_socket)\n        sock = transport.sock\n        if isinstance(sock, socket.socket):\n",
                    "rendered": {
                      "text": "            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n            _socket.settimeout(SSH_TIMEOUT)\n            _socket.connect((self.ssh_host, self.ssh_port))\n        transport = paramiko.Transport(_socket)\n        sock = transport.sock\n        if isinstance(sock, socket.socket):\n",
                      "markdown": "`            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n            _socket.settimeout(SSH_TIMEOUT)\n            _socket.connect((self.ssh_host, self.ssh_port))\n        transport = paramiko.Transport(_socket)\n        sock = transport.sock\n        if isinstance(sock, socket.socket):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1191,
                  "startColumn": 33,
                  "endLine": 1191,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n            _socket.settimeout(SSH_TIMEOUT)\n            _socket.connect((self.ssh_host, self.ssh_port))\n        transport = paramiko.Transport(_socket)\n        sock = transport.sock\n        if isinstance(sock, socket.socket):\n",
                    "rendered": {
                      "text": "            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n            _socket.settimeout(SSH_TIMEOUT)\n            _socket.connect((self.ssh_host, self.ssh_port))\n        transport = paramiko.Transport(_socket)\n        sock = transport.sock\n        if isinstance(sock, socket.socket):\n",
                      "markdown": "`            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n            _socket.settimeout(SSH_TIMEOUT)\n            _socket.connect((self.ssh_host, self.ssh_port))\n        transport = paramiko.Transport(_socket)\n        sock = transport.sock\n        if isinstance(sock, socket.socket):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1188,
                  "startColumn": 42,
                  "endLine": 1188,
                  "endColumn": 46,
                  "snippet": {
                    "text": "            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n            _socket = self.ssh_proxy\n        else:\n            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n            _socket.settimeout(SSH_TIMEOUT)\n            _socket.connect((self.ssh_host, self.ssh_port))\n",
                    "rendered": {
                      "text": "            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n            _socket = self.ssh_proxy\n        else:\n            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n            _socket.settimeout(SSH_TIMEOUT)\n            _socket.connect((self.ssh_host, self.ssh_port))\n",
                      "markdown": "`            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n            _socket = self.ssh_proxy\n        else:\n            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n            _socket.settimeout(SSH_TIMEOUT)\n            _socket.connect((self.ssh_host, self.ssh_port))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1188,
                  "startColumn": 27,
                  "endLine": 1188,
                  "endColumn": 31,
                  "snippet": {
                    "text": "            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n            _socket = self.ssh_proxy\n        else:\n            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n            _socket.settimeout(SSH_TIMEOUT)\n            _socket.connect((self.ssh_host, self.ssh_port))\n",
                    "rendered": {
                      "text": "            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n            _socket = self.ssh_proxy\n        else:\n            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n            _socket.settimeout(SSH_TIMEOUT)\n            _socket.connect((self.ssh_host, self.ssh_port))\n",
                      "markdown": "`            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n            _socket = self.ssh_proxy\n        else:\n            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n            _socket.settimeout(SSH_TIMEOUT)\n            _socket.connect((self.ssh_host, self.ssh_port))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1186,
                  "startColumn": 26,
                  "endLine": 1186,
                  "endColumn": 30,
                  "snippet": {
                    "text": "            else:\n                proxy_repr = repr(self.ssh_proxy)\n            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n            _socket = self.ssh_proxy\n        else:\n            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n",
                    "rendered": {
                      "text": "            else:\n                proxy_repr = repr(self.ssh_proxy)\n            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n            _socket = self.ssh_proxy\n        else:\n            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n",
                      "markdown": "`            else:\n                proxy_repr = repr(self.ssh_proxy)\n            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n            _socket = self.ssh_proxy\n        else:\n            _socket = (self.ssh_host, self.ssh_port)\n        if isinstance(_socket, socket.socket):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1184,
                  "startColumn": 38,
                  "endLine": 1184,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n            else:\n                proxy_repr = repr(self.ssh_proxy)\n            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n            _socket = self.ssh_proxy\n        else:\n",
                    "rendered": {
                      "text": "            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n            else:\n                proxy_repr = repr(self.ssh_proxy)\n            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n            _socket = self.ssh_proxy\n        else:\n",
                      "markdown": "`            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n            else:\n                proxy_repr = repr(self.ssh_proxy)\n            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n            _socket = self.ssh_proxy\n        else:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1182,
                  "startColumn": 38,
                  "endLine": 1182,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        \"\"\" Return the SSH transport to the remote gateway \"\"\"\n        if self.ssh_proxy:\n            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n            else:\n                proxy_repr = repr(self.ssh_proxy)\n            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n",
                    "rendered": {
                      "text": "        \"\"\" Return the SSH transport to the remote gateway \"\"\"\n        if self.ssh_proxy:\n            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n            else:\n                proxy_repr = repr(self.ssh_proxy)\n            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n",
                      "markdown": "`        \"\"\" Return the SSH transport to the remote gateway \"\"\"\n        if self.ssh_proxy:\n            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n            else:\n                proxy_repr = repr(self.ssh_proxy)\n            self.logger.debug('Connecting via proxy: {0}'.format(proxy_repr))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1181,
                  "startColumn": 30,
                  "endLine": 1181,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    def _get_transport(self):\n        \"\"\" Return the SSH transport to the remote gateway \"\"\"\n        if self.ssh_proxy:\n            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n            else:\n                proxy_repr = repr(self.ssh_proxy)\n",
                    "rendered": {
                      "text": "    def _get_transport(self):\n        \"\"\" Return the SSH transport to the remote gateway \"\"\"\n        if self.ssh_proxy:\n            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n            else:\n                proxy_repr = repr(self.ssh_proxy)\n",
                      "markdown": "`    def _get_transport(self):\n        \"\"\" Return the SSH transport to the remote gateway \"\"\"\n        if self.ssh_proxy:\n            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n            else:\n                proxy_repr = repr(self.ssh_proxy)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1180,
                  "startColumn": 15,
                  "endLine": 1180,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n    def _get_transport(self):\n        \"\"\" Return the SSH transport to the remote gateway \"\"\"\n        if self.ssh_proxy:\n            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n            else:\n",
                    "rendered": {
                      "text": "\n    def _get_transport(self):\n        \"\"\" Return the SSH transport to the remote gateway \"\"\"\n        if self.ssh_proxy:\n            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n            else:\n",
                      "markdown": "`\n    def _get_transport(self):\n        \"\"\" Return the SSH transport to the remote gateway \"\"\"\n        if self.ssh_proxy:\n            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n            else:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1170,
                  "startColumn": 20,
                  "endLine": 1170,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n        if not ssh_password and not ssh_loaded_pkeys:\n            raise ValueError('No password or public key available!')\n        return (ssh_password, ssh_loaded_pkeys)\n\n    def _raise(self, exception=BaseSSHTunnelForwarderError, reason=None):\n        if self._raise_fwd_exc:\n",
                    "rendered": {
                      "text": "\n        if not ssh_password and not ssh_loaded_pkeys:\n            raise ValueError('No password or public key available!')\n        return (ssh_password, ssh_loaded_pkeys)\n\n    def _raise(self, exception=BaseSSHTunnelForwarderError, reason=None):\n        if self._raise_fwd_exc:\n",
                      "markdown": "`\n        if not ssh_password and not ssh_loaded_pkeys:\n            raise ValueError('No password or public key available!')\n        return (ssh_password, ssh_loaded_pkeys)\n\n    def _raise(self, exception=BaseSSHTunnelForwarderError, reason=None):\n        if self._raise_fwd_exc:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1169,
                  "startColumn": 33,
                  "endLine": 1169,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            ssh_loaded_pkeys.insert(0, ssh_pkey)\n\n        if not ssh_password and not ssh_loaded_pkeys:\n            raise ValueError('No password or public key available!')\n        return (ssh_password, ssh_loaded_pkeys)\n\n    def _raise(self, exception=BaseSSHTunnelForwarderError, reason=None):\n",
                    "rendered": {
                      "text": "            ssh_loaded_pkeys.insert(0, ssh_pkey)\n\n        if not ssh_password and not ssh_loaded_pkeys:\n            raise ValueError('No password or public key available!')\n        return (ssh_password, ssh_loaded_pkeys)\n\n    def _raise(self, exception=BaseSSHTunnelForwarderError, reason=None):\n",
                      "markdown": "`            ssh_loaded_pkeys.insert(0, ssh_pkey)\n\n        if not ssh_password and not ssh_loaded_pkeys:\n            raise ValueError('No password or public key available!')\n        return (ssh_password, ssh_loaded_pkeys)\n\n    def _raise(self, exception=BaseSSHTunnelForwarderError, reason=None):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1168,
                  "startColumn": 19,
                  "endLine": 1168,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        if isinstance(ssh_pkey, paramiko.pkey.PKey):\n            ssh_loaded_pkeys.insert(0, ssh_pkey)\n\n        if not ssh_password and not ssh_loaded_pkeys:\n            raise ValueError('No password or public key available!')\n        return (ssh_password, ssh_loaded_pkeys)\n\n",
                    "rendered": {
                      "text": "        if isinstance(ssh_pkey, paramiko.pkey.PKey):\n            ssh_loaded_pkeys.insert(0, ssh_pkey)\n\n        if not ssh_password and not ssh_loaded_pkeys:\n            raise ValueError('No password or public key available!')\n        return (ssh_password, ssh_loaded_pkeys)\n\n",
                      "markdown": "`        if isinstance(ssh_pkey, paramiko.pkey.PKey):\n            ssh_loaded_pkeys.insert(0, ssh_pkey)\n\n        if not ssh_password and not ssh_loaded_pkeys:\n            raise ValueError('No password or public key available!')\n        return (ssh_password, ssh_loaded_pkeys)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1159,
                  "startColumn": 59,
                  "endLine": 1159,
                  "endColumn": 67,
                  "snippet": {
                    "text": "            if os.path.exists(ssh_pkey_expanded):\n                ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                    pkey_file=ssh_pkey_expanded,\n                    pkey_password=ssh_pkey_password or ssh_password,\n                    logger=logger\n                )\n            elif logger:\n",
                    "rendered": {
                      "text": "            if os.path.exists(ssh_pkey_expanded):\n                ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                    pkey_file=ssh_pkey_expanded,\n                    pkey_password=ssh_pkey_password or ssh_password,\n                    logger=logger\n                )\n            elif logger:\n",
                      "markdown": "`            if os.path.exists(ssh_pkey_expanded):\n                ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                    pkey_file=ssh_pkey_expanded,\n                    pkey_password=ssh_pkey_password or ssh_password,\n                    logger=logger\n                )\n            elif logger:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1159,
                  "startColumn": 43,
                  "endLine": 1159,
                  "endColumn": 51,
                  "snippet": {
                    "text": "            if os.path.exists(ssh_pkey_expanded):\n                ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                    pkey_file=ssh_pkey_expanded,\n                    pkey_password=ssh_pkey_password or ssh_password,\n                    logger=logger\n                )\n            elif logger:\n",
                    "rendered": {
                      "text": "            if os.path.exists(ssh_pkey_expanded):\n                ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                    pkey_file=ssh_pkey_expanded,\n                    pkey_password=ssh_pkey_password or ssh_password,\n                    logger=logger\n                )\n            elif logger:\n",
                      "markdown": "`            if os.path.exists(ssh_pkey_expanded):\n                ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                    pkey_file=ssh_pkey_expanded,\n                    pkey_password=ssh_pkey_password or ssh_password,\n                    logger=logger\n                )\n            elif logger:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1159,
                  "startColumn": 25,
                  "endLine": 1159,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            if os.path.exists(ssh_pkey_expanded):\n                ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                    pkey_file=ssh_pkey_expanded,\n                    pkey_password=ssh_pkey_password or ssh_password,\n                    logger=logger\n                )\n            elif logger:\n",
                    "rendered": {
                      "text": "            if os.path.exists(ssh_pkey_expanded):\n                ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                    pkey_file=ssh_pkey_expanded,\n                    pkey_password=ssh_pkey_password or ssh_password,\n                    logger=logger\n                )\n            elif logger:\n",
                      "markdown": "`            if os.path.exists(ssh_pkey_expanded):\n                ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                    pkey_file=ssh_pkey_expanded,\n                    pkey_password=ssh_pkey_password or ssh_password,\n                    logger=logger\n                )\n            elif logger:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1157,
                  "startColumn": 51,
                  "endLine": 1157,
                  "endColumn": 62,
                  "snippet": {
                    "text": "        if isinstance(ssh_pkey, string_types):\n            ssh_pkey_expanded = os.path.expanduser(ssh_pkey)\n            if os.path.exists(ssh_pkey_expanded):\n                ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                    pkey_file=ssh_pkey_expanded,\n                    pkey_password=ssh_pkey_password or ssh_password,\n                    logger=logger\n",
                    "rendered": {
                      "text": "        if isinstance(ssh_pkey, string_types):\n            ssh_pkey_expanded = os.path.expanduser(ssh_pkey)\n            if os.path.exists(ssh_pkey_expanded):\n                ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                    pkey_file=ssh_pkey_expanded,\n                    pkey_password=ssh_pkey_password or ssh_password,\n                    logger=logger\n",
                      "markdown": "`        if isinstance(ssh_pkey, string_types):\n            ssh_pkey_expanded = os.path.expanduser(ssh_pkey)\n            if os.path.exists(ssh_pkey_expanded):\n                ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                    pkey_file=ssh_pkey_expanded,\n                    pkey_password=ssh_pkey_password or ssh_password,\n                    logger=logger\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1136,
                  "startColumn": 35,
                  "endLine": 1136,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    @staticmethod\n    def _consolidate_auth(ssh_password=None,\n                          ssh_pkey=None,\n                          ssh_pkey_password=None,\n                          allow_agent=True,\n                          host_pkey_directories=None,\n                          logger=None):\n",
                    "rendered": {
                      "text": "    @staticmethod\n    def _consolidate_auth(ssh_password=None,\n                          ssh_pkey=None,\n                          ssh_pkey_password=None,\n                          allow_agent=True,\n                          host_pkey_directories=None,\n                          logger=None):\n",
                      "markdown": "`    @staticmethod\n    def _consolidate_auth(ssh_password=None,\n                          ssh_pkey=None,\n                          ssh_pkey_password=None,\n                          allow_agent=True,\n                          host_pkey_directories=None,\n                          logger=None):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1134,
                  "startColumn": 30,
                  "endLine": 1134,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        return local_binds\n\n    @staticmethod\n    def _consolidate_auth(ssh_password=None,\n                          ssh_pkey=None,\n                          ssh_pkey_password=None,\n                          allow_agent=True,\n",
                    "rendered": {
                      "text": "        return local_binds\n\n    @staticmethod\n    def _consolidate_auth(ssh_password=None,\n                          ssh_pkey=None,\n                          ssh_pkey_password=None,\n                          allow_agent=True,\n",
                      "markdown": "`        return local_binds\n\n    @staticmethod\n    def _consolidate_auth(ssh_password=None,\n                          ssh_pkey=None,\n                          ssh_pkey_password=None,\n                          allow_agent=True,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1105,
                  "startColumn": 59,
                  "endLine": 1105,
                  "endColumn": 70,
                  "snippet": {
                    "text": "                )\n                try:\n                    if os.path.isfile(ssh_pkey_expanded):\n                        ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                            pkey_file=ssh_pkey_expanded,\n                            logger=logger,\n                            key_type=paramiko_key_types[keytype]\n",
                    "rendered": {
                      "text": "                )\n                try:\n                    if os.path.isfile(ssh_pkey_expanded):\n                        ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                            pkey_file=ssh_pkey_expanded,\n                            logger=logger,\n                            key_type=paramiko_key_types[keytype]\n",
                      "markdown": "`                )\n                try:\n                    if os.path.isfile(ssh_pkey_expanded):\n                        ssh_pkey = SSHTunnelForwarder.read_private_key_file(\n                            pkey_file=ssh_pkey_expanded,\n                            logger=logger,\n                            key_type=paramiko_key_types[keytype]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1074,
                  "startColumn": 54,
                  "endLine": 1074,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n            host_pkey_directories (Optional[list[str]]):\n                List of local directories where host SSH pkeys in the format\n                \"id_*\" are searched. For example, ['~/.ssh']\n\n                .. versionadded:: 0.1.0\n\n",
                    "rendered": {
                      "text": "\n            host_pkey_directories (Optional[list[str]]):\n                List of local directories where host SSH pkeys in the format\n                \"id_*\" are searched. For example, ['~/.ssh']\n\n                .. versionadded:: 0.1.0\n\n",
                      "markdown": "`\n            host_pkey_directories (Optional[list[str]]):\n                List of local directories where host SSH pkeys in the format\n                \"id_*\" are searched. For example, ['~/.ssh']\n\n                .. versionadded:: 0.1.0\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1067,
                  "startColumn": 8,
                  "endLine": 1067,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    def get_keys(logger=None, host_pkey_directories=None, allow_agent=False):\n        \"\"\"\n        Load public keys from any available SSH agent or local\n        .ssh directory.\n\n        Arguments:\n            logger (Optional[logging.Logger])\n",
                    "rendered": {
                      "text": "    def get_keys(logger=None, host_pkey_directories=None, allow_agent=False):\n        \"\"\"\n        Load public keys from any available SSH agent or local\n        .ssh directory.\n\n        Arguments:\n            logger (Optional[logging.Logger])\n",
                      "markdown": "`    def get_keys(logger=None, host_pkey_directories=None, allow_agent=False):\n        \"\"\"\n        Load public keys from any available SSH agent or local\n        .ssh directory.\n\n        Arguments:\n            logger (Optional[logging.Logger])\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1000,
                  "startColumn": 29,
                  "endLine": 1000,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        identityfile (ssh_pkey), port (ssh_port) and proxycommand\n        (ssh_proxy) entries for ssh_host\n        \"\"\"\n        ssh_config = paramiko.SSHConfig()\n        if not ssh_config_file:  # handle case where it's an empty string\n            ssh_config_file = None\n\n",
                    "rendered": {
                      "text": "        identityfile (ssh_pkey), port (ssh_port) and proxycommand\n        (ssh_proxy) entries for ssh_host\n        \"\"\"\n        ssh_config = paramiko.SSHConfig()\n        if not ssh_config_file:  # handle case where it's an empty string\n            ssh_config_file = None\n\n",
                      "markdown": "`        identityfile (ssh_pkey), port (ssh_port) and proxycommand\n        (ssh_proxy) entries for ssh_host\n        \"\"\"\n        ssh_config = paramiko.SSHConfig()\n        if not ssh_config_file:  # handle case where it's an empty string\n            ssh_config_file = None\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 981,
                  "startColumn": 37,
                  "endLine": 981,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n                         .format(self.ssh_host,\n                                 self.ssh_port,\n                                 self.ssh_username))\n\n        self.logger.debug('Concurrent connections allowed: {0}'\n                          .format(self._threaded))\n",
                    "rendered": {
                      "text": "        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n                         .format(self.ssh_host,\n                                 self.ssh_port,\n                                 self.ssh_username))\n\n        self.logger.debug('Concurrent connections allowed: {0}'\n                          .format(self._threaded))\n",
                      "markdown": "`        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n                         .format(self.ssh_host,\n                                 self.ssh_port,\n                                 self.ssh_username))\n\n        self.logger.debug('Concurrent connections allowed: {0}'\n                          .format(self._threaded))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 980,
                  "startColumn": 37,
                  "endLine": 980,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n                         .format(self.ssh_host,\n                                 self.ssh_port,\n                                 self.ssh_username))\n\n        self.logger.debug('Concurrent connections allowed: {0}'\n",
                    "rendered": {
                      "text": "\n        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n                         .format(self.ssh_host,\n                                 self.ssh_port,\n                                 self.ssh_username))\n\n        self.logger.debug('Concurrent connections allowed: {0}'\n",
                      "markdown": "`\n        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n                         .format(self.ssh_host,\n                                 self.ssh_port,\n                                 self.ssh_username))\n\n        self.logger.debug('Concurrent connections allowed: {0}'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 979,
                  "startColumn": 37,
                  "endLine": 979,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        check_port(self.ssh_port)\n\n        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n                         .format(self.ssh_host,\n                                 self.ssh_port,\n                                 self.ssh_username))\n\n",
                    "rendered": {
                      "text": "        check_port(self.ssh_port)\n\n        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n                         .format(self.ssh_host,\n                                 self.ssh_port,\n                                 self.ssh_username))\n\n",
                      "markdown": "`        check_port(self.ssh_port)\n\n        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n                         .format(self.ssh_host,\n                                 self.ssh_port,\n                                 self.ssh_username))\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 976,
                  "startColumn": 23,
                  "endLine": 976,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        )\n\n        check_host(self.ssh_host)\n        check_port(self.ssh_port)\n\n        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n                         .format(self.ssh_host,\n",
                    "rendered": {
                      "text": "        )\n\n        check_host(self.ssh_host)\n        check_port(self.ssh_port)\n\n        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n                         .format(self.ssh_host,\n",
                      "markdown": "`        )\n\n        check_host(self.ssh_host)\n        check_port(self.ssh_port)\n\n        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n                         .format(self.ssh_host,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 975,
                  "startColumn": 23,
                  "endLine": 975,
                  "endColumn": 27,
                  "snippet": {
                    "text": "            logger=self.logger\n        )\n\n        check_host(self.ssh_host)\n        check_port(self.ssh_port)\n\n        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n",
                    "rendered": {
                      "text": "            logger=self.logger\n        )\n\n        check_host(self.ssh_host)\n        check_port(self.ssh_port)\n\n        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n",
                      "markdown": "`            logger=self.logger\n        )\n\n        check_host(self.ssh_host)\n        check_port(self.ssh_port)\n\n        self.logger.info(\"Connecting to gateway: {0}:{1} as user '{2}'\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 969,
                  "startColumn": 46,
                  "endLine": 969,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n            host_pkey_directories=host_pkey_directories,\n            logger=self.logger\n",
                    "rendered": {
                      "text": "        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n            host_pkey_directories=host_pkey_directories,\n            logger=self.logger\n",
                      "markdown": "`        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n            host_pkey_directories=host_pkey_directories,\n            logger=self.logger\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 969,
                  "startColumn": 34,
                  "endLine": 969,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n            host_pkey_directories=host_pkey_directories,\n            logger=self.logger\n",
                    "rendered": {
                      "text": "        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n            host_pkey_directories=host_pkey_directories,\n            logger=self.logger\n",
                      "markdown": "`        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n            host_pkey_directories=host_pkey_directories,\n            logger=self.logger\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 969,
                  "startColumn": 21,
                  "endLine": 969,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n            host_pkey_directories=host_pkey_directories,\n            logger=self.logger\n",
                    "rendered": {
                      "text": "        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n            host_pkey_directories=host_pkey_directories,\n            logger=self.logger\n",
                      "markdown": "`        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n            host_pkey_directories=host_pkey_directories,\n            logger=self.logger\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 967,
                  "startColumn": 29,
                  "endLine": 967,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n",
                    "rendered": {
                      "text": "        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n",
                      "markdown": "`        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 967,
                  "startColumn": 16,
                  "endLine": 967,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n",
                    "rendered": {
                      "text": "        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n",
                      "markdown": "`        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n            allow_agent=allow_agent,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 966,
                  "startColumn": 32,
                  "endLine": 966,
                  "endColumn": 36,
                  "snippet": {
                    "text": "             self.logger\n        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n",
                    "rendered": {
                      "text": "             self.logger\n        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n",
                      "markdown": "`             self.logger\n        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 966,
                  "startColumn": 18,
                  "endLine": 966,
                  "endColumn": 26,
                  "snippet": {
                    "text": "             self.logger\n        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n",
                    "rendered": {
                      "text": "             self.logger\n        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n",
                      "markdown": "`             self.logger\n        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 966,
                  "startColumn": 13,
                  "endLine": 966,
                  "endColumn": 17,
                  "snippet": {
                    "text": "             self.logger\n        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n",
                    "rendered": {
                      "text": "             self.logger\n        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n",
                      "markdown": "`             self.logger\n        )\n\n        (self.ssh_password, self.ssh_pkeys) = self._consolidate_auth(\n            ssh_password=ssh_password,\n            ssh_pkey=ssh_pkey,\n            ssh_pkey_password=ssh_private_key_password,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 954,
                  "startColumn": 13,
                  "endLine": 954,
                  "endColumn": 17,
                  "snippet": {
                    "text": "         self.ssh_username,\n         ssh_pkey,  # still needs to go through _consolidate_auth\n         self.ssh_port,\n         self.ssh_proxy,\n         self.compression) = self._read_ssh_config(\n             ssh_host,\n             ssh_config_file,\n",
                    "rendered": {
                      "text": "         self.ssh_username,\n         ssh_pkey,  # still needs to go through _consolidate_auth\n         self.ssh_port,\n         self.ssh_proxy,\n         self.compression) = self._read_ssh_config(\n             ssh_host,\n             ssh_config_file,\n",
                      "markdown": "`         self.ssh_username,\n         ssh_pkey,  # still needs to go through _consolidate_auth\n         self.ssh_port,\n         self.ssh_proxy,\n         self.compression) = self._read_ssh_config(\n             ssh_host,\n             ssh_config_file,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 953,
                  "startColumn": 13,
                  "endLine": 953,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        (self.ssh_host,\n         self.ssh_username,\n         ssh_pkey,  # still needs to go through _consolidate_auth\n         self.ssh_port,\n         self.ssh_proxy,\n         self.compression) = self._read_ssh_config(\n             ssh_host,\n",
                    "rendered": {
                      "text": "        (self.ssh_host,\n         self.ssh_username,\n         ssh_pkey,  # still needs to go through _consolidate_auth\n         self.ssh_port,\n         self.ssh_proxy,\n         self.compression) = self._read_ssh_config(\n             ssh_host,\n",
                      "markdown": "`        (self.ssh_host,\n         self.ssh_username,\n         ssh_pkey,  # still needs to go through _consolidate_auth\n         self.ssh_port,\n         self.ssh_proxy,\n         self.compression) = self._read_ssh_config(\n             ssh_host,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 951,
                  "startColumn": 13,
                  "endLine": 951,
                  "endColumn": 17,
                  "snippet": {
                    "text": "                                                    self._remote_binds)\n\n        (self.ssh_host,\n         self.ssh_username,\n         ssh_pkey,  # still needs to go through _consolidate_auth\n         self.ssh_port,\n         self.ssh_proxy,\n",
                    "rendered": {
                      "text": "                                                    self._remote_binds)\n\n        (self.ssh_host,\n         self.ssh_username,\n         ssh_pkey,  # still needs to go through _consolidate_auth\n         self.ssh_port,\n         self.ssh_proxy,\n",
                      "markdown": "`                                                    self._remote_binds)\n\n        (self.ssh_host,\n         self.ssh_username,\n         ssh_pkey,  # still needs to go through _consolidate_auth\n         self.ssh_port,\n         self.ssh_proxy,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 950,
                  "startColumn": 13,
                  "endLine": 950,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        self._local_binds = self._consolidate_binds(self._local_binds,\n                                                    self._remote_binds)\n\n        (self.ssh_host,\n         self.ssh_username,\n         ssh_pkey,  # still needs to go through _consolidate_auth\n         self.ssh_port,\n",
                    "rendered": {
                      "text": "        self._local_binds = self._consolidate_binds(self._local_binds,\n                                                    self._remote_binds)\n\n        (self.ssh_host,\n         self.ssh_username,\n         ssh_pkey,  # still needs to go through _consolidate_auth\n         self.ssh_port,\n",
                      "markdown": "`        self._local_binds = self._consolidate_binds(self._local_binds,\n                                                    self._remote_binds)\n\n        (self.ssh_host,\n         self.ssh_username,\n         ssh_pkey,  # still needs to go through _consolidate_auth\n         self.ssh_port,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 922,
                  "startColumn": 49,
                  "endLine": 922,
                  "endColumn": 60,
                  "snippet": {
                    "text": "                                                           kwargs)\n        # other deprecated arguments\n        ssh_pkey = self._process_deprecated(ssh_pkey,\n                                            'ssh_private_key',\n                                            kwargs)\n\n        self._raise_fwd_exc = self._process_deprecated(\n",
                    "rendered": {
                      "text": "                                                           kwargs)\n        # other deprecated arguments\n        ssh_pkey = self._process_deprecated(ssh_pkey,\n                                            'ssh_private_key',\n                                            kwargs)\n\n        self._raise_fwd_exc = self._process_deprecated(\n",
                      "markdown": "`                                                           kwargs)\n        # other deprecated arguments\n        ssh_pkey = self._process_deprecated(ssh_pkey,\n                                            'ssh_private_key',\n                                            kwargs)\n\n        self._raise_fwd_exc = self._process_deprecated(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 909,
                  "startColumn": 12,
                  "endLine": 909,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        # Ensure paramiko.transport has a console handler\n        _check_paramiko_handlers(logger=logger)\n\n        self.ssh_host_key = ssh_host_key\n        self.set_keepalive = set_keepalive\n        self._server_list = []  # reset server list\n        self.tunnel_is_up = {}  # handle tunnel status\n",
                    "rendered": {
                      "text": "        # Ensure paramiko.transport has a console handler\n        _check_paramiko_handlers(logger=logger)\n\n        self.ssh_host_key = ssh_host_key\n        self.set_keepalive = set_keepalive\n        self._server_list = []  # reset server list\n        self.tunnel_is_up = {}  # handle tunnel status\n",
                      "markdown": "`        # Ensure paramiko.transport has a console handler\n        _check_paramiko_handlers(logger=logger)\n\n        self.ssh_host_key = ssh_host_key\n        self.set_keepalive = set_keepalive\n        self._server_list = []  # reset server list\n        self.tunnel_is_up = {}  # handle tunnel status\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 900,
                  "startColumn": 62,
                  "endLine": 900,
                  "endColumn": 66,
                  "snippet": {
                    "text": "            threaded=True,  # old version False\n            compression=None,\n            allow_agent=True,  # look for keys from an SSH agent\n            host_pkey_directories=None,  # look for keys in ~/.ssh\n            *args,\n            **kwargs  # for backwards compatibility\n    ):\n",
                    "rendered": {
                      "text": "            threaded=True,  # old version False\n            compression=None,\n            allow_agent=True,  # look for keys from an SSH agent\n            host_pkey_directories=None,  # look for keys in ~/.ssh\n            *args,\n            **kwargs  # for backwards compatibility\n    ):\n",
                      "markdown": "`            threaded=True,  # old version False\n            compression=None,\n            allow_agent=True,  # look for keys from an SSH agent\n            host_pkey_directories=None,  # look for keys in ~/.ssh\n            *args,\n            **kwargs  # for backwards compatibility\n    ):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 886,
                  "startColumn": 28,
                  "endLine": 886,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            ssh_host_key=None,\n            ssh_password=None,\n            ssh_pkey=None,\n            ssh_private_key_password=None,\n            ssh_proxy=None,\n            ssh_proxy_enabled=True,\n            ssh_username=None,\n",
                    "rendered": {
                      "text": "            ssh_host_key=None,\n            ssh_password=None,\n            ssh_pkey=None,\n            ssh_private_key_password=None,\n            ssh_proxy=None,\n            ssh_proxy_enabled=True,\n            ssh_username=None,\n",
                      "markdown": "`            ssh_host_key=None,\n            ssh_password=None,\n            ssh_pkey=None,\n            ssh_private_key_password=None,\n            ssh_proxy=None,\n            ssh_proxy_enabled=True,\n            ssh_username=None,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 886,
                  "startColumn": 16,
                  "endLine": 886,
                  "endColumn": 27,
                  "snippet": {
                    "text": "            ssh_host_key=None,\n            ssh_password=None,\n            ssh_pkey=None,\n            ssh_private_key_password=None,\n            ssh_proxy=None,\n            ssh_proxy_enabled=True,\n            ssh_username=None,\n",
                    "rendered": {
                      "text": "            ssh_host_key=None,\n            ssh_password=None,\n            ssh_pkey=None,\n            ssh_private_key_password=None,\n            ssh_proxy=None,\n            ssh_proxy_enabled=True,\n            ssh_username=None,\n",
                      "markdown": "`            ssh_host_key=None,\n            ssh_password=None,\n            ssh_pkey=None,\n            ssh_private_key_password=None,\n            ssh_proxy=None,\n            ssh_proxy_enabled=True,\n            ssh_username=None,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 884,
                  "startColumn": 16,
                  "endLine": 884,
                  "endColumn": 24,
                  "snippet": {
                    "text": "            ssh_address_or_host=None,\n            ssh_config_file=SSH_CONFIG_FILE,\n            ssh_host_key=None,\n            ssh_password=None,\n            ssh_pkey=None,\n            ssh_private_key_password=None,\n            ssh_proxy=None,\n",
                    "rendered": {
                      "text": "            ssh_address_or_host=None,\n            ssh_config_file=SSH_CONFIG_FILE,\n            ssh_host_key=None,\n            ssh_password=None,\n            ssh_pkey=None,\n            ssh_private_key_password=None,\n            ssh_proxy=None,\n",
                      "markdown": "`            ssh_address_or_host=None,\n            ssh_config_file=SSH_CONFIG_FILE,\n            ssh_host_key=None,\n            ssh_password=None,\n            ssh_pkey=None,\n            ssh_private_key_password=None,\n            ssh_proxy=None,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 696,
                  "startColumn": 12,
                  "endLine": 696,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n            .. deprecated:: 0.0.4\n\n        ssh_private_key (str or paramiko.PKey):\n            Superseded by ``ssh_pkey``, which can represent either a\n            **private** key file name (``str``) or a **public** key\n            (:class:`paramiko.pkey.PKey`)\n",
                    "rendered": {
                      "text": "\n            .. deprecated:: 0.0.4\n\n        ssh_private_key (str or paramiko.PKey):\n            Superseded by ``ssh_pkey``, which can represent either a\n            **private** key file name (``str``) or a **public** key\n            (:class:`paramiko.pkey.PKey`)\n",
                      "markdown": "`\n            .. deprecated:: 0.0.4\n\n        ssh_private_key (str or paramiko.PKey):\n            Superseded by ``ssh_pkey``, which can represent either a\n            **private** key file name (``str``) or a **public** key\n            (:class:`paramiko.pkey.PKey`)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 635,
                  "startColumn": 68,
                  "endLine": 635,
                  "endColumn": 72,
                  "snippet": {
                    "text": "            .. versionadded:: 0.0.8\n\n        host_pkey_directories (list):\n            Look for pkeys in folders on this list, for example ['~/.ssh'].\n\n            Default: ``None`` (disabled)\n\n",
                    "rendered": {
                      "text": "            .. versionadded:: 0.0.8\n\n        host_pkey_directories (list):\n            Look for pkeys in folders on this list, for example ['~/.ssh'].\n\n            Default: ``None`` (disabled)\n\n",
                      "markdown": "`            .. versionadded:: 0.0.8\n\n        host_pkey_directories (list):\n            Look for pkeys in folders on this list, for example ['~/.ssh'].\n\n            Default: ``None`` (disabled)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 563,
                  "startColumn": 36,
                  "endLine": 563,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            Password for an encrypted ``ssh_pkey``\n\n            .. note::\n                Avoid coding secret password directly in the code, since this\n                may be visible and make your service vulnerable to attacks\n\n        ssh_proxy (socket-like object or tuple):\n",
                    "rendered": {
                      "text": "            Password for an encrypted ``ssh_pkey``\n\n            .. note::\n                Avoid coding secret password directly in the code, since this\n                may be visible and make your service vulnerable to attacks\n\n        ssh_proxy (socket-like object or tuple):\n",
                      "markdown": "`            Password for an encrypted ``ssh_pkey``\n\n            .. note::\n                Avoid coding secret password directly in the code, since this\n                may be visible and make your service vulnerable to attacks\n\n        ssh_proxy (socket-like object or tuple):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 560,
                  "startColumn": 12,
                  "endLine": 560,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            from or a **public** key (:class:`paramiko.pkey.PKey`)\n\n        ssh_private_key_password (str):\n            Password for an encrypted ``ssh_pkey``\n\n            .. note::\n                Avoid coding secret password directly in the code, since this\n",
                    "rendered": {
                      "text": "            from or a **public** key (:class:`paramiko.pkey.PKey`)\n\n        ssh_private_key_password (str):\n            Password for an encrypted ``ssh_pkey``\n\n            .. note::\n                Avoid coding secret password directly in the code, since this\n",
                      "markdown": "`            from or a **public** key (:class:`paramiko.pkey.PKey`)\n\n        ssh_private_key_password (str):\n            Password for an encrypted ``ssh_pkey``\n\n            .. note::\n                Avoid coding secret password directly in the code, since this\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 559,
                  "startColumn": 24,
                  "endLine": 559,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            **Private** key file name (``str``) to obtain the public key\n            from or a **public** key (:class:`paramiko.pkey.PKey`)\n\n        ssh_private_key_password (str):\n            Password for an encrypted ``ssh_pkey``\n\n            .. note::\n",
                    "rendered": {
                      "text": "            **Private** key file name (``str``) to obtain the public key\n            from or a **public** key (:class:`paramiko.pkey.PKey`)\n\n        ssh_private_key_password (str):\n            Password for an encrypted ``ssh_pkey``\n\n            .. note::\n",
                      "markdown": "`            **Private** key file name (``str``) to obtain the public key\n            from or a **public** key (:class:`paramiko.pkey.PKey`)\n\n        ssh_private_key_password (str):\n            Password for an encrypted ``ssh_pkey``\n\n            .. note::\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 559,
                  "startColumn": 12,
                  "endLine": 559,
                  "endColumn": 23,
                  "snippet": {
                    "text": "            **Private** key file name (``str``) to obtain the public key\n            from or a **public** key (:class:`paramiko.pkey.PKey`)\n\n        ssh_private_key_password (str):\n            Password for an encrypted ``ssh_pkey``\n\n            .. note::\n",
                    "rendered": {
                      "text": "            **Private** key file name (``str``) to obtain the public key\n            from or a **public** key (:class:`paramiko.pkey.PKey`)\n\n        ssh_private_key_password (str):\n            Password for an encrypted ``ssh_pkey``\n\n            .. note::\n",
                      "markdown": "`            **Private** key file name (``str``) to obtain the public key\n            from or a **public** key (:class:`paramiko.pkey.PKey`)\n\n        ssh_private_key_password (str):\n            Password for an encrypted ``ssh_pkey``\n\n            .. note::\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 545,
                  "startColumn": 36,
                  "endLine": 545,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            SERVER`` or for unlocking a private key.\n\n            .. note::\n                Avoid coding secret password directly in the code, since this\n                may be visible and make your service vulnerable to attacks\n\n        ssh_port (int):\n",
                    "rendered": {
                      "text": "            SERVER`` or for unlocking a private key.\n\n            .. note::\n                Avoid coding secret password directly in the code, since this\n                may be visible and make your service vulnerable to attacks\n\n        ssh_port (int):\n",
                      "markdown": "`            SERVER`` or for unlocking a private key.\n\n            .. note::\n                Avoid coding secret password directly in the code, since this\n                may be visible and make your service vulnerable to attacks\n\n        ssh_port (int):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 541,
                  "startColumn": 34,
                  "endLine": 541,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            Default: current local user name\n\n        ssh_password (str):\n            Text representing the password used to connect to ``REMOTE\n            SERVER`` or for unlocking a private key.\n\n            .. note::\n",
                    "rendered": {
                      "text": "            Default: current local user name\n\n        ssh_password (str):\n            Text representing the password used to connect to ``REMOTE\n            SERVER`` or for unlocking a private key.\n\n            .. note::\n",
                      "markdown": "`            Default: current local user name\n\n        ssh_password (str):\n            Text representing the password used to connect to ``REMOTE\n            SERVER`` or for unlocking a private key.\n\n            .. note::\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 540,
                  "startColumn": 12,
                  "endLine": 540,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n            Default: current local user name\n\n        ssh_password (str):\n            Text representing the password used to connect to ``REMOTE\n            SERVER`` or for unlocking a private key.\n\n",
                    "rendered": {
                      "text": "\n            Default: current local user name\n\n        ssh_password (str):\n            Text representing the password used to connect to ``REMOTE\n            SERVER`` or for unlocking a private key.\n\n",
                      "markdown": "`\n            Default: current local user name\n\n        ssh_password (str):\n            Text representing the password used to connect to ``REMOTE\n            SERVER`` or for unlocking a private key.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 532,
                  "startColumn": 33,
                  "endLine": 532,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n            ``REMOTE GATEWAY``'s key fingerprint will be compared to this\n            host key in order to prevent against SSH server spoofing.\n            Important when using passwords in order not to accidentally\n            do a login attempt to a wrong (perhaps an attacker's) machine\n\n        ssh_username (str):\n",
                    "rendered": {
                      "text": "\n            ``REMOTE GATEWAY``'s key fingerprint will be compared to this\n            host key in order to prevent against SSH server spoofing.\n            Important when using passwords in order not to accidentally\n            do a login attempt to a wrong (perhaps an attacker's) machine\n\n        ssh_username (str):\n",
                      "markdown": "`\n            ``REMOTE GATEWAY``'s key fingerprint will be compared to this\n            host key in order to prevent against SSH server spoofing.\n            Important when using passwords in order not to accidentally\n            do a login attempt to a wrong (perhaps an attacker's) machine\n\n        ssh_username (str):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 60,
                  "endLine": 492,
                  "endColumn": 64,
                  "snippet": {
                    "text": "          arguments\n\n        - Optionally:\n            + Read an SSH configuration file (typically ``~/.ssh/config``)\n            + Load keys from a running SSH agent (i.e. Pageant, GNOME Keyring)\n\n    Raises:\n",
                    "rendered": {
                      "text": "          arguments\n\n        - Optionally:\n            + Read an SSH configuration file (typically ``~/.ssh/config``)\n            + Load keys from a running SSH agent (i.e. Pageant, GNOME Keyring)\n\n    Raises:\n",
                      "markdown": "`          arguments\n\n        - Optionally:\n            + Read an SSH configuration file (typically ``~/.ssh/config``)\n            + Load keys from a running SSH agent (i.e. Pageant, GNOME Keyring)\n\n    Raises:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 55,
                  "endLine": 354,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                timeout=TUNNEL_TIMEOUT\n            )\n        except Exception as e:  # pragma: no cover\n            msg_tupe = 'ssh ' if isinstance(e, paramiko.SSHException) else ''\n            exc_msg = 'open new channel {0}error: {1}'.format(msg_tupe, e)\n            log_msg = '{0} {1}'.format(self.info, exc_msg)\n            self.logger.log(TRACE_LEVEL, log_msg)\n",
                    "rendered": {
                      "text": "                timeout=TUNNEL_TIMEOUT\n            )\n        except Exception as e:  # pragma: no cover\n            msg_tupe = 'ssh ' if isinstance(e, paramiko.SSHException) else ''\n            exc_msg = 'open new channel {0}error: {1}'.format(msg_tupe, e)\n            log_msg = '{0} {1}'.format(self.info, exc_msg)\n            self.logger.log(TRACE_LEVEL, log_msg)\n",
                      "markdown": "`                timeout=TUNNEL_TIMEOUT\n            )\n        except Exception as e:  # pragma: no cover\n            msg_tupe = 'ssh ' if isinstance(e, paramiko.SSHException) else ''\n            exc_msg = 'open new channel {0}error: {1}'.format(msg_tupe, e)\n            log_msg = '{0} {1}'.format(self.info, exc_msg)\n            self.logger.log(TRACE_LEVEL, log_msg)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 23,
                  "endLine": 347,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        if not isinstance(src_address, tuple):\n            src_address = ('dummy', 12345)\n        try:\n            chan = self.ssh_transport.open_channel(\n                kind='direct-tcpip',\n                dest_addr=self.remote_address,\n                src_addr=src_address,\n",
                    "rendered": {
                      "text": "        if not isinstance(src_address, tuple):\n            src_address = ('dummy', 12345)\n        try:\n            chan = self.ssh_transport.open_channel(\n                kind='direct-tcpip',\n                dest_addr=self.remote_address,\n                src_addr=src_address,\n",
                      "markdown": "`        if not isinstance(src_address, tuple):\n            src_address = ('dummy', 12345)\n        try:\n            chan = self.ssh_transport.open_channel(\n                kind='direct-tcpip',\n                dest_addr=self.remote_address,\n                src_addr=src_address,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 18,
                  "endLine": 194,
                  "endColumn": 22,
                  "snippet": {
                    "text": "        :class:`logging.Logger`\n    \"\"\"\n    logger = logger or logging.getLogger(\n        'sshtunnel.SSHTunnelForwarder'\n    )\n    if not any(isinstance(x, logging.Handler) for x in logger.handlers):\n        logger.setLevel(loglevel or DEFAULT_LOGLEVEL)\n",
                    "rendered": {
                      "text": "        :class:`logging.Logger`\n    \"\"\"\n    logger = logger or logging.getLogger(\n        'sshtunnel.SSHTunnelForwarder'\n    )\n    if not any(isinstance(x, logging.Handler) for x in logger.handlers):\n        logger.setLevel(loglevel or DEFAULT_LOGLEVEL)\n",
                      "markdown": "`        :class:`logging.Logger`\n    \"\"\"\n    logger = logger or logging.getLogger(\n        'sshtunnel.SSHTunnelForwarder'\n    )\n    if not any(isinstance(x, logging.Handler) for x in logger.handlers):\n        logger.setLevel(loglevel or DEFAULT_LOGLEVEL)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 27,
                  "endLine": 68,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    else socketserver.TCPServer\n\n#: Path of optional ssh configuration file\nDEFAULT_SSH_DIRECTORY = '~/.ssh'\nSSH_CONFIG_FILE = os.path.join(DEFAULT_SSH_DIRECTORY, 'config')\n\n########################\n",
                    "rendered": {
                      "text": "    else socketserver.TCPServer\n\n#: Path of optional ssh configuration file\nDEFAULT_SSH_DIRECTORY = '~/.ssh'\nSSH_CONFIG_FILE = os.path.join(DEFAULT_SSH_DIRECTORY, 'config')\n\n########################\n",
                      "markdown": "`    else socketserver.TCPServer\n\n#: Path of optional ssh configuration file\nDEFAULT_SSH_DIRECTORY = '~/.ssh'\nSSH_CONFIG_FILE = os.path.join(DEFAULT_SSH_DIRECTORY, 'config')\n\n########################\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 27,
                  "endLine": 62,
                  "endColumn": 31,
                  "snippet": {
                    "text": "DEFAULT_LOGLEVEL = logging.ERROR  #: default level if no logger passed (ERROR)\nTRACE_LEVEL = 1\nlogging.addLevelName(TRACE_LEVEL, 'TRACE')\nDEFAULT_SSH_DIRECTORY = '~/.ssh'\n\n_StreamServer = socketserver.UnixStreamServer if os.name == 'posix' \\\n    else socketserver.TCPServer\n",
                    "rendered": {
                      "text": "DEFAULT_LOGLEVEL = logging.ERROR  #: default level if no logger passed (ERROR)\nTRACE_LEVEL = 1\nlogging.addLevelName(TRACE_LEVEL, 'TRACE')\nDEFAULT_SSH_DIRECTORY = '~/.ssh'\n\n_StreamServer = socketserver.UnixStreamServer if os.name == 'posix' \\\n    else socketserver.TCPServer\n",
                      "markdown": "`DEFAULT_LOGLEVEL = logging.ERROR  #: default level if no logger passed (ERROR)\nTRACE_LEVEL = 1\nlogging.addLevelName(TRACE_LEVEL, 'TRACE')\nDEFAULT_SSH_DIRECTORY = '~/.ssh'\n\n_StreamServer = socketserver.UnixStreamServer if os.name == 'posix' \\\n    else socketserver.TCPServer\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 9,
                  "endLine": 54,
                  "endColumn": 20,
                  "snippet": {
                    "text": "_DEPRECATIONS = {\n    'ssh_address': 'ssh_address_or_host',\n    'ssh_host': 'ssh_address_or_host',\n    'ssh_private_key': 'ssh_pkey',\n    'raise_exception_if_any_forwarder_have_a_problem': 'mute_exceptions'\n}\n\n",
                    "rendered": {
                      "text": "_DEPRECATIONS = {\n    'ssh_address': 'ssh_address_or_host',\n    'ssh_host': 'ssh_address_or_host',\n    'ssh_private_key': 'ssh_pkey',\n    'raise_exception_if_any_forwarder_have_a_problem': 'mute_exceptions'\n}\n\n",
                      "markdown": "`_DEPRECATIONS = {\n    'ssh_address': 'ssh_address_or_host',\n    'ssh_host': 'ssh_address_or_host',\n    'ssh_private_key': 'ssh_pkey',\n    'raise_exception_if_any_forwarder_have_a_problem': 'mute_exceptions'\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1028,
                  "startColumn": 30,
                  "endLine": 1028,
                  "endColumn": 38,
                  "snippet": {
                    "text": "            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n                                      proxycommand else None)\n            if compression is None:\n                compression = hostname_info.get('compression', '')\n                compression = True if compression.upper() == 'YES' else False\n        except IOError:\n            if logger:\n",
                    "rendered": {
                      "text": "            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n                                      proxycommand else None)\n            if compression is None:\n                compression = hostname_info.get('compression', '')\n                compression = True if compression.upper() == 'YES' else False\n        except IOError:\n            if logger:\n",
                      "markdown": "`            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n                                      proxycommand else None)\n            if compression is None:\n                compression = hostname_info.get('compression', '')\n                compression = True if compression.upper() == 'YES' else False\n        except IOError:\n            if logger:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1024,
                  "startColumn": 27,
                  "endLine": 1024,
                  "endColumn": 35,
                  "snippet": {
                    "text": "            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n                                      proxycommand else None)\n            if compression is None:\n",
                    "rendered": {
                      "text": "            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n                                      proxycommand else None)\n            if compression is None:\n",
                      "markdown": "`            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n                                      proxycommand else None)\n            if compression is None:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1022,
                  "startColumn": 35,
                  "endLine": 1022,
                  "endColumn": 43,
                  "snippet": {
                    "text": "                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n",
                    "rendered": {
                      "text": "                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n",
                      "markdown": "`                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n            ssh_proxy = ssh_proxy or (paramiko.ProxyCommand(proxycommand) if\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1021,
                  "startColumn": 42,
                  "endLine": 1021,
                  "endColumn": 50,
                  "snippet": {
                    "text": "                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n",
                    "rendered": {
                      "text": "                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n",
                      "markdown": "`                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1021,
                  "startColumn": 23,
                  "endLine": 1021,
                  "endColumn": 31,
                  "snippet": {
                    "text": "                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n",
                    "rendered": {
                      "text": "                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n",
                      "markdown": "`                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n\n            proxycommand = hostname_info.get('proxycommand')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1019,
                  "startColumn": 16,
                  "endLine": 1019,
                  "endColumn": 24,
                  "snippet": {
                    "text": "            )\n            ssh_pkey = (\n                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n",
                    "rendered": {
                      "text": "            )\n            ssh_pkey = (\n                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n",
                      "markdown": "`            )\n            ssh_pkey = (\n                ssh_pkey or\n                hostname_info.get('identityfile', [None])[0]\n            )\n            ssh_host = hostname_info.get('hostname')\n            ssh_port = ssh_port or hostname_info.get('port')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1015,
                  "startColumn": 16,
                  "endLine": 1015,
                  "endColumn": 24,
                  "snippet": {
                    "text": "            # last resort: use the 'login name' of the user\n            ssh_username = (\n                ssh_username or\n                hostname_info.get('user')\n            )\n            ssh_pkey = (\n                ssh_pkey or\n",
                    "rendered": {
                      "text": "            # last resort: use the 'login name' of the user\n            ssh_username = (\n                ssh_username or\n                hostname_info.get('user')\n            )\n            ssh_pkey = (\n                ssh_pkey or\n",
                      "markdown": "`            # last resort: use the 'login name' of the user\n            ssh_username = (\n                ssh_username or\n                hostname_info.get('user')\n            )\n            ssh_pkey = (\n                ssh_pkey or\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1010,
                  "startColumn": 12,
                  "endLine": 1010,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            with open(os.path.expanduser(ssh_config_file), 'r') as f:\n                ssh_config.parse(f)\n            # looks for information for the destination system\n            hostname_info = ssh_config.lookup(ssh_host)\n            # gather settings for user, port and identity file\n            # last resort: use the 'login name' of the user\n            ssh_username = (\n",
                    "rendered": {
                      "text": "            with open(os.path.expanduser(ssh_config_file), 'r') as f:\n                ssh_config.parse(f)\n            # looks for information for the destination system\n            hostname_info = ssh_config.lookup(ssh_host)\n            # gather settings for user, port and identity file\n            # last resort: use the 'login name' of the user\n            ssh_username = (\n",
                      "markdown": "`            with open(os.path.expanduser(ssh_config_file), 'r') as f:\n                ssh_config.parse(f)\n            # looks for information for the destination system\n            hostname_info = ssh_config.lookup(ssh_host)\n            # gather settings for user, port and identity file\n            # last resort: use the 'login name' of the user\n            ssh_username = (\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 512,
                  "startColumn": 18,
                  "endLine": 512,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    Keyword Arguments:\n\n        ssh_address_or_host (tuple or str):\n            IP or hostname of ``REMOTE GATEWAY``. It may be a two-element\n            tuple (``str``, ``int``) representing IP and port respectively,\n            or a ``str`` representing the IP address only\n\n",
                    "rendered": {
                      "text": "    Keyword Arguments:\n\n        ssh_address_or_host (tuple or str):\n            IP or hostname of ``REMOTE GATEWAY``. It may be a two-element\n            tuple (``str``, ``int``) representing IP and port respectively,\n            or a ``str`` representing the IP address only\n\n",
                      "markdown": "`    Keyword Arguments:\n\n        ssh_address_or_host (tuple or str):\n            IP or hostname of ``REMOTE GATEWAY``. It may be a two-element\n            tuple (``str``, ``int``) representing IP and port respectively,\n            or a ``str`` representing the IP address only\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 781,
                  "startColumn": 32,
                  "endLine": 781,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        \"\"\"\n        skip_tunnel_checkup = self.skip_tunnel_checkup\n        try:\n            # force tunnel check at this point\n            self.skip_tunnel_checkup = False\n            for _srv in self._server_list:\n                self._check_tunnel(_srv)\n",
                    "rendered": {
                      "text": "        \"\"\"\n        skip_tunnel_checkup = self.skip_tunnel_checkup\n        try:\n            # force tunnel check at this point\n            self.skip_tunnel_checkup = False\n            for _srv in self._server_list:\n                self._check_tunnel(_srv)\n",
                      "markdown": "`        \"\"\"\n        skip_tunnel_checkup = self.skip_tunnel_checkup\n        try:\n            # force tunnel check at this point\n            self.skip_tunnel_checkup = False\n            for _srv in self._server_list:\n                self._check_tunnel(_srv)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 619,
                  "startColumn": 55,
                  "endLine": 619,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            IP and port of the remote side of the tunnel.\n\n        remote_bind_addresses (list[tuple]):\n            In case more than one tunnel is established at once, a list\n            of tuples (in the same format as ``remote_bind_address``)\n            can be specified, such as [(ip1, port_1), (ip_2, port2), ...]\n\n",
                    "rendered": {
                      "text": "            IP and port of the remote side of the tunnel.\n\n        remote_bind_addresses (list[tuple]):\n            In case more than one tunnel is established at once, a list\n            of tuples (in the same format as ``remote_bind_address``)\n            can be specified, such as [(ip1, port_1), (ip_2, port2), ...]\n\n",
                      "markdown": "`            IP and port of the remote side of the tunnel.\n\n        remote_bind_addresses (list[tuple]):\n            In case more than one tunnel is established at once, a list\n            of tuples (in the same format as ``remote_bind_address``)\n            can be specified, such as [(ip1, port_1), (ip_2, port2), ...]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 606,
                  "startColumn": 55,
                  "endLine": 606,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                address\n\n        local_bind_addresses (list[tuple]):\n            In case more than one tunnel is established at once, a list\n            of tuples (in the same format as ``local_bind_address``)\n            can be specified, such as [(ip1, port_1), (ip_2, port2), ...]\n\n",
                    "rendered": {
                      "text": "                address\n\n        local_bind_addresses (list[tuple]):\n            In case more than one tunnel is established at once, a list\n            of tuples (in the same format as ``local_bind_address``)\n            can be specified, such as [(ip1, port_1), (ip_2, port2), ...]\n\n",
                      "markdown": "`                address\n\n        local_bind_addresses (list[tuple]):\n            In case more than one tunnel is established at once, a list\n            of tuples (in the same format as ``local_bind_address``)\n            can be specified, such as [(ip1, port_1), (ip_2, port2), ...]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1898,
                  "startColumn": 24,
                  "endLine": 1898,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        -v (verbose), up to 3 (-vvv) to raise loglevel from ERROR to DEBUG\n        -V (version)\n        -x (proxy), ProxyCommand's IP:PORT, may be gathered from config file\n        -c (ssh_config), ssh configuration file (defaults to SSH_CONFIG_FILE)\n        -z (compress)\n        -n (noagent), disable looking for keys from an Agent\n        -d (host_pkey_directories), look for keys on these folders\n",
                    "rendered": {
                      "text": "        -v (verbose), up to 3 (-vvv) to raise loglevel from ERROR to DEBUG\n        -V (version)\n        -x (proxy), ProxyCommand's IP:PORT, may be gathered from config file\n        -c (ssh_config), ssh configuration file (defaults to SSH_CONFIG_FILE)\n        -z (compress)\n        -n (noagent), disable looking for keys from an Agent\n        -d (host_pkey_directories), look for keys on these folders\n",
                      "markdown": "`        -v (verbose), up to 3 (-vvv) to raise loglevel from ERROR to DEBUG\n        -V (version)\n        -x (proxy), ProxyCommand's IP:PORT, may be gathered from config file\n        -c (ssh_config), ssh configuration file (defaults to SSH_CONFIG_FILE)\n        -z (compress)\n        -n (noagent), disable looking for keys from an Agent\n        -d (host_pkey_directories), look for keys on these folders\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1875,
                  "startColumn": 39,
                  "endLine": 1875,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        nargs='*',\n        dest='host_pkey_directories',\n        metavar='FOLDER',\n        help='List of directories where SSH pkeys (in the format `id_*`) '\n             'may be found'\n    )\n    return vars(parser.parse_args(args))\n",
                    "rendered": {
                      "text": "        nargs='*',\n        dest='host_pkey_directories',\n        metavar='FOLDER',\n        help='List of directories where SSH pkeys (in the format `id_*`) '\n             'may be found'\n    )\n    return vars(parser.parse_args(args))\n",
                      "markdown": "`        nargs='*',\n        dest='host_pkey_directories',\n        metavar='FOLDER',\n        help='List of directories where SSH pkeys (in the format `id_*`) '\n             'may be found'\n    )\n    return vars(parser.parse_args(args))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 46,
                  "endLine": 1867,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        '-n', '--noagent',\n        action='store_false',\n        dest='allow_agent',\n        help='Disable looking for keys from an SSH agent'\n    )\n\n    parser.add_argument(\n",
                    "rendered": {
                      "text": "        '-n', '--noagent',\n        action='store_false',\n        dest='allow_agent',\n        help='Disable looking for keys from an SSH agent'\n    )\n\n    parser.add_argument(\n",
                      "markdown": "`        '-n', '--noagent',\n        action='store_false',\n        dest='allow_agent',\n        help='Disable looking for keys from an SSH agent'\n    )\n\n    parser.add_argument(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1860,
                  "startColumn": 49,
                  "endLine": 1860,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        '-z', '--compress',\n        action='store_true',\n        dest='compression',\n        help='Request server for compression over SSH transport'\n    )\n\n    parser.add_argument(\n",
                    "rendered": {
                      "text": "        '-z', '--compress',\n        action='store_true',\n        dest='compression',\n        help='Request server for compression over SSH transport'\n    )\n\n    parser.add_argument(\n",
                      "markdown": "`        '-z', '--compress',\n        action='store_true',\n        dest='compression',\n        help='Request server for compression over SSH transport'\n    )\n\n    parser.add_argument(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1845,
                  "startColumn": 28,
                  "endLine": 1845,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        type=_bindlist,\n        dest='ssh_proxy',\n        metavar='IP:PORT',\n        help='IP and port of SSH proxy to destination'\n    )\n\n    parser.add_argument(\n",
                    "rendered": {
                      "text": "        type=_bindlist,\n        dest='ssh_proxy',\n        metavar='IP:PORT',\n        help='IP and port of SSH proxy to destination'\n    )\n\n    parser.add_argument(\n",
                      "markdown": "`        type=_bindlist,\n        dest='ssh_proxy',\n        metavar='IP:PORT',\n        help='IP and port of SSH proxy to destination'\n    )\n\n    parser.add_argument(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1790,
                  "startColumn": 29,
                  "endLine": 1790,
                  "endColumn": 33,
                  "snippet": {
                    "text": "             'Elements may also be valid UNIX socket domains: \\n'\n             '/tmp/foo.sock /tmp/bar.sock ... /tmp/baz.sock\\n'\n             'Equivalent to ssh -LPORT:xxxxxxxxx:xxxx, '\n             'being the local IP address optional.\\n'\n             'By default it will listen in all interfaces '\n             '(0.0.0.0) and choose a random port.\\n'\n             'Example: -L :40000'\n",
                    "rendered": {
                      "text": "             'Elements may also be valid UNIX socket domains: \\n'\n             '/tmp/foo.sock /tmp/bar.sock ... /tmp/baz.sock\\n'\n             'Equivalent to ssh -LPORT:xxxxxxxxx:xxxx, '\n             'being the local IP address optional.\\n'\n             'By default it will listen in all interfaces '\n             '(0.0.0.0) and choose a random port.\\n'\n             'Example: -L :40000'\n",
                      "markdown": "`             'Elements may also be valid UNIX socket domains: \\n'\n             '/tmp/foo.sock /tmp/bar.sock ... /tmp/baz.sock\\n'\n             'Equivalent to ssh -LPORT:xxxxxxxxx:xxxx, '\n             'being the local IP address optional.\\n'\n             'By default it will listen in all interfaces '\n             '(0.0.0.0) and choose a random port.\\n'\n             'Example: -L :40000'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1789,
                  "startColumn": 27,
                  "endLine": 1789,
                  "endColumn": 32,
                  "snippet": {
                    "text": "             'ip_1:port_1 ip_2:port_2 ... ip_n:port_n\\n'\n             'Elements may also be valid UNIX socket domains: \\n'\n             '/tmp/foo.sock /tmp/bar.sock ... /tmp/baz.sock\\n'\n             'Equivalent to ssh -LPORT:xxxxxxxxx:xxxx, '\n             'being the local IP address optional.\\n'\n             'By default it will listen in all interfaces '\n             '(0.0.0.0) and choose a random port.\\n'\n",
                    "rendered": {
                      "text": "             'ip_1:port_1 ip_2:port_2 ... ip_n:port_n\\n'\n             'Elements may also be valid UNIX socket domains: \\n'\n             '/tmp/foo.sock /tmp/bar.sock ... /tmp/baz.sock\\n'\n             'Equivalent to ssh -LPORT:xxxxxxxxx:xxxx, '\n             'being the local IP address optional.\\n'\n             'By default it will listen in all interfaces '\n             '(0.0.0.0) and choose a random port.\\n'\n",
                      "markdown": "`             'ip_1:port_1 ip_2:port_2 ... ip_n:port_n\\n'\n             'Elements may also be valid UNIX socket domains: \\n'\n             '/tmp/foo.sock /tmp/bar.sock ... /tmp/baz.sock\\n'\n             'Equivalent to ssh -LPORT:xxxxxxxxx:xxxx, '\n             'being the local IP address optional.\\n'\n             'By default it will listen in all interfaces '\n             '(0.0.0.0) and choose a random port.\\n'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1774,
                  "startColumn": 27,
                  "endLine": 1774,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        dest='remote_bind_addresses',\n        help='Remote bind address sequence: '\n             'ip_1:port_1 ip_2:port_2 ... ip_n:port_n\\n'\n             'Equivalent to ssh -Lxxxx:IP_ADDRESS:PORT\\n'\n             'If port is omitted, defaults to 22.\\n'\n             'Example: -R 10.10.10.10: 10.10.10.10:5900'\n    )\n",
                    "rendered": {
                      "text": "        dest='remote_bind_addresses',\n        help='Remote bind address sequence: '\n             'ip_1:port_1 ip_2:port_2 ... ip_n:port_n\\n'\n             'Equivalent to ssh -Lxxxx:IP_ADDRESS:PORT\\n'\n             'If port is omitted, defaults to 22.\\n'\n             'Example: -R 10.10.10.10: 10.10.10.10:5900'\n    )\n",
                      "markdown": "`        dest='remote_bind_addresses',\n        help='Remote bind address sequence: '\n             'ip_1:port_1 ip_2:port_2 ... ip_n:port_n\\n'\n             'Equivalent to ssh -Lxxxx:IP_ADDRESS:PORT\\n'\n             'If port is omitted, defaults to 22.\\n'\n             'Example: -R 10.10.10.10: 10.10.10.10:5900'\n    )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1737,
                  "startColumn": 43,
                  "endLine": 1737,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    parser.add_argument(\n        'ssh_address',\n        type=str,\n        help='SSH server IP address (GW for SSH tunnels)\\n'\n             'set with \"-- ssh_address\" if immediately after '\n             '-R or -L'\n    )\n",
                    "rendered": {
                      "text": "    parser.add_argument(\n        'ssh_address',\n        type=str,\n        help='SSH server IP address (GW for SSH tunnels)\\n'\n             'set with \"-- ssh_address\" if immediately after '\n             '-R or -L'\n    )\n",
                      "markdown": "`    parser.add_argument(\n        'ssh_address',\n        type=str,\n        help='SSH server IP address (GW for SSH tunnels)\\n'\n             'set with \"-- ssh_address\" if immediately after '\n             '-R or -L'\n    )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1737,
                  "startColumn": 24,
                  "endLine": 1737,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    parser.add_argument(\n        'ssh_address',\n        type=str,\n        help='SSH server IP address (GW for SSH tunnels)\\n'\n             'set with \"-- ssh_address\" if immediately after '\n             '-R or -L'\n    )\n",
                    "rendered": {
                      "text": "    parser.add_argument(\n        'ssh_address',\n        type=str,\n        help='SSH server IP address (GW for SSH tunnels)\\n'\n             'set with \"-- ssh_address\" if immediately after '\n             '-R or -L'\n    )\n",
                      "markdown": "`    parser.add_argument(\n        'ssh_address',\n        type=str,\n        help='SSH server IP address (GW for SSH tunnels)\\n'\n             'set with \"-- ssh_address\" if immediately after '\n             '-R or -L'\n    )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1729,
                  "startColumn": 32,
                  "endLine": 1729,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    Parse arguments directly passed from CLI\n    \"\"\"\n    parser = argparse.ArgumentParser(\n        description='Pure python ssh tunnel utils\\n'\n                    'Version {0}'.format(__version__),\n        formatter_class=argparse.RawTextHelpFormatter\n    )\n",
                    "rendered": {
                      "text": "    Parse arguments directly passed from CLI\n    \"\"\"\n    parser = argparse.ArgumentParser(\n        description='Pure python ssh tunnel utils\\n'\n                    'Version {0}'.format(__version__),\n        formatter_class=argparse.RawTextHelpFormatter\n    )\n",
                      "markdown": "`    Parse arguments directly passed from CLI\n    \"\"\"\n    parser = argparse.ArgumentParser(\n        description='Pure python ssh tunnel utils\\n'\n                    'Version {0}'.format(__version__),\n        formatter_class=argparse.RawTextHelpFormatter\n    )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1631,
                  "startColumn": 24,
                  "endLine": 1631,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n    Arguments:\n        destination (Optional[tuple]):\n            SSH server's IP address and port in the format\n            (``ssh_address``, ``ssh_port``)\n\n    Keyword Arguments:\n",
                    "rendered": {
                      "text": "\n    Arguments:\n        destination (Optional[tuple]):\n            SSH server's IP address and port in the format\n            (``ssh_address``, ``ssh_port``)\n\n    Keyword Arguments:\n",
                      "markdown": "`\n    Arguments:\n        destination (Optional[tuple]):\n            SSH server's IP address and port in the format\n            (``ssh_address``, ``ssh_port``)\n\n    Keyword Arguments:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1631,
                  "startColumn": 11,
                  "endLine": 1631,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n    Arguments:\n        destination (Optional[tuple]):\n            SSH server's IP address and port in the format\n            (``ssh_address``, ``ssh_port``)\n\n    Keyword Arguments:\n",
                    "rendered": {
                      "text": "\n    Arguments:\n        destination (Optional[tuple]):\n            SSH server's IP address and port in the format\n            (``ssh_address``, ``ssh_port``)\n\n    Keyword Arguments:\n",
                      "markdown": "`\n    Arguments:\n        destination (Optional[tuple]):\n            SSH server's IP address and port in the format\n            (``ssh_address``, ``ssh_port``)\n\n    Keyword Arguments:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1627,
                  "startColumn": 11,
                  "endLine": 1627,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\ndef open_tunnel(*args, **kwargs):\n    \"\"\"\n    Open an SSH Tunnel, wrapper for :class:`SSHTunnelForwarder`\n\n    Arguments:\n        destination (Optional[tuple]):\n",
                    "rendered": {
                      "text": "\ndef open_tunnel(*args, **kwargs):\n    \"\"\"\n    Open an SSH Tunnel, wrapper for :class:`SSHTunnelForwarder`\n\n    Arguments:\n        destination (Optional[tuple]):\n",
                      "markdown": "`\ndef open_tunnel(*args, **kwargs):\n    \"\"\"\n    Open an SSH Tunnel, wrapper for :class:`SSHTunnelForwarder`\n\n    Arguments:\n        destination (Optional[tuple]):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1546,
                  "startColumn": 41,
                  "endLine": 1546,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n    @property\n    def is_active(self):\n        \"\"\" Return True if the underlying SSH transport is up \"\"\"\n        if (\n            '_transport' in self.__dict__ and\n            self._transport.is_active()\n",
                    "rendered": {
                      "text": "\n    @property\n    def is_active(self):\n        \"\"\" Return True if the underlying SSH transport is up \"\"\"\n        if (\n            '_transport' in self.__dict__ and\n            self._transport.is_active()\n",
                      "markdown": "`\n    @property\n    def is_active(self):\n        \"\"\" Return True if the underlying SSH transport is up \"\"\"\n        if (\n            '_transport' in self.__dict__ and\n            self._transport.is_active()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1521,
                  "startColumn": 36,
                  "endLine": 1521,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    @property\n    def local_bind_hosts(self):\n        \"\"\"\n        Return a list containing the IP addresses listening for the tunnels\n        \"\"\"\n        self._check_is_started()\n        return [_server.local_host for _server in self._server_list if\n",
                    "rendered": {
                      "text": "    @property\n    def local_bind_hosts(self):\n        \"\"\"\n        Return a list containing the IP addresses listening for the tunnels\n        \"\"\"\n        self._check_is_started()\n        return [_server.local_host for _server in self._server_list if\n",
                      "markdown": "`    @property\n    def local_bind_hosts(self):\n        \"\"\"\n        Return a list containing the IP addresses listening for the tunnels\n        \"\"\"\n        self._check_is_started()\n        return [_server.local_host for _server in self._server_list if\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1474,
                  "startColumn": 37,
                  "endLine": 1474,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                                      .format(_srv.local_address, repr(e)))\n        self.is_alive = False\n        if self.is_active:\n            self.logger.info('Closing ssh transport')\n            self._transport.close()\n            self._transport.stop_thread()\n        self.logger.debug('Transport is closed')\n",
                    "rendered": {
                      "text": "                                      .format(_srv.local_address, repr(e)))\n        self.is_alive = False\n        if self.is_active:\n            self.logger.info('Closing ssh transport')\n            self._transport.close()\n            self._transport.stop_thread()\n        self.logger.debug('Transport is closed')\n",
                      "markdown": "`                                      .format(_srv.local_address, repr(e)))\n        self.is_alive = False\n        if self.is_active:\n            self.logger.info('Closing ssh transport')\n            self._transport.close()\n            self._transport.stop_thread()\n        self.logger.debug('Transport is closed')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1453,
                  "startColumn": 37,
                  "endLine": 1453,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            self.logger.warning(e)\n        if force and self.is_active:\n            # don't wait connections\n            self.logger.info('Closing ssh transport')\n            self._transport.close()\n            self._transport.stop_thread()\n        for _srv in self._server_list:\n",
                    "rendered": {
                      "text": "            self.logger.warning(e)\n        if force and self.is_active:\n            # don't wait connections\n            self.logger.info('Closing ssh transport')\n            self._transport.close()\n            self._transport.stop_thread()\n        for _srv in self._server_list:\n",
                      "markdown": "`            self.logger.warning(e)\n        if force and self.is_active:\n            # don't wait connections\n            self.logger.info('Closing ssh transport')\n            self._transport.close()\n            self._transport.stop_thread()\n        for _srv in self._server_list:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 44,
                  "endLine": 1431,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n    def _serve_forever_wrapper(self, _srv, poll_interval=0.1):\n        \"\"\"\n        Wrapper for the server created for a SSH forward\n        \"\"\"\n        self.logger.info('Opening tunnel: {0} <> {1}'.format(\n            address_to_str(_srv.local_address),\n",
                    "rendered": {
                      "text": "\n    def _serve_forever_wrapper(self, _srv, poll_interval=0.1):\n        \"\"\"\n        Wrapper for the server created for a SSH forward\n        \"\"\"\n        self.logger.info('Opening tunnel: {0} <> {1}'.format(\n            address_to_str(_srv.local_address),\n",
                      "markdown": "`\n    def _serve_forever_wrapper(self, _srv, poll_interval=0.1):\n        \"\"\"\n        Wrapper for the server created for a SSH forward\n        \"\"\"\n        self.logger.info('Opening tunnel: {0} <> {1}'.format(\n            address_to_str(_srv.local_address),\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1395,
                  "startColumn": 49,
                  "endLine": 1395,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    def _connect_to_gateway(self):\n        \"\"\"\n        Open connection to SSH gateway\n         - First try with all keys loaded from an SSH agent (if allowed)\n         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n        \"\"\"\n",
                    "rendered": {
                      "text": "    def _connect_to_gateway(self):\n        \"\"\"\n        Open connection to SSH gateway\n         - First try with all keys loaded from an SSH agent (if allowed)\n         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n        \"\"\"\n",
                      "markdown": "`    def _connect_to_gateway(self):\n        \"\"\"\n        Open connection to SSH gateway\n         - First try with all keys loaded from an SSH agent (if allowed)\n         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1394,
                  "startColumn": 26,
                  "endLine": 1394,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n    def _connect_to_gateway(self):\n        \"\"\"\n        Open connection to SSH gateway\n         - First try with all keys loaded from an SSH agent (if allowed)\n         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n",
                    "rendered": {
                      "text": "\n    def _connect_to_gateway(self):\n        \"\"\"\n        Open connection to SSH gateway\n         - First try with all keys loaded from an SSH agent (if allowed)\n         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n",
                      "markdown": "`\n    def _connect_to_gateway(self):\n        \"\"\"\n        Open connection to SSH gateway\n         - First try with all keys loaded from an SSH agent (if allowed)\n         - Then with those passed directly or read from ~/.ssh/config\n         - As last resort, try with a provided password\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1368,
                  "startColumn": 28,
                  "endLine": 1368,
                  "endColumn": 34,
                  "snippet": {
                    "text": "              acknowledged, then a ``FIN`` packet is sent and never\n              acknowledged... weird)\n            - we try to shutdown: it will not succeed until ``FIN_WAIT_2`` and\n              ``CLOSE_WAIT`` time out.\n\n        .. note::\n            Handle these scenarios with :attr:`.tunnel_is_up`: if False, server\n",
                    "rendered": {
                      "text": "              acknowledged, then a ``FIN`` packet is sent and never\n              acknowledged... weird)\n            - we try to shutdown: it will not succeed until ``FIN_WAIT_2`` and\n              ``CLOSE_WAIT`` time out.\n\n        .. note::\n            Handle these scenarios with :attr:`.tunnel_is_up`: if False, server\n",
                      "markdown": "`              acknowledged, then a ``FIN`` packet is sent and never\n              acknowledged... weird)\n            - we try to shutdown: it will not succeed until ``FIN_WAIT_2`` and\n              ``CLOSE_WAIT`` time out.\n\n        .. note::\n            Handle these scenarios with :attr:`.tunnel_is_up`: if False, server\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1332,
                  "startColumn": 62,
                  "endLine": 1332,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        self._create_tunnels()\n        if not self.is_active:\n            self._raise(BaseSSHTunnelForwarderError,\n                        reason='Could not establish session to SSH gateway')\n        for _srv in self._server_list:\n            thread = threading.Thread(\n                target=self._serve_forever_wrapper,\n",
                    "rendered": {
                      "text": "        self._create_tunnels()\n        if not self.is_active:\n            self._raise(BaseSSHTunnelForwarderError,\n                        reason='Could not establish session to SSH gateway')\n        for _srv in self._server_list:\n            thread = threading.Thread(\n                target=self._serve_forever_wrapper,\n",
                      "markdown": "`        self._create_tunnels()\n        if not self.is_active:\n            self._raise(BaseSSHTunnelForwarderError,\n                        reason='Could not establish session to SSH gateway')\n        for _srv in self._server_list:\n            thread = threading.Thread(\n                target=self._serve_forever_wrapper,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1325,
                  "startColumn": 21,
                  "endLine": 1325,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        return ssh_pkey\n\n    def start(self):\n        \"\"\" Start the SSH tunnels \"\"\"\n        if self.is_alive:\n            self.logger.warning('Already started!')\n            return\n",
                    "rendered": {
                      "text": "        return ssh_pkey\n\n    def start(self):\n        \"\"\" Start the SSH tunnels \"\"\"\n        if self.is_alive:\n            self.logger.warning('Already started!')\n            return\n",
                      "markdown": "`        return ssh_pkey\n\n    def start(self):\n        \"\"\" Start the SSH tunnels \"\"\"\n        if self.is_alive:\n            self.logger.warning('Already started!')\n            return\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1285,
                  "startColumn": 11,
                  "endLine": 1285,
                  "endColumn": 16,
                  "snippet": {
                    "text": "                              key_type=None,\n                              logger=None):\n        \"\"\"\n        Get SSH Public key from a private key file, given an optional password\n\n        Arguments:\n            pkey_file (str):\n",
                    "rendered": {
                      "text": "                              key_type=None,\n                              logger=None):\n        \"\"\"\n        Get SSH Public key from a private key file, given an optional password\n\n        Arguments:\n            pkey_file (str):\n",
                      "markdown": "`                              key_type=None,\n                              logger=None):\n        \"\"\"\n        Get SSH Public key from a private key file, given an optional password\n\n        Arguments:\n            pkey_file (str):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1229,
                  "startColumn": 38,
                  "endLine": 1229,
                  "endColumn": 43,
                  "snippet": {
                    "text": "            try:\n                self._make_ssh_forward_server(rem, loc)\n            except BaseSSHTunnelForwarderError as e:\n                msg = 'Problem setting SSH Forwarder up: {0}'.format(e.value)\n                self.logger.error(msg)\n\n    @staticmethod\n",
                    "rendered": {
                      "text": "            try:\n                self._make_ssh_forward_server(rem, loc)\n            except BaseSSHTunnelForwarderError as e:\n                msg = 'Problem setting SSH Forwarder up: {0}'.format(e.value)\n                self.logger.error(msg)\n\n    @staticmethod\n",
                      "markdown": "`            try:\n                self._make_ssh_forward_server(rem, loc)\n            except BaseSSHTunnelForwarderError as e:\n                msg = 'Problem setting SSH Forwarder up: {0}'.format(e.value)\n                self.logger.error(msg)\n\n    @staticmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1216,
                  "startColumn": 40,
                  "endLine": 1216,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            try:\n                self._connect_to_gateway()\n            except socket.gaierror:  # raised by paramiko.Transport\n                msg = 'Could not resolve IP address for {0}, aborting!' \\\n                    .format(self.ssh_host)\n                self.logger.error(msg)\n                return\n",
                    "rendered": {
                      "text": "            try:\n                self._connect_to_gateway()\n            except socket.gaierror:  # raised by paramiko.Transport\n                msg = 'Could not resolve IP address for {0}, aborting!' \\\n                    .format(self.ssh_host)\n                self.logger.error(msg)\n                return\n",
                      "markdown": "`            try:\n                self._connect_to_gateway()\n            except socket.gaierror:  # raised by paramiko.Transport\n                msg = 'Could not resolve IP address for {0}, aborting!' \\\n                    .format(self.ssh_host)\n                self.logger.error(msg)\n                return\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1210,
                  "startColumn": 29,
                  "endLine": 1210,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n    def _create_tunnels(self):\n        \"\"\"\n        Create SSH tunnels on top of a transport to the remote gateway\n        \"\"\"\n        if not self.is_active:\n            try:\n",
                    "rendered": {
                      "text": "\n    def _create_tunnels(self):\n        \"\"\"\n        Create SSH tunnels on top of a transport to the remote gateway\n        \"\"\"\n        if not self.is_active:\n            try:\n",
                      "markdown": "`\n    def _create_tunnels(self):\n        \"\"\"\n        Create SSH tunnels on top of a transport to the remote gateway\n        \"\"\"\n        if not self.is_active:\n            try:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1210,
                  "startColumn": 14,
                  "endLine": 1210,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n    def _create_tunnels(self):\n        \"\"\"\n        Create SSH tunnels on top of a transport to the remote gateway\n        \"\"\"\n        if not self.is_active:\n            try:\n",
                    "rendered": {
                      "text": "\n    def _create_tunnels(self):\n        \"\"\"\n        Create SSH tunnels on top of a transport to the remote gateway\n        \"\"\"\n        if not self.is_active:\n            try:\n",
                      "markdown": "`\n    def _create_tunnels(self):\n        \"\"\"\n        Create SSH tunnels on top of a transport to the remote gateway\n        \"\"\"\n        if not self.is_active:\n            try:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1179,
                  "startColumn": 22,
                  "endLine": 1179,
                  "endColumn": 27,
                  "snippet": {
                    "text": "            self.logger.error(repr(exception(reason)))\n\n    def _get_transport(self):\n        \"\"\" Return the SSH transport to the remote gateway \"\"\"\n        if self.ssh_proxy:\n            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n",
                    "rendered": {
                      "text": "            self.logger.error(repr(exception(reason)))\n\n    def _get_transport(self):\n        \"\"\" Return the SSH transport to the remote gateway \"\"\"\n        if self.ssh_proxy:\n            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n",
                      "markdown": "`            self.logger.error(repr(exception(reason)))\n\n    def _get_transport(self):\n        \"\"\" Return the SSH transport to the remote gateway \"\"\"\n        if self.ssh_proxy:\n            if isinstance(self.ssh_proxy, paramiko.proxy.ProxyCommand):\n                proxy_repr = repr(self.ssh_proxy.cmd[1])\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1073,
                  "startColumn": 52,
                  "endLine": 1073,
                  "endColumn": 57,
                  "snippet": {
                    "text": "            logger (Optional[logging.Logger])\n\n            host_pkey_directories (Optional[list[str]]):\n                List of local directories where host SSH pkeys in the format\n                \"id_*\" are searched. For example, ['~/.ssh']\n\n                .. versionadded:: 0.1.0\n",
                    "rendered": {
                      "text": "            logger (Optional[logging.Logger])\n\n            host_pkey_directories (Optional[list[str]]):\n                List of local directories where host SSH pkeys in the format\n                \"id_*\" are searched. For example, ['~/.ssh']\n\n                .. versionadded:: 0.1.0\n",
                      "markdown": "`            logger (Optional[logging.Logger])\n\n            host_pkey_directories (Optional[list[str]]):\n                List of local directories where host SSH pkeys in the format\n                \"id_*\" are searched. For example, ['~/.ssh']\n\n                .. versionadded:: 0.1.0\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1066,
                  "startColumn": 43,
                  "endLine": 1066,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    @staticmethod\n    def get_keys(logger=None, host_pkey_directories=None, allow_agent=False):\n        \"\"\"\n        Load public keys from any available SSH agent or local\n        .ssh directory.\n\n        Arguments:\n",
                    "rendered": {
                      "text": "    @staticmethod\n    def get_keys(logger=None, host_pkey_directories=None, allow_agent=False):\n        \"\"\"\n        Load public keys from any available SSH agent or local\n        .ssh directory.\n\n        Arguments:\n",
                      "markdown": "`    @staticmethod\n    def get_keys(logger=None, host_pkey_directories=None, allow_agent=False):\n        \"\"\"\n        Load public keys from any available SSH agent or local\n        .ssh directory.\n\n        Arguments:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1049,
                  "startColumn": 47,
                  "endLine": 1049,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n    @staticmethod\n    def get_agent_keys(logger=None):\n        \"\"\" Load public keys from any available SSH agent\n\n        Arguments:\n            logger (Optional[logging.Logger])\n",
                    "rendered": {
                      "text": "\n    @staticmethod\n    def get_agent_keys(logger=None):\n        \"\"\" Load public keys from any available SSH agent\n\n        Arguments:\n            logger (Optional[logging.Logger])\n",
                      "markdown": "`\n    @staticmethod\n    def get_agent_keys(logger=None):\n        \"\"\" Load public keys from any available SSH agent\n\n        Arguments:\n            logger (Optional[logging.Logger])\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1038,
                  "startColumn": 48,
                  "endLine": 1038,
                  "endColumn": 53,
                  "snippet": {
                    "text": "                )\n        except (AttributeError, TypeError):  # ssh_config_file is None\n            if logger:\n                logger.info('Skipping loading of ssh configuration file')\n        finally:\n            return (ssh_host,\n                    ssh_username or getpass.getuser(),\n",
                    "rendered": {
                      "text": "                )\n        except (AttributeError, TypeError):  # ssh_config_file is None\n            if logger:\n                logger.info('Skipping loading of ssh configuration file')\n        finally:\n            return (ssh_host,\n                    ssh_username or getpass.getuser(),\n",
                      "markdown": "`                )\n        except (AttributeError, TypeError):  # ssh_config_file is None\n            if logger:\n                logger.info('Skipping loading of ssh configuration file')\n        finally:\n            return (ssh_host,\n                    ssh_username or getpass.getuser(),\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1033,
                  "startColumn": 35,
                  "endLine": 1033,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        except IOError:\n            if logger:\n                logger.warning(\n                    'Could not read SSH configuration file: {0}'\n                    .format(ssh_config_file)\n                )\n        except (AttributeError, TypeError):  # ssh_config_file is None\n",
                    "rendered": {
                      "text": "        except IOError:\n            if logger:\n                logger.warning(\n                    'Could not read SSH configuration file: {0}'\n                    .format(ssh_config_file)\n                )\n        except (AttributeError, TypeError):  # ssh_config_file is None\n",
                      "markdown": "`        except IOError:\n            if logger:\n                logger.warning(\n                    'Could not read SSH configuration file: {0}'\n                    .format(ssh_config_file)\n                )\n        except (AttributeError, TypeError):  # ssh_config_file is None\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 1006,
                  "startColumn": 22,
                  "endLine": 1006,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n        # Try to read SSH_CONFIG_FILE\n        try:\n            # open the ssh config file\n            with open(os.path.expanduser(ssh_config_file), 'r') as f:\n                ssh_config.parse(f)\n            # looks for information for the destination system\n",
                    "rendered": {
                      "text": "\n        # Try to read SSH_CONFIG_FILE\n        try:\n            # open the ssh config file\n            with open(os.path.expanduser(ssh_config_file), 'r') as f:\n                ssh_config.parse(f)\n            # looks for information for the destination system\n",
                      "markdown": "`\n        # Try to read SSH_CONFIG_FILE\n        try:\n            # open the ssh config file\n            with open(os.path.expanduser(ssh_config_file), 'r') as f:\n                ssh_config.parse(f)\n            # looks for information for the destination system\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 899,
                  "startColumn": 54,
                  "endLine": 899,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            set_keepalive=5.0,\n            threaded=True,  # old version False\n            compression=None,\n            allow_agent=True,  # look for keys from an SSH agent\n            host_pkey_directories=None,  # look for keys in ~/.ssh\n            *args,\n            **kwargs  # for backwards compatibility\n",
                    "rendered": {
                      "text": "            set_keepalive=5.0,\n            threaded=True,  # old version False\n            compression=None,\n            allow_agent=True,  # look for keys from an SSH agent\n            host_pkey_directories=None,  # look for keys in ~/.ssh\n            *args,\n            **kwargs  # for backwards compatibility\n",
                      "markdown": "`            set_keepalive=5.0,\n            threaded=True,  # old version False\n            compression=None,\n            allow_agent=True,  # look for keys from an SSH agent\n            host_pkey_directories=None,  # look for keys in ~/.ssh\n            *args,\n            **kwargs  # for backwards compatibility\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 864,
                  "startColumn": 39,
                  "endLine": 864,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            else:\n                self._raise(\n                    BaseSSHTunnelForwarderError,\n                    'Problem setting up ssh {0} <> {1} forwarder. You can '\n                    'suppress this exception by using the `mute_exceptions`'\n                    'argument'.format(address_to_str(local_bind_address),\n                                      address_to_str(remote_address))\n",
                    "rendered": {
                      "text": "            else:\n                self._raise(\n                    BaseSSHTunnelForwarderError,\n                    'Problem setting up ssh {0} <> {1} forwarder. You can '\n                    'suppress this exception by using the `mute_exceptions`'\n                    'argument'.format(address_to_str(local_bind_address),\n                                      address_to_str(remote_address))\n",
                      "markdown": "`            else:\n                self._raise(\n                    BaseSSHTunnelForwarderError,\n                    'Problem setting up ssh {0} <> {1} forwarder. You can '\n                    'suppress this exception by using the `mute_exceptions`'\n                    'argument'.format(address_to_str(local_bind_address),\n                                      address_to_str(remote_address))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 843,
                  "startColumn": 12,
                  "endLine": 843,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n    def _make_ssh_forward_server(self, remote_address, local_bind_address):\n        \"\"\"\n        Make SSH forward proxy Server class\n        \"\"\"\n        _Handler = self._make_ssh_forward_handler_class(remote_address)\n        try:\n",
                    "rendered": {
                      "text": "\n    def _make_ssh_forward_server(self, remote_address, local_bind_address):\n        \"\"\"\n        Make SSH forward proxy Server class\n        \"\"\"\n        _Handler = self._make_ssh_forward_handler_class(remote_address)\n        try:\n",
                      "markdown": "`\n    def _make_ssh_forward_server(self, remote_address, local_bind_address):\n        \"\"\"\n        Make SSH forward proxy Server class\n        \"\"\"\n        _Handler = self._make_ssh_forward_handler_class(remote_address)\n        try:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 826,
                  "startColumn": 12,
                  "endLine": 826,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n    def _make_ssh_forward_handler_class(self, remote_address_):\n        \"\"\"\n        Make SSH Handler class\n        \"\"\"\n        class Handler(_ForwardHandler):\n            remote_address = remote_address_\n",
                    "rendered": {
                      "text": "\n    def _make_ssh_forward_handler_class(self, remote_address_):\n        \"\"\"\n        Make SSH Handler class\n        \"\"\"\n        class Handler(_ForwardHandler):\n            remote_address = remote_address_\n",
                      "markdown": "`\n    def _make_ssh_forward_handler_class(self, remote_address_):\n        \"\"\"\n        Make SSH Handler class\n        \"\"\"\n        class Handler(_ForwardHandler):\n            remote_address = remote_address_\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 765,
                  "startColumn": 73,
                  "endLine": 765,
                  "endColumn": 77,
                  "snippet": {
                    "text": "        try:\n            check_address(target)\n        except ValueError:\n            self.logger.warning('Target must be a tuple (IP, port), where IP '\n                                'is a string (i.e. \"192.168.0.1\") and port is '\n                                'an integer (i.e. 40000). Alternatively '\n                                'target can be a valid UNIX domain socket.')\n",
                    "rendered": {
                      "text": "        try:\n            check_address(target)\n        except ValueError:\n            self.logger.warning('Target must be a tuple (IP, port), where IP '\n                                'is a string (i.e. \"192.168.0.1\") and port is '\n                                'an integer (i.e. 40000). Alternatively '\n                                'target can be a valid UNIX domain socket.')\n",
                      "markdown": "`        try:\n            check_address(target)\n        except ValueError:\n            self.logger.warning('Target must be a tuple (IP, port), where IP '\n                                'is a string (i.e. \"192.168.0.1\") and port is '\n                                'an integer (i.e. 40000). Alternatively '\n                                'target can be a valid UNIX domain socket.')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 754,
                  "startColumn": 70,
                  "endLine": 755,
                  "snippet": {
                    "text": "\n        Arguments:\n            target (tuple):\n                tuple of type (``str``, ``int``) indicating the listen IP\n                address and port\n        Return:\n            boolean\n\n",
                    "rendered": {
                      "text": "\n        Arguments:\n            target (tuple):\n                tuple of type (``str``, ``int``) indicating the listen IP\n                address and port\n        Return:\n            boolean\n\n",
                      "markdown": "`\n        Arguments:\n            target (tuple):\n                tuple of type (``str``, ``int``) indicating the listen IP\n                address and port\n        Return:\n            boolean\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 745,
                  "startColumn": 39,
                  "endLine": 745,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    # This option affects the `ForwardServer` and all his threads\n    daemon_forward_servers = _DAEMON  #: flag tunnel threads in daemon mode\n    # This option affect only `Transport` thread\n    daemon_transport = _DAEMON  #: flag SSH transport thread in daemon mode\n\n    def local_is_up(self, target):\n        \"\"\"\n",
                    "rendered": {
                      "text": "    # This option affects the `ForwardServer` and all his threads\n    daemon_forward_servers = _DAEMON  #: flag tunnel threads in daemon mode\n    # This option affect only `Transport` thread\n    daemon_transport = _DAEMON  #: flag SSH transport thread in daemon mode\n\n    def local_is_up(self, target):\n        \"\"\"\n",
                      "markdown": "`    # This option affects the `ForwardServer` and all his threads\n    daemon_forward_servers = _DAEMON  #: flag tunnel threads in daemon mode\n    # This option affect only `Transport` thread\n    daemon_transport = _DAEMON  #: flag SSH transport thread in daemon mode\n\n    def local_is_up(self, target):\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 692,
                  "startColumn": 39,
                  "endLine": 692,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n        ssh_host (str):\n            Superseded by ``ssh_address_or_host``, tuple of type\n            (str, int) representing the IP and port of ``REMOTE SERVER``\n\n            .. deprecated:: 0.0.4\n\n",
                    "rendered": {
                      "text": "\n        ssh_host (str):\n            Superseded by ``ssh_address_or_host``, tuple of type\n            (str, int) representing the IP and port of ``REMOTE SERVER``\n\n            .. deprecated:: 0.0.4\n\n",
                      "markdown": "`\n        ssh_host (str):\n            Superseded by ``ssh_address_or_host``, tuple of type\n            (str, int) representing the IP and port of ``REMOTE SERVER``\n\n            .. deprecated:: 0.0.4\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 686,
                  "startColumn": 28,
                  "endLine": 686,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n        ssh_address (str):\n            Superseded by ``ssh_address_or_host``, tuple of type (str, int)\n            representing the IP and port of ``REMOTE SERVER``\n\n            .. deprecated:: 0.0.4\n\n",
                    "rendered": {
                      "text": "\n        ssh_address (str):\n            Superseded by ``ssh_address_or_host``, tuple of type (str, int)\n            representing the IP and port of ``REMOTE SERVER``\n\n            .. deprecated:: 0.0.4\n\n",
                      "markdown": "`\n        ssh_address (str):\n            Superseded by ``ssh_address_or_host``, tuple of type (str, int)\n            representing the IP and port of ``REMOTE SERVER``\n\n            .. deprecated:: 0.0.4\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 628,
                  "startColumn": 47,
                  "endLine": 628,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            .. versionadded:: 0.0.4\n\n        allow_agent (boolean):\n            Enable/disable load of keys from an SSH agent\n\n            Default: ``True``\n\n",
                    "rendered": {
                      "text": "            .. versionadded:: 0.0.4\n\n        allow_agent (boolean):\n            Enable/disable load of keys from an SSH agent\n\n            Default: ``True``\n\n",
                      "markdown": "`            .. versionadded:: 0.0.4\n\n        allow_agent (boolean):\n            Enable/disable load of keys from an SSH agent\n\n            Default: ``True``\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 616,
                  "startColumn": 11,
                  "endLine": 616,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n        remote_bind_address (tuple):\n            Remote tuple in the format (``str``, ``int``) representing the\n            IP and port of the remote side of the tunnel.\n\n        remote_bind_addresses (list[tuple]):\n            In case more than one tunnel is established at once, a list\n",
                    "rendered": {
                      "text": "\n        remote_bind_address (tuple):\n            Remote tuple in the format (``str``, ``int``) representing the\n            IP and port of the remote side of the tunnel.\n\n        remote_bind_addresses (list[tuple]):\n            In case more than one tunnel is established at once, a list\n",
                      "markdown": "`\n        remote_bind_address (tuple):\n            Remote tuple in the format (``str``, ``int``) representing the\n            IP and port of the remote side of the tunnel.\n\n        remote_bind_addresses (list[tuple]):\n            In case more than one tunnel is established at once, a list\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 595,
                  "startColumn": 11,
                  "endLine": 595,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n        local_bind_address (tuple):\n            Local tuple in the format (``str``, ``int``) representing the\n            IP and port of the local side of the tunnel. Both elements in\n            the tuple are optional so both ``('', 8000)`` and\n            ``('10.0.0.1', )`` are valid values\n\n",
                    "rendered": {
                      "text": "\n        local_bind_address (tuple):\n            Local tuple in the format (``str``, ``int``) representing the\n            IP and port of the local side of the tunnel. Both elements in\n            the tuple are optional so both ``('', 8000)`` and\n            ``('10.0.0.1', )`` are valid values\n\n",
                      "markdown": "`\n        local_bind_address (tuple):\n            Local tuple in the format (``str``, ``int``) representing the\n            IP and port of the local side of the tunnel. Both elements in\n            the tuple are optional so both ``('', 8000)`` and\n            ``('10.0.0.1', )`` are valid values\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 587,
                  "startColumn": 15,
                  "endLine": 587,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            ``ssh_config_file`` contains a ``ProxyCommand`` directive\n            that matches the specified ``ssh_address_or_host``,\n            a :class:`paramiko.proxy.ProxyCommand` object will be created where\n            all SSH traffic will be passed through\n\n            Default: ``True``\n\n",
                    "rendered": {
                      "text": "            ``ssh_config_file`` contains a ``ProxyCommand`` directive\n            that matches the specified ``ssh_address_or_host``,\n            a :class:`paramiko.proxy.ProxyCommand` object will be created where\n            all SSH traffic will be passed through\n\n            Default: ``True``\n\n",
                      "markdown": "`            ``ssh_config_file`` contains a ``ProxyCommand`` directive\n            that matches the specified ``ssh_address_or_host``,\n            a :class:`paramiko.proxy.ProxyCommand` object will be created where\n            all SSH traffic will be passed through\n\n            Default: ``True``\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 583,
                  "startColumn": 26,
                  "endLine": 583,
                  "endColumn": 31,
                  "snippet": {
                    "text": "            .. versionadded:: 0.0.5\n\n        ssh_proxy_enabled (boolean):\n            Enable/disable SSH proxy. If True and user's\n            ``ssh_config_file`` contains a ``ProxyCommand`` directive\n            that matches the specified ``ssh_address_or_host``,\n            a :class:`paramiko.proxy.ProxyCommand` object will be created where\n",
                    "rendered": {
                      "text": "            .. versionadded:: 0.0.5\n\n        ssh_proxy_enabled (boolean):\n            Enable/disable SSH proxy. If True and user's\n            ``ssh_config_file`` contains a ``ProxyCommand`` directive\n            that matches the specified ``ssh_address_or_host``,\n            a :class:`paramiko.proxy.ProxyCommand` object will be created where\n",
                      "markdown": "`            .. versionadded:: 0.0.5\n\n        ssh_proxy_enabled (boolean):\n            Enable/disable SSH proxy. If True and user's\n            ``ssh_config_file`` contains a ``ProxyCommand`` directive\n            that matches the specified ``ssh_address_or_host``,\n            a :class:`paramiko.proxy.ProxyCommand` object will be created where\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 575,
                  "startColumn": 56,
                  "endLine": 575,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            for more information.\n\n            It is also possible to specify the proxy address as a tuple of\n            type (``str``, ``int``) representing proxy's IP and port\n\n            .. note::\n                Ignored if ``ssh_proxy_enabled`` is False\n",
                    "rendered": {
                      "text": "            for more information.\n\n            It is also possible to specify the proxy address as a tuple of\n            type (``str``, ``int``) representing proxy's IP and port\n\n            .. note::\n                Ignored if ``ssh_proxy_enabled`` is False\n",
                      "markdown": "`            for more information.\n\n            It is also possible to specify the proxy address as a tuple of\n            type (``str``, ``int``) representing proxy's IP and port\n\n            .. note::\n                Ignored if ``ssh_proxy_enabled`` is False\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 567,
                  "startColumn": 27,
                  "endLine": 567,
                  "endColumn": 32,
                  "snippet": {
                    "text": "                may be visible and make your service vulnerable to attacks\n\n        ssh_proxy (socket-like object or tuple):\n            Proxy where all SSH traffic will be passed through.\n            It might be for example a :class:`paramiko.proxy.ProxyCommand`\n            instance.\n            See either the :class:`paramiko.transport.Transport`'s sock\n",
                    "rendered": {
                      "text": "                may be visible and make your service vulnerable to attacks\n\n        ssh_proxy (socket-like object or tuple):\n            Proxy where all SSH traffic will be passed through.\n            It might be for example a :class:`paramiko.proxy.ProxyCommand`\n            instance.\n            See either the :class:`paramiko.transport.Transport`'s sock\n",
                      "markdown": "`                may be visible and make your service vulnerable to attacks\n\n        ssh_proxy (socket-like object or tuple):\n            Proxy where all SSH traffic will be passed through.\n            It might be for example a :class:`paramiko.proxy.ProxyCommand`\n            instance.\n            See either the :class:`paramiko.transport.Transport`'s sock\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 564,
                  "startColumn": 44,
                  "endLine": 564,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n            .. note::\n                Avoid coding secret password directly in the code, since this\n                may be visible and make your service vulnerable to attacks\n\n        ssh_proxy (socket-like object or tuple):\n            Proxy where all SSH traffic will be passed through.\n",
                    "rendered": {
                      "text": "\n            .. note::\n                Avoid coding secret password directly in the code, since this\n                may be visible and make your service vulnerable to attacks\n\n        ssh_proxy (socket-like object or tuple):\n            Proxy where all SSH traffic will be passed through.\n",
                      "markdown": "`\n            .. note::\n                Avoid coding secret password directly in the code, since this\n                may be visible and make your service vulnerable to attacks\n\n        ssh_proxy (socket-like object or tuple):\n            Proxy where all SSH traffic will be passed through.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 551,
                  "startColumn": 11,
                  "endLine": 551,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        ssh_port (int):\n            Optional port number of the SSH service on ``REMOTE GATEWAY``,\n            when `ssh_address_or_host`` is a ``str`` representing the\n            IP part of ``REMOTE GATEWAY``'s address\n\n            Default: 22\n\n",
                    "rendered": {
                      "text": "        ssh_port (int):\n            Optional port number of the SSH service on ``REMOTE GATEWAY``,\n            when `ssh_address_or_host`` is a ``str`` representing the\n            IP part of ``REMOTE GATEWAY``'s address\n\n            Default: 22\n\n",
                      "markdown": "`        ssh_port (int):\n            Optional port number of the SSH service on ``REMOTE GATEWAY``,\n            when `ssh_address_or_host`` is a ``str`` representing the\n            IP part of ``REMOTE GATEWAY``'s address\n\n            Default: 22\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 549,
                  "startColumn": 39,
                  "endLine": 549,
                  "endColumn": 44,
                  "snippet": {
                    "text": "                may be visible and make your service vulnerable to attacks\n\n        ssh_port (int):\n            Optional port number of the SSH service on ``REMOTE GATEWAY``,\n            when `ssh_address_or_host`` is a ``str`` representing the\n            IP part of ``REMOTE GATEWAY``'s address\n\n",
                    "rendered": {
                      "text": "                may be visible and make your service vulnerable to attacks\n\n        ssh_port (int):\n            Optional port number of the SSH service on ``REMOTE GATEWAY``,\n            when `ssh_address_or_host`` is a ``str`` representing the\n            IP part of ``REMOTE GATEWAY``'s address\n\n",
                      "markdown": "`                may be visible and make your service vulnerable to attacks\n\n        ssh_port (int):\n            Optional port number of the SSH service on ``REMOTE GATEWAY``,\n            when `ssh_address_or_host`` is a ``str`` representing the\n            IP part of ``REMOTE GATEWAY``'s address\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 546,
                  "startColumn": 44,
                  "endLine": 546,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n            .. note::\n                Avoid coding secret password directly in the code, since this\n                may be visible and make your service vulnerable to attacks\n\n        ssh_port (int):\n            Optional port number of the SSH service on ``REMOTE GATEWAY``,\n",
                    "rendered": {
                      "text": "\n            .. note::\n                Avoid coding secret password directly in the code, since this\n                may be visible and make your service vulnerable to attacks\n\n        ssh_port (int):\n            Optional port number of the SSH service on ``REMOTE GATEWAY``,\n",
                      "markdown": "`\n            .. note::\n                Avoid coding secret password directly in the code, since this\n                may be visible and make your service vulnerable to attacks\n\n        ssh_port (int):\n            Optional port number of the SSH service on ``REMOTE GATEWAY``,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 531,
                  "startColumn": 48,
                  "endLine": 531,
                  "endColumn": 53,
                  "snippet": {
                    "text": "            file.\n\n            ``REMOTE GATEWAY``'s key fingerprint will be compared to this\n            host key in order to prevent against SSH server spoofing.\n            Important when using passwords in order not to accidentally\n            do a login attempt to a wrong (perhaps an attacker's) machine\n\n",
                    "rendered": {
                      "text": "            file.\n\n            ``REMOTE GATEWAY``'s key fingerprint will be compared to this\n            host key in order to prevent against SSH server spoofing.\n            Important when using passwords in order not to accidentally\n            do a login attempt to a wrong (perhaps an attacker's) machine\n\n",
                      "markdown": "`            file.\n\n            ``REMOTE GATEWAY``'s key fingerprint will be compared to this\n            host key in order to prevent against SSH server spoofing.\n            Important when using passwords in order not to accidentally\n            do a login attempt to a wrong (perhaps an attacker's) machine\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 519,
                  "startColumn": 11,
                  "endLine": 519,
                  "endColumn": 16,
                  "snippet": {
                    "text": "            .. versionadded:: 0.0.4\n\n        ssh_config_file (str):\n            SSH configuration file that will be read. If explicitly set to\n            ``None``, parsing of this configuration is omitted\n\n            Default: :const:`SSH_CONFIG_FILE`\n",
                    "rendered": {
                      "text": "            .. versionadded:: 0.0.4\n\n        ssh_config_file (str):\n            SSH configuration file that will be read. If explicitly set to\n            ``None``, parsing of this configuration is omitted\n\n            Default: :const:`SSH_CONFIG_FILE`\n",
                      "markdown": "`            .. versionadded:: 0.0.4\n\n        ssh_config_file (str):\n            SSH configuration file that will be read. If explicitly set to\n            ``None``, parsing of this configuration is omitted\n\n            Default: :const:`SSH_CONFIG_FILE`\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 514,
                  "startColumn": 41,
                  "endLine": 514,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        ssh_address_or_host (tuple or str):\n            IP or hostname of ``REMOTE GATEWAY``. It may be a two-element\n            tuple (``str``, ``int``) representing IP and port respectively,\n            or a ``str`` representing the IP address only\n\n            .. versionadded:: 0.0.4\n\n",
                    "rendered": {
                      "text": "        ssh_address_or_host (tuple or str):\n            IP or hostname of ``REMOTE GATEWAY``. It may be a two-element\n            tuple (``str``, ``int``) representing IP and port respectively,\n            or a ``str`` representing the IP address only\n\n            .. versionadded:: 0.0.4\n\n",
                      "markdown": "`        ssh_address_or_host (tuple or str):\n            IP or hostname of ``REMOTE GATEWAY``. It may be a two-element\n            tuple (``str``, ``int``) representing IP and port respectively,\n            or a ``str`` representing the IP address only\n\n            .. versionadded:: 0.0.4\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 513,
                  "startColumn": 49,
                  "endLine": 513,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n        ssh_address_or_host (tuple or str):\n            IP or hostname of ``REMOTE GATEWAY``. It may be a two-element\n            tuple (``str``, ``int``) representing IP and port respectively,\n            or a ``str`` representing the IP address only\n\n            .. versionadded:: 0.0.4\n",
                    "rendered": {
                      "text": "\n        ssh_address_or_host (tuple or str):\n            IP or hostname of ``REMOTE GATEWAY``. It may be a two-element\n            tuple (``str``, ``int``) representing IP and port respectively,\n            or a ``str`` representing the IP address only\n\n            .. versionadded:: 0.0.4\n",
                      "markdown": "`\n        ssh_address_or_host (tuple or str):\n            IP or hostname of ``REMOTE GATEWAY``. It may be a two-element\n            tuple (``str``, ``int``) representing IP and port respectively,\n            or a ``str`` representing the IP address only\n\n            .. versionadded:: 0.0.4\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 512,
                  "startColumn": 11,
                  "endLine": 512,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    Keyword Arguments:\n\n        ssh_address_or_host (tuple or str):\n            IP or hostname of ``REMOTE GATEWAY``. It may be a two-element\n            tuple (``str``, ``int``) representing IP and port respectively,\n            or a ``str`` representing the IP address only\n\n",
                    "rendered": {
                      "text": "    Keyword Arguments:\n\n        ssh_address_or_host (tuple or str):\n            IP or hostname of ``REMOTE GATEWAY``. It may be a two-element\n            tuple (``str``, ``int``) representing IP and port respectively,\n            or a ``str`` representing the IP address only\n\n",
                      "markdown": "`    Keyword Arguments:\n\n        ssh_address_or_host (tuple or str):\n            IP or hostname of ``REMOTE GATEWAY``. It may be a two-element\n            tuple (``str``, ``int``) representing IP and port respectively,\n            or a ``str`` representing the IP address only\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 493,
                  "startColumn": 38,
                  "endLine": 493,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n        - Optionally:\n            + Read an SSH configuration file (typically ``~/.ssh/config``)\n            + Load keys from a running SSH agent (i.e. Pageant, GNOME Keyring)\n\n    Raises:\n\n",
                    "rendered": {
                      "text": "\n        - Optionally:\n            + Read an SSH configuration file (typically ``~/.ssh/config``)\n            + Load keys from a running SSH agent (i.e. Pageant, GNOME Keyring)\n\n    Raises:\n\n",
                      "markdown": "`\n        - Optionally:\n            + Read an SSH configuration file (typically ``~/.ssh/config``)\n            + Load keys from a running SSH agent (i.e. Pageant, GNOME Keyring)\n\n    Raises:\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 21,
                  "endLine": 492,
                  "endColumn": 26,
                  "snippet": {
                    "text": "          arguments\n\n        - Optionally:\n            + Read an SSH configuration file (typically ``~/.ssh/config``)\n            + Load keys from a running SSH agent (i.e. Pageant, GNOME Keyring)\n\n    Raises:\n",
                    "rendered": {
                      "text": "          arguments\n\n        - Optionally:\n            + Read an SSH configuration file (typically ``~/.ssh/config``)\n            + Load keys from a running SSH agent (i.e. Pageant, GNOME Keyring)\n\n    Raises:\n",
                      "markdown": "`          arguments\n\n        - Optionally:\n            + Read an SSH configuration file (typically ``~/.ssh/config``)\n            + Load keys from a running SSH agent (i.e. Pageant, GNOME Keyring)\n\n    Raises:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 488,
                  "startColumn": 22,
                  "endLine": 488,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    \"\"\"\n    **SSH tunnel class**\n\n        - Initialize a SSH tunnel to a remote host according to the input\n          arguments\n\n        - Optionally:\n",
                    "rendered": {
                      "text": "    \"\"\"\n    **SSH tunnel class**\n\n        - Initialize a SSH tunnel to a remote host according to the input\n          arguments\n\n        - Optionally:\n",
                      "markdown": "`    \"\"\"\n    **SSH tunnel class**\n\n        - Initialize a SSH tunnel to a remote host according to the input\n          arguments\n\n        - Optionally:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 70,
                  "endLine": 130,
                  "snippet": {
                    "text": "\n    Arguments:\n        address_list (list[tuple]):\n            Sequence of (``str``, ``int``) pairs, each representing an IP\n            address and port respectively\n\n            .. note::\n                when supported by the platform, one or more of the elements in\n",
                    "rendered": {
                      "text": "\n    Arguments:\n        address_list (list[tuple]):\n            Sequence of (``str``, ``int``) pairs, each representing an IP\n            address and port respectively\n\n            .. note::\n                when supported by the platform, one or more of the elements in\n",
                      "markdown": "`\n    Arguments:\n        address_list (list[tuple]):\n            Sequence of (``str``, ``int``) pairs, each representing an IP\n            address and port respectively\n\n            .. note::\n                when supported by the platform, one or more of the elements in\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 46,
                  "endLine": 95,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\n    Arguments:\n        address (tuple):\n            (``str``, ``int``) representing an IP address and port,\n            respectively\n\n            .. note::\n",
                    "rendered": {
                      "text": "\n    Arguments:\n        address (tuple):\n            (``str``, ``int``) representing an IP address and port,\n            respectively\n\n            .. note::\n",
                      "markdown": "`\n    Arguments:\n        address (tuple):\n            (``str``, ``int``) representing an IP address and port,\n            respectively\n\n            .. note::\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 19,
                  "endLine": 67,
                  "endColumn": 24,
                  "snippet": {
                    "text": "_StreamServer = socketserver.UnixStreamServer if os.name == 'posix' \\\n    else socketserver.TCPServer\n\n#: Path of optional ssh configuration file\nDEFAULT_SSH_DIRECTORY = '~/.ssh'\nSSH_CONFIG_FILE = os.path.join(DEFAULT_SSH_DIRECTORY, 'config')\n\n",
                    "rendered": {
                      "text": "_StreamServer = socketserver.UnixStreamServer if os.name == 'posix' \\\n    else socketserver.TCPServer\n\n#: Path of optional ssh configuration file\nDEFAULT_SSH_DIRECTORY = '~/.ssh'\nSSH_CONFIG_FILE = os.path.join(DEFAULT_SSH_DIRECTORY, 'config')\n\n",
                      "markdown": "`_StreamServer = socketserver.UnixStreamServer if os.name == 'posix' \\\n    else socketserver.TCPServer\n\n#: Path of optional ssh configuration file\nDEFAULT_SSH_DIRECTORY = '~/.ssh'\nSSH_CONFIG_FILE = os.path.join(DEFAULT_SSH_DIRECTORY, 'config')\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 2,
                  "endLine": 45,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n#: Timeout (seconds) for transport socket (``socket.settimeout``)\nSSH_TIMEOUT = 0.1  # ``None`` may cause a block of transport thread\n#: Timeout (seconds) for tunnel connection (open_channel timeout)\nTUNNEL_TIMEOUT = 10.0\n\n_DAEMON = True  #: Use daemon threads in connections\n",
                    "rendered": {
                      "text": "\n#: Timeout (seconds) for transport socket (``socket.settimeout``)\nSSH_TIMEOUT = 0.1  # ``None`` may cause a block of transport thread\n#: Timeout (seconds) for tunnel connection (open_channel timeout)\nTUNNEL_TIMEOUT = 10.0\n\n_DAEMON = True  #: Use daemon threads in connections\n",
                      "markdown": "`\n#: Timeout (seconds) for transport socket (``socket.settimeout``)\nSSH_TIMEOUT = 0.1  # ``None`` may cause a block of transport thread\n#: Timeout (seconds) for tunnel connection (open_channel timeout)\nTUNNEL_TIMEOUT = 10.0\n\n_DAEMON = True  #: Use daemon threads in connections\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 2,
                  "endLine": 43,
                  "endColumn": 11,
                  "snippet": {
                    "text": "__author__ = 'pahaz'\n\n\n#: Timeout (seconds) for transport socket (``socket.settimeout``)\nSSH_TIMEOUT = 0.1  # ``None`` may cause a block of transport thread\n#: Timeout (seconds) for tunnel connection (open_channel timeout)\nTUNNEL_TIMEOUT = 10.0\n",
                    "rendered": {
                      "text": "__author__ = 'pahaz'\n\n\n#: Timeout (seconds) for transport socket (``socket.settimeout``)\nSSH_TIMEOUT = 0.1  # ``None`` may cause a block of transport thread\n#: Timeout (seconds) for tunnel connection (open_channel timeout)\nTUNNEL_TIMEOUT = 10.0\n",
                      "markdown": "`__author__ = 'pahaz'\n\n\n#: Timeout (seconds) for transport socket (``socket.settimeout``)\nSSH_TIMEOUT = 0.1  # ``None`` may cause a block of transport thread\n#: Timeout (seconds) for tunnel connection (open_channel timeout)\nTUNNEL_TIMEOUT = 10.0\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 48,
                  "endLine": 6,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\"\"\"\n*sshtunnel* - Initiate SSH tunnels via a remote gateway.\n\n``sshtunnel`` works by opening a port forwarding SSH connection in the\nbackground, using threads.\n\nThe connection(s) are closed when explicitly calling the\n",
                    "rendered": {
                      "text": "\"\"\"\n*sshtunnel* - Initiate SSH tunnels via a remote gateway.\n\n``sshtunnel`` works by opening a port forwarding SSH connection in the\nbackground, using threads.\n\nThe connection(s) are closed when explicitly calling the\n",
                      "markdown": "`\"\"\"\n*sshtunnel* - Initiate SSH tunnels via a remote gateway.\n\n``sshtunnel`` works by opening a port forwarding SSH connection in the\nbackground, using threads.\n\nThe connection(s) are closed when explicitly calling the\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel.py"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 22,
                  "endLine": 4,
                  "endColumn": 27,
                  "snippet": {
                    "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"\n*sshtunnel* - Initiate SSH tunnels via a remote gateway.\n\n``sshtunnel`` works by opening a port forwarding SSH connection in the\nbackground, using threads.\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"\n*sshtunnel* - Initiate SSH tunnels via a remote gateway.\n\n``sshtunnel`` works by opening a port forwarding SSH connection in the\nbackground, using threads.\n",
                      "markdown": "`#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"\n*sshtunnel* - Initiate SSH tunnels via a remote gateway.\n\n``sshtunnel`` works by opening a port forwarding SSH connection in the\nbackground, using threads.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 445,
                  "startColumn": 33,
                  "endLine": 445,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    + use daemon mode = False in all threads by default; detail_ (`Pahaz`_) [changed default behavior]\n\n- v.0.0.4.4 (`Pahaz`_)\n   + fix issue `#24`_ - hide ssh password in logs (`Pahaz`_)\n\n- v.0.0.4.3 (`Pahaz`_)\n    + fix default port issue `#19`_ (`Pahaz`_)\n",
                    "rendered": {
                      "text": "    + use daemon mode = False in all threads by default; detail_ (`Pahaz`_) [changed default behavior]\n\n- v.0.0.4.4 (`Pahaz`_)\n   + fix issue `#24`_ - hide ssh password in logs (`Pahaz`_)\n\n- v.0.0.4.3 (`Pahaz`_)\n    + fix default port issue `#19`_ (`Pahaz`_)\n",
                      "markdown": "`    + use daemon mode = False in all threads by default; detail_ (`Pahaz`_) [changed default behavior]\n\n- v.0.0.4.4 (`Pahaz`_)\n   + fix issue `#24`_ - hide ssh password in logs (`Pahaz`_)\n\n- v.0.0.4.3 (`Pahaz`_)\n    + fix default port issue `#19`_ (`Pahaz`_)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 431,
                  "startColumn": 49,
                  "endLine": 431,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    + Refactoring (`JM Fernández`_)\n\n- v.0.0.6 (`Pahaz`_)\n    + add ``-S`` CLI options for ssh private key password support (`Pahaz`_)\n\n- v.0.0.5 (`Pahaz`_)\n    + add ``ssh_proxy`` argument, as well as ``ssh_config(5)`` ``ProxyCommand`` support (`Lewis Thompson`_)\n",
                    "rendered": {
                      "text": "    + Refactoring (`JM Fernández`_)\n\n- v.0.0.6 (`Pahaz`_)\n    + add ``-S`` CLI options for ssh private key password support (`Pahaz`_)\n\n- v.0.0.5 (`Pahaz`_)\n    + add ``ssh_proxy`` argument, as well as ``ssh_config(5)`` ``ProxyCommand`` support (`Lewis Thompson`_)\n",
                      "markdown": "`    + Refactoring (`JM Fernández`_)\n\n- v.0.0.6 (`Pahaz`_)\n    + add ``-S`` CLI options for ssh private key password support (`Pahaz`_)\n\n- v.0.0.5 (`Pahaz`_)\n    + add ``ssh_proxy`` argument, as well as ``ssh_config(5)`` ``ProxyCommand`` support (`Lewis Thompson`_)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 389,
                  "startColumn": 34,
                  "endLine": 389,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    + Introduce `block_on_close` attribute\n\n- v.0.1.4 (`Niels Zeilemaker`_)\n    + Allow loading pkeys from `~/.ssh`\n\n- v.0.1.3 (`Ignacio Peluffo`_ and others)\n    + ``pkey_file`` parameter updated to accept relative paths to user folder using ``~``\n",
                    "rendered": {
                      "text": "    + Introduce `block_on_close` attribute\n\n- v.0.1.4 (`Niels Zeilemaker`_)\n    + Allow loading pkeys from `~/.ssh`\n\n- v.0.1.3 (`Ignacio Peluffo`_ and others)\n    + ``pkey_file`` parameter updated to accept relative paths to user folder using ``~``\n",
                      "markdown": "`    + Introduce `block_on_close` attribute\n\n- v.0.1.4 (`Niels Zeilemaker`_)\n    + Allow loading pkeys from `~/.ssh`\n\n- v.0.1.3 (`Ignacio Peluffo`_ and others)\n    + ``pkey_file`` parameter updated to accept relative paths to user folder using ``~``\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 363,
                  "startColumn": 44,
                  "endLine": 363,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n- v.0.3.2 (`Pahaz`_, `JM Fernández`_)\n    + Fix host key directory detection\n    + Unify default ssh config folder to `~/.ssh`\n\n- v.0.3.1 (`Pahaz`_)\n    + Increase open connection timeout to 10 secods\n",
                    "rendered": {
                      "text": "\n- v.0.3.2 (`Pahaz`_, `JM Fernández`_)\n    + Fix host key directory detection\n    + Unify default ssh config folder to `~/.ssh`\n\n- v.0.3.1 (`Pahaz`_)\n    + Increase open connection timeout to 10 secods\n",
                      "markdown": "`\n- v.0.3.2 (`Pahaz`_, `JM Fernández`_)\n    + Fix host key directory detection\n    + Unify default ssh config folder to `~/.ssh`\n\n- v.0.3.1 (`Pahaz`_)\n    + Increase open connection timeout to 10 secods\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 66,
                  "endLine": 304,
                  "endColumn": 70,
                  "snippet": {
                    "text": "      -x IP:PORT, --proxy IP:PORT\n                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n",
                    "rendered": {
                      "text": "      -x IP:PORT, --proxy IP:PORT\n                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n",
                      "markdown": "`      -x IP:PORT, --proxy IP:PORT\n                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 54,
                  "endLine": 297,
                  "endColumn": 62,
                  "snippet": {
                    "text": "      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n      -V, --version         Show version number and quit\n",
                    "rendered": {
                      "text": "      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n      -V, --version         Show version number and quit\n",
                      "markdown": "`      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n      -V, --version         Show version number and quit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 50,
                  "endLine": 296,
                  "endColumn": 58,
                  "snippet": {
                    "text": "                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n",
                    "rendered": {
                      "text": "                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n",
                      "markdown": "`                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 37,
                  "endLine": 296,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n",
                    "rendered": {
                      "text": "                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n",
                      "markdown": "`                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 25,
                  "endLine": 296,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n",
                    "rendered": {
                      "text": "                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n",
                      "markdown": "`                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 13,
                  "endLine": 296,
                  "endColumn": 21,
                  "snippet": {
                    "text": "                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n",
                    "rendered": {
                      "text": "                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n",
                      "markdown": "`                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 21,
                  "endLine": 294,
                  "endColumn": 32,
                  "snippet": {
                    "text": "                            Example: -L :40000\n      -k SSH_HOST_KEY, --ssh_host_key SSH_HOST_KEY\n                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n",
                    "rendered": {
                      "text": "                            Example: -L :40000\n      -k SSH_HOST_KEY, --ssh_host_key SSH_HOST_KEY\n                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n",
                      "markdown": "`                            Example: -L :40000\n      -k SSH_HOST_KEY, --ssh_host_key SSH_HOST_KEY\n                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 47,
                  "endLine": 279,
                  "endColumn": 55,
                  "snippet": {
                    "text": "      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Equivalent to ssh -Lxxxx:IP_ADDRESS:PORT\n",
                    "rendered": {
                      "text": "      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Equivalent to ssh -Lxxxx:IP_ADDRESS:PORT\n",
                      "markdown": "`      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Equivalent to ssh -Lxxxx:IP_ADDRESS:PORT\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 38,
                  "endLine": 278,
                  "endColumn": 46,
                  "snippet": {
                    "text": "                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n",
                    "rendered": {
                      "text": "                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n",
                      "markdown": "`                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 25,
                  "endLine": 278,
                  "endColumn": 33,
                  "snippet": {
                    "text": "                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n",
                    "rendered": {
                      "text": "                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n",
                      "markdown": "`                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 13,
                  "endLine": 278,
                  "endColumn": 21,
                  "snippet": {
                    "text": "                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n",
                    "rendered": {
                      "text": "                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n",
                      "markdown": "`                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 61,
                  "endLine": 260,
                  "endColumn": 69,
                  "snippet": {
                    "text": "    $ sshtunnel --help\n    usage: sshtunnel [-h] [-U SSH_USERNAME] [-p SSH_PORT] [-P SSH_PASSWORD] -R\n                     IP:PORT [IP:PORT ...] [-L [IP:PORT [IP:PORT ...]]]\n                     [-k SSH_HOST_KEY] [-K KEY_FILE] [-S KEY_PASSWORD] [-t] [-v]\n                     [-V] [-x IP:PORT] [-c SSH_CONFIG_FILE] [-z] [-n]\n                     [-d [FOLDER [FOLDER ...]]]\n                     ssh_address\n",
                    "rendered": {
                      "text": "    $ sshtunnel --help\n    usage: sshtunnel [-h] [-U SSH_USERNAME] [-p SSH_PORT] [-P SSH_PASSWORD] -R\n                     IP:PORT [IP:PORT ...] [-L [IP:PORT [IP:PORT ...]]]\n                     [-k SSH_HOST_KEY] [-K KEY_FILE] [-S KEY_PASSWORD] [-t] [-v]\n                     [-V] [-x IP:PORT] [-c SSH_CONFIG_FILE] [-z] [-n]\n                     [-d [FOLDER [FOLDER ...]]]\n                     ssh_address\n",
                      "markdown": "`    $ sshtunnel --help\n    usage: sshtunnel [-h] [-U SSH_USERNAME] [-p SSH_PORT] [-P SSH_PASSWORD] -R\n                     IP:PORT [IP:PORT ...] [-L [IP:PORT [IP:PORT ...]]]\n                     [-k SSH_HOST_KEY] [-K KEY_FILE] [-S KEY_PASSWORD] [-t] [-v]\n                     [-V] [-x IP:PORT] [-c SSH_CONFIG_FILE] [-z] [-n]\n                     [-d [FOLDER [FOLDER ...]]]\n                     ssh_address\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 66,
                  "endLine": 258,
                  "endColumn": 74,
                  "snippet": {
                    "text": "::\n\n    $ sshtunnel --help\n    usage: sshtunnel [-h] [-U SSH_USERNAME] [-p SSH_PORT] [-P SSH_PASSWORD] -R\n                     IP:PORT [IP:PORT ...] [-L [IP:PORT [IP:PORT ...]]]\n                     [-k SSH_HOST_KEY] [-K KEY_FILE] [-S KEY_PASSWORD] [-t] [-v]\n                     [-V] [-x IP:PORT] [-c SSH_CONFIG_FILE] [-z] [-n]\n",
                    "rendered": {
                      "text": "::\n\n    $ sshtunnel --help\n    usage: sshtunnel [-h] [-U SSH_USERNAME] [-p SSH_PORT] [-P SSH_PASSWORD] -R\n                     IP:PORT [IP:PORT ...] [-L [IP:PORT [IP:PORT ...]]]\n                     [-k SSH_HOST_KEY] [-K KEY_FILE] [-S KEY_PASSWORD] [-t] [-v]\n                     [-V] [-x IP:PORT] [-c SSH_CONFIG_FILE] [-z] [-n]\n",
                      "markdown": "`::\n\n    $ sshtunnel --help\n    usage: sshtunnel [-h] [-U SSH_USERNAME] [-p SSH_PORT] [-P SSH_PASSWORD] -R\n                     IP:PORT [IP:PORT ...] [-L [IP:PORT [IP:PORT ...]]]\n                     [-k SSH_HOST_KEY] [-K KEY_FILE] [-S KEY_PASSWORD] [-t] [-v]\n                     [-V] [-x IP:PORT] [-c SSH_CONFIG_FILE] [-z] [-n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 20,
                  "endLine": 247,
                  "endColumn": 28,
                  "snippet": {
                    "text": "                ssh.connect('localhost',\n                    port=tunnel2.local_bind_port,\n                    username='target_user',\n                    password='target_pwd',\n                )\n                ssh.exec_command(...)\n\n",
                    "rendered": {
                      "text": "                ssh.connect('localhost',\n                    port=tunnel2.local_bind_port,\n                    username='target_user',\n                    password='target_pwd',\n                )\n                ssh.exec_command(...)\n\n",
                      "markdown": "`                ssh.connect('localhost',\n                    port=tunnel2.local_bind_port,\n                    username='target_user',\n                    password='target_pwd',\n                )\n                ssh.exec_command(...)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 16,
                  "endLine": 240,
                  "endColumn": 24,
                  "snippet": {
                    "text": "            ssh_address_or_host=('localhost', tunnel1.local_bind_port),\n            remote_bind_address=('target_ip', 22),\n            ssh_username='GW2_user',\n            ssh_password='GW2_pwd',\n        ) as tunnel2:\n            print('Connection to tunnel2 (GW2_ip:GW2_port) OK...')\n            with SSHClient() as ssh:\n",
                    "rendered": {
                      "text": "            ssh_address_or_host=('localhost', tunnel1.local_bind_port),\n            remote_bind_address=('target_ip', 22),\n            ssh_username='GW2_user',\n            ssh_password='GW2_pwd',\n        ) as tunnel2:\n            print('Connection to tunnel2 (GW2_ip:GW2_port) OK...')\n            with SSHClient() as ssh:\n",
                      "markdown": "`            ssh_address_or_host=('localhost', tunnel1.local_bind_port),\n            remote_bind_address=('target_ip', 22),\n            ssh_username='GW2_user',\n            ssh_password='GW2_pwd',\n        ) as tunnel2:\n            print('Connection to tunnel2 (GW2_ip:GW2_port) OK...')\n            with SSHClient() as ssh:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 12,
                  "endLine": 201,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    with open_tunnel(\n        ('localhost', 2222),\n        ssh_username=\"vagrant\",\n        ssh_password=\"vagrant\",\n        remote_bind_address=('127.0.0.1', 3306)\n    ) as server:\n\n",
                    "rendered": {
                      "text": "    with open_tunnel(\n        ('localhost', 2222),\n        ssh_username=\"vagrant\",\n        ssh_password=\"vagrant\",\n        remote_bind_address=('127.0.0.1', 3306)\n    ) as server:\n\n",
                      "markdown": "`    with open_tunnel(\n        ('localhost', 2222),\n        ssh_username=\"vagrant\",\n        ssh_password=\"vagrant\",\n        remote_bind_address=('127.0.0.1', 3306)\n    ) as server:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 25,
                  "endLine": 179,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        remote_bind_address=(PRIVATE_SERVER_IP, 22),\n        local_bind_address=('0.0.0.0', 10022)\n    ) as tunnel:\n        client = paramiko.SSHClient()\n        client.load_system_host_keys()\n        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n        client.connect('127.0.0.1', 10022)\n",
                    "rendered": {
                      "text": "        remote_bind_address=(PRIVATE_SERVER_IP, 22),\n        local_bind_address=('0.0.0.0', 10022)\n    ) as tunnel:\n        client = paramiko.SSHClient()\n        client.load_system_host_keys()\n        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n        client.connect('127.0.0.1', 10022)\n",
                      "markdown": "`        remote_bind_address=(PRIVATE_SERVER_IP, 22),\n        local_bind_address=('0.0.0.0', 10022)\n    ) as tunnel:\n        client = paramiko.SSHClient()\n        client.load_system_host_keys()\n        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n        client.connect('127.0.0.1', 10022)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 24,
                  "endLine": 175,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        (REMOTE_SERVER_IP, 443),\n        ssh_username=\"\",\n        ssh_pkey=\"/var/ssh/rsa_key\",\n        ssh_private_key_password=\"secret\",\n        remote_bind_address=(PRIVATE_SERVER_IP, 22),\n        local_bind_address=('0.0.0.0', 10022)\n    ) as tunnel:\n",
                    "rendered": {
                      "text": "        (REMOTE_SERVER_IP, 443),\n        ssh_username=\"\",\n        ssh_pkey=\"/var/ssh/rsa_key\",\n        ssh_private_key_password=\"secret\",\n        remote_bind_address=(PRIVATE_SERVER_IP, 22),\n        local_bind_address=('0.0.0.0', 10022)\n    ) as tunnel:\n",
                      "markdown": "`        (REMOTE_SERVER_IP, 443),\n        ssh_username=\"\",\n        ssh_pkey=\"/var/ssh/rsa_key\",\n        ssh_private_key_password=\"secret\",\n        remote_bind_address=(PRIVATE_SERVER_IP, 22),\n        local_bind_address=('0.0.0.0', 10022)\n    ) as tunnel:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 12,
                  "endLine": 175,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        (REMOTE_SERVER_IP, 443),\n        ssh_username=\"\",\n        ssh_pkey=\"/var/ssh/rsa_key\",\n        ssh_private_key_password=\"secret\",\n        remote_bind_address=(PRIVATE_SERVER_IP, 22),\n        local_bind_address=('0.0.0.0', 10022)\n    ) as tunnel:\n",
                    "rendered": {
                      "text": "        (REMOTE_SERVER_IP, 443),\n        ssh_username=\"\",\n        ssh_pkey=\"/var/ssh/rsa_key\",\n        ssh_private_key_password=\"secret\",\n        remote_bind_address=(PRIVATE_SERVER_IP, 22),\n        local_bind_address=('0.0.0.0', 10022)\n    ) as tunnel:\n",
                      "markdown": "`        (REMOTE_SERVER_IP, 443),\n        ssh_username=\"\",\n        ssh_pkey=\"/var/ssh/rsa_key\",\n        ssh_private_key_password=\"secret\",\n        remote_bind_address=(PRIVATE_SERVER_IP, 22),\n        local_bind_address=('0.0.0.0', 10022)\n    ) as tunnel:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 9,
                  "endLine": 163,
                  "endColumn": 17,
                  "snippet": {
                    "text": "---------\n\nExample of a port forwarding to a private server not directly reachable,\nassuming password protected pkey authentication, remote server's SSH service is\nlistening on port 443 and that port is open in the firewall (**Fig2**):\n\n.. code-block:: python\n",
                    "rendered": {
                      "text": "---------\n\nExample of a port forwarding to a private server not directly reachable,\nassuming password protected pkey authentication, remote server's SSH service is\nlistening on port 443 and that port is open in the firewall (**Fig2**):\n\n.. code-block:: python\n",
                      "markdown": "`---------\n\nExample of a port forwarding to a private server not directly reachable,\nassuming password protected pkey authentication, remote server's SSH service is\nlistening on port 443 and that port is open in the firewall (**Fig2**):\n\n.. code-block:: python\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 12,
                  "endLine": 148,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    server = SSHTunnelForwarder(\n        'alfa.8iq.dev',\n        ssh_username=\"pahaz\",\n        ssh_password=\"secret\",\n        remote_bind_address=('127.0.0.1', 8080)\n    )\n\n",
                    "rendered": {
                      "text": "    server = SSHTunnelForwarder(\n        'alfa.8iq.dev',\n        ssh_username=\"pahaz\",\n        ssh_password=\"secret\",\n        remote_bind_address=('127.0.0.1', 8080)\n    )\n\n",
                      "markdown": "`    server = SSHTunnelForwarder(\n        'alfa.8iq.dev',\n        ssh_username=\"pahaz\",\n        ssh_password=\"secret\",\n        remote_bind_address=('127.0.0.1', 8080)\n    )\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 23,
                  "endLine": 138,
                  "endColumn": 31,
                  "snippet": {
                    "text": "---------\n\nCode corresponding to **Fig1** above follows, given remote server's address is\n``pahaz.urfuclub.ru``, password authentication and randomly assigned local bind\nport.\n\n.. code-block:: python\n",
                    "rendered": {
                      "text": "---------\n\nCode corresponding to **Fig1** above follows, given remote server's address is\n``pahaz.urfuclub.ru``, password authentication and randomly assigned local bind\nport.\n\n.. code-block:: python\n",
                      "markdown": "`---------\n\nCode corresponding to **Fig1** above follows, given remote server's address is\n``pahaz.urfuclub.ru``, password authentication and randomly assigned local bind\nport.\n\n.. code-block:: python\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 465,
                  "startColumn": 98,
                  "endLine": 465,
                  "endColumn": 102,
                  "snippet": {
                    "text": "    + support opening several tunnels at once (`JM Fernández`_)\n    + improve stability and readability (`JM Fernández`_, `Pahaz`_)\n    + improve logging (`JM Fernández`_, `Pahaz`_)\n    + add ``raise_exception_if_any_forwarder_have_a_problem`` argument for opening several tunnels at once (`Pahaz`_)\n    + add ``ssh_config_file`` argument support (`JM Fernández`_)\n    + add Python 3 support (`JM Fernández`_, `Pahaz`_)\n\n",
                    "rendered": {
                      "text": "    + support opening several tunnels at once (`JM Fernández`_)\n    + improve stability and readability (`JM Fernández`_, `Pahaz`_)\n    + improve logging (`JM Fernández`_, `Pahaz`_)\n    + add ``raise_exception_if_any_forwarder_have_a_problem`` argument for opening several tunnels at once (`Pahaz`_)\n    + add ``ssh_config_file`` argument support (`JM Fernández`_)\n    + add Python 3 support (`JM Fernández`_, `Pahaz`_)\n\n",
                      "markdown": "`    + support opening several tunnels at once (`JM Fernández`_)\n    + improve stability and readability (`JM Fernández`_, `Pahaz`_)\n    + improve logging (`JM Fernández`_, `Pahaz`_)\n    + add ``raise_exception_if_any_forwarder_have_a_problem`` argument for opening several tunnels at once (`Pahaz`_)\n    + add ``ssh_config_file`` argument support (`JM Fernández`_)\n    + add Python 3 support (`JM Fernández`_, `Pahaz`_)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 462,
                  "startColumn": 37,
                  "endLine": 462,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    + move ``make_ssh_forward_handler`` to ``SSHTunnelForwarder.make_ssh_forward_handler_class`` (`Pahaz`_, `JM Fernández`_) - *incompatible*\n    + rename ``open`` to ``open_tunnel`` (`JM Fernández`_) - *incompatible*\n    + add CLI interface (`JM Fernández`_)\n    + support opening several tunnels at once (`JM Fernández`_)\n    + improve stability and readability (`JM Fernández`_, `Pahaz`_)\n    + improve logging (`JM Fernández`_, `Pahaz`_)\n    + add ``raise_exception_if_any_forwarder_have_a_problem`` argument for opening several tunnels at once (`Pahaz`_)\n",
                    "rendered": {
                      "text": "    + move ``make_ssh_forward_handler`` to ``SSHTunnelForwarder.make_ssh_forward_handler_class`` (`Pahaz`_, `JM Fernández`_) - *incompatible*\n    + rename ``open`` to ``open_tunnel`` (`JM Fernández`_) - *incompatible*\n    + add CLI interface (`JM Fernández`_)\n    + support opening several tunnels at once (`JM Fernández`_)\n    + improve stability and readability (`JM Fernández`_, `Pahaz`_)\n    + improve logging (`JM Fernández`_, `Pahaz`_)\n    + add ``raise_exception_if_any_forwarder_have_a_problem`` argument for opening several tunnels at once (`Pahaz`_)\n",
                      "markdown": "`    + move ``make_ssh_forward_handler`` to ``SSHTunnelForwarder.make_ssh_forward_handler_class`` (`Pahaz`_, `JM Fernández`_) - *incompatible*\n    + rename ``open`` to ``open_tunnel`` (`JM Fernández`_) - *incompatible*\n    + add CLI interface (`JM Fernández`_)\n    + support opening several tunnels at once (`JM Fernández`_)\n    + improve stability and readability (`JM Fernández`_, `Pahaz`_)\n    + improve logging (`JM Fernández`_, `Pahaz`_)\n    + add ``raise_exception_if_any_forwarder_have_a_problem`` argument for opening several tunnels at once (`Pahaz`_)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 26,
                  "endLine": 331,
                  "endColumn": 30,
                  "snippet": {
                    "text": "Online documentation\n====================\n\nDocumentation may be found at `readthedocs`_.\n\n.. _readthedocs: https://sshtunnel.readthedocs.org/\n\n",
                    "rendered": {
                      "text": "Online documentation\n====================\n\nDocumentation may be found at `readthedocs`_.\n\n.. _readthedocs: https://sshtunnel.readthedocs.org/\n\n",
                      "markdown": "`Online documentation\n====================\n\nDocumentation may be found at `readthedocs`_.\n\n.. _readthedocs: https://sshtunnel.readthedocs.org/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 67,
                  "endLine": 222,
                  "endColumn": 71,
                  "snippet": {
                    "text": "---------\n\nOpening an SSH session jumping over two tunnels. SSH transport and tunnels\nwill be daemonised, which will not wait for the connections to stop at close\ntime.\n\n.. code-block:: python\n",
                    "rendered": {
                      "text": "---------\n\nOpening an SSH session jumping over two tunnels. SSH transport and tunnels\nwill be daemonised, which will not wait for the connections to stop at close\ntime.\n\n.. code-block:: python\n",
                      "markdown": "`---------\n\nOpening an SSH session jumping over two tunnels. SSH transport and tunnels\nwill be daemonised, which will not wait for the connections to stop at close\ntime.\n\n.. code-block:: python\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 445,
                  "startColumn": 28,
                  "endLine": 445,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    + use daemon mode = False in all threads by default; detail_ (`Pahaz`_) [changed default behavior]\n\n- v.0.0.4.4 (`Pahaz`_)\n   + fix issue `#24`_ - hide ssh password in logs (`Pahaz`_)\n\n- v.0.0.4.3 (`Pahaz`_)\n    + fix default port issue `#19`_ (`Pahaz`_)\n",
                    "rendered": {
                      "text": "    + use daemon mode = False in all threads by default; detail_ (`Pahaz`_) [changed default behavior]\n\n- v.0.0.4.4 (`Pahaz`_)\n   + fix issue `#24`_ - hide ssh password in logs (`Pahaz`_)\n\n- v.0.0.4.3 (`Pahaz`_)\n    + fix default port issue `#19`_ (`Pahaz`_)\n",
                      "markdown": "`    + use daemon mode = False in all threads by default; detail_ (`Pahaz`_) [changed default behavior]\n\n- v.0.0.4.4 (`Pahaz`_)\n   + fix issue `#24`_ - hide ssh password in logs (`Pahaz`_)\n\n- v.0.0.4.3 (`Pahaz`_)\n    + fix default port issue `#19`_ (`Pahaz`_)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 431,
                  "startColumn": 32,
                  "endLine": 431,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    + Refactoring (`JM Fernández`_)\n\n- v.0.0.6 (`Pahaz`_)\n    + add ``-S`` CLI options for ssh private key password support (`Pahaz`_)\n\n- v.0.0.5 (`Pahaz`_)\n    + add ``ssh_proxy`` argument, as well as ``ssh_config(5)`` ``ProxyCommand`` support (`Lewis Thompson`_)\n",
                    "rendered": {
                      "text": "    + Refactoring (`JM Fernández`_)\n\n- v.0.0.6 (`Pahaz`_)\n    + add ``-S`` CLI options for ssh private key password support (`Pahaz`_)\n\n- v.0.0.5 (`Pahaz`_)\n    + add ``ssh_proxy`` argument, as well as ``ssh_config(5)`` ``ProxyCommand`` support (`Lewis Thompson`_)\n",
                      "markdown": "`    + Refactoring (`JM Fernández`_)\n\n- v.0.0.6 (`Pahaz`_)\n    + add ``-S`` CLI options for ssh private key password support (`Pahaz`_)\n\n- v.0.0.5 (`Pahaz`_)\n    + add ``ssh_proxy`` argument, as well as ``ssh_config(5)`` ``ProxyCommand`` support (`Lewis Thompson`_)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 424,
                  "startColumn": 20,
                  "endLine": 424,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n- v.0.0.7 (`JM Fernández`_)\n    + Tunnels can now be stopped and started safely (`#41`_) (`JM Fernández`_)\n    + Add timeout to SSH gateway and keep-alive messages (`#29`_) (`JM Fernández`_)\n    + Allow sending a pkey directly (`#43`_) (`Chronial`_)\n    + Add ``-V`` CLI option to show current version (`JM Fernández`_)\n    + Add coverage (`JM Fernández`_)\n",
                    "rendered": {
                      "text": "\n- v.0.0.7 (`JM Fernández`_)\n    + Tunnels can now be stopped and started safely (`#41`_) (`JM Fernández`_)\n    + Add timeout to SSH gateway and keep-alive messages (`#29`_) (`JM Fernández`_)\n    + Allow sending a pkey directly (`#43`_) (`Chronial`_)\n    + Add ``-V`` CLI option to show current version (`JM Fernández`_)\n    + Add coverage (`JM Fernández`_)\n",
                      "markdown": "`\n- v.0.0.7 (`JM Fernández`_)\n    + Tunnels can now be stopped and started safely (`#41`_) (`JM Fernández`_)\n    + Add timeout to SSH gateway and keep-alive messages (`#29`_) (`JM Fernández`_)\n    + Allow sending a pkey directly (`#43`_) (`Chronial`_)\n    + Add ``-V`` CLI option to show current version (`JM Fernández`_)\n    + Add coverage (`JM Fernández`_)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 424,
                  "startColumn": 9,
                  "endLine": 424,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n- v.0.0.7 (`JM Fernández`_)\n    + Tunnels can now be stopped and started safely (`#41`_) (`JM Fernández`_)\n    + Add timeout to SSH gateway and keep-alive messages (`#29`_) (`JM Fernández`_)\n    + Allow sending a pkey directly (`#43`_) (`Chronial`_)\n    + Add ``-V`` CLI option to show current version (`JM Fernández`_)\n    + Add coverage (`JM Fernández`_)\n",
                    "rendered": {
                      "text": "\n- v.0.0.7 (`JM Fernández`_)\n    + Tunnels can now be stopped and started safely (`#41`_) (`JM Fernández`_)\n    + Add timeout to SSH gateway and keep-alive messages (`#29`_) (`JM Fernández`_)\n    + Allow sending a pkey directly (`#43`_) (`Chronial`_)\n    + Add ``-V`` CLI option to show current version (`JM Fernández`_)\n    + Add coverage (`JM Fernández`_)\n",
                      "markdown": "`\n- v.0.0.7 (`JM Fernández`_)\n    + Tunnels can now be stopped and started safely (`#41`_) (`JM Fernández`_)\n    + Add timeout to SSH gateway and keep-alive messages (`#29`_) (`JM Fernández`_)\n    + Allow sending a pkey directly (`#43`_) (`Chronial`_)\n    + Add ``-V`` CLI option to show current version (`JM Fernández`_)\n    + Add coverage (`JM Fernández`_)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 418,
                  "startColumn": 17,
                  "endLine": 418,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    + Add ``__str__`` method (`JM Fernández`_)\n    + Add test functions (`JM Fernández`_)\n    + Fix default username when not provided and ssh_config file is skipped (`JM Fernández`_)\n    + Fix gateway IP unresolvable exception catching (`JM Fernández`_)\n    + Minor fixes (`JM Fernández`_)\n    + Add AppVeyor support (`JM Fernández`_)\n\n",
                    "rendered": {
                      "text": "    + Add ``__str__`` method (`JM Fernández`_)\n    + Add test functions (`JM Fernández`_)\n    + Fix default username when not provided and ssh_config file is skipped (`JM Fernández`_)\n    + Fix gateway IP unresolvable exception catching (`JM Fernández`_)\n    + Minor fixes (`JM Fernández`_)\n    + Add AppVeyor support (`JM Fernández`_)\n\n",
                      "markdown": "`    + Add ``__str__`` method (`JM Fernández`_)\n    + Add test functions (`JM Fernández`_)\n    + Fix default username when not provided and ssh_config file is skipped (`JM Fernández`_)\n    + Fix gateway IP unresolvable exception catching (`JM Fernández`_)\n    + Minor fixes (`JM Fernández`_)\n    + Add AppVeyor support (`JM Fernández`_)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 27,
                  "endLine": 372,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    + Change default with context behavior to use `.stop(force=True)` on exit (is not fully backward compatible)\n    + Remove useless `daemon_forward_servers = True` hack for hangs prevention (is not fully backward compatible)\n    + Set transport keepalive to 5 second by default (disabled for version < 0.3.0)\n    + Set default transport timeout to 0.1\n    + Deprecate and remove `block_on_close` option\n    + Fix \"deadlocks\" / \"tunneling hangs\" (`#173`_, `#201`_, `#162`_, `#211`_)\n\n",
                    "rendered": {
                      "text": "    + Change default with context behavior to use `.stop(force=True)` on exit (is not fully backward compatible)\n    + Remove useless `daemon_forward_servers = True` hack for hangs prevention (is not fully backward compatible)\n    + Set transport keepalive to 5 second by default (disabled for version < 0.3.0)\n    + Set default transport timeout to 0.1\n    + Deprecate and remove `block_on_close` option\n    + Fix \"deadlocks\" / \"tunneling hangs\" (`#173`_, `#201`_, `#162`_, `#211`_)\n\n",
                      "markdown": "`    + Change default with context behavior to use `.stop(force=True)` on exit (is not fully backward compatible)\n    + Remove useless `daemon_forward_servers = True` hack for hangs prevention (is not fully backward compatible)\n    + Set transport keepalive to 5 second by default (disabled for version < 0.3.0)\n    + Set default transport timeout to 0.1\n    + Deprecate and remove `block_on_close` option\n    + Fix \"deadlocks\" / \"tunneling hangs\" (`#173`_, `#201`_, `#162`_, `#211`_)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 30,
                  "endLine": 366,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    + Unify default ssh config folder to `~/.ssh`\n\n- v.0.3.1 (`Pahaz`_)\n    + Increase open connection timeout to 10 secods\n\n- v.0.3.0 (`Pahaz`_)\n    + Change default with context behavior to use `.stop(force=True)` on exit (is not fully backward compatible)\n",
                    "rendered": {
                      "text": "    + Unify default ssh config folder to `~/.ssh`\n\n- v.0.3.1 (`Pahaz`_)\n    + Increase open connection timeout to 10 secods\n\n- v.0.3.0 (`Pahaz`_)\n    + Change default with context behavior to use `.stop(force=True)` on exit (is not fully backward compatible)\n",
                      "markdown": "`    + Unify default ssh config folder to `~/.ssh`\n\n- v.0.3.1 (`Pahaz`_)\n    + Increase open connection timeout to 10 secods\n\n- v.0.3.0 (`Pahaz`_)\n    + Change default with context behavior to use `.stop(force=True)` on exit (is not fully backward compatible)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 363,
                  "startColumn": 19,
                  "endLine": 363,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n- v.0.3.2 (`Pahaz`_, `JM Fernández`_)\n    + Fix host key directory detection\n    + Unify default ssh config folder to `~/.ssh`\n\n- v.0.3.1 (`Pahaz`_)\n    + Increase open connection timeout to 10 secods\n",
                    "rendered": {
                      "text": "\n- v.0.3.2 (`Pahaz`_, `JM Fernández`_)\n    + Fix host key directory detection\n    + Unify default ssh config folder to `~/.ssh`\n\n- v.0.3.1 (`Pahaz`_)\n    + Increase open connection timeout to 10 secods\n",
                      "markdown": "`\n- v.0.3.2 (`Pahaz`_, `JM Fernández`_)\n    + Fix host key directory detection\n    + Unify default ssh config folder to `~/.ssh`\n\n- v.0.3.1 (`Pahaz`_)\n    + Increase open connection timeout to 10 secods\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 9,
                  "endLine": 359,
                  "endColumn": 17,
                  "snippet": {
                    "text": "- v.0.4.0 (`Pahaz`_)\n    + Change the daemon mod flag for all tunnel threads (is not fully backward compatible) to prevent unexpected hangs (`#219`_)\n    + Add docker based end to end functinal tests for Mongo/Postgres/MySQL (`#219`_)\n    + Add docker based end to end hangs tests (`#219`_)\n\n- v.0.3.2 (`Pahaz`_, `JM Fernández`_)\n    + Fix host key directory detection\n",
                    "rendered": {
                      "text": "- v.0.4.0 (`Pahaz`_)\n    + Change the daemon mod flag for all tunnel threads (is not fully backward compatible) to prevent unexpected hangs (`#219`_)\n    + Add docker based end to end functinal tests for Mongo/Postgres/MySQL (`#219`_)\n    + Add docker based end to end hangs tests (`#219`_)\n\n- v.0.3.2 (`Pahaz`_, `JM Fernández`_)\n    + Fix host key directory detection\n",
                      "markdown": "`- v.0.4.0 (`Pahaz`_)\n    + Change the daemon mod flag for all tunnel threads (is not fully backward compatible) to prevent unexpected hangs (`#219`_)\n    + Add docker based end to end functinal tests for Mongo/Postgres/MySQL (`#219`_)\n    + Add docker based end to end hangs tests (`#219`_)\n\n- v.0.3.2 (`Pahaz`_, `JM Fernández`_)\n    + Fix host key directory detection\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 9,
                  "endLine": 358,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n- v.0.4.0 (`Pahaz`_)\n    + Change the daemon mod flag for all tunnel threads (is not fully backward compatible) to prevent unexpected hangs (`#219`_)\n    + Add docker based end to end functinal tests for Mongo/Postgres/MySQL (`#219`_)\n    + Add docker based end to end hangs tests (`#219`_)\n\n- v.0.3.2 (`Pahaz`_, `JM Fernández`_)\n",
                    "rendered": {
                      "text": "\n- v.0.4.0 (`Pahaz`_)\n    + Change the daemon mod flag for all tunnel threads (is not fully backward compatible) to prevent unexpected hangs (`#219`_)\n    + Add docker based end to end functinal tests for Mongo/Postgres/MySQL (`#219`_)\n    + Add docker based end to end hangs tests (`#219`_)\n\n- v.0.3.2 (`Pahaz`_, `JM Fernández`_)\n",
                      "markdown": "`\n- v.0.4.0 (`Pahaz`_)\n    + Change the daemon mod flag for all tunnel threads (is not fully backward compatible) to prevent unexpected hangs (`#219`_)\n    + Add docker based end to end functinal tests for Mongo/Postgres/MySQL (`#219`_)\n    + Add docker based end to end hangs tests (`#219`_)\n\n- v.0.3.2 (`Pahaz`_, `JM Fernández`_)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 53,
                  "endLine": 308,
                  "endColumn": 58,
                  "snippet": {
                    "text": "      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n                            List of directories where SSH pkeys (in the format `id_*`) may be found\n\n.. _Pahaz: https://github.com/pahaz\n.. _sshtunnel: https://pypi.python.org/pypi/sshtunnel\n",
                    "rendered": {
                      "text": "      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n                            List of directories where SSH pkeys (in the format `id_*`) may be found\n\n.. _Pahaz: https://github.com/pahaz\n.. _sshtunnel: https://pypi.python.org/pypi/sshtunnel\n",
                      "markdown": "`      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n                            List of directories where SSH pkeys (in the format `id_*`) may be found\n\n.. _Pahaz: https://github.com/pahaz\n.. _sshtunnel: https://pypi.python.org/pypi/sshtunnel\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 60,
                  "endLine": 306,
                  "endColumn": 65,
                  "snippet": {
                    "text": "      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n                            List of directories where SSH pkeys (in the format `id_*`) may be found\n\n",
                    "rendered": {
                      "text": "      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n                            List of directories where SSH pkeys (in the format `id_*`) may be found\n\n",
                      "markdown": "`      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n                            List of directories where SSH pkeys (in the format `id_*`) may be found\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 63,
                  "endLine": 305,
                  "endColumn": 68,
                  "snippet": {
                    "text": "                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n                            List of directories where SSH pkeys (in the format `id_*`) may be found\n",
                    "rendered": {
                      "text": "                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n                            List of directories where SSH pkeys (in the format `id_*`) may be found\n",
                      "markdown": "`                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n                            List of directories where SSH pkeys (in the format `id_*`) may be found\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 27,
                  "endLine": 304,
                  "endColumn": 32,
                  "snippet": {
                    "text": "      -x IP:PORT, --proxy IP:PORT\n                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n",
                    "rendered": {
                      "text": "      -x IP:PORT, --proxy IP:PORT\n                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n",
                      "markdown": "`      -x IP:PORT, --proxy IP:PORT\n                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 42,
                  "endLine": 302,
                  "endColumn": 47,
                  "snippet": {
                    "text": "      -v, --verbose         Increase output verbosity (default: ERROR)\n      -V, --version         Show version number and quit\n      -x IP:PORT, --proxy IP:PORT\n                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n",
                    "rendered": {
                      "text": "      -v, --verbose         Increase output verbosity (default: ERROR)\n      -V, --version         Show version number and quit\n      -x IP:PORT, --proxy IP:PORT\n                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n",
                      "markdown": "`      -v, --verbose         Increase output verbosity (default: ERROR)\n      -V, --version         Show version number and quit\n      -x IP:PORT, --proxy IP:PORT\n                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 27,
                  "endLine": 302,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      -v, --verbose         Increase output verbosity (default: ERROR)\n      -V, --version         Show version number and quit\n      -x IP:PORT, --proxy IP:PORT\n                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n",
                    "rendered": {
                      "text": "      -v, --verbose         Increase output verbosity (default: ERROR)\n      -V, --version         Show version number and quit\n      -x IP:PORT, --proxy IP:PORT\n                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n",
                      "markdown": "`      -v, --verbose         Increase output verbosity (default: ERROR)\n      -V, --version         Show version number and quit\n      -x IP:PORT, --proxy IP:PORT\n                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 84,
                  "endLine": 289,
                  "endColumn": 88,
                  "snippet": {
                    "text": "                            Local bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Elements may also be valid UNIX socket domains:\n                            /tmp/foo.sock /tmp/bar.sock ... /tmp/baz.sock\n                            Equivalent to ssh -LPORT:xxxxxxxxx:xxxx, being the local IP address optional.\n                            By default it will listen in all interfaces (0.0.0.0) and choose a random port.\n                            Example: -L :40000\n      -k SSH_HOST_KEY, --ssh_host_key SSH_HOST_KEY\n",
                    "rendered": {
                      "text": "                            Local bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Elements may also be valid UNIX socket domains:\n                            /tmp/foo.sock /tmp/bar.sock ... /tmp/baz.sock\n                            Equivalent to ssh -LPORT:xxxxxxxxx:xxxx, being the local IP address optional.\n                            By default it will listen in all interfaces (0.0.0.0) and choose a random port.\n                            Example: -L :40000\n      -k SSH_HOST_KEY, --ssh_host_key SSH_HOST_KEY\n",
                      "markdown": "`                            Local bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Elements may also be valid UNIX socket domains:\n                            /tmp/foo.sock /tmp/bar.sock ... /tmp/baz.sock\n                            Equivalent to ssh -LPORT:xxxxxxxxx:xxxx, being the local IP address optional.\n                            By default it will listen in all interfaces (0.0.0.0) and choose a random port.\n                            Example: -L :40000\n      -k SSH_HOST_KEY, --ssh_host_key SSH_HOST_KEY\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 41,
                  "endLine": 289,
                  "endColumn": 46,
                  "snippet": {
                    "text": "                            Local bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Elements may also be valid UNIX socket domains:\n                            /tmp/foo.sock /tmp/bar.sock ... /tmp/baz.sock\n                            Equivalent to ssh -LPORT:xxxxxxxxx:xxxx, being the local IP address optional.\n                            By default it will listen in all interfaces (0.0.0.0) and choose a random port.\n                            Example: -L :40000\n      -k SSH_HOST_KEY, --ssh_host_key SSH_HOST_KEY\n",
                    "rendered": {
                      "text": "                            Local bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Elements may also be valid UNIX socket domains:\n                            /tmp/foo.sock /tmp/bar.sock ... /tmp/baz.sock\n                            Equivalent to ssh -LPORT:xxxxxxxxx:xxxx, being the local IP address optional.\n                            By default it will listen in all interfaces (0.0.0.0) and choose a random port.\n                            Example: -L :40000\n      -k SSH_HOST_KEY, --ssh_host_key SSH_HOST_KEY\n",
                      "markdown": "`                            Local bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Elements may also be valid UNIX socket domains:\n                            /tmp/foo.sock /tmp/bar.sock ... /tmp/baz.sock\n                            Equivalent to ssh -LPORT:xxxxxxxxx:xxxx, being the local IP address optional.\n                            By default it will listen in all interfaces (0.0.0.0) and choose a random port.\n                            Example: -L :40000\n      -k SSH_HOST_KEY, --ssh_host_key SSH_HOST_KEY\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 41,
                  "endLine": 282,
                  "endColumn": 46,
                  "snippet": {
                    "text": "                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Equivalent to ssh -Lxxxx:IP_ADDRESS:PORT\n                            If port is omitted, defaults to 22.\n                            Example: -R 10.10.10.10: 10.10.10.10:5900\n      -L [IP:PORT [IP:PORT ...]], --local_bind_address [IP:PORT [IP:PORT ...]]\n",
                    "rendered": {
                      "text": "                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Equivalent to ssh -Lxxxx:IP_ADDRESS:PORT\n                            If port is omitted, defaults to 22.\n                            Example: -R 10.10.10.10: 10.10.10.10:5900\n      -L [IP:PORT [IP:PORT ...]], --local_bind_address [IP:PORT [IP:PORT ...]]\n",
                      "markdown": "`                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Equivalent to ssh -Lxxxx:IP_ADDRESS:PORT\n                            If port is omitted, defaults to 22.\n                            Example: -R 10.10.10.10: 10.10.10.10:5900\n      -L [IP:PORT [IP:PORT ...]], --local_bind_address [IP:PORT [IP:PORT ...]]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 27,
                  "endLine": 279,
                  "endColumn": 32,
                  "snippet": {
                    "text": "      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Equivalent to ssh -Lxxxx:IP_ADDRESS:PORT\n",
                    "rendered": {
                      "text": "      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Equivalent to ssh -Lxxxx:IP_ADDRESS:PORT\n",
                      "markdown": "`      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Equivalent to ssh -Lxxxx:IP_ADDRESS:PORT\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 27,
                  "endLine": 277,
                  "endColumn": 32,
                  "snippet": {
                    "text": "      -U SSH_USERNAME, --username SSH_USERNAME\n                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n",
                    "rendered": {
                      "text": "      -U SSH_USERNAME, --username SSH_USERNAME\n                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n",
                      "markdown": "`      -U SSH_USERNAME, --username SSH_USERNAME\n                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 27,
                  "endLine": 275,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    optional arguments:\n      -h, --help            show this help message and exit\n      -U SSH_USERNAME, --username SSH_USERNAME\n                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n",
                    "rendered": {
                      "text": "    optional arguments:\n      -h, --help            show this help message and exit\n      -U SSH_USERNAME, --username SSH_USERNAME\n                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n",
                      "markdown": "`    optional arguments:\n      -h, --help            show this help message and exit\n      -U SSH_USERNAME, --username SSH_USERNAME\n                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 57,
                  "endLine": 269,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    Version 0.4.0\n\n    positional arguments:\n      ssh_address           SSH server IP address (GW for SSH tunnels)\n                            set with \"-- ssh_address\" if immediately after -R or -L\n\n    optional arguments:\n",
                    "rendered": {
                      "text": "    Version 0.4.0\n\n    positional arguments:\n      ssh_address           SSH server IP address (GW for SSH tunnels)\n                            set with \"-- ssh_address\" if immediately after -R or -L\n\n    optional arguments:\n",
                      "markdown": "`    Version 0.4.0\n\n    positional arguments:\n      ssh_address           SSH server IP address (GW for SSH tunnels)\n                            set with \"-- ssh_address\" if immediately after -R or -L\n\n    optional arguments:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 38,
                  "endLine": 269,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    Version 0.4.0\n\n    positional arguments:\n      ssh_address           SSH server IP address (GW for SSH tunnels)\n                            set with \"-- ssh_address\" if immediately after -R or -L\n\n    optional arguments:\n",
                    "rendered": {
                      "text": "    Version 0.4.0\n\n    positional arguments:\n      ssh_address           SSH server IP address (GW for SSH tunnels)\n                            set with \"-- ssh_address\" if immediately after -R or -L\n\n    optional arguments:\n",
                      "markdown": "`    Version 0.4.0\n\n    positional arguments:\n      ssh_address           SSH server IP address (GW for SSH tunnels)\n                            set with \"-- ssh_address\" if immediately after -R or -L\n\n    optional arguments:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 27,
                  "endLine": 269,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    Version 0.4.0\n\n    positional arguments:\n      ssh_address           SSH server IP address (GW for SSH tunnels)\n                            set with \"-- ssh_address\" if immediately after -R or -L\n\n    optional arguments:\n",
                    "rendered": {
                      "text": "    Version 0.4.0\n\n    positional arguments:\n      ssh_address           SSH server IP address (GW for SSH tunnels)\n                            set with \"-- ssh_address\" if immediately after -R or -L\n\n    optional arguments:\n",
                      "markdown": "`    Version 0.4.0\n\n    positional arguments:\n      ssh_address           SSH server IP address (GW for SSH tunnels)\n                            set with \"-- ssh_address\" if immediately after -R or -L\n\n    optional arguments:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 15,
                  "endLine": 265,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                     [-d [FOLDER [FOLDER ...]]]\n                     ssh_address\n\n    Pure python ssh tunnel utils\n    Version 0.4.0\n\n    positional arguments:\n",
                    "rendered": {
                      "text": "                     [-d [FOLDER [FOLDER ...]]]\n                     ssh_address\n\n    Pure python ssh tunnel utils\n    Version 0.4.0\n\n    positional arguments:\n",
                      "markdown": "`                     [-d [FOLDER [FOLDER ...]]]\n                     ssh_address\n\n    Pure python ssh tunnel utils\n    Version 0.4.0\n\n    positional arguments:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 48,
                  "endLine": 221,
                  "endColumn": 53,
                  "snippet": {
                    "text": "Example 4\n---------\n\nOpening an SSH session jumping over two tunnels. SSH transport and tunnels\nwill be daemonised, which will not wait for the connections to stop at close\ntime.\n\n",
                    "rendered": {
                      "text": "Example 4\n---------\n\nOpening an SSH session jumping over two tunnels. SSH transport and tunnels\nwill be daemonised, which will not wait for the connections to stop at close\ntime.\n\n",
                      "markdown": "`Example 4\n---------\n\nOpening an SSH session jumping over two tunnels. SSH transport and tunnels\nwill be daemonised, which will not wait for the connections to stop at close\ntime.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 10,
                  "endLine": 221,
                  "endColumn": 15,
                  "snippet": {
                    "text": "Example 4\n---------\n\nOpening an SSH session jumping over two tunnels. SSH transport and tunnels\nwill be daemonised, which will not wait for the connections to stop at close\ntime.\n\n",
                    "rendered": {
                      "text": "Example 4\n---------\n\nOpening an SSH session jumping over two tunnels. SSH transport and tunnels\nwill be daemonised, which will not wait for the connections to stop at close\ntime.\n\n",
                      "markdown": "`Example 4\n---------\n\nOpening an SSH session jumping over two tunnels. SSH transport and tunnels\nwill be daemonised, which will not wait for the connections to stop at close\ntime.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 8,
                  "endLine": 196,
                  "endColumn": 14,
                  "snippet": {
                    "text": ".. code-block:: python\n\n    from sshtunnel import open_tunnel\n    from time import sleep\n\n    with open_tunnel(\n        ('localhost', 2222),\n",
                    "rendered": {
                      "text": ".. code-block:: python\n\n    from sshtunnel import open_tunnel\n    from time import sleep\n\n    with open_tunnel(\n        ('localhost', 2222),\n",
                      "markdown": "`.. code-block:: python\n\n    from sshtunnel import open_tunnel\n    from time import sleep\n\n    with open_tunnel(\n        ('localhost', 2222),\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 44,
                  "endLine": 191,
                  "endColumn": 51,
                  "snippet": {
                    "text": "Example 3\n---------\n\nExample of a port forwarding for the Vagrant MySQL local port:\n\n.. code-block:: python\n\n",
                    "rendered": {
                      "text": "Example 3\n---------\n\nExample of a port forwarding for the Vagrant MySQL local port:\n\n.. code-block:: python\n\n",
                      "markdown": "`Example 3\n---------\n\nExample of a port forwarding for the Vagrant MySQL local port:\n\n.. code-block:: python\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 64,
                  "endLine": 163,
                  "endColumn": 69,
                  "snippet": {
                    "text": "---------\n\nExample of a port forwarding to a private server not directly reachable,\nassuming password protected pkey authentication, remote server's SSH service is\nlistening on port 443 and that port is open in the firewall (**Fig2**):\n\n.. code-block:: python\n",
                    "rendered": {
                      "text": "---------\n\nExample of a port forwarding to a private server not directly reachable,\nassuming password protected pkey authentication, remote server's SSH service is\nlistening on port 443 and that port is open in the firewall (**Fig2**):\n\n.. code-block:: python\n",
                      "markdown": "`---------\n\nExample of a port forwarding to a private server not directly reachable,\nassuming password protected pkey authentication, remote server's SSH service is\nlistening on port 443 and that port is open in the firewall (**Fig2**):\n\n.. code-block:: python\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 54,
                  "endLine": 125,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n    ----------------------------------------------------------------------\n\n**Fig2**: How to connect to ``PRIVATE SERVER`` through SSH tunnel.\n\n\nUsage examples\n",
                    "rendered": {
                      "text": "\n    ----------------------------------------------------------------------\n\n**Fig2**: How to connect to ``PRIVATE SERVER`` through SSH tunnel.\n\n\nUsage examples\n",
                      "markdown": "`\n    ----------------------------------------------------------------------\n\n**Fig2**: How to connect to ``PRIVATE SERVER`` through SSH tunnel.\n\n\nUsage examples\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 22,
                  "endLine": 118,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                                |\n    -------------+              |    +----------+               +---------\n        LOCAL    |              |    |  REMOTE  |               | PRIVATE\n        CLIENT   | <== SSH ========> |  SERVER  | <== local ==> | SERVER\n    -------------+              |    +----------+               +---------\n                                |\n                             FIREWALL (only port 443 is open)\n",
                    "rendered": {
                      "text": "                                |\n    -------------+              |    +----------+               +---------\n        LOCAL    |              |    |  REMOTE  |               | PRIVATE\n        CLIENT   | <== SSH ========> |  SERVER  | <== local ==> | SERVER\n    -------------+              |    +----------+               +---------\n                                |\n                             FIREWALL (only port 443 is open)\n",
                      "markdown": "`                                |\n    -------------+              |    +----------+               +---------\n        LOCAL    |              |    |  REMOTE  |               | PRIVATE\n        CLIENT   | <== SSH ========> |  SERVER  | <== local ==> | SERVER\n    -------------+              |    +----------+               +---------\n                                |\n                             FIREWALL (only port 443 is open)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 17,
                  "endLine": 109,
                  "endColumn": 22,
                  "snippet": {
                    "text": "**Fig1**: How to connect to a service blocked by a firewall through SSH tunnel.\n\n\nIf allowed by the SSH server, it is also possible to reach a private server\n(from the perspective of ``REMOTE SERVER``) not directly visible from the\noutside (``LOCAL CLIENT``'s perspective). ::\n\n",
                    "rendered": {
                      "text": "**Fig1**: How to connect to a service blocked by a firewall through SSH tunnel.\n\n\nIf allowed by the SSH server, it is also possible to reach a private server\n(from the perspective of ``REMOTE SERVER``) not directly visible from the\noutside (``LOCAL CLIENT``'s perspective). ::\n\n",
                      "markdown": "`**Fig1**: How to connect to a service blocked by a firewall through SSH tunnel.\n\n\nIf allowed by the SSH server, it is also possible to reach a private server\n(from the perspective of ``REMOTE SERVER``) not directly visible from the\noutside (``LOCAL CLIENT``'s perspective). ::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 67,
                  "endLine": 106,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\n    ----------------------------------------------------------------------\n\n**Fig1**: How to connect to a service blocked by a firewall through SSH tunnel.\n\n\nIf allowed by the SSH server, it is also possible to reach a private server\n",
                    "rendered": {
                      "text": "\n    ----------------------------------------------------------------------\n\n**Fig1**: How to connect to a service blocked by a firewall through SSH tunnel.\n\n\nIf allowed by the SSH server, it is also possible to reach a private server\n",
                      "markdown": "`\n    ----------------------------------------------------------------------\n\n**Fig1**: How to connect to a service blocked by a firewall through SSH tunnel.\n\n\nIf allowed by the SSH server, it is also possible to reach a private server\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 29,
                  "endLine": 106,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n    ----------------------------------------------------------------------\n\n**Fig1**: How to connect to a service blocked by a firewall through SSH tunnel.\n\n\nIf allowed by the SSH server, it is also possible to reach a private server\n",
                    "rendered": {
                      "text": "\n    ----------------------------------------------------------------------\n\n**Fig1**: How to connect to a service blocked by a firewall through SSH tunnel.\n\n\nIf allowed by the SSH server, it is also possible to reach a private server\n",
                      "markdown": "`\n    ----------------------------------------------------------------------\n\n**Fig1**: How to connect to a service blocked by a firewall through SSH tunnel.\n\n\nIf allowed by the SSH server, it is also possible to reach a private server\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 59,
                  "endLine": 100,
                  "snippet": {
                    "text": "                                |\n    -------------+              |    +----------+\n        LOCAL    |              |    |  REMOTE  | :22 SSH\n        CLIENT   | <== SSH ========> |  SERVER  | :8080 web service\n    -------------+              |    +----------+\n                                |\n                             FIREWALL (only port 22 is open)\n\n",
                    "rendered": {
                      "text": "                                |\n    -------------+              |    +----------+\n        LOCAL    |              |    |  REMOTE  | :22 SSH\n        CLIENT   | <== SSH ========> |  SERVER  | :8080 web service\n    -------------+              |    +----------+\n                                |\n                             FIREWALL (only port 22 is open)\n\n",
                      "markdown": "`                                |\n    -------------+              |    +----------+\n        LOCAL    |              |    |  REMOTE  | :22 SSH\n        CLIENT   | <== SSH ========> |  SERVER  | :8080 web service\n    -------------+              |    +----------+\n                                |\n                             FIREWALL (only port 22 is open)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 22,
                  "endLine": 99,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                                |\n    -------------+              |    +----------+\n        LOCAL    |              |    |  REMOTE  | :22 SSH\n        CLIENT   | <== SSH ========> |  SERVER  | :8080 web service\n    -------------+              |    +----------+\n                                |\n                             FIREWALL (only port 22 is open)\n",
                    "rendered": {
                      "text": "                                |\n    -------------+              |    +----------+\n        LOCAL    |              |    |  REMOTE  | :22 SSH\n        CLIENT   | <== SSH ========> |  SERVER  | :8080 web service\n    -------------+              |    +----------+\n                                |\n                             FIREWALL (only port 22 is open)\n",
                      "markdown": "`                                |\n    -------------+              |    +----------+\n        LOCAL    |              |    |  REMOTE  | :22 SSH\n        CLIENT   | <== SSH ========> |  SERVER  | :8080 web service\n    -------------+              |    +----------+\n                                |\n                             FIREWALL (only port 22 is open)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 53,
                  "endLine": 99,
                  "snippet": {
                    "text": "\n                                |\n    -------------+              |    +----------+\n        LOCAL    |              |    |  REMOTE  | :22 SSH\n        CLIENT   | <== SSH ========> |  SERVER  | :8080 web service\n    -------------+              |    +----------+\n                                |\n                             FIREWALL (only port 22 is open)\n",
                    "rendered": {
                      "text": "\n                                |\n    -------------+              |    +----------+\n        LOCAL    |              |    |  REMOTE  | :22 SSH\n        CLIENT   | <== SSH ========> |  SERVER  | :8080 web service\n    -------------+              |    +----------+\n                                |\n                             FIREWALL (only port 22 is open)\n",
                      "markdown": "`\n                                |\n    -------------+              |    +----------+\n        LOCAL    |              |    |  REMOTE  | :22 SSH\n        CLIENT   | <== SSH ========> |  SERVER  | :8080 web service\n    -------------+              |    +----------+\n                                |\n                             FIREWALL (only port 22 is open)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 10,
                  "endLine": 92,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\nOne of the typical scenarios where ``sshtunnel`` is helpful is depicted in the\nfigure below. User may need to connect a port of a remote server (i.e. 8080)\nwhere only SSH port (usually port 22) is reachable. ::\n\n    ----------------------------------------------------------------------\n\n",
                    "rendered": {
                      "text": "\nOne of the typical scenarios where ``sshtunnel`` is helpful is depicted in the\nfigure below. User may need to connect a port of a remote server (i.e. 8080)\nwhere only SSH port (usually port 22) is reachable. ::\n\n    ----------------------------------------------------------------------\n\n",
                      "markdown": "`\nOne of the typical scenarios where ``sshtunnel`` is helpful is depicted in the\nfigure below. User may need to connect a port of a remote server (i.e. 8080)\nwhere only SSH port (usually port 22) is reachable. ::\n\n    ----------------------------------------------------------------------\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 3,
                  "endLine": 66,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\nor ::\n\n    easy_install sshtunnel\n\nor ::\n\n",
                    "rendered": {
                      "text": "\nor ::\n\n    easy_install sshtunnel\n\nor ::\n\n",
                      "markdown": "`\nor ::\n\n    easy_install sshtunnel\n\nor ::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 3,
                  "endLine": 62,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n::\n\n    pip install sshtunnel\n\nor ::\n\n",
                    "rendered": {
                      "text": "\n::\n\n    pip install sshtunnel\n\nor ::\n\n",
                      "markdown": "`\n::\n\n    pip install sshtunnel\n\nor ::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 9,
                  "endLine": 10,
                  "endColumn": 14,
                  "snippet": {
                    "text": "Author: Pahaz White\nAuthor-email: pahaz.white@gmail.com\nLicense: MIT\nKeywords: ssh tunnel paramiko proxy tcp-forward\nPlatform: unix\nPlatform: macos\nPlatform: windows\n",
                    "rendered": {
                      "text": "Author: Pahaz White\nAuthor-email: pahaz.white@gmail.com\nLicense: MIT\nKeywords: ssh tunnel paramiko proxy tcp-forward\nPlatform: unix\nPlatform: macos\nPlatform: windows\n",
                      "markdown": "`Author: Pahaz White\nAuthor-email: pahaz.white@gmail.com\nLicense: MIT\nKeywords: ssh tunnel paramiko proxy tcp-forward\nPlatform: unix\nPlatform: macos\nPlatform: windows\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/usr/lib/python3.12/site-packages/sshtunnel-0.4.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 20,
                  "endLine": 4,
                  "endColumn": 25,
                  "snippet": {
                    "text": "Metadata-Version: 2.1\nName: sshtunnel\nVersion: 0.4.0\nSummary: Pure python SSH tunnels\nHome-page: https://github.com/pahaz/sshtunnel\nDownload-URL: https://pypi.python.org/packages/source/s/sshtunnel/sshtunnel-0.4.0.zip\nAuthor: Pahaz White\n",
                    "rendered": {
                      "text": "Metadata-Version: 2.1\nName: sshtunnel\nVersion: 0.4.0\nSummary: Pure python SSH tunnels\nHome-page: https://github.com/pahaz/sshtunnel\nDownload-URL: https://pypi.python.org/packages/source/s/sshtunnel/sshtunnel-0.4.0.zip\nAuthor: Pahaz White\n",
                      "markdown": "`Metadata-Version: 2.1\nName: sshtunnel\nVersion: 0.4.0\nSummary: Pure python SSH tunnels\nHome-page: https://github.com/pahaz/sshtunnel\nDownload-URL: https://pypi.python.org/packages/source/s/sshtunnel/sshtunnel-0.4.0.zip\nAuthor: Pahaz White\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sshtunnel-0.4.0-r1.apk/py3-sshtunnel-0.4.0-r1/.PKGINFO"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 21,
                  "endLine": 7,
                  "endColumn": 26,
                  "snippet": {
                    "text": "arch = x86_64\nsize = 141733\norigin = py3-sshtunnel\npkgdesc = Pure python SSH tunnels\nurl = \ncommit = e7d125f8c00c4ea1c0ce15fc64515e8248c2c662\nbuilddate = 1720641378\n",
                    "rendered": {
                      "text": "arch = x86_64\nsize = 141733\norigin = py3-sshtunnel\npkgdesc = Pure python SSH tunnels\nurl = \ncommit = e7d125f8c00c4ea1c0ce15fc64515e8248c2c662\nbuilddate = 1720641378\n",
                      "markdown": "`arch = x86_64\nsize = 141733\norigin = py3-sshtunnel\npkgdesc = Pure python SSH tunnels\nurl = \ncommit = e7d125f8c00c4ea1c0ce15fc64515e8248c2c662\nbuilddate = 1720641378\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}