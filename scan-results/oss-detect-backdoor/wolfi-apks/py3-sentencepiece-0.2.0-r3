{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-sentencepiece-0.2.0-r3.apk/py3-sentencepiece-0.2.0-r3/usr/include/sentencepiece_processor.h"
                },
                "region": {
                  "startLine": 743,
                  "startColumn": 54,
                  "endLine": 743,
                  "endColumn": 59,
                  "snippet": {
                    "text": "// We can instantiate SentencePieceProcessor as follows:\n//\n//  auto model_proto = absl::make_unique<ModelProto>();\n//  io::LoadModelProto(\"//path/spm.model\", model_proto.get());\n//  SentencePieceProcessor sp;\n//  CHECK_OK(sp.Load(std::move(model_proto)));\nutil::Status LoadModelProto(absl::string_view, ModelProto *model_proto);\n",
                    "rendered": {
                      "text": "// We can instantiate SentencePieceProcessor as follows:\n//\n//  auto model_proto = absl::make_unique<ModelProto>();\n//  io::LoadModelProto(\"//path/spm.model\", model_proto.get());\n//  SentencePieceProcessor sp;\n//  CHECK_OK(sp.Load(std::move(model_proto)));\nutil::Status LoadModelProto(absl::string_view, ModelProto *model_proto);\n",
                      "markdown": "`// We can instantiate SentencePieceProcessor as follows:\n//\n//  auto model_proto = absl::make_unique<ModelProto>();\n//  io::LoadModelProto(\"//path/spm.model\", model_proto.get());\n//  SentencePieceProcessor sp;\n//  CHECK_OK(sp.Load(std::move(model_proto)));\nutil::Status LoadModelProto(absl::string_view, ModelProto *model_proto);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}