{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8486,
                  "startColumn": 65,
                  "endLine": 8486,
                  "endColumn": 73,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserViewDtos.SpecialViewOptionDto\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserViewDtos.SpecialViewOptionDto\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserViewDtos.SpecialViewOptionDto\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8484,
                  "startColumn": 77,
                  "endLine": 8484,
                  "endColumn": 85,
                  "snippet": {
                    "text": "            Gets or sets the new plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets the new plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n",
                      "markdown": "`            Gets or sets the new plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8484,
                  "startColumn": 63,
                  "endLine": 8484,
                  "endColumn": 71,
                  "snippet": {
                    "text": "            Gets or sets the new plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets the new plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n",
                      "markdown": "`            Gets or sets the new plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8481,
                  "startColumn": 44,
                  "endLine": 8481,
                  "endColumn": 52,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.NewPw\">\n            <summary>\n            Gets or sets the new plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.ResetPassword\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.NewPw\">\n            <summary>\n            Gets or sets the new plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.ResetPassword\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.NewPw\">\n            <summary>\n            Gets or sets the new plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.ResetPassword\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8479,
                  "startColumn": 63,
                  "endLine": 8479,
                  "endColumn": 71,
                  "snippet": {
                    "text": "            Gets or sets the current plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.NewPw\">\n            <summary>\n            Gets or sets the new plain text password.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets the current plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.NewPw\">\n            <summary>\n            Gets or sets the new plain text password.\n            </summary>\n",
                      "markdown": "`            Gets or sets the current plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.NewPw\">\n            <summary>\n            Gets or sets the new plain text password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8476,
                  "startColumn": 48,
                  "endLine": 8476,
                  "endColumn": 56,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPw\">\n            <summary>\n            Gets or sets the current plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.NewPw\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPw\">\n            <summary>\n            Gets or sets the current plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.NewPw\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPw\">\n            <summary>\n            Gets or sets the current plain text password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.NewPw\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8474,
                  "startColumn": 63,
                  "endLine": 8474,
                  "endColumn": 71,
                  "snippet": {
                    "text": "            Gets or sets the current sha1-hashed password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPw\">\n            <summary>\n            Gets or sets the current plain text password.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets the current sha1-hashed password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPw\">\n            <summary>\n            Gets or sets the current plain text password.\n            </summary>\n",
                      "markdown": "`            Gets or sets the current sha1-hashed password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPw\">\n            <summary>\n            Gets or sets the current plain text password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8471,
                  "startColumn": 49,
                  "endLine": 8471,
                  "endColumn": 57,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n            <summary>\n            Gets or sets the current sha1-hashed password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPw\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n            <summary>\n            Gets or sets the current sha1-hashed password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPw\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n            <summary>\n            Gets or sets the current sha1-hashed password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPw\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8469,
                  "startColumn": 79,
                  "endLine": 8469,
                  "endColumn": 87,
                  "snippet": {
                    "text": "            The update user password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n            <summary>\n            Gets or sets the current sha1-hashed password.\n            </summary>\n",
                    "rendered": {
                      "text": "            The update user password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n            <summary>\n            Gets or sets the current sha1-hashed password.\n            </summary>\n",
                      "markdown": "`            The update user password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n            <summary>\n            Gets or sets the current sha1-hashed password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8469,
                  "startColumn": 63,
                  "endLine": 8469,
                  "endColumn": 71,
                  "snippet": {
                    "text": "            The update user password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n            <summary>\n            Gets or sets the current sha1-hashed password.\n            </summary>\n",
                    "rendered": {
                      "text": "            The update user password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n            <summary>\n            Gets or sets the current sha1-hashed password.\n            </summary>\n",
                      "markdown": "`            The update user password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n            <summary>\n            Gets or sets the current sha1-hashed password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8466,
                  "startColumn": 28,
                  "endLine": 8466,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserPassword\">\n            <summary>\n            The update user password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserPassword\">\n            <summary>\n            The update user password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserPassword\">\n            <summary>\n            The update user password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8464,
                  "startColumn": 63,
                  "endLine": 8464,
                  "endColumn": 71,
                  "snippet": {
                    "text": "            Gets or sets a value indicating whether to reset the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserPassword\">\n            <summary>\n            The update user password request body.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets a value indicating whether to reset the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserPassword\">\n            <summary>\n            The update user password request body.\n            </summary>\n",
                      "markdown": "`            Gets or sets a value indicating whether to reset the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserPassword\">\n            <summary>\n            The update user password request body.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8461,
                  "startColumn": 65,
                  "endLine": 8461,
                  "endColumn": 73,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserPassword\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserPassword\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserPassword\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8459,
                  "startColumn": 81,
                  "endLine": 8459,
                  "endColumn": 89,
                  "snippet": {
                    "text": "            Gets or sets the new password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets the new password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n",
                      "markdown": "`            Gets or sets the new password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8459,
                  "startColumn": 67,
                  "endLine": 8459,
                  "endColumn": 75,
                  "snippet": {
                    "text": "            Gets or sets the new password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets the new password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n",
                      "markdown": "`            Gets or sets the new password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.ResetPassword\">\n            <summary>\n            Gets or sets a value indicating whether to reset the password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8456,
                  "startColumn": 33,
                  "endLine": 8456,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPw\">\n            <summary>\n            Gets or sets the new password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.ResetPassword\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPw\">\n            <summary>\n            Gets or sets the new password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.ResetPassword\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPw\">\n            <summary>\n            Gets or sets the new password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.ResetPassword\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8454,
                  "startColumn": 67,
                  "endLine": 8454,
                  "endColumn": 75,
                  "snippet": {
                    "text": "            Gets or sets the new sha1-hashed password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPw\">\n            <summary>\n            Gets or sets the new password.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets the new sha1-hashed password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPw\">\n            <summary>\n            Gets or sets the new password.\n            </summary>\n",
                      "markdown": "`            Gets or sets the new sha1-hashed password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPw\">\n            <summary>\n            Gets or sets the new password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8451,
                  "startColumn": 45,
                  "endLine": 8451,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n            <summary>\n            Gets or sets the new sha1-hashed password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPw\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n            <summary>\n            Gets or sets the new sha1-hashed password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPw\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n            <summary>\n            Gets or sets the new sha1-hashed password.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPw\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8449,
                  "startColumn": 79,
                  "endLine": 8449,
                  "endColumn": 87,
                  "snippet": {
                    "text": "            The update user easy password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n            <summary>\n            Gets or sets the new sha1-hashed password.\n            </summary>\n",
                    "rendered": {
                      "text": "            The update user easy password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n            <summary>\n            Gets or sets the new sha1-hashed password.\n            </summary>\n",
                      "markdown": "`            The update user easy password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n            <summary>\n            Gets or sets the new sha1-hashed password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8449,
                  "startColumn": 67,
                  "endLine": 8449,
                  "endColumn": 75,
                  "snippet": {
                    "text": "            The update user easy password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n            <summary>\n            Gets or sets the new sha1-hashed password.\n            </summary>\n",
                    "rendered": {
                      "text": "            The update user easy password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n            <summary>\n            Gets or sets the new sha1-hashed password.\n            </summary>\n",
                      "markdown": "`            The update user easy password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n            <summary>\n            Gets or sets the new sha1-hashed password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8446,
                  "startColumn": 33,
                  "endLine": 8446,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword\">\n            <summary>\n            The update user easy password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword\">\n            <summary>\n            The update user easy password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword\">\n            <summary>\n            The update user easy password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8444,
                  "startColumn": 67,
                  "endLine": 8444,
                  "endColumn": 75,
                  "snippet": {
                    "text": "            Gets or sets the quick connect secret.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword\">\n            <summary>\n            The update user easy password request body.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets the quick connect secret.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword\">\n            <summary>\n            The update user easy password request body.\n            </summary>\n",
                      "markdown": "`            Gets or sets the quick connect secret.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword\">\n            <summary>\n            The update user easy password request body.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8431,
                  "startColumn": 53,
                  "endLine": 8431,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto.Pin\">\n            <summary>\n            Gets or sets the entered pin to have the password reset.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.QuickConnectDto\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto.Pin\">\n            <summary>\n            Gets or sets the entered pin to have the password reset.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.QuickConnectDto\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto.Pin\">\n            <summary>\n            Gets or sets the entered pin to have the password reset.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.QuickConnectDto\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8429,
                  "startColumn": 59,
                  "endLine": 8429,
                  "endColumn": 67,
                  "snippet": {
                    "text": "            Forgot Password Pin enter request body DTO.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto.Pin\">\n            <summary>\n            Gets or sets the entered pin to have the password reset.\n            </summary>\n",
                    "rendered": {
                      "text": "            Forgot Password Pin enter request body DTO.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto.Pin\">\n            <summary>\n            Gets or sets the entered pin to have the password reset.\n            </summary>\n",
                      "markdown": "`            Forgot Password Pin enter request body DTO.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto.Pin\">\n            <summary>\n            Gets or sets the entered pin to have the password reset.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8426,
                  "startColumn": 19,
                  "endLine": 8426,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto\">\n            <summary>\n            Forgot Password Pin enter request body DTO.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto.Pin\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto\">\n            <summary>\n            Forgot Password Pin enter request body DTO.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto.Pin\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto\">\n            <summary>\n            Forgot Password Pin enter request body DTO.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto.Pin\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8424,
                  "startColumn": 59,
                  "endLine": 8424,
                  "endColumn": 67,
                  "snippet": {
                    "text": "            Gets or sets the entered username to have its password reset.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto\">\n            <summary>\n            Forgot Password Pin enter request body DTO.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets the entered username to have its password reset.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto\">\n            <summary>\n            Forgot Password Pin enter request body DTO.\n            </summary>\n",
                      "markdown": "`            Gets or sets the entered username to have its password reset.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto\">\n            <summary>\n            Forgot Password Pin enter request body DTO.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8421,
                  "startColumn": 58,
                  "endLine": 8421,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto.EnteredUsername\">\n            <summary>\n            Gets or sets the entered username to have its password reset.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto.EnteredUsername\">\n            <summary>\n            Gets or sets the entered username to have its password reset.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto.EnteredUsername\">\n            <summary>\n            Gets or sets the entered username to have its password reset.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8419,
                  "startColumn": 59,
                  "endLine": 8419,
                  "endColumn": 67,
                  "snippet": {
                    "text": "            Forgot Password request body DTO.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto.EnteredUsername\">\n            <summary>\n            Gets or sets the entered username to have its password reset.\n            </summary>\n",
                    "rendered": {
                      "text": "            Forgot Password request body DTO.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto.EnteredUsername\">\n            <summary>\n            Gets or sets the entered username to have its password reset.\n            </summary>\n",
                      "markdown": "`            Forgot Password request body DTO.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto.EnteredUsername\">\n            <summary>\n            Gets or sets the entered username to have its password reset.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8416,
                  "startColumn": 19,
                  "endLine": 8416,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto\">\n            <summary>\n            Forgot Password request body DTO.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto.EnteredUsername\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto\">\n            <summary>\n            Forgot Password request body DTO.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto.EnteredUsername\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto\">\n            <summary>\n            Forgot Password request body DTO.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto.EnteredUsername\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8414,
                  "startColumn": 59,
                  "endLine": 8414,
                  "endColumn": 67,
                  "snippet": {
                    "text": "            Gets or sets the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto\">\n            <summary>\n            Forgot Password request body DTO.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto\">\n            <summary>\n            Forgot Password request body DTO.\n            </summary>\n",
                      "markdown": "`            Gets or sets the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto\">\n            <summary>\n            Forgot Password request body DTO.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8411,
                  "startColumn": 29,
                  "endLine": 8411,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.CreateUserByName.Password\">\n            <summary>\n            Gets or sets the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.CreateUserByName.Password\">\n            <summary>\n            Gets or sets the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.CreateUserByName.Password\">\n            <summary>\n            Gets or sets the password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.ForgotPasswordDto\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8409,
                  "startColumn": 70,
                  "endLine": 8409,
                  "endColumn": 78,
                  "snippet": {
                    "text": "            Gets or sets the username.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.CreateUserByName.Password\">\n            <summary>\n            Gets or sets the password.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets the username.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.CreateUserByName.Password\">\n            <summary>\n            Gets or sets the password.\n            </summary>\n",
                      "markdown": "`            Gets or sets the username.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.CreateUserByName.Password\">\n            <summary>\n            Gets or sets the password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8396,
                  "startColumn": 40,
                  "endLine": 8396,
                  "endColumn": 48,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.AuthenticateUserByName.Pw\">\n            <summary>\n            Gets or sets the plain text password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.CreateUserByName\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.AuthenticateUserByName.Pw\">\n            <summary>\n            Gets or sets the plain text password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.CreateUserByName\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.AuthenticateUserByName.Pw\">\n            <summary>\n            Gets or sets the plain text password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.CreateUserByName\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8033,
                  "startColumn": 36,
                  "endLine": 8033,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.StartupDtos.StartupUserDto.Password\">\n            <summary>\n            Gets or sets the user's password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.StreamingDtos.HlsAudioRequestDto\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.StartupDtos.StartupUserDto.Password\">\n            <summary>\n            Gets or sets the user's password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.StreamingDtos.HlsAudioRequestDto\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.StartupDtos.StartupUserDto.Password\">\n            <summary>\n            Gets or sets the user's password.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Api.Models.StreamingDtos.HlsAudioRequestDto\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8031,
                  "startColumn": 71,
                  "endLine": 8031,
                  "endColumn": 79,
                  "snippet": {
                    "text": "            Gets or sets the username.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.StartupDtos.StartupUserDto.Password\">\n            <summary>\n            Gets or sets the user's password.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets the username.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.StartupDtos.StartupUserDto.Password\">\n            <summary>\n            Gets or sets the user's password.\n            </summary>\n",
                      "markdown": "`            Gets or sets the username.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.StartupDtos.StartupUserDto.Password\">\n            <summary>\n            Gets or sets the user's password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5848,
                  "startColumn": 62,
                  "endLine": 5848,
                  "endColumn": 70,
                  "snippet": {
                    "text": "            <summary>\n            Redeems a forgot password pin.\n            </summary>\n            <param name=\"forgotPasswordPinRequest\">The forgot password pin request containing the entered pin.</param>\n            <response code=\"200\">Pin reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.PinRedeemResult\"/>.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            <summary>\n            Redeems a forgot password pin.\n            </summary>\n            <param name=\"forgotPasswordPinRequest\">The forgot password pin request containing the entered pin.</param>\n            <response code=\"200\">Pin reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.PinRedeemResult\"/>.</returns>\n        </member>\n",
                      "markdown": "`            <summary>\n            Redeems a forgot password pin.\n            </summary>\n            <param name=\"forgotPasswordPinRequest\">The forgot password pin request containing the entered pin.</param>\n            <response code=\"200\">Pin reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.PinRedeemResult\"/>.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5848,
                  "startColumn": 31,
                  "endLine": 5848,
                  "endColumn": 39,
                  "snippet": {
                    "text": "            <summary>\n            Redeems a forgot password pin.\n            </summary>\n            <param name=\"forgotPasswordPinRequest\">The forgot password pin request containing the entered pin.</param>\n            <response code=\"200\">Pin reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.PinRedeemResult\"/>.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            <summary>\n            Redeems a forgot password pin.\n            </summary>\n            <param name=\"forgotPasswordPinRequest\">The forgot password pin request containing the entered pin.</param>\n            <response code=\"200\">Pin reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.PinRedeemResult\"/>.</returns>\n        </member>\n",
                      "markdown": "`            <summary>\n            Redeems a forgot password pin.\n            </summary>\n            <param name=\"forgotPasswordPinRequest\">The forgot password pin request containing the entered pin.</param>\n            <response code=\"200\">Pin reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.PinRedeemResult\"/>.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5846,
                  "startColumn": 29,
                  "endLine": 5846,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n            <summary>\n            Redeems a forgot password pin.\n            </summary>\n            <param name=\"forgotPasswordPinRequest\">The forgot password pin request containing the entered pin.</param>\n            <response code=\"200\">Pin reset process started.</response>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n            <summary>\n            Redeems a forgot password pin.\n            </summary>\n            <param name=\"forgotPasswordPinRequest\">The forgot password pin request containing the entered pin.</param>\n            <response code=\"200\">Pin reset process started.</response>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n            <summary>\n            Redeems a forgot password pin.\n            </summary>\n            <param name=\"forgotPasswordPinRequest\">The forgot password pin request containing the entered pin.</param>\n            <response code=\"200\">Pin reset process started.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5844,
                  "startColumn": 117,
                  "endLine": 5844,
                  "endColumn": 125,
                  "snippet": {
                    "text": "            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n            <summary>\n            Redeems a forgot password pin.\n            </summary>\n",
                    "rendered": {
                      "text": "            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n            <summary>\n            Redeems a forgot password pin.\n            </summary>\n",
                      "markdown": "`            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n            <summary>\n            Redeems a forgot password pin.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5844,
                  "startColumn": 70,
                  "endLine": 5844,
                  "endColumn": 78,
                  "snippet": {
                    "text": "            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n            <summary>\n            Redeems a forgot password pin.\n            </summary>\n",
                    "rendered": {
                      "text": "            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n            <summary>\n            Redeems a forgot password pin.\n            </summary>\n",
                      "markdown": "`            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n            <summary>\n            Redeems a forgot password pin.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5842,
                  "startColumn": 124,
                  "endLine": 5842,
                  "endColumn": 132,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n            <summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n            <summary>\n",
                      "markdown": "`            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5841,
                  "startColumn": 33,
                  "endLine": 5841,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            Initiates the forgot password process for a local user.\n            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n",
                    "rendered": {
                      "text": "            Initiates the forgot password process for a local user.\n            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n",
                      "markdown": "`            Initiates the forgot password process for a local user.\n            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPasswordPin(Jellyfin.Api.Models.UserDtos.ForgotPasswordPinDto)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5840,
                  "startColumn": 59,
                  "endLine": 5840,
                  "endColumn": 67,
                  "snippet": {
                    "text": "            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n",
                      "markdown": "`            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5840,
                  "startColumn": 31,
                  "endLine": 5840,
                  "endColumn": 39,
                  "snippet": {
                    "text": "            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n",
                      "markdown": "`            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing a <see cref=\"T:MediaBrowser.Model.Users.ForgotPasswordResult\"/>.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5838,
                  "startColumn": 33,
                  "endLine": 5838,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPassword(Jellyfin.Api.Models.UserDtos.ForgotPasswordDto)\">\n            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPassword(Jellyfin.Api.Models.UserDtos.ForgotPasswordDto)\">\n            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPassword(Jellyfin.Api.Models.UserDtos.ForgotPasswordDto)\">\n            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n            <param name=\"forgotPasswordRequest\">The forgot password request containing the entered username.</param>\n            <response code=\"200\">Password reset process started.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5836,
                  "startColumn": 114,
                  "endLine": 5836,
                  "endColumn": 122,
                  "snippet": {
                    "text": "            <response code=\"200\">User created.</response>\n            <returns>An <see cref=\"T:MediaBrowser.Model.Dto.UserDto\"/> of the new user.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPassword(Jellyfin.Api.Models.UserDtos.ForgotPasswordDto)\">\n            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n",
                    "rendered": {
                      "text": "            <response code=\"200\">User created.</response>\n            <returns>An <see cref=\"T:MediaBrowser.Model.Dto.UserDto\"/> of the new user.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPassword(Jellyfin.Api.Models.UserDtos.ForgotPasswordDto)\">\n            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n",
                      "markdown": "`            <response code=\"200\">User created.</response>\n            <returns>An <see cref=\"T:MediaBrowser.Model.Dto.UserDto\"/> of the new user.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPassword(Jellyfin.Api.Models.UserDtos.ForgotPasswordDto)\">\n            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5836,
                  "startColumn": 70,
                  "endLine": 5836,
                  "endColumn": 78,
                  "snippet": {
                    "text": "            <response code=\"200\">User created.</response>\n            <returns>An <see cref=\"T:MediaBrowser.Model.Dto.UserDto\"/> of the new user.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPassword(Jellyfin.Api.Models.UserDtos.ForgotPasswordDto)\">\n            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n",
                    "rendered": {
                      "text": "            <response code=\"200\">User created.</response>\n            <returns>An <see cref=\"T:MediaBrowser.Model.Dto.UserDto\"/> of the new user.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPassword(Jellyfin.Api.Models.UserDtos.ForgotPasswordDto)\">\n            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n",
                      "markdown": "`            <response code=\"200\">User created.</response>\n            <returns>An <see cref=\"T:MediaBrowser.Model.Dto.UserDto\"/> of the new user.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.ForgotPassword(Jellyfin.Api.Models.UserDtos.ForgotPasswordDto)\">\n            <summary>\n            Initiates the forgot password process for a local user.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5771,
                  "startColumn": 67,
                  "endLine": 5771,
                  "endColumn": 75,
                  "snippet": {
                    "text": "see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failu",
                    "rendered": {
                      "text": "see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failu",
                      "markdown": "`see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failu`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5770,
                  "startColumn": 33,
                  "endLine": 5770,
                  "endColumn": 41,
                  "snippet": {
                    "text": "   </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Mic",
                    "rendered": {
                      "text": "   </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Mic",
                      "markdown": "`   </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Mic`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5769,
                  "startColumn": 169,
                  "endLine": 5769,
                  "endColumn": 177,
                  "snippet": {
                    "text": "            Updates a user's easy password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n",
                    "rendered": {
                      "text": "            Updates a user's easy password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n",
                      "markdown": "`            Updates a user's easy password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5769,
                  "startColumn": 105,
                  "endLine": 5769,
                  "endColumn": 113,
                  "snippet": {
                    "text": "            Updates a user's easy password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n",
                    "rendered": {
                      "text": "            Updates a user's easy password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n",
                      "markdown": "`            Updates a user's easy password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5766,
                  "startColumn": 34,
                  "endLine": 5766,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\">\n            <summary>\n            Updates a user's easy password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\">\n            <summary>\n            Updates a user's easy password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\">\n            <summary>\n            Updates a user's easy password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5764,
                  "startColumn": 142,
                  "endLine": 5764,
                  "endColumn": 150,
                  "snippet": {
                    "text": "            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failure.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\">\n            <summary>\n            Updates a user's easy password.\n            </summary>\n",
                    "rendered": {
                      "text": "            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failure.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\">\n            <summary>\n            Updates a user's easy password.\n            </summary>\n",
                      "markdown": "`            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failure.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\">\n            <summary>\n            Updates a user's easy password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5764,
                  "startColumn": 78,
                  "endLine": 5764,
                  "endColumn": 86,
                  "snippet": {
                    "text": "            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failure.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\">\n            <summary>\n            Updates a user's easy password.\n            </summary>\n",
                    "rendered": {
                      "text": "            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failure.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\">\n            <summary>\n            Updates a user's easy password.\n            </summary>\n",
                      "markdown": "`            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failure.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\">\n            <summary>\n            Updates a user's easy password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5760,
                  "startColumn": 67,
                  "endLine": 5760,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failu",
                    "rendered": {
                      "text": "\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failu",
                      "markdown": "`\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failu`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5759,
                  "startColumn": 33,
                  "endLine": 5759,
                  "endColumn": 41,
                  "snippet": {
                    "text": "ary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Mic",
                    "rendered": {
                      "text": "ary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Mic",
                      "markdown": "`ary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Mic`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5758,
                  "startColumn": 178,
                  "endLine": 5758,
                  "endColumn": 186,
                  "snippet": {
                    "text": "            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n",
                    "rendered": {
                      "text": "            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n",
                      "markdown": "`            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5758,
                  "startColumn": 101,
                  "endLine": 5758,
                  "endColumn": 109,
                  "snippet": {
                    "text": "            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n",
                    "rendered": {
                      "text": "            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n",
                      "markdown": "`            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5755,
                  "startColumn": 29,
                  "endLine": 5755,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPasswordLegacy(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPasswordLegacy(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPasswordLegacy(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5753,
                  "startColumn": 140,
                  "endLine": 5753,
                  "endColumn": 148,
                  "snippet": {
                    "text": "            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failure.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPasswordLegacy(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n",
                    "rendered": {
                      "text": "            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failure.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPasswordLegacy(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n",
                      "markdown": "`            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failure.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPasswordLegacy(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5753,
                  "startColumn": 74,
                  "endLine": 5753,
                  "endColumn": 82,
                  "snippet": {
                    "text": "            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failure.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPasswordLegacy(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n",
                    "rendered": {
                      "text": "            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failure.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPasswordLegacy(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n",
                      "markdown": "`            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failure.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPasswordLegacy(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5749,
                  "startColumn": 67,
                  "endLine": 5749,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failu",
                    "rendered": {
                      "text": "\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failu",
                      "markdown": "`\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult\"/> on failu`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5748,
                  "startColumn": 33,
                  "endLine": 5748,
                  "endColumn": 41,
                  "snippet": {
                    "text": "ary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Mic",
                    "rendered": {
                      "text": "ary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Mic",
                      "markdown": "`ary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Mic`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5747,
                  "startColumn": 178,
                  "endLine": 5747,
                  "endColumn": 186,
                  "snippet": {
                    "text": "            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n",
                    "rendered": {
                      "text": "            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n",
                      "markdown": "`            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5747,
                  "startColumn": 101,
                  "endLine": 5747,
                  "endColumn": 109,
                  "snippet": {
                    "text": "            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n",
                    "rendered": {
                      "text": "            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n",
                      "markdown": "`            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5744,
                  "startColumn": 29,
                  "endLine": 5744,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"request\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5742,
                  "startColumn": 151,
                  "endLine": 5742,
                  "endColumn": 159,
                  "snippet": {
                    "text": "            <response code=\"400\">Missing token.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing an <see cref=\"T:MediaBrowser.Controller.Session.AuthenticationRequest\"/> with information about the new session.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n",
                    "rendered": {
                      "text": "            <response code=\"400\">Missing token.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing an <see cref=\"T:MediaBrowser.Controller.Session.AuthenticationRequest\"/> with information about the new session.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n",
                      "markdown": "`            <response code=\"400\">Missing token.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing an <see cref=\"T:MediaBrowser.Controller.Session.AuthenticationRequest\"/> with information about the new session.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5742,
                  "startColumn": 74,
                  "endLine": 5742,
                  "endColumn": 82,
                  "snippet": {
                    "text": "            <response code=\"400\">Missing token.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing an <see cref=\"T:MediaBrowser.Controller.Session.AuthenticationRequest\"/> with information about the new session.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n",
                    "rendered": {
                      "text": "            <response code=\"400\">Missing token.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing an <see cref=\"T:MediaBrowser.Controller.Session.AuthenticationRequest\"/> with information about the new session.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n",
                      "markdown": "`            <response code=\"400\">Missing token.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing an <see cref=\"T:MediaBrowser.Controller.Session.AuthenticationRequest\"/> with information about the new session.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\">\n            <summary>\n            Updates a user's password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5721,
                  "startColumn": 45,
                  "endLine": 5721,
                  "endColumn": 53,
                  "snippet": {
                    "text": "            <param name=\"userId\">The user id.</param>\n            <param name=\"pw\">The password as plain text.</param>\n            <response code=\"200\">User authenticated.</response>\n            <response code=\"403\">Sha1-hashed password only is not allowed.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing an <see cref=\"T:MediaBrowser.Controller.Authentication.AuthenticationResult\"/>.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            <param name=\"userId\">The user id.</param>\n            <param name=\"pw\">The password as plain text.</param>\n            <response code=\"200\">User authenticated.</response>\n            <response code=\"403\">Sha1-hashed password only is not allowed.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing an <see cref=\"T:MediaBrowser.Controller.Authentication.AuthenticationResult\"/>.</returns>\n        </member>\n",
                      "markdown": "`            <param name=\"userId\">The user id.</param>\n            <param name=\"pw\">The password as plain text.</param>\n            <response code=\"200\">User authenticated.</response>\n            <response code=\"403\">Sha1-hashed password only is not allowed.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:System.Threading.Tasks.Task\"/> containing an <see cref=\"T:MediaBrowser.Controller.Authentication.AuthenticationResult\"/>.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5719,
                  "startColumn": 33,
                  "endLine": 5719,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            Authenticates a user.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"pw\">The password as plain text.</param>\n            <response code=\"200\">User authenticated.</response>\n            <response code=\"403\">Sha1-hashed password only is not allowed.</response>\n            <response code=\"404\">User not found.</response>\n",
                    "rendered": {
                      "text": "            Authenticates a user.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"pw\">The password as plain text.</param>\n            <response code=\"200\">User authenticated.</response>\n            <response code=\"403\">Sha1-hashed password only is not allowed.</response>\n            <response code=\"404\">User not found.</response>\n",
                      "markdown": "`            Authenticates a user.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"pw\">The password as plain text.</param>\n            <response code=\"200\">User authenticated.</response>\n            <response code=\"403\">Sha1-hashed password only is not allowed.</response>\n            <response code=\"404\">User not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 4875,
                  "startColumn": 55,
                  "endLine": 4875,
                  "endColumn": 63,
                  "snippet": {
                    "text": "            Sets the user name and password.\n            </summary>\n            <param name=\"startupUserDto\">The DTO containing username and password.</param>\n            <response code=\"204\">Updated user name and password.</response>\n            <returns>\n            A <see cref=\"T:System.Threading.Tasks.Task\" /> that represents the asynchronous update operation.\n            The task result contains a <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.\n",
                    "rendered": {
                      "text": "            Sets the user name and password.\n            </summary>\n            <param name=\"startupUserDto\">The DTO containing username and password.</param>\n            <response code=\"204\">Updated user name and password.</response>\n            <returns>\n            A <see cref=\"T:System.Threading.Tasks.Task\" /> that represents the asynchronous update operation.\n            The task result contains a <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.\n",
                      "markdown": "`            Sets the user name and password.\n            </summary>\n            <param name=\"startupUserDto\">The DTO containing username and password.</param>\n            <response code=\"204\">Updated user name and password.</response>\n            <returns>\n            A <see cref=\"T:System.Threading.Tasks.Task\" /> that represents the asynchronous update operation.\n            The task result contains a <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 4874,
                  "startColumn": 73,
                  "endLine": 4874,
                  "endColumn": 81,
                  "snippet": {
                    "text": "            <summary>\n            Sets the user name and password.\n            </summary>\n            <param name=\"startupUserDto\">The DTO containing username and password.</param>\n            <response code=\"204\">Updated user name and password.</response>\n            <returns>\n            A <see cref=\"T:System.Threading.Tasks.Task\" /> that represents the asynchronous update operation.\n",
                    "rendered": {
                      "text": "            <summary>\n            Sets the user name and password.\n            </summary>\n            <param name=\"startupUserDto\">The DTO containing username and password.</param>\n            <response code=\"204\">Updated user name and password.</response>\n            <returns>\n            A <see cref=\"T:System.Threading.Tasks.Task\" /> that represents the asynchronous update operation.\n",
                      "markdown": "`            <summary>\n            Sets the user name and password.\n            </summary>\n            <param name=\"startupUserDto\">The DTO containing username and password.</param>\n            <response code=\"204\">Updated user name and password.</response>\n            <returns>\n            A <see cref=\"T:System.Threading.Tasks.Task\" /> that represents the asynchronous update operation.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 4872,
                  "startColumn": 35,
                  "endLine": 4872,
                  "endColumn": 43,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.StartupController.UpdateStartupUser(Jellyfin.Api.Models.StartupDtos.StartupUserDto)\">\n            <summary>\n            Sets the user name and password.\n            </summary>\n            <param name=\"startupUserDto\">The DTO containing username and password.</param>\n            <response code=\"204\">Updated user name and password.</response>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.StartupController.UpdateStartupUser(Jellyfin.Api.Models.StartupDtos.StartupUserDto)\">\n            <summary>\n            Sets the user name and password.\n            </summary>\n            <param name=\"startupUserDto\">The DTO containing username and password.</param>\n            <response code=\"204\">Updated user name and password.</response>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.StartupController.UpdateStartupUser(Jellyfin.Api.Models.StartupDtos.StartupUserDto)\">\n            <summary>\n            Sets the user name and password.\n            </summary>\n            <param name=\"startupUserDto\">The DTO containing username and password.</param>\n            <response code=\"204\">Updated user name and password.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 4819,
                  "startColumn": 90,
                  "endLine": 4819,
                  "endColumn": 98,
                  "snippet": {
                    "text": "            Get all password reset providers.\n            </summary>\n            <response code=\"200\">Password reset providers retrieved.</response>\n            <returns>An <see cref=\"T:System.Collections.Generic.IEnumerable`1\"/> with the password reset providers.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.StartupController\">\n            <summary>\n",
                    "rendered": {
                      "text": "            Get all password reset providers.\n            </summary>\n            <response code=\"200\">Password reset providers retrieved.</response>\n            <returns>An <see cref=\"T:System.Collections.Generic.IEnumerable`1\"/> with the password reset providers.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.StartupController\">\n            <summary>\n",
                      "markdown": "`            Get all password reset providers.\n            </summary>\n            <response code=\"200\">Password reset providers retrieved.</response>\n            <returns>An <see cref=\"T:System.Collections.Generic.IEnumerable`1\"/> with the password reset providers.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.StartupController\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 4818,
                  "startColumn": 33,
                  "endLine": 4818,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            <summary>\n            Get all password reset providers.\n            </summary>\n            <response code=\"200\">Password reset providers retrieved.</response>\n            <returns>An <see cref=\"T:System.Collections.Generic.IEnumerable`1\"/> with the password reset providers.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.StartupController\">\n",
                    "rendered": {
                      "text": "            <summary>\n            Get all password reset providers.\n            </summary>\n            <response code=\"200\">Password reset providers retrieved.</response>\n            <returns>An <see cref=\"T:System.Collections.Generic.IEnumerable`1\"/> with the password reset providers.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.StartupController\">\n",
                      "markdown": "`            <summary>\n            Get all password reset providers.\n            </summary>\n            <response code=\"200\">Password reset providers retrieved.</response>\n            <returns>An <see cref=\"T:System.Collections.Generic.IEnumerable`1\"/> with the password reset providers.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.StartupController\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 4816,
                  "startColumn": 20,
                  "endLine": 4816,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SessionController.GetPasswordResetProviders\">\n            <summary>\n            Get all password reset providers.\n            </summary>\n            <response code=\"200\">Password reset providers retrieved.</response>\n            <returns>An <see cref=\"T:System.Collections.Generic.IEnumerable`1\"/> with the password reset providers.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SessionController.GetPasswordResetProviders\">\n            <summary>\n            Get all password reset providers.\n            </summary>\n            <response code=\"200\">Password reset providers retrieved.</response>\n            <returns>An <see cref=\"T:System.Collections.Generic.IEnumerable`1\"/> with the password reset providers.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SessionController.GetPasswordResetProviders\">\n            <summary>\n            Get all password reset providers.\n            </summary>\n            <response code=\"200\">Password reset providers retrieved.</response>\n            <returns>An <see cref=\"T:System.Collections.Generic.IEnumerable`1\"/> with the password reset providers.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 4814,
                  "startColumn": 70,
                  "endLine": 4814,
                  "endColumn": 78,
                  "snippet": {
                    "text": "            <response code=\"200\">Auth providers retrieved.</response>\n            <returns>An <see cref=\"T:System.Collections.Generic.IEnumerable`1\"/> with the auth providers.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SessionController.GetPasswordResetProviders\">\n            <summary>\n            Get all password reset providers.\n            </summary>\n",
                    "rendered": {
                      "text": "            <response code=\"200\">Auth providers retrieved.</response>\n            <returns>An <see cref=\"T:System.Collections.Generic.IEnumerable`1\"/> with the auth providers.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SessionController.GetPasswordResetProviders\">\n            <summary>\n            Get all password reset providers.\n            </summary>\n",
                      "markdown": "`            <response code=\"200\">Auth providers retrieved.</response>\n            <returns>An <see cref=\"T:System.Collections.Generic.IEnumerable`1\"/> with the auth providers.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SessionController.GetPasswordResetProviders\">\n            <summary>\n            Get all password reset providers.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 3530,
                  "startColumn": 29,
                  "endLine": 3530,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            <summary>\n            Adds a listings provider.\n            </summary>\n            <param name=\"pw\">Password.</param>\n            <param name=\"listingsProviderInfo\">New listings info.</param>\n            <param name=\"validateListings\">Validate listings.</param>\n            <param name=\"validateLogin\">Validate login.</param>\n",
                    "rendered": {
                      "text": "            <summary>\n            Adds a listings provider.\n            </summary>\n            <param name=\"pw\">Password.</param>\n            <param name=\"listingsProviderInfo\">New listings info.</param>\n            <param name=\"validateListings\">Validate listings.</param>\n            <param name=\"validateLogin\">Validate login.</param>\n",
                      "markdown": "`            <summary>\n            Adds a listings provider.\n            </summary>\n            <param name=\"pw\">Password.</param>\n            <param name=\"listingsProviderInfo\">New listings info.</param>\n            <param name=\"validateListings\">Validate listings.</param>\n            <param name=\"validateLogin\">Validate login.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7028,
                  "startColumn": 29,
                  "endLine": 7028,
                  "endColumn": 49,
                  "snippet": {
                    "text": "e=\"logger\">Instance of the <see cref=\"T:Microsoft.Extensions.Logging.ILogger`1\"/> interface.</param>\n            <param name=\"serverConfigurationManager\">Instance of the <see cref=\"T:MediaBrowser.Controller.Configuration.IServerConfigurationManager\"/> interface.</param>\n            <param name=\"hostEnvironment\">Instance of the <see cref=\"T:Microsoft.AspNetCore.Hosting.IWebHostEnvironment\"/> interface.</param>\n        </member>\n        <member name=\"M:Jellyfin.Api.Middleware.ExceptionMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)\">\n            <summary>\n            Invoke request.\n            </summary>\n",
                    "rendered": {
                      "text": "e=\"logger\">Instance of the <see cref=\"T:Microsoft.Extensions.Logging.ILogger`1\"/> interface.</param>\n            <param name=\"serverConfigurationManager\">Instance of the <see cref=\"T:MediaBrowser.Controller.Configuration.IServerConfigurationManager\"/> interface.</param>\n            <param name=\"hostEnvironment\">Instance of the <see cref=\"T:Microsoft.AspNetCore.Hosting.IWebHostEnvironment\"/> interface.</param>\n        </member>\n        <member name=\"M:Jellyfin.Api.Middleware.ExceptionMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)\">\n            <summary>\n            Invoke request.\n            </summary>\n",
                      "markdown": "`e=\"logger\">Instance of the <see cref=\"T:Microsoft.Extensions.Logging.ILogger`1\"/> interface.</param>\n            <param name=\"serverConfigurationManager\">Instance of the <see cref=\"T:MediaBrowser.Controller.Configuration.IServerConfigurationManager\"/> interface.</param>\n            <param name=\"hostEnvironment\">Instance of the <see cref=\"T:Microsoft.AspNetCore.Hosting.IWebHostEnvironment\"/> interface.</param>\n        </member>\n        <member name=\"M:Jellyfin.Api.Middleware.ExceptionMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)\">\n            <summary>\n            Invoke request.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 1493,
                  "startColumn": 49,
                  "endLine": 1493,
                  "endColumn": 74,
                  "snippet": {
                    "text": "            <param name=\"path\">The path.</param>\n            <returns>Parent path.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetDefaultDirectoryBrowser\">\n            <summary>\n            Get Default directory browser.\n            </summary>\n",
                    "rendered": {
                      "text": "            <param name=\"path\">The path.</param>\n            <returns>Parent path.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetDefaultDirectoryBrowser\">\n            <summary>\n            Get Default directory browser.\n            </summary>\n",
                      "markdown": "`            <param name=\"path\">The path.</param>\n            <returns>Parent path.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetDefaultDirectoryBrowser\">\n            <summary>\n            Get Default directory browser.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 1486,
                  "startColumn": 49,
                  "endLine": 1486,
                  "endColumn": 74,
                  "snippet": {
                    "text": "            <response code=\"200\">List of entries returned.</response>\n            <returns>List of entries.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetParentPath(System.String)\">\n            <summary>\n            Gets the parent path of a given path.\n            </summary>\n",
                    "rendered": {
                      "text": "            <response code=\"200\">List of entries returned.</response>\n            <returns>List of entries.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetParentPath(System.String)\">\n            <summary>\n            Gets the parent path of a given path.\n            </summary>\n",
                      "markdown": "`            <response code=\"200\">List of entries returned.</response>\n            <returns>List of entries.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetParentPath(System.String)\">\n            <summary>\n            Gets the parent path of a given path.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 1479,
                  "startColumn": 49,
                  "endLine": 1479,
                  "endColumn": 74,
                  "snippet": {
                    "text": "            <response code=\"200\">Empty array returned.</response>\n            <returns>List of entries.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetDrives\">\n            <summary>\n            Gets available drives from the server's file system.\n            </summary>\n",
                    "rendered": {
                      "text": "            <response code=\"200\">Empty array returned.</response>\n            <returns>List of entries.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetDrives\">\n            <summary>\n            Gets available drives from the server's file system.\n            </summary>\n",
                      "markdown": "`            <response code=\"200\">Empty array returned.</response>\n            <returns>List of entries.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetDrives\">\n            <summary>\n            Gets available drives from the server's file system.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 1472,
                  "startColumn": 49,
                  "endLine": 1472,
                  "endColumn": 74,
                  "snippet": {
                    "text": "            <response code=\"404\">Path not found.</response>\n            <returns>Validation status.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetNetworkShares\">\n            <summary>\n            Gets network paths.\n            </summary>\n",
                    "rendered": {
                      "text": "            <response code=\"404\">Path not found.</response>\n            <returns>Validation status.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetNetworkShares\">\n            <summary>\n            Gets network paths.\n            </summary>\n",
                      "markdown": "`            <response code=\"404\">Path not found.</response>\n            <returns>Validation status.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetNetworkShares\">\n            <summary>\n            Gets network paths.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 1453,
                  "startColumn": 49,
                  "endLine": 1453,
                  "endColumn": 74,
                  "snippet": {
                    "text": "            <param name=\"fileSystem\">Instance of the <see cref=\"T:MediaBrowser.Model.IO.IFileSystem\"/> interface.</param>\n            <param name=\"logger\">Instance of the <see cref=\"T:Microsoft.Extensions.Logging.ILogger`1\"/> interface.</param>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetDirectoryContents(System.String,System.Boolean,System.Boolean)\">\n            <summary>\n            Gets the contents of a given directory in the file system.\n            </summary>\n",
                    "rendered": {
                      "text": "            <param name=\"fileSystem\">Instance of the <see cref=\"T:MediaBrowser.Model.IO.IFileSystem\"/> interface.</param>\n            <param name=\"logger\">Instance of the <see cref=\"T:Microsoft.Extensions.Logging.ILogger`1\"/> interface.</param>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetDirectoryContents(System.String,System.Boolean,System.Boolean)\">\n            <summary>\n            Gets the contents of a given directory in the file system.\n            </summary>\n",
                      "markdown": "`            <param name=\"fileSystem\">Instance of the <see cref=\"T:MediaBrowser.Model.IO.IFileSystem\"/> interface.</param>\n            <param name=\"logger\">Instance of the <see cref=\"T:Microsoft.Extensions.Logging.ILogger`1\"/> interface.</param>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.EnvironmentController.GetDirectoryContents(System.String,System.Boolean,System.Boolean)\">\n            <summary>\n            Gets the contents of a given directory in the file system.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2225,
                  "startColumn": 55,
                  "endLine": 2225,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Api.Controllers.ImageController.UploadCustomSplashscreen\">\n            <summary>\n            Uploads a custom splashscreen.\n            The body is expected to the image contents base64 encoded.\n            </summary>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n            <response code=\"204\">Successfully uploaded new splashscreen.</response>\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Api.Controllers.ImageController.UploadCustomSplashscreen\">\n            <summary>\n            Uploads a custom splashscreen.\n            The body is expected to the image contents base64 encoded.\n            </summary>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n            <response code=\"204\">Successfully uploaded new splashscreen.</response>\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Api.Controllers.ImageController.UploadCustomSplashscreen\">\n            <summary>\n            Uploads a custom splashscreen.\n            The body is expected to the image contents base64 encoded.\n            </summary>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n            <response code=\"204\">Successfully uploaded new splashscreen.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8466,
                  "startColumn": 15,
                  "endLine": 8466,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserPassword\">\n            <summary>\n            The update user password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserPassword\">\n            <summary>\n            The update user password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserPassword\">\n            <summary>\n            The update user password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserPassword.CurrentPassword\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 8446,
                  "startColumn": 15,
                  "endLine": 8446,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword\">\n            <summary>\n            The update user easy password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword\">\n            <summary>\n            The update user easy password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword\">\n            <summary>\n            The update user easy password request body.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword.NewPassword\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7932,
                  "startColumn": 11,
                  "endLine": 7932,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.PlaylistDtos.UpdatePlaylistUserDto\">\n            <summary>\n            Update existing playlist user dto. Fields set to `null` will not be updated and keep their current values.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.PlaylistDtos.UpdatePlaylistUserDto.CanEdit\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.PlaylistDtos.UpdatePlaylistUserDto\">\n            <summary>\n            Update existing playlist user dto. Fields set to `null` will not be updated and keep their current values.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.PlaylistDtos.UpdatePlaylistUserDto.CanEdit\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Models.PlaylistDtos.UpdatePlaylistUserDto\">\n            <summary>\n            Update existing playlist user dto. Fields set to `null` will not be updated and keep their current values.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.PlaylistDtos.UpdatePlaylistUserDto.CanEdit\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7907,
                  "startColumn": 11,
                  "endLine": 7907,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.PlaylistDtos.UpdatePlaylistDto\">\n            <summary>\n            Update existing playlist dto. Fields set to `null` will not be updated and keep their current values.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.PlaylistDtos.UpdatePlaylistDto.Name\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.PlaylistDtos.UpdatePlaylistDto\">\n            <summary>\n            Update existing playlist dto. Fields set to `null` will not be updated and keep their current values.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.PlaylistDtos.UpdatePlaylistDto.Name\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Models.PlaylistDtos.UpdatePlaylistDto\">\n            <summary>\n            Update existing playlist dto. Fields set to `null` will not be updated and keep their current values.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.PlaylistDtos.UpdatePlaylistDto.Name\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7526,
                  "startColumn": 11,
                  "endLine": 7526,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.LibraryStructureDto.UpdateMediaPathRequestDto\">\n            <summary>\n            Update library options dto.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryStructureDto.UpdateMediaPathRequestDto.Name\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.LibraryStructureDto.UpdateMediaPathRequestDto\">\n            <summary>\n            Update library options dto.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryStructureDto.UpdateMediaPathRequestDto.Name\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Models.LibraryStructureDto.UpdateMediaPathRequestDto\">\n            <summary>\n            Update library options dto.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryStructureDto.UpdateMediaPathRequestDto.Name\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7511,
                  "startColumn": 11,
                  "endLine": 7511,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.LibraryStructureDto.UpdateLibraryOptionsDto\">\n            <summary>\n            Update library options dto.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryStructureDto.UpdateLibraryOptionsDto.Id\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.LibraryStructureDto.UpdateLibraryOptionsDto\">\n            <summary>\n            Update library options dto.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryStructureDto.UpdateLibraryOptionsDto.Id\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Models.LibraryStructureDto.UpdateLibraryOptionsDto\">\n            <summary>\n            Update library options dto.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryStructureDto.UpdateLibraryOptionsDto.Id\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7475,
                  "startColumn": 30,
                  "endLine": 7475,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoPathDto.UpdateType\">\n            <summary>\n            Gets or sets media update type.\n            Created, Modified, Deleted.\n            </summary>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoPathDto.UpdateType\">\n            <summary>\n            Gets or sets media update type.\n            Created, Modified, Deleted.\n            </summary>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoPathDto.UpdateType\">\n            <summary>\n            Gets or sets media update type.\n            Created, Modified, Deleted.\n            </summary>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7465,
                  "startColumn": 21,
                  "endLine": 7465,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoPathDto\">\n            <summary>\n            The media update info path.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoPathDto.Path\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoPathDto\">\n            <summary>\n            The media update info path.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoPathDto.Path\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoPathDto\">\n            <summary>\n            The media update info path.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoPathDto.Path\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7455,
                  "startColumn": 17,
                  "endLine": 7455,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoDto\">\n            <summary>\n            Media Update Info Dto.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoDto.Updates\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoDto\">\n            <summary>\n            Media Update Info Dto.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoDto.Updates\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoDto\">\n            <summary>\n            Media Update Info Dto.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LibraryDtos.MediaUpdateInfoDto.Updates\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 6933,
                  "startColumn": 74,
                  "endLine": 6933,
                  "endColumn": 82,
                  "snippet": {
                    "text": "            <param name=\"claimsPrincipal\">The <see cref=\"T:System.Security.Claims.ClaimsPrincipal\"/> for the current request.</param>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"restrictUserPreferences\">Whether to restrict the user preferences.</param>\n            <returns>A <see cref=\"T:System.Boolean\"/> whether the user can update the entry.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Api.Helpers.StreamingHelpers\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <param name=\"claimsPrincipal\">The <see cref=\"T:System.Security.Claims.ClaimsPrincipal\"/> for the current request.</param>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"restrictUserPreferences\">Whether to restrict the user preferences.</param>\n            <returns>A <see cref=\"T:System.Boolean\"/> whether the user can update the entry.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Api.Helpers.StreamingHelpers\">\n            <summary>\n",
                      "markdown": "`            <param name=\"claimsPrincipal\">The <see cref=\"T:System.Security.Claims.ClaimsPrincipal\"/> for the current request.</param>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"restrictUserPreferences\">Whether to restrict the user preferences.</param>\n            <returns>A <see cref=\"T:System.Boolean\"/> whether the user can update the entry.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Api.Helpers.StreamingHelpers\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 6927,
                  "startColumn": 34,
                  "endLine": 6927,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Helpers.RequestHelpers.AssertCanUpdateUser(MediaBrowser.Controller.Library.IUserManager,System.Security.Claims.ClaimsPrincipal,System.Guid,System.Boolean)\">\n            <summary>\n            Checks if the user can update an entry.\n            </summary>\n            <param name=\"userManager\">An instance of the <see cref=\"T:MediaBrowser.Controller.Library.IUserManager\"/> interface.</param>\n            <param name=\"claimsPrincipal\">The <see cref=\"T:System.Security.Claims.ClaimsPrincipal\"/> for the current request.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Helpers.RequestHelpers.AssertCanUpdateUser(MediaBrowser.Controller.Library.IUserManager,System.Security.Claims.ClaimsPrincipal,System.Guid,System.Boolean)\">\n            <summary>\n            Checks if the user can update an entry.\n            </summary>\n            <param name=\"userManager\">An instance of the <see cref=\"T:MediaBrowser.Controller.Library.IUserManager\"/> interface.</param>\n            <param name=\"claimsPrincipal\">The <see cref=\"T:System.Security.Claims.ClaimsPrincipal\"/> for the current request.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Helpers.RequestHelpers.AssertCanUpdateUser(MediaBrowser.Controller.Library.IUserManager,System.Security.Claims.ClaimsPrincipal,System.Guid,System.Boolean)\">\n            <summary>\n            Checks if the user can update an entry.\n            </summary>\n            <param name=\"userManager\">An instance of the <see cref=\"T:MediaBrowser.Controller.Library.IUserManager\"/> interface.</param>\n            <param name=\"claimsPrincipal\">The <see cref=\"T:System.Security.Claims.ClaimsPrincipal\"/> for the current request.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 6216,
                  "startColumn": 39,
                  "endLine": 6216,
                  "endColumn": 43,
                  "snippet": {
                    "text": "(System.Guid[])\">\n            <summary>\n            Merges videos into a single record.\n            </summary>\n            <param name=\"ids\">Item id list. This allows multiple, comma delimited.</param>\n            <response code=\"204\">Videos merged.</response>\n            <response code=\"400\">Supply at least 2 video ids.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success, or a <see cref=\"T:Microsoft.AspNetCore.Mvc.BadRequestResult\"/> if less than two ids were supplied.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Contro",
                    "rendered": {
                      "text": "(System.Guid[])\">\n            <summary>\n            Merges videos into a single record.\n            </summary>\n            <param name=\"ids\">Item id list. This allows multiple, comma delimited.</param>\n            <response code=\"204\">Videos merged.</response>\n            <response code=\"400\">Supply at least 2 video ids.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success, or a <see cref=\"T:Microsoft.AspNetCore.Mvc.BadRequestResult\"/> if less than two ids were supplied.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Contro",
                      "markdown": "`(System.Guid[])\">\n            <summary>\n            Merges videos into a single record.\n            </summary>\n            <param name=\"ids\">Item id list. This allows multiple, comma delimited.</param>\n            <response code=\"204\">Videos merged.</response>\n            <response code=\"400\">Supply at least 2 video ids.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success, or a <see cref=\"T:Microsoft.AspNetCore.Mvc.BadRequestResult\"/> if less than two ids were supplied.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Contro`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5825,
                  "startColumn": 51,
                  "endLine": 5825,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            <param name=\"userId\">The user id.</param>\n            <param name=\"userConfig\">The new user configuration.</param>\n            <response code=\"204\">User configuration updated.</response>\n            <response code=\"403\">User configuration update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.CreateUserByName(Jellyfin.Api.Models.UserDtos.CreateUserByName)\">\n",
                    "rendered": {
                      "text": "            <param name=\"userId\">The user id.</param>\n            <param name=\"userConfig\">The new user configuration.</param>\n            <response code=\"204\">User configuration updated.</response>\n            <response code=\"403\">User configuration update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.CreateUserByName(Jellyfin.Api.Models.UserDtos.CreateUserByName)\">\n",
                      "markdown": "`            <param name=\"userId\">The user id.</param>\n            <param name=\"userConfig\">The new user configuration.</param>\n            <response code=\"204\">User configuration updated.</response>\n            <response code=\"403\">User configuration update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.CreateUserByName(Jellyfin.Api.Models.UserDtos.CreateUserByName)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5815,
                  "startColumn": 51,
                  "endLine": 5815,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            <param name=\"userId\">The user id.</param>\n            <param name=\"userConfig\">The new user configuration.</param>\n            <response code=\"204\">User configuration updated.</response>\n            <response code=\"403\">User configuration update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserConfigurationLegacy(System.Guid,MediaBrowser.Model.Configuration.UserConfiguration)\">\n",
                    "rendered": {
                      "text": "            <param name=\"userId\">The user id.</param>\n            <param name=\"userConfig\">The new user configuration.</param>\n            <response code=\"204\">User configuration updated.</response>\n            <response code=\"403\">User configuration update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserConfigurationLegacy(System.Guid,MediaBrowser.Model.Configuration.UserConfiguration)\">\n",
                      "markdown": "`            <param name=\"userId\">The user id.</param>\n            <param name=\"userConfig\">The new user configuration.</param>\n            <response code=\"204\">User configuration updated.</response>\n            <response code=\"403\">User configuration update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserConfigurationLegacy(System.Guid,MediaBrowser.Model.Configuration.UserConfiguration)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5805,
                  "startColumn": 44,
                  "endLine": 5805,
                  "endColumn": 52,
                  "snippet": {
                    "text": "          <param name=\"userId\">The user id.</param>\n            <param name=\"newPolicy\">The new user policy.</param>\n            <response code=\"204\">User policy updated.</response>\n            <response code=\"400\">User policy was not supplied.</response>\n            <response code=\"403\">User policy update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.BadRequestResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> on failure..</returns>\n        </member>\n        <member ",
                    "rendered": {
                      "text": "          <param name=\"userId\">The user id.</param>\n            <param name=\"newPolicy\">The new user policy.</param>\n            <response code=\"204\">User policy updated.</response>\n            <response code=\"400\">User policy was not supplied.</response>\n            <response code=\"403\">User policy update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.BadRequestResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> on failure..</returns>\n        </member>\n        <member ",
                      "markdown": "`          <param name=\"userId\">The user id.</param>\n            <param name=\"newPolicy\">The new user policy.</param>\n            <response code=\"204\">User policy updated.</response>\n            <response code=\"400\">User policy was not supplied.</response>\n            <response code=\"403\">User policy update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.BadRequestResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> on failure..</returns>\n        </member>\n        <member `"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5794,
                  "startColumn": 37,
                  "endLine": 5794,
                  "endColumn": 45,
                  "snippet": {
                    "text": "y>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"updateUser\">The updated user model.</param>\n            <response code=\"204\">User updated.</response>\n            <response code=\"400\">User information was not supplied.</response>\n            <response code=\"403\">User update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.BadRequestResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> on failure.</returns>\n        </member>\n        <member n",
                    "rendered": {
                      "text": "y>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"updateUser\">The updated user model.</param>\n            <response code=\"204\">User updated.</response>\n            <response code=\"400\">User information was not supplied.</response>\n            <response code=\"403\">User update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.BadRequestResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> on failure.</returns>\n        </member>\n        <member n",
                      "markdown": "`y>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"updateUser\">The updated user model.</param>\n            <response code=\"204\">User updated.</response>\n            <response code=\"400\">User information was not supplied.</response>\n            <response code=\"403\">User update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.BadRequestResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> on failure.</returns>\n        </member>\n        <member n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5783,
                  "startColumn": 37,
                  "endLine": 5783,
                  "endColumn": 45,
                  "snippet": {
                    "text": "y>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"updateUser\">The updated user model.</param>\n            <response code=\"204\">User updated.</response>\n            <response code=\"400\">User information was not supplied.</response>\n            <response code=\"403\">User update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.BadRequestResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> on failure.</returns>\n        </member>\n        <member n",
                    "rendered": {
                      "text": "y>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"updateUser\">The updated user model.</param>\n            <response code=\"204\">User updated.</response>\n            <response code=\"400\">User information was not supplied.</response>\n            <response code=\"403\">User update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.BadRequestResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> on failure.</returns>\n        </member>\n        <member n",
                      "markdown": "`y>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"updateUser\">The updated user model.</param>\n            <response code=\"204\">User updated.</response>\n            <response code=\"400\">User information was not supplied.</response>\n            <response code=\"403\">User update forbidden.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.BadRequestResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> on failure.</returns>\n        </member>\n        <member n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5771,
                  "startColumn": 55,
                  "endLine": 5771,
                  "endColumn": 63,
                  "snippet": {
                    "text": "quest\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult",
                    "rendered": {
                      "text": "quest\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult",
                      "markdown": "`quest\">The <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5760,
                  "startColumn": 55,
                  "endLine": 5760,
                  "endColumn": 63,
                  "snippet": {
                    "text": "e <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult",
                    "rendered": {
                      "text": "e <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult",
                      "markdown": "`e <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5749,
                  "startColumn": 55,
                  "endLine": 5749,
                  "endColumn": 63,
                  "snippet": {
                    "text": "e <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult",
                    "rendered": {
                      "text": "e <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult",
                      "markdown": "`e <see cref=\"M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\"/> request.</param>\n            <response code=\"204\">Password successfully reset.</response>\n            <response code=\"403\">User is not allowed to update the password.</response>\n            <response code=\"404\">User not found.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success or a <see cref=\"T:Microsoft.AspNetCore.Mvc.ForbidResult\"/> or a <see cref=\"T:Microsoft.AspNetCore.Mvc.NotFoundResult`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5519,
                  "startColumn": 53,
                  "endLine": 5519,
                  "endColumn": 57,
                  "snippet": {
                    "text": "            <param name=\"index\">The index of the desired tile.</param>\n            <param name=\"mediaSourceId\">The media version id, if using an alternate version.</param>\n            <response code=\"200\">Tile image returned.</response>\n            <response code=\"200\">Tile image not found at specified index.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.FileResult\"/> containing the trickplay tiles image.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.TvShowsController\">\n",
                    "rendered": {
                      "text": "            <param name=\"index\">The index of the desired tile.</param>\n            <param name=\"mediaSourceId\">The media version id, if using an alternate version.</param>\n            <response code=\"200\">Tile image returned.</response>\n            <response code=\"200\">Tile image not found at specified index.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.FileResult\"/> containing the trickplay tiles image.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.TvShowsController\">\n",
                      "markdown": "`            <param name=\"index\">The index of the desired tile.</param>\n            <param name=\"mediaSourceId\">The media version id, if using an alternate version.</param>\n            <response code=\"200\">Tile image returned.</response>\n            <response code=\"200\">Tile image not found at specified index.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.FileResult\"/> containing the trickplay tiles image.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.TvShowsController\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5282,
                  "startColumn": 11,
                  "endLine": 5282,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayPing(Jellyfin.Api.Models.SyncPlayDtos.PingRequestDto)\">\n            <summary>\n            Update session ping.\n            </summary>\n            <param name=\"requestData\">The new ping.</param>\n            <response code=\"204\">Ping updated.</response>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayPing(Jellyfin.Api.Models.SyncPlayDtos.PingRequestDto)\">\n            <summary>\n            Update session ping.\n            </summary>\n            <param name=\"requestData\">The new ping.</param>\n            <response code=\"204\">Ping updated.</response>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayPing(Jellyfin.Api.Models.SyncPlayDtos.PingRequestDto)\">\n            <summary>\n            Update session ping.\n            </summary>\n            <param name=\"requestData\">The new ping.</param>\n            <response code=\"204\">Ping updated.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5277,
                  "startColumn": 43,
                  "endLine": 5277,
                  "endColumn": 51,
                  "snippet": {
                    "text": "            Request to set shuffle mode in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new shuffle mode.</param>\n            <response code=\"204\">Play queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayPing(Jellyfin.Api.Models.SyncPlayDtos.PingRequestDto)\">\n",
                    "rendered": {
                      "text": "            Request to set shuffle mode in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new shuffle mode.</param>\n            <response code=\"204\">Play queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayPing(Jellyfin.Api.Models.SyncPlayDtos.PingRequestDto)\">\n",
                      "markdown": "`            Request to set shuffle mode in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new shuffle mode.</param>\n            <response code=\"204\">Play queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayPing(Jellyfin.Api.Models.SyncPlayDtos.PingRequestDto)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5269,
                  "startColumn": 43,
                  "endLine": 5269,
                  "endColumn": 51,
                  "snippet": {
                    "text": "            Request to set repeat mode in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new repeat mode.</param>\n            <response code=\"204\">Play queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySetShuffleMode(Jellyfin.Api.Models.SyncPlayDtos.SetShuffleModeRequestDto)\">\n",
                    "rendered": {
                      "text": "            Request to set repeat mode in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new repeat mode.</param>\n            <response code=\"204\">Play queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySetShuffleMode(Jellyfin.Api.Models.SyncPlayDtos.SetShuffleModeRequestDto)\">\n",
                      "markdown": "`            Request to set repeat mode in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new repeat mode.</param>\n            <response code=\"204\">Play queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySetShuffleMode(Jellyfin.Api.Models.SyncPlayDtos.SetShuffleModeRequestDto)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5261,
                  "startColumn": 46,
                  "endLine": 5261,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            Request previous item in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The current item information.</param>\n            <response code=\"204\">Previous item update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySetRepeatMode(Jellyfin.Api.Models.SyncPlayDtos.SetRepeatModeRequestDto)\">\n",
                    "rendered": {
                      "text": "            Request previous item in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The current item information.</param>\n            <response code=\"204\">Previous item update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySetRepeatMode(Jellyfin.Api.Models.SyncPlayDtos.SetRepeatModeRequestDto)\">\n",
                      "markdown": "`            Request previous item in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The current item information.</param>\n            <response code=\"204\">Previous item update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySetRepeatMode(Jellyfin.Api.Models.SyncPlayDtos.SetRepeatModeRequestDto)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5253,
                  "startColumn": 42,
                  "endLine": 5253,
                  "endColumn": 50,
                  "snippet": {
                    "text": "            Request next item in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The current item information.</param>\n            <response code=\"204\">Next item update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayPreviousItem(Jellyfin.Api.Models.SyncPlayDtos.PreviousItemRequestDto)\">\n",
                    "rendered": {
                      "text": "            Request next item in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The current item information.</param>\n            <response code=\"204\">Next item update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayPreviousItem(Jellyfin.Api.Models.SyncPlayDtos.PreviousItemRequestDto)\">\n",
                      "markdown": "`            Request next item in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The current item information.</param>\n            <response code=\"204\">Next item update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayPreviousItem(Jellyfin.Api.Models.SyncPlayDtos.PreviousItemRequestDto)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5237,
                  "startColumn": 44,
                  "endLine": 5237,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            Notify SyncPlay group that member is ready for playback.\n            </summary>\n            <param name=\"requestData\">The player status.</param>\n            <response code=\"204\">Group state update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySetIgnoreWait(Jellyfin.Api.Models.SyncPlayDtos.IgnoreWaitRequestDto)\">\n",
                    "rendered": {
                      "text": "            Notify SyncPlay group that member is ready for playback.\n            </summary>\n            <param name=\"requestData\">The player status.</param>\n            <response code=\"204\">Group state update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySetIgnoreWait(Jellyfin.Api.Models.SyncPlayDtos.IgnoreWaitRequestDto)\">\n",
                      "markdown": "`            Notify SyncPlay group that member is ready for playback.\n            </summary>\n            <param name=\"requestData\">The player status.</param>\n            <response code=\"204\">Group state update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySetIgnoreWait(Jellyfin.Api.Models.SyncPlayDtos.IgnoreWaitRequestDto)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5229,
                  "startColumn": 44,
                  "endLine": 5229,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            Notify SyncPlay group that member is buffering.\n            </summary>\n            <param name=\"requestData\">The player status.</param>\n            <response code=\"204\">Group state update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayReady(Jellyfin.Api.Models.SyncPlayDtos.ReadyRequestDto)\">\n",
                    "rendered": {
                      "text": "            Notify SyncPlay group that member is buffering.\n            </summary>\n            <param name=\"requestData\">The player status.</param>\n            <response code=\"204\">Group state update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayReady(Jellyfin.Api.Models.SyncPlayDtos.ReadyRequestDto)\">\n",
                      "markdown": "`            Notify SyncPlay group that member is buffering.\n            </summary>\n            <param name=\"requestData\">The player status.</param>\n            <response code=\"204\">Group state update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayReady(Jellyfin.Api.Models.SyncPlayDtos.ReadyRequestDto)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5221,
                  "startColumn": 37,
                  "endLine": 5221,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            Request seek in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new playback position.</param>\n            <response code=\"204\">Seek update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayBuffering(Jellyfin.Api.Models.SyncPlayDtos.BufferRequestDto)\">\n",
                    "rendered": {
                      "text": "            Request seek in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new playback position.</param>\n            <response code=\"204\">Seek update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayBuffering(Jellyfin.Api.Models.SyncPlayDtos.BufferRequestDto)\">\n",
                      "markdown": "`            Request seek in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new playback position.</param>\n            <response code=\"204\">Seek update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayBuffering(Jellyfin.Api.Models.SyncPlayDtos.BufferRequestDto)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5213,
                  "startColumn": 37,
                  "endLine": 5213,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            <summary>\n            Request stop in SyncPlay group.\n            </summary>\n            <response code=\"204\">Stop update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySeek(Jellyfin.Api.Models.SyncPlayDtos.SeekRequestDto)\">\n",
                    "rendered": {
                      "text": "            <summary>\n            Request stop in SyncPlay group.\n            </summary>\n            <response code=\"204\">Stop update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySeek(Jellyfin.Api.Models.SyncPlayDtos.SeekRequestDto)\">\n",
                      "markdown": "`            <summary>\n            Request stop in SyncPlay group.\n            </summary>\n            <response code=\"204\">Stop update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySeek(Jellyfin.Api.Models.SyncPlayDtos.SeekRequestDto)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5206,
                  "startColumn": 38,
                  "endLine": 5206,
                  "endColumn": 46,
                  "snippet": {
                    "text": "            <summary>\n            Request pause in SyncPlay group.\n            </summary>\n            <response code=\"204\">Pause update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayStop\">\n",
                    "rendered": {
                      "text": "            <summary>\n            Request pause in SyncPlay group.\n            </summary>\n            <response code=\"204\">Pause update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayStop\">\n",
                      "markdown": "`            <summary>\n            Request pause in SyncPlay group.\n            </summary>\n            <response code=\"204\">Pause update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayStop\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5199,
                  "startColumn": 40,
                  "endLine": 5199,
                  "endColumn": 48,
                  "snippet": {
                    "text": "            <summary>\n            Request unpause in SyncPlay group.\n            </summary>\n            <response code=\"204\">Unpause update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayPause\">\n",
                    "rendered": {
                      "text": "            <summary>\n            Request unpause in SyncPlay group.\n            </summary>\n            <response code=\"204\">Unpause update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayPause\">\n",
                      "markdown": "`            <summary>\n            Request unpause in SyncPlay group.\n            </summary>\n            <response code=\"204\">Unpause update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayPause\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5192,
                  "startColumn": 38,
                  "endLine": 5192,
                  "endColumn": 46,
                  "snippet": {
                    "text": "            Request to queue items to the playlist of a SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The items to add.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayUnpause\">\n",
                    "rendered": {
                      "text": "            Request to queue items to the playlist of a SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The items to add.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayUnpause\">\n",
                      "markdown": "`            Request to queue items to the playlist of a SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The items to add.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayUnpause\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5184,
                  "startColumn": 38,
                  "endLine": 5184,
                  "endColumn": 46,
                  "snippet": {
                    "text": "            Request to move an item in the playlist in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new position for the item.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayQueue(Jellyfin.Api.Models.SyncPlayDtos.QueueRequestDto)\">\n",
                    "rendered": {
                      "text": "            Request to move an item in the playlist in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new position for the item.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayQueue(Jellyfin.Api.Models.SyncPlayDtos.QueueRequestDto)\">\n",
                      "markdown": "`            Request to move an item in the playlist in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new position for the item.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayQueue(Jellyfin.Api.Models.SyncPlayDtos.QueueRequestDto)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5176,
                  "startColumn": 38,
                  "endLine": 5176,
                  "endColumn": 46,
                  "snippet": {
                    "text": "            Request to remove items from the playlist in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The items to remove.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayMovePlaylistItem(Jellyfin.Api.Models.SyncPlayDtos.MovePlaylistItemRequestDto)\">\n",
                    "rendered": {
                      "text": "            Request to remove items from the playlist in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The items to remove.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayMovePlaylistItem(Jellyfin.Api.Models.SyncPlayDtos.MovePlaylistItemRequestDto)\">\n",
                      "markdown": "`            Request to remove items from the playlist in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The items to remove.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayMovePlaylistItem(Jellyfin.Api.Models.SyncPlayDtos.MovePlaylistItemRequestDto)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5168,
                  "startColumn": 38,
                  "endLine": 5168,
                  "endColumn": 46,
                  "snippet": {
                    "text": "            Request to change playlist item in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new item to play.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayRemoveFromPlaylist(Jellyfin.Api.Models.SyncPlayDtos.RemoveFromPlaylistRequestDto)\">\n",
                    "rendered": {
                      "text": "            Request to change playlist item in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new item to play.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayRemoveFromPlaylist(Jellyfin.Api.Models.SyncPlayDtos.RemoveFromPlaylistRequestDto)\">\n",
                      "markdown": "`            Request to change playlist item in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new item to play.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlayRemoveFromPlaylist(Jellyfin.Api.Models.SyncPlayDtos.RemoveFromPlaylistRequestDto)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5160,
                  "startColumn": 38,
                  "endLine": 5160,
                  "endColumn": 46,
                  "snippet": {
                    "text": "            Request to set new playlist in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new playlist to play in the group.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySetPlaylistItem(Jellyfin.Api.Models.SyncPlayDtos.SetPlaylistItemRequestDto)\">\n",
                    "rendered": {
                      "text": "            Request to set new playlist in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new playlist to play in the group.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySetPlaylistItem(Jellyfin.Api.Models.SyncPlayDtos.SetPlaylistItemRequestDto)\">\n",
                      "markdown": "`            Request to set new playlist in SyncPlay group.\n            </summary>\n            <param name=\"requestData\">The new playlist to play in the group.</param>\n            <response code=\"204\">Queue update sent to all group members.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SyncPlayController.SyncPlaySetPlaylistItem(Jellyfin.Api.Models.SyncPlayDtos.SetPlaylistItemRequestDto)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 4877,
                  "startColumn": 91,
                  "endLine": 4877,
                  "endColumn": 99,
                  "snippet": {
                    "text": "            <param name=\"startupUserDto\">The DTO containing username and password.</param>\n            <response code=\"204\">Updated user name and password.</response>\n            <returns>\n            A <see cref=\"T:System.Threading.Tasks.Task\" /> that represents the asynchronous update operation.\n            The task result contains a <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.\n            </returns>\n        </member>\n",
                    "rendered": {
                      "text": "            <param name=\"startupUserDto\">The DTO containing username and password.</param>\n            <response code=\"204\">Updated user name and password.</response>\n            <returns>\n            A <see cref=\"T:System.Threading.Tasks.Task\" /> that represents the asynchronous update operation.\n            The task result contains a <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.\n            </returns>\n        </member>\n",
                      "markdown": "`            <param name=\"startupUserDto\">The DTO containing username and password.</param>\n            <response code=\"204\">Updated user name and password.</response>\n            <returns>\n            A <see cref=\"T:System.Threading.Tasks.Task\" /> that represents the asynchronous update operation.\n            The task result contains a <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.\n            </returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 4776,
                  "startColumn": 70,
                  "endLine": 4776,
                  "endColumn": 79,
                  "snippet": {
                    "text": "pabilities for a device.\n            </summary>\n            <param name=\"id\">The session id.</param>\n            <param name=\"playableMediaTypes\">A list of playable media types, comma delimited. Audio, Video, Book, Photo.</param>\n            <param name=\"supportedCommands\">A list of supported remote control commands, comma delimited.</param>\n            <param name=\"supportsMediaControl\">Determines whether media can be played remotely..</param>\n            <param name=\"supportsPersistentIdentifier\">Determines whether the device supports a unique identifier.</param>\n            <response code=\"204\">Capa",
                    "rendered": {
                      "text": "pabilities for a device.\n            </summary>\n            <param name=\"id\">The session id.</param>\n            <param name=\"playableMediaTypes\">A list of playable media types, comma delimited. Audio, Video, Book, Photo.</param>\n            <param name=\"supportedCommands\">A list of supported remote control commands, comma delimited.</param>\n            <param name=\"supportsMediaControl\">Determines whether media can be played remotely..</param>\n            <param name=\"supportsPersistentIdentifier\">Determines whether the device supports a unique identifier.</param>\n            <response code=\"204\">Capa",
                      "markdown": "`pabilities for a device.\n            </summary>\n            <param name=\"id\">The session id.</param>\n            <param name=\"playableMediaTypes\">A list of playable media types, comma delimited. Audio, Video, Book, Photo.</param>\n            <param name=\"supportedCommands\">A list of supported remote control commands, comma delimited.</param>\n            <param name=\"supportsMediaControl\">Determines whether media can be played remotely..</param>\n            <param name=\"supportsPersistentIdentifier\">Determines whether the device supports a unique identifier.</param>\n            <response code=\"204\">Capa`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 4602,
                  "startColumn": 11,
                  "endLine": 4602,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.ScheduledTasksController.UpdateTask(System.String,MediaBrowser.Model.Tasks.TaskTriggerInfo[])\">\n            <summary>\n            Update specified task triggers.\n            </summary>\n            <param name=\"taskId\">Task Id.</param>\n            <param name=\"triggerInfos\">Triggers.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.ScheduledTasksController.UpdateTask(System.String,MediaBrowser.Model.Tasks.TaskTriggerInfo[])\">\n            <summary>\n            Update specified task triggers.\n            </summary>\n            <param name=\"taskId\">Task Id.</param>\n            <param name=\"triggerInfos\">Triggers.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.ScheduledTasksController.UpdateTask(System.String,MediaBrowser.Model.Tasks.TaskTriggerInfo[])\">\n            <summary>\n            Update specified task triggers.\n            </summary>\n            <param name=\"taskId\">Task Id.</param>\n            <param name=\"triggerInfos\">Triggers.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 4041,
                  "startColumn": 104,
                  "endLine": 4041,
                  "endColumn": 112,
                  "snippet": {
                    "text": "            <response code=\"403\">Access forbidden.</response>\n            <response code=\"404\">Playlist not found.</response>\n            <returns>\n            A <see cref=\"T:System.Threading.Tasks.Task\" /> that represents the asynchronous operation to update a playlist.\n            The task result contains an <see cref=\"T:Microsoft.AspNetCore.Mvc.OkResult\"/> indicating success.\n            </returns>\n        </member>\n",
                    "rendered": {
                      "text": "            <response code=\"403\">Access forbidden.</response>\n            <response code=\"404\">Playlist not found.</response>\n            <returns>\n            A <see cref=\"T:System.Threading.Tasks.Task\" /> that represents the asynchronous operation to update a playlist.\n            The task result contains an <see cref=\"T:Microsoft.AspNetCore.Mvc.OkResult\"/> indicating success.\n            </returns>\n        </member>\n",
                      "markdown": "`            <response code=\"403\">Access forbidden.</response>\n            <response code=\"404\">Playlist not found.</response>\n            <returns>\n            A <see cref=\"T:System.Threading.Tasks.Task\" /> that represents the asynchronous operation to update a playlist.\n            The task result contains an <see cref=\"T:Microsoft.AspNetCore.Mvc.OkResult\"/> indicating success.\n            </returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 3143,
                  "startColumn": 11,
                  "endLine": 3143,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.LibraryStructureController.UpdateLibraryOptions(Jellyfin.Api.Models.LibraryStructureDto.UpdateLibraryOptionsDto)\">\n            <summary>\n            Update library options.\n            </summary>\n            <param name=\"request\">The library name and options.</param>\n            <response code=\"204\">Library updated.</response>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.LibraryStructureController.UpdateLibraryOptions(Jellyfin.Api.Models.LibraryStructureDto.UpdateLibraryOptionsDto)\">\n            <summary>\n            Update library options.\n            </summary>\n            <param name=\"request\">The library name and options.</param>\n            <response code=\"204\">Library updated.</response>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.LibraryStructureController.UpdateLibraryOptions(Jellyfin.Api.Models.LibraryStructureDto.UpdateLibraryOptionsDto)\">\n            <summary>\n            Update library options.\n            </summary>\n            <param name=\"request\">The library name and options.</param>\n            <response code=\"204\">Library updated.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 3022,
                  "startColumn": 33,
                  "endLine": 3022,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            <summary>\n            Reports that new movies have been added by an external source.\n            </summary>\n            <param name=\"dto\">The update paths.</param>\n            <response code=\"204\">Report success.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/>.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            <summary>\n            Reports that new movies have been added by an external source.\n            </summary>\n            <param name=\"dto\">The update paths.</param>\n            <response code=\"204\">Report success.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/>.</returns>\n        </member>\n",
                      "markdown": "`            <summary>\n            Reports that new movies have been added by an external source.\n            </summary>\n            <param name=\"dto\">The update paths.</param>\n            <response code=\"204\">Report success.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/>.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2831,
                  "startColumn": 16,
                  "endLine": 2831,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.ItemUpdateController\">\n            <summary>\n            Item update controller.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.ItemUpdateController.#ctor(MediaBrowser.Model.IO.IFileSystem,MediaBrowser.Controller.Library.ILibraryManager,MediaBrowser.Controller.Providers.IProviderManager,MediaBrowser.Model.Globalization.ILocalizationManager,MediaBrowser.Controller.Configuration.IServerConfigurationManager)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.ItemUpdateController\">\n            <summary>\n            Item update controller.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.ItemUpdateController.#ctor(MediaBrowser.Model.IO.IFileSystem,MediaBrowser.Controller.Library.ILibraryManager,MediaBrowser.Controller.Providers.IProviderManager,MediaBrowser.Model.Globalization.ILocalizationManager,MediaBrowser.Controller.Configuration.IServerConfigurationManager)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.ItemUpdateController\">\n            <summary>\n            Item update controller.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.ItemUpdateController.#ctor(MediaBrowser.Model.IO.IFileSystem,MediaBrowser.Controller.Library.ILibraryManager,MediaBrowser.Controller.Providers.IProviderManager,MediaBrowser.Model.Globalization.ILocalizationManager,MediaBrowser.Controller.Configuration.IServerConfigurationManager)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2820,
                  "startColumn": 11,
                  "endLine": 2820,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.ItemsController.UpdateItemUserDataLegacy(System.Guid,System.Guid,MediaBrowser.Model.Dto.UpdateUserItemDataDto)\">\n            <summary>\n            Update Item User Data.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"itemId\">The item id.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.ItemsController.UpdateItemUserDataLegacy(System.Guid,System.Guid,MediaBrowser.Model.Dto.UpdateUserItemDataDto)\">\n            <summary>\n            Update Item User Data.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"itemId\">The item id.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.ItemsController.UpdateItemUserDataLegacy(System.Guid,System.Guid,MediaBrowser.Model.Dto.UpdateUserItemDataDto)\">\n            <summary>\n            Update Item User Data.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"itemId\">The item id.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2809,
                  "startColumn": 11,
                  "endLine": 2809,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.ItemsController.UpdateItemUserData(System.Nullable{System.Guid},System.Guid,MediaBrowser.Model.Dto.UpdateUserItemDataDto)\">\n            <summary>\n            Update Item User Data.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"itemId\">The item id.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.ItemsController.UpdateItemUserData(System.Nullable{System.Guid},System.Guid,MediaBrowser.Model.Dto.UpdateUserItemDataDto)\">\n            <summary>\n            Update Item User Data.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"itemId\">The item id.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.ItemsController.UpdateItemUserData(System.Nullable{System.Guid},System.Guid,MediaBrowser.Model.Dto.UpdateUserItemDataDto)\">\n            <summary>\n            Update Item User Data.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"itemId\">The item id.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 983,
                  "startColumn": 11,
                  "endLine": 983,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.DisplayPreferencesController.UpdateDisplayPreferences(System.String,System.Nullable{System.Guid},System.String,MediaBrowser.Model.Dto.DisplayPreferencesDto)\">\n            <summary>\n            Update Display Preferences.\n            </summary>\n            <param name=\"displayPreferencesId\">Display preferences id.</param>\n            <param name=\"userId\">User Id.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.DisplayPreferencesController.UpdateDisplayPreferences(System.String,System.Nullable{System.Guid},System.String,MediaBrowser.Model.Dto.DisplayPreferencesDto)\">\n            <summary>\n            Update Display Preferences.\n            </summary>\n            <param name=\"displayPreferencesId\">Display preferences id.</param>\n            <param name=\"userId\">User Id.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.DisplayPreferencesController.UpdateDisplayPreferences(System.String,System.Nullable{System.Guid},System.String,MediaBrowser.Model.Dto.DisplayPreferencesDto)\">\n            <summary>\n            Update Display Preferences.\n            </summary>\n            <param name=\"displayPreferencesId\">Display preferences id.</param>\n            <param name=\"userId\">User Id.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 943,
                  "startColumn": 11,
                  "endLine": 943,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.DevicesController.UpdateDeviceOptions(System.String,Jellyfin.Data.Dtos.DeviceOptionsDto)\">\n            <summary>\n            Update device options.\n            </summary>\n            <param name=\"id\">Device Id.</param>\n            <param name=\"deviceOptions\">Device Options.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.DevicesController.UpdateDeviceOptions(System.String,Jellyfin.Data.Dtos.DeviceOptionsDto)\">\n            <summary>\n            Update device options.\n            </summary>\n            <param name=\"id\">Device Id.</param>\n            <param name=\"deviceOptions\">Device Options.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.DevicesController.UpdateDeviceOptions(System.String,Jellyfin.Data.Dtos.DeviceOptionsDto)\">\n            <summary>\n            Update device options.\n            </summary>\n            <param name=\"id\">Device Id.</param>\n            <param name=\"deviceOptions\">Device Options.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7807,
                  "startColumn": 34,
                  "endLine": 7807,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.MediaInfoDtos.PlaybackInfoDto.StartTimeTicks\">\n            <summary>\n            Gets or sets the start time in ticks.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.MediaInfoDtos.PlaybackInfoDto.AudioStreamIndex\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.MediaInfoDtos.PlaybackInfoDto.StartTimeTicks\">\n            <summary>\n            Gets or sets the start time in ticks.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.MediaInfoDtos.PlaybackInfoDto.AudioStreamIndex\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.MediaInfoDtos.PlaybackInfoDto.StartTimeTicks\">\n            <summary>\n            Gets or sets the start time in ticks.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.MediaInfoDtos.PlaybackInfoDto.AudioStreamIndex\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7747,
                  "startColumn": 34,
                  "endLine": 7747,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.MediaInfoDtos.OpenLiveStreamDto.StartTimeTicks\">\n            <summary>\n            Gets or sets the start time in ticks.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.MediaInfoDtos.OpenLiveStreamDto.AudioStreamIndex\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.MediaInfoDtos.OpenLiveStreamDto.StartTimeTicks\">\n            <summary>\n            Gets or sets the start time in ticks.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.MediaInfoDtos.OpenLiveStreamDto.AudioStreamIndex\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.MediaInfoDtos.OpenLiveStreamDto.StartTimeTicks\">\n            <summary>\n            Gets or sets the start time in ticks.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.MediaInfoDtos.OpenLiveStreamDto.AudioStreamIndex\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7640,
                  "startColumn": 24,
                  "endLine": 7640,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.LiveTvDtos.GetProgramsDto.SortOrder\">\n            <summary>\n            Gets or sets sort Order - Ascending,Descending.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LiveTvDtos.GetProgramsDto.Genres\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.LiveTvDtos.GetProgramsDto.SortOrder\">\n            <summary>\n            Gets or sets sort Order - Ascending,Descending.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LiveTvDtos.GetProgramsDto.Genres\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.LiveTvDtos.GetProgramsDto.SortOrder\">\n            <summary>\n            Gets or sets sort Order - Ascending,Descending.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Api.Models.LiveTvDtos.GetProgramsDto.Genres\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7634,
                  "startColumn": 44,
                  "endLine": 7634,
                  "endColumn": 50,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.LiveTvDtos.GetProgramsDto.SortBy\">\n            <summary>\n            Gets or sets specify one or more sort orders, comma delimited. Options: Name, StartDate.\n            Optional.\n            </summary>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Api.Models.LiveTvDtos.GetProgramsDto.SortBy\">\n            <summary>\n            Gets or sets specify one or more sort orders, comma delimited. Options: Name, StartDate.\n            Optional.\n            </summary>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Api.Models.LiveTvDtos.GetProgramsDto.SortBy\">\n            <summary>\n            Gets or sets specify one or more sort orders, comma delimited. Options: Name, StartDate.\n            Optional.\n            </summary>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7115,
                  "startColumn": 20,
                  "endLine": 7115,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Middleware.ResponseTimeMiddleware\">\n            <summary>\n            Response time middleware.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Middleware.ResponseTimeMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{Jellyfin.Api.Middleware.ResponseTimeMiddleware})\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Middleware.ResponseTimeMiddleware\">\n            <summary>\n            Response time middleware.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Middleware.ResponseTimeMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{Jellyfin.Api.Middleware.ResponseTimeMiddleware})\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Middleware.ResponseTimeMiddleware\">\n            <summary>\n            Response time middleware.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Middleware.ResponseTimeMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{Jellyfin.Api.Middleware.ResponseTimeMiddleware})\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7058,
                  "startColumn": 34,
                  "endLine": 7058,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Middleware.LanFilteringMiddleware\">\n            <summary>\n            Validates the LAN host IP based on application configuration.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Middleware.LanFilteringMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Middleware.LanFilteringMiddleware\">\n            <summary>\n            Validates the LAN host IP based on application configuration.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Middleware.LanFilteringMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Middleware.LanFilteringMiddleware\">\n            <summary>\n            Validates the LAN host IP based on application configuration.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Middleware.LanFilteringMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 7039,
                  "startColumn": 25,
                  "endLine": 7039,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Middleware.IPBasedAccessValidationMiddleware\">\n            <summary>\n            Validates the IP of requests coming from local networks wrt. remote access.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Middleware.IPBasedAccessValidationMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Middleware.IPBasedAccessValidationMiddleware\">\n            <summary>\n            Validates the IP of requests coming from local networks wrt. remote access.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Middleware.IPBasedAccessValidationMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Middleware.IPBasedAccessValidationMiddleware\">\n            <summary>\n            Validates the IP of requests coming from local networks wrt. remote access.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Middleware.IPBasedAccessValidationMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 6883,
                  "startColumn": 11,
                  "endLine": 6883,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Helpers.MediaInfoHelper.SortMediaSources(MediaBrowser.Model.MediaInfo.PlaybackInfoResponse,System.Nullable{System.Int64})\">\n            <summary>\n            Sort media source.\n            </summary>\n            <param name=\"result\">Playback info response.</param>\n            <param name=\"maxBitrate\">Max bitrate.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Api.Helpers.MediaInfoHelper.SortMediaSources(MediaBrowser.Model.MediaInfo.PlaybackInfoResponse,System.Nullable{System.Int64})\">\n            <summary>\n            Sort media source.\n            </summary>\n            <param name=\"result\">Playback info response.</param>\n            <param name=\"maxBitrate\">Max bitrate.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Api.Helpers.MediaInfoHelper.SortMediaSources(MediaBrowser.Model.MediaInfo.PlaybackInfoResponse,System.Nullable{System.Int64})\">\n            <summary>\n            Sort media source.\n            </summary>\n            <param name=\"result\">Playback info response.</param>\n            <param name=\"maxBitrate\">Max bitrate.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 6879,
                  "startColumn": 46,
                  "endLine": 6879,
                  "endColumn": 50,
                  "snippet": {
                    "text": "            <param name=\"enableTranscoding\">Enable transcoding.</param>\n            <param name=\"allowVideoStreamCopy\">Allow video stream copy.</param>\n            <param name=\"allowAudioStreamCopy\">Allow audio stream copy.</param>\n            <param name=\"ipAddress\">Requesting IP address.</param>\n        </member>\n        <member name=\"M:Jellyfin.Api.Helpers.MediaInfoHelper.SortMediaSources(MediaBrowser.Model.MediaInfo.PlaybackInfoResponse,System.Nullable{System.Int64})\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <param name=\"enableTranscoding\">Enable transcoding.</param>\n            <param name=\"allowVideoStreamCopy\">Allow video stream copy.</param>\n            <param name=\"allowAudioStreamCopy\">Allow audio stream copy.</param>\n            <param name=\"ipAddress\">Requesting IP address.</param>\n        </member>\n        <member name=\"M:Jellyfin.Api.Helpers.MediaInfoHelper.SortMediaSources(MediaBrowser.Model.MediaInfo.PlaybackInfoResponse,System.Nullable{System.Int64})\">\n            <summary>\n",
                      "markdown": "`            <param name=\"enableTranscoding\">Enable transcoding.</param>\n            <param name=\"allowVideoStreamCopy\">Allow video stream copy.</param>\n            <param name=\"allowAudioStreamCopy\">Allow audio stream copy.</param>\n            <param name=\"ipAddress\">Requesting IP address.</param>\n        </member>\n        <member name=\"M:Jellyfin.Api.Helpers.MediaInfoHelper.SortMediaSources(MediaBrowser.Model.MediaInfo.PlaybackInfoResponse,System.Nullable{System.Int64})\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 6867,
                  "startColumn": 46,
                  "endLine": 6867,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            <param name=\"profile\">Device profile.</param>\n            <param name=\"claimsPrincipal\">Current claims principal.</param>\n            <param name=\"maxBitrate\">Max bitrate.</param>\n            <param name=\"startTimeTicks\">Start time ticks.</param>\n            <param name=\"mediaSourceId\">Media source id.</param>\n            <param name=\"audioStreamIndex\">Audio stream index.</param>\n            <param name=\"subtitleStreamIndex\">Subtitle stream index.</param>\n",
                    "rendered": {
                      "text": "            <param name=\"profile\">Device profile.</param>\n            <param name=\"claimsPrincipal\">Current claims principal.</param>\n            <param name=\"maxBitrate\">Max bitrate.</param>\n            <param name=\"startTimeTicks\">Start time ticks.</param>\n            <param name=\"mediaSourceId\">Media source id.</param>\n            <param name=\"audioStreamIndex\">Audio stream index.</param>\n            <param name=\"subtitleStreamIndex\">Subtitle stream index.</param>\n",
                      "markdown": "`            <param name=\"profile\">Device profile.</param>\n            <param name=\"claimsPrincipal\">Current claims principal.</param>\n            <param name=\"maxBitrate\">Max bitrate.</param>\n            <param name=\"startTimeTicks\">Start time ticks.</param>\n            <param name=\"mediaSourceId\">Media source id.</param>\n            <param name=\"audioStreamIndex\">Audio stream index.</param>\n            <param name=\"subtitleStreamIndex\">Subtitle stream index.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 6684,
                  "startColumn": 77,
                  "endLine": 6684,
                  "endColumn": 83,
                  "snippet": {
                    "text": "urce)\">\n            <summary>\n            Returns a transcoded file from the server.\n            </summary>\n            <param name=\"state\">The current <see cref=\"T:MediaBrowser.Controller.Streaming.StreamState\"/>.</param>\n            <param name=\"isHeadRequest\">Whether the current request is a HTTP HEAD request so only the headers get returned.</param>\n            <param name=\"httpContext\">The current http context.</param>\n            <param name=\"transcodeManager\">The <see cref=\"T:MediaBrowser.Controller.MediaEncoding.ITranscodeManager\"/> singleton.</param>\n            <param name=\"ffmpegCommandLi",
                    "rendered": {
                      "text": "urce)\">\n            <summary>\n            Returns a transcoded file from the server.\n            </summary>\n            <param name=\"state\">The current <see cref=\"T:MediaBrowser.Controller.Streaming.StreamState\"/>.</param>\n            <param name=\"isHeadRequest\">Whether the current request is a HTTP HEAD request so only the headers get returned.</param>\n            <param name=\"httpContext\">The current http context.</param>\n            <param name=\"transcodeManager\">The <see cref=\"T:MediaBrowser.Controller.MediaEncoding.ITranscodeManager\"/> singleton.</param>\n            <param name=\"ffmpegCommandLi",
                      "markdown": "`urce)\">\n            <summary>\n            Returns a transcoded file from the server.\n            </summary>\n            <param name=\"state\">The current <see cref=\"T:MediaBrowser.Controller.Streaming.StreamState\"/>.</param>\n            <param name=\"isHeadRequest\">Whether the current request is a HTTP HEAD request so only the headers get returned.</param>\n            <param name=\"httpContext\">The current http context.</param>\n            <param name=\"transcodeManager\">The <see cref=\"T:MediaBrowser.Controller.MediaEncoding.ITranscodeManager\"/> singleton.</param>\n            <param name=\"ffmpegCommandLi`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 6360,
                  "startColumn": 62,
                  "endLine": 6360,
                  "endColumn": 68,
                  "snippet": {
                    "text": "eItemTypes\">Optional. If specified, results will be included based on item type. This allows multiple, comma delimited.</param>\n            <param name=\"mediaTypes\">Optional. Filter by MediaType. Allows multiple, comma delimited.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"enableUserData\">Optional. Include user data.</param>\n           ",
                    "rendered": {
                      "text": "eItemTypes\">Optional. If specified, results will be included based on item type. This allows multiple, comma delimited.</param>\n            <param name=\"mediaTypes\">Optional. Filter by MediaType. Allows multiple, comma delimited.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"enableUserData\">Optional. Include user data.</param>\n           ",
                      "markdown": "`eItemTypes\">Optional. If specified, results will be included based on item type. This allows multiple, comma delimited.</param>\n            <param name=\"mediaTypes\">Optional. Filter by MediaType. Allows multiple, comma delimited.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"enableUserData\">Optional. Include user data.</param>\n           `"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5590,
                  "startColumn": 62,
                  "endLine": 5590,
                  "endColumn": 68,
                  "snippet": {
                    "text": " max number of images to return, per image type.</param>\n            <param name=\"enableImageTypes\">Optional. The image types to include in the output.</param>\n            <param name=\"enableUserData\">Optional. Include user data.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Querying.QueryResult`1\"/> with the",
                    "rendered": {
                      "text": " max number of images to return, per image type.</param>\n            <param name=\"enableImageTypes\">Optional. The image types to include in the output.</param>\n            <param name=\"enableUserData\">Optional. Include user data.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Querying.QueryResult`1\"/> with the",
                      "markdown": "` max number of images to return, per image type.</param>\n            <param name=\"enableImageTypes\">Optional. The image types to include in the output.</param>\n            <param name=\"enableUserData\">Optional. Include user data.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Querying.QueryResult`1\"/> with the`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5446,
                  "startColumn": 62,
                  "endLine": 5446,
                  "endColumn": 68,
                  "snippet": {
                    "text": "al filter by MediaType. Allows multiple, comma delimited.</param>\n            <param name=\"imageTypes\">Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"isPlayed\">Optional filter by items that are played, or not.</par",
                    "rendered": {
                      "text": "al filter by MediaType. Allows multiple, comma delimited.</param>\n            <param name=\"imageTypes\">Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"isPlayed\">Optional filter by items that are played, or not.</par",
                      "markdown": "`al filter by MediaType. Allows multiple, comma delimited.</param>\n            <param name=\"imageTypes\">Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"isPlayed\">Optional filter by items that are played, or not.</par`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5377,
                  "startColumn": 15,
                  "endLine": 5377,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.TimeSyncController\">\n            <summary>\n            The time sync controller.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.TimeSyncController.GetUtcTime\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.TimeSyncController\">\n            <summary>\n            The time sync controller.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.TimeSyncController.GetUtcTime\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Controllers.TimeSyncController\">\n            <summary>\n            The time sync controller.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.TimeSyncController.GetUtcTime\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5365,
                  "startColumn": 42,
                  "endLine": 5365,
                  "endColumn": 48,
                  "snippet": {
                    "text": "            <param name=\"name\">The name of the log file to get.</param>\n            <response code=\"200\">Log file retrieved.</response>\n            <response code=\"403\">User does not have permission to get log files.</response>\n            <response code=\"404\">Could not find a log file with the name.</response>\n            <returns>The log file.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SystemController.GetWakeOnLanInfo\">\n",
                    "rendered": {
                      "text": "            <param name=\"name\">The name of the log file to get.</param>\n            <response code=\"200\">Log file retrieved.</response>\n            <response code=\"403\">User does not have permission to get log files.</response>\n            <response code=\"404\">Could not find a log file with the name.</response>\n            <returns>The log file.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SystemController.GetWakeOnLanInfo\">\n",
                      "markdown": "`            <param name=\"name\">The name of the log file to get.</param>\n            <response code=\"200\">Log file retrieved.</response>\n            <response code=\"403\">User does not have permission to get log files.</response>\n            <response code=\"404\">Could not find a log file with the name.</response>\n            <returns>The log file.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Api.Controllers.SystemController.GetWakeOnLanInfo\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 5019,
                  "startColumn": 70,
                  "endLine": 5019,
                  "endColumn": 76,
                  "snippet": {
                    "text": "            <param name=\"format\">The format of the returned subtitle.</param>\n            <param name=\"endPositionTicks\">Optional. The end position of the subtitle in ticks.</param>\n            <param name=\"copyTimestamps\">Optional. Whether to copy the timestamps.</param>\n            <param name=\"addVttTimeMap\">Optional. Whether to add a VTT time map.</param>\n            <response code=\"200\">File returned.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.FileContentResult\"/> with the subtitle file.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            <param name=\"format\">The format of the returned subtitle.</param>\n            <param name=\"endPositionTicks\">Optional. The end position of the subtitle in ticks.</param>\n            <param name=\"copyTimestamps\">Optional. Whether to copy the timestamps.</param>\n            <param name=\"addVttTimeMap\">Optional. Whether to add a VTT time map.</param>\n            <response code=\"200\">File returned.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.FileContentResult\"/> with the subtitle file.</returns>\n        </member>\n",
                      "markdown": "`            <param name=\"format\">The format of the returned subtitle.</param>\n            <param name=\"endPositionTicks\">Optional. The end position of the subtitle in ticks.</param>\n            <param name=\"copyTimestamps\">Optional. Whether to copy the timestamps.</param>\n            <param name=\"addVttTimeMap\">Optional. Whether to add a VTT time map.</param>\n            <response code=\"200\">File returned.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.FileContentResult\"/> with the subtitle file.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 4998,
                  "startColumn": 70,
                  "endLine": 4998,
                  "endColumn": 76,
                  "snippet": {
                    "text": " of the returned subtitle.</param>\n            <param name=\"endPositionTicks\">Optional. The end position of the subtitle in ticks.</param>\n            <param name=\"copyTimestamps\">Optional. Whether to copy the timestamps.</param>\n            <param name=\"addVttTimeMap\">Optional. Whether to add a VTT time map.</param>\n            <param name=\"startPositionTicks\">The start position of the subtitle in ticks.</param>\n            <response code=\"200\">File returned.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.FileContentResult\"/> with the subtitle file.</returns>\n        </memb",
                    "rendered": {
                      "text": " of the returned subtitle.</param>\n            <param name=\"endPositionTicks\">Optional. The end position of the subtitle in ticks.</param>\n            <param name=\"copyTimestamps\">Optional. Whether to copy the timestamps.</param>\n            <param name=\"addVttTimeMap\">Optional. Whether to add a VTT time map.</param>\n            <param name=\"startPositionTicks\">The start position of the subtitle in ticks.</param>\n            <response code=\"200\">File returned.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.FileContentResult\"/> with the subtitle file.</returns>\n        </memb",
                      "markdown": "` of the returned subtitle.</param>\n            <param name=\"endPositionTicks\">Optional. The end position of the subtitle in ticks.</param>\n            <param name=\"copyTimestamps\">Optional. Whether to copy the timestamps.</param>\n            <param name=\"addVttTimeMap\">Optional. Whether to add a VTT time map.</param>\n            <param name=\"startPositionTicks\">The start position of the subtitle in ticks.</param>\n            <response code=\"200\">File returned.</response>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.FileContentResult\"/> with the subtitle file.</returns>\n        </memb`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 3876,
                  "startColumn": 62,
                  "endLine": 3876,
                  "endColumn": 68,
                  "snippet": {
                    "text": "=\"nameStartsWith\">Optional filter by items whose name is sorted equally than a given input string.</param>\n            <param name=\"nameLessThan\">Optional filter by items whose name is equally or lesser than a given input string.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"enableImages\">Optional, include image information in output.</param>\n            <param name=\"enableTotalRecordCount\">Optional. Include total record count.</param>",
                    "rendered": {
                      "text": "=\"nameStartsWith\">Optional filter by items whose name is sorted equally than a given input string.</param>\n            <param name=\"nameLessThan\">Optional filter by items whose name is equally or lesser than a given input string.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"enableImages\">Optional, include image information in output.</param>\n            <param name=\"enableTotalRecordCount\">Optional. Include total record count.</param>",
                      "markdown": "`=\"nameStartsWith\">Optional filter by items whose name is sorted equally than a given input string.</param>\n            <param name=\"nameLessThan\">Optional filter by items whose name is equally or lesser than a given input string.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"enableImages\">Optional, include image information in output.</param>\n            <param name=\"enableTotalRecordCount\">Optional. Include total record count.</param>`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 3792,
                  "startColumn": 50,
                  "endLine": 3792,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            <param name=\"userId\">The user id.</param>\n            <param name=\"playSessionId\">The play session id.</param>\n            <param name=\"maxStreamingBitrate\">The maximum streaming bitrate.</param>\n            <param name=\"startTimeTicks\">The start time in ticks.</param>\n            <param name=\"audioStreamIndex\">The audio stream index.</param>\n            <param name=\"subtitleStreamIndex\">The subtitle stream index.</param>\n            <param name=\"maxAudioChannels\">The maximum number of audio channels.</param>\n",
                    "rendered": {
                      "text": "            <param name=\"userId\">The user id.</param>\n            <param name=\"playSessionId\">The play session id.</param>\n            <param name=\"maxStreamingBitrate\">The maximum streaming bitrate.</param>\n            <param name=\"startTimeTicks\">The start time in ticks.</param>\n            <param name=\"audioStreamIndex\">The audio stream index.</param>\n            <param name=\"subtitleStreamIndex\">The subtitle stream index.</param>\n            <param name=\"maxAudioChannels\">The maximum number of audio channels.</param>\n",
                      "markdown": "`            <param name=\"userId\">The user id.</param>\n            <param name=\"playSessionId\">The play session id.</param>\n            <param name=\"maxStreamingBitrate\">The maximum streaming bitrate.</param>\n            <param name=\"startTimeTicks\">The start time in ticks.</param>\n            <param name=\"audioStreamIndex\">The audio stream index.</param>\n            <param name=\"subtitleStreamIndex\">The subtitle stream index.</param>\n            <param name=\"maxAudioChannels\">The maximum number of audio channels.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 3767,
                  "startColumn": 50,
                  "endLine": 3767,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            <param name=\"itemId\">The item id.</param>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"maxStreamingBitrate\">The maximum streaming bitrate.</param>\n            <param name=\"startTimeTicks\">The start time in ticks.</param>\n            <param name=\"audioStreamIndex\">The audio stream index.</param>\n            <param name=\"subtitleStreamIndex\">The subtitle stream index.</param>\n            <param name=\"maxAudioChannels\">The maximum number of audio channels.</param>\n",
                    "rendered": {
                      "text": "            <param name=\"itemId\">The item id.</param>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"maxStreamingBitrate\">The maximum streaming bitrate.</param>\n            <param name=\"startTimeTicks\">The start time in ticks.</param>\n            <param name=\"audioStreamIndex\">The audio stream index.</param>\n            <param name=\"subtitleStreamIndex\">The subtitle stream index.</param>\n            <param name=\"maxAudioChannels\">The maximum number of audio channels.</param>\n",
                      "markdown": "`            <param name=\"itemId\">The item id.</param>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"maxStreamingBitrate\">The maximum streaming bitrate.</param>\n            <param name=\"startTimeTicks\">The start time in ticks.</param>\n            <param name=\"audioStreamIndex\">The audio stream index.</param>\n            <param name=\"subtitleStreamIndex\">The subtitle stream index.</param>\n            <param name=\"maxAudioChannels\">The maximum number of audio channels.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 3460,
                  "startColumn": 45,
                  "endLine": 3460,
                  "endColumn": 51,
                  "snippet": {
                    "text": "            Gets live tv series timers.\n            </summary>\n            <param name=\"sortBy\">Optional. Sort by SortName or Priority.</param>\n            <param name=\"sortOrder\">Optional. Sort in Ascending or Descending order.</param>\n            <response code=\"200\">Timers returned.</response>\n            <returns>An <see cref=\"T:Microsoft.AspNetCore.Mvc.OkResult\"/> of live tv series timers.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            Gets live tv series timers.\n            </summary>\n            <param name=\"sortBy\">Optional. Sort by SortName or Priority.</param>\n            <param name=\"sortOrder\">Optional. Sort in Ascending or Descending order.</param>\n            <response code=\"200\">Timers returned.</response>\n            <returns>An <see cref=\"T:Microsoft.AspNetCore.Mvc.OkResult\"/> of live tv series timers.</returns>\n        </member>\n",
                      "markdown": "`            Gets live tv series timers.\n            </summary>\n            <param name=\"sortBy\">Optional. Sort by SortName or Priority.</param>\n            <param name=\"sortOrder\">Optional. Sort in Ascending or Descending order.</param>\n            <response code=\"200\">Timers returned.</response>\n            <returns>An <see cref=\"T:Microsoft.AspNetCore.Mvc.OkResult\"/> of live tv series timers.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 3459,
                  "startColumn": 42,
                  "endLine": 3459,
                  "endColumn": 48,
                  "snippet": {
                    "text": "            <summary>\n            Gets live tv series timers.\n            </summary>\n            <param name=\"sortBy\">Optional. Sort by SortName or Priority.</param>\n            <param name=\"sortOrder\">Optional. Sort in Ascending or Descending order.</param>\n            <response code=\"200\">Timers returned.</response>\n            <returns>An <see cref=\"T:Microsoft.AspNetCore.Mvc.OkResult\"/> of live tv series timers.</returns>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets live tv series timers.\n            </summary>\n            <param name=\"sortBy\">Optional. Sort by SortName or Priority.</param>\n            <param name=\"sortOrder\">Optional. Sort in Ascending or Descending order.</param>\n            <response code=\"200\">Timers returned.</response>\n            <returns>An <see cref=\"T:Microsoft.AspNetCore.Mvc.OkResult\"/> of live tv series timers.</returns>\n",
                      "markdown": "`            <summary>\n            Gets live tv series timers.\n            </summary>\n            <param name=\"sortBy\">Optional. Sort by SortName or Priority.</param>\n            <param name=\"sortOrder\">Optional. Sort in Ascending or Descending order.</param>\n            <response code=\"200\">Timers returned.</response>\n            <returns>An <see cref=\"T:Microsoft.AspNetCore.Mvc.OkResult\"/> of live tv series timers.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 3353,
                  "startColumn": 62,
                  "endLine": 3353,
                  "endColumn": 68,
                  "snippet": {
                    "text": "           <param name=\"startIndex\">Optional. The record index to start at. All items with a lower index will be dropped from the results.</param>\n            <param name=\"limit\">Optional. The maximum number of records to return.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Name, StartDate.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"genres\">The genres to return guide information for.</param>\n            <param name=\"genreIds\">The genre ids to return guide information ",
                    "rendered": {
                      "text": "           <param name=\"startIndex\">Optional. The record index to start at. All items with a lower index will be dropped from the results.</param>\n            <param name=\"limit\">Optional. The maximum number of records to return.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Name, StartDate.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"genres\">The genres to return guide information for.</param>\n            <param name=\"genreIds\">The genre ids to return guide information ",
                      "markdown": "`           <param name=\"startIndex\">Optional. The record index to start at. All items with a lower index will be dropped from the results.</param>\n            <param name=\"limit\">Optional. The maximum number of records to return.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Name, StartDate.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"genres\">The genres to return guide information for.</param>\n            <param name=\"genreIds\">The genre ids to return guide information `"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 3203,
                  "startColumn": 45,
                  "endLine": 3203,
                  "endColumn": 51,
                  "snippet": {
                    "text": "     <param name=\"fields\">Optional. Specify additional fields of information to return in the output.</param>\n            <param name=\"enableUserData\">Optional. Include user data.</param>\n            <param name=\"sortBy\">Optional. Key to sort by.</param>\n            <param name=\"sortOrder\">Optional. Sort order.</param>\n            <param name=\"enableFavoriteSorting\">Optional. Incorporate favorite and like status into channel sorting.</param>\n            <param name=\"addCurrentProgram\">Optional. Adds current program info to each channel.</param>\n            <response code=\"200\">Available live tv chan",
                    "rendered": {
                      "text": "     <param name=\"fields\">Optional. Specify additional fields of information to return in the output.</param>\n            <param name=\"enableUserData\">Optional. Include user data.</param>\n            <param name=\"sortBy\">Optional. Key to sort by.</param>\n            <param name=\"sortOrder\">Optional. Sort order.</param>\n            <param name=\"enableFavoriteSorting\">Optional. Incorporate favorite and like status into channel sorting.</param>\n            <param name=\"addCurrentProgram\">Optional. Adds current program info to each channel.</param>\n            <response code=\"200\">Available live tv chan",
                      "markdown": "`     <param name=\"fields\">Optional. Specify additional fields of information to return in the output.</param>\n            <param name=\"enableUserData\">Optional. Include user data.</param>\n            <param name=\"sortBy\">Optional. Key to sort by.</param>\n            <param name=\"sortOrder\">Optional. Sort order.</param>\n            <param name=\"enableFavoriteSorting\">Optional. Incorporate favorite and like status into channel sorting.</param>\n            <param name=\"addCurrentProgram\">Optional. Adds current program info to each channel.</param>\n            <response code=\"200\">Available live tv chan`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 3202,
                  "startColumn": 49,
                  "endLine": 3202,
                  "endColumn": 55,
                  "snippet": {
                    "text": "onal. The image types to include in the output.</param>\n            <param name=\"fields\">Optional. Specify additional fields of information to return in the output.</param>\n            <param name=\"enableUserData\">Optional. Include user data.</param>\n            <param name=\"sortBy\">Optional. Key to sort by.</param>\n            <param name=\"sortOrder\">Optional. Sort order.</param>\n            <param name=\"enableFavoriteSorting\">Optional. Incorporate favorite and like status into channel sorting.</param>\n            <param name=\"addCurrentProgram\">Optional. Adds current program info to each channel.<",
                    "rendered": {
                      "text": "onal. The image types to include in the output.</param>\n            <param name=\"fields\">Optional. Specify additional fields of information to return in the output.</param>\n            <param name=\"enableUserData\">Optional. Include user data.</param>\n            <param name=\"sortBy\">Optional. Key to sort by.</param>\n            <param name=\"sortOrder\">Optional. Sort order.</param>\n            <param name=\"enableFavoriteSorting\">Optional. Incorporate favorite and like status into channel sorting.</param>\n            <param name=\"addCurrentProgram\">Optional. Adds current program info to each channel.<",
                      "markdown": "`onal. The image types to include in the output.</param>\n            <param name=\"fields\">Optional. Specify additional fields of information to return in the output.</param>\n            <param name=\"enableUserData\">Optional. Include user data.</param>\n            <param name=\"sortBy\">Optional. Key to sort by.</param>\n            <param name=\"sortOrder\">Optional. Sort order.</param>\n            <param name=\"enableFavoriteSorting\">Optional. Incorporate favorite and like status into channel sorting.</param>\n            <param name=\"addCurrentProgram\">Optional. Adds current program info to each channel.<`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2701,
                  "startColumn": 62,
                  "endLine": 2701,
                  "endColumn": 68,
                  "snippet": {
                    "text": "al filter by MediaType. Allows multiple, comma delimited.</param>\n            <param name=\"imageTypes\">Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"isPlayed\">Optional filter by items that are played, or not.</par",
                    "rendered": {
                      "text": "al filter by MediaType. Allows multiple, comma delimited.</param>\n            <param name=\"imageTypes\">Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"isPlayed\">Optional filter by items that are played, or not.</par",
                      "markdown": "`al filter by MediaType. Allows multiple, comma delimited.</param>\n            <param name=\"imageTypes\">Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"isPlayed\">Optional filter by items that are played, or not.</par`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2610,
                  "startColumn": 62,
                  "endLine": 2610,
                  "endColumn": 68,
                  "snippet": {
                    "text": "al filter by MediaType. Allows multiple, comma delimited.</param>\n            <param name=\"imageTypes\">Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"isPlayed\">Optional filter by items that are played, or not.</par",
                    "rendered": {
                      "text": "al filter by MediaType. Allows multiple, comma delimited.</param>\n            <param name=\"imageTypes\">Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"isPlayed\">Optional filter by items that are played, or not.</par",
                      "markdown": "`al filter by MediaType. Allows multiple, comma delimited.</param>\n            <param name=\"imageTypes\">Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"isPlayed\">Optional filter by items that are played, or not.</par`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2225,
                  "startColumn": 54,
                  "endLine": 2225,
                  "endColumn": 62,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Api.Controllers.ImageController.UploadCustomSplashscreen\">\n            <summary>\n            Uploads a custom splashscreen.\n            The body is expected to the image contents base64 encoded.\n            </summary>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n            <response code=\"204\">Successfully uploaded new splashscreen.</response>\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Api.Controllers.ImageController.UploadCustomSplashscreen\">\n            <summary>\n            Uploads a custom splashscreen.\n            The body is expected to the image contents base64 encoded.\n            </summary>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n            <response code=\"204\">Successfully uploaded new splashscreen.</response>\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Api.Controllers.ImageController.UploadCustomSplashscreen\">\n            <summary>\n            Uploads a custom splashscreen.\n            The body is expected to the image contents base64 encoded.\n            </summary>\n            <returns>A <see cref=\"T:Microsoft.AspNetCore.Mvc.NoContentResult\"/> indicating success.</returns>\n            <response code=\"204\">Successfully uploaded new splashscreen.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2217,
                  "startColumn": 69,
                  "endLine": 2217,
                  "endColumn": 74,
                  "snippet": {
                    "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Blur image.</param>\n            <param name=\"backgroundColor\">Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Apply a foreground layer on top of the image.</param>\n            <param name=\"quality\">Quality setting, from 0-100.</param>\n            <response code=\"200\">Splashscreen returned successfully.</response>\n            <returns>The splashscreen.</returns>\n",
                    "rendered": {
                      "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Blur image.</param>\n            <param name=\"backgroundColor\">Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Apply a foreground layer on top of the image.</param>\n            <param name=\"quality\">Quality setting, from 0-100.</param>\n            <response code=\"200\">Splashscreen returned successfully.</response>\n            <returns>The splashscreen.</returns>\n",
                      "markdown": "`            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Blur image.</param>\n            <param name=\"backgroundColor\">Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Apply a foreground layer on top of the image.</param>\n            <param name=\"quality\">Quality setting, from 0-100.</param>\n            <response code=\"200\">Splashscreen returned successfully.</response>\n            <returns>The splashscreen.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2195,
                  "startColumn": 79,
                  "endLine": 2195,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n",
                    "rendered": {
                      "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n",
                      "markdown": "`            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2166,
                  "startColumn": 79,
                  "endLine": 2166,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                    "rendered": {
                      "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                      "markdown": "`            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2137,
                  "startColumn": 79,
                  "endLine": 2137,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"400\">User id not provided.</response>\n",
                    "rendered": {
                      "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"400\">User id not provided.</response>\n",
                      "markdown": "`            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"400\">User id not provided.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2111,
                  "startColumn": 79,
                  "endLine": 2111,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n",
                    "rendered": {
                      "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n",
                      "markdown": "`            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2082,
                  "startColumn": 79,
                  "endLine": 2082,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                    "rendered": {
                      "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                      "markdown": "`            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2055,
                  "startColumn": 79,
                  "endLine": 2055,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n",
                    "rendered": {
                      "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n",
                      "markdown": "`            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 2026,
                  "startColumn": 79,
                  "endLine": 2026,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                    "rendered": {
                      "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                      "markdown": "`            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 1999,
                  "startColumn": 79,
                  "endLine": 1999,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n",
                    "rendered": {
                      "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n",
                      "markdown": "`            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 1970,
                  "startColumn": 79,
                  "endLine": 1970,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                    "rendered": {
                      "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                      "markdown": "`            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 1943,
                  "startColumn": 79,
                  "endLine": 1943,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n",
                    "rendered": {
                      "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n",
                      "markdown": "`            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 1914,
                  "startColumn": 79,
                  "endLine": 1914,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                    "rendered": {
                      "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                      "markdown": "`            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 1886,
                  "startColumn": 79,
                  "endLine": 1886,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                    "rendered": {
                      "text": "            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                      "markdown": "`            <param name=\"fillHeight\">Height of box to fill.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 1858,
                  "startColumn": 79,
                  "endLine": 1858,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"unplayedCount\">Optional. Unplayed count overlay to render.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                    "rendered": {
                      "text": "            <param name=\"unplayedCount\">Optional. Unplayed count overlay to render.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                      "markdown": "`            <param name=\"unplayedCount\">Optional. Unplayed count overlay to render.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 1831,
                  "startColumn": 79,
                  "endLine": 1831,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"unplayedCount\">Optional. Unplayed count overlay to render.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n",
                    "rendered": {
                      "text": "            <param name=\"unplayedCount\">Optional. Unplayed count overlay to render.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n",
                      "markdown": "`            <param name=\"unplayedCount\">Optional. Unplayed count overlay to render.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n            <returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 1802,
                  "startColumn": 79,
                  "endLine": 1802,
                  "endColumn": 84,
                  "snippet": {
                    "text": "            <param name=\"unplayedCount\">Optional. Unplayed count overlay to render.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                    "rendered": {
                      "text": "            <param name=\"unplayedCount\">Optional. Unplayed count overlay to render.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n",
                      "markdown": "`            <param name=\"unplayedCount\">Optional. Unplayed count overlay to render.</param>\n            <param name=\"blur\">Optional. Blur image.</param>\n            <param name=\"backgroundColor\">Optional. Apply a background color for transparent images.</param>\n            <param name=\"foregroundLayer\">Optional. Apply a foreground layer on top of the image.</param>\n            <param name=\"imageIndex\">Image index.</param>\n            <response code=\"200\">Image stream returned.</response>\n            <response code=\"404\">Item not found.</response>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 1571,
                  "startColumn": 62,
                  "endLine": 1571,
                  "endColumn": 68,
                  "snippet": {
                    "text": "=\"nameStartsWith\">Optional filter by items whose name is sorted equally than a given input string.</param>\n            <param name=\"nameLessThan\">Optional filter by items whose name is equally or lesser than a given input string.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"enableImages\">Optional, include image information in output.</param>\n            <param name=\"enableTotalRecordCount\">Optional. Include total record count.</param>",
                    "rendered": {
                      "text": "=\"nameStartsWith\">Optional filter by items whose name is sorted equally than a given input string.</param>\n            <param name=\"nameLessThan\">Optional filter by items whose name is equally or lesser than a given input string.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"enableImages\">Optional, include image information in output.</param>\n            <param name=\"enableTotalRecordCount\">Optional. Include total record count.</param>",
                      "markdown": "`=\"nameStartsWith\">Optional filter by items whose name is sorted equally than a given input string.</param>\n            <param name=\"nameLessThan\">Optional filter by items whose name is equally or lesser than a given input string.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"enableImages\">Optional, include image information in output.</param>\n            <param name=\"enableTotalRecordCount\">Optional. Include total record count.</param>`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 728,
                  "startColumn": 62,
                  "endLine": 728,
                  "endColumn": 68,
                  "snippet": {
                    "text": ">Optional. The maximum number of records to return.</param>\n            <param name=\"sortOrder\">Optional. Sort Order - Ascending,Descending.</param>\n            <param name=\"filters\">Optional. Specify additional filters to apply.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"fields\">Optional. Specify additional fields of information to re",
                    "rendered": {
                      "text": ">Optional. The maximum number of records to return.</param>\n            <param name=\"sortOrder\">Optional. Sort Order - Ascending,Descending.</param>\n            <param name=\"filters\">Optional. Specify additional filters to apply.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"fields\">Optional. Specify additional fields of information to re",
                      "markdown": "`>Optional. The maximum number of records to return.</param>\n            <param name=\"sortOrder\">Optional. Sort Order - Ascending,Descending.</param>\n            <param name=\"filters\">Optional. Specify additional filters to apply.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime.</param>\n            <param name=\"fields\">Optional. Specify additional fields of information to re`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 726,
                  "startColumn": 45,
                  "endLine": 726,
                  "endColumn": 51,
                  "snippet": {
                    "text": "ser Id.</param>\n            <param name=\"startIndex\">Optional. The record index to start at. All items with a lower index will be dropped from the results.</param>\n            <param name=\"limit\">Optional. The maximum number of records to return.</param>\n            <param name=\"sortOrder\">Optional. Sort Order - Ascending,Descending.</param>\n            <param name=\"filters\">Optional. Specify additional filters to apply.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, Date",
                    "rendered": {
                      "text": "ser Id.</param>\n            <param name=\"startIndex\">Optional. The record index to start at. All items with a lower index will be dropped from the results.</param>\n            <param name=\"limit\">Optional. The maximum number of records to return.</param>\n            <param name=\"sortOrder\">Optional. Sort Order - Ascending,Descending.</param>\n            <param name=\"filters\">Optional. Specify additional filters to apply.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, Date",
                      "markdown": "`ser Id.</param>\n            <param name=\"startIndex\">Optional. The record index to start at. All items with a lower index will be dropped from the results.</param>\n            <param name=\"limit\">Optional. The maximum number of records to return.</param>\n            <param name=\"sortOrder\">Optional. Sort Order - Ascending,Descending.</param>\n            <param name=\"filters\">Optional. Specify additional filters to apply.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, Date`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 509,
                  "startColumn": 62,
                  "endLine": 509,
                  "endColumn": 68,
                  "snippet": {
                    "text": "=\"nameStartsWith\">Optional filter by items whose name is sorted equally than a given input string.</param>\n            <param name=\"nameLessThan\">Optional filter by items whose name is equally or lesser than a given input string.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"enableImages\">Optional, include image information in output.</param>\n            <param name=\"enableTotalRecordCount\">Total record count.</param>\n            <resp",
                    "rendered": {
                      "text": "=\"nameStartsWith\">Optional filter by items whose name is sorted equally than a given input string.</param>\n            <param name=\"nameLessThan\">Optional filter by items whose name is equally or lesser than a given input string.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"enableImages\">Optional, include image information in output.</param>\n            <param name=\"enableTotalRecordCount\">Total record count.</param>\n            <resp",
                      "markdown": "`=\"nameStartsWith\">Optional filter by items whose name is sorted equally than a given input string.</param>\n            <param name=\"nameLessThan\">Optional filter by items whose name is equally or lesser than a given input string.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"enableImages\">Optional, include image information in output.</param>\n            <param name=\"enableTotalRecordCount\">Total record count.</param>\n            <resp`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 470,
                  "startColumn": 62,
                  "endLine": 470,
                  "endColumn": 68,
                  "snippet": {
                    "text": "=\"nameStartsWith\">Optional filter by items whose name is sorted equally than a given input string.</param>\n            <param name=\"nameLessThan\">Optional filter by items whose name is equally or lesser than a given input string.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"enableImages\">Optional, include image information in output.</param>\n            <param name=\"enableTotalRecordCount\">Total record count.</param>\n            <resp",
                    "rendered": {
                      "text": "=\"nameStartsWith\">Optional filter by items whose name is sorted equally than a given input string.</param>\n            <param name=\"nameLessThan\">Optional filter by items whose name is equally or lesser than a given input string.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"enableImages\">Optional, include image information in output.</param>\n            <param name=\"enableTotalRecordCount\">Total record count.</param>\n            <resp",
                      "markdown": "`=\"nameStartsWith\">Optional filter by items whose name is sorted equally than a given input string.</param>\n            <param name=\"nameLessThan\">Optional filter by items whose name is equally or lesser than a given input string.</param>\n            <param name=\"sortBy\">Optional. Specify one or more sort orders, comma delimited.</param>\n            <param name=\"sortOrder\">Sort Order - Ascending,Descending.</param>\n            <param name=\"enableImages\">Optional, include image information in output.</param>\n            <param name=\"enableTotalRecordCount\">Total record count.</param>\n            <resp`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 69,
                  "endLine": 181,
                  "endColumn": 75,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Auth.FirstTimeSetupPolicy.FirstTimeSetupRequirement\">\n            <summary>\n            The authorization requirement, requiring incomplete first time setup or default privileges, for the authorization handler.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Auth.FirstTimeSetupPolicy.FirstTimeSetupRequirement.#ctor(System.Boolean,System.Boolean)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Auth.FirstTimeSetupPolicy.FirstTimeSetupRequirement\">\n            <summary>\n            The authorization requirement, requiring incomplete first time setup or default privileges, for the authorization handler.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Auth.FirstTimeSetupPolicy.FirstTimeSetupRequirement.#ctor(System.Boolean,System.Boolean)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Auth.FirstTimeSetupPolicy.FirstTimeSetupRequirement\">\n            <summary>\n            The authorization requirement, requiring incomplete first time setup or default privileges, for the authorization handler.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Auth.FirstTimeSetupPolicy.FirstTimeSetupRequirement.#ctor(System.Boolean,System.Boolean)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Api.xml"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 53,
                  "endLine": 167,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Auth.FirstTimeSetupPolicy.FirstTimeSetupHandler\">\n            <summary>\n            Authorization handler for requiring first time setup or default privileges.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Auth.FirstTimeSetupPolicy.FirstTimeSetupHandler.#ctor(MediaBrowser.Common.Configuration.IConfigurationManager)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Api.Auth.FirstTimeSetupPolicy.FirstTimeSetupHandler\">\n            <summary>\n            Authorization handler for requiring first time setup or default privileges.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Auth.FirstTimeSetupPolicy.FirstTimeSetupHandler.#ctor(MediaBrowser.Common.Configuration.IConfigurationManager)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Api.Auth.FirstTimeSetupPolicy.FirstTimeSetupHandler\">\n            <summary>\n            Authorization handler for requiring first time setup or default privileges.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Api.Auth.FirstTimeSetupPolicy.FirstTimeSetupHandler.#ctor(MediaBrowser.Common.Configuration.IConfigurationManager)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Providers.xml"
                },
                "region": {
                  "startLine": 2666,
                  "startColumn": 68,
                  "endLine": 2666,
                  "endColumn": 132,
                  "snippet": {
                    "text": "            <summary>Finds the next index of any character that matches a character in the set [_\\W].</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_asciiLettersAndDigits\">\n            <summary>Supports searching for characters in or not in \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".</summary>\n        </member>\n    </members>\n</doc>\n",
                    "rendered": {
                      "text": "            <summary>Finds the next index of any character that matches a character in the set [_\\W].</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_asciiLettersAndDigits\">\n            <summary>Supports searching for characters in or not in \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".</summary>\n        </member>\n    </members>\n</doc>\n",
                      "markdown": "`            <summary>Finds the next index of any character that matches a character in the set [_\\W].</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_asciiLettersAndDigits\">\n            <summary>Supports searching for characters in or not in \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".</summary>\n        </member>\n    </members>\n</doc>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Providers.xml"
                },
                "region": {
                  "startLine": 2651,
                  "startColumn": 59,
                  "endLine": 2651,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Providers.xml"
                },
                "region": {
                  "startLine": 2649,
                  "startColumn": 67,
                  "endLine": 2649,
                  "endColumn": 71,
                  "snippet": {
                    "text": "d; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.NonWordRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "d; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.NonWordRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`d; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.NonWordRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Providers.xml"
                },
                "region": {
                  "startLine": 2219,
                  "startColumn": 59,
                  "endLine": 2219,
                  "endColumn": 63,
                  "snippet": {
                    "text": "            <code>[\\\\W_]+</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a character in the set [_\\W] atomically at least once.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                    "rendered": {
                      "text": "            <code>[\\\\W_]+</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a character in the set [_\\W] atomically at least once.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                      "markdown": "`            <code>[\\\\W_]+</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a character in the set [_\\W] atomically at least once.<br/>\n            </code>\n            </remarks>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Providers.xml"
                },
                "region": {
                  "startLine": 2657,
                  "startColumn": 28,
                  "endLine": 2657,
                  "endColumn": 37,
                  "snippet": {
                    "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                    "rendered": {
                      "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                      "markdown": "`rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Providers.xml"
                },
                "region": {
                  "startLine": 2042,
                  "startColumn": 75,
                  "endLine": 2042,
                  "endColumn": 84,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Providers.Plugins.Tmdb.TmdbClientManager.FindByExternalIdAsync(System.String,TMDbLib.Objects.Find.FindExternalSource,System.String,System.Threading.CancellationToken)\">\n            <summary>\n            Gets an item from the TMDb API based on its id from an external service eg. IMDb id, TvDb id.\n            </summary>\n            <param name=\"externalId\">The item's external id.</param>\n            <param name=\"source\">The source of the id eg. IMDb.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Providers.Plugins.Tmdb.TmdbClientManager.FindByExternalIdAsync(System.String,TMDbLib.Objects.Find.FindExternalSource,System.String,System.Threading.CancellationToken)\">\n            <summary>\n            Gets an item from the TMDb API based on its id from an external service eg. IMDb id, TvDb id.\n            </summary>\n            <param name=\"externalId\">The item's external id.</param>\n            <param name=\"source\">The source of the id eg. IMDb.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Providers.Plugins.Tmdb.TmdbClientManager.FindByExternalIdAsync(System.String,TMDbLib.Objects.Find.FindExternalSource,System.String,System.Threading.CancellationToken)\">\n            <summary>\n            Gets an item from the TMDb API based on its id from an external service eg. IMDb id, TvDb id.\n            </summary>\n            <param name=\"externalId\">The item's external id.</param>\n            <param name=\"source\">The source of the id eg. IMDb.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Providers.xml"
                },
                "region": {
                  "startLine": 751,
                  "startColumn": 58,
                  "endLine": 751,
                  "endColumn": 67,
                  "snippet": {
                    "text": "mary>\n            <param name=\"audio\">The <see cref=\"T:MediaBrowser.Controller.Entities.Audio.Audio\"/> object to search external files for.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external file paths located.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Providers.MediaInfo.MediaInfoResolver.GetMediaInfo(System.String,MediaBrowser.Model.Dlna.DlnaProfileType,System.Threading.Cancellat",
                    "rendered": {
                      "text": "mary>\n            <param name=\"audio\">The <see cref=\"T:MediaBrowser.Controller.Entities.Audio.Audio\"/> object to search external files for.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external file paths located.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Providers.MediaInfo.MediaInfoResolver.GetMediaInfo(System.String,MediaBrowser.Model.Dlna.DlnaProfileType,System.Threading.Cancellat",
                      "markdown": "`mary>\n            <param name=\"audio\">The <see cref=\"T:MediaBrowser.Controller.Entities.Audio.Audio\"/> object to search external files for.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external file paths located.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Providers.MediaInfo.MediaInfoResolver.GetMediaInfo(System.String,MediaBrowser.Model.Dlna.DlnaProfileType,System.Threading.Cancellat`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Providers.xml"
                },
                "region": {
                  "startLine": 750,
                  "startColumn": 56,
                  "endLine": 750,
                  "endColumn": 65,
                  "snippet": {
                    "text": "            Returns the external file infos for the given audio.\n            </summary>\n            <param name=\"audio\">The <see cref=\"T:MediaBrowser.Controller.Entities.Audio.Audio\"/> object to search external files for.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external file paths located.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            Returns the external file infos for the given audio.\n            </summary>\n            <param name=\"audio\">The <see cref=\"T:MediaBrowser.Controller.Entities.Audio.Audio\"/> object to search external files for.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external file paths located.</returns>\n        </member>\n",
                      "markdown": "`            Returns the external file infos for the given audio.\n            </summary>\n            <param name=\"audio\">The <see cref=\"T:MediaBrowser.Controller.Entities.Audio.Audio\"/> object to search external files for.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external file paths located.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Providers.xml"
                },
                "region": {
                  "startLine": 742,
                  "startColumn": 58,
                  "endLine": 742,
                  "endColumn": 67,
                  "snippet": {
                    "text": " </summary>\n            <param name=\"video\">The <see cref=\"T:MediaBrowser.Controller.Entities.Video\"/> object to search external files for.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external file paths located.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Providers.MediaInfo.MediaInfoResolver.GetExternalFiles(MediaBrowser.Controller.Entities.Audio.Audio,MediaBrowser.Controller.Provide",
                    "rendered": {
                      "text": " </summary>\n            <param name=\"video\">The <see cref=\"T:MediaBrowser.Controller.Entities.Video\"/> object to search external files for.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external file paths located.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Providers.MediaInfo.MediaInfoResolver.GetExternalFiles(MediaBrowser.Controller.Entities.Audio.Audio,MediaBrowser.Controller.Provide",
                      "markdown": "` </summary>\n            <param name=\"video\">The <see cref=\"T:MediaBrowser.Controller.Entities.Video\"/> object to search external files for.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external file paths located.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Providers.MediaInfo.MediaInfoResolver.GetExternalFiles(MediaBrowser.Controller.Entities.Audio.Audio,MediaBrowser.Controller.Provide`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Providers.xml"
                },
                "region": {
                  "startLine": 741,
                  "startColumn": 56,
                  "endLine": 741,
                  "endColumn": 65,
                  "snippet": {
                    "text": "            Returns the external file infos for the given video.\n            </summary>\n            <param name=\"video\">The <see cref=\"T:MediaBrowser.Controller.Entities.Video\"/> object to search external files for.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external file paths located.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            Returns the external file infos for the given video.\n            </summary>\n            <param name=\"video\">The <see cref=\"T:MediaBrowser.Controller.Entities.Video\"/> object to search external files for.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external file paths located.</returns>\n        </member>\n",
                      "markdown": "`            Returns the external file infos for the given video.\n            </summary>\n            <param name=\"video\">The <see cref=\"T:MediaBrowser.Controller.Entities.Video\"/> object to search external files for.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external file paths located.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Providers.xml"
                },
                "region": {
                  "startLine": 733,
                  "startColumn": 58,
                  "endLine": 733,
                  "endColumn": 67,
                  "snippet": {
                    "text": "> object to search external streams for.</param>\n            <param name=\"startIndex\">The stream index to start adding external streams at.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external streams located.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Providers.MediaInfo.MediaInfoResolver.GetExternalFiles(MediaBrowser.Controller.Entities.Video,MediaBrowser.Controller.Providers.IDirec",
                    "rendered": {
                      "text": "> object to search external streams for.</param>\n            <param name=\"startIndex\">The stream index to start adding external streams at.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external streams located.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Providers.MediaInfo.MediaInfoResolver.GetExternalFiles(MediaBrowser.Controller.Entities.Video,MediaBrowser.Controller.Providers.IDirec",
                      "markdown": "`> object to search external streams for.</param>\n            <param name=\"startIndex\">The stream index to start adding external streams at.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external streams located.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Providers.MediaInfo.MediaInfoResolver.GetExternalFiles(MediaBrowser.Controller.Entities.Video,MediaBrowser.Controller.Providers.IDirec`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Providers.xml"
                },
                "region": {
                  "startLine": 732,
                  "startColumn": 56,
                  "endLine": 732,
                  "endColumn": 65,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"audio\">The <see cref=\"T:MediaBrowser.Controller.Entities.Audio.Audio\"/> object to search external streams for.</param>\n            <param name=\"startIndex\">The stream index to start adding external streams at.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external streams located.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"audio\">The <see cref=\"T:MediaBrowser.Controller.Entities.Audio.Audio\"/> object to search external streams for.</param>\n            <param name=\"startIndex\">The stream index to start adding external streams at.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external streams located.</returns>\n        </member>\n",
                      "markdown": "`            </summary>\n            <param name=\"audio\">The <see cref=\"T:MediaBrowser.Controller.Entities.Audio.Audio\"/> object to search external streams for.</param>\n            <param name=\"startIndex\">The stream index to start adding external streams at.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <returns>The external streams located.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Providers.xml"
                },
                "region": {
                  "startLine": 722,
                  "startColumn": 58,
                  "endLine": 722,
                  "endColumn": 67,
                  "snippet": {
                    "text": "            <param name=\"video\">The <see cref=\"T:MediaBrowser.Controller.Entities.Video\"/> object to search external streams for.</param>\n            <param name=\"startIndex\">The stream index to start adding external streams at.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <param name=\"cancellationToken\">The cancellation token.</param>\n            <returns>The external streams located.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            <param name=\"video\">The <see cref=\"T:MediaBrowser.Controller.Entities.Video\"/> object to search external streams for.</param>\n            <param name=\"startIndex\">The stream index to start adding external streams at.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <param name=\"cancellationToken\">The cancellation token.</param>\n            <returns>The external streams located.</returns>\n        </member>\n",
                      "markdown": "`            <param name=\"video\">The <see cref=\"T:MediaBrowser.Controller.Entities.Video\"/> object to search external streams for.</param>\n            <param name=\"startIndex\">The stream index to start adding external streams at.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <param name=\"cancellationToken\">The cancellation token.</param>\n            <returns>The external streams located.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Providers.xml"
                },
                "region": {
                  "startLine": 721,
                  "startColumn": 56,
                  "endLine": 721,
                  "endColumn": 65,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"video\">The <see cref=\"T:MediaBrowser.Controller.Entities.Video\"/> object to search external streams for.</param>\n            <param name=\"startIndex\">The stream index to start adding external streams at.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <param name=\"cancellationToken\">The cancellation token.</param>\n            <returns>The external streams located.</returns>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"video\">The <see cref=\"T:MediaBrowser.Controller.Entities.Video\"/> object to search external streams for.</param>\n            <param name=\"startIndex\">The stream index to start adding external streams at.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <param name=\"cancellationToken\">The cancellation token.</param>\n            <returns>The external streams located.</returns>\n",
                      "markdown": "`            </summary>\n            <param name=\"video\">The <see cref=\"T:MediaBrowser.Controller.Entities.Video\"/> object to search external streams for.</param>\n            <param name=\"startIndex\">The stream index to start adding external streams at.</param>\n            <param name=\"directoryService\">The directory service to search for files.</param>\n            <param name=\"clearCache\">True if the directory service cache should be cleared before searching.</param>\n            <param name=\"cancellationToken\">The cancellation token.</param>\n            <returns>The external streams located.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.XbmcMetadata.xml"
                },
                "region": {
                  "startLine": 687,
                  "startColumn": 59,
                  "endLine": 687,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.XbmcMetadata.xml"
                },
                "region": {
                  "startLine": 685,
                  "startColumn": 67,
                  "endLine": 685,
                  "endColumn": 71,
                  "snippet": {
                    "text": "o more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.InvalidXMLCharsRegexRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "o more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.InvalidXMLCharsRegexRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`o more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.InvalidXMLCharsRegexRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.XbmcMetadata.xml"
                },
                "region": {
                  "startLine": 693,
                  "startColumn": 28,
                  "endLine": 693,
                  "endColumn": 37,
                  "snippet": {
                    "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                    "rendered": {
                      "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                      "markdown": "`rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 4316,
                  "startColumn": 65,
                  "endLine": 4316,
                  "endColumn": 73,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.Session.SessionManager.AuthenticateDirect(MediaBrowser.Controller.Session.AuthenticationRequest)\">\n            <summary>\n            Directly authenticates the session without enforcing password.\n            </summary>\n            <param name=\"request\">The authentication request.</param>\n            <returns>The authentication result.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.Session.SessionManager.AuthenticateDirect(MediaBrowser.Controller.Session.AuthenticationRequest)\">\n            <summary>\n            Directly authenticates the session without enforcing password.\n            </summary>\n            <param name=\"request\">The authentication request.</param>\n            <returns>The authentication result.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Server.Implementations.Session.SessionManager.AuthenticateDirect(MediaBrowser.Controller.Session.AuthenticationRequest)\">\n            <summary>\n            Directly authenticates the session without enforcing password.\n            </summary>\n            <param name=\"request\">The authentication request.</param>\n            <returns>The authentication result.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 616,
                  "startColumn": 125,
                  "endLine": 616,
                  "endColumn": 133,
                  "snippet": {
                    "text": "        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.Verify(MediaBrowser.Model.Cryptography.PasswordHash,System.ReadOnlySpan{System.Char})\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.GenerateSalt\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.Verify(MediaBrowser.Model.Cryptography.PasswordHash,System.ReadOnlySpan{System.Char})\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.GenerateSalt\">\n",
                      "markdown": "`        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.Verify(MediaBrowser.Model.Cryptography.PasswordHash,System.ReadOnlySpan{System.Char})\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.GenerateSalt\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 613,
                  "startColumn": 92,
                  "endLine": 613,
                  "endColumn": 100,
                  "snippet": {
                    "text": "        <member name=\"P:Emby.Server.Implementations.Cryptography.CryptographyProvider.DefaultHashMethod\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.Verify(MediaBrowser.Model.Cryptography.PasswordHash,System.ReadOnlySpan{System.Char})\">\n",
                    "rendered": {
                      "text": "        <member name=\"P:Emby.Server.Implementations.Cryptography.CryptographyProvider.DefaultHashMethod\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.Verify(MediaBrowser.Model.Cryptography.PasswordHash,System.ReadOnlySpan{System.Char})\">\n",
                      "markdown": "`        <member name=\"P:Emby.Server.Implementations.Cryptography.CryptographyProvider.DefaultHashMethod\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Emby.Server.Implementations.Cryptography.CryptographyProvider.Verify(MediaBrowser.Model.Cryptography.PasswordHash,System.ReadOnlySpan{System.Char})\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 5621,
                  "startColumn": 59,
                  "endLine": 5621,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 5619,
                  "startColumn": 67,
                  "endLine": 5619,
                  "endColumn": 71,
                  "snippet": {
                    "text": "ound; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.LUFSRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "ound; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.LUFSRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`ound; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.LUFSRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 5589,
                  "startColumn": 59,
                  "endLine": 5589,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.LUFSRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the LUFSRegex method.</summary>\n        </member>\n     ",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.LUFSRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the LUFSRegex method.</summary>\n        </member>\n     ",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.LUFSRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the LUFSRegex method.</summary>\n        </member>\n     `"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 5587,
                  "startColumn": 67,
                  "endLine": 5587,
                  "endColumn": 71,
                  "snippet": {
                    "text": " false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.IsIgnoredRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": " false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.IsIgnoredRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "` false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.IsIgnoredRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 5477,
                  "startColumn": 47,
                  "endLine": 5477,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Emby.Server.Implementations.Updates.InstallationManager\">\n            <summary>\n            Manages all install, uninstall, and update operations for the system and individual plugins.\n            </summary>\n        </member>\n        <member name=\"F:Emby.Server.Implementations.Updates.InstallationManager._logger\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Emby.Server.Implementations.Updates.InstallationManager\">\n            <summary>\n            Manages all install, uninstall, and update operations for the system and individual plugins.\n            </summary>\n        </member>\n        <member name=\"F:Emby.Server.Implementations.Updates.InstallationManager._logger\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Emby.Server.Implementations.Updates.InstallationManager\">\n            <summary>\n            Manages all install, uninstall, and update operations for the system and individual plugins.\n            </summary>\n        </member>\n        <member name=\"F:Emby.Server.Implementations.Updates.InstallationManager._logger\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 5401,
                  "startColumn": 51,
                  "endLine": 5401,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:Emby.Server.Implementations.SyncPlay.SyncPlayManager._groupsLock\">\n            <summary>\n            Lock used for accessing multiple groups at once.\n            </summary>\n            <remarks>\n            This lock has priority on locks made on <see cref=\"T:Emby.Server.Implementations.SyncPlay.Group\"/>.\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:Emby.Server.Implementations.SyncPlay.SyncPlayManager._groupsLock\">\n            <summary>\n            Lock used for accessing multiple groups at once.\n            </summary>\n            <remarks>\n            This lock has priority on locks made on <see cref=\"T:Emby.Server.Implementations.SyncPlay.Group\"/>.\n",
                      "markdown": "`        </member>\n        <member name=\"F:Emby.Server.Implementations.SyncPlay.SyncPlayManager._groupsLock\">\n            <summary>\n            Lock used for accessing multiple groups at once.\n            </summary>\n            <remarks>\n            This lock has priority on locks made on <see cref=\"T:Emby.Server.Implementations.SyncPlay.Group\"/>.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 3730,
                  "startColumn": 18,
                  "endLine": 3730,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Emby.Server.Implementations.ScheduledTasks.Tasks.PluginUpdateTask\">\n            <summary>\n            Plugin Update Task.\n            </summary>\n        </member>\n        <member name=\"F:Emby.Server.Implementations.ScheduledTasks.Tasks.PluginUpdateTask._logger\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Emby.Server.Implementations.ScheduledTasks.Tasks.PluginUpdateTask\">\n            <summary>\n            Plugin Update Task.\n            </summary>\n        </member>\n        <member name=\"F:Emby.Server.Implementations.ScheduledTasks.Tasks.PluginUpdateTask._logger\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Emby.Server.Implementations.ScheduledTasks.Tasks.PluginUpdateTask\">\n            <summary>\n            Plugin Update Task.\n            </summary>\n        </member>\n        <member name=\"F:Emby.Server.Implementations.ScheduledTasks.Tasks.PluginUpdateTask._logger\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 3384,
                  "startColumn": 53,
                  "endLine": 3384,
                  "endColumn": 57,
                  "snippet": {
                    "text": "            ○ Match a whitespace character greedily at least once.<br/>\n            ○ 1st capture group.<br/>\n                ○ Match a character other than '\\n' lazily any number of times.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n            ○ Match the string \"LUFS\".<br/>\n            </code>\n            </remarks>\n",
                    "rendered": {
                      "text": "            ○ Match a whitespace character greedily at least once.<br/>\n            ○ 1st capture group.<br/>\n                ○ Match a character other than '\\n' lazily any number of times.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n            ○ Match the string \"LUFS\".<br/>\n            </code>\n            </remarks>\n",
                      "markdown": "`            ○ Match a whitespace character greedily at least once.<br/>\n            ○ 1st capture group.<br/>\n                ○ Match a character other than '\\n' lazily any number of times.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n            ○ Match the string \"LUFS\".<br/>\n            </code>\n            </remarks>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 3381,
                  "startColumn": 51,
                  "endLine": 3381,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            ○ Match if at the beginning of the string.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n            ○ Match the string \"I:\".<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ 1st capture group.<br/>\n                ○ Match a character other than '\\n' lazily any number of times.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n",
                    "rendered": {
                      "text": "            ○ Match if at the beginning of the string.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n            ○ Match the string \"I:\".<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ 1st capture group.<br/>\n                ○ Match a character other than '\\n' lazily any number of times.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n",
                      "markdown": "`            ○ Match if at the beginning of the string.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n            ○ Match the string \"I:\".<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ 1st capture group.<br/>\n                ○ Match a character other than '\\n' lazily any number of times.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 3379,
                  "startColumn": 53,
                  "endLine": 3379,
                  "endColumn": 57,
                  "snippet": {
                    "text": "            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n            ○ Match the string \"I:\".<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ 1st capture group.<br/>\n",
                    "rendered": {
                      "text": "            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n            ○ Match the string \"I:\".<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ 1st capture group.<br/>\n",
                      "markdown": "`            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n            ○ Match the string \"I:\".<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ 1st capture group.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 3378,
                  "startColumn": 22,
                  "endLine": 3378,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            <code>^\\\\s+I:\\\\s+(.*?)\\\\s+LUFS</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n            ○ Match the string \"I:\".<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n",
                    "rendered": {
                      "text": "            <code>^\\\\s+I:\\\\s+(.*?)\\\\s+LUFS</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n            ○ Match the string \"I:\".<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n",
                      "markdown": "`            <code>^\\\\s+I:\\\\s+(.*?)\\\\s+LUFS</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a whitespace character atomically at least once.<br/>\n            ○ Match the string \"I:\".<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 2965,
                  "startColumn": 33,
                  "endLine": 2965,
                  "endColumn": 37,
                  "snippet": {
                    "text": "r{Emby.Server.Implementations.QuickConnect.QuickConnectManager},MediaBrowser.Controller.Session.ISessionManager)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Emby.Server.Implementations.QuickConnect.QuickConnectManager\"/> class.\n            Should only be called at server startup when a singleton is created.\n            </summary>\n            <param name=\"config\">Configuration.</param>\n            <param name=\"logger\">Logger.</param>\n            <param name=\"sessionManager\">Session Manager.</param>\n        </member>\n        <member name=\"P:Emby.Server.Implemen",
                    "rendered": {
                      "text": "r{Emby.Server.Implementations.QuickConnect.QuickConnectManager},MediaBrowser.Controller.Session.ISessionManager)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Emby.Server.Implementations.QuickConnect.QuickConnectManager\"/> class.\n            Should only be called at server startup when a singleton is created.\n            </summary>\n            <param name=\"config\">Configuration.</param>\n            <param name=\"logger\">Logger.</param>\n            <param name=\"sessionManager\">Session Manager.</param>\n        </member>\n        <member name=\"P:Emby.Server.Implemen",
                      "markdown": "`r{Emby.Server.Implementations.QuickConnect.QuickConnectManager},MediaBrowser.Controller.Session.ISessionManager)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Emby.Server.Implementations.QuickConnect.QuickConnectManager\"/> class.\n            Should only be called at server startup when a singleton is created.\n            </summary>\n            <param name=\"config\">Configuration.</param>\n            <param name=\"logger\">Logger.</param>\n            <param name=\"sessionManager\">Session Manager.</param>\n        </member>\n        <member name=\"P:Emby.Server.Implemen`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 2880,
                  "startColumn": 111,
                  "endLine": 2880,
                  "endColumn": 115,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.Plugins.PluginManager.ReconcileManifest(MediaBrowser.Common.Plugins.PluginManifest,System.String)\">\n            <summary>\n            Reconciles the manifest against any properties that exist locally in a pre-packaged meta.json found at the path.\n            If no file is found, no reconciliation occurs.\n            </summary>\n            <param name=\"manifest\">The <see cref=\"T:MediaBrowser.Common.Plugins.PluginManifest\"/> to reconcile against.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.Plugins.PluginManager.ReconcileManifest(MediaBrowser.Common.Plugins.PluginManifest,System.String)\">\n            <summary>\n            Reconciles the manifest against any properties that exist locally in a pre-packaged meta.json found at the path.\n            If no file is found, no reconciliation occurs.\n            </summary>\n            <param name=\"manifest\">The <see cref=\"T:MediaBrowser.Common.Plugins.PluginManifest\"/> to reconcile against.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Server.Implementations.Plugins.PluginManager.ReconcileManifest(MediaBrowser.Common.Plugins.PluginManifest,System.String)\">\n            <summary>\n            Reconciles the manifest against any properties that exist locally in a pre-packaged meta.json found at the path.\n            If no file is found, no reconciliation occurs.\n            </summary>\n            <param name=\"manifest\">The <see cref=\"T:MediaBrowser.Common.Plugins.PluginManifest\"/> to reconcile against.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 2382,
                  "startColumn": 105,
                  "endLine": 2382,
                  "endColumn": 113,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.Library.UserDataManager.SaveAllUserData(System.Guid,MediaBrowser.Controller.Entities.UserItemData[],System.Threading.CancellationToken)\">\n            <summary>\n            Save the provided user data for the given user.  Batch operation. Does not fire any events or update the cache.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"userData\">The user item data.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.Library.UserDataManager.SaveAllUserData(System.Guid,MediaBrowser.Controller.Entities.UserItemData[],System.Threading.CancellationToken)\">\n            <summary>\n            Save the provided user data for the given user.  Batch operation. Does not fire any events or update the cache.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"userData\">The user item data.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Server.Implementations.Library.UserDataManager.SaveAllUserData(System.Guid,MediaBrowser.Controller.Entities.UserItemData[],System.Threading.CancellationToken)\">\n            <summary>\n            Save the provided user data for the given user.  Batch operation. Does not fire any events or update the cache.\n            </summary>\n            <param name=\"userId\">The user id.</param>\n            <param name=\"userData\">The user item data.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 2159,
                  "startColumn": 22,
                  "endLine": 2159,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            ○ Match a character in the set [Pp].<br/>\n            ○ Match a character in the set [Ll].<br/>\n            ○ Match a character in the set [Ee].<br/>\n            ○ Match if at a word boundary.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                    "rendered": {
                      "text": "            ○ Match a character in the set [Pp].<br/>\n            ○ Match a character in the set [Ll].<br/>\n            ○ Match a character in the set [Ee].<br/>\n            ○ Match if at a word boundary.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                      "markdown": "`            ○ Match a character in the set [Pp].<br/>\n            ○ Match a character in the set [Ll].<br/>\n            ○ Match a character in the set [Ee].<br/>\n            ○ Match if at a word boundary.<br/>\n            </code>\n            </remarks>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 2152,
                  "startColumn": 22,
                  "endLine": 2152,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            <code>RegexOptions.IgnoreCase</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at a word boundary.<br/>\n            ○ Match a character in the set [Ss].<br/>\n            ○ Match a character in the set [Aa].<br/>\n            ○ Match a character in the set [Mm].<br/>\n",
                    "rendered": {
                      "text": "            <code>RegexOptions.IgnoreCase</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at a word boundary.<br/>\n            ○ Match a character in the set [Ss].<br/>\n            ○ Match a character in the set [Aa].<br/>\n            ○ Match a character in the set [Mm].<br/>\n",
                      "markdown": "`            <code>RegexOptions.IgnoreCase</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at a word boundary.<br/>\n            ○ Match a character in the set [Ss].<br/>\n            ○ Match a character in the set [Aa].<br/>\n            ○ Match a character in the set [Mm].<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 866,
                  "startColumn": 50,
                  "endLine": 866,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:Emby.Server.Implementations.Data.SynchronousMode.Normal\">\n            <summary>\n            SQLite database engine will still sync at the most critical moments.\n            </summary>\n        </member>\n        <member name=\"F:Emby.Server.Implementations.Data.SynchronousMode.Full\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:Emby.Server.Implementations.Data.SynchronousMode.Normal\">\n            <summary>\n            SQLite database engine will still sync at the most critical moments.\n            </summary>\n        </member>\n        <member name=\"F:Emby.Server.Implementations.Data.SynchronousMode.Full\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:Emby.Server.Implementations.Data.SynchronousMode.Normal\">\n            <summary>\n            SQLite database engine will still sync at the most critical moments.\n            </summary>\n        </member>\n        <member name=\"F:Emby.Server.Implementations.Data.SynchronousMode.Full\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 93,
                  "endLine": 392,
                  "endColumn": 97,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.ApplicationHost.InitializeServices\">\n            <summary>\n            Create services registered with the service container that need to be initialized at application startup.\n            </summary>\n            <returns>A task representing the service initialization operation.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.ApplicationHost.InitializeServices\">\n            <summary>\n            Create services registered with the service container that need to be initialized at application startup.\n            </summary>\n            <returns>A task representing the service initialization operation.</returns>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Server.Implementations.ApplicationHost.InitializeServices\">\n            <summary>\n            Create services registered with the service container that need to be initialized at application startup.\n            </summary>\n            <returns>A task representing the service initialization operation.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 5627,
                  "startColumn": 28,
                  "endLine": 5627,
                  "endColumn": 37,
                  "snippet": {
                    "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                    "rendered": {
                      "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                      "markdown": "`rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 5158,
                  "startColumn": 30,
                  "endLine": 5158,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            <summary>\n            Gets the maximum time offset error accepted for dates reported by clients, in milliseconds.\n            </summary>\n            <value>The maximum time offset error.</value>\n        </member>\n        <member name=\"P:Emby.Server.Implementations.SyncPlay.Group.MaxPlaybackOffset\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets the maximum time offset error accepted for dates reported by clients, in milliseconds.\n            </summary>\n            <value>The maximum time offset error.</value>\n        </member>\n        <member name=\"P:Emby.Server.Implementations.SyncPlay.Group.MaxPlaybackOffset\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets the maximum time offset error accepted for dates reported by clients, in milliseconds.\n            </summary>\n            <value>The maximum time offset error.</value>\n        </member>\n        <member name=\"P:Emby.Server.Implementations.SyncPlay.Group.MaxPlaybackOffset\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 5156,
                  "startColumn": 28,
                  "endLine": 5156,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Emby.Server.Implementations.SyncPlay.Group.TimeSyncOffset\">\n            <summary>\n            Gets the maximum time offset error accepted for dates reported by clients, in milliseconds.\n            </summary>\n            <value>The maximum time offset error.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Emby.Server.Implementations.SyncPlay.Group.TimeSyncOffset\">\n            <summary>\n            Gets the maximum time offset error accepted for dates reported by clients, in milliseconds.\n            </summary>\n            <value>The maximum time offset error.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:Emby.Server.Implementations.SyncPlay.Group.TimeSyncOffset\">\n            <summary>\n            Gets the maximum time offset error accepted for dates reported by clients, in milliseconds.\n            </summary>\n            <value>The maximum time offset error.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 4382,
                  "startColumn": 15,
                  "endLine": 4382,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:Emby.Server.Implementations.Session.SessionWebSocketListener.WebSocketLostTimeout\">\n            <summary>\n            The timeout in seconds after which a WebSocket is considered to be lost.\n            </summary>\n        </member>\n        <member name=\"F:Emby.Server.Implementations.Session.SessionWebSocketListener.IntervalFactor\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:Emby.Server.Implementations.Session.SessionWebSocketListener.WebSocketLostTimeout\">\n            <summary>\n            The timeout in seconds after which a WebSocket is considered to be lost.\n            </summary>\n        </member>\n        <member name=\"F:Emby.Server.Implementations.Session.SessionWebSocketListener.IntervalFactor\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:Emby.Server.Implementations.Session.SessionWebSocketListener.WebSocketLostTimeout\">\n            <summary>\n            The timeout in seconds after which a WebSocket is considered to be lost.\n            </summary>\n        </member>\n        <member name=\"F:Emby.Server.Implementations.Session.SessionWebSocketListener.IntervalFactor\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 3953,
                  "startColumn": 39,
                  "endLine": 3953,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            <summary>\n            Initializes a new instance of the <see cref=\"T:Emby.Server.Implementations.ScheduledTasks.Triggers.WeeklyTrigger\"/> class.\n            </summary>\n            <param name=\"timeofDay\">The time of day to trigger the task to run.</param>\n            <param name=\"dayOfWeek\">The day of week.</param>\n            <param name=\"taskOptions\">The options of this task.</param>\n        </member>\n",
                    "rendered": {
                      "text": "            <summary>\n            Initializes a new instance of the <see cref=\"T:Emby.Server.Implementations.ScheduledTasks.Triggers.WeeklyTrigger\"/> class.\n            </summary>\n            <param name=\"timeofDay\">The time of day to trigger the task to run.</param>\n            <param name=\"dayOfWeek\">The day of week.</param>\n            <param name=\"taskOptions\">The options of this task.</param>\n        </member>\n",
                      "markdown": "`            <summary>\n            Initializes a new instance of the <see cref=\"T:Emby.Server.Implementations.ScheduledTasks.Triggers.WeeklyTrigger\"/> class.\n            </summary>\n            <param name=\"timeofDay\">The time of day to trigger the task to run.</param>\n            <param name=\"dayOfWeek\">The day of week.</param>\n            <param name=\"taskOptions\">The options of this task.</param>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 3815,
                  "startColumn": 39,
                  "endLine": 3815,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            <summary>\n            Initializes a new instance of the <see cref=\"T:Emby.Server.Implementations.ScheduledTasks.Triggers.DailyTrigger\"/> class.\n            </summary>\n            <param name=\"timeofDay\">The time of day to trigger the task to run.</param>\n            <param name=\"taskOptions\">The options of this task.</param>\n        </member>\n        <member name=\"E:Emby.Server.Implementations.ScheduledTasks.Triggers.DailyTrigger.Triggered\">\n",
                    "rendered": {
                      "text": "            <summary>\n            Initializes a new instance of the <see cref=\"T:Emby.Server.Implementations.ScheduledTasks.Triggers.DailyTrigger\"/> class.\n            </summary>\n            <param name=\"timeofDay\">The time of day to trigger the task to run.</param>\n            <param name=\"taskOptions\">The options of this task.</param>\n        </member>\n        <member name=\"E:Emby.Server.Implementations.ScheduledTasks.Triggers.DailyTrigger.Triggered\">\n",
                      "markdown": "`            <summary>\n            Initializes a new instance of the <see cref=\"T:Emby.Server.Implementations.ScheduledTasks.Triggers.DailyTrigger\"/> class.\n            </summary>\n            <param name=\"timeofDay\">The time of day to trigger the task to run.</param>\n            <param name=\"taskOptions\">The options of this task.</param>\n        </member>\n        <member name=\"E:Emby.Server.Implementations.ScheduledTasks.Triggers.DailyTrigger.Triggered\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 3652,
                  "startColumn": 78,
                  "endLine": 3652,
                  "endColumn": 84,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.ScheduledTasks.Tasks.DeleteTranscodeFileTask.DeleteTempFilesFromDirectory(System.String,System.DateTime,System.IProgress{System.Double},System.Threading.CancellationToken)\">\n            <summary>\n            Deletes the transcoded temp files from directory with a last write time less than a given date.\n            </summary>\n            <param name=\"directory\">The directory.</param>\n            <param name=\"minDateModified\">The min date modified.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.ScheduledTasks.Tasks.DeleteTranscodeFileTask.DeleteTempFilesFromDirectory(System.String,System.DateTime,System.IProgress{System.Double},System.Threading.CancellationToken)\">\n            <summary>\n            Deletes the transcoded temp files from directory with a last write time less than a given date.\n            </summary>\n            <param name=\"directory\">The directory.</param>\n            <param name=\"minDateModified\">The min date modified.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Server.Implementations.ScheduledTasks.Tasks.DeleteTranscodeFileTask.DeleteTempFilesFromDirectory(System.String,System.DateTime,System.IProgress{System.Double},System.Threading.CancellationToken)\">\n            <summary>\n            Deletes the transcoded temp files from directory with a last write time less than a given date.\n            </summary>\n            <param name=\"directory\">The directory.</param>\n            <param name=\"minDateModified\">The min date modified.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 3556,
                  "startColumn": 68,
                  "endLine": 3556,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.ScheduledTasks.Tasks.DeleteCacheFileTask.DeleteCacheFilesFromDirectory(System.String,System.DateTime,System.IProgress{System.Double},System.Threading.CancellationToken)\">\n            <summary>\n            Deletes the cache files from directory with a last write time less than a given date.\n            </summary>\n            <param name=\"directory\">The directory.</param>\n            <param name=\"minDateModified\">The min date modified.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.ScheduledTasks.Tasks.DeleteCacheFileTask.DeleteCacheFilesFromDirectory(System.String,System.DateTime,System.IProgress{System.Double},System.Threading.CancellationToken)\">\n            <summary>\n            Deletes the cache files from directory with a last write time less than a given date.\n            </summary>\n            <param name=\"directory\">The directory.</param>\n            <param name=\"minDateModified\">The min date modified.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Server.Implementations.ScheduledTasks.Tasks.DeleteCacheFileTask.DeleteCacheFilesFromDirectory(System.String,System.DateTime,System.IProgress{System.Double},System.Threading.CancellationToken)\">\n            <summary>\n            Deletes the cache files from directory with a last write time less than a given date.\n            </summary>\n            <param name=\"directory\">The directory.</param>\n            <param name=\"minDateModified\">The min date modified.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 2999,
                  "startColumn": 59,
                  "endLine": 2999,
                  "endColumn": 65,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.QuickConnect.QuickConnectManager.ExpireRequests(System.Boolean)\">\n            <summary>\n            Expire quick connect requests that are over the time limit. If <paramref name=\"expireAll\"/> is true, all requests are unconditionally expired.\n            </summary>\n            <param name=\"expireAll\">If true, all requests will be expired.</param>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.QuickConnect.QuickConnectManager.ExpireRequests(System.Boolean)\">\n            <summary>\n            Expire quick connect requests that are over the time limit. If <paramref name=\"expireAll\"/> is true, all requests are unconditionally expired.\n            </summary>\n            <param name=\"expireAll\">If true, all requests will be expired.</param>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Server.Implementations.QuickConnect.QuickConnectManager.ExpireRequests(System.Boolean)\">\n            <summary>\n            Expire quick connect requests that are over the time limit. If <paramref name=\"expireAll\"/> is true, all requests are unconditionally expired.\n            </summary>\n            <param name=\"expireAll\">If true, all requests will be expired.</param>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 2959,
                  "startColumn": 15,
                  "endLine": 2959,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:Emby.Server.Implementations.QuickConnect.QuickConnectManager.Timeout\">\n            <summary>\n            The time (in minutes) that the quick connect token is valid.\n            </summary>\n        </member>\n        <member name=\"M:Emby.Server.Implementations.QuickConnect.QuickConnectManager.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager,Microsoft.Extensions.Logging.ILogger{Emby.Server.Implementations.QuickConnect.QuickConnectManager},MediaBrowser.Controller.Session.ISessionManager)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:Emby.Server.Implementations.QuickConnect.QuickConnectManager.Timeout\">\n            <summary>\n            The time (in minutes) that the quick connect token is valid.\n            </summary>\n        </member>\n        <member name=\"M:Emby.Server.Implementations.QuickConnect.QuickConnectManager.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager,Microsoft.Extensions.Logging.ILogger{Emby.Server.Implementations.QuickConnect.QuickConnectManager},MediaBrowser.Controller.Session.ISessionManager)\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:Emby.Server.Implementations.QuickConnect.QuickConnectManager.Timeout\">\n            <summary>\n            The time (in minutes) that the quick connect token is valid.\n            </summary>\n        </member>\n        <member name=\"M:Emby.Server.Implementations.QuickConnect.QuickConnectManager.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager,Microsoft.Extensions.Logging.ILogger{Emby.Server.Implementations.QuickConnect.QuickConnectManager},MediaBrowser.Controller.Session.ISessionManager)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 2845,
                  "startColumn": 23,
                  "endLine": 2845,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.Plugins.PluginManager.GetPlugin(System.Guid,System.Version)\">\n            <summary>\n            Attempts to find the plugin with and id of <paramref name=\"id\"/>.\n            </summary>\n            <param name=\"id\">The <see cref=\"T:System.Guid\"/> of plugin.</param>\n            <param name=\"version\">Optional <see cref=\"T:System.Version\"/> of the plugin to locate.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.Plugins.PluginManager.GetPlugin(System.Guid,System.Version)\">\n            <summary>\n            Attempts to find the plugin with and id of <paramref name=\"id\"/>.\n            </summary>\n            <param name=\"id\">The <see cref=\"T:System.Guid\"/> of plugin.</param>\n            <param name=\"version\">Optional <see cref=\"T:System.Version\"/> of the plugin to locate.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Server.Implementations.Plugins.PluginManager.GetPlugin(System.Guid,System.Version)\">\n            <summary>\n            Attempts to find the plugin with and id of <paramref name=\"id\"/>.\n            </summary>\n            <param name=\"id\">The <see cref=\"T:System.Guid\"/> of plugin.</param>\n            <param name=\"version\">Optional <see cref=\"T:System.Version\"/> of the plugin to locate.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 1439,
                  "startColumn": 53,
                  "endLine": 1439,
                  "endColumn": 62,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Emby.Server.Implementations.IStartupOptions.IsService\">\n            <summary>\n            Gets a value indicating whether to run as service by the --service command line option.\n            </summary>\n        </member>\n        <member name=\"P:Emby.Server.Implementations.IStartupOptions.PackageName\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Emby.Server.Implementations.IStartupOptions.IsService\">\n            <summary>\n            Gets a value indicating whether to run as service by the --service command line option.\n            </summary>\n        </member>\n        <member name=\"P:Emby.Server.Implementations.IStartupOptions.PackageName\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Emby.Server.Implementations.IStartupOptions.IsService\">\n            <summary>\n            Gets a value indicating whether to run as service by the --service command line option.\n            </summary>\n        </member>\n        <member name=\"P:Emby.Server.Implementations.IStartupOptions.PackageName\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 1361,
                  "startColumn": 31,
                  "endLine": 1361,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.IO.ManagedFileSystem.GetLastWriteTimeUtc(System.String)\">\n            <summary>\n            Gets the last write time UTC.\n            </summary>\n            <param name=\"path\">The path.</param>\n            <returns>DateTime.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.IO.ManagedFileSystem.GetLastWriteTimeUtc(System.String)\">\n            <summary>\n            Gets the last write time UTC.\n            </summary>\n            <param name=\"path\">The path.</param>\n            <returns>DateTime.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Server.Implementations.IO.ManagedFileSystem.GetLastWriteTimeUtc(System.String)\">\n            <summary>\n            Gets the last write time UTC.\n            </summary>\n            <param name=\"path\">The path.</param>\n            <returns>DateTime.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 1354,
                  "startColumn": 29,
                  "endLine": 1354,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.IO.ManagedFileSystem.GetLastWriteTimeUtc(System.IO.FileSystemInfo)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"info\">The info.</param>\n            <returns>DateTime.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.IO.ManagedFileSystem.GetLastWriteTimeUtc(System.IO.FileSystemInfo)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"info\">The info.</param>\n            <returns>DateTime.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Server.Implementations.IO.ManagedFileSystem.GetLastWriteTimeUtc(System.IO.FileSystemInfo)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"info\">The info.</param>\n            <returns>DateTime.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 1341,
                  "startColumn": 29,
                  "endLine": 1341,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.IO.ManagedFileSystem.GetCreationTimeUtc(System.String)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"path\">The path.</param>\n            <returns>DateTime.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.IO.ManagedFileSystem.GetCreationTimeUtc(System.String)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"path\">The path.</param>\n            <returns>DateTime.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Server.Implementations.IO.ManagedFileSystem.GetCreationTimeUtc(System.String)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"path\">The path.</param>\n            <returns>DateTime.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 1334,
                  "startColumn": 29,
                  "endLine": 1334,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.IO.ManagedFileSystem.GetCreationTimeUtc(System.IO.FileSystemInfo)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"info\">The info.</param>\n            <returns>DateTime.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.IO.ManagedFileSystem.GetCreationTimeUtc(System.IO.FileSystemInfo)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"info\">The info.</param>\n            <returns>DateTime.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Server.Implementations.IO.ManagedFileSystem.GetCreationTimeUtc(System.IO.FileSystemInfo)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"info\">The info.</param>\n            <returns>DateTime.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 44,
                  "endLine": 394,
                  "endColumn": 53,
                  "snippet": {
                    "text": "            <summary>\n            Create services registered with the service container that need to be initialized at application startup.\n            </summary>\n            <returns>A task representing the service initialization operation.</returns>\n        </member>\n        <member name=\"M:Emby.Server.Implementations.ApplicationHost.SetStaticProperties\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Create services registered with the service container that need to be initialized at application startup.\n            </summary>\n            <returns>A task representing the service initialization operation.</returns>\n        </member>\n        <member name=\"M:Emby.Server.Implementations.ApplicationHost.SetStaticProperties\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Create services registered with the service container that need to be initialized at application startup.\n            </summary>\n            <returns>A task representing the service initialization operation.</returns>\n        </member>\n        <member name=\"M:Emby.Server.Implementations.ApplicationHost.SetStaticProperties\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 47,
                  "endLine": 392,
                  "endColumn": 56,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.ApplicationHost.InitializeServices\">\n            <summary>\n            Create services registered with the service container that need to be initialized at application startup.\n            </summary>\n            <returns>A task representing the service initialization operation.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.ApplicationHost.InitializeServices\">\n            <summary>\n            Create services registered with the service container that need to be initialized at application startup.\n            </summary>\n            <returns>A task representing the service initialization operation.</returns>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Server.Implementations.ApplicationHost.InitializeServices\">\n            <summary>\n            Create services registered with the service container that need to be initialized at application startup.\n            </summary>\n            <returns>A task representing the service initialization operation.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 49,
                  "endLine": 386,
                  "endColumn": 58,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.ApplicationHost.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Registers services/resources with the service collection that will be available via DI.\n            </summary>\n            <param name=\"serviceCollection\">Instance of the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/> interface.</param>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Server.Implementations.ApplicationHost.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Registers services/resources with the service collection that will be available via DI.\n            </summary>\n            <param name=\"serviceCollection\">Instance of the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/> interface.</param>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Server.Implementations.ApplicationHost.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Registers services/resources with the service collection that will be available via DI.\n            </summary>\n            <param name=\"serviceCollection\">Instance of the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/> interface.</param>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 28,
                  "endLine": 309,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Emby.Server.Implementations.ApplicationHost.ServiceProvider\">\n            <summary>\n            Gets or sets the service provider.\n            </summary>\n        </member>\n        <member name=\"P:Emby.Server.Implementations.ApplicationHost.HttpPort\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Emby.Server.Implementations.ApplicationHost.ServiceProvider\">\n            <summary>\n            Gets or sets the service provider.\n            </summary>\n        </member>\n        <member name=\"P:Emby.Server.Implementations.ApplicationHost.HttpPort\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Emby.Server.Implementations.ApplicationHost.ServiceProvider\">\n            <summary>\n            Gets or sets the service provider.\n            </summary>\n        </member>\n        <member name=\"P:Emby.Server.Implementations.ApplicationHost.HttpPort\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 783,
                  "startColumn": 24,
                  "endLine": 783,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Server.Migrations.Routines.UpdateDefaultPluginRepository\">\n            <summary>\n            Migration to update the default Jellyfin plugin repository.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Migrations.Routines.UpdateDefaultPluginRepository.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Server.Migrations.Routines.UpdateDefaultPluginRepository\">\n            <summary>\n            Migration to update the default Jellyfin plugin repository.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Migrations.Routines.UpdateDefaultPluginRepository.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Server.Migrations.Routines.UpdateDefaultPluginRepository\">\n            <summary>\n            Migration to update the default Jellyfin plugin repository.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Migrations.Routines.UpdateDefaultPluginRepository.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 849,
                  "startColumn": 38,
                  "endLine": 849,
                  "endColumn": 47,
                  "snippet": {
                    "text": "            <summary>\n            Configures the service collection for the webhost.\n            </summary>\n            <param name=\"services\">The service collection.</param>\n        </member>\n        <member name=\"M:Jellyfin.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Configures the service collection for the webhost.\n            </summary>\n            <param name=\"services\">The service collection.</param>\n        </member>\n        <member name=\"M:Jellyfin.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Configures the service collection for the webhost.\n            </summary>\n            <param name=\"services\">The service collection.</param>\n        </member>\n        <member name=\"M:Jellyfin.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 847,
                  "startColumn": 26,
                  "endLine": 847,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Configures the service collection for the webhost.\n            </summary>\n            <param name=\"services\">The service collection.</param>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Configures the service collection for the webhost.\n            </summary>\n            <param name=\"services\">The service collection.</param>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Configures the service collection for the webhost.\n            </summary>\n            <param name=\"services\">The service collection.</param>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 549,
                  "startColumn": 43,
                  "endLine": 549,
                  "endColumn": 48,
                  "snippet": {
                    "text": "            <summary>\n            Check if the existing logging.json file has not been modified by the user by comparing it to all the\n            versions in our git history. Until now, the file has never been migrated after first creation so users\n            could have any version from the git history.\n            </summary>\n            <exception cref=\"T:System.IO.IOException\"><paramref name=\"oldConfigPath\"/> does not exist or could not be read.</exception>\n        </member>\n",
                    "rendered": {
                      "text": "            <summary>\n            Check if the existing logging.json file has not been modified by the user by comparing it to all the\n            versions in our git history. Until now, the file has never been migrated after first creation so users\n            could have any version from the git history.\n            </summary>\n            <exception cref=\"T:System.IO.IOException\"><paramref name=\"oldConfigPath\"/> does not exist or could not be read.</exception>\n        </member>\n",
                      "markdown": "`            <summary>\n            Check if the existing logging.json file has not been modified by the user by comparing it to all the\n            versions in our git history. Until now, the file has never been migrated after first creation so users\n            could have any version from the git history.\n            </summary>\n            <exception cref=\"T:System.IO.IOException\"><paramref name=\"oldConfigPath\"/> does not exist or could not be read.</exception>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 548,
                  "startColumn": 27,
                  "endLine": 548,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Migrations.Routines.CreateUserLoggingConfigFile.ExistingConfigUnmodified(System.String)\">\n            <summary>\n            Check if the existing logging.json file has not been modified by the user by comparing it to all the\n            versions in our git history. Until now, the file has never been migrated after first creation so users\n            could have any version from the git history.\n            </summary>\n            <exception cref=\"T:System.IO.IOException\"><paramref name=\"oldConfigPath\"/> does not exist or could not be read.</exception>\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Migrations.Routines.CreateUserLoggingConfigFile.ExistingConfigUnmodified(System.String)\">\n            <summary>\n            Check if the existing logging.json file has not been modified by the user by comparing it to all the\n            versions in our git history. Until now, the file has never been migrated after first creation so users\n            could have any version from the git history.\n            </summary>\n            <exception cref=\"T:System.IO.IOException\"><paramref name=\"oldConfigPath\"/> does not exist or could not be read.</exception>\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Migrations.Routines.CreateUserLoggingConfigFile.ExistingConfigUnmodified(System.String)\">\n            <summary>\n            Check if the existing logging.json file has not been modified by the user by comparing it to all the\n            versions in our git history. Until now, the file has never been migrated after first creation so users\n            could have any version from the git history.\n            </summary>\n            <exception cref=\"T:System.IO.IOException\"><paramref name=\"oldConfigPath\"/> does not exist or could not be read.</exception>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 388,
                  "startColumn": 30,
                  "endLine": 388,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Server.Migrations.MigrationsFactory\">\n            <summary>\n            A factory that can find a persistent file of the migration configuration, which lists all applied migrations.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Migrations.MigrationsFactory.GetConfigurations\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Server.Migrations.MigrationsFactory\">\n            <summary>\n            A factory that can find a persistent file of the migration configuration, which lists all applied migrations.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Migrations.MigrationsFactory.GetConfigurations\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Server.Migrations.MigrationsFactory\">\n            <summary>\n            A factory that can find a persistent file of the migration configuration, which lists all applied migrations.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Migrations.MigrationsFactory.GetConfigurations\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 32,
                  "endLine": 146,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            Adds Swagger to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddProxyAddresses(MediaBrowser.Common.Net.NetworkConfiguration,System.String[],Microsoft.AspNetCore.Builder.ForwardedHeadersOptions)\">\n            <summary>\n",
                    "rendered": {
                      "text": "            Adds Swagger to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddProxyAddresses(MediaBrowser.Common.Net.NetworkConfiguration,System.String[],Microsoft.AspNetCore.Builder.ForwardedHeadersOptions)\">\n            <summary>\n",
                      "markdown": "`            Adds Swagger to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddProxyAddresses(MediaBrowser.Common.Net.NetworkConfiguration,System.String[],Microsoft.AspNetCore.Builder.ForwardedHeadersOptions)\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 47,
                  "endLine": 145,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            <summary>\n            Adds Swagger to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddProxyAddresses(MediaBrowser.Common.Net.NetworkConfiguration,System.String[],Microsoft.AspNetCore.Builder.ForwardedHeadersOptions)\">\n",
                    "rendered": {
                      "text": "            <summary>\n            Adds Swagger to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddProxyAddresses(MediaBrowser.Common.Net.NetworkConfiguration,System.String[],Microsoft.AspNetCore.Builder.ForwardedHeadersOptions)\">\n",
                      "markdown": "`            <summary>\n            Adds Swagger to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddProxyAddresses(MediaBrowser.Common.Net.NetworkConfiguration,System.String[],Microsoft.AspNetCore.Builder.ForwardedHeadersOptions)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 31,
                  "endLine": 143,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApiSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Adds Swagger to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApiSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Adds Swagger to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApiSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Adds Swagger to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 47,
                  "endLine": 136,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            <summary>\n            Extension method for adding the Jellyfin API to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <param name=\"pluginAssemblies\">An IEnumerable containing all plugin assemblies with API controllers.</param>\n            <param name=\"config\">The <see cref=\"T:MediaBrowser.Common.Net.NetworkConfiguration\"/>.</param>\n            <returns>The MVC builder.</returns>\n",
                    "rendered": {
                      "text": "            <summary>\n            Extension method for adding the Jellyfin API to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <param name=\"pluginAssemblies\">An IEnumerable containing all plugin assemblies with API controllers.</param>\n            <param name=\"config\">The <see cref=\"T:MediaBrowser.Common.Net.NetworkConfiguration\"/>.</param>\n            <returns>The MVC builder.</returns>\n",
                      "markdown": "`            <summary>\n            Extension method for adding the Jellyfin API to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <param name=\"pluginAssemblies\">An IEnumerable containing all plugin assemblies with API controllers.</param>\n            <param name=\"config\">The <see cref=\"T:MediaBrowser.Common.Net.NetworkConfiguration\"/>.</param>\n            <returns>The MVC builder.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 63,
                  "endLine": 134,
                  "endColumn": 72,
                  "snippet": {
                    "text": "viceCollectionExtensions.AddJellyfinApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},MediaBrowser.Common.Net.NetworkConfiguration)\">\n            <summary>\n            Extension method for adding the Jellyfin API to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <param name=\"pluginAssemblies\">An IEnumerable containing all plugin assemblies with API controllers.</param>\n            <param name=\"config\">The <see cref=\"T:MediaBrowser.Commo",
                    "rendered": {
                      "text": "viceCollectionExtensions.AddJellyfinApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},MediaBrowser.Common.Net.NetworkConfiguration)\">\n            <summary>\n            Extension method for adding the Jellyfin API to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <param name=\"pluginAssemblies\">An IEnumerable containing all plugin assemblies with API controllers.</param>\n            <param name=\"config\">The <see cref=\"T:MediaBrowser.Commo",
                      "markdown": "`viceCollectionExtensions.AddJellyfinApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},MediaBrowser.Common.Net.NetworkConfiguration)\">\n            <summary>\n            Extension method for adding the Jellyfin API to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <param name=\"pluginAssemblies\">An IEnumerable containing all plugin assemblies with API controllers.</param>\n            <param name=\"config\">The <see cref=\"T:MediaBrowser.Commo`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 32,
                  "endLine": 130,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            Adds custom legacy authentication to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},MediaBrowser.Common.Net.NetworkConfiguration)\">\n            <summary>\n",
                    "rendered": {
                      "text": "            Adds custom legacy authentication to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},MediaBrowser.Common.Net.NetworkConfiguration)\">\n            <summary>\n",
                      "markdown": "`            Adds custom legacy authentication to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},MediaBrowser.Common.Net.NetworkConfiguration)\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 47,
                  "endLine": 129,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            <summary>\n            Adds custom legacy authentication to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},MediaBrowser.Common.Net.NetworkConfiguration)\">\n",
                    "rendered": {
                      "text": "            <summary>\n            Adds custom legacy authentication to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},MediaBrowser.Common.Net.NetworkConfiguration)\">\n",
                      "markdown": "`            <summary>\n            Adds custom legacy authentication to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},MediaBrowser.Common.Net.NetworkConfiguration)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 52,
                  "endLine": 127,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddCustomAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Adds custom legacy authentication to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddCustomAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Adds custom legacy authentication to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddCustomAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Adds custom legacy authentication to the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 32,
                  "endLine": 123,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            Adds jellyfin API authorization policies to the DI container.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddCustomAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n",
                    "rendered": {
                      "text": "            Adds jellyfin API authorization policies to the DI container.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddCustomAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n",
                      "markdown": "`            Adds jellyfin API authorization policies to the DI container.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddCustomAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 47,
                  "endLine": 122,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            <summary>\n            Adds jellyfin API authorization policies to the DI container.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddCustomAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n",
                    "rendered": {
                      "text": "            <summary>\n            Adds jellyfin API authorization policies to the DI container.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddCustomAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n",
                      "markdown": "`            <summary>\n            Adds jellyfin API authorization policies to the DI container.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddCustomAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 43,
                  "endLine": 115,
                  "endColumn": 52,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions\">\n            <summary>\n            API specific extensions for the service collection.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApiAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions\">\n            <summary>\n            API specific extensions for the service collection.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApiAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions\">\n            <summary>\n            API specific extensions for the service collection.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApiAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/jellyfin.xml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 16,
                  "endLine": 56,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiApplicationBuilderExtensions.UseIPBasedAccessValidation(Microsoft.AspNetCore.Builder.IApplicationBuilder)\">\n            <summary>\n            Adds IP based access validation to the application pipeline.\n            </summary>\n            <param name=\"appBuilder\">The application builder.</param>\n            <returns>The updated application builder.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiApplicationBuilderExtensions.UseIPBasedAccessValidation(Microsoft.AspNetCore.Builder.IApplicationBuilder)\">\n            <summary>\n            Adds IP based access validation to the application pipeline.\n            </summary>\n            <param name=\"appBuilder\">The application builder.</param>\n            <returns>The updated application builder.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Server.Extensions.ApiApplicationBuilderExtensions.UseIPBasedAccessValidation(Microsoft.AspNetCore.Builder.IApplicationBuilder)\">\n            <summary>\n            Adds IP based access validation to the application pipeline.\n            </summary>\n            <param name=\"appBuilder\">The application builder.</param>\n            <returns>The updated application builder.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1543,
                  "startColumn": 59,
                  "endLine": 1543,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1541,
                  "startColumn": 67,
                  "endLine": 1541,
                  "endColumn": 71,
                  "snippet": {
                    "text": "e if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.NewLineEscapedRegex_7.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "e if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.NewLineEscapedRegex_7.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`e if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.NewLineEscapedRegex_7.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1484,
                  "startColumn": 59,
                  "endLine": 1484,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.NewLineRegex_6\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the NewLineRegex method.</summary>\n        </member>",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.NewLineRegex_6\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the NewLineRegex method.</summary>\n        </member>",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.NewLineRegex_6\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the NewLineRegex method.</summary>\n        </member>`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1482,
                  "startColumn": 67,
                  "endLine": 1482,
                  "endColumn": 71,
                  "snippet": {
                    "text": " false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.PerformerRegex_5.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": " false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.PerformerRegex_5.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "` false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.PerformerRegex_5.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1452,
                  "startColumn": 59,
                  "endLine": 1452,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.PerformerRegex_5\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the PerformerRegex method.</summary>\n        </mem",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.PerformerRegex_5\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the PerformerRegex method.</summary>\n        </mem",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.PerformerRegex_5\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the PerformerRegex method.</summary>\n        </mem`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1450,
                  "startColumn": 67,
                  "endLine": 1450,
                  "endColumn": 71,
                  "snippet": {
                    "text": "alse if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.FfprobePathRegex_4.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "alse if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.FfprobePathRegex_4.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`alse if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.FfprobePathRegex_4.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1420,
                  "startColumn": 59,
                  "endLine": 1420,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.FfprobePathRegex_4\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the FfprobePathRegex method.</summary>\n        <",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.FfprobePathRegex_4\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the FfprobePathRegex method.</summary>\n        <",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.FfprobePathRegex_4\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the FfprobePathRegex method.</summary>\n        <`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1418,
                  "startColumn": 67,
                  "endLine": 1418,
                  "endColumn": 71,
                  "snippet": {
                    "text": "nd; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.FilterRegex_3.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "nd; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.FilterRegex_3.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`nd; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.FilterRegex_3.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1388,
                  "startColumn": 59,
                  "endLine": 1388,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.FilterRegex_3\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the FilterRegex method.</summary>\n        </member>\n ",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.FilterRegex_3\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the FilterRegex method.</summary>\n        </member>\n ",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.FilterRegex_3\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the FilterRegex method.</summary>\n        </member>\n `"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1386,
                  "startColumn": 67,
                  "endLine": 1386,
                  "endColumn": 71,
                  "snippet": {
                    "text": "und; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.CodecRegex_2.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "und; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.CodecRegex_2.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`und; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.CodecRegex_2.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1356,
                  "startColumn": 59,
                  "endLine": 1356,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.CodecRegex_2\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the CodecRegex method.</summary>\n        </member>\n   ",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.CodecRegex_2\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the CodecRegex method.</summary>\n        </member>\n   ",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.CodecRegex_2\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the CodecRegex method.</summary>\n        </member>\n   `"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1354,
                  "startColumn": 67,
                  "endLine": 1354,
                  "endColumn": 71,
                  "snippet": {
                    "text": "d; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.LibraryRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "d; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.LibraryRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`d; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.LibraryRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1324,
                  "startColumn": 59,
                  "endLine": 1324,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.LibraryRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the LibraryRegex method.</summary>\n        </member>",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.LibraryRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the LibraryRegex method.</summary>\n        </member>",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.LibraryRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the LibraryRegex method.</summary>\n        </member>`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1322,
                  "startColumn": 67,
                  "endLine": 1322,
                  "endColumn": 71,
                  "snippet": {
                    "text": "se if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.FfmpegVersionRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "se if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.FfmpegVersionRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`se if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.FfmpegVersionRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 15,
                  "endLine": 344,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.SetFFmpegPath\">\n            <summary>\n            Run at startup or if the user removes a Custom path from transcode page.\n            Sets global variables FFmpegPath.\n            Precedence is: Config > CLI > $PATH.\n            </summary>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.SetFFmpegPath\">\n            <summary>\n            Run at startup or if the user removes a Custom path from transcode page.\n            Sets global variables FFmpegPath.\n            Precedence is: Config > CLI > $PATH.\n            </summary>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.SetFFmpegPath\">\n            <summary>\n            Run at startup or if the user removes a Custom path from transcode page.\n            Sets global variables FFmpegPath.\n            Precedence is: Config > CLI > $PATH.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 22,
                  "endLine": 338,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                ○ 1st capture group.<br/>\n                    ○ Match '.'.<br/>\n                    ○ Match a character in the set [^\\n./\\\\] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                    "rendered": {
                      "text": "                ○ 1st capture group.<br/>\n                    ○ Match '.'.<br/>\n                    ○ Match a character in the set [^\\n./\\\\] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                      "markdown": "`                ○ 1st capture group.<br/>\n                    ○ Match '.'.<br/>\n                    ○ Match a character in the set [^\\n./\\\\] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n            </remarks>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 71,
                  "endLine": 337,
                  "endColumn": 75,
                  "snippet": {
                    "text": "            ○ Optional (greedy).<br/>\n                ○ 1st capture group.<br/>\n                    ○ Match '.'.<br/>\n                    ○ Match a character in the set [^\\n./\\\\] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n            </remarks>\n",
                    "rendered": {
                      "text": "            ○ Optional (greedy).<br/>\n                ○ 1st capture group.<br/>\n                    ○ Match '.'.<br/>\n                    ○ Match a character in the set [^\\n./\\\\] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n            </remarks>\n",
                      "markdown": "`            ○ Optional (greedy).<br/>\n                ○ 1st capture group.<br/>\n                    ○ Match '.'.<br/>\n                    ○ Match a character in the set [^\\n./\\\\] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n            </remarks>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 333,
                  "startColumn": 56,
                  "endLine": 333,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            <code>[^\\\\/\\\\\\\\]+?(\\\\.[^\\\\/\\\\\\\\\\\\n.]+)?$</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a character in the set [^/\\\\] lazily at least once.<br/>\n            ○ Optional (greedy).<br/>\n                ○ 1st capture group.<br/>\n                    ○ Match '.'.<br/>\n",
                    "rendered": {
                      "text": "            <code>[^\\\\/\\\\\\\\]+?(\\\\.[^\\\\/\\\\\\\\\\\\n.]+)?$</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a character in the set [^/\\\\] lazily at least once.<br/>\n            ○ Optional (greedy).<br/>\n                ○ 1st capture group.<br/>\n                    ○ Match '.'.<br/>\n",
                      "markdown": "`            <code>[^\\\\/\\\\\\\\]+?(\\\\.[^\\\\/\\\\\\\\\\\\n.]+)?$</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a character in the set [^/\\\\] lazily at least once.<br/>\n            ○ Optional (greedy).<br/>\n                ○ 1st capture group.<br/>\n                    ○ Match '.'.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 22,
                  "endLine": 261,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                    "rendered": {
                      "text": "                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                      "markdown": "`                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 56,
                  "endLine": 260,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            ○ \"filter\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n",
                    "rendered": {
                      "text": "            ○ \"filter\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n",
                      "markdown": "`            ○ \"filter\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 51,
                  "endLine": 259,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            ○ Match a whitespace character.<br/>\n            ○ \"filter\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n",
                    "rendered": {
                      "text": "            ○ Match a whitespace character.<br/>\n            ○ \"filter\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n",
                      "markdown": "`            ○ Match a whitespace character.<br/>\n            ○ \"filter\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 62,
                  "endLine": 258,
                  "endColumn": 66,
                  "snippet": {
                    "text": "            ○ Match any character other than a whitespace character exactly 3 times.<br/>\n            ○ Match a whitespace character.<br/>\n            ○ \"filter\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n",
                    "rendered": {
                      "text": "            ○ Match any character other than a whitespace character exactly 3 times.<br/>\n            ○ Match a whitespace character.<br/>\n            ○ \"filter\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n",
                      "markdown": "`            ○ Match any character other than a whitespace character exactly 3 times.<br/>\n            ○ Match a whitespace character.<br/>\n            ○ \"filter\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 22,
                  "endLine": 253,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            <code>RegexOptions.Multiline</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of a line.<br/>\n            ○ Match a whitespace character.<br/>\n            ○ Match any character other than a whitespace character exactly 3 times.<br/>\n            ○ Match a whitespace character.<br/>\n",
                    "rendered": {
                      "text": "            <code>RegexOptions.Multiline</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of a line.<br/>\n            ○ Match a whitespace character.<br/>\n            ○ Match any character other than a whitespace character exactly 3 times.<br/>\n            ○ Match a whitespace character.<br/>\n",
                      "markdown": "`            <code>RegexOptions.Multiline</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of a line.<br/>\n            ○ Match a whitespace character.<br/>\n            ○ Match any character other than a whitespace character exactly 3 times.<br/>\n            ○ Match a whitespace character.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 22,
                  "endLine": 241,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                    "rendered": {
                      "text": "                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                      "markdown": "`                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 56,
                  "endLine": 240,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            ○ \"codec\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n",
                    "rendered": {
                      "text": "            ○ \"codec\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n",
                      "markdown": "`            ○ \"codec\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 51,
                  "endLine": 239,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            ○ Match a whitespace character.<br/>\n            ○ \"codec\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n",
                    "rendered": {
                      "text": "            ○ Match a whitespace character.<br/>\n            ○ \"codec\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n",
                      "markdown": "`            ○ Match a whitespace character.<br/>\n            ○ \"codec\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 62,
                  "endLine": 238,
                  "endColumn": 66,
                  "snippet": {
                    "text": "            ○ Match any character other than a whitespace character exactly 6 times.<br/>\n            ○ Match a whitespace character.<br/>\n            ○ \"codec\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n",
                    "rendered": {
                      "text": "            ○ Match any character other than a whitespace character exactly 6 times.<br/>\n            ○ Match a whitespace character.<br/>\n            ○ \"codec\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n",
                      "markdown": "`            ○ Match any character other than a whitespace character exactly 6 times.<br/>\n            ○ Match a whitespace character.<br/>\n            ○ \"codec\" capture group.<br/>\n                ○ Match a character in the set [-|\\w] greedily at least once.<br/>\n            ○ Match a whitespace character greedily at least once.<br/>\n            ○ Match a character other than '\\n' greedily at least once.<br/>\n            ○ Match if at the end of a line.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 22,
                  "endLine": 233,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            <code>RegexOptions.Multiline</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of a line.<br/>\n            ○ Match a whitespace character.<br/>\n            ○ Match any character other than a whitespace character exactly 6 times.<br/>\n            ○ Match a whitespace character.<br/>\n",
                    "rendered": {
                      "text": "            <code>RegexOptions.Multiline</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of a line.<br/>\n            ○ Match a whitespace character.<br/>\n            ○ Match any character other than a whitespace character exactly 6 times.<br/>\n            ○ Match a whitespace character.<br/>\n",
                      "markdown": "`            <code>RegexOptions.Multiline</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of a line.<br/>\n            ○ Match a whitespace character.<br/>\n            ○ Match any character other than a whitespace character exactly 6 times.<br/>\n            ○ Match a whitespace character.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 67,
                  "endLine": 203,
                  "endColumn": 71,
                  "snippet": {
                    "text": "                ○ Match '.'.<br/>\n                ○ Match a whitespace character atomically any number of times.<br/>\n                ○ \"minor\" capture group.<br/>\n                    ○ Match a character in the set [0-9] atomically at least once.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                    "rendered": {
                      "text": "                ○ Match '.'.<br/>\n                ○ Match a whitespace character atomically any number of times.<br/>\n                ○ \"minor\" capture group.<br/>\n                    ○ Match a character in the set [0-9] atomically at least once.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                      "markdown": "`                ○ Match '.'.<br/>\n                ○ Match a whitespace character atomically any number of times.<br/>\n                ○ \"minor\" capture group.<br/>\n                    ○ Match a character in the set [0-9] atomically at least once.<br/>\n            </code>\n            </remarks>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 67,
                  "endLine": 199,
                  "endColumn": 71,
                  "snippet": {
                    "text": "                    ○ Match a word character atomically at least once.<br/>\n                ○ Match a whitespace character atomically at least once.<br/>\n                ○ \"major\" capture group.<br/>\n                    ○ Match a character in the set [0-9] atomically at least once.<br/>\n                ○ Match '.'.<br/>\n                ○ Match a whitespace character atomically any number of times.<br/>\n                ○ \"minor\" capture group.<br/>\n",
                    "rendered": {
                      "text": "                    ○ Match a word character atomically at least once.<br/>\n                ○ Match a whitespace character atomically at least once.<br/>\n                ○ \"major\" capture group.<br/>\n                    ○ Match a character in the set [0-9] atomically at least once.<br/>\n                ○ Match '.'.<br/>\n                ○ Match a whitespace character atomically any number of times.<br/>\n                ○ \"minor\" capture group.<br/>\n",
                      "markdown": "`                    ○ Match a word character atomically at least once.<br/>\n                ○ Match a whitespace character atomically at least once.<br/>\n                ○ \"major\" capture group.<br/>\n                    ○ Match a character in the set [0-9] atomically at least once.<br/>\n                ○ Match '.'.<br/>\n                ○ Match a whitespace character atomically any number of times.<br/>\n                ○ \"minor\" capture group.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 57,
                  "endLine": 197,
                  "endColumn": 61,
                  "snippet": {
                    "text": "                ○ \"name\" capture group.<br/>\n                    ○ Match the string \"lib\".<br/>\n                    ○ Match a word character atomically at least once.<br/>\n                ○ Match a whitespace character atomically at least once.<br/>\n                ○ \"major\" capture group.<br/>\n                    ○ Match a character in the set [0-9] atomically at least once.<br/>\n                ○ Match '.'.<br/>\n",
                    "rendered": {
                      "text": "                ○ \"name\" capture group.<br/>\n                    ○ Match the string \"lib\".<br/>\n                    ○ Match a word character atomically at least once.<br/>\n                ○ Match a whitespace character atomically at least once.<br/>\n                ○ \"major\" capture group.<br/>\n                    ○ Match a character in the set [0-9] atomically at least once.<br/>\n                ○ Match '.'.<br/>\n",
                      "markdown": "`                ○ \"name\" capture group.<br/>\n                    ○ Match the string \"lib\".<br/>\n                    ○ Match a word character atomically at least once.<br/>\n                ○ Match a whitespace character atomically at least once.<br/>\n                ○ \"major\" capture group.<br/>\n                    ○ Match a character in the set [0-9] atomically at least once.<br/>\n                ○ Match '.'.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 55,
                  "endLine": 196,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            ○ 1st capture group.<br/>\n                ○ \"name\" capture group.<br/>\n                    ○ Match the string \"lib\".<br/>\n                    ○ Match a word character atomically at least once.<br/>\n                ○ Match a whitespace character atomically at least once.<br/>\n                ○ \"major\" capture group.<br/>\n                    ○ Match a character in the set [0-9] atomically at least once.<br/>\n",
                    "rendered": {
                      "text": "            ○ 1st capture group.<br/>\n                ○ \"name\" capture group.<br/>\n                    ○ Match the string \"lib\".<br/>\n                    ○ Match a word character atomically at least once.<br/>\n                ○ Match a whitespace character atomically at least once.<br/>\n                ○ \"major\" capture group.<br/>\n                    ○ Match a character in the set [0-9] atomically at least once.<br/>\n",
                      "markdown": "`            ○ 1st capture group.<br/>\n                ○ \"name\" capture group.<br/>\n                    ○ Match the string \"lib\".<br/>\n                    ○ Match a word character atomically at least once.<br/>\n                ○ Match a whitespace character atomically at least once.<br/>\n                ○ \"major\" capture group.<br/>\n                    ○ Match a character in the set [0-9] atomically at least once.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 65,
                  "endLine": 180,
                  "endColumn": 69,
                  "snippet": {
                    "text": "            ○ Match 'n' atomically, optionally.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily and atomically at least once.<br/>\n                    ○ Match a character in the set [0-9] greedily at least once.<br/>\n                    ○ Match '.' atomically, optionally.<br/>\n            </code>\n            </remarks>\n",
                    "rendered": {
                      "text": "            ○ Match 'n' atomically, optionally.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily and atomically at least once.<br/>\n                    ○ Match a character in the set [0-9] greedily at least once.<br/>\n                    ○ Match '.' atomically, optionally.<br/>\n            </code>\n            </remarks>\n",
                      "markdown": "`            ○ Match 'n' atomically, optionally.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily and atomically at least once.<br/>\n                    ○ Match a character in the set [0-9] greedily at least once.<br/>\n                    ○ Match '.' atomically, optionally.<br/>\n            </code>\n            </remarks>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 46,
                  "endLine": 179,
                  "endColumn": 50,
                  "snippet": {
                    "text": "            ○ Match the string \"ffmpeg version \".<br/>\n            ○ Match 'n' atomically, optionally.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily and atomically at least once.<br/>\n                    ○ Match a character in the set [0-9] greedily at least once.<br/>\n                    ○ Match '.' atomically, optionally.<br/>\n            </code>\n",
                    "rendered": {
                      "text": "            ○ Match the string \"ffmpeg version \".<br/>\n            ○ Match 'n' atomically, optionally.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily and atomically at least once.<br/>\n                    ○ Match a character in the set [0-9] greedily at least once.<br/>\n                    ○ Match '.' atomically, optionally.<br/>\n            </code>\n",
                      "markdown": "`            ○ Match the string \"ffmpeg version \".<br/>\n            ○ Match 'n' atomically, optionally.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily and atomically at least once.<br/>\n                    ○ Match a character in the set [0-9] greedily at least once.<br/>\n                    ○ Match '.' atomically, optionally.<br/>\n            </code>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 22,
                  "endLine": 175,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            <code>^ffmpeg version n?((?:[0-9]+\\\\.?)+)</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match the string \"ffmpeg version \".<br/>\n            ○ Match 'n' atomically, optionally.<br/>\n            ○ 1st capture group.<br/>\n",
                    "rendered": {
                      "text": "            <code>^ffmpeg version n?((?:[0-9]+\\\\.?)+)</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match the string \"ffmpeg version \".<br/>\n            ○ Match 'n' atomically, optionally.<br/>\n            ○ 1st capture group.<br/>\n",
                      "markdown": "`            <code>^ffmpeg version n?((?:[0-9]+\\\\.?)+)</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match the string \"ffmpeg version \".<br/>\n            ○ Match 'n' atomically, optionally.<br/>\n            ○ 1st capture group.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 1549,
                  "startColumn": 28,
                  "endLine": 1549,
                  "endColumn": 37,
                  "snippet": {
                    "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                    "rendered": {
                      "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                      "markdown": "`rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 44,
                  "endLine": 300,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.DefaultHdrImageExtractionTimeout\">\n            <summary>\n            The default HDR image extraction timeout in milliseconds.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.EncoderPath\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.DefaultHdrImageExtractionTimeout\">\n            <summary>\n            The default HDR image extraction timeout in milliseconds.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.EncoderPath\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.DefaultHdrImageExtractionTimeout\">\n            <summary>\n            The default HDR image extraction timeout in milliseconds.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.EncoderPath\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.MediaEncoding.xml"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 44,
                  "endLine": 295,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.DefaultSdrImageExtractionTimeout\">\n            <summary>\n            The default SDR image extraction timeout in milliseconds.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.DefaultHdrImageExtractionTimeout\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.DefaultSdrImageExtractionTimeout\">\n            <summary>\n            The default SDR image extraction timeout in milliseconds.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.DefaultHdrImageExtractionTimeout\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.DefaultSdrImageExtractionTimeout\">\n            <summary>\n            The default SDR image extraction timeout in milliseconds.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.MediaEncoding.Encoder.MediaEncoder.DefaultHdrImageExtractionTimeout\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 4139,
                  "startColumn": 90,
                  "endLine": 4139,
                  "endColumn": 98,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs.#ctor(Jellyfin.Data.Entities.User)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs\"/> class.\n            </summary>\n            <param name=\"arg\">The user.</param>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs.#ctor(Jellyfin.Data.Entities.User)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs\"/> class.\n            </summary>\n            <param name=\"arg\">The user.</param>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs.#ctor(Jellyfin.Data.Entities.User)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs\"/> class.\n            </summary>\n            <param name=\"arg\">The user.</param>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 4137,
                  "startColumn": 55,
                  "endLine": 4137,
                  "endColumn": 63,
                  "snippet": {
                    "text": "            An event that occurs when a user's password has changed.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs.#ctor(Jellyfin.Data.Entities.User)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs\"/> class.\n            </summary>\n",
                    "rendered": {
                      "text": "            An event that occurs when a user's password has changed.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs.#ctor(Jellyfin.Data.Entities.User)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs\"/> class.\n            </summary>\n",
                      "markdown": "`            An event that occurs when a user's password has changed.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs.#ctor(Jellyfin.Data.Entities.User)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs\"/> class.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 4134,
                  "startColumn": 47,
                  "endLine": 4134,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs\">\n            <summary>\n            An event that occurs when a user's password has changed.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs.#ctor(Jellyfin.Data.Entities.User)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs\">\n            <summary>\n            An event that occurs when a user's password has changed.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs.#ctor(Jellyfin.Data.Entities.User)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs\">\n            <summary>\n            An event that occurs when a user's password has changed.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs.#ctor(Jellyfin.Data.Entities.User)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 4132,
                  "startColumn": 55,
                  "endLine": 4132,
                  "endColumn": 63,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"arg\">The user.</param>\n        </member>\n        <member name=\"T:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs\">\n            <summary>\n            An event that occurs when a user's password has changed.\n            </summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"arg\">The user.</param>\n        </member>\n        <member name=\"T:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs\">\n            <summary>\n            An event that occurs when a user's password has changed.\n            </summary>\n",
                      "markdown": "`            </summary>\n            <param name=\"arg\">The user.</param>\n        </member>\n        <member name=\"T:Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs\">\n            <summary>\n            An event that occurs when a user's password has changed.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 2383,
                  "startColumn": 73,
                  "endLine": 2383,
                  "endColumn": 81,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.EnableLocalPassword\">\n            <summary>\n            Gets or sets a value indicating whether the user has a local password.\n            </summary>\n            <remarks>\n            Required.\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.EnableLocalPassword\">\n            <summary>\n            Gets or sets a value indicating whether the user has a local password.\n            </summary>\n            <remarks>\n            Required.\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.EnableLocalPassword\">\n            <summary>\n            Gets or sets a value indicating whether the user has a local password.\n            </summary>\n            <remarks>\n            Required.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 2381,
                  "startColumn": 63,
                  "endLine": 2381,
                  "endColumn": 71,
                  "snippet": {
                    "text": "            Required.\n            </remarks>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.EnableLocalPassword\">\n            <summary>\n            Gets or sets a value indicating whether the user has a local password.\n            </summary>\n",
                    "rendered": {
                      "text": "            Required.\n            </remarks>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.EnableLocalPassword\">\n            <summary>\n            Gets or sets a value indicating whether the user has a local password.\n            </summary>\n",
                      "markdown": "`            Required.\n            </remarks>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.EnableLocalPassword\">\n            <summary>\n            Gets or sets a value indicating whether the user has a local password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 2307,
                  "startColumn": 29,
                  "endLine": 2307,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.PasswordResetProviderId\">\n            <summary>\n            Gets or sets the password reset provider id.\n            </summary>\n            <remarks>\n            Required, Max length = 255.\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.PasswordResetProviderId\">\n            <summary>\n            Gets or sets the password reset provider id.\n            </summary>\n            <remarks>\n            Required, Max length = 255.\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.PasswordResetProviderId\">\n            <summary>\n            Gets or sets the password reset provider id.\n            </summary>\n            <remarks>\n            Required, Max length = 255.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 2305,
                  "startColumn": 52,
                  "endLine": 2305,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            Required, Max length = 255.\n            </remarks>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.PasswordResetProviderId\">\n            <summary>\n            Gets or sets the password reset provider id.\n            </summary>\n",
                    "rendered": {
                      "text": "            Required, Max length = 255.\n            </remarks>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.PasswordResetProviderId\">\n            <summary>\n            Gets or sets the password reset provider id.\n            </summary>\n",
                      "markdown": "`            Required, Max length = 255.\n            </remarks>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.PasswordResetProviderId\">\n            <summary>\n            Gets or sets the password reset provider id.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 2283,
                  "startColumn": 79,
                  "endLine": 2283,
                  "endColumn": 87,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.MustUpdatePassword\">\n            <summary>\n            Gets or sets a value indicating whether the user must update their password.\n            </summary>\n            <remarks>\n            Required.\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.MustUpdatePassword\">\n            <summary>\n            Gets or sets a value indicating whether the user must update their password.\n            </summary>\n            <remarks>\n            Required.\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.MustUpdatePassword\">\n            <summary>\n            Gets or sets a value indicating whether the user must update their password.\n            </summary>\n            <remarks>\n            Required.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 2281,
                  "startColumn": 62,
                  "endLine": 2281,
                  "endColumn": 70,
                  "snippet": {
                    "text": "            Max length = 65535.\n            </remarks>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.MustUpdatePassword\">\n            <summary>\n            Gets or sets a value indicating whether the user must update their password.\n            </summary>\n",
                    "rendered": {
                      "text": "            Max length = 65535.\n            </remarks>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.MustUpdatePassword\">\n            <summary>\n            Gets or sets a value indicating whether the user must update their password.\n            </summary>\n",
                      "markdown": "`            Max length = 65535.\n            </remarks>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.MustUpdatePassword\">\n            <summary>\n            Gets or sets a value indicating whether the user must update their password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 2275,
                  "startColumn": 36,
                  "endLine": 2275,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.Password\">\n            <summary>\n            Gets or sets the user's password, or <c>null</c> if none is set.\n            </summary>\n            <remarks>\n            Max length = 65535.\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.Password\">\n            <summary>\n            Gets or sets the user's password, or <c>null</c> if none is set.\n            </summary>\n            <remarks>\n            Max length = 65535.\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.Password\">\n            <summary>\n            Gets or sets the user's password, or <c>null</c> if none is set.\n            </summary>\n            <remarks>\n            Max length = 65535.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 2273,
                  "startColumn": 52,
                  "endLine": 2273,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            Required, Max length = 255.\n            </remarks>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.Password\">\n            <summary>\n            Gets or sets the user's password, or <c>null</c> if none is set.\n            </summary>\n",
                    "rendered": {
                      "text": "            Required, Max length = 255.\n            </remarks>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.Password\">\n            <summary>\n            Gets or sets the user's password, or <c>null</c> if none is set.\n            </summary>\n",
                      "markdown": "`            Required, Max length = 255.\n            </remarks>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.Password\">\n            <summary>\n            Gets or sets the user's password, or <c>null</c> if none is set.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 2255,
                  "startColumn": 71,
                  "endLine": 2255,
                  "endColumn": 79,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"username\">The username for the new user.</param>\n            <param name=\"authenticationProviderId\">The Id of the user's authentication provider.</param>\n            <param name=\"passwordResetProviderId\">The Id of the user's password reset provider.</param>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.Id\">\n            <summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"username\">The username for the new user.</param>\n            <param name=\"authenticationProviderId\">The Id of the user's authentication provider.</param>\n            <param name=\"passwordResetProviderId\">The Id of the user's password reset provider.</param>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.Id\">\n            <summary>\n",
                      "markdown": "`            </summary>\n            <param name=\"username\">The username for the new user.</param>\n            <param name=\"authenticationProviderId\">The Id of the user's authentication provider.</param>\n            <param name=\"passwordResetProviderId\">The Id of the user's password reset provider.</param>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.Id\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 2255,
                  "startColumn": 25,
                  "endLine": 2255,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"username\">The username for the new user.</param>\n            <param name=\"authenticationProviderId\">The Id of the user's authentication provider.</param>\n            <param name=\"passwordResetProviderId\">The Id of the user's password reset provider.</param>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.Id\">\n            <summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"username\">The username for the new user.</param>\n            <param name=\"authenticationProviderId\">The Id of the user's authentication provider.</param>\n            <param name=\"passwordResetProviderId\">The Id of the user's password reset provider.</param>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.Id\">\n            <summary>\n",
                      "markdown": "`            </summary>\n            <param name=\"username\">The username for the new user.</param>\n            <param name=\"authenticationProviderId\">The Id of the user's authentication provider.</param>\n            <param name=\"passwordResetProviderId\">The Id of the user's password reset provider.</param>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.Id\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 3447,
                  "startColumn": 41,
                  "endLine": 3447,
                  "endColumn": 50,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:Jellyfin.Data.Enums.PermissionKind.EnableRemoteControlOfOtherUsers\">\n            <summary>\n            Whether the user can remotely control other users.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.PermissionKind.EnablePlaybackRemuxing\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:Jellyfin.Data.Enums.PermissionKind.EnableRemoteControlOfOtherUsers\">\n            <summary>\n            Whether the user can remotely control other users.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.PermissionKind.EnablePlaybackRemuxing\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:Jellyfin.Data.Enums.PermissionKind.EnableRemoteControlOfOtherUsers\">\n            <summary>\n            Whether the user can remotely control other users.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.PermissionKind.EnablePlaybackRemuxing\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 3372,
                  "startColumn": 32,
                  "endLine": 3372,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:Jellyfin.Data.Enums.PermissionKind.EnableSharedDeviceControl\">\n            <summary>\n            Whether the user can control shared devices.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.PermissionKind.EnableRemoteAccess\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:Jellyfin.Data.Enums.PermissionKind.EnableSharedDeviceControl\">\n            <summary>\n            Whether the user can control shared devices.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.PermissionKind.EnableRemoteAccess\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:Jellyfin.Data.Enums.PermissionKind.EnableSharedDeviceControl\">\n            <summary>\n            Whether the user can control shared devices.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.PermissionKind.EnableRemoteAccess\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 2338,
                  "startColumn": 80,
                  "endLine": 2338,
                  "endColumn": 84,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.MaxActiveSessions\">\n            <summary>\n            Gets or sets the maximum number of active sessions the user can have at once.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.SubtitleMode\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.MaxActiveSessions\">\n            <summary>\n            Gets or sets the maximum number of active sessions the user can have at once.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.SubtitleMode\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.MaxActiveSessions\">\n            <summary>\n            Gets or sets the maximum number of active sessions the user can have at once.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.SubtitleMode\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 2283,
                  "startColumn": 65,
                  "endLine": 2283,
                  "endColumn": 73,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.MustUpdatePassword\">\n            <summary>\n            Gets or sets a value indicating whether the user must update their password.\n            </summary>\n            <remarks>\n            Required.\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.MustUpdatePassword\">\n            <summary>\n            Gets or sets a value indicating whether the user must update their password.\n            </summary>\n            <remarks>\n            Required.\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Data.Entities.User.MustUpdatePassword\">\n            <summary>\n            Gets or sets a value indicating whether the user must update their password.\n            </summary>\n            <remarks>\n            Required.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 3768,
                  "startColumn": 11,
                  "endLine": 3768,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:Jellyfin.Data.Enums.SortOrder.Descending\">\n            <summary>\n            Sort in decreasing order.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Data.Enums.SubtitlePlaybackMode\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:Jellyfin.Data.Enums.SortOrder.Descending\">\n            <summary>\n            Sort in decreasing order.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Data.Enums.SubtitlePlaybackMode\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:Jellyfin.Data.Enums.SortOrder.Descending\">\n            <summary>\n            Sort in decreasing order.\n            </summary>\n        </member>\n        <member name=\"T:Jellyfin.Data.Enums.SubtitlePlaybackMode\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 3763,
                  "startColumn": 11,
                  "endLine": 3763,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:Jellyfin.Data.Enums.SortOrder.Ascending\">\n            <summary>\n            Sort in increasing order.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.SortOrder.Descending\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:Jellyfin.Data.Enums.SortOrder.Ascending\">\n            <summary>\n            Sort in increasing order.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.SortOrder.Descending\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:Jellyfin.Data.Enums.SortOrder.Ascending\">\n            <summary>\n            Sort in increasing order.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.SortOrder.Descending\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 3166,
                  "startColumn": 15,
                  "endLine": 3166,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.SortName\">\n            <summary>\n            The sort name.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.Name\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.SortName\">\n            <summary>\n            The sort name.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.Name\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.SortName\">\n            <summary>\n            The sort name.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.Name\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 3116,
                  "startColumn": 19,
                  "endLine": 3116,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.Default\">\n            <summary>\n            Default sort order.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.AiredEpisodeOrder\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.Default\">\n            <summary>\n            Default sort order.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.AiredEpisodeOrder\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.Default\">\n            <summary>\n            Default sort order.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.AiredEpisodeOrder\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 3111,
                  "startColumn": 27,
                  "endLine": 3111,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Data.Enums.ItemSortBy\">\n            <summary>\n            These represent sort orders.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.Default\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Data.Enums.ItemSortBy\">\n            <summary>\n            These represent sort orders.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.Default\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Data.Enums.ItemSortBy\">\n            <summary>\n            These represent sort orders.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.ItemSortBy.Default\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 3036,
                  "startColumn": 67,
                  "endLine": 3036,
                  "endColumn": 75,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Data.Enums.HomeSectionType\">\n            <summary>\n            An enum representing the different options for the home screen sections.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.HomeSectionType.None\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Data.Enums.HomeSectionType\">\n            <summary>\n            An enum representing the different options for the home screen sections.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.HomeSectionType.None\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Data.Enums.HomeSectionType\">\n            <summary>\n            An enum representing the different options for the home screen sections.\n            </summary>\n        </member>\n        <member name=\"F:Jellyfin.Data.Enums.HomeSectionType.None\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 2548,
                  "startColumn": 47,
                  "endLine": 2548,
                  "endColumn": 53,
                  "snippet": {
                    "text": "            <summary>\n            Checks whether this user is currently allowed to use the server.\n            </summary>\n            <returns><c>True</c> if the current time is within an access schedule, or there are no access schedules.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Data.Entities.User.IsFolderGrouped(System.Guid)\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Checks whether this user is currently allowed to use the server.\n            </summary>\n            <returns><c>True</c> if the current time is within an access schedule, or there are no access schedules.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Data.Entities.User.IsFolderGrouped(System.Guid)\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Checks whether this user is currently allowed to use the server.\n            </summary>\n            <returns><c>True</c> if the current time is within an access schedule, or there are no access schedules.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Data.Entities.User.IsFolderGrouped(System.Guid)\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 1827,
                  "startColumn": 28,
                  "endLine": 1827,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.Libraries.Series.AirsTime\">\n            <summary>\n            Gets or sets the time the show airs, ignore the date portion.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.Libraries.Series.FirstAired\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.Libraries.Series.AirsTime\">\n            <summary>\n            Gets or sets the time the show airs, ignore the date portion.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.Libraries.Series.FirstAired\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Data.Entities.Libraries.Series.AirsTime\">\n            <summary>\n            Gets or sets the time the show airs, ignore the date portion.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.Libraries.Series.FirstAired\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 1722,
                  "startColumn": 79,
                  "endLine": 1722,
                  "endColumn": 84,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Data.Entities.Libraries.Release\">\n            <summary>\n            An entity representing a release for a library item, eg. Director's cut vs. standard.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Data.Entities.Libraries.Release.#ctor(System.String)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Data.Entities.Libraries.Release\">\n            <summary>\n            An entity representing a release for a library item, eg. Director's cut vs. standard.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Data.Entities.Libraries.Release.#ctor(System.String)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Data.Entities.Libraries.Release\">\n            <summary>\n            An entity representing a release for a library item, eg. Director's cut vs. standard.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Data.Entities.Libraries.Release.#ctor(System.String)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 1037,
                  "startColumn": 28,
                  "endLine": 1037,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.Libraries.ItemMetadata.SortTitle\">\n            <summary>\n            Gets or sets the sort title.\n            </summary>\n            <remarks>\n            Max length = 1024.\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.Libraries.ItemMetadata.SortTitle\">\n            <summary>\n            Gets or sets the sort title.\n            </summary>\n            <remarks>\n            Max length = 1024.\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Data.Entities.Libraries.ItemMetadata.SortTitle\">\n            <summary>\n            Gets or sets the sort title.\n            </summary>\n            <remarks>\n            Max length = 1024.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 662,
                  "startColumn": 45,
                  "endLine": 662,
                  "endColumn": 51,
                  "snippet": {
                    "text": "            Initializes a new instance of the <see cref=\"T:Jellyfin.Data.Entities.Libraries.Chapter\"/> class.\n            </summary>\n            <param name=\"language\">ISO-639-3 3-character language codes.</param>\n            <param name=\"startTime\">The start time for this chapter.</param>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.Libraries.Chapter.Id\">\n            <summary>\n",
                    "rendered": {
                      "text": "            Initializes a new instance of the <see cref=\"T:Jellyfin.Data.Entities.Libraries.Chapter\"/> class.\n            </summary>\n            <param name=\"language\">ISO-639-3 3-character language codes.</param>\n            <param name=\"startTime\">The start time for this chapter.</param>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.Libraries.Chapter.Id\">\n            <summary>\n",
                      "markdown": "`            Initializes a new instance of the <see cref=\"T:Jellyfin.Data.Entities.Libraries.Chapter\"/> class.\n            </summary>\n            <param name=\"language\">ISO-639-3 3-character language codes.</param>\n            <param name=\"startTime\">The start time for this chapter.</param>\n        </member>\n        <member name=\"P:Jellyfin.Data.Entities.Libraries.Chapter.Id\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 560,
                  "startColumn": 28,
                  "endLine": 560,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.ItemDisplayPreferences.SortOrder\">\n            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <remarks>\n            Required.\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.ItemDisplayPreferences.SortOrder\">\n            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <remarks>\n            Required.\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Data.Entities.ItemDisplayPreferences.SortOrder\">\n            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <remarks>\n            Required.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 38,
                  "endLine": 313,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.DisplayPreferences.SkipBackwardLength\">\n            <summary>\n            Gets or sets the length of time to skip backwards, in milliseconds.\n            </summary>\n            <remarks>\n            Required.\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.DisplayPreferences.SkipBackwardLength\">\n            <summary>\n            Gets or sets the length of time to skip backwards, in milliseconds.\n            </summary>\n            <remarks>\n            Required.\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Data.Entities.DisplayPreferences.SkipBackwardLength\">\n            <summary>\n            Gets or sets the length of time to skip backwards, in milliseconds.\n            </summary>\n            <remarks>\n            Required.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Data.xml"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 38,
                  "endLine": 305,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.DisplayPreferences.SkipForwardLength\">\n            <summary>\n            Gets or sets the length of time to skip forwards, in milliseconds.\n            </summary>\n            <remarks>\n            Required.\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Data.Entities.DisplayPreferences.SkipForwardLength\">\n            <summary>\n            Gets or sets the length of time to skip forwards, in milliseconds.\n            </summary>\n            <remarks>\n            Required.\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Data.Entities.DisplayPreferences.SkipForwardLength\">\n            <summary>\n            Gets or sets the length of time to skip forwards, in milliseconds.\n            </summary>\n            <remarks>\n            Required.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 8675,
                  "startColumn": 55,
                  "endLine": 8675,
                  "endColumn": 63,
                  "snippet": {
                    "text": "            </summary>\n            <value>The pin file.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Users.ForgotPasswordResult.PinExpirationDate\">\n            <summary>\n            Gets or sets the pin expiration date.\n            </summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <value>The pin file.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Users.ForgotPasswordResult.PinExpirationDate\">\n            <summary>\n            Gets or sets the pin expiration date.\n            </summary>\n",
                      "markdown": "`            </summary>\n            <value>The pin file.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Users.ForgotPasswordResult.PinExpirationDate\">\n            <summary>\n            Gets or sets the pin expiration date.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 8669,
                  "startColumn": 55,
                  "endLine": 8669,
                  "endColumn": 63,
                  "snippet": {
                    "text": "            </summary>\n            <value>The action.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Users.ForgotPasswordResult.PinFile\">\n            <summary>\n            Gets or sets the pin file.\n            </summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <value>The action.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Users.ForgotPasswordResult.PinFile\">\n            <summary>\n            Gets or sets the pin file.\n            </summary>\n",
                      "markdown": "`            </summary>\n            <value>The action.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Users.ForgotPasswordResult.PinFile\">\n            <summary>\n            Gets or sets the pin file.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 8663,
                  "startColumn": 55,
                  "endLine": 8663,
                  "endColumn": 63,
                  "snippet": {
                    "text": "            Gets or sets the repository url.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Users.ForgotPasswordResult.Action\">\n            <summary>\n            Gets or sets the action.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets the repository url.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Users.ForgotPasswordResult.Action\">\n            <summary>\n            Gets or sets the action.\n            </summary>\n",
                      "markdown": "`            Gets or sets the repository url.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Users.ForgotPasswordResult.Action\">\n            <summary>\n            Gets or sets the action.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 2757,
                  "startColumn": 68,
                  "endLine": 2757,
                  "endColumn": 76,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets a value indicating whether this instance has configured easy password.\n            </summary>\n            <value><c>true</c> if this instance has configured easy password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.EnableAutoLogin\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets a value indicating whether this instance has configured easy password.\n            </summary>\n            <value><c>true</c> if this instance has configured easy password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.EnableAutoLogin\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets a value indicating whether this instance has configured easy password.\n            </summary>\n            <value><c>true</c> if this instance has configured easy password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.EnableAutoLogin\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 2755,
                  "startColumn": 86,
                  "endLine": 2755,
                  "endColumn": 94,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredEasyPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has configured easy password.\n            </summary>\n            <value><c>true</c> if this instance has configured easy password; otherwise, <c>false</c>.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredEasyPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has configured easy password.\n            </summary>\n            <value><c>true</c> if this instance has configured easy password; otherwise, <c>false</c>.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredEasyPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has configured easy password.\n            </summary>\n            <value><c>true</c> if this instance has configured easy password; otherwise, <c>false</c>.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 2753,
                  "startColumn": 72,
                  "endLine": 2753,
                  "endColumn": 80,
                  "snippet": {
                    "text": "            </summary>\n            <value><c>true</c> if this instance has configured password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredEasyPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has configured easy password.\n            </summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <value><c>true</c> if this instance has configured password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredEasyPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has configured easy password.\n            </summary>\n",
                      "markdown": "`            </summary>\n            <value><c>true</c> if this instance has configured password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredEasyPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has configured easy password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 2751,
                  "startColumn": 63,
                  "endLine": 2751,
                  "endColumn": 71,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets a value indicating whether this instance has configured password.\n            </summary>\n            <value><c>true</c> if this instance has configured password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredEasyPassword\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets a value indicating whether this instance has configured password.\n            </summary>\n            <value><c>true</c> if this instance has configured password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredEasyPassword\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets a value indicating whether this instance has configured password.\n            </summary>\n            <value><c>true</c> if this instance has configured password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredEasyPassword\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 2749,
                  "startColumn": 81,
                  "endLine": 2749,
                  "endColumn": 89,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has configured password.\n            </summary>\n            <value><c>true</c> if this instance has configured password; otherwise, <c>false</c>.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has configured password.\n            </summary>\n            <value><c>true</c> if this instance has configured password; otherwise, <c>false</c>.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has configured password.\n            </summary>\n            <value><c>true</c> if this instance has configured password; otherwise, <c>false</c>.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 2747,
                  "startColumn": 68,
                  "endLine": 2747,
                  "endColumn": 76,
                  "snippet": {
                    "text": "            </summary>\n            <value><c>true</c> if this instance has password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has configured password.\n            </summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <value><c>true</c> if this instance has password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has configured password.\n            </summary>\n",
                      "markdown": "`            </summary>\n            <value><c>true</c> if this instance has password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has configured password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 2745,
                  "startColumn": 52,
                  "endLine": 2745,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets a value indicating whether this instance has password.\n            </summary>\n            <value><c>true</c> if this instance has password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredPassword\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets a value indicating whether this instance has password.\n            </summary>\n            <value><c>true</c> if this instance has password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredPassword\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets a value indicating whether this instance has password.\n            </summary>\n            <value><c>true</c> if this instance has password; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasConfiguredPassword\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 2743,
                  "startColumn": 70,
                  "endLine": 2743,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has password.\n            </summary>\n            <value><c>true</c> if this instance has password; otherwise, <c>false</c>.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has password.\n            </summary>\n            <value><c>true</c> if this instance has password; otherwise, <c>false</c>.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has password.\n            </summary>\n            <value><c>true</c> if this instance has password; otherwise, <c>false</c>.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 2741,
                  "startColumn": 58,
                  "endLine": 2741,
                  "endColumn": 66,
                  "snippet": {
                    "text": "            </summary>\n            <value>The primary image tag.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has password.\n            </summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <value>The primary image tag.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has password.\n            </summary>\n",
                      "markdown": "`            </summary>\n            <value>The primary image tag.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.UserDto.HasPassword\">\n            <summary>\n            Gets or sets a value indicating whether this instance has password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 993,
                  "startColumn": 56,
                  "endLine": 993,
                  "endColumn": 64,
                  "snippet": {
                    "text": "            </summary>\n            <value>Return the hashed password.</value>\n        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.PasswordHash.ToString\">\n            <inheritdoc />\n        </member>\n        <member name=\"P:MediaBrowser.Model.Devices.DeviceInfo.AccessToken\">\n",
                    "rendered": {
                      "text": "            </summary>\n            <value>Return the hashed password.</value>\n        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.PasswordHash.ToString\">\n            <inheritdoc />\n        </member>\n        <member name=\"P:MediaBrowser.Model.Devices.DeviceInfo.AccessToken\">\n",
                      "markdown": "`            </summary>\n            <value>Return the hashed password.</value>\n        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.PasswordHash.ToString\">\n            <inheritdoc />\n        </member>\n        <member name=\"P:MediaBrowser.Model.Devices.DeviceInfo.AccessToken\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 991,
                  "startColumn": 37,
                  "endLine": 991,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            <summary>\n            Gets the hashed password.\n            </summary>\n            <value>Return the hashed password.</value>\n        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.PasswordHash.ToString\">\n            <inheritdoc />\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets the hashed password.\n            </summary>\n            <value>Return the hashed password.</value>\n        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.PasswordHash.ToString\">\n            <inheritdoc />\n",
                      "markdown": "`            <summary>\n            Gets the hashed password.\n            </summary>\n            <value>Return the hashed password.</value>\n        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.PasswordHash.ToString\">\n            <inheritdoc />\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 989,
                  "startColumn": 28,
                  "endLine": 989,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Hash\">\n            <summary>\n            Gets the hashed password.\n            </summary>\n            <value>Return the hashed password.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Hash\">\n            <summary>\n            Gets the hashed password.\n            </summary>\n            <value>Return the hashed password.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Hash\">\n            <summary>\n            Gets the hashed password.\n            </summary>\n            <value>Return the hashed password.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 987,
                  "startColumn": 56,
                  "endLine": 987,
                  "endColumn": 64,
                  "snippet": {
                    "text": "            </summary>\n            <value>Returns the salt used for hashing the password.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Hash\">\n            <summary>\n            Gets the hashed password.\n            </summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <value>Returns the salt used for hashing the password.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Hash\">\n            <summary>\n            Gets the hashed password.\n            </summary>\n",
                      "markdown": "`            </summary>\n            <value>Returns the salt used for hashing the password.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Hash\">\n            <summary>\n            Gets the hashed password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 985,
                  "startColumn": 57,
                  "endLine": 985,
                  "endColumn": 65,
                  "snippet": {
                    "text": "            <summary>\n            Gets the salt used for hashing the password.\n            </summary>\n            <value>Returns the salt used for hashing the password.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Hash\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets the salt used for hashing the password.\n            </summary>\n            <value>Returns the salt used for hashing the password.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Hash\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets the salt used for hashing the password.\n            </summary>\n            <value>Returns the salt used for hashing the password.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Hash\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 983,
                  "startColumn": 47,
                  "endLine": 983,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Salt\">\n            <summary>\n            Gets the salt used for hashing the password.\n            </summary>\n            <value>Returns the salt used for hashing the password.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Salt\">\n            <summary>\n            Gets the salt used for hashing the password.\n            </summary>\n            <value>Returns the salt used for hashing the password.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Salt\">\n            <summary>\n            Gets the salt used for hashing the password.\n            </summary>\n            <value>Returns the salt used for hashing the password.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 981,
                  "startColumn": 56,
                  "endLine": 981,
                  "endColumn": 64,
                  "snippet": {
                    "text": "            Gets the additional parameters used by the hash function.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Salt\">\n            <summary>\n            Gets the salt used for hashing the password.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets the additional parameters used by the hash function.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Salt\">\n            <summary>\n            Gets the salt used for hashing the password.\n            </summary>\n",
                      "markdown": "`            Gets the additional parameters used by the hash function.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Salt\">\n            <summary>\n            Gets the salt used for hashing the password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 976,
                  "startColumn": 56,
                  "endLine": 976,
                  "endColumn": 64,
                  "snippet": {
                    "text": "            </summary>\n            <value>Returns the symbolic name for the function used.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Parameters\">\n            <summary>\n            Gets the additional parameters used by the hash function.\n            </summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <value>Returns the symbolic name for the function used.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Parameters\">\n            <summary>\n            Gets the additional parameters used by the hash function.\n            </summary>\n",
                      "markdown": "`            </summary>\n            <value>Returns the symbolic name for the function used.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Parameters\">\n            <summary>\n            Gets the additional parameters used by the hash function.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 970,
                  "startColumn": 56,
                  "endLine": 970,
                  "endColumn": 64,
                  "snippet": {
                    "text": "            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Id\">\n            <summary>\n            Gets the symbolic name for the function used.\n            </summary>\n",
                    "rendered": {
                      "text": "            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Id\">\n            <summary>\n            Gets the symbolic name for the function used.\n            </summary>\n",
                      "markdown": "`            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Id\">\n            <summary>\n            Gets the symbolic name for the function used.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 968,
                  "startColumn": 68,
                  "endLine": 968,
                  "endColumn": 76,
                  "snippet": {
                    "text": "            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Id\">\n            <summary>\n",
                    "rendered": {
                      "text": "            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Id\">\n            <summary>\n",
                      "markdown": "`            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Id\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 967,
                  "startColumn": 39,
                  "endLine": 967,
                  "endColumn": 47,
                  "snippet": {
                    "text": "            <summary>\n            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Id\">\n",
                    "rendered": {
                      "text": "            <summary>\n            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Id\">\n",
                      "markdown": "`            <summary>\n            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Id\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 967,
                  "startColumn": 25,
                  "endLine": 967,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            <summary>\n            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Id\">\n",
                    "rendered": {
                      "text": "            <summary>\n            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Id\">\n",
                      "markdown": "`            <summary>\n            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Cryptography.PasswordHash.Id\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 965,
                  "startColumn": 71,
                  "endLine": 965,
                  "endColumn": 79,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.ICryptoProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n            <summary>\n            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.ICryptoProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n            <summary>\n            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.ICryptoProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n            <summary>\n            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n            <param name=\"password\">The password that will be hashed.</param>\n            <returns>A <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance with the hash method, hash, salt and number of iterations.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 963,
                  "startColumn": 78,
                  "endLine": 963,
                  "endColumn": 86,
                  "snippet": {
                    "text": "            The default amount of iterations for hashing passwords.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.ICryptoProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n            <summary>\n            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n",
                    "rendered": {
                      "text": "            The default amount of iterations for hashing passwords.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.ICryptoProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n            <summary>\n            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n",
                      "markdown": "`            The default amount of iterations for hashing passwords.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.ICryptoProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n            <summary>\n            Creates a new <see cref=\"T:MediaBrowser.Model.Cryptography.PasswordHash\" /> instance.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 960,
                  "startColumn": 57,
                  "endLine": 960,
                  "endColumn": 65,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:MediaBrowser.Model.Cryptography.Constants.DefaultIterations\">\n            <summary>\n            The default amount of iterations for hashing passwords.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.ICryptoProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:MediaBrowser.Model.Cryptography.Constants.DefaultIterations\">\n            <summary>\n            The default amount of iterations for hashing passwords.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.ICryptoProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:MediaBrowser.Model.Cryptography.Constants.DefaultIterations\">\n            <summary>\n            The default amount of iterations for hashing passwords.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Model.Cryptography.ICryptoProvider.CreatePasswordHash(System.ReadOnlySpan{System.Char})\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 8025,
                  "startColumn": 51,
                  "endLine": 8025,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets a value indicating whether this instance has update available.\n            </summary>\n            <value><c>true</c> if this instance has update available; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.System.WakeOnLanInfo\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets a value indicating whether this instance has update available.\n            </summary>\n            <value><c>true</c> if this instance has update available; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.System.WakeOnLanInfo\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets a value indicating whether this instance has update available.\n            </summary>\n            <value><c>true</c> if this instance has update available; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.System.WakeOnLanInfo\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 8023,
                  "startColumn": 69,
                  "endLine": 8023,
                  "endColumn": 77,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.System.SystemInfo.HasUpdateAvailable\">\n            <summary>\n            Gets or sets a value indicating whether this instance has update available.\n            </summary>\n            <value><c>true</c> if this instance has update available; otherwise, <c>false</c>.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.System.SystemInfo.HasUpdateAvailable\">\n            <summary>\n            Gets or sets a value indicating whether this instance has update available.\n            </summary>\n            <value><c>true</c> if this instance has update available; otherwise, <c>false</c>.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.System.SystemInfo.HasUpdateAvailable\">\n            <summary>\n            Gets or sets a value indicating whether this instance has update available.\n            </summary>\n            <value><c>true</c> if this instance has update available; otherwise, <c>false</c>.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7387,
                  "startColumn": 22,
                  "endLine": 7387,
                  "endColumn": 30,
                  "snippet": {
                    "text": "            <summary>\n            Gets the update data.\n            </summary>\n            <value>The update data.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.SyncPlay.GroupUpdateType\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets the update data.\n            </summary>\n            <value>The update data.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.SyncPlay.GroupUpdateType\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets the update data.\n            </summary>\n            <value>The update data.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.SyncPlay.GroupUpdateType\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7385,
                  "startColumn": 20,
                  "endLine": 7385,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.GroupUpdate`1.Data\">\n            <summary>\n            Gets the update data.\n            </summary>\n            <value>The update data.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.GroupUpdate`1.Data\">\n            <summary>\n            Gets the update data.\n            </summary>\n            <value>The update data.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.GroupUpdate`1.Data\">\n            <summary>\n            Gets the update data.\n            </summary>\n            <value>The update data.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7381,
                  "startColumn": 34,
                  "endLine": 7381,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"groupId\">The group identifier.</param>\n            <param name=\"type\">The update type.</param>\n            <param name=\"data\">The update data.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.GroupUpdate`1.Data\">\n            <summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"groupId\">The group identifier.</param>\n            <param name=\"type\">The update type.</param>\n            <param name=\"data\">The update data.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.GroupUpdate`1.Data\">\n            <summary>\n",
                      "markdown": "`            </summary>\n            <param name=\"groupId\">The group identifier.</param>\n            <param name=\"type\">The update type.</param>\n            <param name=\"data\">The update data.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.GroupUpdate`1.Data\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7380,
                  "startColumn": 34,
                  "endLine": 7380,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.SyncPlay.GroupUpdate`1\"/> class.\n            </summary>\n            <param name=\"groupId\">The group identifier.</param>\n            <param name=\"type\">The update type.</param>\n            <param name=\"data\">The update data.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.GroupUpdate`1.Data\">\n",
                    "rendered": {
                      "text": "            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.SyncPlay.GroupUpdate`1\"/> class.\n            </summary>\n            <param name=\"groupId\">The group identifier.</param>\n            <param name=\"type\">The update type.</param>\n            <param name=\"data\">The update data.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.GroupUpdate`1.Data\">\n",
                      "markdown": "`            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.SyncPlay.GroupUpdate`1\"/> class.\n            </summary>\n            <param name=\"groupId\">The group identifier.</param>\n            <param name=\"type\">The update type.</param>\n            <param name=\"data\">The update data.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.GroupUpdate`1.Data\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7367,
                  "startColumn": 22,
                  "endLine": 7367,
                  "endColumn": 30,
                  "snippet": {
                    "text": "            <summary>\n            Gets the update type.\n            </summary>\n            <value>The update type.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.SyncPlay.GroupUpdate`1\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets the update type.\n            </summary>\n            <value>The update type.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.SyncPlay.GroupUpdate`1\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets the update type.\n            </summary>\n            <value>The update type.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.SyncPlay.GroupUpdate`1\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7365,
                  "startColumn": 20,
                  "endLine": 7365,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.GroupUpdate.Type\">\n            <summary>\n            Gets the update type.\n            </summary>\n            <value>The update type.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.GroupUpdate.Type\">\n            <summary>\n            Gets the update type.\n            </summary>\n            <value>The update type.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.GroupUpdate.Type\">\n            <summary>\n            Gets the update type.\n            </summary>\n            <value>The update type.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7348,
                  "startColumn": 17,
                  "endLine": 7348,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Model.SyncPlay.GroupUpdate\">\n            <summary>\n            Group update without data.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Model.SyncPlay.GroupUpdate.#ctor(System.Guid)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Model.SyncPlay.GroupUpdate\">\n            <summary>\n            Group update without data.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Model.SyncPlay.GroupUpdate.#ctor(System.Guid)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Model.SyncPlay.GroupUpdate\">\n            <summary>\n            Group update without data.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Model.SyncPlay.GroupUpdate.#ctor(System.Guid)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7254,
                  "startColumn": 24,
                  "endLine": 7254,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:MediaBrowser.Model.SyncPlay.GroupQueueMode.Queue\">\n            <summary>\n            Insert items at the end of the queue.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.SyncPlay.GroupQueueMode.QueueNext\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:MediaBrowser.Model.SyncPlay.GroupQueueMode.Queue\">\n            <summary>\n            Insert items at the end of the queue.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.SyncPlay.GroupQueueMode.QueueNext\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:MediaBrowser.Model.SyncPlay.GroupQueueMode.Queue\">\n            <summary>\n            Insert items at the end of the queue.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.SyncPlay.GroupQueueMode.QueueNext\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 5970,
                  "startColumn": 19,
                  "endLine": 5970,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Model.Querying.ItemFields\">\n            <summary>\n            Used to control the data that gets attached to DtoBaseItems.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.AirTime\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Model.Querying.ItemFields\">\n            <summary>\n            Used to control the data that gets attached to DtoBaseItems.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.AirTime\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Model.Querying.ItemFields\">\n            <summary>\n            Used to control the data that gets attached to DtoBaseItems.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.AirTime\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 5671,
                  "startColumn": 66,
                  "endLine": 5671,
                  "endColumn": 70,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:MediaBrowser.Model.Plugins.PluginStatus.Deleted\">\n            <summary>\n            An attempt to remove this plugin from disk will happen at every restart.\n            It will not be loaded, if unable to do so.\n            </summary>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:MediaBrowser.Model.Plugins.PluginStatus.Deleted\">\n            <summary>\n            An attempt to remove this plugin from disk will happen at every restart.\n            It will not be loaded, if unable to do so.\n            </summary>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"F:MediaBrowser.Model.Plugins.PluginStatus.Deleted\">\n            <summary>\n            An attempt to remove this plugin from disk will happen at every restart.\n            It will not be loaded, if unable to do so.\n            </summary>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 5518,
                  "startColumn": 27,
                  "endLine": 5518,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Model.Playlists.PlaylistUserUpdateRequest\">\n            <summary>\n            A playlist user update request.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Playlists.PlaylistUserUpdateRequest.Id\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Model.Playlists.PlaylistUserUpdateRequest\">\n            <summary>\n            A playlist user update request.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Playlists.PlaylistUserUpdateRequest.Id\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Model.Playlists.PlaylistUserUpdateRequest\">\n            <summary>\n            A playlist user update request.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Playlists.PlaylistUserUpdateRequest.Id\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 5483,
                  "startColumn": 22,
                  "endLine": 5483,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Model.Playlists.PlaylistUpdateRequest\">\n            <summary>\n            A playlist update request.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Playlists.PlaylistUpdateRequest.Id\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Model.Playlists.PlaylistUpdateRequest\">\n            <summary>\n            A playlist update request.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Playlists.PlaylistUpdateRequest.Id\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Model.Playlists.PlaylistUpdateRequest\">\n            <summary>\n            A playlist update request.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Playlists.PlaylistUpdateRequest.Id\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4803,
                  "startColumn": 51,
                  "endLine": 4803,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets a value indicating whether this instance has update available.\n            </summary>\n            <value><c>true</c> if this instance has update available; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.LiveTvServiceInfo.IsVisible\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets a value indicating whether this instance has update available.\n            </summary>\n            <value><c>true</c> if this instance has update available; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.LiveTvServiceInfo.IsVisible\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets a value indicating whether this instance has update available.\n            </summary>\n            <value><c>true</c> if this instance has update available; otherwise, <c>false</c>.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.LiveTvServiceInfo.IsVisible\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4801,
                  "startColumn": 69,
                  "endLine": 4801,
                  "endColumn": 77,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.LiveTvServiceInfo.HasUpdateAvailable\">\n            <summary>\n            Gets or sets a value indicating whether this instance has update available.\n            </summary>\n            <value><c>true</c> if this instance has update available; otherwise, <c>false</c>.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.LiveTvServiceInfo.HasUpdateAvailable\">\n            <summary>\n            Gets or sets a value indicating whether this instance has update available.\n            </summary>\n            <value><c>true</c> if this instance has update available; otherwise, <c>false</c>.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.LiveTvServiceInfo.HasUpdateAvailable\">\n            <summary>\n            Gets or sets a value indicating whether this instance has update available.\n            </summary>\n            <value><c>true</c> if this instance has update available; otherwise, <c>false</c>.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 3894,
                  "startColumn": 15,
                  "endLine": 3894,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:MediaBrowser.Model.Entities.UserDataSaveReason.UpdateUserRating\">\n            <summary>\n            The update user rating.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.Entities.UserDataSaveReason.Import\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:MediaBrowser.Model.Entities.UserDataSaveReason.UpdateUserRating\">\n            <summary>\n            The update user rating.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.Entities.UserDataSaveReason.Import\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:MediaBrowser.Model.Entities.UserDataSaveReason.UpdateUserRating\">\n            <summary>\n            The update user rating.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.Entities.UserDataSaveReason.Import\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 758,
                  "startColumn": 30,
                  "endLine": 758,
                  "endColumn": 38,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the duration in seconds that we will wait after a library updated event before executing the library changed notification.\n            </summary>\n            <value>The library update duration.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.ImageSavingConvention\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the duration in seconds that we will wait after a library updated event before executing the library changed notification.\n            </summary>\n            <value>The library update duration.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.ImageSavingConvention\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the duration in seconds that we will wait after a library updated event before executing the library changed notification.\n            </summary>\n            <value>The library update duration.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.ImageSavingConvention\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 84,
                  "endLine": 184,
                  "endColumn": 88,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.MaxPageSize\">\n            <summary>\n            Gets or sets the maximum number of records the channel allows retrieving at a time.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.AutoRefreshLevels\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.MaxPageSize\">\n            <summary>\n            Gets or sets the maximum number of records the channel allows retrieving at a time.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.AutoRefreshLevels\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.MaxPageSize\">\n            <summary>\n            Gets or sets the maximum number of records the channel allows retrieving at a time.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.AutoRefreshLevels\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 8459,
                  "startColumn": 22,
                  "endLine": 8459,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the time of day.\n            </summary>\n            <value>The time of day.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskTriggerInfo.IntervalTicks\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the time of day.\n            </summary>\n            <value>The time of day.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskTriggerInfo.IntervalTicks\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the time of day.\n            </summary>\n            <value>The time of day.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskTriggerInfo.IntervalTicks\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 8457,
                  "startColumn": 28,
                  "endLine": 8457,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskTriggerInfo.TimeOfDayTicks\">\n            <summary>\n            Gets or sets the time of day.\n            </summary>\n            <value>The time of day.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskTriggerInfo.TimeOfDayTicks\">\n            <summary>\n            Gets or sets the time of day.\n            </summary>\n            <value>The time of day.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskTriggerInfo.TimeOfDayTicks\">\n            <summary>\n            Gets or sets the time of day.\n            </summary>\n            <value>The time of day.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 8386,
                  "startColumn": 26,
                  "endLine": 8386,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the end time UTC.\n            </summary>\n            <value>The end time UTC.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskResult.Status\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the end time UTC.\n            </summary>\n            <value>The end time UTC.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskResult.Status\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the end time UTC.\n            </summary>\n            <value>The end time UTC.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskResult.Status\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 8384,
                  "startColumn": 32,
                  "endLine": 8384,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskResult.EndTimeUtc\">\n            <summary>\n            Gets or sets the end time UTC.\n            </summary>\n            <value>The end time UTC.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskResult.EndTimeUtc\">\n            <summary>\n            Gets or sets the end time UTC.\n            </summary>\n            <value>The end time UTC.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskResult.EndTimeUtc\">\n            <summary>\n            Gets or sets the end time UTC.\n            </summary>\n            <value>The end time UTC.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 8380,
                  "startColumn": 28,
                  "endLine": 8380,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the start time UTC.\n            </summary>\n            <value>The start time UTC.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskResult.EndTimeUtc\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the start time UTC.\n            </summary>\n            <value>The start time UTC.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskResult.EndTimeUtc\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the start time UTC.\n            </summary>\n            <value>The start time UTC.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskResult.EndTimeUtc\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 8378,
                  "startColumn": 34,
                  "endLine": 8378,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskResult.StartTimeUtc\">\n            <summary>\n            Gets or sets the start time UTC.\n            </summary>\n            <value>The start time UTC.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskResult.StartTimeUtc\">\n            <summary>\n            Gets or sets the start time UTC.\n            </summary>\n            <value>The start time UTC.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Tasks.TaskResult.StartTimeUtc\">\n            <summary>\n            Gets or sets the start time UTC.\n            </summary>\n            <value>The start time UTC.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7837,
                  "startColumn": 26,
                  "endLine": 7837,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            <summary>\n            Gets the UTC time when response has been sent.\n            </summary>\n            <value>The UTC time when response has been sent.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.System.CastReceiverApplication\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets the UTC time when response has been sent.\n            </summary>\n            <value>The UTC time when response has been sent.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.System.CastReceiverApplication\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets the UTC time when response has been sent.\n            </summary>\n            <value>The UTC time when response has been sent.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.System.CastReceiverApplication\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7835,
                  "startColumn": 24,
                  "endLine": 7835,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.ResponseTransmissionTime\">\n            <summary>\n            Gets the UTC time when response has been sent.\n            </summary>\n            <value>The UTC time when response has been sent.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.ResponseTransmissionTime\">\n            <summary>\n            Gets the UTC time when response has been sent.\n            </summary>\n            <value>The UTC time when response has been sent.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.ResponseTransmissionTime\">\n            <summary>\n            Gets the UTC time when response has been sent.\n            </summary>\n            <value>The UTC time when response has been sent.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7831,
                  "startColumn": 26,
                  "endLine": 7831,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            <summary>\n            Gets the UTC time when request has been received.\n            </summary>\n            <value>The UTC time when request has been received.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.ResponseTransmissionTime\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets the UTC time when request has been received.\n            </summary>\n            <value>The UTC time when request has been received.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.ResponseTransmissionTime\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets the UTC time when request has been received.\n            </summary>\n            <value>The UTC time when request has been received.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.ResponseTransmissionTime\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7829,
                  "startColumn": 24,
                  "endLine": 7829,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.RequestReceptionTime\">\n            <summary>\n            Gets the UTC time when request has been received.\n            </summary>\n            <value>The UTC time when request has been received.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.RequestReceptionTime\">\n            <summary>\n            Gets the UTC time when request has been received.\n            </summary>\n            <value>The UTC time when request has been received.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.RequestReceptionTime\">\n            <summary>\n            Gets the UTC time when request has been received.\n            </summary>\n            <value>The UTC time when request has been received.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7825,
                  "startColumn": 58,
                  "endLine": 7825,
                  "endColumn": 64,
                  "snippet": {
                    "text": "            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.SyncPlay.UtcTimeResponse\"/> class.\n            </summary>\n            <param name=\"requestReceptionTime\">The UTC time when request has been received.</param>\n            <param name=\"responseTransmissionTime\">The UTC time when response has been sent.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.RequestReceptionTime\">\n            <summary>\n",
                    "rendered": {
                      "text": "            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.SyncPlay.UtcTimeResponse\"/> class.\n            </summary>\n            <param name=\"requestReceptionTime\">The UTC time when request has been received.</param>\n            <param name=\"responseTransmissionTime\">The UTC time when response has been sent.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.RequestReceptionTime\">\n            <summary>\n",
                      "markdown": "`            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.SyncPlay.UtcTimeResponse\"/> class.\n            </summary>\n            <param name=\"requestReceptionTime\">The UTC time when request has been received.</param>\n            <param name=\"responseTransmissionTime\">The UTC time when response has been sent.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.RequestReceptionTime\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7824,
                  "startColumn": 54,
                  "endLine": 7824,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            <summary>\n            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.SyncPlay.UtcTimeResponse\"/> class.\n            </summary>\n            <param name=\"requestReceptionTime\">The UTC time when request has been received.</param>\n            <param name=\"responseTransmissionTime\">The UTC time when response has been sent.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.RequestReceptionTime\">\n",
                    "rendered": {
                      "text": "            <summary>\n            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.SyncPlay.UtcTimeResponse\"/> class.\n            </summary>\n            <param name=\"requestReceptionTime\">The UTC time when request has been received.</param>\n            <param name=\"responseTransmissionTime\">The UTC time when response has been sent.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.RequestReceptionTime\">\n",
                      "markdown": "`            <summary>\n            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.SyncPlay.UtcTimeResponse\"/> class.\n            </summary>\n            <param name=\"requestReceptionTime\">The UTC time when request has been received.</param>\n            <param name=\"responseTransmissionTime\">The UTC time when response has been sent.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.UtcTimeResponse.RequestReceptionTime\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7740,
                  "startColumn": 26,
                  "endLine": 7740,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            <summary>\n            Gets the UTC time when this command has been emitted.\n            </summary>\n            <value>The UTC time when this command has been emitted.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.SyncPlay.SendCommandType\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets the UTC time when this command has been emitted.\n            </summary>\n            <value>The UTC time when this command has been emitted.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.SyncPlay.SendCommandType\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets the UTC time when this command has been emitted.\n            </summary>\n            <value>The UTC time when this command has been emitted.</value>\n        </member>\n        <member name=\"T:MediaBrowser.Model.SyncPlay.SendCommandType\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7738,
                  "startColumn": 24,
                  "endLine": 7738,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.SendCommand.EmittedAt\">\n            <summary>\n            Gets the UTC time when this command has been emitted.\n            </summary>\n            <value>The UTC time when this command has been emitted.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.SendCommand.EmittedAt\">\n            <summary>\n            Gets the UTC time when this command has been emitted.\n            </summary>\n            <value>The UTC time when this command has been emitted.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.SendCommand.EmittedAt\">\n            <summary>\n            Gets the UTC time when this command has been emitted.\n            </summary>\n            <value>The UTC time when this command has been emitted.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7722,
                  "startColumn": 26,
                  "endLine": 7722,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the UTC time when to execute the command.\n            </summary>\n            <value>The UTC time when to execute the command.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.SendCommand.PositionTicks\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the UTC time when to execute the command.\n            </summary>\n            <value>The UTC time when to execute the command.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.SendCommand.PositionTicks\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the UTC time when to execute the command.\n            </summary>\n            <value>The UTC time when to execute the command.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.SendCommand.PositionTicks\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7720,
                  "startColumn": 32,
                  "endLine": 7720,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.SendCommand.When\">\n            <summary>\n            Gets or sets the UTC time when to execute the command.\n            </summary>\n            <value>The UTC time when to execute the command.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.SendCommand.When\">\n            <summary>\n            Gets or sets the UTC time when to execute the command.\n            </summary>\n            <value>The UTC time when to execute the command.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.SendCommand.When\">\n            <summary>\n            Gets or sets the UTC time when to execute the command.\n            </summary>\n            <value>The UTC time when to execute the command.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7704,
                  "startColumn": 43,
                  "endLine": 7704,
                  "endColumn": 49,
                  "snippet": {
                    "text": "            <param name=\"when\">The UTC time when to execute the command.</param>\n            <param name=\"command\">The command.</param>\n            <param name=\"positionTicks\">The position ticks, for commands that require it.</param>\n            <param name=\"emittedAt\">The UTC time when this command has been emitted.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.SendCommand.GroupId\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <param name=\"when\">The UTC time when to execute the command.</param>\n            <param name=\"command\">The command.</param>\n            <param name=\"positionTicks\">The position ticks, for commands that require it.</param>\n            <param name=\"emittedAt\">The UTC time when this command has been emitted.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.SendCommand.GroupId\">\n            <summary>\n",
                      "markdown": "`            <param name=\"when\">The UTC time when to execute the command.</param>\n            <param name=\"command\">The command.</param>\n            <param name=\"positionTicks\">The position ticks, for commands that require it.</param>\n            <param name=\"emittedAt\">The UTC time when this command has been emitted.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.SendCommand.GroupId\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7701,
                  "startColumn": 38,
                  "endLine": 7701,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"groupId\">The group identifier.</param>\n            <param name=\"playlistItemId\">The playlist identifier of the playing item.</param>\n            <param name=\"when\">The UTC time when to execute the command.</param>\n            <param name=\"command\">The command.</param>\n            <param name=\"positionTicks\">The position ticks, for commands that require it.</param>\n            <param name=\"emittedAt\">The UTC time when this command has been emitted.</param>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"groupId\">The group identifier.</param>\n            <param name=\"playlistItemId\">The playlist identifier of the playing item.</param>\n            <param name=\"when\">The UTC time when to execute the command.</param>\n            <param name=\"command\">The command.</param>\n            <param name=\"positionTicks\">The position ticks, for commands that require it.</param>\n            <param name=\"emittedAt\">The UTC time when this command has been emitted.</param>\n",
                      "markdown": "`            </summary>\n            <param name=\"groupId\">The group identifier.</param>\n            <param name=\"playlistItemId\">The playlist identifier of the playing item.</param>\n            <param name=\"when\">The UTC time when to execute the command.</param>\n            <param name=\"command\">The command.</param>\n            <param name=\"positionTicks\">The position ticks, for commands that require it.</param>\n            <param name=\"emittedAt\">The UTC time when this command has been emitted.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7567,
                  "startColumn": 26,
                  "endLine": 7567,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            <summary>\n            Gets the UTC time of the last change to the playing queue.\n            </summary>\n            <value>The UTC time of the last change to the playing queue.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.PlayQueueUpdate.Playlist\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets the UTC time of the last change to the playing queue.\n            </summary>\n            <value>The UTC time of the last change to the playing queue.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.PlayQueueUpdate.Playlist\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets the UTC time of the last change to the playing queue.\n            </summary>\n            <value>The UTC time of the last change to the playing queue.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.PlayQueueUpdate.Playlist\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7565,
                  "startColumn": 24,
                  "endLine": 7565,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.PlayQueueUpdate.LastUpdate\">\n            <summary>\n            Gets the UTC time of the last change to the playing queue.\n            </summary>\n            <value>The UTC time of the last change to the playing queue.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.PlayQueueUpdate.LastUpdate\">\n            <summary>\n            Gets the UTC time of the last change to the playing queue.\n            </summary>\n            <value>The UTC time of the last change to the playing queue.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.SyncPlay.PlayQueueUpdate.LastUpdate\">\n            <summary>\n            Gets the UTC time of the last change to the playing queue.\n            </summary>\n            <value>The UTC time of the last change to the playing queue.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 7549,
                  "startColumn": 44,
                  "endLine": 7549,
                  "endColumn": 50,
                  "snippet": {
                    "text": "            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.SyncPlay.PlayQueueUpdate\"/> class.\n            </summary>\n            <param name=\"reason\">The reason for the update.</param>\n            <param name=\"lastUpdate\">The UTC time of the last change to the playing queue.</param>\n            <param name=\"playlist\">The playlist.</param>\n            <param name=\"playingItemIndex\">The playing item index in the playlist.</param>\n            <param name=\"startPositionTicks\">The start position ticks.</param>\n",
                    "rendered": {
                      "text": "            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.SyncPlay.PlayQueueUpdate\"/> class.\n            </summary>\n            <param name=\"reason\">The reason for the update.</param>\n            <param name=\"lastUpdate\">The UTC time of the last change to the playing queue.</param>\n            <param name=\"playlist\">The playlist.</param>\n            <param name=\"playingItemIndex\">The playing item index in the playlist.</param>\n            <param name=\"startPositionTicks\">The start position ticks.</param>\n",
                      "markdown": "`            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.SyncPlay.PlayQueueUpdate\"/> class.\n            </summary>\n            <param name=\"reason\">The reason for the update.</param>\n            <param name=\"lastUpdate\">The UTC time of the last change to the playing queue.</param>\n            <param name=\"playlist\">The playlist.</param>\n            <param name=\"playingItemIndex\">The playing item index in the playlist.</param>\n            <param name=\"startPositionTicks\">The start position ticks.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 6533,
                  "startColumn": 26,
                  "endLine": 6533,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Search.SearchHint.MediaType\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Search.SearchHint.MediaType\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Search.SearchHint.MediaType\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 6531,
                  "startColumn": 32,
                  "endLine": 6531,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Search.SearchHint.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Search.SearchHint.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Search.SearchHint.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 6389,
                  "startColumn": 39,
                  "endLine": 6389,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"secret\">The secret used to query the request state.</param>\n            <param name=\"code\">The code used to allow the request.</param>\n            <param name=\"dateAdded\">The time when the request was created.</param>\n            <param name=\"deviceId\">The requesting device id.</param>\n            <param name=\"deviceName\">The requesting device name.</param>\n            <param name=\"appName\">The requesting app name.</param>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"secret\">The secret used to query the request state.</param>\n            <param name=\"code\">The code used to allow the request.</param>\n            <param name=\"dateAdded\">The time when the request was created.</param>\n            <param name=\"deviceId\">The requesting device id.</param>\n            <param name=\"deviceName\">The requesting device name.</param>\n            <param name=\"appName\">The requesting app name.</param>\n",
                      "markdown": "`            </summary>\n            <param name=\"secret\">The secret used to query the request state.</param>\n            <param name=\"code\">The code used to allow the request.</param>\n            <param name=\"dateAdded\">The time when the request was created.</param>\n            <param name=\"deviceId\">The requesting device id.</param>\n            <param name=\"deviceName\">The requesting device name.</param>\n            <param name=\"appName\">The requesting app name.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 6155,
                  "startColumn": 15,
                  "endLine": 6155,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.ServiceName\">\n            <summary>\n            The service name.\n            </summary>\n        </member>\n        <member name=\"T:MediaBrowser.Model.Querying.ItemFilter\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.ServiceName\">\n            <summary>\n            The service name.\n            </summary>\n        </member>\n        <member name=\"T:MediaBrowser.Model.Querying.ItemFilter\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.ServiceName\">\n            <summary>\n            The service name.\n            </summary>\n        </member>\n        <member name=\"T:MediaBrowser.Model.Querying.ItemFilter\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 6115,
                  "startColumn": 15,
                  "endLine": 6115,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.SortName\">\n            <summary>\n            The sort name of the item.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.SpecialEpisodeNumbers\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.SortName\">\n            <summary>\n            The sort name of the item.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.SpecialEpisodeNumbers\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.SortName\">\n            <summary>\n            The sort name of the item.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.SpecialEpisodeNumbers\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 6005,
                  "startColumn": 30,
                  "endLine": 6005,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.CumulativeRunTimeTicks\">\n            <summary>\n            The cumulative run time ticks.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.CustomRating\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.CumulativeRunTimeTicks\">\n            <summary>\n            The cumulative run time ticks.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.CustomRating\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.CumulativeRunTimeTicks\">\n            <summary>\n            The cumulative run time ticks.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Model.Querying.ItemFields.CustomRating\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 5428,
                  "startColumn": 37,
                  "endLine": 5428,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Net.PublishedServerUriOverride.Data\">\n            <summary>\n            Gets or sets the object's IP address.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Net.PublishedServerUriOverride.OverrideUri\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Net.PublishedServerUriOverride.Data\">\n            <summary>\n            Gets or sets the object's IP address.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Net.PublishedServerUriOverride.OverrideUri\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Net.PublishedServerUriOverride.Data\">\n            <summary>\n            Gets or sets the object's IP address.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Net.PublishedServerUriOverride.OverrideUri\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 5408,
                  "startColumn": 50,
                  "endLine": 5408,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            <summary>\n            Gets the type of the MIME.\n            </summary>\n            <param name=\"filename\">The filename to find the MIME type of.</param>\n            <param name=\"defaultValue\">The default value to return if no fitting MIME type is found.</param>\n            <returns>The correct MIME type for the given filename, or <paramref name=\"defaultValue\"/> if it wasn't found.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets the type of the MIME.\n            </summary>\n            <param name=\"filename\">The filename to find the MIME type of.</param>\n            <param name=\"defaultValue\">The default value to return if no fitting MIME type is found.</param>\n            <returns>The correct MIME type for the given filename, or <paramref name=\"defaultValue\"/> if it wasn't found.</returns>\n        </member>\n",
                      "markdown": "`            <summary>\n            Gets the type of the MIME.\n            </summary>\n            <param name=\"filename\">The filename to find the MIME type of.</param>\n            <param name=\"defaultValue\">The default value to return if no fitting MIME type is found.</param>\n            <returns>The correct MIME type for the given filename, or <paramref name=\"defaultValue\"/> if it wasn't found.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 5345,
                  "startColumn": 37,
                  "endLine": 5345,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Net.IPData.Subnet\">\n            <summary>\n            Gets or sets the object's IP address.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Net.IPData.Index\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Net.IPData.Subnet\">\n            <summary>\n            Gets or sets the object's IP address.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Net.IPData.Index\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Net.IPData.Subnet\">\n            <summary>\n            Gets or sets the object's IP address.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Net.IPData.Index\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 5340,
                  "startColumn": 37,
                  "endLine": 5340,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Net.IPData.Address\">\n            <summary>\n            Gets or sets the object's IP address.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Net.IPData.Subnet\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Net.IPData.Address\">\n            <summary>\n            Gets or sets the object's IP address.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Net.IPData.Subnet\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Net.IPData.Address\">\n            <summary>\n            Gets or sets the object's IP address.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Net.IPData.Subnet\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 5216,
                  "startColumn": 26,
                  "endLine": 5216,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.MediaInfo.BlurayDiscInfo.Files\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.MediaInfo.BlurayDiscInfo.Files\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.MediaInfo.BlurayDiscInfo.Files\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 5214,
                  "startColumn": 32,
                  "endLine": 5214,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.MediaInfo.BlurayDiscInfo.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.MediaInfo.BlurayDiscInfo.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.MediaInfo.BlurayDiscInfo.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 5045,
                  "startColumn": 26,
                  "endLine": 5045,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Lyrics.LyricLine.Start\">\n            <summary>\n            Gets the start time in ticks.\n            </summary>\n        </member>\n        <member name=\"T:MediaBrowser.Model.Lyrics.LyricMetadata\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Lyrics.LyricLine.Start\">\n            <summary>\n            Gets the start time in ticks.\n            </summary>\n        </member>\n        <member name=\"T:MediaBrowser.Model.Lyrics.LyricMetadata\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Lyrics.LyricLine.Start\">\n            <summary>\n            Gets the start time in ticks.\n            </summary>\n        </member>\n        <member name=\"T:MediaBrowser.Model.Lyrics.LyricMetadata\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 5036,
                  "startColumn": 47,
                  "endLine": 5036,
                  "endColumn": 53,
                  "snippet": {
                    "text": "            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.Lyrics.LyricLine\"/> class.\n            </summary>\n            <param name=\"text\">The lyric text.</param>\n            <param name=\"start\">The lyric start time in ticks.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Lyrics.LyricLine.Text\">\n            <summary>\n",
                    "rendered": {
                      "text": "            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.Lyrics.LyricLine\"/> class.\n            </summary>\n            <param name=\"text\">The lyric text.</param>\n            <param name=\"start\">The lyric start time in ticks.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Lyrics.LyricLine.Text\">\n            <summary>\n",
                      "markdown": "`            Initializes a new instance of the <see cref=\"T:MediaBrowser.Model.Lyrics.LyricLine\"/> class.\n            </summary>\n            <param name=\"text\">The lyric text.</param>\n            <param name=\"start\">The lyric start time in ticks.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Lyrics.LyricLine.Text\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4969,
                  "startColumn": 26,
                  "endLine": 4969,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.TimerInfoDto.ProgramInfo\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.TimerInfoDto.ProgramInfo\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.TimerInfoDto.ProgramInfo\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4967,
                  "startColumn": 32,
                  "endLine": 4967,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.TimerInfoDto.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.TimerInfoDto.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.TimerInfoDto.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4945,
                  "startColumn": 22,
                  "endLine": 4945,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.TimerInfoDto.Status\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.TimerInfoDto.Status\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.TimerInfoDto.Status\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4943,
                  "startColumn": 28,
                  "endLine": 4943,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.SeriesTimerQuery.SortOrder\">\n            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.SeriesTimerQuery.SortOrder\">\n            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.SeriesTimerQuery.SortOrder\">\n            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4939,
                  "startColumn": 22,
                  "endLine": 4939,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the sort by - SortName, Priority.\n            </summary>\n            <value>The sort by.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.SeriesTimerQuery.SortOrder\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the sort by - SortName, Priority.\n            </summary>\n            <value>The sort by.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.SeriesTimerQuery.SortOrder\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the sort by - SortName, Priority.\n            </summary>\n            <value>The sort by.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.SeriesTimerQuery.SortOrder\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4937,
                  "startColumn": 28,
                  "endLine": 4937,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.SeriesTimerQuery.SortBy\">\n            <summary>\n            Gets or sets the sort by - SortName, Priority.\n            </summary>\n            <value>The sort by.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.SeriesTimerQuery.SortBy\">\n            <summary>\n            Gets or sets the sort by - SortName, Priority.\n            </summary>\n            <value>The sort by.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.SeriesTimerQuery.SortBy\">\n            <summary>\n            Gets or sets the sort by - SortName, Priority.\n            </summary>\n            <value>The sort by.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4744,
                  "startColumn": 22,
                  "endLine": 4744,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the sort order to return results with.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.LiveTvInfo.Services\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the sort order to return results with.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.LiveTvInfo.Services\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the sort order to return results with.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.LiveTvInfo.Services\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4742,
                  "startColumn": 28,
                  "endLine": 4742,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.LiveTvChannelQuery.SortOrder\">\n            <summary>\n            Gets or sets the sort order to return results with.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.LiveTvChannelQuery.SortOrder\">\n            <summary>\n            Gets or sets the sort order to return results with.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.LiveTv.LiveTvChannelQuery.SortOrder\">\n            <summary>\n            Gets or sets the sort order to return results with.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4332,
                  "startColumn": 31,
                  "endLine": 4332,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Model.IO.IFileSystem.GetLastWriteTimeUtc(System.String)\">\n            <summary>\n            Gets the last write time UTC.\n            </summary>\n            <param name=\"path\">The path.</param>\n            <returns>DateTime.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Model.IO.IFileSystem.GetLastWriteTimeUtc(System.String)\">\n            <summary>\n            Gets the last write time UTC.\n            </summary>\n            <param name=\"path\">The path.</param>\n            <returns>DateTime.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Model.IO.IFileSystem.GetLastWriteTimeUtc(System.String)\">\n            <summary>\n            Gets the last write time UTC.\n            </summary>\n            <param name=\"path\">The path.</param>\n            <returns>DateTime.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4325,
                  "startColumn": 31,
                  "endLine": 4325,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Model.IO.IFileSystem.GetLastWriteTimeUtc(MediaBrowser.Model.IO.FileSystemMetadata)\">\n            <summary>\n            Gets the last write time UTC.\n            </summary>\n            <param name=\"info\">The information.</param>\n            <returns>DateTime.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Model.IO.IFileSystem.GetLastWriteTimeUtc(MediaBrowser.Model.IO.FileSystemMetadata)\">\n            <summary>\n            Gets the last write time UTC.\n            </summary>\n            <param name=\"info\">The information.</param>\n            <returns>DateTime.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Model.IO.IFileSystem.GetLastWriteTimeUtc(MediaBrowser.Model.IO.FileSystemMetadata)\">\n            <summary>\n            Gets the last write time UTC.\n            </summary>\n            <param name=\"info\">The information.</param>\n            <returns>DateTime.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4318,
                  "startColumn": 29,
                  "endLine": 4318,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Model.IO.IFileSystem.GetCreationTimeUtc(System.String)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"path\">The path.</param>\n            <returns>DateTime.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Model.IO.IFileSystem.GetCreationTimeUtc(System.String)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"path\">The path.</param>\n            <returns>DateTime.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Model.IO.IFileSystem.GetCreationTimeUtc(System.String)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"path\">The path.</param>\n            <returns>DateTime.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4311,
                  "startColumn": 29,
                  "endLine": 4311,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Model.IO.IFileSystem.GetCreationTimeUtc(MediaBrowser.Model.IO.FileSystemMetadata)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"info\">The information.</param>\n            <returns>DateTime.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Model.IO.IFileSystem.GetCreationTimeUtc(MediaBrowser.Model.IO.FileSystemMetadata)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"info\">The information.</param>\n            <returns>DateTime.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Model.IO.IFileSystem.GetCreationTimeUtc(MediaBrowser.Model.IO.FileSystemMetadata)\">\n            <summary>\n            Gets the creation time UTC.\n            </summary>\n            <param name=\"info\">The information.</param>\n            <returns>DateTime.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4239,
                  "startColumn": 31,
                  "endLine": 4239,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the creation time UTC.\n            </summary>\n            <value>The creation time UTC.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.IO.FileSystemMetadata.IsDirectory\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the creation time UTC.\n            </summary>\n            <value>The creation time UTC.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.IO.FileSystemMetadata.IsDirectory\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the creation time UTC.\n            </summary>\n            <value>The creation time UTC.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.IO.FileSystemMetadata.IsDirectory\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4237,
                  "startColumn": 37,
                  "endLine": 4237,
                  "endColumn": 43,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.IO.FileSystemMetadata.CreationTimeUtc\">\n            <summary>\n            Gets or sets the creation time UTC.\n            </summary>\n            <value>The creation time UTC.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.IO.FileSystemMetadata.CreationTimeUtc\">\n            <summary>\n            Gets or sets the creation time UTC.\n            </summary>\n            <value>The creation time UTC.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.IO.FileSystemMetadata.CreationTimeUtc\">\n            <summary>\n            Gets or sets the creation time UTC.\n            </summary>\n            <value>The creation time UTC.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4233,
                  "startColumn": 33,
                  "endLine": 4233,
                  "endColumn": 39,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the last write time UTC.\n            </summary>\n            <value>The last write time UTC.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.IO.FileSystemMetadata.CreationTimeUtc\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the last write time UTC.\n            </summary>\n            <value>The last write time UTC.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.IO.FileSystemMetadata.CreationTimeUtc\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the last write time UTC.\n            </summary>\n            <value>The last write time UTC.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.IO.FileSystemMetadata.CreationTimeUtc\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 4231,
                  "startColumn": 39,
                  "endLine": 4231,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.IO.FileSystemMetadata.LastWriteTimeUtc\">\n            <summary>\n            Gets or sets the last write time UTC.\n            </summary>\n            <value>The last write time UTC.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.IO.FileSystemMetadata.LastWriteTimeUtc\">\n            <summary>\n            Gets or sets the last write time UTC.\n            </summary>\n            <value>The last write time UTC.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.IO.FileSystemMetadata.LastWriteTimeUtc\">\n            <summary>\n            Gets or sets the last write time UTC.\n            </summary>\n            <value>The last write time UTC.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 3290,
                  "startColumn": 28,
                  "endLine": 3290,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the codec time base.\n            </summary>\n            <value>The codec time base.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Entities.MediaStream.Title\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the codec time base.\n            </summary>\n            <value>The codec time base.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Entities.MediaStream.Title\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the codec time base.\n            </summary>\n            <value>The codec time base.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Entities.MediaStream.Title\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 3288,
                  "startColumn": 34,
                  "endLine": 3288,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Entities.MediaStream.CodecTimeBase\">\n            <summary>\n            Gets or sets the codec time base.\n            </summary>\n            <value>The codec time base.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Entities.MediaStream.CodecTimeBase\">\n            <summary>\n            Gets or sets the codec time base.\n            </summary>\n            <value>The codec time base.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Entities.MediaStream.CodecTimeBase\">\n            <summary>\n            Gets or sets the codec time base.\n            </summary>\n            <value>The codec time base.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 3284,
                  "startColumn": 22,
                  "endLine": 3284,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the time base.\n            </summary>\n            <value>The time base.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Entities.MediaStream.CodecTimeBase\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the time base.\n            </summary>\n            <value>The time base.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Entities.MediaStream.CodecTimeBase\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the time base.\n            </summary>\n            <value>The time base.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Entities.MediaStream.CodecTimeBase\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 3282,
                  "startColumn": 28,
                  "endLine": 3282,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Entities.MediaStream.TimeBase\">\n            <summary>\n            Gets or sets the time base.\n            </summary>\n            <value>The time base.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Entities.MediaStream.TimeBase\">\n            <summary>\n            Gets or sets the time base.\n            </summary>\n            <value>The time base.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Entities.MediaStream.TimeBase\">\n            <summary>\n            Gets or sets the time base.\n            </summary>\n            <value>The time base.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 2446,
                  "startColumn": 22,
                  "endLine": 2446,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.DisplayPreferencesDto.ShowSidebar\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.DisplayPreferencesDto.ShowSidebar\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.DisplayPreferencesDto.ShowSidebar\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 2444,
                  "startColumn": 28,
                  "endLine": 2444,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.DisplayPreferencesDto.SortOrder\">\n            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.DisplayPreferencesDto.SortOrder\">\n            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.DisplayPreferencesDto.SortOrder\">\n            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 2392,
                  "startColumn": 22,
                  "endLine": 2392,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the sort by.\n            </summary>\n            <value>The sort by.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.DisplayPreferencesDto.IndexBy\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the sort by.\n            </summary>\n            <value>The sort by.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.DisplayPreferencesDto.IndexBy\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the sort by.\n            </summary>\n            <value>The sort by.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.DisplayPreferencesDto.IndexBy\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 2390,
                  "startColumn": 28,
                  "endLine": 2390,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.DisplayPreferencesDto.SortBy\">\n            <summary>\n            Gets or sets the sort by.\n            </summary>\n            <value>The sort by.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.DisplayPreferencesDto.SortBy\">\n            <summary>\n            Gets or sets the sort by.\n            </summary>\n            <value>The sort by.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.DisplayPreferencesDto.SortBy\">\n            <summary>\n            Gets or sets the sort by.\n            </summary>\n            <value>The sort by.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 1753,
                  "startColumn": 26,
                  "endLine": 1753,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.BaseItemDto.PlayAccess\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.BaseItemDto.PlayAccess\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.BaseItemDto.PlayAccess\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 1751,
                  "startColumn": 32,
                  "endLine": 1751,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.BaseItemDto.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.BaseItemDto.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.BaseItemDto.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 1747,
                  "startColumn": 37,
                  "endLine": 1747,
                  "endColumn": 43,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the cumulative run time ticks.\n            </summary>\n            <value>The cumulative run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.BaseItemDto.RunTimeTicks\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the cumulative run time ticks.\n            </summary>\n            <value>The cumulative run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.BaseItemDto.RunTimeTicks\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the cumulative run time ticks.\n            </summary>\n            <value>The cumulative run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.BaseItemDto.RunTimeTicks\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 1745,
                  "startColumn": 43,
                  "endLine": 1745,
                  "endColumn": 49,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.BaseItemDto.CumulativeRunTimeTicks\">\n            <summary>\n            Gets or sets the cumulative run time ticks.\n            </summary>\n            <value>The cumulative run time ticks.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.BaseItemDto.CumulativeRunTimeTicks\">\n            <summary>\n            Gets or sets the cumulative run time ticks.\n            </summary>\n            <value>The cumulative run time ticks.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Dto.BaseItemDto.CumulativeRunTimeTicks\">\n            <summary>\n            Gets or sets the cumulative run time ticks.\n            </summary>\n            <value>The cumulative run time ticks.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 773,
                  "startColumn": 60,
                  "endLine": 773,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SlowResponseThresholdMs\">\n            <summary>\n            Gets or sets the threshold for the slow response time warning in ms.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.CorsHosts\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SlowResponseThresholdMs\">\n            <summary>\n            Gets or sets the threshold for the slow response time warning in ms.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.CorsHosts\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SlowResponseThresholdMs\">\n            <summary>\n            Gets or sets the threshold for the slow response time warning in ms.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.CorsHosts\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 737,
                  "startColumn": 32,
                  "endLine": 737,
                  "endColumn": 38,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the remaining minutes of a book that can be played while still saving playstate. If this percentage is crossed playstate will be reset to the beginning and the item will be marked watched.\n            </summary>\n            <value>The remaining time in minutes.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.InactiveSessionThreshold\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the remaining minutes of a book that can be played while still saving playstate. If this percentage is crossed playstate will be reset to the beginning and the item will be marked watched.\n            </summary>\n            <value>The remaining time in minutes.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.InactiveSessionThreshold\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the remaining minutes of a book that can be played while still saving playstate. If this percentage is crossed playstate will be reset to the beginning and the item will be marked watched.\n            </summary>\n            <value>The remaining time in minutes.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.InactiveSessionThreshold\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 707,
                  "startColumn": 22,
                  "endLine": 707,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets words to be removed from strings to create a sort name.\n            </summary>\n            <value>The sort remove words.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.MinResumePct\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets words to be removed from strings to create a sort name.\n            </summary>\n            <value>The sort remove words.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.MinResumePct\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets words to be removed from strings to create a sort name.\n            </summary>\n            <value>The sort remove words.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.MinResumePct\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 705,
                  "startColumn": 69,
                  "endLine": 705,
                  "endColumn": 75,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortRemoveWords\">\n            <summary>\n            Gets or sets words to be removed from strings to create a sort name.\n            </summary>\n            <value>The sort remove words.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortRemoveWords\">\n            <summary>\n            Gets or sets words to be removed from strings to create a sort name.\n            </summary>\n            <value>The sort remove words.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortRemoveWords\">\n            <summary>\n            Gets or sets words to be removed from strings to create a sort name.\n            </summary>\n            <value>The sort remove words.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 701,
                  "startColumn": 22,
                  "endLine": 701,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets characters to be removed from strings to create a sort name.\n            </summary>\n            <value>The sort remove characters.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortRemoveWords\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets characters to be removed from strings to create a sort name.\n            </summary>\n            <value>The sort remove characters.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortRemoveWords\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets characters to be removed from strings to create a sort name.\n            </summary>\n            <value>The sort remove characters.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortRemoveWords\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 699,
                  "startColumn": 74,
                  "endLine": 699,
                  "endColumn": 80,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortRemoveCharacters\">\n            <summary>\n            Gets or sets characters to be removed from strings to create a sort name.\n            </summary>\n            <value>The sort remove characters.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortRemoveCharacters\">\n            <summary>\n            Gets or sets characters to be removed from strings to create a sort name.\n            </summary>\n            <value>The sort remove characters.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortRemoveCharacters\">\n            <summary>\n            Gets or sets characters to be removed from strings to create a sort name.\n            </summary>\n            <value>The sort remove characters.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 695,
                  "startColumn": 22,
                  "endLine": 695,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets characters to be replaced with a ' ' in strings to create a sort name.\n            </summary>\n            <value>The sort replace characters.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortRemoveCharacters\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets characters to be replaced with a ' ' in strings to create a sort name.\n            </summary>\n            <value>The sort replace characters.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortRemoveCharacters\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets characters to be replaced with a ' ' in strings to create a sort name.\n            </summary>\n            <value>The sort replace characters.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortRemoveCharacters\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 693,
                  "startColumn": 84,
                  "endLine": 693,
                  "endColumn": 90,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortReplaceCharacters\">\n            <summary>\n            Gets or sets characters to be replaced with a ' ' in strings to create a sort name.\n            </summary>\n            <value>The sort replace characters.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortReplaceCharacters\">\n            <summary>\n            Gets or sets characters to be replaced with a ' ' in strings to create a sort name.\n            </summary>\n            <value>The sort replace characters.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Configuration.ServerConfiguration.SortReplaceCharacters\">\n            <summary>\n            Gets or sets characters to be replaced with a ' ' in strings to create a sort name.\n            </summary>\n            <value>The sort replace characters.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 53,
                  "endLine": 201,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.SupportsSortOrderToggle\">\n            <summary>\n            Gets or sets a value indicating whether a sort ascending/descending toggle is supported.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.SupportsLatestMedia\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.SupportsSortOrderToggle\">\n            <summary>\n            Gets or sets a value indicating whether a sort ascending/descending toggle is supported.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.SupportsLatestMedia\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.SupportsSortOrderToggle\">\n            <summary>\n            Gets or sets a value indicating whether a sort ascending/descending toggle is supported.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.SupportsLatestMedia\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 30,
                  "endLine": 197,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the default sort orders.\n            </summary>\n            <value>The default sort orders.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.SupportsSortOrderToggle\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the default sort orders.\n            </summary>\n            <value>The default sort orders.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.SupportsSortOrderToggle\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the default sort orders.\n            </summary>\n            <value>The default sort orders.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.SupportsSortOrderToggle\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Model.xml"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 36,
                  "endLine": 195,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.DefaultSortFields\">\n            <summary>\n            Gets or sets the default sort orders.\n            </summary>\n            <value>The default sort orders.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.DefaultSortFields\">\n            <summary>\n            Gets or sets the default sort orders.\n            </summary>\n            <value>The default sort orders.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Model.Channels.ChannelFeatures.DefaultSortFields\">\n            <summary>\n            Gets or sets the default sort orders.\n            </summary>\n            <value>The default sort orders.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 1028,
                  "startColumn": 77,
                  "endLine": 1028,
                  "endColumn": 85,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.GetAuthenticationProviders\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.GetPasswordResetProviders\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.UpdateConfigurationAsync(System.Guid,MediaBrowser.Model.Configuration.UserConfiguration)\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.GetAuthenticationProviders\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.GetPasswordResetProviders\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.UpdateConfigurationAsync(System.Guid,MediaBrowser.Model.Configuration.UserConfiguration)\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.GetAuthenticationProviders\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.GetPasswordResetProviders\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.UpdateConfigurationAsync(System.Guid,MediaBrowser.Model.Configuration.UserConfiguration)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 1019,
                  "startColumn": 80,
                  "endLine": 1019,
                  "endColumn": 88,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.StartForgotPasswordProcess(System.String,System.Boolean)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.InitializeAsync\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.StartForgotPasswordProcess(System.String,System.Boolean)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.InitializeAsync\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.StartForgotPasswordProcess(System.String,System.Boolean)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.InitializeAsync\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 1016,
                  "startColumn": 85,
                  "endLine": 1016,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.AuthenticateUser(System.String,System.String,System.String,System.String,System.Boolean)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.StartForgotPasswordProcess(System.String,System.Boolean)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.RedeemPasswordResetPin(System.String)\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.AuthenticateUser(System.String,System.String,System.String,System.String,System.Boolean)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.StartForgotPasswordProcess(System.String,System.Boolean)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.RedeemPasswordResetPin(System.String)\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.AuthenticateUser(System.String,System.String,System.String,System.String,System.Boolean)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.StartForgotPasswordProcess(System.String,System.Boolean)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.RedeemPasswordResetPin(System.String)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 1007,
                  "startColumn": 80,
                  "endLine": 1007,
                  "endColumn": 88,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.ResetPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.GetUserDto(Jellyfin.Data.Entities.User,System.String)\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.ResetPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.GetUserDto(Jellyfin.Data.Entities.User,System.String)\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.ResetPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.GetUserDto(Jellyfin.Data.Entities.User,System.String)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 1004,
                  "startColumn": 79,
                  "endLine": 1004,
                  "endColumn": 87,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.DeleteUserAsync(System.Guid)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.ResetPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.DeleteUserAsync(System.Guid)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.ResetPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.DeleteUserAsync(System.Guid)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.ResetPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc/>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.UserManager.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 962,
                  "startColumn": 53,
                  "endLine": 962,
                  "endColumn": 61,
                  "snippet": {
                    "text": "            <param name=\"imageProcessor\">The image processor.</param>\n            <param name=\"logger\">The logger.</param>\n            <param name=\"serverConfigurationManager\">The system config manager.</param>\n            <param name=\"passwordResetProviders\">The password reset providers.</param>\n            <param name=\"authenticationProviders\">The authentication providers.</param>\n        </member>\n        <member name=\"E:Jellyfin.Server.Implementations.Users.UserManager.OnUserUpdated\">\n",
                    "rendered": {
                      "text": "            <param name=\"imageProcessor\">The image processor.</param>\n            <param name=\"logger\">The logger.</param>\n            <param name=\"serverConfigurationManager\">The system config manager.</param>\n            <param name=\"passwordResetProviders\">The password reset providers.</param>\n            <param name=\"authenticationProviders\">The authentication providers.</param>\n        </member>\n        <member name=\"E:Jellyfin.Server.Implementations.Users.UserManager.OnUserUpdated\">\n",
                      "markdown": "`            <param name=\"imageProcessor\">The image processor.</param>\n            <param name=\"logger\">The logger.</param>\n            <param name=\"serverConfigurationManager\">The system config manager.</param>\n            <param name=\"passwordResetProviders\">The password reset providers.</param>\n            <param name=\"authenticationProviders\">The authentication providers.</param>\n        </member>\n        <member name=\"E:Jellyfin.Server.Implementations.Users.UserManager.OnUserUpdated\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 962,
                  "startColumn": 25,
                  "endLine": 962,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            <param name=\"imageProcessor\">The image processor.</param>\n            <param name=\"logger\">The logger.</param>\n            <param name=\"serverConfigurationManager\">The system config manager.</param>\n            <param name=\"passwordResetProviders\">The password reset providers.</param>\n            <param name=\"authenticationProviders\">The authentication providers.</param>\n        </member>\n        <member name=\"E:Jellyfin.Server.Implementations.Users.UserManager.OnUserUpdated\">\n",
                    "rendered": {
                      "text": "            <param name=\"imageProcessor\">The image processor.</param>\n            <param name=\"logger\">The logger.</param>\n            <param name=\"serverConfigurationManager\">The system config manager.</param>\n            <param name=\"passwordResetProviders\">The password reset providers.</param>\n            <param name=\"authenticationProviders\">The authentication providers.</param>\n        </member>\n        <member name=\"E:Jellyfin.Server.Implementations.Users.UserManager.OnUserUpdated\">\n",
                      "markdown": "`            <param name=\"imageProcessor\">The image processor.</param>\n            <param name=\"logger\">The logger.</param>\n            <param name=\"serverConfigurationManager\">The system config manager.</param>\n            <param name=\"passwordResetProviders\">The password reset providers.</param>\n            <param name=\"authenticationProviders\">The authentication providers.</param>\n        </member>\n        <member name=\"E:Jellyfin.Server.Implementations.Users.UserManager.OnUserUpdated\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 951,
                  "startColumn": 582,
                  "endLine": 951,
                  "endColumn": 590,
                  "snippet": {
                    "text": "n.IApplicationHost,MediaBrowser.Controller.Drawing.IImageProcessor,Microsoft.Extensions.Logging.ILogger{Jellyfin.Server.Implementations.Users.UserManager},MediaBrowser.Controller.Configuration.IServerConfigurationManager,System.Collections.Generic.IEnumerable{MediaBrowser.Controller.Authentication.IPasswordResetProvider},System.Collections.Generic.IEnumerable{MediaBrowser.Controller.Authentication.IAuthenticationProvider})\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Users.UserManager\"/> class.\n            </summary>\n            <pa",
                    "rendered": {
                      "text": "n.IApplicationHost,MediaBrowser.Controller.Drawing.IImageProcessor,Microsoft.Extensions.Logging.ILogger{Jellyfin.Server.Implementations.Users.UserManager},MediaBrowser.Controller.Configuration.IServerConfigurationManager,System.Collections.Generic.IEnumerable{MediaBrowser.Controller.Authentication.IPasswordResetProvider},System.Collections.Generic.IEnumerable{MediaBrowser.Controller.Authentication.IAuthenticationProvider})\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Users.UserManager\"/> class.\n            </summary>\n            <pa",
                      "markdown": "`n.IApplicationHost,MediaBrowser.Controller.Drawing.IImageProcessor,Microsoft.Extensions.Logging.ILogger{Jellyfin.Server.Implementations.Users.UserManager},MediaBrowser.Controller.Configuration.IServerConfigurationManager,System.Collections.Generic.IEnumerable{MediaBrowser.Controller.Authentication.IPasswordResetProvider},System.Collections.Generic.IEnumerable{MediaBrowser.Controller.Authentication.IAuthenticationProvider})\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Users.UserManager\"/> class.\n            </summary>\n            <pa`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 943,
                  "startColumn": 88,
                  "endLine": 943,
                  "endColumn": 96,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.HasPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.UserManager\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.HasPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.UserManager\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.HasPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.UserManager\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 940,
                  "startColumn": 85,
                  "endLine": 940,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.Authenticate(System.String,System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.HasPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.Authenticate(System.String,System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.HasPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.Authenticate(System.String,System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.HasPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.InvalidAuthProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 872,
                  "startColumn": 102,
                  "endLine": 872,
                  "endColumn": 110,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.StartForgotPasswordProcess(Jellyfin.Data.Entities.User,System.Boolean)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DeviceAccessHost\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.StartForgotPasswordProcess(Jellyfin.Data.Entities.User,System.Boolean)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DeviceAccessHost\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.StartForgotPasswordProcess(Jellyfin.Data.Entities.User,System.Boolean)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DeviceAccessHost\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 872,
                  "startColumn": 69,
                  "endLine": 872,
                  "endColumn": 77,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.StartForgotPasswordProcess(Jellyfin.Data.Entities.User,System.Boolean)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DeviceAccessHost\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.StartForgotPasswordProcess(Jellyfin.Data.Entities.User,System.Boolean)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DeviceAccessHost\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.StartForgotPasswordProcess(Jellyfin.Data.Entities.User,System.Boolean)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DeviceAccessHost\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 869,
                  "startColumn": 97,
                  "endLine": 869,
                  "endColumn": 105,
                  "snippet": {
                    "text": "        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.IsEnabled\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.StartForgotPasswordProcess(Jellyfin.Data.Entities.User,System.Boolean)\">\n",
                    "rendered": {
                      "text": "        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.IsEnabled\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.StartForgotPasswordProcess(Jellyfin.Data.Entities.User,System.Boolean)\">\n",
                      "markdown": "`        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.IsEnabled\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.StartForgotPasswordProcess(Jellyfin.Data.Entities.User,System.Boolean)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 869,
                  "startColumn": 69,
                  "endLine": 869,
                  "endColumn": 77,
                  "snippet": {
                    "text": "        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.IsEnabled\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.StartForgotPasswordProcess(Jellyfin.Data.Entities.User,System.Boolean)\">\n",
                    "rendered": {
                      "text": "        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.IsEnabled\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.StartForgotPasswordProcess(Jellyfin.Data.Entities.User,System.Boolean)\">\n",
                      "markdown": "`        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.IsEnabled\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.StartForgotPasswordProcess(Jellyfin.Data.Entities.User,System.Boolean)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 866,
                  "startColumn": 69,
                  "endLine": 866,
                  "endColumn": 77,
                  "snippet": {
                    "text": "        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.Name\">\n            <inheritdoc />\n        </member>\n        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.IsEnabled\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n",
                    "rendered": {
                      "text": "        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.Name\">\n            <inheritdoc />\n        </member>\n        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.IsEnabled\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n",
                      "markdown": "`        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.Name\">\n            <inheritdoc />\n        </member>\n        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.IsEnabled\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.RedeemPasswordResetPin(System.String)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 863,
                  "startColumn": 69,
                  "endLine": 863,
                  "endColumn": 77,
                  "snippet": {
                    "text": "            <param name=\"configurationManager\">The configuration manager.</param>\n            <param name=\"appHost\">The application host.</param>\n        </member>\n        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.Name\">\n            <inheritdoc />\n        </member>\n        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.IsEnabled\">\n",
                    "rendered": {
                      "text": "            <param name=\"configurationManager\">The configuration manager.</param>\n            <param name=\"appHost\">The application host.</param>\n        </member>\n        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.Name\">\n            <inheritdoc />\n        </member>\n        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.IsEnabled\">\n",
                      "markdown": "`            <param name=\"configurationManager\">The configuration manager.</param>\n            <param name=\"appHost\">The application host.</param>\n        </member>\n        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.Name\">\n            <inheritdoc />\n        </member>\n        <member name=\"P:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.IsEnabled\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 858,
                  "startColumn": 104,
                  "endLine": 858,
                  "endColumn": 112,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager,MediaBrowser.Common.IApplicationHost)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\"/> class.\n            </summary>\n            <param name=\"configurationManager\">The configuration manager.</param>\n            <param name=\"appHost\">The application host.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager,MediaBrowser.Common.IApplicationHost)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\"/> class.\n            </summary>\n            <param name=\"configurationManager\">The configuration manager.</param>\n            <param name=\"appHost\">The application host.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager,MediaBrowser.Common.IApplicationHost)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\"/> class.\n            </summary>\n            <param name=\"configurationManager\">The configuration manager.</param>\n            <param name=\"appHost\">The application host.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 856,
                  "startColumn": 69,
                  "endLine": 856,
                  "endColumn": 77,
                  "snippet": {
                    "text": "            The default password reset provider.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager,MediaBrowser.Common.IApplicationHost)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\"/> class.\n            </summary>\n",
                    "rendered": {
                      "text": "            The default password reset provider.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager,MediaBrowser.Common.IApplicationHost)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\"/> class.\n            </summary>\n",
                      "markdown": "`            The default password reset provider.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager,MediaBrowser.Common.IApplicationHost)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\"/> class.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 853,
                  "startColumn": 24,
                  "endLine": 853,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\">\n            <summary>\n            The default password reset provider.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager,MediaBrowser.Common.IApplicationHost)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\">\n            <summary>\n            The default password reset provider.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager,MediaBrowser.Common.IApplicationHost)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\">\n            <summary>\n            The default password reset provider.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager,MediaBrowser.Common.IApplicationHost)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 851,
                  "startColumn": 69,
                  "endLine": 851,
                  "endColumn": 77,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\">\n            <summary>\n            The default password reset provider.\n            </summary>\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\">\n            <summary>\n            The default password reset provider.\n            </summary>\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\">\n            <summary>\n            The default password reset provider.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 848,
                  "startColumn": 98,
                  "endLine": 848,
                  "endColumn": 106,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.HasPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.HasPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.HasPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Users.DefaultPasswordResetProvider\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 845,
                  "startColumn": 95,
                  "endLine": 845,
                  "endColumn": 103,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.Authenticate(System.String,System.String,Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.HasPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.Authenticate(System.String,System.String,Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.HasPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.Authenticate(System.String,System.String,Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.HasPassword(Jellyfin.Data.Entities.User)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Users.DefaultAuthenticationProvider.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 748,
                  "startColumn": 90,
                  "endLine": 748,
                  "endColumn": 97,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Security.AuthenticationManager.CreateApiKey(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Security.AuthenticationManager.GetApiKeys\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Security.AuthenticationManager.DeleteApiKey(System.String)\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Security.AuthenticationManager.CreateApiKey(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Security.AuthenticationManager.GetApiKeys\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Security.AuthenticationManager.DeleteApiKey(System.String)\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Security.AuthenticationManager.CreateApiKey(System.String)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Security.AuthenticationManager.GetApiKeys\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Security.AuthenticationManager.DeleteApiKey(System.String)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 602,
                  "startColumn": 77,
                  "endLine": 602,
                  "endColumn": 85,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Migrations.AddTrickplayInfos\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Migrations.AddTrickplayInfos\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Migrations.AddTrickplayInfos\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 599,
                  "startColumn": 77,
                  "endLine": 599,
                  "endColumn": 85,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 596,
                  "startColumn": 77,
                  "endLine": 596,
                  "endColumn": 85,
                  "snippet": {
                    "text": "        <member name=\"T:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n",
                    "rendered": {
                      "text": "        <member name=\"T:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n",
                      "markdown": "`        <member name=\"T:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 593,
                  "startColumn": 77,
                  "endLine": 593,
                  "endColumn": 85,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.JellyfinDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.JellyfinDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.JellyfinDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword\">\n            <inheritdoc />\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Migrations.RemoveEasyPassword.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 532,
                  "startColumn": 74,
                  "endLine": 532,
                  "endColumn": 81,
                  "snippet": {
                    "text": "            Gets the <see cref=\"T:Microsoft.EntityFrameworkCore.DbSet`1\"/> containing the activity logs.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Server.Implementations.JellyfinDbContext.ApiKeys\">\n            <summary>\n            Gets the <see cref=\"T:Microsoft.EntityFrameworkCore.DbSet`1\"/> containing the API keys.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets the <see cref=\"T:Microsoft.EntityFrameworkCore.DbSet`1\"/> containing the activity logs.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Server.Implementations.JellyfinDbContext.ApiKeys\">\n            <summary>\n            Gets the <see cref=\"T:Microsoft.EntityFrameworkCore.DbSet`1\"/> containing the API keys.\n            </summary>\n",
                      "markdown": "`            Gets the <see cref=\"T:Microsoft.EntityFrameworkCore.DbSet`1\"/> containing the activity logs.\n            </summary>\n        </member>\n        <member name=\"P:Jellyfin.Server.Implementations.JellyfinDbContext.ApiKeys\">\n            <summary>\n            Gets the <see cref=\"T:Microsoft.EntityFrameworkCore.DbSet`1\"/> containing the API keys.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 454,
                  "startColumn": 144,
                  "endLine": 454,
                  "endColumn": 152,
                  "snippet": {
                    "text": "            <param name=\"localizationManager\">The localization manager.</param>\n            <param name=\"activityManager\">The activity manager.</param>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.OnEvent(Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserUpdatedNotifier\">\n",
                    "rendered": {
                      "text": "            <param name=\"localizationManager\">The localization manager.</param>\n            <param name=\"activityManager\">The activity manager.</param>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.OnEvent(Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserUpdatedNotifier\">\n",
                      "markdown": "`            <param name=\"localizationManager\">The localization manager.</param>\n            <param name=\"activityManager\">The activity manager.</param>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.OnEvent(Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserUpdatedNotifier\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 454,
                  "startColumn": 83,
                  "endLine": 454,
                  "endColumn": 91,
                  "snippet": {
                    "text": "            <param name=\"localizationManager\">The localization manager.</param>\n            <param name=\"activityManager\">The activity manager.</param>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.OnEvent(Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserUpdatedNotifier\">\n",
                    "rendered": {
                      "text": "            <param name=\"localizationManager\">The localization manager.</param>\n            <param name=\"activityManager\">The activity manager.</param>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.OnEvent(Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserUpdatedNotifier\">\n",
                      "markdown": "`            <param name=\"localizationManager\">The localization manager.</param>\n            <param name=\"activityManager\">The activity manager.</param>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.OnEvent(Jellyfin.Data.Events.Users.UserPasswordChangedEventArgs)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserUpdatedNotifier\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 118,
                  "endLine": 449,
                  "endColumn": 126,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.#ctor(MediaBrowser.Model.Globalization.ILocalizationManager,MediaBrowser.Model.Activity.IActivityManager)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger\"/> class.\n            </summary>\n            <param name=\"localizationManager\">The localization manager.</param>\n            <param name=\"activityManager\">The activity manager.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.#ctor(MediaBrowser.Model.Globalization.ILocalizationManager,MediaBrowser.Model.Activity.IActivityManager)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger\"/> class.\n            </summary>\n            <param name=\"localizationManager\">The localization manager.</param>\n            <param name=\"activityManager\">The activity manager.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.#ctor(MediaBrowser.Model.Globalization.ILocalizationManager,MediaBrowser.Model.Activity.IActivityManager)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger\"/> class.\n            </summary>\n            <param name=\"localizationManager\">The localization manager.</param>\n            <param name=\"activityManager\">The activity manager.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 447,
                  "startColumn": 83,
                  "endLine": 447,
                  "endColumn": 91,
                  "snippet": {
                    "text": "            Creates an entry in the activity log when a user's password is changed.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.#ctor(MediaBrowser.Model.Globalization.ILocalizationManager,MediaBrowser.Model.Activity.IActivityManager)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger\"/> class.\n            </summary>\n",
                    "rendered": {
                      "text": "            Creates an entry in the activity log when a user's password is changed.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.#ctor(MediaBrowser.Model.Globalization.ILocalizationManager,MediaBrowser.Model.Activity.IActivityManager)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger\"/> class.\n            </summary>\n",
                      "markdown": "`            Creates an entry in the activity log when a user's password is changed.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.#ctor(MediaBrowser.Model.Globalization.ILocalizationManager,MediaBrowser.Model.Activity.IActivityManager)\">\n            <summary>\n            Initializes a new instance of the <see cref=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger\"/> class.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 444,
                  "startColumn": 63,
                  "endLine": 444,
                  "endColumn": 71,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger\">\n            <summary>\n            Creates an entry in the activity log when a user's password is changed.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.#ctor(MediaBrowser.Model.Globalization.ILocalizationManager,MediaBrowser.Model.Activity.IActivityManager)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger\">\n            <summary>\n            Creates an entry in the activity log when a user's password is changed.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.#ctor(MediaBrowser.Model.Globalization.ILocalizationManager,MediaBrowser.Model.Activity.IActivityManager)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger\">\n            <summary>\n            Creates an entry in the activity log when a user's password is changed.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger.#ctor(MediaBrowser.Model.Globalization.ILocalizationManager,MediaBrowser.Model.Activity.IActivityManager)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 83,
                  "endLine": 442,
                  "endColumn": 91,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserLockedOutLogger.OnEvent(Jellyfin.Data.Events.Users.UserLockedOutEventArgs)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger\">\n            <summary>\n            Creates an entry in the activity log when a user's password is changed.\n            </summary>\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserLockedOutLogger.OnEvent(Jellyfin.Data.Events.Users.UserLockedOutEventArgs)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger\">\n            <summary>\n            Creates an entry in the activity log when a user's password is changed.\n            </summary>\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Server.Implementations.Events.Consumers.Users.UserLockedOutLogger.OnEvent(Jellyfin.Data.Events.Users.UserLockedOutEventArgs)\">\n            <inheritdoc />\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.Consumers.Users.UserPasswordChangedLogger\">\n            <summary>\n            Creates an entry in the activity log when a user's password is changed.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 1082,
                  "startColumn": 59,
                  "endLine": 1082,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 1080,
                  "startColumn": 67,
                  "endLine": 1080,
                  "endColumn": 71,
                  "snippet": {
                    "text": "se if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.ValidUsernameRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "se if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.ValidUsernameRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`se if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.ValidUsernameRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 982,
                  "startColumn": 22,
                  "endLine": 982,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a character in the set [ '-.@_\\w] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                    "rendered": {
                      "text": "            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a character in the set [ '-.@_\\w] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                      "markdown": "`            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a character in the set [ '-.@_\\w] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n            </remarks>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 981,
                  "startColumn": 64,
                  "endLine": 981,
                  "endColumn": 68,
                  "snippet": {
                    "text": "            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a character in the set [ '-.@_\\w] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n            </remarks>\n",
                    "rendered": {
                      "text": "            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a character in the set [ '-.@_\\w] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n            </remarks>\n",
                      "markdown": "`            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a character in the set [ '-.@_\\w] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n            </remarks>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 980,
                  "startColumn": 22,
                  "endLine": 980,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            <code>^[\\\\w\\\\ \\\\-'._@]+$</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a character in the set [ '-.@_\\w] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n",
                    "rendered": {
                      "text": "            <code>^[\\\\w\\\\ \\\\-'._@]+$</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a character in the set [ '-.@_\\w] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n",
                      "markdown": "`            <code>^[\\\\w\\\\ \\\\-'._@]+$</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match a character in the set [ '-.@_\\w] atomically at least once.<br/>\n            ○ Match if at the end of the string or if before an ending newline.<br/>\n            </code>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 1088,
                  "startColumn": 28,
                  "endLine": 1088,
                  "endColumn": 37,
                  "snippet": {
                    "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                    "rendered": {
                      "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                      "markdown": "`rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 631,
                  "startColumn": 22,
                  "endLine": 631,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Migrations.DesignTimeJellyfinDbFactory\">\n            <summary>\n            The design time factory for <see cref=\"T:Jellyfin.Server.Implementations.JellyfinDbContext\"/>.\n            This is only used for the creation of migrations and not during runtime.\n            </summary>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Migrations.DesignTimeJellyfinDbFactory\">\n            <summary>\n            The design time factory for <see cref=\"T:Jellyfin.Server.Implementations.JellyfinDbContext\"/>.\n            This is only used for the creation of migrations and not during runtime.\n            </summary>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Migrations.DesignTimeJellyfinDbFactory\">\n            <summary>\n            The design time factory for <see cref=\"T:Jellyfin.Server.Implementations.JellyfinDbContext\"/>.\n            This is only used for the creation of migrations and not during runtime.\n            </summary>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 511,
                  "startColumn": 32,
                  "endLine": 511,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            Adds the <see cref=\"T:Microsoft.EntityFrameworkCore.IDbContextFactory`1\"/> interface to the service collection with second level caching enabled.\n            </summary>\n            <param name=\"serviceCollection\">An instance of the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/> interface.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.JellyfinDbContext\">\n            <inheritdoc/>\n",
                    "rendered": {
                      "text": "            Adds the <see cref=\"T:Microsoft.EntityFrameworkCore.IDbContextFactory`1\"/> interface to the service collection with second level caching enabled.\n            </summary>\n            <param name=\"serviceCollection\">An instance of the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/> interface.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.JellyfinDbContext\">\n            <inheritdoc/>\n",
                      "markdown": "`            Adds the <see cref=\"T:Microsoft.EntityFrameworkCore.IDbContextFactory`1\"/> interface to the service collection with second level caching enabled.\n            </summary>\n            <param name=\"serviceCollection\">An instance of the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/> interface.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.JellyfinDbContext\">\n            <inheritdoc/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 103,
                  "endLine": 508,
                  "endColumn": 112,
                  "snippet": {
                    "text": "    <member name=\"M:Jellyfin.Server.Implementations.Extensions.ServiceCollectionExtensions.AddJellyfinDbContext(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Adds the <see cref=\"T:Microsoft.EntityFrameworkCore.IDbContextFactory`1\"/> interface to the service collection with second level caching enabled.\n            </summary>\n            <param name=\"serviceCollection\">An instance of the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/> interface.</param>\n            <returns>The updated service collection.</returns>\n        </",
                    "rendered": {
                      "text": "    <member name=\"M:Jellyfin.Server.Implementations.Extensions.ServiceCollectionExtensions.AddJellyfinDbContext(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Adds the <see cref=\"T:Microsoft.EntityFrameworkCore.IDbContextFactory`1\"/> interface to the service collection with second level caching enabled.\n            </summary>\n            <param name=\"serviceCollection\">An instance of the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/> interface.</param>\n            <returns>The updated service collection.</returns>\n        </",
                      "markdown": "`    <member name=\"M:Jellyfin.Server.Implementations.Extensions.ServiceCollectionExtensions.AddJellyfinDbContext(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Adds the <see cref=\"T:Microsoft.EntityFrameworkCore.IDbContextFactory`1\"/> interface to the service collection with second level caching enabled.\n            </summary>\n            <param name=\"serviceCollection\">An instance of the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/> interface.</param>\n            <returns>The updated service collection.</returns>\n        </`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 481,
                  "startColumn": 40,
                  "endLine": 481,
                  "endColumn": 49,
                  "snippet": {
                    "text": "            <summary>\n            Adds the event services to the service collection.\n            </summary>\n            <param name=\"collection\">The service collection.</param>\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.EventManager\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Adds the event services to the service collection.\n            </summary>\n            <param name=\"collection\">The service collection.</param>\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.EventManager\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Adds the event services to the service collection.\n            </summary>\n            <param name=\"collection\">The service collection.</param>\n        </member>\n        <member name=\"T:Jellyfin.Server.Implementations.Events.EventManager\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Server.Implementations.xml"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 42,
                  "endLine": 479,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.EventingServiceCollectionExtensions.AddEventServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Adds the event services to the service collection.\n            </summary>\n            <param name=\"collection\">The service collection.</param>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.EventingServiceCollectionExtensions.AddEventServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Adds the event services to the service collection.\n            </summary>\n            <param name=\"collection\">The service collection.</param>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Server.Implementations.Events.EventingServiceCollectionExtensions.AddEventServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)\">\n            <summary>\n            Adds the event services to the service collection.\n            </summary>\n            <param name=\"collection\">The service collection.</param>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Extensions.xml"
                },
                "region": {
                  "startLine": 696,
                  "startColumn": 59,
                  "endLine": 696,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Extensions.xml"
                },
                "region": {
                  "startLine": 694,
                  "startColumn": 67,
                  "endLine": 694,
                  "endColumn": 71,
                  "snippet": {
                    "text": "o more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.NonConformingUnicodeRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "o more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.NonConformingUnicodeRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`o more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.NonConformingUnicodeRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Extensions.xml"
                },
                "region": {
                  "startLine": 532,
                  "startColumn": 40,
                  "endLine": 532,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Jellyfin.Extensions.SplitStringExtensions.Enumerator.Current\">\n            <summary>\n            Gets a reference to the item at the current position of the enumerator.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Extensions.SplitStringExtensions.Enumerator.GetEnumerator\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Jellyfin.Extensions.SplitStringExtensions.Enumerator.Current\">\n            <summary>\n            Gets a reference to the item at the current position of the enumerator.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Extensions.SplitStringExtensions.Enumerator.GetEnumerator\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Jellyfin.Extensions.SplitStringExtensions.Enumerator.Current\">\n            <summary>\n            Gets a reference to the item at the current position of the enumerator.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.Extensions.SplitStringExtensions.Enumerator.GetEnumerator\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Extensions.xml"
                },
                "region": {
                  "startLine": 391,
                  "startColumn": 40,
                  "endLine": 392,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:Jellyfin.Extensions.Json.JsonDefaults._jsonSerializerOptions\">\n            <summary>\n            When changing these options, update\n             Jellyfin.Server/Extensions/ApiServiceCollectionExtensions.cs\n              -> AddJellyfinApi\n               -> AddJsonOptions.\n            </summary>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:Jellyfin.Extensions.Json.JsonDefaults._jsonSerializerOptions\">\n            <summary>\n            When changing these options, update\n             Jellyfin.Server/Extensions/ApiServiceCollectionExtensions.cs\n              -> AddJellyfinApi\n               -> AddJsonOptions.\n            </summary>\n",
                      "markdown": "`        </member>\n        <member name=\"F:Jellyfin.Extensions.Json.JsonDefaults._jsonSerializerOptions\">\n            <summary>\n            When changing these options, update\n             Jellyfin.Server/Extensions/ApiServiceCollectionExtensions.cs\n              -> AddJellyfinApi\n               -> AddJsonOptions.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Extensions.xml"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 20,
                  "endLine": 65,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Extensions.DictionaryExtensions.GetFirstNotNullNorWhiteSpaceValue(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.String,System.String)\">\n            <summary>\n            Gets a string from a string dictionary, checking all keys sequentially,\n            stopping at the first key that returns a result that's neither null nor blank.\n            </summary>\n            <param name=\"dictionary\">The dictionary.</param>\n            <param name=\"key1\">The first checked key.</param>\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Extensions.DictionaryExtensions.GetFirstNotNullNorWhiteSpaceValue(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.String,System.String)\">\n            <summary>\n            Gets a string from a string dictionary, checking all keys sequentially,\n            stopping at the first key that returns a result that's neither null nor blank.\n            </summary>\n            <param name=\"dictionary\">The dictionary.</param>\n            <param name=\"key1\">The first checked key.</param>\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Extensions.DictionaryExtensions.GetFirstNotNullNorWhiteSpaceValue(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.String,System.String)\">\n            <summary>\n            Gets a string from a string dictionary, checking all keys sequentially,\n            stopping at the first key that returns a result that's neither null nor blank.\n            </summary>\n            <param name=\"dictionary\">The dictionary.</param>\n            <param name=\"key1\">The first checked key.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Extensions.xml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 20,
                  "endLine": 55,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Extensions.DictionaryExtensions.GetFirstNotNullNorWhiteSpaceValue(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.String)\">\n            <summary>\n            Gets a string from a string dictionary, checking all keys sequentially,\n            stopping at the first key that returns a result that's neither null nor blank.\n            </summary>\n            <param name=\"dictionary\">The dictionary.</param>\n            <param name=\"key1\">The first checked key.</param>\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Extensions.DictionaryExtensions.GetFirstNotNullNorWhiteSpaceValue(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.String)\">\n            <summary>\n            Gets a string from a string dictionary, checking all keys sequentially,\n            stopping at the first key that returns a result that's neither null nor blank.\n            </summary>\n            <param name=\"dictionary\">The dictionary.</param>\n            <param name=\"key1\">The first checked key.</param>\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Extensions.DictionaryExtensions.GetFirstNotNullNorWhiteSpaceValue(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.String)\">\n            <summary>\n            Gets a string from a string dictionary, checking all keys sequentially,\n            stopping at the first key that returns a result that's neither null nor blank.\n            </summary>\n            <param name=\"dictionary\">The dictionary.</param>\n            <param name=\"key1\">The first checked key.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Extensions.xml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 20,
                  "endLine": 46,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        <member name=\"M:Jellyfin.Extensions.DictionaryExtensions.GetFirstNotNullNorWhiteSpaceValue(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String)\">\n            <summary>\n            Gets a string from a string dictionary, checking all keys sequentially,\n            stopping at the first key that returns a result that's neither null nor blank.\n            </summary>\n            <param name=\"dictionary\">The dictionary.</param>\n            <param name=\"key1\">The first checked key.</param>\n",
                    "rendered": {
                      "text": "        <member name=\"M:Jellyfin.Extensions.DictionaryExtensions.GetFirstNotNullNorWhiteSpaceValue(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String)\">\n            <summary>\n            Gets a string from a string dictionary, checking all keys sequentially,\n            stopping at the first key that returns a result that's neither null nor blank.\n            </summary>\n            <param name=\"dictionary\">The dictionary.</param>\n            <param name=\"key1\">The first checked key.</param>\n",
                      "markdown": "`        <member name=\"M:Jellyfin.Extensions.DictionaryExtensions.GetFirstNotNullNorWhiteSpaceValue(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String)\">\n            <summary>\n            Gets a string from a string dictionary, checking all keys sequentially,\n            stopping at the first key that returns a result that's neither null nor blank.\n            </summary>\n            <param name=\"dictionary\">The dictionary.</param>\n            <param name=\"key1\">The first checked key.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Extensions.xml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 96,
                  "endLine": 35,
                  "endColumn": 100,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"source\">The current collection that is the source of the elements.</param>\n            <param name=\"destination\">The list that is the destination of the elements copied from the current collection.</param>\n            <param name=\"index\">A 32-bit integer that represents the index in <c>destination</c> at which copying begins.</param>\n            <typeparam name=\"T\">The type of the array.</typeparam>\n        </member>\n        <member name=\"T:Jellyfin.Extensions.DictionaryExtensions\">\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"source\">The current collection that is the source of the elements.</param>\n            <param name=\"destination\">The list that is the destination of the elements copied from the current collection.</param>\n            <param name=\"index\">A 32-bit integer that represents the index in <c>destination</c> at which copying begins.</param>\n            <typeparam name=\"T\">The type of the array.</typeparam>\n        </member>\n        <member name=\"T:Jellyfin.Extensions.DictionaryExtensions\">\n",
                      "markdown": "`            </summary>\n            <param name=\"source\">The current collection that is the source of the elements.</param>\n            <param name=\"destination\">The list that is the destination of the elements copied from the current collection.</param>\n            <param name=\"index\">A 32-bit integer that represents the index in <c>destination</c> at which copying begins.</param>\n            <typeparam name=\"T\">The type of the array.</typeparam>\n        </member>\n        <member name=\"T:Jellyfin.Extensions.DictionaryExtensions\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Extensions.xml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 20,
                  "endLine": 31,
                  "endColumn": 24,
                  "snippet": {
                    "text": "r>\n        <member name=\"M:Jellyfin.Extensions.CopyToExtensions.CopyTo``1(System.Collections.Generic.IReadOnlyList{``0},System.Collections.Generic.IList{``0},System.Int32)\">\n            <summary>\n            Copies all the elements of the current collection to the specified list\n            starting at the specified destination array index. The index is specified as a 32-bit integer.\n            </summary>\n            <param name=\"source\">The current collection that is the source of the elements.</param>\n            <param name=\"destination\">The list that is the destination of the elements copied ",
                    "rendered": {
                      "text": "r>\n        <member name=\"M:Jellyfin.Extensions.CopyToExtensions.CopyTo``1(System.Collections.Generic.IReadOnlyList{``0},System.Collections.Generic.IList{``0},System.Int32)\">\n            <summary>\n            Copies all the elements of the current collection to the specified list\n            starting at the specified destination array index. The index is specified as a 32-bit integer.\n            </summary>\n            <param name=\"source\">The current collection that is the source of the elements.</param>\n            <param name=\"destination\">The list that is the destination of the elements copied ",
                      "markdown": "`r>\n        <member name=\"M:Jellyfin.Extensions.CopyToExtensions.CopyTo``1(System.Collections.Generic.IReadOnlyList{``0},System.Collections.Generic.IList{``0},System.Int32)\">\n            <summary>\n            Copies all the elements of the current collection to the specified list\n            starting at the specified destination array index. The index is specified as a 32-bit integer.\n            </summary>\n            <param name=\"source\">The current collection that is the source of the elements.</param>\n            <param name=\"destination\">The list that is the destination of the elements copied `"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Extensions.xml"
                },
                "region": {
                  "startLine": 702,
                  "startColumn": 28,
                  "endLine": 702,
                  "endColumn": 37,
                  "snippet": {
                    "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                    "rendered": {
                      "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                      "markdown": "`rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.LocalMetadata.xml"
                },
                "region": {
                  "startLine": 428,
                  "startColumn": 55,
                  "endLine": 428,
                  "endColumn": 61,
                  "snippet": {
                    "text": "            <param name=\"item\">The item.</param>\n            <param name=\"writer\">The xml writer.</param>\n            <param name=\"pluralNodeName\">The plural node name.</param>\n            <param name=\"singularNodeName\">The singular node name.</param>\n            <returns>The task object representing the asynchronous operation.</returns>\n        </member>\n        <member name=\"T:MediaBrowser.LocalMetadata.Savers.BoxSetXmlSaver\">\n",
                    "rendered": {
                      "text": "            <param name=\"item\">The item.</param>\n            <param name=\"writer\">The xml writer.</param>\n            <param name=\"pluralNodeName\">The plural node name.</param>\n            <param name=\"singularNodeName\">The singular node name.</param>\n            <returns>The task object representing the asynchronous operation.</returns>\n        </member>\n        <member name=\"T:MediaBrowser.LocalMetadata.Savers.BoxSetXmlSaver\">\n",
                      "markdown": "`            <param name=\"item\">The item.</param>\n            <param name=\"writer\">The xml writer.</param>\n            <param name=\"pluralNodeName\">The plural node name.</param>\n            <param name=\"singularNodeName\">The singular node name.</param>\n            <returns>The task object representing the asynchronous operation.</returns>\n        </member>\n        <member name=\"T:MediaBrowser.LocalMetadata.Savers.BoxSetXmlSaver\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.LocalMetadata.xml"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 51,
                  "endLine": 427,
                  "endColumn": 57,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"item\">The item.</param>\n            <param name=\"writer\">The xml writer.</param>\n            <param name=\"pluralNodeName\">The plural node name.</param>\n            <param name=\"singularNodeName\">The singular node name.</param>\n            <returns>The task object representing the asynchronous operation.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"item\">The item.</param>\n            <param name=\"writer\">The xml writer.</param>\n            <param name=\"pluralNodeName\">The plural node name.</param>\n            <param name=\"singularNodeName\">The singular node name.</param>\n            <returns>The task object representing the asynchronous operation.</returns>\n        </member>\n",
                      "markdown": "`            </summary>\n            <param name=\"item\">The item.</param>\n            <param name=\"writer\">The xml writer.</param>\n            <param name=\"pluralNodeName\">The plural node name.</param>\n            <param name=\"singularNodeName\">The singular node name.</param>\n            <returns>The task object representing the asynchronous operation.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 823,
                  "startColumn": 29,
                  "endLine": 823,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePassword\">\n            <summary>\n            Gets or sets the password required to access the X.509 certificate data in the file specified by <see cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePath\"/>.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.InternalHttpPort\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePassword\">\n            <summary>\n            Gets or sets the password required to access the X.509 certificate data in the file specified by <see cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePath\"/>.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.InternalHttpPort\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePassword\">\n            <summary>\n            Gets or sets the password required to access the X.509 certificate data in the file specified by <see cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePath\"/>.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.InternalHttpPort\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 821,
                  "startColumn": 80,
                  "endLine": 821,
                  "endColumn": 88,
                  "snippet": {
                    "text": "            Gets or sets the filesystem path of an X.509 certificate to use for SSL.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePassword\">\n            <summary>\n            Gets or sets the password required to access the X.509 certificate data in the file specified by <see cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePath\"/>.\n            </summary>\n",
                    "rendered": {
                      "text": "            Gets or sets the filesystem path of an X.509 certificate to use for SSL.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePassword\">\n            <summary>\n            Gets or sets the password required to access the X.509 certificate data in the file specified by <see cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePath\"/>.\n            </summary>\n",
                      "markdown": "`            Gets or sets the filesystem path of an X.509 certificate to use for SSL.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePassword\">\n            <summary>\n            Gets or sets the password required to access the X.509 certificate data in the file specified by <see cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePath\"/>.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 808,
                  "startColumn": 175,
                  "endLine": 808,
                  "endColumn": 183,
                  "snippet": {
                    "text": "            </summary>\n            <remarks>\n            In order for HTTPS to be used, in addition to setting this to true, valid values must also be\n            provided for <see cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePath\"/> and <see cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePassword\"/>.\n            </remarks>\n        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.RequireHttps\">\n",
                    "rendered": {
                      "text": "            </summary>\n            <remarks>\n            In order for HTTPS to be used, in addition to setting this to true, valid values must also be\n            provided for <see cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePath\"/> and <see cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePassword\"/>.\n            </remarks>\n        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.RequireHttps\">\n",
                      "markdown": "`            </summary>\n            <remarks>\n            In order for HTTPS to be used, in addition to setting this to true, valid values must also be\n            provided for <see cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePath\"/> and <see cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.CertificatePassword\"/>.\n            </remarks>\n        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.RequireHttps\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1823,
                  "startColumn": 59,
                  "endLine": 1823,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1821,
                  "startColumn": 67,
                  "endLine": 1821,
                  "endColumn": 71,
                  "snippet": {
                    "text": "se if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.FqdnGeneratedRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "se if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.FqdnGeneratedRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`se if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.FqdnGeneratedRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1791,
                  "startColumn": 59,
                  "endLine": 1791,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.FqdnGeneratedRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the FqdnGeneratedRegex method.</summary>\n     ",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.FqdnGeneratedRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the FqdnGeneratedRegex method.</summary>\n     ",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.FqdnGeneratedRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the FqdnGeneratedRegex method.</summary>\n     `"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1789,
                  "startColumn": 67,
                  "endLine": 1789,
                  "endColumn": 71,
                  "snippet": {
                    "text": " false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.StripHtmlRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": " false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.StripHtmlRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "` false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.StripHtmlRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1682,
                  "startColumn": 36,
                  "endLine": 1682,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Common.Updates.IInstallationManager.GetPackages(System.String,System.String,System.Boolean,System.Threading.CancellationToken)\">\n            <summary>\n            Parses a plugin manifest at the supplied URL.\n            </summary>\n            <param name=\"manifestName\">Name of the repository.</param>\n            <param name=\"manifest\">The URL to query.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Common.Updates.IInstallationManager.GetPackages(System.String,System.String,System.Boolean,System.Threading.CancellationToken)\">\n            <summary>\n            Parses a plugin manifest at the supplied URL.\n            </summary>\n            <param name=\"manifestName\">Name of the repository.</param>\n            <param name=\"manifest\">The URL to query.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Common.Updates.IInstallationManager.GetPackages(System.String,System.String,System.Boolean,System.Threading.CancellationToken)\">\n            <summary>\n            Parses a plugin manifest at the supplied URL.\n            </summary>\n            <param name=\"manifestName\">Name of the repository.</param>\n            <param name=\"manifest\">The URL to query.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1069,
                  "startColumn": 22,
                  "endLine": 1069,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                    ○ Loop greedily at least 1 and at most 5 times.<br/>\n                        ○ 4th capture group.<br/>\n                            ○ Match a Unicode digit.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                    "rendered": {
                      "text": "                    ○ Loop greedily at least 1 and at most 5 times.<br/>\n                        ○ 4th capture group.<br/>\n                            ○ Match a Unicode digit.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                      "markdown": "`                    ○ Loop greedily at least 1 and at most 5 times.<br/>\n                        ○ 4th capture group.<br/>\n                            ○ Match a Unicode digit.<br/>\n            ○ Match if at the end of a line.<br/>\n            </code>\n            </remarks>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1066,
                  "startColumn": 50,
                  "endLine": 1066,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            ○ Optional (greedy).<br/>\n                ○ 3rd capture group.<br/>\n                    ○ Match ':'.<br/>\n                    ○ Loop greedily at least 1 and at most 5 times.<br/>\n                        ○ 4th capture group.<br/>\n                            ○ Match a Unicode digit.<br/>\n            ○ Match if at the end of a line.<br/>\n",
                    "rendered": {
                      "text": "            ○ Optional (greedy).<br/>\n                ○ 3rd capture group.<br/>\n                    ○ Match ':'.<br/>\n                    ○ Loop greedily at least 1 and at most 5 times.<br/>\n                        ○ 4th capture group.<br/>\n                            ○ Match a Unicode digit.<br/>\n            ○ Match if at the end of a line.<br/>\n",
                      "markdown": "`            ○ Optional (greedy).<br/>\n                ○ 3rd capture group.<br/>\n                    ○ Match ':'.<br/>\n                    ○ Loop greedily at least 1 and at most 5 times.<br/>\n                        ○ 4th capture group.<br/>\n                            ○ Match a Unicode digit.<br/>\n            ○ Match if at the end of a line.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1066,
                  "startColumn": 35,
                  "endLine": 1066,
                  "endColumn": 39,
                  "snippet": {
                    "text": "            ○ Optional (greedy).<br/>\n                ○ 3rd capture group.<br/>\n                    ○ Match ':'.<br/>\n                    ○ Loop greedily at least 1 and at most 5 times.<br/>\n                        ○ 4th capture group.<br/>\n                            ○ Match a Unicode digit.<br/>\n            ○ Match if at the end of a line.<br/>\n",
                    "rendered": {
                      "text": "            ○ Optional (greedy).<br/>\n                ○ 3rd capture group.<br/>\n                    ○ Match ':'.<br/>\n                    ○ Loop greedily at least 1 and at most 5 times.<br/>\n                        ○ 4th capture group.<br/>\n                            ○ Match a Unicode digit.<br/>\n            ○ Match if at the end of a line.<br/>\n",
                      "markdown": "`            ○ Optional (greedy).<br/>\n                ○ 3rd capture group.<br/>\n                    ○ Match ':'.<br/>\n                    ○ Loop greedily at least 1 and at most 5 times.<br/>\n                        ○ 4th capture group.<br/>\n                            ○ Match a Unicode digit.<br/>\n            ○ Match if at the end of a line.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1061,
                  "startColumn": 80,
                  "endLine": 1061,
                  "endColumn": 84,
                  "snippet": {
                    "text": "                ○ Zero-width negative lookahead.<br/>\n                    ○ Match a character in the set [0-9] atomically any number of times.<br/>\n                    ○ Match if at the end of a line.<br/>\n                ○ Match a character in the set [-0-9A-Za-z\\u0130\\u212A] greedily at least once.<br/>\n                ○ Match '.' greedily, optionally.<br/>\n            ○ Optional (greedy).<br/>\n                ○ 3rd capture group.<br/>\n",
                    "rendered": {
                      "text": "                ○ Zero-width negative lookahead.<br/>\n                    ○ Match a character in the set [0-9] atomically any number of times.<br/>\n                    ○ Match if at the end of a line.<br/>\n                ○ Match a character in the set [-0-9A-Za-z\\u0130\\u212A] greedily at least once.<br/>\n                ○ Match '.' greedily, optionally.<br/>\n            ○ Optional (greedy).<br/>\n                ○ 3rd capture group.<br/>\n",
                      "markdown": "`                ○ Zero-width negative lookahead.<br/>\n                    ○ Match a character in the set [0-9] atomically any number of times.<br/>\n                    ○ Match if at the end of a line.<br/>\n                ○ Match a character in the set [-0-9A-Za-z\\u0130\\u212A] greedily at least once.<br/>\n                ○ Match '.' greedily, optionally.<br/>\n            ○ Optional (greedy).<br/>\n                ○ 3rd capture group.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1060,
                  "startColumn": 30,
                  "endLine": 1060,
                  "endColumn": 34,
                  "snippet": {
                    "text": "                        ○ Match '.'.<br/>\n                ○ Zero-width negative lookahead.<br/>\n                    ○ Match a character in the set [0-9] atomically any number of times.<br/>\n                    ○ Match if at the end of a line.<br/>\n                ○ Match a character in the set [-0-9A-Za-z\\u0130\\u212A] greedily at least once.<br/>\n                ○ Match '.' greedily, optionally.<br/>\n            ○ Optional (greedy).<br/>\n",
                    "rendered": {
                      "text": "                        ○ Match '.'.<br/>\n                ○ Zero-width negative lookahead.<br/>\n                    ○ Match a character in the set [0-9] atomically any number of times.<br/>\n                    ○ Match if at the end of a line.<br/>\n                ○ Match a character in the set [-0-9A-Za-z\\u0130\\u212A] greedily at least once.<br/>\n                ○ Match '.' greedily, optionally.<br/>\n            ○ Optional (greedy).<br/>\n",
                      "markdown": "`                        ○ Match '.'.<br/>\n                ○ Zero-width negative lookahead.<br/>\n                    ○ Match a character in the set [0-9] atomically any number of times.<br/>\n                    ○ Match if at the end of a line.<br/>\n                ○ Match a character in the set [-0-9A-Za-z\\u0130\\u212A] greedily at least once.<br/>\n                ○ Match '.' greedily, optionally.<br/>\n            ○ Optional (greedy).<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1056,
                  "startColumn": 83,
                  "endLine": 1056,
                  "endColumn": 87,
                  "snippet": {
                    "text": "            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n                    ○ 2nd capture group.<br/>\n                        ○ Match a character other than '\\n' greedily at least 1 and at most 63 times.<br/>\n                        ○ Match '.'.<br/>\n                ○ Zero-width negative lookahead.<br/>\n                    ○ Match a character in the set [0-9] atomically any number of times.<br/>\n",
                    "rendered": {
                      "text": "            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n                    ○ 2nd capture group.<br/>\n                        ○ Match a character other than '\\n' greedily at least 1 and at most 63 times.<br/>\n                        ○ Match '.'.<br/>\n                ○ Zero-width negative lookahead.<br/>\n                    ○ Match a character in the set [0-9] atomically any number of times.<br/>\n",
                      "markdown": "`            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n                    ○ 2nd capture group.<br/>\n                        ○ Match a character other than '\\n' greedily at least 1 and at most 63 times.<br/>\n                        ○ Match '.'.<br/>\n                ○ Zero-width negative lookahead.<br/>\n                    ○ Match a character in the set [0-9] atomically any number of times.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1056,
                  "startColumn": 68,
                  "endLine": 1056,
                  "endColumn": 72,
                  "snippet": {
                    "text": "            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n                    ○ 2nd capture group.<br/>\n                        ○ Match a character other than '\\n' greedily at least 1 and at most 63 times.<br/>\n                        ○ Match '.'.<br/>\n                ○ Zero-width negative lookahead.<br/>\n                    ○ Match a character in the set [0-9] atomically any number of times.<br/>\n",
                    "rendered": {
                      "text": "            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n                    ○ 2nd capture group.<br/>\n                        ○ Match a character other than '\\n' greedily at least 1 and at most 63 times.<br/>\n                        ○ Match '.'.<br/>\n                ○ Zero-width negative lookahead.<br/>\n                    ○ Match a character in the set [0-9] atomically any number of times.<br/>\n",
                      "markdown": "`            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n                    ○ 2nd capture group.<br/>\n                        ○ Match a character other than '\\n' greedily at least 1 and at most 63 times.<br/>\n                        ○ Match '.'.<br/>\n                ○ Zero-width negative lookahead.<br/>\n                    ○ Match a character in the set [0-9] atomically any number of times.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1054,
                  "startColumn": 31,
                  "endLine": 1054,
                  "endColumn": 35,
                  "snippet": {
                    "text": "                ○ Match a character other than '\\n' greedily at least 1 and at most 255 times.<br/>\n                ○ Match if at the end of a line.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n                    ○ 2nd capture group.<br/>\n                        ○ Match a character other than '\\n' greedily at least 1 and at most 63 times.<br/>\n                        ○ Match '.'.<br/>\n",
                    "rendered": {
                      "text": "                ○ Match a character other than '\\n' greedily at least 1 and at most 255 times.<br/>\n                ○ Match if at the end of a line.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n                    ○ 2nd capture group.<br/>\n                        ○ Match a character other than '\\n' greedily at least 1 and at most 63 times.<br/>\n                        ○ Match '.'.<br/>\n",
                      "markdown": "`                ○ Match a character other than '\\n' greedily at least 1 and at most 255 times.<br/>\n                ○ Match if at the end of a line.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n                    ○ 2nd capture group.<br/>\n                        ○ Match a character other than '\\n' greedily at least 1 and at most 63 times.<br/>\n                        ○ Match '.'.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1052,
                  "startColumn": 26,
                  "endLine": 1052,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                ○ Match the string \"://\".<br/>\n            ○ Zero-width positive lookahead.<br/>\n                ○ Match a character other than '\\n' greedily at least 1 and at most 255 times.<br/>\n                ○ Match if at the end of a line.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n                    ○ 2nd capture group.<br/>\n",
                    "rendered": {
                      "text": "                ○ Match the string \"://\".<br/>\n            ○ Zero-width positive lookahead.<br/>\n                ○ Match a character other than '\\n' greedily at least 1 and at most 255 times.<br/>\n                ○ Match if at the end of a line.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n                    ○ 2nd capture group.<br/>\n",
                      "markdown": "`                ○ Match the string \"://\".<br/>\n            ○ Zero-width positive lookahead.<br/>\n                ○ Match a character other than '\\n' greedily at least 1 and at most 255 times.<br/>\n                ○ Match if at the end of a line.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n                    ○ 2nd capture group.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1051,
                  "startColumn": 75,
                  "endLine": 1051,
                  "endColumn": 79,
                  "snippet": {
                    "text": "            ○ Zero-width negative lookahead.<br/>\n                ○ Match the string \"://\".<br/>\n            ○ Zero-width positive lookahead.<br/>\n                ○ Match a character other than '\\n' greedily at least 1 and at most 255 times.<br/>\n                ○ Match if at the end of a line.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n",
                    "rendered": {
                      "text": "            ○ Zero-width negative lookahead.<br/>\n                ○ Match the string \"://\".<br/>\n            ○ Zero-width positive lookahead.<br/>\n                ○ Match a character other than '\\n' greedily at least 1 and at most 255 times.<br/>\n                ○ Match if at the end of a line.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n",
                      "markdown": "`            ○ Zero-width negative lookahead.<br/>\n                ○ Match the string \"://\".<br/>\n            ○ Zero-width positive lookahead.<br/>\n                ○ Match a character other than '\\n' greedily at least 1 and at most 255 times.<br/>\n                ○ Match if at the end of a line.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1051,
                  "startColumn": 60,
                  "endLine": 1051,
                  "endColumn": 64,
                  "snippet": {
                    "text": "            ○ Zero-width negative lookahead.<br/>\n                ○ Match the string \"://\".<br/>\n            ○ Zero-width positive lookahead.<br/>\n                ○ Match a character other than '\\n' greedily at least 1 and at most 255 times.<br/>\n                ○ Match if at the end of a line.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n",
                    "rendered": {
                      "text": "            ○ Zero-width negative lookahead.<br/>\n                ○ Match the string \"://\".<br/>\n            ○ Zero-width positive lookahead.<br/>\n                ○ Match a character other than '\\n' greedily at least 1 and at most 255 times.<br/>\n                ○ Match if at the end of a line.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n",
                      "markdown": "`            ○ Zero-width negative lookahead.<br/>\n                ○ Match the string \"://\".<br/>\n            ○ Zero-width positive lookahead.<br/>\n                ○ Match a character other than '\\n' greedily at least 1 and at most 255 times.<br/>\n                ○ Match if at the end of a line.<br/>\n            ○ 1st capture group.<br/>\n                ○ Loop greedily at most 127 times.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1047,
                  "startColumn": 22,
                  "endLine": 1047,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            <code>RegexOptions.IgnoreCase</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of a line.<br/>\n            ○ Zero-width negative lookahead.<br/>\n                ○ Match the string \"://\".<br/>\n            ○ Zero-width positive lookahead.<br/>\n",
                    "rendered": {
                      "text": "            <code>RegexOptions.IgnoreCase</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of a line.<br/>\n            ○ Zero-width negative lookahead.<br/>\n                ○ Match the string \"://\".<br/>\n            ○ Zero-width positive lookahead.<br/>\n",
                      "markdown": "`            <code>RegexOptions.IgnoreCase</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of a line.<br/>\n            ○ Zero-width negative lookahead.<br/>\n                ○ Match the string \"://\".<br/>\n            ○ Zero-width positive lookahead.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 112,
                  "endLine": 252,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Common.Configuration.IConfigurationFactory\">\n            <summary>\n            Provides an interface to retrieve a configuration store. Classes with this interface are scanned for at\n            application start to dynamically register configuration for various modules/plugins.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Common.Configuration.IConfigurationFactory.GetConfigurations\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Common.Configuration.IConfigurationFactory\">\n            <summary>\n            Provides an interface to retrieve a configuration store. Classes with this interface are scanned for at\n            application start to dynamically register configuration for various modules/plugins.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Common.Configuration.IConfigurationFactory.GetConfigurations\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Common.Configuration.IConfigurationFactory\">\n            <summary>\n            Provides an interface to retrieve a configuration store. Classes with this interface are scanned for at\n            application start to dynamically register configuration for various modules/plugins.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Common.Configuration.IConfigurationFactory.GetConfigurations\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1829,
                  "startColumn": 28,
                  "endLine": 1829,
                  "endColumn": 37,
                  "snippet": {
                    "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                    "rendered": {
                      "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                      "markdown": "`rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 1458,
                  "startColumn": 23,
                  "endLine": 1458,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Common.Plugins.IPluginManager.GetPlugin(System.Guid,System.Version)\">\n            <summary>\n            Attempts to find the plugin with and id of <paramref name=\"id\"/>.\n            </summary>\n            <param name=\"id\">Id of plugin.</param>\n            <param name=\"version\">The version of the plugin to locate.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Common.Plugins.IPluginManager.GetPlugin(System.Guid,System.Version)\">\n            <summary>\n            Attempts to find the plugin with and id of <paramref name=\"id\"/>.\n            </summary>\n            <param name=\"id\">Id of plugin.</param>\n            <param name=\"version\">The version of the plugin to locate.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Common.Plugins.IPluginManager.GetPlugin(System.Guid,System.Version)\">\n            <summary>\n            Attempts to find the plugin with and id of <paramref name=\"id\"/>.\n            </summary>\n            <param name=\"id\">Id of plugin.</param>\n            <param name=\"version\">The version of the plugin to locate.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 913,
                  "startColumn": 46,
                  "endLine": 913,
                  "endColumn": 50,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.RemoteIPFilter\">\n            <summary>\n            Gets or sets the filter for remote IP connectivity. Used in conjunction with <seealso cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.IsRemoteIPFilterBlacklist\"/>.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.IsRemoteIPFilterBlacklist\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.RemoteIPFilter\">\n            <summary>\n            Gets or sets the filter for remote IP connectivity. Used in conjunction with <seealso cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.IsRemoteIPFilterBlacklist\"/>.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.IsRemoteIPFilterBlacklist\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.RemoteIPFilter\">\n            <summary>\n            Gets or sets the filter for remote IP connectivity. Used in conjunction with <seealso cref=\"P:MediaBrowser.Common.Net.NetworkConfiguration.IsRemoteIPFilterBlacklist\"/>.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Common.Net.NetworkConfiguration.IsRemoteIPFilterBlacklist\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 741,
                  "startColumn": 51,
                  "endLine": 741,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            eg. \"eth1\", or \"enp3s5\".\n            </summary>\n            <param name=\"intf\">Interface name.</param>\n            <param name=\"result\">Resulting object's IP addresses, if successful.</param>\n            <returns>Success of the operation.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Common.Net.INetworkManager.GetInternalBindAddresses\">\n",
                    "rendered": {
                      "text": "            eg. \"eth1\", or \"enp3s5\".\n            </summary>\n            <param name=\"intf\">Interface name.</param>\n            <param name=\"result\">Resulting object's IP addresses, if successful.</param>\n            <returns>Success of the operation.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Common.Net.INetworkManager.GetInternalBindAddresses\">\n",
                      "markdown": "`            eg. \"eth1\", or \"enp3s5\".\n            </summary>\n            <param name=\"intf\">Interface name.</param>\n            <param name=\"result\">Resulting object's IP addresses, if successful.</param>\n            <returns>Success of the operation.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Common.Net.INetworkManager.GetInternalBindAddresses\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 737,
                  "startColumn": 56,
                  "endLine": 737,
                  "endColumn": 60,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Common.Net.INetworkManager.TryParseInterface(System.String,System.Collections.Generic.IReadOnlyList{MediaBrowser.Model.Net.IPData}@)\">\n            <summary>\n            Attempts to convert the interface name to an IP address.\n            eg. \"eth1\", or \"enp3s5\".\n            </summary>\n            <param name=\"intf\">Interface name.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Common.Net.INetworkManager.TryParseInterface(System.String,System.Collections.Generic.IReadOnlyList{MediaBrowser.Model.Net.IPData}@)\">\n            <summary>\n            Attempts to convert the interface name to an IP address.\n            eg. \"eth1\", or \"enp3s5\".\n            </summary>\n            <param name=\"intf\">Interface name.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Common.Net.INetworkManager.TryParseInterface(System.String,System.Collections.Generic.IReadOnlyList{MediaBrowser.Model.Net.IPData}@)\">\n            <summary>\n            Attempts to convert the interface name to an IP address.\n            eg. \"eth1\", or \"enp3s5\".\n            </summary>\n            <param name=\"intf\">Interface name.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 560,
                  "startColumn": 28,
                  "endLine": 560,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Common.IApplicationHost.ServiceProvider\">\n            <summary>\n            Gets or sets the service provider.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Common.IApplicationHost.ApplicationVersionString\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Common.IApplicationHost.ServiceProvider\">\n            <summary>\n            Gets or sets the service provider.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Common.IApplicationHost.ApplicationVersionString\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Common.IApplicationHost.ServiceProvider\">\n            <summary>\n            Gets or sets the service provider.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Common.IApplicationHost.ApplicationVersionString\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 456,
                  "startColumn": 69,
                  "endLine": 456,
                  "endColumn": 78,
                  "snippet": {
                    "text": "            <param name=\"process\">The process to wait for.</param>\n            <param name=\"timeout\">The duration to wait before cancelling waiting for the task.</param>\n            <returns>A task that will complete when the process has exited, cancellation has been requested, or an error occurs.</returns>\n            <exception cref=\"T:System.OperationCanceledException\">The timeout ended.</exception>\n        </member>\n        <member name=\"M:MediaBrowser.Common.Extensions.RateLimitExceededException.#ctor\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <param name=\"process\">The process to wait for.</param>\n            <param name=\"timeout\">The duration to wait before cancelling waiting for the task.</param>\n            <returns>A task that will complete when the process has exited, cancellation has been requested, or an error occurs.</returns>\n            <exception cref=\"T:System.OperationCanceledException\">The timeout ended.</exception>\n        </member>\n        <member name=\"M:MediaBrowser.Common.Extensions.RateLimitExceededException.#ctor\">\n            <summary>\n",
                      "markdown": "`            <param name=\"process\">The process to wait for.</param>\n            <param name=\"timeout\">The duration to wait before cancelling waiting for the task.</param>\n            <returns>A task that will complete when the process has exited, cancellation has been requested, or an error occurs.</returns>\n            <exception cref=\"T:System.OperationCanceledException\">The timeout ended.</exception>\n        </member>\n        <member name=\"M:MediaBrowser.Common.Extensions.RateLimitExceededException.#ctor\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 426,
                  "startColumn": 38,
                  "endLine": 426,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            Extracts the remote IP address of the caller of the HTTP context.\n            </summary>\n            <param name=\"context\">The HTTP context.</param>\n            <returns>The remote caller IP address.</returns>\n        </member>\n        <member name=\"T:MediaBrowser.Common.Extensions.MethodNotAllowedException\">\n            <summary>\n",
                    "rendered": {
                      "text": "            Extracts the remote IP address of the caller of the HTTP context.\n            </summary>\n            <param name=\"context\">The HTTP context.</param>\n            <returns>The remote caller IP address.</returns>\n        </member>\n        <member name=\"T:MediaBrowser.Common.Extensions.MethodNotAllowedException\">\n            <summary>\n",
                      "markdown": "`            Extracts the remote IP address of the caller of the HTTP context.\n            </summary>\n            <param name=\"context\">The HTTP context.</param>\n            <returns>The remote caller IP address.</returns>\n        </member>\n        <member name=\"T:MediaBrowser.Common.Extensions.MethodNotAllowedException\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 423,
                  "startColumn": 31,
                  "endLine": 423,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Common.Extensions.HttpContextExtensions.GetNormalizedRemoteIP(Microsoft.AspNetCore.Http.HttpContext)\">\n            <summary>\n            Extracts the remote IP address of the caller of the HTTP context.\n            </summary>\n            <param name=\"context\">The HTTP context.</param>\n            <returns>The remote caller IP address.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Common.Extensions.HttpContextExtensions.GetNormalizedRemoteIP(Microsoft.AspNetCore.Http.HttpContext)\">\n            <summary>\n            Extracts the remote IP address of the caller of the HTTP context.\n            </summary>\n            <param name=\"context\">The HTTP context.</param>\n            <returns>The remote caller IP address.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Common.Extensions.HttpContextExtensions.GetNormalizedRemoteIP(Microsoft.AspNetCore.Http.HttpContext)\">\n            <summary>\n            Extracts the remote IP address of the caller of the HTTP context.\n            </summary>\n            <param name=\"context\">The HTTP context.</param>\n            <returns>The remote caller IP address.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 73,
                  "endLine": 54,
                  "endColumn": 79,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.FirstTimeSetupOrIgnoreParentalControl\">\n            <summary>\n            Policy name for escaping schedule controls or requiring first time setup.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.SyncPlayHasAccess\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.FirstTimeSetupOrIgnoreParentalControl\">\n            <summary>\n            Policy name for escaping schedule controls or requiring first time setup.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.SyncPlayHasAccess\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.FirstTimeSetupOrIgnoreParentalControl\">\n            <summary>\n            Policy name for escaping schedule controls or requiring first time setup.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.SyncPlayHasAccess\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 43,
                  "endLine": 39,
                  "endColumn": 49,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.FirstTimeSetupOrDefault\">\n            <summary>\n            Policy name for requiring first time setup or default permissions.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.LocalAccessOrRequiresElevation\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.FirstTimeSetupOrDefault\">\n            <summary>\n            Policy name for requiring first time setup or default permissions.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.LocalAccessOrRequiresElevation\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.FirstTimeSetupOrDefault\">\n            <summary>\n            Policy name for requiring first time setup or default permissions.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.LocalAccessOrRequiresElevation\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Common.xml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 43,
                  "endLine": 14,
                  "endColumn": 49,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.FirstTimeSetupOrElevated\">\n            <summary>\n            Policy name for requiring first time setup or elevated privileges.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.RequiresElevation\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.FirstTimeSetupOrElevated\">\n            <summary>\n            Policy name for requiring first time setup or elevated privileges.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.RequiresElevation\">\n",
                      "markdown": "`        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.FirstTimeSetupOrElevated\">\n            <summary>\n            Policy name for requiring first time setup or elevated privileges.\n            </summary>\n        </member>\n        <member name=\"F:MediaBrowser.Common.Api.Policies.RequiresElevation\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Networking.xml"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 37,
                  "endLine": 236,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            <summary>\n             Get if the IPAddress is Link-local.\n            </summary>\n            <param name=\"address\">The IP Address.</param>\n            <returns>Bool indicates if the address is link-local.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Networking.Manager.NetworkManager.IsInLocalNetwork(System.Net.IPAddress)\">\n",
                    "rendered": {
                      "text": "            <summary>\n             Get if the IPAddress is Link-local.\n            </summary>\n            <param name=\"address\">The IP Address.</param>\n            <returns>Bool indicates if the address is link-local.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Networking.Manager.NetworkManager.IsInLocalNetwork(System.Net.IPAddress)\">\n",
                      "markdown": "`            <summary>\n             Get if the IPAddress is Link-local.\n            </summary>\n            <param name=\"address\">The IP Address.</param>\n            <returns>Bool indicates if the address is link-local.</returns>\n        </member>\n        <member name=\"M:Jellyfin.Networking.Manager.NetworkManager.IsInLocalNetwork(System.Net.IPAddress)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Networking.xml"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 48,
                  "endLine": 162,
                  "endColumn": 52,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Networking.Manager.NetworkManager.InitializeInterfaces\">\n            <summary>\n            Generate a list of all the interface ip addresses and submasks where that are in the active/unknown state.\n            Generate a list of all active mac addresses that aren't loopback addresses.\n            </summary>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Networking.Manager.NetworkManager.InitializeInterfaces\">\n            <summary>\n            Generate a list of all the interface ip addresses and submasks where that are in the active/unknown state.\n            Generate a list of all active mac addresses that aren't loopback addresses.\n            </summary>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Networking.Manager.NetworkManager.InitializeInterfaces\">\n            <summary>\n            Generate a list of all the interface ip addresses and submasks where that are in the active/unknown state.\n            Generate a list of all active mac addresses that aren't loopback addresses.\n            </summary>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.MediaEncoding.Keyframes.xml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 62,
                  "endLine": 27,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.MediaEncoding.Keyframes.FfTool.FfToolKeyframeExtractor.GetKeyframeData(System.String,System.String)\">\n            <summary>\n            Extracts the keyframes using the fftool executable at the specified path.\n            </summary>\n            <param name=\"ffToolPath\">The path to the fftool executable.</param>\n            <param name=\"filePath\">The file path.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.MediaEncoding.Keyframes.FfTool.FfToolKeyframeExtractor.GetKeyframeData(System.String,System.String)\">\n            <summary>\n            Extracts the keyframes using the fftool executable at the specified path.\n            </summary>\n            <param name=\"ffToolPath\">The path to the fftool executable.</param>\n            <param name=\"filePath\">The file path.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.MediaEncoding.Keyframes.FfTool.FfToolKeyframeExtractor.GetKeyframeData(System.String,System.String)\">\n            <summary>\n            Extracts the keyframes using the fftool executable at the specified path.\n            </summary>\n            <param name=\"ffToolPath\">The path to the fftool executable.</param>\n            <param name=\"filePath\">The file path.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.MediaEncoding.Keyframes.xml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 63,
                  "endLine": 14,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.MediaEncoding.Keyframes.FfProbe.FfProbeKeyframeExtractor.GetKeyframeData(System.String,System.String)\">\n            <summary>\n            Extracts the keyframes using the ffprobe executable at the specified path.\n            </summary>\n            <param name=\"ffProbePath\">The path to the ffprobe executable.</param>\n            <param name=\"filePath\">The file path.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.MediaEncoding.Keyframes.FfProbe.FfProbeKeyframeExtractor.GetKeyframeData(System.String,System.String)\">\n            <summary>\n            Extracts the keyframes using the ffprobe executable at the specified path.\n            </summary>\n            <param name=\"ffProbePath\">The path to the ffprobe executable.</param>\n            <param name=\"filePath\">The file path.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.MediaEncoding.Keyframes.FfProbe.FfProbeKeyframeExtractor.GetKeyframeData(System.String,System.String)\">\n            <summary>\n            Extracts the keyframes using the ffprobe executable at the specified path.\n            </summary>\n            <param name=\"ffProbePath\">The path to the ffprobe executable.</param>\n            <param name=\"filePath\">The file path.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.MediaEncoding.Keyframes.xml"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 61,
                  "endLine": 92,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.MediaEncoding.Keyframes.Matroska.Extensions.EbmlReaderExtensions.FindFirstTrackNumberByType(NEbml.Core.EbmlReader,System.Int64,System.UInt64)\">\n            <summary>\n            Enters the Tracks segment and reads all tracks to find the specified type.\n            </summary>\n            <param name=\"reader\">Instance of <see cref=\"T:NEbml.Core.EbmlReader\"/>.</param>\n            <param name=\"tracksPosition\">The relative position of the tracks segment.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.MediaEncoding.Keyframes.Matroska.Extensions.EbmlReaderExtensions.FindFirstTrackNumberByType(NEbml.Core.EbmlReader,System.Int64,System.UInt64)\">\n            <summary>\n            Enters the Tracks segment and reads all tracks to find the specified type.\n            </summary>\n            <param name=\"reader\">Instance of <see cref=\"T:NEbml.Core.EbmlReader\"/>.</param>\n            <param name=\"tracksPosition\">The relative position of the tracks segment.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.MediaEncoding.Keyframes.Matroska.Extensions.EbmlReaderExtensions.FindFirstTrackNumberByType(NEbml.Core.EbmlReader,System.Int64,System.UInt64)\">\n            <summary>\n            Enters the Tracks segment and reads all tracks to find the specified type.\n            </summary>\n            <param name=\"reader\">Instance of <see cref=\"T:NEbml.Core.EbmlReader\"/>.</param>\n            <param name=\"tracksPosition\">The relative position of the tracks segment.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.MediaEncoding.Keyframes.xml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 46,
                  "endLine": 62,
                  "endColumn": 52,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.MediaEncoding.Keyframes.Matroska.Extensions.EbmlReaderExtensions.FindElement(NEbml.Core.EbmlReader,System.UInt64)\">\n            <summary>\n            Traverses the current container to find the element with <paramref name=\"identifier\"/> identifier.\n            </summary>\n            <param name=\"reader\">An instance of <see cref=\"T:NEbml.Core.EbmlReader\"/>.</param>\n            <param name=\"identifier\">The element identifier.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.MediaEncoding.Keyframes.Matroska.Extensions.EbmlReaderExtensions.FindElement(NEbml.Core.EbmlReader,System.UInt64)\">\n            <summary>\n            Traverses the current container to find the element with <paramref name=\"identifier\"/> identifier.\n            </summary>\n            <param name=\"reader\">An instance of <see cref=\"T:NEbml.Core.EbmlReader\"/>.</param>\n            <param name=\"identifier\">The element identifier.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.MediaEncoding.Keyframes.Matroska.Extensions.EbmlReaderExtensions.FindElement(NEbml.Core.EbmlReader,System.UInt64)\">\n            <summary>\n            Traverses the current container to find the element with <paramref name=\"identifier\"/> identifier.\n            </summary>\n            <param name=\"reader\">An instance of <see cref=\"T:NEbml.Core.EbmlReader\"/>.</param>\n            <param name=\"identifier\">The element identifier.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 1559,
                  "startColumn": 59,
                  "endLine": 1559,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 1557,
                  "startColumn": 67,
                  "endLine": 1557,
                  "endColumn": 71,
                  "snippet": {
                    "text": "f no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.CheckMultiVersionRegex_3.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "f no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.CheckMultiVersionRegex_3.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`f no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.CheckMultiVersionRegex_3.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 1527,
                  "startColumn": 59,
                  "endLine": 1527,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.CheckMultiVersionRegex_3\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the CheckMultiVersionRegex method.</summar",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.CheckMultiVersionRegex_3\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the CheckMultiVersionRegex method.</summar",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.CheckMultiVersionRegex_3\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the CheckMultiVersionRegex method.</summar`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 1525,
                  "startColumn": 67,
                  "endLine": 1525,
                  "endColumn": 71,
                  "snippet": {
                    "text": "false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.ResolutionRegex_2.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.ResolutionRegex_2.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.ResolutionRegex_2.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 1495,
                  "startColumn": 59,
                  "endLine": 1495,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.ResolutionRegex_2\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the ResolutionRegex method.</summary>\n        </m",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.ResolutionRegex_2\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the ResolutionRegex method.</summary>\n        </m",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.ResolutionRegex_2\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the ResolutionRegex method.</summary>\n        </m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 1493,
                  "startColumn": 67,
                  "endLine": 1493,
                  "endColumn": 71,
                  "snippet": {
                    "text": "false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.SeriesNameRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.SeriesNameRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.SeriesNameRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 1463,
                  "startColumn": 59,
                  "endLine": 1463,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.SeriesNameRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the SeriesNameRegex method.</summary>\n        </m",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.SeriesNameRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the SeriesNameRegex method.</summary>\n        </m",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.SeriesNameRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the SeriesNameRegex method.</summary>\n        </m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 1461,
                  "startColumn": 67,
                  "endLine": 1461,
                  "endColumn": 71,
                  "snippet": {
                    "text": "und; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.CleanRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "und; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.CleanRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`und; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.CleanRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 1349,
                  "startColumn": 22,
                  "endLine": 1349,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            <code>^\\\\[([^]]*)\\\\]</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match '['.<br/>\n            ○ 1st capture group.<br/>\n                ○ Match a character other than ']' atomically any number of times.<br/>\n",
                    "rendered": {
                      "text": "            <code>^\\\\[([^]]*)\\\\]</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match '['.<br/>\n            ○ 1st capture group.<br/>\n                ○ Match a character other than ']' atomically any number of times.<br/>\n",
                      "markdown": "`            <code>^\\\\[([^]]*)\\\\]</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match if at the beginning of the string.<br/>\n            ○ Match '['.<br/>\n            ○ 1st capture group.<br/>\n                ○ Match a character other than ']' atomically any number of times.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 1338,
                  "startColumn": 59,
                  "endLine": 1338,
                  "endColumn": 63,
                  "snippet": {
                    "text": "            <code>RegexOptions.IgnoreCase</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a character in the set [0-9] atomically at least 3 times.<br/>\n            ○ Match a character in the set [IPip].<br/>\n            </code>\n            </remarks>\n",
                    "rendered": {
                      "text": "            <code>RegexOptions.IgnoreCase</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a character in the set [0-9] atomically at least 3 times.<br/>\n            ○ Match a character in the set [IPip].<br/>\n            </code>\n            </remarks>\n",
                      "markdown": "`            <code>RegexOptions.IgnoreCase</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a character in the set [0-9] atomically at least 3 times.<br/>\n            ○ Match a character in the set [IPip].<br/>\n            </code>\n            </remarks>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 828,
                  "startColumn": 71,
                  "endLine": 828,
                  "endColumn": 75,
                  "snippet": {
                    "text": "                ○ 2nd capture group.<br/>\n                    ○ Match a character in the set [._].<br/>\n                    ○ \"b\" capture group.<br/>\n                        ○ Match a character in the set [^._] atomically at least twice.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                    "rendered": {
                      "text": "                ○ 2nd capture group.<br/>\n                    ○ Match a character in the set [._].<br/>\n                    ○ \"b\" capture group.<br/>\n                        ○ Match a character in the set [^._] atomically at least twice.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                      "markdown": "`                ○ 2nd capture group.<br/>\n                    ○ Match a character in the set [._].<br/>\n                    ○ \"b\" capture group.<br/>\n                        ○ Match a character in the set [^._] atomically at least twice.<br/>\n            </code>\n            </remarks>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 823,
                  "startColumn": 71,
                  "endLine": 823,
                  "endColumn": 75,
                  "snippet": {
                    "text": "            ○ Match with 2 alternative expressions, atomically.<br/>\n                ○ 1st capture group.<br/>\n                    ○ \"a\" capture group.<br/>\n                        ○ Match a character in the set [^._] atomically at least twice.<br/>\n                    ○ Match a character in the set [._] atomically any number of times.<br/>\n                ○ 2nd capture group.<br/>\n                    ○ Match a character in the set [._].<br/>\n",
                    "rendered": {
                      "text": "            ○ Match with 2 alternative expressions, atomically.<br/>\n                ○ 1st capture group.<br/>\n                    ○ \"a\" capture group.<br/>\n                        ○ Match a character in the set [^._] atomically at least twice.<br/>\n                    ○ Match a character in the set [._] atomically any number of times.<br/>\n                ○ 2nd capture group.<br/>\n                    ○ Match a character in the set [._].<br/>\n",
                      "markdown": "`            ○ Match with 2 alternative expressions, atomically.<br/>\n                ○ 1st capture group.<br/>\n                    ○ \"a\" capture group.<br/>\n                        ○ Match a character in the set [^._] atomically at least twice.<br/>\n                    ○ Match a character in the set [._] atomically any number of times.<br/>\n                ○ 2nd capture group.<br/>\n                    ○ Match a character in the set [._].<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 33,
                  "endLine": 46,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"path\">Path to file.</param>\n            <param name=\"options\"><see cref=\"T:Emby.Naming.Common.NamingOptions\"/> containing AudioFileExtensions.</param>\n            <returns>True if file at path is audio file.</returns>\n        </member>\n        <member name=\"T:Emby.Naming.AudioBook.AudioBookFileInfo\">\n            <summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"path\">Path to file.</param>\n            <param name=\"options\"><see cref=\"T:Emby.Naming.Common.NamingOptions\"/> containing AudioFileExtensions.</param>\n            <returns>True if file at path is audio file.</returns>\n        </member>\n        <member name=\"T:Emby.Naming.AudioBook.AudioBookFileInfo\">\n            <summary>\n",
                      "markdown": "`            </summary>\n            <param name=\"path\">Path to file.</param>\n            <param name=\"options\"><see cref=\"T:Emby.Naming.Common.NamingOptions\"/> containing AudioFileExtensions.</param>\n            <returns>True if file at path is audio file.</returns>\n        </member>\n        <member name=\"T:Emby.Naming.AudioBook.AudioBookFileInfo\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 53,
                  "endLine": 42,
                  "endColumn": 57,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Emby.Naming.Audio.AudioFileParser.IsAudioFile(System.String,Emby.Naming.Common.NamingOptions)\">\n            <summary>\n            Static helper method to determine if file at path is audio file.\n            </summary>\n            <param name=\"path\">Path to file.</param>\n            <param name=\"options\"><see cref=\"T:Emby.Naming.Common.NamingOptions\"/> containing AudioFileExtensions.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Emby.Naming.Audio.AudioFileParser.IsAudioFile(System.String,Emby.Naming.Common.NamingOptions)\">\n            <summary>\n            Static helper method to determine if file at path is audio file.\n            </summary>\n            <param name=\"path\">Path to file.</param>\n            <param name=\"options\"><see cref=\"T:Emby.Naming.Common.NamingOptions\"/> containing AudioFileExtensions.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:Emby.Naming.Audio.AudioFileParser.IsAudioFile(System.String,Emby.Naming.Common.NamingOptions)\">\n            <summary>\n            Static helper method to determine if file at path is audio file.\n            </summary>\n            <param name=\"path\">Path to file.</param>\n            <param name=\"options\"><see cref=\"T:Emby.Naming.Common.NamingOptions\"/> containing AudioFileExtensions.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 52,
                  "endLine": 37,
                  "endColumn": 56,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Emby.Naming.Audio.AudioFileParser\">\n            <summary>\n            Static helper class to determine if file at path is audio file.\n            </summary>\n        </member>\n        <member name=\"M:Emby.Naming.Audio.AudioFileParser.IsAudioFile(System.String,Emby.Naming.Common.NamingOptions)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Emby.Naming.Audio.AudioFileParser\">\n            <summary>\n            Static helper class to determine if file at path is audio file.\n            </summary>\n        </member>\n        <member name=\"M:Emby.Naming.Audio.AudioFileParser.IsAudioFile(System.String,Emby.Naming.Common.NamingOptions)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Emby.Naming.Audio.AudioFileParser\">\n            <summary>\n            Static helper class to determine if file at path is audio file.\n            </summary>\n        </member>\n        <member name=\"M:Emby.Naming.Audio.AudioFileParser.IsAudioFile(System.String,Emby.Naming.Common.NamingOptions)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 62,
                  "endLine": 24,
                  "endColumn": 66,
                  "snippet": {
                    "text": "            <code>[-\\\\.\\\\(\\\\)\\\\s]+</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a character in the set [()-.\\s] atomically at least once.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                    "rendered": {
                      "text": "            <code>[-\\\\.\\\\(\\\\)\\\\s]+</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a character in the set [()-.\\s] atomically at least once.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                      "markdown": "`            <code>[-\\\\.\\\\(\\\\)\\\\s]+</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a character in the set [()-.\\s] atomically at least once.<br/>\n            </code>\n            </remarks>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 1565,
                  "startColumn": 28,
                  "endLine": 1565,
                  "endColumn": 37,
                  "snippet": {
                    "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                    "rendered": {
                      "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                      "markdown": "`rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Emby.Naming.xml"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 99,
                  "endLine": 254,
                  "endColumn": 105,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:Emby.Naming.Common.EpisodeExpression.IsByDate\">\n            <summary>\n            Gets or sets a value indicating whether gets or sets property indicating if date can be find in expression.\n            </summary>\n        </member>\n        <member name=\"P:Emby.Naming.Common.EpisodeExpression.IsOptimistic\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:Emby.Naming.Common.EpisodeExpression.IsByDate\">\n            <summary>\n            Gets or sets a value indicating whether gets or sets property indicating if date can be find in expression.\n            </summary>\n        </member>\n        <member name=\"P:Emby.Naming.Common.EpisodeExpression.IsOptimistic\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:Emby.Naming.Common.EpisodeExpression.IsByDate\">\n            <summary>\n            Gets or sets a value indicating whether gets or sets property indicating if date can be find in expression.\n            </summary>\n        </member>\n        <member name=\"P:Emby.Naming.Common.EpisodeExpression.IsOptimistic\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 8547,
                  "startColumn": 83,
                  "endLine": 8547,
                  "endColumn": 90,
                  "snippet": {
                    "text": "            <param name=\"name\">The name of the key.</param>\n            <returns>A task representing the creation of the key.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Security.IAuthenticationManager.GetApiKeys\">\n            <summary>\n            Gets the API keys.\n            </summary>\n",
                    "rendered": {
                      "text": "            <param name=\"name\">The name of the key.</param>\n            <returns>A task representing the creation of the key.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Security.IAuthenticationManager.GetApiKeys\">\n            <summary>\n            Gets the API keys.\n            </summary>\n",
                      "markdown": "`            <param name=\"name\">The name of the key.</param>\n            <returns>A task representing the creation of the key.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Security.IAuthenticationManager.GetApiKeys\">\n            <summary>\n            Gets the API keys.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4051,
                  "startColumn": 24,
                  "endLine": 4051,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.RedeemPasswordResetPin(System.String)\">\n            <summary>\n            Redeems the password reset pin.\n            </summary>\n            <param name=\"pin\">The pin.</param>\n            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.RedeemPasswordResetPin(System.String)\">\n            <summary>\n            Redeems the password reset pin.\n            </summary>\n            <param name=\"pin\">The pin.</param>\n            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.RedeemPasswordResetPin(System.String)\">\n            <summary>\n            Redeems the password reset pin.\n            </summary>\n            <param name=\"pin\">The pin.</param>\n            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4049,
                  "startColumn": 75,
                  "endLine": 4049,
                  "endColumn": 83,
                  "snippet": {
                    "text": "            <param name=\"isInNetwork\">if set to <c>true</c> [is in network].</param>\n            <returns>ForgotPasswordResult.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.RedeemPasswordResetPin(System.String)\">\n            <summary>\n            Redeems the password reset pin.\n            </summary>\n",
                    "rendered": {
                      "text": "            <param name=\"isInNetwork\">if set to <c>true</c> [is in network].</param>\n            <returns>ForgotPasswordResult.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.RedeemPasswordResetPin(System.String)\">\n            <summary>\n            Redeems the password reset pin.\n            </summary>\n",
                      "markdown": "`            <param name=\"isInNetwork\">if set to <c>true</c> [is in network].</param>\n            <returns>ForgotPasswordResult.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.RedeemPasswordResetPin(System.String)\">\n            <summary>\n            Redeems the password reset pin.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4047,
                  "startColumn": 27,
                  "endLine": 4047,
                  "endColumn": 35,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"enteredUsername\">The entered username.</param>\n            <param name=\"isInNetwork\">if set to <c>true</c> [is in network].</param>\n            <returns>ForgotPasswordResult.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.RedeemPasswordResetPin(System.String)\">\n            <summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"enteredUsername\">The entered username.</param>\n            <param name=\"isInNetwork\">if set to <c>true</c> [is in network].</param>\n            <returns>ForgotPasswordResult.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.RedeemPasswordResetPin(System.String)\">\n            <summary>\n",
                      "markdown": "`            </summary>\n            <param name=\"enteredUsername\">The entered username.</param>\n            <param name=\"isInNetwork\">if set to <c>true</c> [is in network].</param>\n            <returns>ForgotPasswordResult.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.RedeemPasswordResetPin(System.String)\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4043,
                  "startColumn": 30,
                  "endLine": 4043,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.StartForgotPasswordProcess(System.String,System.Boolean)\">\n            <summary>\n            Starts the forgot password process.\n            </summary>\n            <param name=\"enteredUsername\">The entered username.</param>\n            <param name=\"isInNetwork\">if set to <c>true</c> [is in network].</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.StartForgotPasswordProcess(System.String,System.Boolean)\">\n            <summary>\n            Starts the forgot password process.\n            </summary>\n            <param name=\"enteredUsername\">The entered username.</param>\n            <param name=\"isInNetwork\">if set to <c>true</c> [is in network].</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.StartForgotPasswordProcess(System.String,System.Boolean)\">\n            <summary>\n            Starts the forgot password process.\n            </summary>\n            <param name=\"enteredUsername\">The entered username.</param>\n            <param name=\"isInNetwork\">if set to <c>true</c> [is in network].</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4041,
                  "startColumn": 80,
                  "endLine": 4041,
                  "endColumn": 88,
                  "snippet": {
                    "text": "            <param name=\"isUserSession\">Specifies if a user session.</param>\n            <returns>User wrapped in awaitable task.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.StartForgotPasswordProcess(System.String,System.Boolean)\">\n            <summary>\n            Starts the forgot password process.\n            </summary>\n",
                    "rendered": {
                      "text": "            <param name=\"isUserSession\">Specifies if a user session.</param>\n            <returns>User wrapped in awaitable task.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.StartForgotPasswordProcess(System.String,System.Boolean)\">\n            <summary>\n            Starts the forgot password process.\n            </summary>\n",
                      "markdown": "`            <param name=\"isUserSession\">Specifies if a user session.</param>\n            <returns>User wrapped in awaitable task.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.StartForgotPasswordProcess(System.String,System.Boolean)\">\n            <summary>\n            Starts the forgot password process.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4036,
                  "startColumn": 47,
                  "endLine": 4036,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"username\">The user.</param>\n            <param name=\"password\">The password to use.</param>\n            <param name=\"passwordSha1\">Hash of password.</param>\n            <param name=\"remoteEndPoint\">Remove endpoint to use.</param>\n            <param name=\"isUserSession\">Specifies if a user session.</param>\n            <returns>User wrapped in awaitable task.</returns>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"username\">The user.</param>\n            <param name=\"password\">The password to use.</param>\n            <param name=\"passwordSha1\">Hash of password.</param>\n            <param name=\"remoteEndPoint\">Remove endpoint to use.</param>\n            <param name=\"isUserSession\">Specifies if a user session.</param>\n            <returns>User wrapped in awaitable task.</returns>\n",
                      "markdown": "`            </summary>\n            <param name=\"username\">The user.</param>\n            <param name=\"password\">The password to use.</param>\n            <param name=\"passwordSha1\">Hash of password.</param>\n            <param name=\"remoteEndPoint\">Remove endpoint to use.</param>\n            <param name=\"isUserSession\">Specifies if a user session.</param>\n            <returns>User wrapped in awaitable task.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4036,
                  "startColumn": 25,
                  "endLine": 4036,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"username\">The user.</param>\n            <param name=\"password\">The password to use.</param>\n            <param name=\"passwordSha1\">Hash of password.</param>\n            <param name=\"remoteEndPoint\">Remove endpoint to use.</param>\n            <param name=\"isUserSession\">Specifies if a user session.</param>\n            <returns>User wrapped in awaitable task.</returns>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"username\">The user.</param>\n            <param name=\"password\">The password to use.</param>\n            <param name=\"passwordSha1\">Hash of password.</param>\n            <param name=\"remoteEndPoint\">Remove endpoint to use.</param>\n            <param name=\"isUserSession\">Specifies if a user session.</param>\n            <returns>User wrapped in awaitable task.</returns>\n",
                      "markdown": "`            </summary>\n            <param name=\"username\">The user.</param>\n            <param name=\"password\">The password to use.</param>\n            <param name=\"passwordSha1\">Hash of password.</param>\n            <param name=\"remoteEndPoint\">Remove endpoint to use.</param>\n            <param name=\"isUserSession\">Specifies if a user session.</param>\n            <returns>User wrapped in awaitable task.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4035,
                  "startColumn": 39,
                  "endLine": 4035,
                  "endColumn": 47,
                  "snippet": {
                    "text": "            Authenticates the user.\n            </summary>\n            <param name=\"username\">The user.</param>\n            <param name=\"password\">The password to use.</param>\n            <param name=\"passwordSha1\">Hash of password.</param>\n            <param name=\"remoteEndPoint\">Remove endpoint to use.</param>\n            <param name=\"isUserSession\">Specifies if a user session.</param>\n",
                    "rendered": {
                      "text": "            Authenticates the user.\n            </summary>\n            <param name=\"username\">The user.</param>\n            <param name=\"password\">The password to use.</param>\n            <param name=\"passwordSha1\">Hash of password.</param>\n            <param name=\"remoteEndPoint\">Remove endpoint to use.</param>\n            <param name=\"isUserSession\">Specifies if a user session.</param>\n",
                      "markdown": "`            Authenticates the user.\n            </summary>\n            <param name=\"username\">The user.</param>\n            <param name=\"password\">The password to use.</param>\n            <param name=\"passwordSha1\">Hash of password.</param>\n            <param name=\"remoteEndPoint\">Remove endpoint to use.</param>\n            <param name=\"isUserSession\">Specifies if a user session.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4035,
                  "startColumn": 25,
                  "endLine": 4035,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            Authenticates the user.\n            </summary>\n            <param name=\"username\">The user.</param>\n            <param name=\"password\">The password to use.</param>\n            <param name=\"passwordSha1\">Hash of password.</param>\n            <param name=\"remoteEndPoint\">Remove endpoint to use.</param>\n            <param name=\"isUserSession\">Specifies if a user session.</param>\n",
                    "rendered": {
                      "text": "            Authenticates the user.\n            </summary>\n            <param name=\"username\">The user.</param>\n            <param name=\"password\">The password to use.</param>\n            <param name=\"passwordSha1\">Hash of password.</param>\n            <param name=\"remoteEndPoint\">Remove endpoint to use.</param>\n            <param name=\"isUserSession\">Specifies if a user session.</param>\n",
                      "markdown": "`            Authenticates the user.\n            </summary>\n            <param name=\"username\">The user.</param>\n            <param name=\"password\">The password to use.</param>\n            <param name=\"passwordSha1\">Hash of password.</param>\n            <param name=\"remoteEndPoint\">Remove endpoint to use.</param>\n            <param name=\"isUserSession\">Specifies if a user session.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4019,
                  "startColumn": 42,
                  "endLine": 4019,
                  "endColumn": 50,
                  "snippet": {
                    "text": "            Changes the password.\n            </summary>\n            <param name=\"user\">The user.</param>\n            <param name=\"newPassword\">New password to use.</param>\n            <returns>Awaitable task.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.GetUserDto(Jellyfin.Data.Entities.User,System.String)\">\n",
                    "rendered": {
                      "text": "            Changes the password.\n            </summary>\n            <param name=\"user\">The user.</param>\n            <param name=\"newPassword\">New password to use.</param>\n            <returns>Awaitable task.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.GetUserDto(Jellyfin.Data.Entities.User,System.String)\">\n",
                      "markdown": "`            Changes the password.\n            </summary>\n            <param name=\"user\">The user.</param>\n            <param name=\"newPassword\">New password to use.</param>\n            <returns>Awaitable task.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.GetUserDto(Jellyfin.Data.Entities.User,System.String)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4019,
                  "startColumn": 28,
                  "endLine": 4019,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            Changes the password.\n            </summary>\n            <param name=\"user\">The user.</param>\n            <param name=\"newPassword\">New password to use.</param>\n            <returns>Awaitable task.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.GetUserDto(Jellyfin.Data.Entities.User,System.String)\">\n",
                    "rendered": {
                      "text": "            Changes the password.\n            </summary>\n            <param name=\"user\">The user.</param>\n            <param name=\"newPassword\">New password to use.</param>\n            <returns>Awaitable task.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.GetUserDto(Jellyfin.Data.Entities.User,System.String)\">\n",
                      "markdown": "`            Changes the password.\n            </summary>\n            <param name=\"user\">The user.</param>\n            <param name=\"newPassword\">New password to use.</param>\n            <returns>Awaitable task.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.GetUserDto(Jellyfin.Data.Entities.User,System.String)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4016,
                  "startColumn": 24,
                  "endLine": 4016,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <summary>\n            Changes the password.\n            </summary>\n            <param name=\"user\">The user.</param>\n            <param name=\"newPassword\">New password to use.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <summary>\n            Changes the password.\n            </summary>\n            <param name=\"user\">The user.</param>\n            <param name=\"newPassword\">New password to use.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <summary>\n            Changes the password.\n            </summary>\n            <param name=\"user\">The user.</param>\n            <param name=\"newPassword\">New password to use.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4014,
                  "startColumn": 75,
                  "endLine": 4014,
                  "endColumn": 83,
                  "snippet": {
                    "text": "            <param name=\"user\">The user.</param>\n            <returns>Task.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <summary>\n            Changes the password.\n            </summary>\n",
                    "rendered": {
                      "text": "            <param name=\"user\">The user.</param>\n            <returns>Task.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <summary>\n            Changes the password.\n            </summary>\n",
                      "markdown": "`            <param name=\"user\">The user.</param>\n            <returns>Task.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.ChangePassword(Jellyfin.Data.Entities.User,System.String)\">\n            <summary>\n            Changes the password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4009,
                  "startColumn": 23,
                  "endLine": 4009,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.ResetPassword(Jellyfin.Data.Entities.User)\">\n            <summary>\n            Resets the password.\n            </summary>\n            <param name=\"user\">The user.</param>\n            <returns>Task.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.ResetPassword(Jellyfin.Data.Entities.User)\">\n            <summary>\n            Resets the password.\n            </summary>\n            <param name=\"user\">The user.</param>\n            <returns>Task.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.ResetPassword(Jellyfin.Data.Entities.User)\">\n            <summary>\n            Resets the password.\n            </summary>\n            <param name=\"user\">The user.</param>\n            <returns>Task.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4007,
                  "startColumn": 74,
                  "endLine": 4007,
                  "endColumn": 82,
                  "snippet": {
                    "text": "            <param name=\"userId\">The id of the user to be deleted.</param>\n            <returns>A task representing the deletion of the user.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.ResetPassword(Jellyfin.Data.Entities.User)\">\n            <summary>\n            Resets the password.\n            </summary>\n",
                    "rendered": {
                      "text": "            <param name=\"userId\">The id of the user to be deleted.</param>\n            <returns>A task representing the deletion of the user.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.ResetPassword(Jellyfin.Data.Entities.User)\">\n            <summary>\n            Resets the password.\n            </summary>\n",
                      "markdown": "`            <param name=\"userId\">The id of the user to be deleted.</param>\n            <returns>A task representing the deletion of the user.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.ResetPassword(Jellyfin.Data.Entities.User)\">\n            <summary>\n            Resets the password.\n            </summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 2801,
                  "startColumn": 39,
                  "endLine": 2801,
                  "endColumn": 47,
                  "snippet": {
                    "text": "            Gets a local (LAN) URL that can be used to access the API.\n            Note: if passing non-null scheme or port it is up to the caller to ensure they form the correct pair.\n            </summary>\n            <param name=\"hostname\">The hostname to use in the URL.</param>\n            <param name=\"scheme\">\n            The scheme to use for the URL. If null, the scheme will be selected automatically,\n            preferring HTTPS, if available.\n",
                    "rendered": {
                      "text": "            Gets a local (LAN) URL that can be used to access the API.\n            Note: if passing non-null scheme or port it is up to the caller to ensure they form the correct pair.\n            </summary>\n            <param name=\"hostname\">The hostname to use in the URL.</param>\n            <param name=\"scheme\">\n            The scheme to use for the URL. If null, the scheme will be selected automatically,\n            preferring HTTPS, if available.\n",
                      "markdown": "`            Gets a local (LAN) URL that can be used to access the API.\n            Note: if passing non-null scheme or port it is up to the caller to ensure they form the correct pair.\n            </summary>\n            <param name=\"hostname\">The hostname to use in the URL.</param>\n            <param name=\"scheme\">\n            The scheme to use for the URL. If null, the scheme will be selected automatically,\n            preferring HTTPS, if available.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 2801,
                  "startColumn": 25,
                  "endLine": 2801,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            Gets a local (LAN) URL that can be used to access the API.\n            Note: if passing non-null scheme or port it is up to the caller to ensure they form the correct pair.\n            </summary>\n            <param name=\"hostname\">The hostname to use in the URL.</param>\n            <param name=\"scheme\">\n            The scheme to use for the URL. If null, the scheme will be selected automatically,\n            preferring HTTPS, if available.\n",
                    "rendered": {
                      "text": "            Gets a local (LAN) URL that can be used to access the API.\n            Note: if passing non-null scheme or port it is up to the caller to ensure they form the correct pair.\n            </summary>\n            <param name=\"hostname\">The hostname to use in the URL.</param>\n            <param name=\"scheme\">\n            The scheme to use for the URL. If null, the scheme will be selected automatically,\n            preferring HTTPS, if available.\n",
                      "markdown": "`            Gets a local (LAN) URL that can be used to access the API.\n            Note: if passing non-null scheme or port it is up to the caller to ensure they form the correct pair.\n            </summary>\n            <param name=\"hostname\">The hostname to use in the URL.</param>\n            <param name=\"scheme\">\n            The scheme to use for the URL. If null, the scheme will be selected automatically,\n            preferring HTTPS, if available.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 2785,
                  "startColumn": 39,
                  "endLine": 2785,
                  "endColumn": 47,
                  "snippet": {
                    "text": "            <summary>\n            Gets a URL specific for the request.\n            </summary>\n            <param name=\"hostname\">The hostname used in the connection.</param>\n            <returns>An accessible URL.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.IServerApplicationHost.GetApiUrlForLocalAccess(System.Net.IPAddress,System.Boolean)\">\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets a URL specific for the request.\n            </summary>\n            <param name=\"hostname\">The hostname used in the connection.</param>\n            <returns>An accessible URL.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.IServerApplicationHost.GetApiUrlForLocalAccess(System.Net.IPAddress,System.Boolean)\">\n",
                      "markdown": "`            <summary>\n            Gets a URL specific for the request.\n            </summary>\n            <param name=\"hostname\">The hostname used in the connection.</param>\n            <returns>An accessible URL.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.IServerApplicationHost.GetApiUrlForLocalAccess(System.Net.IPAddress,System.Boolean)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 2785,
                  "startColumn": 25,
                  "endLine": 2785,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            <summary>\n            Gets a URL specific for the request.\n            </summary>\n            <param name=\"hostname\">The hostname used in the connection.</param>\n            <returns>An accessible URL.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.IServerApplicationHost.GetApiUrlForLocalAccess(System.Net.IPAddress,System.Boolean)\">\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets a URL specific for the request.\n            </summary>\n            <param name=\"hostname\">The hostname used in the connection.</param>\n            <returns>An accessible URL.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.IServerApplicationHost.GetApiUrlForLocalAccess(System.Net.IPAddress,System.Boolean)\">\n",
                      "markdown": "`            <summary>\n            Gets a URL specific for the request.\n            </summary>\n            <param name=\"hostname\">The hostname used in the connection.</param>\n            <returns>An accessible URL.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.IServerApplicationHost.GetApiUrlForLocalAccess(System.Net.IPAddress,System.Boolean)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 11088,
                  "startColumn": 59,
                  "endLine": 11088,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 11086,
                  "startColumn": 67,
                  "endLine": 11086,
                  "endColumn": 71,
                  "snippet": {
                    "text": "false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.WhiteSpaceRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.WhiteSpaceRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.WhiteSpaceRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 10060,
                  "startColumn": 34,
                  "endLine": 10060,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            Builds a new group update message.\n            </summary>\n            <typeparam name=\"T\">The type of the data of the message.</typeparam>\n            <param name=\"type\">The update type.</param>\n            <param name=\"data\">The data to send.</param>\n            <returns>The group update.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            Builds a new group update message.\n            </summary>\n            <typeparam name=\"T\">The type of the data of the message.</typeparam>\n            <param name=\"type\">The update type.</param>\n            <param name=\"data\">The data to send.</param>\n            <returns>The group update.</returns>\n        </member>\n",
                      "markdown": "`            Builds a new group update message.\n            </summary>\n            <typeparam name=\"T\">The type of the data of the message.</typeparam>\n            <param name=\"type\">The update type.</param>\n            <param name=\"data\">The data to send.</param>\n            <returns>The group update.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 10057,
                  "startColumn": 30,
                  "endLine": 10057,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.SyncPlay.IGroupStateContext.NewSyncPlayGroupUpdate``1(MediaBrowser.Model.SyncPlay.GroupUpdateType,``0)\">\n            <summary>\n            Builds a new group update message.\n            </summary>\n            <typeparam name=\"T\">The type of the data of the message.</typeparam>\n            <param name=\"type\">The update type.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.SyncPlay.IGroupStateContext.NewSyncPlayGroupUpdate``1(MediaBrowser.Model.SyncPlay.GroupUpdateType,``0)\">\n            <summary>\n            Builds a new group update message.\n            </summary>\n            <typeparam name=\"T\">The type of the data of the message.</typeparam>\n            <param name=\"type\">The update type.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Controller.SyncPlay.IGroupStateContext.NewSyncPlayGroupUpdate``1(MediaBrowser.Model.SyncPlay.GroupUpdateType,``0)\">\n            <summary>\n            Builds a new group update message.\n            </summary>\n            <typeparam name=\"T\">The type of the data of the message.</typeparam>\n            <param name=\"type\">The update type.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 9502,
                  "startColumn": 31,
                  "endLine": 9502,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.SyncPlay.GroupStates.AbstractGroupState.SendGroupStateUpdate(MediaBrowser.Controller.SyncPlay.IGroupStateContext,MediaBrowser.Controller.SyncPlay.IGroupPlaybackRequest,MediaBrowser.Controller.Session.SessionInfo,System.Threading.CancellationToken)\">\n            <summary>\n            Sends a group state update to all group.\n            </summary>\n            <param name=\"context\">The context of the state.</param>\n            <param name=\"reason\">The reason of the state change.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.SyncPlay.GroupStates.AbstractGroupState.SendGroupStateUpdate(MediaBrowser.Controller.SyncPlay.IGroupStateContext,MediaBrowser.Controller.SyncPlay.IGroupPlaybackRequest,MediaBrowser.Controller.Session.SessionInfo,System.Threading.CancellationToken)\">\n            <summary>\n            Sends a group state update to all group.\n            </summary>\n            <param name=\"context\">The context of the state.</param>\n            <param name=\"reason\">The reason of the state change.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Controller.SyncPlay.GroupStates.AbstractGroupState.SendGroupStateUpdate(MediaBrowser.Controller.SyncPlay.IGroupStateContext,MediaBrowser.Controller.SyncPlay.IGroupPlaybackRequest,MediaBrowser.Controller.Session.SessionInfo,System.Threading.CancellationToken)\">\n            <summary>\n            Sends a group state update to all group.\n            </summary>\n            <param name=\"context\">The context of the state.</param>\n            <param name=\"reason\">The reason of the state change.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 7521,
                  "startColumn": 37,
                  "endLine": 7521,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"item\">The item.</param>\n            <param name=\"index\">The chapter index.</param>\n            <returns>The chapter info at the specified index.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Persistence.IItemRepository.SaveChapters(System.Guid,System.Collections.Generic.IReadOnlyList{MediaBrowser.Model.Entities.ChapterInfo})\">\n            <summary>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"item\">The item.</param>\n            <param name=\"index\">The chapter index.</param>\n            <returns>The chapter info at the specified index.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Persistence.IItemRepository.SaveChapters(System.Guid,System.Collections.Generic.IReadOnlyList{MediaBrowser.Model.Entities.ChapterInfo})\">\n            <summary>\n",
                      "markdown": "`            </summary>\n            <param name=\"item\">The item.</param>\n            <param name=\"index\">The chapter index.</param>\n            <returns>The chapter info at the specified index.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Persistence.IItemRepository.SaveChapters(System.Guid,System.Collections.Generic.IReadOnlyList{MediaBrowser.Model.Entities.ChapterInfo})\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 7368,
                  "startColumn": 27,
                  "endLine": 7368,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.SyncPlayGroupUpdateCommandOfStringMessage\">\n            <summary>\n            Sync play group update command with string.\n            GroupUpdateTypes: GroupDoesNotExist (error), LibraryAccessDenied (error), NotInGroup (error), GroupLeft (groupId), UserJoined (username), UserLeft (username).\n            </summary>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.SyncPlayGroupUpdateCommandOfStringMessage\">\n            <summary>\n            Sync play group update command with string.\n            GroupUpdateTypes: GroupDoesNotExist (error), LibraryAccessDenied (error), NotInGroup (error), GroupLeft (groupId), UserJoined (username), UserLeft (username).\n            </summary>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.SyncPlayGroupUpdateCommandOfStringMessage\">\n            <summary>\n            Sync play group update command with string.\n            GroupUpdateTypes: GroupDoesNotExist (error), LibraryAccessDenied (error), NotInGroup (error), GroupLeft (groupId), UserJoined (username), UserLeft (username).\n            </summary>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 7353,
                  "startColumn": 27,
                  "endLine": 7353,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.SyncPlayGroupUpdateCommandOfPlayQueueUpdateMessage\">\n            <summary>\n            Sync play group update command with play queue update.\n            GroupUpdateTypes: PlayQueue.\n            </summary>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.SyncPlayGroupUpdateCommandOfPlayQueueUpdateMessage\">\n            <summary>\n            Sync play group update command with play queue update.\n            GroupUpdateTypes: PlayQueue.\n            </summary>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.SyncPlayGroupUpdateCommandOfPlayQueueUpdateMessage\">\n            <summary>\n            Sync play group update command with play queue update.\n            GroupUpdateTypes: PlayQueue.\n            </summary>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 7338,
                  "startColumn": 27,
                  "endLine": 7338,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.SyncPlayGroupUpdateCommandOfGroupStateUpdateMessage\">\n            <summary>\n            Sync play group update command with group state update.\n            GroupUpdateTypes: StateUpdate.\n            </summary>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.SyncPlayGroupUpdateCommandOfGroupStateUpdateMessage\">\n            <summary>\n            Sync play group update command with group state update.\n            GroupUpdateTypes: StateUpdate.\n            </summary>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.SyncPlayGroupUpdateCommandOfGroupStateUpdateMessage\">\n            <summary>\n            Sync play group update command with group state update.\n            GroupUpdateTypes: StateUpdate.\n            </summary>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 7323,
                  "startColumn": 27,
                  "endLine": 7323,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.SyncPlayGroupUpdateCommandOfGroupInfoMessage\">\n            <summary>\n            Sync play group update command with group info.\n            GroupUpdateTypes: GroupJoined.\n            </summary>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.SyncPlayGroupUpdateCommandOfGroupInfoMessage\">\n            <summary>\n            Sync play group update command with group info.\n            GroupUpdateTypes: GroupJoined.\n            </summary>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.SyncPlayGroupUpdateCommandOfGroupInfoMessage\">\n            <summary>\n            Sync play group update command with group info.\n            GroupUpdateTypes: GroupJoined.\n            </summary>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 7074,
                  "startColumn": 42,
                  "endLine": 7074,
                  "endColumn": 50,
                  "snippet": {
                    "text": "            <summary>\n            Initializes a new instance of the <see cref=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.LibraryChangedMessage\"/> class.\n            </summary>\n            <param name=\"data\">The library update info.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.LibraryChangedMessage.MessageType\">\n            <inheritdoc />\n",
                    "rendered": {
                      "text": "            <summary>\n            Initializes a new instance of the <see cref=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.LibraryChangedMessage\"/> class.\n            </summary>\n            <param name=\"data\">The library update info.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.LibraryChangedMessage.MessageType\">\n            <inheritdoc />\n",
                      "markdown": "`            <summary>\n            Initializes a new instance of the <see cref=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.LibraryChangedMessage\"/> class.\n            </summary>\n            <param name=\"data\">The library update info.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.LibraryChangedMessage.MessageType\">\n            <inheritdoc />\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 5617,
                  "startColumn": 53,
                  "endLine": 5617,
                  "endColumn": 57,
                  "snippet": {
                    "text": "            <code>\\\\s+</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a whitespace character atomically at least once.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                    "rendered": {
                      "text": "            <code>\\\\s+</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a whitespace character atomically at least once.<br/>\n            </code>\n            </remarks>\n        </member>\n",
                      "markdown": "`            <code>\\\\s+</code><br/>\n            Explanation:<br/>\n            <code>\n            ○ Match a whitespace character atomically at least once.<br/>\n            </code>\n            </remarks>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 3989,
                  "startColumn": 44,
                  "endLine": 3989,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            <param name=\"user\">The user.</param>\n            <exception cref=\"T:System.ArgumentNullException\">If user is <c>null</c>.</exception>\n            <exception cref=\"T:System.ArgumentException\">If the provided user doesn't exist.</exception>\n            <returns>A task representing the update of the user.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.CreateUserAsync(System.String)\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <param name=\"user\">The user.</param>\n            <exception cref=\"T:System.ArgumentNullException\">If user is <c>null</c>.</exception>\n            <exception cref=\"T:System.ArgumentException\">If the provided user doesn't exist.</exception>\n            <returns>A task representing the update of the user.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.CreateUserAsync(System.String)\">\n            <summary>\n",
                      "markdown": "`            <param name=\"user\">The user.</param>\n            <exception cref=\"T:System.ArgumentNullException\">If user is <c>null</c>.</exception>\n            <exception cref=\"T:System.ArgumentException\">If the provided user doesn't exist.</exception>\n            <returns>A task representing the update of the user.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.IUserManager.CreateUserAsync(System.String)\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 3172,
                  "startColumn": 42,
                  "endLine": 3172,
                  "endColumn": 50,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"item\">The item.</param>\n            <param name=\"parent\">The parent item.</param>\n            <param name=\"updateReason\">The update reason.</param>\n            <param name=\"cancellationToken\">The cancellation token.</param>\n            <returns>Returns a Task that can be awaited.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"item\">The item.</param>\n            <param name=\"parent\">The parent item.</param>\n            <param name=\"updateReason\">The update reason.</param>\n            <param name=\"cancellationToken\">The cancellation token.</param>\n            <returns>Returns a Task that can be awaited.</returns>\n        </member>\n",
                      "markdown": "`            </summary>\n            <param name=\"item\">The item.</param>\n            <param name=\"parent\">The parent item.</param>\n            <param name=\"updateReason\">The update reason.</param>\n            <param name=\"cancellationToken\">The cancellation token.</param>\n            <returns>Returns a Task that can be awaited.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 84,
                  "endLine": 237,
                  "endColumn": 88,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.MaxPageSize\">\n            <summary>\n            Gets or sets the maximum number of records the channel allows retrieving at a time.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.DefaultSortFields\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.MaxPageSize\">\n            <summary>\n            Gets or sets the maximum number of records the channel allows retrieving at a time.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.DefaultSortFields\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.MaxPageSize\">\n            <summary>\n            Gets or sets the maximum number of records the channel allows retrieving at a time.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.DefaultSortFields\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 11094,
                  "startColumn": 28,
                  "endLine": 11094,
                  "endColumn": 37,
                  "snippet": {
                    "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                    "rendered": {
                      "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                      "markdown": "`rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 10750,
                  "startColumn": 27,
                  "endLine": 10750,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            <summary>\n            Gets the last time the queue has been changed.\n            </summary>\n            <value>The last time the queue has been changed.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.SyncPlay.Queue.PlayQueueManager.ShuffleMode\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets the last time the queue has been changed.\n            </summary>\n            <value>The last time the queue has been changed.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.SyncPlay.Queue.PlayQueueManager.ShuffleMode\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets the last time the queue has been changed.\n            </summary>\n            <value>The last time the queue has been changed.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.SyncPlay.Queue.PlayQueueManager.ShuffleMode\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 10748,
                  "startColumn": 25,
                  "endLine": 10748,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.SyncPlay.Queue.PlayQueueManager.LastChange\">\n            <summary>\n            Gets the last time the queue has been changed.\n            </summary>\n            <value>The last time the queue has been changed.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.SyncPlay.Queue.PlayQueueManager.LastChange\">\n            <summary>\n            Gets the last time the queue has been changed.\n            </summary>\n            <value>The last time the queue has been changed.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Controller.SyncPlay.Queue.PlayQueueManager.LastChange\">\n            <summary>\n            Gets the last time the queue has been changed.\n            </summary>\n            <value>The last time the queue has been changed.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 9987,
                  "startColumn": 28,
                  "endLine": 9987,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.SyncPlay.IGroupStateContext.TimeSyncOffset\">\n            <summary>\n            Gets the maximum time offset error accepted for dates reported by clients, in milliseconds.\n            </summary>\n            <value>The maximum offset error accepted, in milliseconds.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.SyncPlay.IGroupStateContext.TimeSyncOffset\">\n            <summary>\n            Gets the maximum time offset error accepted for dates reported by clients, in milliseconds.\n            </summary>\n            <value>The maximum offset error accepted, in milliseconds.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Controller.SyncPlay.IGroupStateContext.TimeSyncOffset\">\n            <summary>\n            Gets the maximum time offset error accepted for dates reported by clients, in milliseconds.\n            </summary>\n            <value>The maximum offset error accepted, in milliseconds.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 9046,
                  "startColumn": 39,
                  "endLine": 9046,
                  "endColumn": 48,
                  "snippet": {
                    "text": "            Initializes a new instance of the <see cref=\"T:MediaBrowser.Controller.Streaming.ProgressiveFileStream\"/> class.\n            </summary>\n            <param name=\"stream\">The stream to progressively copy.</param>\n            <param name=\"timeoutMs\">The timeout duration in milliseconds.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Streaming.ProgressiveFileStream.CanRead\">\n            <inheritdoc />\n",
                    "rendered": {
                      "text": "            Initializes a new instance of the <see cref=\"T:MediaBrowser.Controller.Streaming.ProgressiveFileStream\"/> class.\n            </summary>\n            <param name=\"stream\">The stream to progressively copy.</param>\n            <param name=\"timeoutMs\">The timeout duration in milliseconds.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Streaming.ProgressiveFileStream.CanRead\">\n            <inheritdoc />\n",
                      "markdown": "`            Initializes a new instance of the <see cref=\"T:MediaBrowser.Controller.Streaming.ProgressiveFileStream\"/> class.\n            </summary>\n            <param name=\"stream\">The stream to progressively copy.</param>\n            <param name=\"timeoutMs\">The timeout duration in milliseconds.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Streaming.ProgressiveFileStream.CanRead\">\n            <inheritdoc />\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 9039,
                  "startColumn": 39,
                  "endLine": 9039,
                  "endColumn": 48,
                  "snippet": {
                    "text": "            <param name=\"filePath\">The path to the transcoded file.</param>\n            <param name=\"job\">The transcoding job information.</param>\n            <param name=\"transcodeManager\">The transcode manager.</param>\n            <param name=\"timeoutMs\">The timeout duration in milliseconds.</param>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Streaming.ProgressiveFileStream.#ctor(System.IO.Stream,System.Int32)\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <param name=\"filePath\">The path to the transcoded file.</param>\n            <param name=\"job\">The transcoding job information.</param>\n            <param name=\"transcodeManager\">The transcode manager.</param>\n            <param name=\"timeoutMs\">The timeout duration in milliseconds.</param>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Streaming.ProgressiveFileStream.#ctor(System.IO.Stream,System.Int32)\">\n            <summary>\n",
                      "markdown": "`            <param name=\"filePath\">The path to the transcoded file.</param>\n            <param name=\"job\">The transcoding job information.</param>\n            <param name=\"transcodeManager\">The transcode manager.</param>\n            <param name=\"timeoutMs\">The timeout duration in milliseconds.</param>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Streaming.ProgressiveFileStream.#ctor(System.IO.Stream,System.Int32)\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 7792,
                  "startColumn": 47,
                  "endLine": 7792,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            <summary>\n            Registers the plugin's services with the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <param name=\"applicationHost\">The server application host.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Providers.AlbumInfo.AlbumArtists\">\n",
                    "rendered": {
                      "text": "            <summary>\n            Registers the plugin's services with the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <param name=\"applicationHost\">The server application host.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Providers.AlbumInfo.AlbumArtists\">\n",
                      "markdown": "`            <summary>\n            Registers the plugin's services with the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <param name=\"applicationHost\">The server application host.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Providers.AlbumInfo.AlbumArtists\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 7790,
                  "startColumn": 52,
                  "endLine": 7790,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.Plugins.IPluginServiceRegistrator.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,MediaBrowser.Controller.IServerApplicationHost)\">\n            <summary>\n            Registers the plugin's services with the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <param name=\"applicationHost\">The server application host.</param>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.Plugins.IPluginServiceRegistrator.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,MediaBrowser.Controller.IServerApplicationHost)\">\n            <summary>\n            Registers the plugin's services with the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <param name=\"applicationHost\">The server application host.</param>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Controller.Plugins.IPluginServiceRegistrator.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,MediaBrowser.Controller.IServerApplicationHost)\">\n            <summary>\n            Registers the plugin's services with the service collection.\n            </summary>\n            <param name=\"serviceCollection\">The service collection.</param>\n            <param name=\"applicationHost\">The server application host.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 7785,
                  "startColumn": 43,
                  "endLine": 7785,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            Defines the <see cref=\"T:MediaBrowser.Controller.Plugins.IPluginServiceRegistrator\" />.\n            </summary>\n            <remarks>\n            This interface is only used for service registration and requires a parameterless constructor.\n            </remarks>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Plugins.IPluginServiceRegistrator.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,MediaBrowser.Controller.IServerApplicationHost)\">\n",
                    "rendered": {
                      "text": "            Defines the <see cref=\"T:MediaBrowser.Controller.Plugins.IPluginServiceRegistrator\" />.\n            </summary>\n            <remarks>\n            This interface is only used for service registration and requires a parameterless constructor.\n            </remarks>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Plugins.IPluginServiceRegistrator.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,MediaBrowser.Controller.IServerApplicationHost)\">\n",
                      "markdown": "`            Defines the <see cref=\"T:MediaBrowser.Controller.Plugins.IPluginServiceRegistrator\" />.\n            </summary>\n            <remarks>\n            This interface is only used for service registration and requires a parameterless constructor.\n            </remarks>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Plugins.IPluginServiceRegistrator.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,MediaBrowser.Controller.IServerApplicationHost)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 7046,
                  "startColumn": 34,
                  "endLine": 7046,
                  "endColumn": 43,
                  "snippet": {
                    "text": "            <summary>\n            Initializes a new instance of the <see cref=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.ForceKeepAliveMessage\"/> class.\n            </summary>\n            <param name=\"data\">The timeout in seconds.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.ForceKeepAliveMessage.MessageType\">\n            <inheritdoc />\n",
                    "rendered": {
                      "text": "            <summary>\n            Initializes a new instance of the <see cref=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.ForceKeepAliveMessage\"/> class.\n            </summary>\n            <param name=\"data\">The timeout in seconds.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.ForceKeepAliveMessage.MessageType\">\n            <inheritdoc />\n",
                      "markdown": "`            <summary>\n            Initializes a new instance of the <see cref=\"T:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.ForceKeepAliveMessage\"/> class.\n            </summary>\n            <param name=\"data\">The timeout in seconds.</param>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Net.WebSocketMessages.Outbound.ForceKeepAliveMessage.MessageType\">\n            <inheritdoc />\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 6220,
                  "startColumn": 13,
                  "endLine": 6220,
                  "endColumn": 22,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.MediaEncoding.ITranscodeManager\">\n            <summary>\n            A service for managing media transcoding.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.MediaEncoding.ITranscodeManager.GetTranscodingJob(System.String)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.MediaEncoding.ITranscodeManager\">\n            <summary>\n            A service for managing media transcoding.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.MediaEncoding.ITranscodeManager.GetTranscodingJob(System.String)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Controller.MediaEncoding.ITranscodeManager\">\n            <summary>\n            A service for managing media transcoding.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.MediaEncoding.ITranscodeManager.GetTranscodingJob(System.String)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 6147,
                  "startColumn": 28,
                  "endLine": 6147,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.MediaEncoding.IMediaEncoder.SetFFmpegPath\">\n            <summary>\n            Sets the path to find FFmpeg.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.MediaEncoding.IMediaEncoder.UpdateEncoderPath(System.String,System.String)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.MediaEncoding.IMediaEncoder.SetFFmpegPath\">\n            <summary>\n            Sets the path to find FFmpeg.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.MediaEncoding.IMediaEncoder.UpdateEncoderPath(System.String,System.String)\">\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Controller.MediaEncoding.IMediaEncoder.SetFFmpegPath\">\n            <summary>\n            Sets the path to find FFmpeg.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.MediaEncoding.IMediaEncoder.UpdateEncoderPath(System.String,System.String)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 6133,
                  "startColumn": 20,
                  "endLine": 6133,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.MediaEncoding.IMediaEncoder.GetTimeParameter(System.Int64)\">\n            <summary>\n            Gets the time parameter.\n            </summary>\n            <param name=\"ticks\">The ticks.</param>\n            <returns>System.String.</returns>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:MediaBrowser.Controller.MediaEncoding.IMediaEncoder.GetTimeParameter(System.Int64)\">\n            <summary>\n            Gets the time parameter.\n            </summary>\n            <param name=\"ticks\">The ticks.</param>\n            <returns>System.String.</returns>\n",
                      "markdown": "`        </member>\n        <member name=\"M:MediaBrowser.Controller.MediaEncoding.IMediaEncoder.GetTimeParameter(System.Int64)\">\n            <summary>\n            Gets the time parameter.\n            </summary>\n            <param name=\"ticks\">The ticks.</param>\n            <returns>System.String.</returns>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 5951,
                  "startColumn": 52,
                  "endLine": 5951,
                  "endColumn": 61,
                  "snippet": {
                    "text": "            Refreshes the chapter images.\n            </summary>\n            <param name=\"video\">Video to use.</param>\n            <param name=\"directoryService\">Directory service to use.</param>\n            <param name=\"chapters\">Set of chapters to refresh.</param>\n            <param name=\"extractImages\">Option to extract images.</param>\n            <param name=\"saveChapters\">Option to save chapters.</param>\n",
                    "rendered": {
                      "text": "            Refreshes the chapter images.\n            </summary>\n            <param name=\"video\">Video to use.</param>\n            <param name=\"directoryService\">Directory service to use.</param>\n            <param name=\"chapters\">Set of chapters to refresh.</param>\n            <param name=\"extractImages\">Option to extract images.</param>\n            <param name=\"saveChapters\">Option to save chapters.</param>\n",
                      "markdown": "`            Refreshes the chapter images.\n            </summary>\n            <param name=\"video\">Video to use.</param>\n            <param name=\"directoryService\">Directory service to use.</param>\n            <param name=\"chapters\">Set of chapters to refresh.</param>\n            <param name=\"extractImages\">Option to extract images.</param>\n            <param name=\"saveChapters\">Option to save chapters.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 5547,
                  "startColumn": 28,
                  "endLine": 5547,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the start time ticks.\n            </summary>\n            <value>The start time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.MediaEncoding.BaseEncodingJobOptions.Width\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the start time ticks.\n            </summary>\n            <value>The start time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.MediaEncoding.BaseEncodingJobOptions.Width\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the start time ticks.\n            </summary>\n            <value>The start time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.MediaEncoding.BaseEncodingJobOptions.Width\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 5545,
                  "startColumn": 34,
                  "endLine": 5545,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.MediaEncoding.BaseEncodingJobOptions.StartTimeTicks\">\n            <summary>\n            Gets or sets the start time ticks.\n            </summary>\n            <value>The start time ticks.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.MediaEncoding.BaseEncodingJobOptions.StartTimeTicks\">\n            <summary>\n            Gets or sets the start time ticks.\n            </summary>\n            <value>The start time ticks.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Controller.MediaEncoding.BaseEncodingJobOptions.StartTimeTicks\">\n            <summary>\n            Gets or sets the start time ticks.\n            </summary>\n            <value>The start time ticks.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 5153,
                  "startColumn": 28,
                  "endLine": 5153,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.LiveTv.SeriesTimerInfo.ServiceName\">\n            <summary>\n            Gets or sets the service name.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.LiveTv.SeriesTimerInfo.Overview\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.LiveTv.SeriesTimerInfo.ServiceName\">\n            <summary>\n            Gets or sets the service name.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.LiveTv.SeriesTimerInfo.Overview\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Controller.LiveTv.SeriesTimerInfo.ServiceName\">\n            <summary>\n            Gets or sets the service name.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.LiveTv.SeriesTimerInfo.Overview\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4789,
                  "startColumn": 11,
                  "endLine": 4789,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.LiveTv.ITunerHostManager\">\n            <summary>\n            Service responsible for managing the <see cref=\"T:MediaBrowser.Controller.LiveTv.ITunerHost\"/>s.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.LiveTv.ITunerHostManager.TunerHosts\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.LiveTv.ITunerHostManager\">\n            <summary>\n            Service responsible for managing the <see cref=\"T:MediaBrowser.Controller.LiveTv.ITunerHost\"/>s.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.LiveTv.ITunerHostManager.TunerHosts\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Controller.LiveTv.ITunerHostManager\">\n            <summary>\n            Service responsible for managing the <see cref=\"T:MediaBrowser.Controller.LiveTv.ITunerHost\"/>s.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.LiveTv.ITunerHostManager.TunerHosts\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4739,
                  "startColumn": 46,
                  "endLine": 4739,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"recordingInfo\">The recording info.</param>\n            <param name=\"channel\">The channel associated with the recording timer.</param>\n            <param name=\"recordingEndDate\">The time to stop recording.</param>\n            <returns>Task representing the recording process.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.LiveTv.ITunerHost.Name\">\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"recordingInfo\">The recording info.</param>\n            <param name=\"channel\">The channel associated with the recording timer.</param>\n            <param name=\"recordingEndDate\">The time to stop recording.</param>\n            <returns>Task representing the recording process.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.LiveTv.ITunerHost.Name\">\n",
                      "markdown": "`            </summary>\n            <param name=\"recordingInfo\">The recording info.</param>\n            <param name=\"channel\">The channel associated with the recording timer.</param>\n            <param name=\"recordingEndDate\">The time to stop recording.</param>\n            <returns>Task representing the recording process.</returns>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.LiveTv.ITunerHost.Name\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4697,
                  "startColumn": 11,
                  "endLine": 4697,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.LiveTv.IRecordingsManager\">\n            <summary>\n            Service responsible for managing LiveTV recordings.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.LiveTv.IRecordingsManager.GetActiveRecordingPath(System.String)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.LiveTv.IRecordingsManager\">\n            <summary>\n            Service responsible for managing LiveTV recordings.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.LiveTv.IRecordingsManager.GetActiveRecordingPath(System.String)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Controller.LiveTv.IRecordingsManager\">\n            <summary>\n            Service responsible for managing LiveTV recordings.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.LiveTv.IRecordingsManager.GetActiveRecordingPath(System.String)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4276,
                  "startColumn": 11,
                  "endLine": 4276,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.LiveTv.IListingsManager\">\n            <summary>\n            Service responsible for managing <see cref=\"T:MediaBrowser.Controller.LiveTv.IListingsProvider\"/>s and mapping\n            their channels to channels provided by <see cref=\"T:MediaBrowser.Controller.LiveTv.ITunerHost\"/>s.\n            </summary>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.LiveTv.IListingsManager\">\n            <summary>\n            Service responsible for managing <see cref=\"T:MediaBrowser.Controller.LiveTv.IListingsProvider\"/>s and mapping\n            their channels to channels provided by <see cref=\"T:MediaBrowser.Controller.LiveTv.ITunerHost\"/>s.\n            </summary>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Controller.LiveTv.IListingsManager\">\n            <summary>\n            Service responsible for managing <see cref=\"T:MediaBrowser.Controller.LiveTv.IListingsProvider\"/>s and mapping\n            their channels to channels provided by <see cref=\"T:MediaBrowser.Controller.LiveTv.ITunerHost\"/>s.\n            </summary>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 4257,
                  "startColumn": 11,
                  "endLine": 4257,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.LiveTv.IGuideManager\">\n            <summary>\n            Service responsible for managing the Live TV guide.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.LiveTv.IGuideManager.GetGuideInfo\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.LiveTv.IGuideManager\">\n            <summary>\n            Service responsible for managing the Live TV guide.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.LiveTv.IGuideManager.GetGuideInfo\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Controller.LiveTv.IGuideManager\">\n            <summary>\n            Service responsible for managing the Live TV guide.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.LiveTv.IGuideManager.GetGuideInfo\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 3460,
                  "startColumn": 11,
                  "endLine": 3460,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.Library.ILibraryMonitor\">\n            <summary>\n            Service responsible for monitoring library filesystems for changes.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.ILibraryMonitor.Start\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.Library.ILibraryMonitor\">\n            <summary>\n            Service responsible for monitoring library filesystems for changes.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.ILibraryMonitor.Start\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Controller.Library.ILibraryMonitor\">\n            <summary>\n            Service responsible for monitoring library filesystems for changes.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.ILibraryMonitor.Start\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 3132,
                  "startColumn": 39,
                  "endLine": 3132,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            <param name=\"items\">The items.</param>\n            <param name=\"user\">The user.</param>\n            <param name=\"sortBy\">The sort by.</param>\n            <param name=\"sortOrder\">The sort order.</param>\n            <returns>IEnumerable{BaseItem}.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.ILibraryManager.GetUserRootFolder\">\n",
                    "rendered": {
                      "text": "            <param name=\"items\">The items.</param>\n            <param name=\"user\">The user.</param>\n            <param name=\"sortBy\">The sort by.</param>\n            <param name=\"sortOrder\">The sort order.</param>\n            <returns>IEnumerable{BaseItem}.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.ILibraryManager.GetUserRootFolder\">\n",
                      "markdown": "`            <param name=\"items\">The items.</param>\n            <param name=\"user\">The user.</param>\n            <param name=\"sortBy\">The sort by.</param>\n            <param name=\"sortOrder\">The sort order.</param>\n            <returns>IEnumerable{BaseItem}.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Library.ILibraryManager.GetUserRootFolder\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 3131,
                  "startColumn": 36,
                  "endLine": 3131,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            </summary>\n            <param name=\"items\">The items.</param>\n            <param name=\"user\">The user.</param>\n            <param name=\"sortBy\">The sort by.</param>\n            <param name=\"sortOrder\">The sort order.</param>\n            <returns>IEnumerable{BaseItem}.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            </summary>\n            <param name=\"items\">The items.</param>\n            <param name=\"user\">The user.</param>\n            <param name=\"sortBy\">The sort by.</param>\n            <param name=\"sortOrder\">The sort order.</param>\n            <returns>IEnumerable{BaseItem}.</returns>\n        </member>\n",
                      "markdown": "`            </summary>\n            <param name=\"items\">The items.</param>\n            <param name=\"user\">The user.</param>\n            <param name=\"sortBy\">The sort by.</param>\n            <param name=\"sortOrder\">The sort order.</param>\n            <returns>IEnumerable{BaseItem}.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 2885,
                  "startColumn": 13,
                  "endLine": 2885,
                  "endColumn": 22,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.ISystemManager\">\n            <summary>\n            A service for managing the application instance.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.ISystemManager.GetSystemInfo(Microsoft.AspNetCore.Http.HttpRequest)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.ISystemManager\">\n            <summary>\n            A service for managing the application instance.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.ISystemManager.GetSystemInfo(Microsoft.AspNetCore.Http.HttpRequest)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Controller.ISystemManager\">\n            <summary>\n            A service for managing the application instance.\n            </summary>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.ISystemManager.GetSystemInfo(Microsoft.AspNetCore.Http.HttpRequest)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 2792,
                  "startColumn": 47,
                  "endLine": 2792,
                  "endColumn": 51,
                  "snippet": {
                    "text": "            <summary>\n            Gets an URL that can be used to access the API over LAN.\n            </summary>\n            <param name=\"ipAddress\">An optional IP address to use.</param>\n            <param name=\"allowHttps\">A value indicating whether to allow HTTPS.</param>\n            <returns>The API URL.</returns>\n        </member>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets an URL that can be used to access the API over LAN.\n            </summary>\n            <param name=\"ipAddress\">An optional IP address to use.</param>\n            <param name=\"allowHttps\">A value indicating whether to allow HTTPS.</param>\n            <returns>The API URL.</returns>\n        </member>\n",
                      "markdown": "`            <summary>\n            Gets an URL that can be used to access the API over LAN.\n            </summary>\n            <param name=\"ipAddress\">An optional IP address to use.</param>\n            <param name=\"allowHttps\">A value indicating whether to allow HTTPS.</param>\n            <returns>The API URL.</returns>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 1884,
                  "startColumn": 22,
                  "endLine": 1884,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the ascending sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Entities.PersonInfo.ToString\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the ascending sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Entities.PersonInfo.ToString\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the ascending sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Entities.PersonInfo.ToString\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 1882,
                  "startColumn": 38,
                  "endLine": 1882,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.Entities.PersonInfo.SortOrder\">\n            <summary>\n            Gets or sets the ascending sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.Entities.PersonInfo.SortOrder\">\n            <summary>\n            Gets or sets the ascending sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Controller.Entities.PersonInfo.SortOrder\">\n            <summary>\n            Gets or sets the ascending sort order.\n            </summary>\n            <value>The sort order.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 1631,
                  "startColumn": 53,
                  "endLine": 1631,
                  "endColumn": 58,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.Entities.ICollectionFolder\">\n            <summary>\n            This is just a marker interface to denote top level folders.\n            </summary>\n        </member>\n        <member name=\"T:MediaBrowser.Controller.Entities.IHasAspectRatio\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:MediaBrowser.Controller.Entities.ICollectionFolder\">\n            <summary>\n            This is just a marker interface to denote top level folders.\n            </summary>\n        </member>\n        <member name=\"T:MediaBrowser.Controller.Entities.IHasAspectRatio\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:MediaBrowser.Controller.Entities.ICollectionFolder\">\n            <summary>\n            This is just a marker interface to denote top level folders.\n            </summary>\n        </member>\n        <member name=\"T:MediaBrowser.Controller.Entities.IHasAspectRatio\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 1516,
                  "startColumn": 56,
                  "endLine": 1516,
                  "endColumn": 65,
                  "snippet": {
                    "text": "            Get the children of this folder from the actual file system.\n            </summary>\n            <returns>IEnumerable{BaseItem}.</returns>\n            <param name=\"directoryService\">The directory service to use for operation.</param>\n            <returns>Returns set of base items.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Entities.Folder.GetCachedChildren\">\n",
                    "rendered": {
                      "text": "            Get the children of this folder from the actual file system.\n            </summary>\n            <returns>IEnumerable{BaseItem}.</returns>\n            <param name=\"directoryService\">The directory service to use for operation.</param>\n            <returns>Returns set of base items.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Entities.Folder.GetCachedChildren\">\n",
                      "markdown": "`            Get the children of this folder from the actual file system.\n            </summary>\n            <returns>IEnumerable{BaseItem}.</returns>\n            <param name=\"directoryService\">The directory service to use for operation.</param>\n            <returns>Returns set of base items.</returns>\n        </member>\n        <member name=\"M:MediaBrowser.Controller.Entities.Folder.GetCachedChildren\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 1057,
                  "startColumn": 26,
                  "endLine": 1057,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Entities.BaseItem.ProductionYear\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Entities.BaseItem.ProductionYear\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Entities.BaseItem.ProductionYear\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 1055,
                  "startColumn": 32,
                  "endLine": 1055,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.Entities.BaseItem.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.Entities.BaseItem.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Controller.Entities.BaseItem.RunTimeTicks\">\n            <summary>\n            Gets or sets the run time ticks.\n            </summary>\n            <value>The run time ticks.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 53,
                  "endLine": 248,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.SupportsSortOrderToggle\">\n            <summary>\n            Gets or sets a value indicating whether a sort ascending/descending toggle is supported or not.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.AutoRefreshLevels\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.SupportsSortOrderToggle\">\n            <summary>\n            Gets or sets a value indicating whether a sort ascending/descending toggle is supported or not.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.AutoRefreshLevels\">\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.SupportsSortOrderToggle\">\n            <summary>\n            Gets or sets a value indicating whether a sort ascending/descending toggle is supported or not.\n            </summary>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.AutoRefreshLevels\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 30,
                  "endLine": 244,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            <summary>\n            Gets or sets the default sort orders.\n            </summary>\n            <value>The default sort orders.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.SupportsSortOrderToggle\">\n            <summary>\n",
                    "rendered": {
                      "text": "            <summary>\n            Gets or sets the default sort orders.\n            </summary>\n            <value>The default sort orders.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.SupportsSortOrderToggle\">\n            <summary>\n",
                      "markdown": "`            <summary>\n            Gets or sets the default sort orders.\n            </summary>\n            <value>The default sort orders.</value>\n        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.SupportsSortOrderToggle\">\n            <summary>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/MediaBrowser.Controller.xml"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 36,
                  "endLine": 242,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.DefaultSortFields\">\n            <summary>\n            Gets or sets the default sort orders.\n            </summary>\n            <value>The default sort orders.</value>\n        </member>\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.DefaultSortFields\">\n            <summary>\n            Gets or sets the default sort orders.\n            </summary>\n            <value>The default sort orders.</value>\n        </member>\n",
                      "markdown": "`        </member>\n        <member name=\"P:MediaBrowser.Controller.Channels.InternalChannelFeatures.DefaultSortFields\">\n            <summary>\n            Gets or sets the default sort orders.\n            </summary>\n            <value>The default sort orders.</value>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.MediaEncoding.Hls.xml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 32,
                  "endLine": 34,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            Adds the hls playlist generators to the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/>.\n            </summary>\n            <param name=\"serviceCollection\">An instance of the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/> interface.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"T:Jellyfin.MediaEncoding.Hls.Extractors.FfProbeKeyframeExtractor\">\n            <inheritdoc />\n",
                    "rendered": {
                      "text": "            Adds the hls playlist generators to the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/>.\n            </summary>\n            <param name=\"serviceCollection\">An instance of the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/> interface.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"T:Jellyfin.MediaEncoding.Hls.Extractors.FfProbeKeyframeExtractor\">\n            <inheritdoc />\n",
                      "markdown": "`            Adds the hls playlist generators to the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/>.\n            </summary>\n            <param name=\"serviceCollection\">An instance of the <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"/> interface.</param>\n            <returns>The updated service collection.</returns>\n        </member>\n        <member name=\"T:Jellyfin.MediaEncoding.Hls.Extractors.FfProbeKeyframeExtractor\">\n            <inheritdoc />\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.LiveTv.xml"
                },
                "region": {
                  "startLine": 1583,
                  "startColumn": 59,
                  "endLine": 1583,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </mem`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.LiveTv.xml"
                },
                "region": {
                  "startLine": 1581,
                  "startColumn": 67,
                  "endLine": 1581,
                  "endColumn": 71,
                  "snippet": {
                    "text": "; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.KeyValueRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.KeyValueRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`; false if no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.KeyValueRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.LiveTv.xml"
                },
                "region": {
                  "startLine": 1551,
                  "startColumn": 59,
                  "endLine": 1551,
                  "endColumn": 63,
                  "snippet": {
                    "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.KeyValueRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the KeyValueRegex method.</summary>\n        </membe",
                    "rendered": {
                      "text": "m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.KeyValueRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the KeyValueRegex method.</summary>\n        </membe",
                      "markdown": "`m.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <member name=\"T:System.Text.RegularExpressions.Generated.KeyValueRegex_1\">\n            <summary>Custom <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived type for the KeyValueRegex method.</summary>\n        </membe`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.LiveTv.xml"
                },
                "region": {
                  "startLine": 1549,
                  "startColumn": 67,
                  "endLine": 1549,
                  "endColumn": 71,
                  "snippet": {
                    "text": "f no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.ChannelAndProgramRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                    "rendered": {
                      "text": "f no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.ChannelAndProgramRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m",
                      "markdown": "`f no more matches are possible.</returns>\n        </member>\n        <member name=\"M:System.Text.RegularExpressions.Generated.ChannelAndProgramRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})\">\n            <summary>Determine whether <paramref name=\"inputSpan\"/> at base.runtextpos is a match for the regular expression.</summary>\n            <param name=\"inputSpan\">The text being scanned by the regular expression.</param>\n            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>\n        </member>\n        <m`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.LiveTv.xml"
                },
                "region": {
                  "startLine": 1489,
                  "startColumn": 61,
                  "endLine": 1489,
                  "endColumn": 65,
                  "snippet": {
                    "text": "                ○ Match a character in the set [-0-9A-Z_a-z\\u0130\\u212A] atomically at least once.<br/>\n            ○ Match the string \"=\\\"\".<br/>\n            ○ 2nd capture group.<br/>\n                ○ Match a character other than '\"' atomically at least once.<br/>\n            ○ Match '\"'.<br/>\n            </code>\n            </remarks>\n",
                    "rendered": {
                      "text": "                ○ Match a character in the set [-0-9A-Z_a-z\\u0130\\u212A] atomically at least once.<br/>\n            ○ Match the string \"=\\\"\".<br/>\n            ○ 2nd capture group.<br/>\n                ○ Match a character other than '\"' atomically at least once.<br/>\n            ○ Match '\"'.<br/>\n            </code>\n            </remarks>\n",
                      "markdown": "`                ○ Match a character in the set [-0-9A-Z_a-z\\u0130\\u212A] atomically at least once.<br/>\n            ○ Match the string \"=\\\"\".<br/>\n            ○ 2nd capture group.<br/>\n                ○ Match a character other than '\"' atomically at least once.<br/>\n            ○ Match '\"'.<br/>\n            </code>\n            </remarks>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.LiveTv.xml"
                },
                "region": {
                  "startLine": 1486,
                  "startColumn": 83,
                  "endLine": 1486,
                  "endColumn": 87,
                  "snippet": {
                    "text": "            Explanation:<br/>\n            <code>\n            ○ 1st capture group.<br/>\n                ○ Match a character in the set [-0-9A-Z_a-z\\u0130\\u212A] atomically at least once.<br/>\n            ○ Match the string \"=\\\"\".<br/>\n            ○ 2nd capture group.<br/>\n                ○ Match a character other than '\"' atomically at least once.<br/>\n",
                    "rendered": {
                      "text": "            Explanation:<br/>\n            <code>\n            ○ 1st capture group.<br/>\n                ○ Match a character in the set [-0-9A-Z_a-z\\u0130\\u212A] atomically at least once.<br/>\n            ○ Match the string \"=\\\"\".<br/>\n            ○ 2nd capture group.<br/>\n                ○ Match a character other than '\"' atomically at least once.<br/>\n",
                      "markdown": "`            Explanation:<br/>\n            <code>\n            ○ 1st capture group.<br/>\n                ○ Match a character in the set [-0-9A-Z_a-z\\u0130\\u212A] atomically at least once.<br/>\n            ○ Match the string \"=\\\"\".<br/>\n            ○ 2nd capture group.<br/>\n                ○ Match a character other than '\"' atomically at least once.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.LiveTv.xml"
                },
                "region": {
                  "startLine": 1467,
                  "startColumn": 61,
                  "endLine": 1467,
                  "endColumn": 65,
                  "snippet": {
                    "text": "            <code>\n            ○ Match the string \"/ch\".<br/>\n            ○ 1st capture group.<br/>\n                ○ Match a character in the set [0-9] greedily at least once.<br/>\n            ○ Match '-' atomically, optionally.<br/>\n            ○ 2nd capture group.<br/>\n                ○ Match a character in the set [0-9] atomically any number of times.<br/>\n",
                    "rendered": {
                      "text": "            <code>\n            ○ Match the string \"/ch\".<br/>\n            ○ 1st capture group.<br/>\n                ○ Match a character in the set [0-9] greedily at least once.<br/>\n            ○ Match '-' atomically, optionally.<br/>\n            ○ 2nd capture group.<br/>\n                ○ Match a character in the set [0-9] atomically any number of times.<br/>\n",
                      "markdown": "`            <code>\n            ○ Match the string \"/ch\".<br/>\n            ○ 1st capture group.<br/>\n                ○ Match a character in the set [0-9] greedily at least once.<br/>\n            ○ Match '-' atomically, optionally.<br/>\n            ○ 2nd capture group.<br/>\n                ○ Match a character in the set [0-9] atomically any number of times.<br/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.LiveTv.xml"
                },
                "region": {
                  "startLine": 1589,
                  "startColumn": 28,
                  "endLine": 1589,
                  "endColumn": 37,
                  "snippet": {
                    "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                    "rendered": {
                      "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                      "markdown": "`rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.LiveTv.xml"
                },
                "region": {
                  "startLine": 1428,
                  "startColumn": 13,
                  "endLine": 1428,
                  "endColumn": 22,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"T:Jellyfin.LiveTv.Recordings.RecordingsMetadataManager\">\n            <summary>\n            A service responsible for saving recording metadata.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.LiveTv.Recordings.RecordingsMetadataManager.#ctor(Microsoft.Extensions.Logging.ILogger{Jellyfin.LiveTv.Recordings.RecordingsMetadataManager},MediaBrowser.Common.Configuration.IConfigurationManager,MediaBrowser.Controller.Library.ILibraryManager)\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"T:Jellyfin.LiveTv.Recordings.RecordingsMetadataManager\">\n            <summary>\n            A service responsible for saving recording metadata.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.LiveTv.Recordings.RecordingsMetadataManager.#ctor(Microsoft.Extensions.Logging.ILogger{Jellyfin.LiveTv.Recordings.RecordingsMetadataManager},MediaBrowser.Common.Configuration.IConfigurationManager,MediaBrowser.Controller.Library.ILibraryManager)\">\n",
                      "markdown": "`        </member>\n        <member name=\"T:Jellyfin.LiveTv.Recordings.RecordingsMetadataManager\">\n            <summary>\n            A service responsible for saving recording metadata.\n            </summary>\n        </member>\n        <member name=\"M:Jellyfin.LiveTv.Recordings.RecordingsMetadataManager.#ctor(Microsoft.Extensions.Logging.ILogger{Jellyfin.LiveTv.Recordings.RecordingsMetadataManager},MediaBrowser.Common.Configuration.IConfigurationManager,MediaBrowser.Controller.Library.ILibraryManager)\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Drawing.Skia.xml"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 45,
                  "endLine": 205,
                  "endColumn": 49,
                  "snippet": {
                    "text": "            Create a thumb collage.\n            </summary>\n            <param name=\"paths\">The paths of the images to use in the collage.</param>\n            <param name=\"outputPath\">The path at which to place the resulting image.</param>\n            <param name=\"width\">The desired width of the collage.</param>\n            <param name=\"height\">The desired height of the collage.</param>\n            <param name=\"libraryName\">The name of the library to draw on the collage.</param>\n",
                    "rendered": {
                      "text": "            Create a thumb collage.\n            </summary>\n            <param name=\"paths\">The paths of the images to use in the collage.</param>\n            <param name=\"outputPath\">The path at which to place the resulting image.</param>\n            <param name=\"width\">The desired width of the collage.</param>\n            <param name=\"height\">The desired height of the collage.</param>\n            <param name=\"libraryName\">The name of the library to draw on the collage.</param>\n",
                      "markdown": "`            Create a thumb collage.\n            </summary>\n            <param name=\"paths\">The paths of the images to use in the collage.</param>\n            <param name=\"outputPath\">The path at which to place the resulting image.</param>\n            <param name=\"width\">The desired width of the collage.</param>\n            <param name=\"height\">The desired height of the collage.</param>\n            <param name=\"libraryName\">The name of the library to draw on the collage.</param>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Drawing.Skia.xml"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 45,
                  "endLine": 196,
                  "endColumn": 49,
                  "snippet": {
                    "text": "            Create a square collage.\n            </summary>\n            <param name=\"paths\">The paths of the images to use in the collage.</param>\n            <param name=\"outputPath\">The path at which to place the resulting collage image.</param>\n            <param name=\"width\">The desired width of the collage.</param>\n            <param name=\"height\">The desired height of the collage.</param>\n        </member>\n",
                    "rendered": {
                      "text": "            Create a square collage.\n            </summary>\n            <param name=\"paths\">The paths of the images to use in the collage.</param>\n            <param name=\"outputPath\">The path at which to place the resulting collage image.</param>\n            <param name=\"width\">The desired width of the collage.</param>\n            <param name=\"height\">The desired height of the collage.</param>\n        </member>\n",
                      "markdown": "`            Create a square collage.\n            </summary>\n            <param name=\"paths\">The paths of the images to use in the collage.</param>\n            <param name=\"outputPath\">The path at which to place the resulting collage image.</param>\n            <param name=\"width\">The desired width of the collage.</param>\n            <param name=\"height\">The desired height of the collage.</param>\n        </member>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Drawing.Skia.xml"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 28,
                  "endLine": 289,
                  "endColumn": 37,
                  "snippet": {
                    "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                    "rendered": {
                      "text": "rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"",
                      "markdown": "`rated.Utilities\">\n            <summary>Helper methods used by generated <see cref=\"T:System.Text.RegularExpressions.Regex\"/>-derived implementations.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout\">\n            <summary>Default timeout value set in <see cref=\"T:System.AppContext\"/>, or <see cref=\"F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout\"/> if none was set.</summary>\n        </member>\n        <member name=\"F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout\">\n            <summary>Whether <see cref=\"`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jellyfin-10.9.11-r0.apk/jellyfin-10.9.11-r0/usr/lib/jellyfin/Jellyfin.Drawing.Skia.xml"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 51,
                  "endLine": 222,
                  "endColumn": 56,
                  "snippet": {
                    "text": "        </member>\n        <member name=\"M:Jellyfin.Drawing.Skia.UnplayedCountIndicator.DrawUnplayedCountIndicator(SkiaSharp.SKCanvas,MediaBrowser.Model.Drawing.ImageDimensions,System.Int32)\">\n            <summary>\n            Draw an unplayed count indicator in the top right corner of a canvas.\n            </summary>\n            <param name=\"canvas\">The canvas to draw the indicator on.</param>\n            <param name=\"imageSize\">\n",
                    "rendered": {
                      "text": "        </member>\n        <member name=\"M:Jellyfin.Drawing.Skia.UnplayedCountIndicator.DrawUnplayedCountIndicator(SkiaSharp.SKCanvas,MediaBrowser.Model.Drawing.ImageDimensions,System.Int32)\">\n            <summary>\n            Draw an unplayed count indicator in the top right corner of a canvas.\n            </summary>\n            <param name=\"canvas\">The canvas to draw the indicator on.</param>\n            <param name=\"imageSize\">\n",
                      "markdown": "`        </member>\n        <member name=\"M:Jellyfin.Drawing.Skia.UnplayedCountIndicator.DrawUnplayedCountIndicator(SkiaSharp.SKCanvas,MediaBrowser.Model.Drawing.ImageDimensions,System.Int32)\">\n            <summary>\n            Draw an unplayed count indicator in the top right corner of a canvas.\n            </summary>\n            <param name=\"canvas\">The canvas to draw the indicator on.</param>\n            <param name=\"imageSize\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}