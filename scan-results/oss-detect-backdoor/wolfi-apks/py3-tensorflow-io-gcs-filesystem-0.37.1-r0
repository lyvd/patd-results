{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/mongodb_writer_ops.py"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 51,
                  "endLine": 58,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            uri: A string, representing the uri of the mongo server or replicaset.\n                To connect to a MongoDB server with username and password\n                based authentication, the following uri pattern can be used.\n                Ex: `\"mongodb://mongoadmin:default_password@localhost:27017\"`.\n\n                Connecting to a replica set is much like connecting to a\n                standalone MongoDB server. Simply specify the replica set name\n",
                    "rendered": {
                      "text": "            uri: A string, representing the uri of the mongo server or replicaset.\n                To connect to a MongoDB server with username and password\n                based authentication, the following uri pattern can be used.\n                Ex: `\"mongodb://mongoadmin:default_password@localhost:27017\"`.\n\n                Connecting to a replica set is much like connecting to a\n                standalone MongoDB server. Simply specify the replica set name\n",
                      "markdown": "`            uri: A string, representing the uri of the mongo server or replicaset.\n                To connect to a MongoDB server with username and password\n                based authentication, the following uri pattern can be used.\n                Ex: `\"mongodb://mongoadmin:default_password@localhost:27017\"`.\n\n                Connecting to a replica set is much like connecting to a\n                standalone MongoDB server. Simply specify the replica set name\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/mongodb_writer_ops.py"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 65,
                  "endLine": 56,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n        Args:\n            uri: A string, representing the uri of the mongo server or replicaset.\n                To connect to a MongoDB server with username and password\n                based authentication, the following uri pattern can be used.\n                Ex: `\"mongodb://mongoadmin:default_password@localhost:27017\"`.\n\n",
                    "rendered": {
                      "text": "\n        Args:\n            uri: A string, representing the uri of the mongo server or replicaset.\n                To connect to a MongoDB server with username and password\n                based authentication, the following uri pattern can be used.\n                Ex: `\"mongodb://mongoadmin:default_password@localhost:27017\"`.\n\n",
                      "markdown": "`\n        Args:\n            uri: A string, representing the uri of the mongo server or replicaset.\n                To connect to a MongoDB server with username and password\n                based authentication, the following uri pattern can be used.\n                Ex: `\"mongodb://mongoadmin:default_password@localhost:27017\"`.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/mongodb_writer_ops.py"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 44,
                  "endLine": 39,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n    Example:\n\n    >>> URI = \"mongodb://mongoadmin:default_password@localhost:27017\"\n    >>> DATABASE = \"tfiodb\"\n    >>> COLLECTION = \"test\"\n    >>> writer = tfio.experimental.mongodb.MongoDBWriter(\n",
                    "rendered": {
                      "text": "\n    Example:\n\n    >>> URI = \"mongodb://mongoadmin:default_password@localhost:27017\"\n    >>> DATABASE = \"tfiodb\"\n    >>> COLLECTION = \"test\"\n    >>> writer = tfio.experimental.mongodb.MongoDBWriter(\n",
                      "markdown": "`\n    Example:\n\n    >>> URI = \"mongodb://mongoadmin:default_password@localhost:27017\"\n    >>> DATABASE = \"tfiodb\"\n    >>> COLLECTION = \"test\"\n    >>> writer = tfio.experimental.mongodb.MongoDBWriter(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/mongodb_writer_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/json_io_tensor_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/json_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor_ops.py"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 33,
                  "endLine": 393,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        Returns:\n            A `Tensor` with value obtained from this `IOTensor`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOToTensor\")):\n            return self._tensor\n\n\n",
                    "rendered": {
                      "text": "        Returns:\n            A `Tensor` with value obtained from this `IOTensor`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOToTensor\")):\n            return self._tensor\n\n\n",
                      "markdown": "`        Returns:\n            A `Tensor` with value obtained from this `IOTensor`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOToTensor\")):\n            return self._tensor\n\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor_ops.py"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 33,
                  "endLine": 331,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        Returns:\n            A `Tensor` with value obtained from this `IOTensor`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOToTensor\")):\n            return self._tensor\n\n\n",
                    "rendered": {
                      "text": "        Returns:\n            A `Tensor` with value obtained from this `IOTensor`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOToTensor\")):\n            return self._tensor\n\n\n",
                      "markdown": "`        Returns:\n            A `Tensor` with value obtained from this `IOTensor`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOToTensor\")):\n            return self._tensor\n\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor_ops.py"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 33,
                  "endLine": 297,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        Returns:\n            A `Tensor` with value obtained from this `IOTensor`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOToTensor\")):\n            return self.__getitem__(slice(None, None))\n\n\n",
                    "rendered": {
                      "text": "        Returns:\n            A `Tensor` with value obtained from this `IOTensor`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOToTensor\")):\n            return self.__getitem__(slice(None, None))\n\n\n",
                      "markdown": "`        Returns:\n            A `Tensor` with value obtained from this `IOTensor`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOToTensor\")):\n            return self.__getitem__(slice(None, None))\n\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor_ops.py"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 9,
                  "endLine": 230,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    # =============================================================================\n    def __getitem__(self, key):\n        \"\"\"Returns the specified piece of this IOTensor.\"\"\"\n        # Find out the indices based on length and key,\n        # based on python slice()'s indices method:\n        index = key if isinstance(key, slice) else slice(key, key + 1)\n        items = self._function(start=index.start, stop=index.stop)\n",
                    "rendered": {
                      "text": "    # =============================================================================\n    def __getitem__(self, key):\n        \"\"\"Returns the specified piece of this IOTensor.\"\"\"\n        # Find out the indices based on length and key,\n        # based on python slice()'s indices method:\n        index = key if isinstance(key, slice) else slice(key, key + 1)\n        items = self._function(start=index.start, stop=index.stop)\n",
                      "markdown": "`    # =============================================================================\n    def __getitem__(self, key):\n        \"\"\"Returns the specified piece of this IOTensor.\"\"\"\n        # Find out the indices based on length and key,\n        # based on python slice()'s indices method:\n        index = key if isinstance(key, slice) else slice(key, key + 1)\n        items = self._function(start=index.start, stop=index.stop)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/utils/deprecation.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/utils/__init__.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/kafka_io_tensor_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/hdf5_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_row_set.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/__init__.py"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n    # Add datapath to load if en var is set, used for running tests where shared\n    # libraries are built in a different path\n    datapath = os.environ.get(\"TFIO_DATAPATH\")\n    if datapath is not None:\n        # Build filename from:\n        # `datapath` + `tensorflow_io` + `package_name` + `relpath_to_library`\n",
                    "rendered": {
                      "text": "\n    # Add datapath to load if en var is set, used for running tests where shared\n    # libraries are built in a different path\n    datapath = os.environ.get(\"TFIO_DATAPATH\")\n    if datapath is not None:\n        # Build filename from:\n        # `datapath` + `tensorflow_io` + `package_name` + `relpath_to_library`\n",
                      "markdown": "`\n    # Add datapath to load if en var is set, used for running tests where shared\n    # libraries are built in a different path\n    datapath = os.environ.get(\"TFIO_DATAPATH\")\n    if datapath is not None:\n        # Build filename from:\n        # `datapath` + `tensorflow_io` + `package_name` + `relpath_to_library`\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/__init__.py"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 18,
                  "endLine": 37,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n    # Add datapath to load if en var is set, used for running tests where shared\n    # libraries are built in a different path\n    datapath = os.environ.get(\"TFIO_DATAPATH\")\n    if datapath is not None:\n        # Build filename from:\n        # `datapath` + `tensorflow_io` + `package_name` + `relpath_to_library`\n",
                    "rendered": {
                      "text": "\n    # Add datapath to load if en var is set, used for running tests where shared\n    # libraries are built in a different path\n    datapath = os.environ.get(\"TFIO_DATAPATH\")\n    if datapath is not None:\n        # Build filename from:\n        # `datapath` + `tensorflow_io` + `package_name` + `relpath_to_library`\n",
                      "markdown": "`\n    # Add datapath to load if en var is set, used for running tests where shared\n    # libraries are built in a different path\n    datapath = os.environ.get(\"TFIO_DATAPATH\")\n    if datapath is not None:\n        # Build filename from:\n        # `datapath` + `tensorflow_io` + `package_name` + `relpath_to_library`\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/__init__.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/text_ops.py"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 19,
                  "endLine": 55,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    \"\"\"read_text\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    offset = kwargs.get(\"offset\", 0)\n    length = kwargs.get(\"length\", -1)\n    return core_ops.io_read_text(filename, offset=offset, length=length, memory=memory)\n\n\n",
                    "rendered": {
                      "text": "    \"\"\"read_text\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    offset = kwargs.get(\"offset\", 0)\n    length = kwargs.get(\"length\", -1)\n    return core_ops.io_read_text(filename, offset=offset, length=length, memory=memory)\n\n\n",
                      "markdown": "`    \"\"\"read_text\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    offset = kwargs.get(\"offset\", 0)\n    length = kwargs.get(\"length\", -1)\n    return core_ops.io_read_text(filename, offset=offset, length=length, memory=memory)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/text_ops.py"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 19,
                  "endLine": 54,
                  "endColumn": 24,
                  "snippet": {
                    "text": "def read_text(filename, **kwargs):\n    \"\"\"read_text\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    offset = kwargs.get(\"offset\", 0)\n    length = kwargs.get(\"length\", -1)\n    return core_ops.io_read_text(filename, offset=offset, length=length, memory=memory)\n\n",
                    "rendered": {
                      "text": "def read_text(filename, **kwargs):\n    \"\"\"read_text\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    offset = kwargs.get(\"offset\", 0)\n    length = kwargs.get(\"length\", -1)\n    return core_ops.io_read_text(filename, offset=offset, length=length, memory=memory)\n\n",
                      "markdown": "`def read_text(filename, **kwargs):\n    \"\"\"read_text\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    offset = kwargs.get(\"offset\", 0)\n    length = kwargs.get(\"length\", -1)\n    return core_ops.io_read_text(filename, offset=offset, length=length, memory=memory)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/text_ops.py"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 19,
                  "endLine": 53,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\ndef read_text(filename, **kwargs):\n    \"\"\"read_text\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    offset = kwargs.get(\"offset\", 0)\n    length = kwargs.get(\"length\", -1)\n    return core_ops.io_read_text(filename, offset=offset, length=length, memory=memory)\n",
                    "rendered": {
                      "text": "\ndef read_text(filename, **kwargs):\n    \"\"\"read_text\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    offset = kwargs.get(\"offset\", 0)\n    length = kwargs.get(\"length\", -1)\n    return core_ops.io_read_text(filename, offset=offset, length=length, memory=memory)\n",
                      "markdown": "`\ndef read_text(filename, **kwargs):\n    \"\"\"read_text\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    offset = kwargs.get(\"offset\", 0)\n    length = kwargs.get(\"length\", -1)\n    return core_ops.io_read_text(filename, offset=offset, length=length, memory=memory)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/text_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/parquet_io_tensor_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/parquet_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/ffmpeg_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/feather_io_tensor_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/pubsub_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/parse_avro_ops.py"
                },
                "region": {
                  "startLine": 546,
                  "startColumn": 38,
                  "endLine": 546,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n    dense_defaults_vec = []\n    for i, key in enumerate(dense_keys):\n        default_value = dense_defaults.get(key)\n        dense_shape = dense_shapes[i]\n\n        # Whenever the user did not provide a default, set it\n",
                    "rendered": {
                      "text": "\n    dense_defaults_vec = []\n    for i, key in enumerate(dense_keys):\n        default_value = dense_defaults.get(key)\n        dense_shape = dense_shapes[i]\n\n        # Whenever the user did not provide a default, set it\n",
                      "markdown": "`\n    dense_defaults_vec = []\n    for i, key in enumerate(dense_keys):\n        default_value = dense_defaults.get(key)\n        dense_shape = dense_shapes[i]\n\n        # Whenever the user did not provide a default, set it\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/parse_avro_ops.py"
                },
                "region": {
                  "startLine": 534,
                  "startColumn": 38,
                  "endLine": 534,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            % (len(sparse_types), num_sparse)\n        )\n    if num_dense + num_sparse == 0:\n        raise ValueError(\"Must provide at least one sparse key or dense key\")\n    if not set(dense_keys).isdisjoint(set(sparse_keys)):\n        raise ValueError(\n            \"Dense and sparse keys must not intersect; intersection: %s\"\n",
                    "rendered": {
                      "text": "            % (len(sparse_types), num_sparse)\n        )\n    if num_dense + num_sparse == 0:\n        raise ValueError(\"Must provide at least one sparse key or dense key\")\n    if not set(dense_keys).isdisjoint(set(sparse_keys)):\n        raise ValueError(\n            \"Dense and sparse keys must not intersect; intersection: %s\"\n",
                      "markdown": "`            % (len(sparse_types), num_sparse)\n        )\n    if num_dense + num_sparse == 0:\n        raise ValueError(\"Must provide at least one sparse key or dense key\")\n    if not set(dense_keys).isdisjoint(set(sparse_keys)):\n        raise ValueError(\n            \"Dense and sparse keys must not intersect; intersection: %s\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/parse_avro_ops.py"
                },
                "region": {
                  "startLine": 493,
                  "startColumn": 29,
                  "endLine": 493,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        either fully defined, or may contain an unknown first dimension.\n        An unknown first dimension means the feature is treated as having\n        a variable number of blocks, and the output shape along this dimension\n        is considered unknown at graph build time.  Padding is applied for\n        minibatch elements smaller than the maximum number of blocks for the\n        given feature along this dimension.\n\n",
                    "rendered": {
                      "text": "        either fully defined, or may contain an unknown first dimension.\n        An unknown first dimension means the feature is treated as having\n        a variable number of blocks, and the output shape along this dimension\n        is considered unknown at graph build time.  Padding is applied for\n        minibatch elements smaller than the maximum number of blocks for the\n        given feature along this dimension.\n\n",
                      "markdown": "`        either fully defined, or may contain an unknown first dimension.\n        An unknown first dimension means the feature is treated as having\n        a variable number of blocks, and the output shape along this dimension\n        is considered unknown at graph build time.  Padding is applied for\n        minibatch elements smaller than the maximum number of blocks for the\n        given feature along this dimension.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/parse_avro_ops.py"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 29,
                  "endLine": 162,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        either fully defined, or may contain an unknown first dimension.\n        An unknown first dimension means the feature is treated as having\n        a variable number of blocks, and the output shape along this dimension\n        is considered unknown at graph build time.  Padding is applied for\n        minibatch elements smaller than the maximum number of blocks for the\n        given feature along this dimension.\n        name: A name for this operation (optional).\n",
                    "rendered": {
                      "text": "        either fully defined, or may contain an unknown first dimension.\n        An unknown first dimension means the feature is treated as having\n        a variable number of blocks, and the output shape along this dimension\n        is considered unknown at graph build time.  Padding is applied for\n        minibatch elements smaller than the maximum number of blocks for the\n        given feature along this dimension.\n        name: A name for this operation (optional).\n",
                      "markdown": "`        either fully defined, or may contain an unknown first dimension.\n        An unknown first dimension means the feature is treated as having\n        a variable number of blocks, and the output shape along this dimension\n        is considered unknown at graph build time.  Padding is applied for\n        minibatch elements smaller than the maximum number of blocks for the\n        given feature along this dimension.\n        name: A name for this operation (optional).\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/parse_avro_ops.py"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 30,
                  "endLine": 51,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    A `values[i]` comes from a position `k` in the feature of an example at batch\n    entry `batch`. This positional information is recorded in `indices[i]` as\n    `[batch, index_0, index_1, ...]` where `index_j` is the `k-th` value of\n    the feature in the example at with key `SparseFeature.index_key[j]`.\n    In other words, we split the indices (except the first index indicating the\n    batch entry) of a `SparseTensor` by dimension into different features of the\n    avro record. Due to its complexity a `VarLenFeature` should be preferred\n",
                    "rendered": {
                      "text": "    A `values[i]` comes from a position `k` in the feature of an example at batch\n    entry `batch`. This positional information is recorded in `indices[i]` as\n    `[batch, index_0, index_1, ...]` where `index_j` is the `k-th` value of\n    the feature in the example at with key `SparseFeature.index_key[j]`.\n    In other words, we split the indices (except the first index indicating the\n    batch entry) of a `SparseTensor` by dimension into different features of the\n    avro record. Due to its complexity a `VarLenFeature` should be preferred\n",
                      "markdown": "`    A `values[i]` comes from a position `k` in the feature of an example at batch\n    entry `batch`. This positional information is recorded in `indices[i]` as\n    `[batch, index_0, index_1, ...]` where `index_j` is the `k-th` value of\n    the feature in the example at with key `SparseFeature.index_key[j]`.\n    In other words, we split the indices (except the first index indicating the\n    batch entry) of a `SparseTensor` by dimension into different features of the\n    avro record. Due to its complexity a `VarLenFeature` should be preferred\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/parse_avro_ops.py"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 72,
                  "endLine": 48,
                  "endColumn": 76,
                  "snippet": {
                    "text": "    Each `SparseFeature` maps to a `SparseTensor` of the specified type\n    representing a Tensor of `dense_shape` `[batch_size] + SparseFeature.size`.\n    Its `values` come from the feature in the examples with key `value_key`.\n    A `values[i]` comes from a position `k` in the feature of an example at batch\n    entry `batch`. This positional information is recorded in `indices[i]` as\n    `[batch, index_0, index_1, ...]` where `index_j` is the `k-th` value of\n    the feature in the example at with key `SparseFeature.index_key[j]`.\n",
                    "rendered": {
                      "text": "    Each `SparseFeature` maps to a `SparseTensor` of the specified type\n    representing a Tensor of `dense_shape` `[batch_size] + SparseFeature.size`.\n    Its `values` come from the feature in the examples with key `value_key`.\n    A `values[i]` comes from a position `k` in the feature of an example at batch\n    entry `batch`. This positional information is recorded in `indices[i]` as\n    `[batch, index_0, index_1, ...]` where `index_j` is the `k-th` value of\n    the feature in the example at with key `SparseFeature.index_key[j]`.\n",
                      "markdown": "`    Each `SparseFeature` maps to a `SparseTensor` of the specified type\n    representing a Tensor of `dense_shape` `[batch_size] + SparseFeature.size`.\n    Its `values` come from the feature in the examples with key `value_key`.\n    A `values[i]` comes from a position `k` in the feature of an example at batch\n    entry `batch`. This positional information is recorded in `indices[i]` as\n    `[batch, index_0, index_1, ...]` where `index_j` is the `k-th` value of\n    the feature in the example at with key `SparseFeature.index_key[j]`.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/parse_avro_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/color_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/genome.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/__init__.py"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 13,
                  "endLine": 29,
                  "endColumn": 18,
                  "snippet": {
                    "text": "from tensorflow_io.python.api import experimental\nfrom tensorflow_io.python.api import bigtable\n\nif os.environ.get(\"GENERATING_TF_DOCS\", \"\"):\n    # Mark these as public api for /tools/docs/build_docs.py\n    from tensorflow_io import arrow\n    from tensorflow_io import bigquery\n",
                    "rendered": {
                      "text": "from tensorflow_io.python.api import experimental\nfrom tensorflow_io.python.api import bigtable\n\nif os.environ.get(\"GENERATING_TF_DOCS\", \"\"):\n    # Mark these as public api for /tools/docs/build_docs.py\n    from tensorflow_io import arrow\n    from tensorflow_io import bigquery\n",
                      "markdown": "`from tensorflow_io.python.api import experimental\nfrom tensorflow_io.python.api import bigtable\n\nif os.environ.get(\"GENERATING_TF_DOCS\", \"\"):\n    # Mark these as public api for /tools/docs/build_docs.py\n    from tensorflow_io import arrow\n    from tensorflow_io import bigquery\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/__init__.py"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 6,
                  "endLine": 29,
                  "endColumn": 17,
                  "snippet": {
                    "text": "from tensorflow_io.python.api import experimental\nfrom tensorflow_io.python.api import bigtable\n\nif os.environ.get(\"GENERATING_TF_DOCS\", \"\"):\n    # Mark these as public api for /tools/docs/build_docs.py\n    from tensorflow_io import arrow\n    from tensorflow_io import bigquery\n",
                    "rendered": {
                      "text": "from tensorflow_io.python.api import experimental\nfrom tensorflow_io.python.api import bigtable\n\nif os.environ.get(\"GENERATING_TF_DOCS\", \"\"):\n    # Mark these as public api for /tools/docs/build_docs.py\n    from tensorflow_io import arrow\n    from tensorflow_io import bigquery\n",
                      "markdown": "`from tensorflow_io.python.api import experimental\nfrom tensorflow_io.python.api import bigtable\n\nif os.environ.get(\"GENERATING_TF_DOCS\", \"\"):\n    # Mark these as public api for /tools/docs/build_docs.py\n    from tensorflow_io import arrow\n    from tensorflow_io import bigquery\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/__init__.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/version_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/tiff_io_tensor_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/prometheus_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/pcap_dataset_ops.py"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 29,
                  "endLine": 35,
                  "endColumn": 34,
                  "snippet": {
                    "text": "                \"IODataset.from_pcap())\"\n            )\n        with tf.name_scope(\"PcapIODataset\") as scope:\n            capacity = kwargs.get(\"capacity\", 4096)\n            resource = core_ops.io_pcap_readable_init(\n                filename,\n                container=scope,\n",
                    "rendered": {
                      "text": "                \"IODataset.from_pcap())\"\n            )\n        with tf.name_scope(\"PcapIODataset\") as scope:\n            capacity = kwargs.get(\"capacity\", 4096)\n            resource = core_ops.io_pcap_readable_init(\n                filename,\n                container=scope,\n",
                      "markdown": "`                \"IODataset.from_pcap())\"\n            )\n        with tf.name_scope(\"PcapIODataset\") as scope:\n            capacity = kwargs.get(\"capacity\", 4096)\n            resource = core_ops.io_pcap_readable_init(\n                filename,\n                container=scope,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/pcap_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/audio_ops.py"
                },
                "region": {
                  "startLine": 772,
                  "startColumn": 37,
                  "endLine": 772,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            else:\n                shape, _, _ = core_ops.io_audio_readable_spec(resource)\n\n            capacity = 1024  # kwargs.get(\"capacity\", 4096)\n\n            self._resource = resource\n            dataset = tf.data.Dataset.range(0, shape[0], capacity)\n",
                    "rendered": {
                      "text": "            else:\n                shape, _, _ = core_ops.io_audio_readable_spec(resource)\n\n            capacity = 1024  # kwargs.get(\"capacity\", 4096)\n\n            self._resource = resource\n            dataset = tf.data.Dataset.range(0, shape[0], capacity)\n",
                      "markdown": "`            else:\n                shape, _, _ = core_ops.io_audio_readable_spec(resource)\n\n            capacity = 1024  # kwargs.get(\"capacity\", 4096)\n\n            self._resource = resource\n            dataset = tf.data.Dataset.range(0, shape[0], capacity)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/audio_ops.py"
                },
                "region": {
                  "startLine": 389,
                  "startColumn": 28,
                  "endLine": 389,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    Returns:\n      A tensor of audio.\n    \"\"\"\n    # TODO length may not be at axis=0, if `batch` (axis=0) is present.\n    axis = 0\n\n    shape = tf.shape(input)\n",
                    "rendered": {
                      "text": "    Returns:\n      A tensor of audio.\n    \"\"\"\n    # TODO length may not be at axis=0, if `batch` (axis=0) is present.\n    axis = 0\n\n    shape = tf.shape(input)\n",
                      "markdown": "`    Returns:\n      A tensor of audio.\n    \"\"\"\n    # TODO length may not be at axis=0, if `batch` (axis=0) is present.\n    axis = 0\n\n    shape = tf.shape(input)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/audio_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/audio_ops.py"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 25,
                  "endLine": 357,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n    Args:\n      input: An audio spectogram.\n      param: Parameter of time masking.\n      name: A name for the operation (optional).\n    Returns:\n      A tensor of spectrogram.\n",
                    "rendered": {
                      "text": "\n    Args:\n      input: An audio spectogram.\n      param: Parameter of time masking.\n      name: A name for the operation (optional).\n    Returns:\n      A tensor of spectrogram.\n",
                      "markdown": "`\n    Args:\n      input: An audio spectogram.\n      param: Parameter of time masking.\n      name: A name for the operation (optional).\n    Returns:\n      A tensor of spectrogram.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/audio_ops.py"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 41,
                  "endLine": 353,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\ndef time_mask(input, param, name=None):\n    \"\"\"\n    Apply masking to a spectrogram in the time domain.\n\n    Args:\n      input: An audio spectogram.\n",
                    "rendered": {
                      "text": "\ndef time_mask(input, param, name=None):\n    \"\"\"\n    Apply masking to a spectrogram in the time domain.\n\n    Args:\n      input: An audio spectogram.\n",
                      "markdown": "`\ndef time_mask(input, param, name=None):\n    \"\"\"\n    Apply masking to a spectrogram in the time domain.\n\n    Args:\n      input: An audio spectogram.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/arrow_io_tensor_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/mongodb_dataset_ops.py"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 51,
                  "endLine": 92,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            uri: A string, representing the uri of the mongo server or replicaset.\n                To connect to a MongoDB server with username and password\n                based authentication, the following uri pattern can be used.\n                Ex: `\"mongodb://mongoadmin:default_password@localhost:27017\"`.\n\n                Connecting to a replica set is much like connecting to a\n                standalone MongoDB server. Simply specify the replica set name\n",
                    "rendered": {
                      "text": "            uri: A string, representing the uri of the mongo server or replicaset.\n                To connect to a MongoDB server with username and password\n                based authentication, the following uri pattern can be used.\n                Ex: `\"mongodb://mongoadmin:default_password@localhost:27017\"`.\n\n                Connecting to a replica set is much like connecting to a\n                standalone MongoDB server. Simply specify the replica set name\n",
                      "markdown": "`            uri: A string, representing the uri of the mongo server or replicaset.\n                To connect to a MongoDB server with username and password\n                based authentication, the following uri pattern can be used.\n                Ex: `\"mongodb://mongoadmin:default_password@localhost:27017\"`.\n\n                Connecting to a replica set is much like connecting to a\n                standalone MongoDB server. Simply specify the replica set name\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/mongodb_dataset_ops.py"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 65,
                  "endLine": 90,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n        Args:\n            uri: A string, representing the uri of the mongo server or replicaset.\n                To connect to a MongoDB server with username and password\n                based authentication, the following uri pattern can be used.\n                Ex: `\"mongodb://mongoadmin:default_password@localhost:27017\"`.\n\n",
                    "rendered": {
                      "text": "\n        Args:\n            uri: A string, representing the uri of the mongo server or replicaset.\n                To connect to a MongoDB server with username and password\n                based authentication, the following uri pattern can be used.\n                Ex: `\"mongodb://mongoadmin:default_password@localhost:27017\"`.\n\n",
                      "markdown": "`\n        Args:\n            uri: A string, representing the uri of the mongo server or replicaset.\n                To connect to a MongoDB server with username and password\n                based authentication, the following uri pattern can be used.\n                Ex: `\"mongodb://mongoadmin:default_password@localhost:27017\"`.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/mongodb_dataset_ops.py"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 44,
                  "endLine": 67,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n    Example:\n\n    >>> URI = \"mongodb://mongoadmin:default_password@localhost:27017\"\n    >>> DATABASE = \"tfiodb\"\n    >>> COLLECTION = \"test\"\n    >>> dataset = tfio.experimental.mongodb.MongoDBIODataset(\n",
                    "rendered": {
                      "text": "\n    Example:\n\n    >>> URI = \"mongodb://mongoadmin:default_password@localhost:27017\"\n    >>> DATABASE = \"tfiodb\"\n    >>> COLLECTION = \"test\"\n    >>> dataset = tfio.experimental.mongodb.MongoDBIODataset(\n",
                      "markdown": "`\n    Example:\n\n    >>> URI = \"mongodb://mongoadmin:default_password@localhost:27017\"\n    >>> DATABASE = \"tfiodb\"\n    >>> COLLECTION = \"test\"\n    >>> dataset = tfio.experimental.mongodb.MongoDBIODataset(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/mongodb_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/make_avro_record_dataset.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/filter_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/filter_ops.py"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 25,
                  "endLine": 37,
                  "snippet": {
                    "text": "\n    height, width = ksize[0], ksize[1]\n    top = (height - 1) // 2\n    bottom = height - 1 - top\n    left = (width - 1) // 2\n    right = width - 1 - left\n    paddings = [[0, 0], [top, bottom], [left, right], [0, 0]]\n    return tf.pad(input, paddings, mode=mode, constant_values=constant_values)\n",
                    "rendered": {
                      "text": "\n    height, width = ksize[0], ksize[1]\n    top = (height - 1) // 2\n    bottom = height - 1 - top\n    left = (width - 1) // 2\n    right = width - 1 - left\n    paddings = [[0, 0], [top, bottom], [left, right], [0, 0]]\n    return tf.pad(input, paddings, mode=mode, constant_values=constant_values)\n",
                      "markdown": "`\n    height, width = ksize[0], ksize[1]\n    top = (height - 1) // 2\n    bottom = height - 1 - top\n    left = (width - 1) // 2\n    right = width - 1 - left\n    paddings = [[0, 0], [top, bottom], [left, right], [0, 0]]\n    return tf.pad(input, paddings, mode=mode, constant_values=constant_values)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/filter_ops.py"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 3,
                  "endLine": 35,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    assert mode in (\"CONSTANT\", \"REFLECT\", \"SYMMETRIC\")\n\n    height, width = ksize[0], ksize[1]\n    top = (height - 1) // 2\n    bottom = height - 1 - top\n    left = (width - 1) // 2\n    right = width - 1 - left\n",
                    "rendered": {
                      "text": "    assert mode in (\"CONSTANT\", \"REFLECT\", \"SYMMETRIC\")\n\n    height, width = ksize[0], ksize[1]\n    top = (height - 1) // 2\n    bottom = height - 1 - top\n    left = (width - 1) // 2\n    right = width - 1 - left\n",
                      "markdown": "`    assert mode in (\"CONSTANT\", \"REFLECT\", \"SYMMETRIC\")\n\n    height, width = ksize[0], ksize[1]\n    top = (height - 1) // 2\n    bottom = height - 1 - top\n    left = (width - 1) // 2\n    right = width - 1 - left\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/filesystem_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/version.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/experimental/filesystem.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/bigtable.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 82,
                  "endLine": 256,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\ndone\nsudo chown -R $(id -nu):$(id -ng) .\nls wheelhouse/*\n",
                    "rendered": {
                      "text": "\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\ndone\nsudo chown -R $(id -nu):$(id -ng) .\nls wheelhouse/*\n",
                      "markdown": "`\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\ndone\nsudo chown -R $(id -nu):$(id -ng) .\nls wheelhouse/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 14,
                  "endLine": 253,
                  "snippet": {
                    "text": "will automatically build manylinux2010 compatible whl package:\n\n```sh\n#!/usr/bin/env bash\n\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\n",
                    "rendered": {
                      "text": "will automatically build manylinux2010 compatible whl package:\n\n```sh\n#!/usr/bin/env bash\n\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\n",
                      "markdown": "`will automatically build manylinux2010 compatible whl package:\n\n```sh\n#!/usr/bin/env bash\n\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 266,
                  "startColumn": 54,
                  "endLine": 266,
                  "endColumn": 62,
                  "snippet": {
                    "text": "`3.5`, `3.6`, `3.7` compatible whl packages available in `wheelhouse`\ndirectory.\n\nOn macOS, the same command could be used. However, the script expects `python` in shell\nand will only generate a whl package that matches the version of `python` in shell. If\nyou want to build a whl package for a specific python then you have to alias this version\nof python to `python` in shell. See [.github/workflows/build.yml](.github/workflows/build.yml)\n",
                    "rendered": {
                      "text": "`3.5`, `3.6`, `3.7` compatible whl packages available in `wheelhouse`\ndirectory.\n\nOn macOS, the same command could be used. However, the script expects `python` in shell\nand will only generate a whl package that matches the version of `python` in shell. If\nyou want to build a whl package for a specific python then you have to alias this version\nof python to `python` in shell. See [.github/workflows/build.yml](.github/workflows/build.yml)\n",
                      "markdown": "``3.5`, `3.6`, `3.7` compatible whl packages available in `wheelhouse`\ndirectory.\n\nOn macOS, the same command could be used. However, the script expects `python` in shell\nand will only generate a whl package that matches the version of `python` in shell. If\nyou want to build a whl package for a specific python then you have to alias this version\nof python to `python` in shell. See [.github/workflows/build.yml](.github/workflows/build.yml)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 13,
                  "endLine": 262,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ls wheelhouse/*\n```\n\nIt takes some time to build, but once complete, there will be python\n`3.5`, `3.6`, `3.7` compatible whl packages available in `wheelhouse`\ndirectory.\n\n",
                    "rendered": {
                      "text": "ls wheelhouse/*\n```\n\nIt takes some time to build, but once complete, there will be python\n`3.5`, `3.6`, `3.7` compatible whl packages available in `wheelhouse`\ndirectory.\n\n",
                      "markdown": "`ls wheelhouse/*\n```\n\nIt takes some time to build, but once complete, there will be python\n`3.5`, `3.6`, `3.7` compatible whl packages available in `wheelhouse`\ndirectory.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 4,
                  "endLine": 258,
                  "endColumn": 11,
                  "snippet": {
                    "text": "for f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\ndone\nsudo chown -R $(id -nu):$(id -ng) .\nls wheelhouse/*\n```\n\n",
                    "rendered": {
                      "text": "for f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\ndone\nsudo chown -R $(id -nu):$(id -ng) .\nls wheelhouse/*\n```\n\n",
                      "markdown": "`for f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\ndone\nsudo chown -R $(id -nu):$(id -ng) .\nls wheelhouse/*\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 82,
                  "endLine": 256,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\ndone\nsudo chown -R $(id -nu):$(id -ng) .\nls wheelhouse/*\n",
                    "rendered": {
                      "text": "\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\ndone\nsudo chown -R $(id -nu):$(id -ng) .\nls wheelhouse/*\n",
                      "markdown": "`\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\ndone\nsudo chown -R $(id -nu):$(id -ng) .\nls wheelhouse/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 1,
                  "endLine": 256,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\ndone\nsudo chown -R $(id -nu):$(id -ng) .\nls wheelhouse/*\n",
                    "rendered": {
                      "text": "\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\ndone\nsudo chown -R $(id -nu):$(id -ng) .\nls wheelhouse/*\n",
                      "markdown": "`\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\ndone\nsudo chown -R $(id -nu):$(id -ng) .\nls wheelhouse/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 14,
                  "endLine": 253,
                  "snippet": {
                    "text": "will automatically build manylinux2010 compatible whl package:\n\n```sh\n#!/usr/bin/env bash\n\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\n",
                    "rendered": {
                      "text": "will automatically build manylinux2010 compatible whl package:\n\n```sh\n#!/usr/bin/env bash\n\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\n",
                      "markdown": "`will automatically build manylinux2010 compatible whl package:\n\n```sh\n#!/usr/bin/env bash\n\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 18,
                  "endLine": 248,
                  "endColumn": 26,
                  "snippet": {
                    "text": "Because of manylinux2010 requirement, TensorFlow I/O is built with\nUbuntu:16.04 + Developer Toolset 7 (GCC 7.3) on Linux. Configuration\nwith Ubuntu 16.04 with Developer Toolset 7 is not exactly straightforward.\nIf the system have docker installed, then the following command\nwill automatically build manylinux2010 compatible whl package:\n\n```sh\n",
                    "rendered": {
                      "text": "Because of manylinux2010 requirement, TensorFlow I/O is built with\nUbuntu:16.04 + Developer Toolset 7 (GCC 7.3) on Linux. Configuration\nwith Ubuntu 16.04 with Developer Toolset 7 is not exactly straightforward.\nIf the system have docker installed, then the following command\nwill automatically build manylinux2010 compatible whl package:\n\n```sh\n",
                      "markdown": "`Because of manylinux2010 requirement, TensorFlow I/O is built with\nUbuntu:16.04 + Developer Toolset 7 (GCC 7.3) on Linux. Configuration\nwith Ubuntu 16.04 with Developer Toolset 7 is not exactly straightforward.\nIf the system have docker installed, then the following command\nwill automatically build manylinux2010 compatible whl package:\n\n```sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 63,
                  "endLine": 170,
                  "endColumn": 69,
                  "snippet": {
                    "text": "### TensorFlow Version Compatibility\n\nTo ensure compatibility with TensorFlow, it is recommended to install a matching\nversion of TensorFlow I/O according to the table below. You can find the list\nof releases [here](https://github.com/tensorflow/io/releases).\n\n| TensorFlow I/O Version | TensorFlow Compatibility | Release Date |\n",
                    "rendered": {
                      "text": "### TensorFlow Version Compatibility\n\nTo ensure compatibility with TensorFlow, it is recommended to install a matching\nversion of TensorFlow I/O according to the table below. You can find the list\nof releases [here](https://github.com/tensorflow/io/releases).\n\n| TensorFlow I/O Version | TensorFlow Compatibility | Release Date |\n",
                      "markdown": "`### TensorFlow Version Compatibility\n\nTo ensure compatibility with TensorFlow, it is recommended to install a matching\nversion of TensorFlow I/O according to the table below. You can find the list\nof releases [here](https://github.com/tensorflow/io/releases).\n\n| TensorFlow I/O Version | TensorFlow Compatibility | Release Date |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 1,
                  "endLine": 155,
                  "endColumn": 9,
                  "snippet": {
                    "text": "For nightly builds:\n```sh\n$ docker pull tfsigio/tfio:nightly\n$ docker run -it --rm --name tfio-nightly tfsigio/tfio:nightly\n```\n\n### R Package\n",
                    "rendered": {
                      "text": "For nightly builds:\n```sh\n$ docker pull tfsigio/tfio:nightly\n$ docker run -it --rm --name tfio-nightly tfsigio/tfio:nightly\n```\n\n### R Package\n",
                      "markdown": "`For nightly builds:\n```sh\n$ docker pull tfsigio/tfio:nightly\n$ docker run -it --rm --name tfio-nightly tfsigio/tfio:nightly\n```\n\n### R Package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 1,
                  "endLine": 154,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nFor nightly builds:\n```sh\n$ docker pull tfsigio/tfio:nightly\n$ docker run -it --rm --name tfio-nightly tfsigio/tfio:nightly\n```\n\n",
                    "rendered": {
                      "text": "\nFor nightly builds:\n```sh\n$ docker pull tfsigio/tfio:nightly\n$ docker run -it --rm --name tfio-nightly tfsigio/tfio:nightly\n```\n\n",
                      "markdown": "`\nFor nightly builds:\n```sh\n$ docker pull tfsigio/tfio:nightly\n$ docker run -it --rm --name tfio-nightly tfsigio/tfio:nightly\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 1,
                  "endLine": 149,
                  "endColumn": 9,
                  "snippet": {
                    "text": "For stable builds:\n```sh\n$ docker pull tfsigio/tfio:latest\n$ docker run -it --rm --name tfio-latest tfsigio/tfio:latest\n```\n\nFor nightly builds:\n",
                    "rendered": {
                      "text": "For stable builds:\n```sh\n$ docker pull tfsigio/tfio:latest\n$ docker run -it --rm --name tfio-latest tfsigio/tfio:latest\n```\n\nFor nightly builds:\n",
                      "markdown": "`For stable builds:\n```sh\n$ docker pull tfsigio/tfio:latest\n$ docker run -it --rm --name tfio-latest tfsigio/tfio:latest\n```\n\nFor nightly builds:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 1,
                  "endLine": 148,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nFor stable builds:\n```sh\n$ docker pull tfsigio/tfio:latest\n$ docker run -it --rm --name tfio-latest tfsigio/tfio:latest\n```\n\n",
                    "rendered": {
                      "text": "\nFor stable builds:\n```sh\n$ docker pull tfsigio/tfio:latest\n$ docker run -it --rm --name tfio-latest tfsigio/tfio:latest\n```\n\n",
                      "markdown": "`\nFor stable builds:\n```sh\n$ docker pull tfsigio/tfio:latest\n$ docker run -it --rm --name tfio-latest tfsigio/tfio:latest\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 36,
                  "endLine": 144,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n### Docker Images\n\nIn addition to the pip packages, the docker images can be used to quickly get started.\n\nFor stable builds:\n```sh\n",
                    "rendered": {
                      "text": "\n### Docker Images\n\nIn addition to the pip packages, the docker images can be used to quickly get started.\n\nFor stable builds:\n```sh\n",
                      "markdown": "`\n### Docker Images\n\nIn addition to the pip packages, the docker images can be used to quickly get started.\n\nFor stable builds:\n```sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 18,
                  "endLine": 144,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n### Docker Images\n\nIn addition to the pip packages, the docker images can be used to quickly get started.\n\nFor stable builds:\n```sh\n",
                    "rendered": {
                      "text": "\n### Docker Images\n\nIn addition to the pip packages, the docker images can be used to quickly get started.\n\nFor stable builds:\n```sh\n",
                      "markdown": "`\n### Docker Images\n\nIn addition to the pip packages, the docker images can be used to quickly get started.\n\nFor stable builds:\n```sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 3,
                  "endLine": 142,
                  "endColumn": 11,
                  "snippet": {
                    "text": "Similar extras exist for the `tensorflow-gpu`, `tensorflow-cpu` and `tensorflow-rocm`\npackages.\n\n### Docker Images\n\nIn addition to the pip packages, the docker images can be used to quickly get started.\n\n",
                    "rendered": {
                      "text": "Similar extras exist for the `tensorflow-gpu`, `tensorflow-cpu` and `tensorflow-rocm`\npackages.\n\n### Docker Images\n\nIn addition to the pip packages, the docker images can be used to quickly get started.\n\n",
                      "markdown": "`Similar extras exist for the `tensorflow-gpu`, `tensorflow-cpu` and `tensorflow-rocm`\npackages.\n\n### Docker Images\n\nIn addition to the pip packages, the docker images can be used to quickly get started.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 3,
                  "endLine": 136,
                  "endColumn": 4,
                  "snippet": {
                    "text": "To ensure you have a version of TensorFlow that is compatible with TensorFlow-IO,\nyou can specify the `tensorflow` extra requirement during install:\n\n```\npip install tensorflow-io[tensorflow]\n```\n\nSimilar extras exist for the `tensorflow-gpu`, `tensorflow-cpu` and `tensorflow-rocm`\n",
                    "rendered": {
                      "text": "To ensure you have a version of TensorFlow that is compatible with TensorFlow-IO,\nyou can specify the `tensorflow` extra requirement during install:\n\n```\npip install tensorflow-io[tensorflow]\n```\n\nSimilar extras exist for the `tensorflow-gpu`, `tensorflow-cpu` and `tensorflow-rocm`\n",
                      "markdown": "`To ensure you have a version of TensorFlow that is compatible with TensorFlow-IO,\nyou can specify the `tensorflow` extra requirement during install:\n\n```\npip install tensorflow-io[tensorflow]\n```\n\nSimilar extras exist for the `tensorflow-gpu`, `tensorflow-cpu` and `tensorflow-rocm`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 1,
                  "endLine": 129,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nPeople who are a little more adventurous can also try our nightly binaries:\n```sh\n$ pip install tensorflow-io-nightly\n```\n\nTo ensure you have a version of TensorFlow that is compatible with TensorFlow-IO,\n",
                    "rendered": {
                      "text": "\nPeople who are a little more adventurous can also try our nightly binaries:\n```sh\n$ pip install tensorflow-io-nightly\n```\n\nTo ensure you have a version of TensorFlow that is compatible with TensorFlow-IO,\n",
                      "markdown": "`\nPeople who are a little more adventurous can also try our nightly binaries:\n```sh\n$ pip install tensorflow-io-nightly\n```\n\nTo ensure you have a version of TensorFlow that is compatible with TensorFlow-IO,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 1,
                  "endLine": 124,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nThe `tensorflow-io` Python package can be installed with pip directly using:\n```sh\n$ pip install tensorflow-io\n```\n\nPeople who are a little more adventurous can also try our nightly binaries:\n",
                    "rendered": {
                      "text": "\nThe `tensorflow-io` Python package can be installed with pip directly using:\n```sh\n$ pip install tensorflow-io\n```\n\nPeople who are a little more adventurous can also try our nightly binaries:\n",
                      "markdown": "`\nThe `tensorflow-io` Python package can be installed with pip directly using:\n```sh\n$ pip install tensorflow-io\n```\n\nPeople who are a little more adventurous can also try our nightly binaries:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io-0.37.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 56,
                  "endLine": 122,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n### Python Package\n\nThe `tensorflow-io` Python package can be installed with pip directly using:\n```sh\n$ pip install tensorflow-io\n```\n",
                    "rendered": {
                      "text": "\n### Python Package\n\nThe `tensorflow-io` Python package can be installed with pip directly using:\n```sh\n$ pip install tensorflow-io\n```\n",
                      "markdown": "`\n### Python Package\n\nThe `tensorflow-io` Python package can be installed with pip directly using:\n```sh\n$ pip install tensorflow-io\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/golang_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/genome_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/ffmpeg_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/ffmpeg_ops.py"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 40,
                  "endLine": 45,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        except NotImplementedError as e:\n            warnings.warn(f\"could not load {library}: {e}\")\n        NotImplementedError\n    raise NotImplementedError(\"could not find ffmpeg after search through \", p)\n\n\n_ffmpeg_ops, _decode_ops = _load_libraries(\n",
                    "rendered": {
                      "text": "        except NotImplementedError as e:\n            warnings.warn(f\"could not load {library}: {e}\")\n        NotImplementedError\n    raise NotImplementedError(\"could not find ffmpeg after search through \", p)\n\n\n_ffmpeg_ops, _decode_ops = _load_libraries(\n",
                      "markdown": "`        except NotImplementedError as e:\n            warnings.warn(f\"could not load {library}: {e}\")\n        NotImplementedError\n    raise NotImplementedError(\"could not find ffmpeg after search through \", p)\n\n\n_ffmpeg_ops, _decode_ops = _load_libraries(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/ffmpeg_io_tensor_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/avro_io_tensor_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/avro_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/text_io_layer_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/sql_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_tensor.py"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 33,
                  "endLine": 41,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromOpenEXR\")):\n            return openexr_io_tensor_ops.EXRIOTensor(filename, internal=True)\n",
                    "rendered": {
                      "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromOpenEXR\")):\n            return openexr_io_tensor_ops.EXRIOTensor(filename, internal=True)\n",
                      "markdown": "`          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromOpenEXR\")):\n            return openexr_io_tensor_ops.EXRIOTensor(filename, internal=True)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_tensor.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_layer.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/atds/dataset.py"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 62,
                  "endLine": 238,
                  "endColumn": 66,
                  "snippet": {
                    "text": "            )\n        if not features:\n            raise ValueError(\n                \"Features dict cannot be empty and should have at \" \"least one feature.\"\n            )\n\n        feature_keys = []\n",
                    "rendered": {
                      "text": "            )\n        if not features:\n            raise ValueError(\n                \"Features dict cannot be empty and should have at \" \"least one feature.\"\n            )\n\n        feature_keys = []\n",
                      "markdown": "`            )\n        if not features:\n            raise ValueError(\n                \"Features dict cannot be empty and should have at \" \"least one feature.\"\n            )\n\n        feature_keys = []\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/atds/dataset.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/experimental/streaming.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/experimental/elasticsearch.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/audio.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/dicom_ops.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/dicom_ops.py"
                },
                "region": {
                  "startLine": 2356,
                  "startColumn": 3,
                  "endLine": 2356,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    TimeofDocumentCreationorVerbalTransactionTrial = np.uint32(int(\"0040A112\", 16))\n    DateTime = np.uint32(int(\"0040A120\", 16))\n    Date = np.uint32(int(\"0040A121\", 16))\n    Time = np.uint32(int(\"0040A122\", 16))\n    PersonName = np.uint32(int(\"0040A123\", 16))\n    UID = np.uint32(int(\"0040A124\", 16))\n    ReportStatusIDTrial = np.uint32(int(\"0040A125\", 16))\n",
                    "rendered": {
                      "text": "    TimeofDocumentCreationorVerbalTransactionTrial = np.uint32(int(\"0040A112\", 16))\n    DateTime = np.uint32(int(\"0040A120\", 16))\n    Date = np.uint32(int(\"0040A121\", 16))\n    Time = np.uint32(int(\"0040A122\", 16))\n    PersonName = np.uint32(int(\"0040A123\", 16))\n    UID = np.uint32(int(\"0040A124\", 16))\n    ReportStatusIDTrial = np.uint32(int(\"0040A125\", 16))\n",
                      "markdown": "`    TimeofDocumentCreationorVerbalTransactionTrial = np.uint32(int(\"0040A112\", 16))\n    DateTime = np.uint32(int(\"0040A120\", 16))\n    Date = np.uint32(int(\"0040A121\", 16))\n    Time = np.uint32(int(\"0040A122\", 16))\n    PersonName = np.uint32(int(\"0040A123\", 16))\n    UID = np.uint32(int(\"0040A124\", 16))\n    ReportStatusIDTrial = np.uint32(int(\"0040A125\", 16))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/data_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/serialization_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/serial_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_batch_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 70,
                  "endLine": 92,
                  "endColumn": 74,
                  "snippet": {
                    "text": "            By default it is set to -1 to block indefinitely.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`.\n          configuration: An optional `tf.string` tensor containing\n            configurations in [Key=Value] format.\n",
                    "rendered": {
                      "text": "            By default it is set to -1 to block indefinitely.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`.\n          configuration: An optional `tf.string` tensor containing\n            configurations in [Key=Value] format.\n",
                      "markdown": "`            By default it is set to -1 to block indefinitely.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`.\n          configuration: An optional `tf.string` tensor containing\n            configurations in [Key=Value] format.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_batch_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_batch_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 51,
                  "endLine": 91,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            the new messages from kafka to be retrieved by the consumers.\n            By default it is set to -1 to block indefinitely.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`.\n          configuration: An optional `tf.string` tensor containing\n",
                    "rendered": {
                      "text": "            the new messages from kafka to be retrieved by the consumers.\n            By default it is set to -1 to block indefinitely.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`.\n          configuration: An optional `tf.string` tensor containing\n",
                      "markdown": "`            the new messages from kafka to be retrieved by the consumers.\n            By default it is set to -1 to block indefinitely.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`.\n          configuration: An optional `tf.string` tensor containing\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_batch_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 43,
                  "endLine": 90,
                  "endColumn": 52,
                  "snippet": {
                    "text": "          stream_timeout: An optional timeout value (in milliseconds) to wait for\n            the new messages from kafka to be retrieved by the consumers.\n            By default it is set to -1 to block indefinitely.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`.\n",
                    "rendered": {
                      "text": "          stream_timeout: An optional timeout value (in milliseconds) to wait for\n            the new messages from kafka to be retrieved by the consumers.\n            By default it is set to -1 to block indefinitely.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`.\n",
                      "markdown": "`          stream_timeout: An optional timeout value (in milliseconds) to wait for\n            the new messages from kafka to be retrieved by the consumers.\n            By default it is set to -1 to block indefinitely.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_batch_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 37,
                  "endLine": 87,
                  "endColumn": 46,
                  "snippet": {
                    "text": "          group_id: The id of the consumer group. For example: cgstream\n          servers: An optional list of bootstrap servers.\n            For example: `localhost:9092`.\n          stream_timeout: An optional timeout value (in milliseconds) to wait for\n            the new messages from kafka to be retrieved by the consumers.\n            By default it is set to -1 to block indefinitely.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n",
                    "rendered": {
                      "text": "          group_id: The id of the consumer group. For example: cgstream\n          servers: An optional list of bootstrap servers.\n            For example: `localhost:9092`.\n          stream_timeout: An optional timeout value (in milliseconds) to wait for\n            the new messages from kafka to be retrieved by the consumers.\n            By default it is set to -1 to block indefinitely.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n",
                      "markdown": "`          group_id: The id of the consumer group. For example: cgstream\n          servers: An optional list of bootstrap servers.\n            For example: `localhost:9092`.\n          stream_timeout: An optional timeout value (in milliseconds) to wait for\n            the new messages from kafka to be retrieved by the consumers.\n            By default it is set to -1 to block indefinitely.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/avro_record_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/avro_record_dataset_ops.py"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 61,
                  "endLine": 106,
                  "endColumn": 67,
                  "snippet": {
                    "text": "            dataset_creator: Initializer for AvroDatasetRecord\n            filenames: A `tf.data.Dataset` iterator of filenames to read\n            cycle_length: The number of files to be processed in parallel. This is used by `Dataset.Interleave`.\n            We set this equal to `block_length`, so that each time n number of records are returned for each of the n\n            files.\n            num_parallel_calls: Number of threads spawned by the interleave call.\n            deterministic: Sets whether the interleaved records are written in deterministic order. in tf.interleave this is default true\n",
                    "rendered": {
                      "text": "            dataset_creator: Initializer for AvroDatasetRecord\n            filenames: A `tf.data.Dataset` iterator of filenames to read\n            cycle_length: The number of files to be processed in parallel. This is used by `Dataset.Interleave`.\n            We set this equal to `block_length`, so that each time n number of records are returned for each of the n\n            files.\n            num_parallel_calls: Number of threads spawned by the interleave call.\n            deterministic: Sets whether the interleaved records are written in deterministic order. in tf.interleave this is default true\n",
                      "markdown": "`            dataset_creator: Initializer for AvroDatasetRecord\n            filenames: A `tf.data.Dataset` iterator of filenames to read\n            cycle_length: The number of files to be processed in parallel. This is used by `Dataset.Interleave`.\n            We set this equal to `block_length`, so that each time n number of records are returned for each of the n\n            files.\n            num_parallel_calls: Number of threads spawned by the interleave call.\n            deterministic: Sets whether the interleaved records are written in deterministic order. in tf.interleave this is default true\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/experimental/image.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/experimental/color.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/core/grpc/__init__.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 29,
                  "endLine": 33,
                  "endColumn": 34,
                  "snippet": {
                    "text": "                \"IODataset.from_kafka())\"\n            )\n        with tf.name_scope(\"StreamIODataset\"):\n            capacity = kwargs.get(\"capacity\", 4096)\n            dataset = tf.compat.v2.data.Dataset.range(0, sys.maxsize, capacity)\n            dataset = dataset.map(lambda index: function(index, index + capacity))\n            dataset = dataset.apply(\n",
                    "rendered": {
                      "text": "                \"IODataset.from_kafka())\"\n            )\n        with tf.name_scope(\"StreamIODataset\"):\n            capacity = kwargs.get(\"capacity\", 4096)\n            dataset = tf.compat.v2.data.Dataset.range(0, sys.maxsize, capacity)\n            dataset = dataset.map(lambda index: function(index, index + capacity))\n            dataset = dataset.apply(\n",
                      "markdown": "`                \"IODataset.from_kafka())\"\n            )\n        with tf.name_scope(\"StreamIODataset\"):\n            capacity = kwargs.get(\"capacity\", 4096)\n            dataset = tf.compat.v2.data.Dataset.range(0, sys.maxsize, capacity)\n            dataset = dataset.map(lambda index: function(index, index + capacity))\n            dataset = dataset.apply(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 441,
                  "startColumn": 33,
                  "endLine": 441,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromFFmpeg\")):\n            from tensorflow_io.python.ops import (  # pylint: disable=import-outside-toplevel\n                ffmpeg_ops,\n            )\n",
                    "rendered": {
                      "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromFFmpeg\")):\n            from tensorflow_io.python.ops import (  # pylint: disable=import-outside-toplevel\n                ffmpeg_ops,\n            )\n",
                      "markdown": "`          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromFFmpeg\")):\n            from tensorflow_io.python.ops import (  # pylint: disable=import-outside-toplevel\n                ffmpeg_ops,\n            )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 426,
                  "startColumn": 33,
                  "endLine": 426,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAudio\")):\n            return audio_ops.AudioIODataset(filename, dtype=cls._dtype)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAudio\")):\n            return audio_ops.AudioIODataset(filename, dtype=cls._dtype)\n\n    @classmethod\n",
                      "markdown": "`          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAudio\")):\n            return audio_ops.AudioIODataset(filename, dtype=cls._dtype)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 33,
                  "endLine": 390,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `StreamIODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromKafka\")):\n            return kafka_dataset_ops.KafkaStreamIODataset(\n                topic,\n                partition=partition,\n",
                    "rendered": {
                      "text": "          A `StreamIODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromKafka\")):\n            return kafka_dataset_ops.KafkaStreamIODataset(\n                topic,\n                partition=partition,\n",
                      "markdown": "`          A `StreamIODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromKafka\")):\n            return kafka_dataset_ops.KafkaStreamIODataset(\n                topic,\n                partition=partition,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 324,
                  "startColumn": 33,
                  "endLine": 324,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromORC\")):\n            return orc_dataset_ops.ORCIODataset(filename, internal=True, **kwargs)\n\n\n",
                    "rendered": {
                      "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromORC\")):\n            return orc_dataset_ops.ORCIODataset(filename, internal=True, **kwargs)\n\n\n",
                      "markdown": "`          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromORC\")):\n            return orc_dataset_ops.ORCIODataset(filename, internal=True, **kwargs)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 33,
                  "endLine": 309,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromPcap\")):\n            return pcap_dataset_ops.PcapIODataset(filename, internal=True, **kwargs)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromPcap\")):\n            return pcap_dataset_ops.PcapIODataset(filename, internal=True, **kwargs)\n\n    @classmethod\n",
                      "markdown": "`          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromPcap\")):\n            return pcap_dataset_ops.PcapIODataset(filename, internal=True, **kwargs)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 33,
                  "endLine": 292,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromMNIST\")):\n            return mnist_dataset_ops.MNISTIODataset(\n                images, labels, internal=True, **kwargs\n            )\n",
                    "rendered": {
                      "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromMNIST\")):\n            return mnist_dataset_ops.MNISTIODataset(\n                images, labels, internal=True, **kwargs\n            )\n",
                      "markdown": "`          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromMNIST\")):\n            return mnist_dataset_ops.MNISTIODataset(\n                images, labels, internal=True, **kwargs\n            )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 33,
                  "endLine": 274,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromParquet\")):\n            return parquet_dataset_ops.ParquetIODataset(\n                filename, columns=columns, internal=True\n            )\n",
                    "rendered": {
                      "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromParquet\")):\n            return parquet_dataset_ops.ParquetIODataset(\n                filename, columns=columns, internal=True\n            )\n",
                      "markdown": "`          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromParquet\")):\n            return parquet_dataset_ops.ParquetIODataset(\n                filename, columns=columns, internal=True\n            )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 33,
                  "endLine": 255,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromJSON\")):\n            return json_dataset_ops.JSONIODataset(\n                filename, columns=columns, mode=mode, internal=True\n            )\n",
                    "rendered": {
                      "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromJSON\")):\n            return json_dataset_ops.JSONIODataset(\n                filename, columns=columns, mode=mode, internal=True\n            )\n",
                      "markdown": "`          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromJSON\")):\n            return json_dataset_ops.JSONIODataset(\n                filename, columns=columns, mode=mode, internal=True\n            )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 33,
                  "endLine": 237,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromLMDB\")):\n            return lmdb_dataset_ops.LMDBIODataset(filename, internal=True)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromLMDB\")):\n            return lmdb_dataset_ops.LMDBIODataset(filename, internal=True)\n\n    @classmethod\n",
                      "markdown": "`          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromLMDB\")):\n            return lmdb_dataset_ops.LMDBIODataset(filename, internal=True)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 33,
                  "endLine": 220,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAvro\")):\n            return avro_dataset_ops.AvroIODataset(\n                filename, schema, columns=columns, internal=True\n            )\n",
                    "rendered": {
                      "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAvro\")):\n            return avro_dataset_ops.AvroIODataset(\n                filename, schema, columns=columns, internal=True\n            )\n",
                      "markdown": "`          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAvro\")):\n            return avro_dataset_ops.AvroIODataset(\n                filename, schema, columns=columns, internal=True\n            )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 33,
                  "endLine": 201,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromHDF5\")):\n            return hdf5_dataset_ops.HDF5IODataset(\n                filename, dataset, spec=spec, internal=True\n            )\n",
                    "rendered": {
                      "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromHDF5\")):\n            return hdf5_dataset_ops.HDF5IODataset(\n                filename, dataset, spec=spec, internal=True\n            )\n",
                      "markdown": "`          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromHDF5\")):\n            return hdf5_dataset_ops.HDF5IODataset(\n                filename, dataset, spec=spec, internal=True\n            )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 33,
                  "endLine": 182,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromFFmpeg\")):\n            return ffmpeg_dataset_ops.FFmpegIODataset(filename, stream, internal=True)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromFFmpeg\")):\n            return ffmpeg_dataset_ops.FFmpegIODataset(filename, stream, internal=True)\n\n    @classmethod\n",
                      "markdown": "`          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromFFmpeg\")):\n            return ffmpeg_dataset_ops.FFmpegIODataset(filename, stream, internal=True)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 33,
                  "endLine": 157,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromKafka\")):\n            return kafka_dataset_ops.KafkaIODataset(\n                topic,\n                partition=partition,\n",
                    "rendered": {
                      "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromKafka\")):\n            return kafka_dataset_ops.KafkaIODataset(\n                topic,\n                partition=partition,\n",
                      "markdown": "`          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromKafka\")):\n            return kafka_dataset_ops.KafkaIODataset(\n                topic,\n                partition=partition,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 33,
                  "endLine": 117,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAudio\")):\n            return audio_ops.AudioIODataset(filename)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAudio\")):\n            return audio_ops.AudioIODataset(filename)\n\n    @classmethod\n",
                      "markdown": "`          A `IODataset`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAudio\")):\n            return audio_ops.AudioIODataset(filename)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 44,
                  "endLine": 50,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n    Examples of `IODataset` include `AudioIODataset` which is based on data\n    from an audio (e.g., WAV) file. `KafkaIODataset` is also an `IODataset`\n    which could be re-run multiple times and expect the same generated data.\n\n    Example:\n\n",
                    "rendered": {
                      "text": "\n    Examples of `IODataset` include `AudioIODataset` which is based on data\n    from an audio (e.g., WAV) file. `KafkaIODataset` is also an `IODataset`\n    which could be re-run multiple times and expect the same generated data.\n\n    Example:\n\n",
                      "markdown": "`\n    Examples of `IODataset` include `AudioIODataset` which is based on data\n    from an audio (e.g., WAV) file. `KafkaIODataset` is also an `IODataset`\n    which could be re-run multiple times and expect the same generated data.\n\n    Example:\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_dataset.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/image_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/hdf5_io_tensor_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/csv_io_tensor_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_version_filters.py"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 66,
                  "endLine": 72,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    start_timestamp: Union[int, float], end_timestamp: Union[int, float]\n):\n    \"\"\"Create a filter passing all values which timestamp is\n    from the specified range, exclusive at the start and inclusive at the end.\n    Args:\n      start_timestamp: The start of the row range (inclusive). It is a number (\n      int or float) representing number of microseconds since epoch.\n",
                    "rendered": {
                      "text": "    start_timestamp: Union[int, float], end_timestamp: Union[int, float]\n):\n    \"\"\"Create a filter passing all values which timestamp is\n    from the specified range, exclusive at the start and inclusive at the end.\n    Args:\n      start_timestamp: The start of the row range (inclusive). It is a number (\n      int or float) representing number of microseconds since epoch.\n",
                      "markdown": "`    start_timestamp: Union[int, float], end_timestamp: Union[int, float]\n):\n    \"\"\"Create a filter passing all values which timestamp is\n    from the specified range, exclusive at the start and inclusive at the end.\n    Args:\n      start_timestamp: The start of the row range (inclusive). It is a number (\n      int or float) representing number of microseconds since epoch.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_version_filters.py"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 39,
                  "endLine": 72,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    start_timestamp: Union[int, float], end_timestamp: Union[int, float]\n):\n    \"\"\"Create a filter passing all values which timestamp is\n    from the specified range, exclusive at the start and inclusive at the end.\n    Args:\n      start_timestamp: The start of the row range (inclusive). It is a number (\n      int or float) representing number of microseconds since epoch.\n",
                    "rendered": {
                      "text": "    start_timestamp: Union[int, float], end_timestamp: Union[int, float]\n):\n    \"\"\"Create a filter passing all values which timestamp is\n    from the specified range, exclusive at the start and inclusive at the end.\n    Args:\n      start_timestamp: The start of the row range (inclusive). It is a number (\n      int or float) representing number of microseconds since epoch.\n",
                      "markdown": "`    start_timestamp: Union[int, float], end_timestamp: Union[int, float]\n):\n    \"\"\"Create a filter passing all values which timestamp is\n    from the specified range, exclusive at the start and inclusive at the end.\n    Args:\n      start_timestamp: The start of the row range (inclusive). It is a number (\n      int or float) representing number of microseconds since epoch.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_version_filters.py"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 66,
                  "endLine": 44,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    start: Union[int, float, datetime], end: Union[int, float, datetime]\n):\n    \"\"\"Create a filter passing all values which timestamp is\n    from the specified range, exclusive at the start and inclusive at the end.\n    Args:\n      start: The start of the row range (inclusive). This can be either a python\n      datetime or a number (int of float) representing seconds since epoch.\n",
                    "rendered": {
                      "text": "    start: Union[int, float, datetime], end: Union[int, float, datetime]\n):\n    \"\"\"Create a filter passing all values which timestamp is\n    from the specified range, exclusive at the start and inclusive at the end.\n    Args:\n      start: The start of the row range (inclusive). This can be either a python\n      datetime or a number (int of float) representing seconds since epoch.\n",
                      "markdown": "`    start: Union[int, float, datetime], end: Union[int, float, datetime]\n):\n    \"\"\"Create a filter passing all values which timestamp is\n    from the specified range, exclusive at the start and inclusive at the end.\n    Args:\n      start: The start of the row range (inclusive). This can be either a python\n      datetime or a number (int of float) representing seconds since epoch.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_version_filters.py"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 39,
                  "endLine": 44,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    start: Union[int, float, datetime], end: Union[int, float, datetime]\n):\n    \"\"\"Create a filter passing all values which timestamp is\n    from the specified range, exclusive at the start and inclusive at the end.\n    Args:\n      start: The start of the row range (inclusive). This can be either a python\n      datetime or a number (int of float) representing seconds since epoch.\n",
                    "rendered": {
                      "text": "    start: Union[int, float, datetime], end: Union[int, float, datetime]\n):\n    \"\"\"Create a filter passing all values which timestamp is\n    from the specified range, exclusive at the start and inclusive at the end.\n    Args:\n      start: The start of the row range (inclusive). This can be either a python\n      datetime or a number (int of float) representing seconds since epoch.\n",
                      "markdown": "`    start: Union[int, float, datetime], end: Union[int, float, datetime]\n):\n    \"\"\"Create a filter passing all values which timestamp is\n    from the specified range, exclusive at the start and inclusive at the end.\n    Args:\n      start: The start of the row range (inclusive). This can be either a python\n      datetime or a number (int of float) representing seconds since epoch.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_version_filters.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/video_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/varlen_feature_with_rank.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_io_layer_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_group_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 70,
                  "endLine": 136,
                  "endColumn": 74,
                  "snippet": {
                    "text": "            To block indefinitely, set it to -1.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`\n          configuration: An optional `tf.string` tensor containing\n            configurations in [Key=Value] format.\n",
                    "rendered": {
                      "text": "            To block indefinitely, set it to -1.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`\n          configuration: An optional `tf.string` tensor containing\n            configurations in [Key=Value] format.\n",
                      "markdown": "`            To block indefinitely, set it to -1.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`\n          configuration: An optional `tf.string` tensor containing\n            configurations in [Key=Value] format.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_group_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 66,
                  "endLine": 110,
                  "snippet": {
                    "text": "    Thus, if we want to block indefinitely until a new message arrives,\n    we cannot do it with `message_poll_timeout` alone. This is when the `stream_timeout`\n    value comes in, where we can set the value to a very high timeout\n    (i.e, block indefinitely) and keep on polling for new messages at\n    `message_poll_timeout` intervals.\n    \"\"\"\n\n    def __init__(\n",
                    "rendered": {
                      "text": "    Thus, if we want to block indefinitely until a new message arrives,\n    we cannot do it with `message_poll_timeout` alone. This is when the `stream_timeout`\n    value comes in, where we can set the value to a very high timeout\n    (i.e, block indefinitely) and keep on polling for new messages at\n    `message_poll_timeout` intervals.\n    \"\"\"\n\n    def __init__(\n",
                      "markdown": "`    Thus, if we want to block indefinitely until a new message arrives,\n    we cannot do it with `message_poll_timeout` alone. This is when the `stream_timeout`\n    value comes in, where we can set the value to a very high timeout\n    (i.e, block indefinitely) and keep on polling for new messages at\n    `message_poll_timeout` intervals.\n    \"\"\"\n\n    def __init__(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_group_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_group_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 51,
                  "endLine": 135,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            By default it is set to 0 milliseconds and doesn't block for new messages.\n            To block indefinitely, set it to -1.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`\n          configuration: An optional `tf.string` tensor containing\n",
                    "rendered": {
                      "text": "            By default it is set to 0 milliseconds and doesn't block for new messages.\n            To block indefinitely, set it to -1.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`\n          configuration: An optional `tf.string` tensor containing\n",
                      "markdown": "`            By default it is set to 0 milliseconds and doesn't block for new messages.\n            To block indefinitely, set it to -1.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`\n          configuration: An optional `tf.string` tensor containing\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_group_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 43,
                  "endLine": 134,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            the new messages from kafka are fetched.\n            By default it is set to 0 milliseconds and doesn't block for new messages.\n            To block indefinitely, set it to -1.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`\n",
                    "rendered": {
                      "text": "            the new messages from kafka are fetched.\n            By default it is set to 0 milliseconds and doesn't block for new messages.\n            To block indefinitely, set it to -1.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`\n",
                      "markdown": "`            the new messages from kafka are fetched.\n            By default it is set to 0 milliseconds and doesn't block for new messages.\n            To block indefinitely, set it to -1.\n          message_poll_timeout: An optional timeout duration (in milliseconds)\n            after which the kafka consumer throws a timeout error while fetching\n            a single message. This value also represents the intervals at which\n            the kafka topic(s) are polled for new messages while using the `stream_timeout`\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_group_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 37,
                  "endLine": 130,
                  "endColumn": 46,
                  "snippet": {
                    "text": "          group_id: The id of the consumer group. For example: cgstream\n          servers: An optional list of bootstrap servers.\n            For example: `localhost:9092`.\n          stream_timeout: An optional timeout duration (in milliseconds) to block until\n            the new messages from kafka are fetched.\n            By default it is set to 0 milliseconds and doesn't block for new messages.\n            To block indefinitely, set it to -1.\n",
                    "rendered": {
                      "text": "          group_id: The id of the consumer group. For example: cgstream\n          servers: An optional list of bootstrap servers.\n            For example: `localhost:9092`.\n          stream_timeout: An optional timeout duration (in milliseconds) to block until\n            the new messages from kafka are fetched.\n            By default it is set to 0 milliseconds and doesn't block for new messages.\n            To block indefinitely, set it to -1.\n",
                      "markdown": "`          group_id: The id of the consumer group. For example: cgstream\n          servers: An optional list of bootstrap servers.\n            For example: `localhost:9092`.\n          stream_timeout: An optional timeout duration (in milliseconds) to block until\n            the new messages from kafka are fetched.\n            By default it is set to 0 milliseconds and doesn't block for new messages.\n            To block indefinitely, set it to -1.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_group_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 61,
                  "endLine": 109,
                  "snippet": {
                    "text": "    consumption but it will wait until the `message_poll_timeout` interval has finished.\n    Thus, if we want to block indefinitely until a new message arrives,\n    we cannot do it with `message_poll_timeout` alone. This is when the `stream_timeout`\n    value comes in, where we can set the value to a very high timeout\n    (i.e, block indefinitely) and keep on polling for new messages at\n    `message_poll_timeout` intervals.\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "    consumption but it will wait until the `message_poll_timeout` interval has finished.\n    Thus, if we want to block indefinitely until a new message arrives,\n    we cannot do it with `message_poll_timeout` alone. This is when the `stream_timeout`\n    value comes in, where we can set the value to a very high timeout\n    (i.e, block indefinitely) and keep on polling for new messages at\n    `message_poll_timeout` intervals.\n    \"\"\"\n\n",
                      "markdown": "`    consumption but it will wait until the `message_poll_timeout` interval has finished.\n    Thus, if we want to block indefinitely until a new message arrives,\n    we cannot do it with `message_poll_timeout` alone. This is when the `stream_timeout`\n    value comes in, where we can set the value to a very high timeout\n    (i.e, block indefinitely) and keep on polling for new messages at\n    `message_poll_timeout` intervals.\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_group_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 65,
                  "endLine": 99,
                  "endColumn": 74,
                  "snippet": {
                    "text": "    the dataset will wait for any new messages that might be added to the topic for that duration.\n\n    As the kafka deployments vary in configuration as per various use-cases, the time required for\n    the consumers to fetch a single message might also vary. This timeout value can be adjusted\n    using the `message_poll_timeout` parameter.\n\n    The `message_poll_timeout` value represents the duration which the consumers\n",
                    "rendered": {
                      "text": "    the dataset will wait for any new messages that might be added to the topic for that duration.\n\n    As the kafka deployments vary in configuration as per various use-cases, the time required for\n    the consumers to fetch a single message might also vary. This timeout value can be adjusted\n    using the `message_poll_timeout` parameter.\n\n    The `message_poll_timeout` value represents the duration which the consumers\n",
                      "markdown": "`    the dataset will wait for any new messages that might be added to the topic for that duration.\n\n    As the kafka deployments vary in configuration as per various use-cases, the time required for\n    the consumers to fetch a single message might also vary. This timeout value can be adjusted\n    using the `message_poll_timeout` parameter.\n\n    The `message_poll_timeout` value represents the duration which the consumers\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_group_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 80,
                  "endLine": 98,
                  "endColumn": 86,
                  "snippet": {
                    "text": "    from the topic(s). However, since we set the `stream_timeout` value to `15000` milliseconds,\n    the dataset will wait for any new messages that might be added to the topic for that duration.\n\n    As the kafka deployments vary in configuration as per various use-cases, the time required for\n    the consumers to fetch a single message might also vary. This timeout value can be adjusted\n    using the `message_poll_timeout` parameter.\n\n",
                    "rendered": {
                      "text": "    from the topic(s). However, since we set the `stream_timeout` value to `15000` milliseconds,\n    the dataset will wait for any new messages that might be added to the topic for that duration.\n\n    As the kafka deployments vary in configuration as per various use-cases, the time required for\n    the consumers to fetch a single message might also vary. This timeout value can be adjusted\n    using the `message_poll_timeout` parameter.\n\n",
                      "markdown": "`    from the topic(s). However, since we set the `stream_timeout` value to `15000` milliseconds,\n    the dataset will wait for any new messages that might be added to the topic for that duration.\n\n    As the kafka deployments vary in configuration as per various use-cases, the time required for\n    the consumers to fetch a single message might also vary. This timeout value can be adjusted\n    using the `message_poll_timeout` parameter.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_group_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 85,
                  "endLine": 77,
                  "snippet": {
                    "text": "    please refer the librdkafka's configurations:\n    https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md\n\n    In addition to the standard streaming functionality, there is added support for a timeout\n    based stream. Once the existing data has been fetched, this dataset will block for\n    an additional `stream_timeout` milliseconds, for the new messages to be captured.\n\n    >>> dataset = tfio.experimental.streaming.KafkaGroupIODataset(\n",
                    "rendered": {
                      "text": "    please refer the librdkafka's configurations:\n    https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md\n\n    In addition to the standard streaming functionality, there is added support for a timeout\n    based stream. Once the existing data has been fetched, this dataset will block for\n    an additional `stream_timeout` milliseconds, for the new messages to be captured.\n\n    >>> dataset = tfio.experimental.streaming.KafkaGroupIODataset(\n",
                      "markdown": "`    please refer the librdkafka's configurations:\n    https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md\n\n    In addition to the standard streaming functionality, there is added support for a timeout\n    based stream. Once the existing data has been fetched, this dataset will block for\n    an additional `stream_timeout` milliseconds, for the new messages to be captured.\n\n    >>> dataset = tfio.experimental.streaming.KafkaGroupIODataset(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_group_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 47,
                  "endLine": 50,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    set `session.timeout.ms` and `max.poll.interval.ms` values in the configuration tensor\n    and try again after the group rebalances. For example: considering the kafka cluster\n    has been setup with the default settings, `max.poll.interval.ms` would be `300000ms`.\n    It can be changed to `8000ms` to reduce the time between pools. Also, the `session.timeout.ms`\n    can be changed to `7000ms`. However, the value for `session.timeout.ms` should be\n    according to the following relation:\n\n",
                    "rendered": {
                      "text": "    set `session.timeout.ms` and `max.poll.interval.ms` values in the configuration tensor\n    and try again after the group rebalances. For example: considering the kafka cluster\n    has been setup with the default settings, `max.poll.interval.ms` would be `300000ms`.\n    It can be changed to `8000ms` to reduce the time between pools. Also, the `session.timeout.ms`\n    can be changed to `7000ms`. However, the value for `session.timeout.ms` should be\n    according to the following relation:\n\n",
                      "markdown": "`    set `session.timeout.ms` and `max.poll.interval.ms` values in the configuration tensor\n    and try again after the group rebalances. For example: considering the kafka cluster\n    has been setup with the default settings, `max.poll.interval.ms` would be `300000ms`.\n    It can be changed to `8000ms` to reduce the time between pools. Also, the `session.timeout.ms`\n    can be changed to `7000ms`. However, the value for `session.timeout.ms` should be\n    according to the following relation:\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kafka_group_io_dataset_ops.py"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 43,
                  "endLine": 45,
                  "endColumn": 49,
                  "snippet": {
                    "text": "    >>> for (message, key) in dataset:\n    ...     print(message)\n\n    Cases may arise where the consumer read time out issues arise due to\n    the consumer group being in a rebalancing state. In order to address that, please\n    set `session.timeout.ms` and `max.poll.interval.ms` values in the configuration tensor\n    and try again after the group rebalances. For example: considering the kafka cluster\n",
                    "rendered": {
                      "text": "    >>> for (message, key) in dataset:\n    ...     print(message)\n\n    Cases may arise where the consumer read time out issues arise due to\n    the consumer group being in a rebalancing state. In order to address that, please\n    set `session.timeout.ms` and `max.poll.interval.ms` values in the configuration tensor\n    and try again after the group rebalances. For example: considering the kafka cluster\n",
                      "markdown": "`    >>> for (message, key) in dataset:\n    ...     print(message)\n\n    Cases may arise where the consumer read time out issues arise due to\n    the consumer group being in a rebalancing state. In order to address that, please\n    set `session.timeout.ms` and `max.poll.interval.ms` values in the configuration tensor\n    and try again after the group rebalances. For example: considering the kafka cluster\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/elasticsearch_dataset_ops.py"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 31,
                  "endLine": 233,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n        Args:\n            nodes: A `tf.string` tensor containing the hostnames of nodes\n                in [protocol://hostname:port] format.\n                For example: [\"http://localhost:9200\"]\n            index: A `tf.string` representing the elasticsearch index to query.\n            doc_type: (Optional) A `tf.string` representing the type of documents\n",
                    "rendered": {
                      "text": "\n        Args:\n            nodes: A `tf.string` tensor containing the hostnames of nodes\n                in [protocol://hostname:port] format.\n                For example: [\"http://localhost:9200\"]\n            index: A `tf.string` representing the elasticsearch index to query.\n            doc_type: (Optional) A `tf.string` representing the type of documents\n",
                      "markdown": "`\n        Args:\n            nodes: A `tf.string` tensor containing the hostnames of nodes\n                in [protocol://hostname:port] format.\n                For example: [\"http://localhost:9200\"]\n            index: A `tf.string` representing the elasticsearch index to query.\n            doc_type: (Optional) A `tf.string` representing the type of documents\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/elasticsearch_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/elasticsearch_dataset_ops.py"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 27,
                  "endLine": 123,
                  "endColumn": 33,
                  "snippet": {
                    "text": "                continue\n        else:\n            raise ConnectionError(\n                \"No healthy node available for the index: {}, please check the cluster config\".format(\n                    self.index\n                )\n            )\n",
                    "rendered": {
                      "text": "                continue\n        else:\n            raise ConnectionError(\n                \"No healthy node available for the index: {}, please check the cluster config\".format(\n                    self.index\n                )\n            )\n",
                      "markdown": "`                continue\n        else:\n            raise ConnectionError(\n                \"No healthy node available for the index: {}, please check the cluster config\".format(\n                    self.index\n                )\n            )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/elasticsearch_dataset_ops.py"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 11,
                  "endLine": 52,
                  "endColumn": 17,
                  "snippet": {
                    "text": "            self.nodes = [self.nodes]\n\n        self.base_urls = []\n        for node in self.nodes:\n            if \"//\" not in node:\n                raise ValueError(\n                    \"Please provide the list of nodes in 'protocol://host:port' format.\"\n",
                    "rendered": {
                      "text": "            self.nodes = [self.nodes]\n\n        self.base_urls = []\n        for node in self.nodes:\n            if \"//\" not in node:\n                raise ValueError(\n                    \"Please provide the list of nodes in 'protocol://host:port' format.\"\n",
                      "markdown": "`            self.nodes = [self.nodes]\n\n        self.base_urls = []\n        for node in self.nodes:\n            if \"//\" not in node:\n                raise ValueError(\n                    \"Please provide the list of nodes in 'protocol://host:port' format.\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/image.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/experimental/ffmpeg.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/kafka.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/kafka_deprecated_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/kafka_deprecated_dataset_ops.py"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 24,
                  "endLine": 64,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            servers: A list of bootstrap servers.\n            group: The consumer group id.\n            eof: If True, the kafka reader will stop on EOF.\n            timeout: The timeout value for the Kafka Consumer to wait\n                    (in milliseconds).\n            config_global: A `tf.string` tensor containing global configuration\n                            properties in [Key=Value] format,\n",
                    "rendered": {
                      "text": "            servers: A list of bootstrap servers.\n            group: The consumer group id.\n            eof: If True, the kafka reader will stop on EOF.\n            timeout: The timeout value for the Kafka Consumer to wait\n                    (in milliseconds).\n            config_global: A `tf.string` tensor containing global configuration\n                            properties in [Key=Value] format,\n",
                      "markdown": "`            servers: A list of bootstrap servers.\n            group: The consumer group id.\n            eof: If True, the kafka reader will stop on EOF.\n            timeout: The timeout value for the Kafka Consumer to wait\n                    (in milliseconds).\n            config_global: A `tf.string` tensor containing global configuration\n                            properties in [Key=Value] format,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/kafka_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigquery_dataset_ops.py"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 45,
                  "endLine": 190,
                  "endColumn": 50,
                  "snippet": {
                    "text": "                    raise ValueError(\n                        \"mode needs be BigQueryClient.FieldMode.NULLABLE, FieldMode.REQUIRED or FieldMode.REPEATED\"\n                    )\n                output_type = field_attr_dict.get(\"output_type\", dtypes.string)\n                output_types.append(output_type)\n                if \"default_value\" in field_attr_dict:\n                    default_value = str(field_attr_dict[\"default_value\"])\n",
                    "rendered": {
                      "text": "                    raise ValueError(\n                        \"mode needs be BigQueryClient.FieldMode.NULLABLE, FieldMode.REQUIRED or FieldMode.REPEATED\"\n                    )\n                output_type = field_attr_dict.get(\"output_type\", dtypes.string)\n                output_types.append(output_type)\n                if \"default_value\" in field_attr_dict:\n                    default_value = str(field_attr_dict[\"default_value\"])\n",
                      "markdown": "`                    raise ValueError(\n                        \"mode needs be BigQueryClient.FieldMode.NULLABLE, FieldMode.REQUIRED or FieldMode.REPEATED\"\n                    )\n                output_type = field_attr_dict.get(\"output_type\", dtypes.string)\n                output_types.append(output_type)\n                if \"default_value\" in field_attr_dict:\n                    default_value = str(field_attr_dict[\"default_value\"])\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigquery_dataset_ops.py"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 38,
                  "endLine": 181,
                  "endColumn": 43,
                  "snippet": {
                    "text": "            default_values = []\n            for field, field_attr_dict in selected_fields.items():\n                _selected_fields.append(field)\n                mode = field_attr_dict.get(\"mode\", self.FieldMode.NULLABLE)\n                if mode == self.FieldMode.REPEATED:\n                    selected_fields_repeated.append(True)\n                elif mode == self.FieldMode.NULLABLE or mode == self.FieldMode.REQUIRED:\n",
                    "rendered": {
                      "text": "            default_values = []\n            for field, field_attr_dict in selected_fields.items():\n                _selected_fields.append(field)\n                mode = field_attr_dict.get(\"mode\", self.FieldMode.NULLABLE)\n                if mode == self.FieldMode.REPEATED:\n                    selected_fields_repeated.append(True)\n                elif mode == self.FieldMode.NULLABLE or mode == self.FieldMode.REQUIRED:\n",
                      "markdown": "`            default_values = []\n            for field, field_attr_dict in selected_fields.items():\n                _selected_fields.append(field)\n                mode = field_attr_dict.get(\"mode\", self.FieldMode.NULLABLE)\n                if mode == self.FieldMode.REPEATED:\n                    selected_fields_repeated.append(True)\n                elif mode == self.FieldMode.NULLABLE or mode == self.FieldMode.REQUIRED:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigquery_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigquery_dataset_ops.py"
                },
                "region": {
                  "startLine": 432,
                  "startColumn": 40,
                  "endLine": 432,
                  "endColumn": 49,
                  "snippet": {
                    "text": "        \"\"\"Creates a BigQueryTestClient to start BigQuery read sessions.\n\n        Args:\n            fake_server_address: url for service faking Cloud BigQuery Storage API.\n        \"\"\"\n\n        self._client_resource = core_ops.io_big_query_test_client(fake_server_address)\n",
                    "rendered": {
                      "text": "        \"\"\"Creates a BigQueryTestClient to start BigQuery read sessions.\n\n        Args:\n            fake_server_address: url for service faking Cloud BigQuery Storage API.\n        \"\"\"\n\n        self._client_resource = core_ops.io_big_query_test_client(fake_server_address)\n",
                      "markdown": "`        \"\"\"Creates a BigQueryTestClient to start BigQuery read sessions.\n\n        Args:\n            fake_server_address: url for service faking Cloud BigQuery Storage API.\n        \"\"\"\n\n        self._client_resource = core_ops.io_big_query_test_client(fake_server_address)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigquery_dataset_ops.py"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 43,
                  "endLine": 313,
                  "endColumn": 52,
                  "snippet": {
                    "text": "        block_length=1,\n        num_parallel_calls=None,\n    ):\n        \"\"\"Retrieves rows from the BigQuery service in parallel streams.\n\n        ```\n        bq_client = BigQueryClient()\n",
                    "rendered": {
                      "text": "        block_length=1,\n        num_parallel_calls=None,\n    ):\n        \"\"\"Retrieves rows from the BigQuery service in parallel streams.\n\n        ```\n        bq_client = BigQueryClient()\n",
                      "markdown": "`        block_length=1,\n        num_parallel_calls=None,\n    ):\n        \"\"\"Retrieves rows from the BigQuery service in parallel streams.\n\n        ```\n        bq_client = BigQueryClient()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 33,
                  "endLine": 337,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromGRPC\")):\n            return grpc_dataset_ops.GRPCStreamIODataset.from_numpy(a, internal=True)\n",
                    "rendered": {
                      "text": "        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromGRPC\")):\n            return grpc_dataset_ops.GRPCStreamIODataset.from_numpy(a, internal=True)\n",
                      "markdown": "`        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromGRPC\")):\n            return grpc_dataset_ops.GRPCStreamIODataset.from_numpy(a, internal=True)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 33,
                  "endLine": 321,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromPubSub\")):\n            return pubsub_dataset_ops.PubSubStreamIODataset(\n                subscription, endpoint=endpoint, timeout=timeout, internal=True\n            )\n",
                    "rendered": {
                      "text": "        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromPubSub\")):\n            return pubsub_dataset_ops.PubSubStreamIODataset(\n                subscription, endpoint=endpoint, timeout=timeout, internal=True\n            )\n",
                      "markdown": "`        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromPubSub\")):\n            return pubsub_dataset_ops.PubSubStreamIODataset(\n                subscription, endpoint=endpoint, timeout=timeout, internal=True\n            )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 33,
                  "endLine": 299,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromPrometheusScrape\")):\n            from tensorflow_io.python.ops import (  # pylint: disable=import-outside-toplevel\n                prometheus_dataset_ops,\n            )\n",
                    "rendered": {
                      "text": "        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromPrometheusScrape\")):\n            from tensorflow_io.python.ops import (  # pylint: disable=import-outside-toplevel\n                prometheus_dataset_ops,\n            )\n",
                      "markdown": "`        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromPrometheusScrape\")):\n            from tensorflow_io.python.ops import (  # pylint: disable=import-outside-toplevel\n                prometheus_dataset_ops,\n            )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 33,
                  "endLine": 283,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromVideoCapture\")):\n            return video_dataset_ops.VideoCaptureIODataset(device, internal=True)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromVideoCapture\")):\n            return video_dataset_ops.VideoCaptureIODataset(device, internal=True)\n\n    @classmethod\n",
                      "markdown": "`        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromVideoCapture\")):\n            return video_dataset_ops.VideoCaptureIODataset(device, internal=True)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 33,
                  "endLine": 265,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        Returns:\n          The number of records written.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOToText\")):\n            return file_dataset_ops.to_file(dataset, filename)\n\n\n",
                    "rendered": {
                      "text": "        Returns:\n          The number of records written.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOToText\")):\n            return file_dataset_ops.to_file(dataset, filename)\n\n\n",
                      "markdown": "`        Returns:\n          The number of records written.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOToText\")):\n            return file_dataset_ops.to_file(dataset, filename)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 33,
                  "endLine": 190,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IODataset` with the same dtypes as of the array_like in numpy\n            file (npy or npz).\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromNumpyFile\")):\n            return numpy_dataset_ops.NumpyFileIODataset(\n                filename, spec=spec, internal=True\n            )\n",
                    "rendered": {
                      "text": "          A `IODataset` with the same dtypes as of the array_like in numpy\n            file (npy or npz).\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromNumpyFile\")):\n            return numpy_dataset_ops.NumpyFileIODataset(\n                filename, spec=spec, internal=True\n            )\n",
                      "markdown": "`          A `IODataset` with the same dtypes as of the array_like in numpy\n            file (npy or npz).\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromNumpyFile\")):\n            return numpy_dataset_ops.NumpyFileIODataset(\n                filename, spec=spec, internal=True\n            )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 33,
                  "endLine": 157,
                  "endColumn": 38,
                  "snippet": {
                    "text": "            in `a`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromNumpy\")):\n            return numpy_dataset_ops.NumpyIODataset(a, internal=True)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "            in `a`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromNumpy\")):\n            return numpy_dataset_ops.NumpyIODataset(a, internal=True)\n\n    @classmethod\n",
                      "markdown": "`            in `a`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromNumpy\")):\n            return numpy_dataset_ops.NumpyIODataset(a, internal=True)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 33,
                  "endLine": 114,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromKinesis\")):\n            return kinesis_dataset_ops.KinesisIODataset(stream, shard, internal=True)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromKinesis\")):\n            return kinesis_dataset_ops.KinesisIODataset(stream, shard, internal=True)\n\n    @classmethod\n",
                      "markdown": "`        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromKinesis\")):\n            return kinesis_dataset_ops.KinesisIODataset(stream, shard, internal=True)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 33,
                  "endLine": 99,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromTIFF\")):\n            return image_dataset_ops.TIFFIODataset(filename, internal=True)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromTIFF\")):\n            return image_dataset_ops.TIFFIODataset(filename, internal=True)\n\n    @classmethod\n",
                      "markdown": "`        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromTIFF\")):\n            return image_dataset_ops.TIFFIODataset(filename, internal=True)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 33,
                  "endLine": 77,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromLibSVM\")):\n            return libsvm_dataset_ops.LibSVMIODataset(\n                filename,\n                num_features,\n",
                    "rendered": {
                      "text": "        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromLibSVM\")):\n            return libsvm_dataset_ops.LibSVMIODataset(\n                filename,\n                num_features,\n",
                      "markdown": "`        Returns:\n          A `IODataset`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromLibSVM\")):\n            return libsvm_dataset_ops.LibSVMIODataset(\n                filename,\n                num_features,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 34,
                  "endLine": 315,
                  "endColumn": 43,
                  "snippet": {
                    "text": "        Args:\n          subscription: A string, the subscription of the pubsub messages.\n          endpoint: A string, the address of pubsub endpoint.\n          timeout: An integer, the timeout of the pubsub pull.\n          name: A name prefix for the IODataset (optional).\n\n        Returns:\n",
                    "rendered": {
                      "text": "        Args:\n          subscription: A string, the subscription of the pubsub messages.\n          endpoint: A string, the address of pubsub endpoint.\n          timeout: An integer, the timeout of the pubsub pull.\n          name: A name prefix for the IODataset (optional).\n\n        Returns:\n",
                      "markdown": "`        Args:\n          subscription: A string, the subscription of the pubsub messages.\n          endpoint: A string, the address of pubsub endpoint.\n          timeout: An integer, the timeout of the pubsub pull.\n          name: A name prefix for the IODataset (optional).\n\n        Returns:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 35,
                  "endLine": 293,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        Args:\n          metric: A string, the name of the metric to scrape.\n          endpoint: A string, the address of prometheus scrape endpoint.\n          interval: An integer, the time interval to scrape, by default 1s.\n          name: A name prefix for the IODataset (optional).\n\n        Returns:\n",
                    "rendered": {
                      "text": "        Args:\n          metric: A string, the name of the metric to scrape.\n          endpoint: A string, the address of prometheus scrape endpoint.\n          interval: An integer, the time interval to scrape, by default 1s.\n          name: A name prefix for the IODataset (optional).\n\n        Returns:\n",
                      "markdown": "`        Args:\n          metric: A string, the name of the metric to scrape.\n          endpoint: A string, the address of prometheus scrape endpoint.\n          interval: An integer, the time interval to scrape, by default 1s.\n          name: A name prefix for the IODataset (optional).\n\n        Returns:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/io_dataset_ops.py"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 15,
                  "endLine": 203,
                  "endColumn": 21,
                  "snippet": {
                    "text": "          query: A string, the query string for prometheus.\n          length: An integer, the length of the query (in seconds).\n          offset: An integer, the a millisecond-precision timestamp, by default\n            the time when graph runs.\n          endpoint: A string, the server address of prometheus, by default\n            `http://localhost:9090`.\n          spec: A structured tf.TensorSpec of the dataset.\n",
                    "rendered": {
                      "text": "          query: A string, the query string for prometheus.\n          length: An integer, the length of the query (in seconds).\n          offset: An integer, the a millisecond-precision timestamp, by default\n            the time when graph runs.\n          endpoint: A string, the server address of prometheus, by default\n            `http://localhost:9090`.\n          spec: A structured tf.TensorSpec of the dataset.\n",
                      "markdown": "`          query: A string, the query string for prometheus.\n          length: An integer, the length of the query (in seconds).\n          offset: An integer, the a millisecond-precision timestamp, by default\n            the time when graph runs.\n          endpoint: A string, the server address of prometheus, by default\n            `http://localhost:9090`.\n          spec: A structured tf.TensorSpec of the dataset.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/image_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/ffmpeg_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/experimental/serialization.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/bigquery.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 487,
                  "startColumn": 33,
                  "endLine": 487,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAudio\")):\n            return audio_ops.AudioIOTensor(filename, dtype=cls._dtype)\n",
                    "rendered": {
                      "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAudio\")):\n            return audio_ops.AudioIOTensor(filename, dtype=cls._dtype)\n",
                      "markdown": "`          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAudio\")):\n            return audio_ops.AudioIOTensor(filename, dtype=cls._dtype)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 457,
                  "startColumn": 33,
                  "endLine": 457,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromTIFF\")):\n            return tiff_io_tensor_ops.TIFFIOTensor(filename, internal=True)\n\n\n",
                    "rendered": {
                      "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromTIFF\")):\n            return tiff_io_tensor_ops.TIFFIOTensor(filename, internal=True)\n\n\n",
                      "markdown": "`          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromTIFF\")):\n            return tiff_io_tensor_ops.TIFFIOTensor(filename, internal=True)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 33,
                  "endLine": 440,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromParquet\")):\n            return parquet_io_tensor_ops.ParquetIOTensor(filename, internal=True)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromParquet\")):\n            return parquet_io_tensor_ops.ParquetIOTensor(filename, internal=True)\n\n    @classmethod\n",
                      "markdown": "`          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromParquet\")):\n            return parquet_io_tensor_ops.ParquetIOTensor(filename, internal=True)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 425,
                  "startColumn": 33,
                  "endLine": 425,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromFFmpeg\")):\n            return ffmpeg_io_tensor_ops.FFmpegIOTensor(filename, internal=True)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromFFmpeg\")):\n            return ffmpeg_io_tensor_ops.FFmpegIOTensor(filename, internal=True)\n\n    @classmethod\n",
                      "markdown": "`          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromFFmpeg\")):\n            return ffmpeg_io_tensor_ops.FFmpegIOTensor(filename, internal=True)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 408,
                  "startColumn": 33,
                  "endLine": 408,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAvro\")):\n            return avro_io_tensor_ops.AvroIOTensor(\n                filename, schema, internal=True, **kwargs\n            )\n",
                    "rendered": {
                      "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAvro\")):\n            return avro_io_tensor_ops.AvroIOTensor(\n                filename, schema, internal=True, **kwargs\n            )\n",
                      "markdown": "`          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAvro\")):\n            return avro_io_tensor_ops.AvroIOTensor(\n                filename, schema, internal=True, **kwargs\n            )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 33,
                  "endLine": 392,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromCSV\")):\n            return csv_io_tensor_ops.CSVIOTensor(filename, internal=True)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromCSV\")):\n            return csv_io_tensor_ops.CSVIOTensor(filename, internal=True)\n\n    @classmethod\n",
                      "markdown": "`          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromCSV\")):\n            return csv_io_tensor_ops.CSVIOTensor(filename, internal=True)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 33,
                  "endLine": 377,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromHDF5\")):\n            return hdf5_io_tensor_ops.HDF5IOTensor(filename, spec=spec, internal=True)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromHDF5\")):\n            return hdf5_io_tensor_ops.HDF5IOTensor(filename, spec=spec, internal=True)\n\n    @classmethod\n",
                      "markdown": "`          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromHDF5\")):\n            return hdf5_io_tensor_ops.HDF5IOTensor(filename, spec=spec, internal=True)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 33,
                  "endLine": 358,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromLMDB\")):\n            return lmdb_io_tensor_ops.LMDBIOTensor(filename, internal=True)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromLMDB\")):\n            return lmdb_io_tensor_ops.LMDBIOTensor(filename, internal=True)\n\n    @classmethod\n",
                      "markdown": "`          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromLMDB\")):\n            return lmdb_io_tensor_ops.LMDBIOTensor(filename, internal=True)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 33,
                  "endLine": 343,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromArrow\")):\n            return arrow_io_tensor_ops.ArrowIOTensor(table, spec=spec, internal=True)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromArrow\")):\n            return arrow_io_tensor_ops.ArrowIOTensor(table, spec=spec, internal=True)\n\n    @classmethod\n",
                      "markdown": "`          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromArrow\")):\n            return arrow_io_tensor_ops.ArrowIOTensor(table, spec=spec, internal=True)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 33,
                  "endLine": 323,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromFeather\")):\n            return feather_io_tensor_ops.FeatherIOTensor(filename, internal=True)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromFeather\")):\n            return feather_io_tensor_ops.FeatherIOTensor(filename, internal=True)\n\n    @classmethod\n",
                      "markdown": "`          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromFeather\")):\n            return feather_io_tensor_ops.FeatherIOTensor(filename, internal=True)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 33,
                  "endLine": 302,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromKafka\")):\n            return kafka_io_tensor_ops.KafkaIOTensor(\n                topic=topic,\n                partition=partition,\n",
                    "rendered": {
                      "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromKafka\")):\n            return kafka_io_tensor_ops.KafkaIOTensor(\n                topic=topic,\n                partition=partition,\n",
                      "markdown": "`          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromKafka\")):\n            return kafka_io_tensor_ops.KafkaIOTensor(\n                topic=topic,\n                partition=partition,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 37,
                  "endLine": 274,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromJSON\")):\n            return json_io_tensor_ops.JSONIOTensor(\n                filename, mode=kwargs.get(\"mode\", None), internal=True\n            )\n\n    @classmethod\n",
                    "rendered": {
                      "text": "        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromJSON\")):\n            return json_io_tensor_ops.JSONIOTensor(\n                filename, mode=kwargs.get(\"mode\", None), internal=True\n            )\n\n    @classmethod\n",
                      "markdown": "`        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromJSON\")):\n            return json_io_tensor_ops.JSONIOTensor(\n                filename, mode=kwargs.get(\"mode\", None), internal=True\n            )\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 33,
                  "endLine": 272,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromJSON\")):\n            return json_io_tensor_ops.JSONIOTensor(\n                filename, mode=kwargs.get(\"mode\", None), internal=True\n            )\n",
                    "rendered": {
                      "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromJSON\")):\n            return json_io_tensor_ops.JSONIOTensor(\n                filename, mode=kwargs.get(\"mode\", None), internal=True\n            )\n",
                      "markdown": "`          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromJSON\")):\n            return json_io_tensor_ops.JSONIOTensor(\n                filename, mode=kwargs.get(\"mode\", None), internal=True\n            )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 33,
                  "endLine": 257,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAudio\")):\n            return audio_ops.AudioIOTensor(filename)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAudio\")):\n            return audio_ops.AudioIOTensor(filename)\n\n    @classmethod\n",
                      "markdown": "`          A `IOTensor`.\n\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromAudio\")):\n            return audio_ops.AudioIOTensor(filename)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 33,
                  "endLine": 236,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        Raises:\n          ValueError: If tensor is not a `Tensor`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromTensor\")):\n            return io_tensor_ops.TensorIOTensor(tensor, internal=True)\n\n    @classmethod\n",
                    "rendered": {
                      "text": "        Raises:\n          ValueError: If tensor is not a `Tensor`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromTensor\")):\n            return io_tensor_ops.TensorIOTensor(tensor, internal=True)\n\n    @classmethod\n",
                      "markdown": "`        Raises:\n          ValueError: If tensor is not a `Tensor`.\n        \"\"\"\n        with tf.name_scope(kwargs.get(\"name\", \"IOFromTensor\")):\n            return io_tensor_ops.TensorIOTensor(tensor, internal=True)\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 10,
                  "endLine": 69,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    is the packet capture (PCAP) file in networking area. The packets inside\n    a PCAP file is concatenated sequentially. Since each packets could have\n    a variable length, the only way to access each packet is to read one\n    packet at a time. If the PCAP file is huge (e.g., hundreds of GBs or even\n    TBs), it may not be realistic (or necessarily) to save the index of every\n    packet in memory. We could consider PCAP format as iterable only.\n\n",
                    "rendered": {
                      "text": "    is the packet capture (PCAP) file in networking area. The packets inside\n    a PCAP file is concatenated sequentially. Since each packets could have\n    a variable length, the only way to access each packet is to read one\n    packet at a time. If the PCAP file is huge (e.g., hundreds of GBs or even\n    TBs), it may not be realistic (or necessarily) to save the index of every\n    packet in memory. We could consider PCAP format as iterable only.\n\n",
                      "markdown": "`    is the packet capture (PCAP) file in networking area. The packets inside\n    a PCAP file is concatenated sequentially. Since each packets could have\n    a variable length, the only way to access each packet is to read one\n    packet at a time. If the PCAP file is huge (e.g., hundreds of GBs or even\n    TBs), it may not be realistic (or necessarily) to save the index of every\n    packet in memory. We could consider PCAP format as iterable only.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/io_tensor.py"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 44,
                  "endLine": 80,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    (without read the whole file) with no data overlapping in between those\n    chunks. For example, a text file could be reliably split into multiple\n    chunks with line feed (LF) as the boundary. Processing of chunks could then\n    be distributed across a group of compute node to speed up (by reading small\n    chunks into memory). From that standpoint, we could still consider splittable\n    formats as indexable.\n\n",
                    "rendered": {
                      "text": "    (without read the whole file) with no data overlapping in between those\n    chunks. For example, a text file could be reliably split into multiple\n    chunks with line feed (LF) as the boundary. Processing of chunks could then\n    be distributed across a group of compute node to speed up (by reading small\n    chunks into memory). From that standpoint, we could still consider splittable\n    formats as indexable.\n\n",
                      "markdown": "`    (without read the whole file) with no data overlapping in between those\n    chunks. For example, a text file could be reliably split into multiple\n    chunks with line feed (LF) as the boundary. Processing of chunks could then\n    be distributed across a group of compute node to speed up (by reading small\n    chunks into memory). From that standpoint, we could still consider splittable\n    formats as indexable.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_row_range.py"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 35,
                  "endLine": 115,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n\ndef closed_range(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range inclusive at both the start and the end.\n\n    Args:\n      start (str): The start of the row range (inclusive).\n",
                    "rendered": {
                      "text": "\n\ndef closed_range(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range inclusive at both the start and the end.\n\n    Args:\n      start (str): The start of the row range (inclusive).\n",
                      "markdown": "`\n\ndef closed_range(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range inclusive at both the start and the end.\n\n    Args:\n      start (str): The start of the row range (inclusive).\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_row_range.py"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 35,
                  "endLine": 103,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n\ndef open_range(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range exclusive at both the start and the end.\n\n    Args:\n      start (str): The start of the row range (exclusive).\n",
                    "rendered": {
                      "text": "\n\ndef open_range(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range exclusive at both the start and the end.\n\n    Args:\n      start (str): The start of the row range (exclusive).\n",
                      "markdown": "`\n\ndef open_range(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range exclusive at both the start and the end.\n\n    Args:\n      start (str): The start of the row range (exclusive).\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_row_range.py"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 62,
                  "endLine": 91,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n\ndef left_open(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range inclusive at the start and exclusive at the end.\n\n    Args:\n      start (str): The start of the row range (exclusive).\n",
                    "rendered": {
                      "text": "\n\ndef left_open(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range inclusive at the start and exclusive at the end.\n\n    Args:\n      start (str): The start of the row range (exclusive).\n",
                      "markdown": "`\n\ndef left_open(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range inclusive at the start and exclusive at the end.\n\n    Args:\n      start (str): The start of the row range (exclusive).\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_row_range.py"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 35,
                  "endLine": 91,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n\ndef left_open(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range inclusive at the start and exclusive at the end.\n\n    Args:\n      start (str): The start of the row range (exclusive).\n",
                    "rendered": {
                      "text": "\n\ndef left_open(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range inclusive at the start and exclusive at the end.\n\n    Args:\n      start (str): The start of the row range (exclusive).\n",
                      "markdown": "`\n\ndef left_open(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range inclusive at the start and exclusive at the end.\n\n    Args:\n      start (str): The start of the row range (exclusive).\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_row_range.py"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 62,
                  "endLine": 79,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n\ndef right_open(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range exclusive at the start and inclusive at the end.\n\n    Args:\n      start (str): The start of the row range (inclusive).\n",
                    "rendered": {
                      "text": "\n\ndef right_open(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range exclusive at the start and inclusive at the end.\n\n    Args:\n      start (str): The start of the row range (inclusive).\n",
                      "markdown": "`\n\ndef right_open(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range exclusive at the start and inclusive at the end.\n\n    Args:\n      start (str): The start of the row range (inclusive).\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_row_range.py"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 35,
                  "endLine": 79,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n\ndef right_open(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range exclusive at the start and inclusive at the end.\n\n    Args:\n      start (str): The start of the row range (inclusive).\n",
                    "rendered": {
                      "text": "\n\ndef right_open(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range exclusive at the start and inclusive at the end.\n\n    Args:\n      start (str): The start of the row range (inclusive).\n",
                      "markdown": "`\n\ndef right_open(start: str, end: str) -> RowRange:\n    \"\"\"Create a row range exclusive at the start and inclusive at the end.\n\n    Args:\n      start (str): The start of the row range (inclusive).\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_row_range.py"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 40,
                  "endLine": 55,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    Args:\n      row_key (str): The ending row key of the range (inclusive).\n    Returns:\n      RowRange: The row range which ends at `row_key` (inclusive).\n    \"\"\"\n    return RowRange(core_ops.bigtable_row_range(\"\", False, row_key, False))\n\n",
                    "rendered": {
                      "text": "    Args:\n      row_key (str): The ending row key of the range (inclusive).\n    Returns:\n      RowRange: The row range which ends at `row_key` (inclusive).\n    \"\"\"\n    return RowRange(core_ops.bigtable_row_range(\"\", False, row_key, False))\n\n",
                      "markdown": "`    Args:\n      row_key (str): The ending row key of the range (inclusive).\n    Returns:\n      RowRange: The row range which ends at `row_key` (inclusive).\n    \"\"\"\n    return RowRange(core_ops.bigtable_row_range(\"\", False, row_key, False))\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_row_range.py"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 32,
                  "endLine": 50,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\ndef ending_at(row_key: str) -> RowRange:\n    \"\"\"Create a row range ending at given row (inclusive).\n\n    Args:\n      row_key (str): The ending row key of the range (inclusive).\n",
                    "rendered": {
                      "text": "\n\ndef ending_at(row_key: str) -> RowRange:\n    \"\"\"Create a row range ending at given row (inclusive).\n\n    Args:\n      row_key (str): The ending row key of the range (inclusive).\n",
                      "markdown": "`\n\ndef ending_at(row_key: str) -> RowRange:\n    \"\"\"Create a row range ending at given row (inclusive).\n\n    Args:\n      row_key (str): The ending row key of the range (inclusive).\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_row_range.py"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 42,
                  "endLine": 44,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    Args:\n      row_key (str): The starting row key of the range (inclusive).\n    Returns:\n      RowRange: The row range which starts at `row_key` (inclusive).\n    \"\"\"\n    return RowRange(core_ops.bigtable_row_range(row_key, False, \"\", False))\n\n",
                    "rendered": {
                      "text": "    Args:\n      row_key (str): The starting row key of the range (inclusive).\n    Returns:\n      RowRange: The row range which starts at `row_key` (inclusive).\n    \"\"\"\n    return RowRange(core_ops.bigtable_row_range(row_key, False, \"\", False))\n\n",
                      "markdown": "`    Args:\n      row_key (str): The starting row key of the range (inclusive).\n    Returns:\n      RowRange: The row range which starts at `row_key` (inclusive).\n    \"\"\"\n    return RowRange(core_ops.bigtable_row_range(row_key, False, \"\", False))\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_row_range.py"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 33,
                  "endLine": 39,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n\ndef starting_at(row_key: str) -> RowRange:\n    \"\"\"Create a row range staring at given row (inclusive).\n\n    Args:\n      row_key (str): The starting row key of the range (inclusive).\n",
                    "rendered": {
                      "text": "\n\ndef starting_at(row_key: str) -> RowRange:\n    \"\"\"Create a row range staring at given row (inclusive).\n\n    Args:\n      row_key (str): The starting row key of the range (inclusive).\n",
                      "markdown": "`\n\ndef starting_at(row_key: str) -> RowRange:\n    \"\"\"Create a row range staring at given row (inclusive).\n\n    Args:\n      row_key (str): The starting row key of the range (inclusive).\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_row_range.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_dataset_ops.py"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 55,
                  "endLine": 73,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            A `tf.data.Dataset` returning the cell contents.\n        \"\"\"\n\n        # Python initializes the default arguments once at the start of the\n        # program. If the fork happens after that (for instance when we run\n        # tests using xdist) the program deadlocks and hangs. That is why we\n        # have to make sure, all default arguments are initialized on each\n",
                    "rendered": {
                      "text": "            A `tf.data.Dataset` returning the cell contents.\n        \"\"\"\n\n        # Python initializes the default arguments once at the start of the\n        # program. If the fork happens after that (for instance when we run\n        # tests using xdist) the program deadlocks and hangs. That is why we\n        # have to make sure, all default arguments are initialized on each\n",
                      "markdown": "`            A `tf.data.Dataset` returning the cell contents.\n        \"\"\"\n\n        # Python initializes the default arguments once at the start of the\n        # program. If the fork happens after that (for instance when we run\n        # tests using xdist) the program deadlocks and hangs. That is why we\n        # have to make sure, all default arguments are initialized on each\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/bigtable/bigtable_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/pulsar_writer_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/pulsar_writer_ops.py"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 58,
                  "endLine": 28,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        \"\"\"Creates a `PulsarWriter` for writing messages to a pulsar topic\n\n        Args:\n          service_url: A `tf.string` tensor containing the service url of pulsar broker.\n            For example: \"pulsar://localhost:6650\".\n          topic: A `tf.string` tensor containing the topic name.\n        \"\"\"\n",
                    "rendered": {
                      "text": "        \"\"\"Creates a `PulsarWriter` for writing messages to a pulsar topic\n\n        Args:\n          service_url: A `tf.string` tensor containing the service url of pulsar broker.\n            For example: \"pulsar://localhost:6650\".\n          topic: A `tf.string` tensor containing the topic name.\n        \"\"\"\n",
                      "markdown": "`        \"\"\"Creates a `PulsarWriter` for writing messages to a pulsar topic\n\n        Args:\n          service_url: A `tf.string` tensor containing the service url of pulsar broker.\n            For example: \"pulsar://localhost:6650\".\n          topic: A `tf.string` tensor containing the topic name.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/pulsar_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/pulsar_dataset_ops.py"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 37,
                  "endLine": 68,
                  "snippet": {
                    "text": "            if poll_timeout > timeout:\n                raise ValueError(\n                    \"Invalid poll_timeout value: {}, must be <= timeout({})\".format(\n                        poll_timeout, timeout\n                    )\n                )\n\n            resource = core_ops.io_pulsar_readable_init(\n",
                    "rendered": {
                      "text": "            if poll_timeout > timeout:\n                raise ValueError(\n                    \"Invalid poll_timeout value: {}, must be <= timeout({})\".format(\n                        poll_timeout, timeout\n                    )\n                )\n\n            resource = core_ops.io_pulsar_readable_init(\n",
                      "markdown": "`            if poll_timeout > timeout:\n                raise ValueError(\n                    \"Invalid poll_timeout value: {}, must be <= timeout({})\".format(\n                        poll_timeout, timeout\n                    )\n                )\n\n            resource = core_ops.io_pulsar_readable_init(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/pulsar_dataset_ops.py"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 42,
                  "endLine": 57,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        \"\"\"\n        with tf.name_scope(\"PulsarIODataset\"):\n            if timeout <= 0:\n                raise ValueError(f\"Invalid timeout value: {timeout}, must be > 0\")\n\n            if poll_timeout <= 0:\n                raise ValueError(\n",
                    "rendered": {
                      "text": "        \"\"\"\n        with tf.name_scope(\"PulsarIODataset\"):\n            if timeout <= 0:\n                raise ValueError(f\"Invalid timeout value: {timeout}, must be > 0\")\n\n            if poll_timeout <= 0:\n                raise ValueError(\n",
                      "markdown": "`        \"\"\"\n        with tf.name_scope(\"PulsarIODataset\"):\n            if timeout <= 0:\n                raise ValueError(f\"Invalid timeout value: {timeout}, must be > 0\")\n\n            if poll_timeout <= 0:\n                raise ValueError(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/pulsar_dataset_ops.py"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 14,
                  "endLine": 56,
                  "endColumn": 23,
                  "snippet": {
                    "text": "            Default: 100\n        \"\"\"\n        with tf.name_scope(\"PulsarIODataset\"):\n            if timeout <= 0:\n                raise ValueError(f\"Invalid timeout value: {timeout}, must be > 0\")\n\n            if poll_timeout <= 0:\n",
                    "rendered": {
                      "text": "            Default: 100\n        \"\"\"\n        with tf.name_scope(\"PulsarIODataset\"):\n            if timeout <= 0:\n                raise ValueError(f\"Invalid timeout value: {timeout}, must be > 0\")\n\n            if poll_timeout <= 0:\n",
                      "markdown": "`            Default: 100\n        \"\"\"\n        with tf.name_scope(\"PulsarIODataset\"):\n            if timeout <= 0:\n                raise ValueError(f\"Invalid timeout value: {timeout}, must be > 0\")\n\n            if poll_timeout <= 0:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/pulsar_dataset_ops.py"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 63,
                  "endLine": 49,
                  "endColumn": 72,
                  "snippet": {
                    "text": "          timeout: A `tf.int64` tensor containing the timeout in milliseconds. If no messages\n            were received after `timeout` milliseconds, we can treat it as no more messages.\n            `timeout` must be positive.\n          poll_timeout: A `tf.int64` tensor containing the poll timeout in milliseconds. The\n            pulsar consumer would try to receive a single message with the poll timeout, if no\n            message was received, it would try again until `timeout` exceeds.\n            `poll_timeout` must be positive and not larger than `timeout`.\n",
                    "rendered": {
                      "text": "          timeout: A `tf.int64` tensor containing the timeout in milliseconds. If no messages\n            were received after `timeout` milliseconds, we can treat it as no more messages.\n            `timeout` must be positive.\n          poll_timeout: A `tf.int64` tensor containing the poll timeout in milliseconds. The\n            pulsar consumer would try to receive a single message with the poll timeout, if no\n            message was received, it would try again until `timeout` exceeds.\n            `poll_timeout` must be positive and not larger than `timeout`.\n",
                      "markdown": "`          timeout: A `tf.int64` tensor containing the timeout in milliseconds. If no messages\n            were received after `timeout` milliseconds, we can treat it as no more messages.\n            `timeout` must be positive.\n          poll_timeout: A `tf.int64` tensor containing the poll timeout in milliseconds. The\n            pulsar consumer would try to receive a single message with the poll timeout, if no\n            message was received, it would try again until `timeout` exceeds.\n            `poll_timeout` must be positive and not larger than `timeout`.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/pulsar_dataset_ops.py"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 53,
                  "endLine": 46,
                  "endColumn": 62,
                  "snippet": {
                    "text": "            between two acknowledgements in milliseconds.\n            If it's negative, the message would be acknowledged immediately.\n            Default: -1\n          timeout: A `tf.int64` tensor containing the timeout in milliseconds. If no messages\n            were received after `timeout` milliseconds, we can treat it as no more messages.\n            `timeout` must be positive.\n          poll_timeout: A `tf.int64` tensor containing the poll timeout in milliseconds. The\n",
                    "rendered": {
                      "text": "            between two acknowledgements in milliseconds.\n            If it's negative, the message would be acknowledged immediately.\n            Default: -1\n          timeout: A `tf.int64` tensor containing the timeout in milliseconds. If no messages\n            were received after `timeout` milliseconds, we can treat it as no more messages.\n            `timeout` must be positive.\n          poll_timeout: A `tf.int64` tensor containing the poll timeout in milliseconds. The\n",
                      "markdown": "`            between two acknowledgements in milliseconds.\n            If it's negative, the message would be acknowledged immediately.\n            Default: -1\n          timeout: A `tf.int64` tensor containing the timeout in milliseconds. If no messages\n            were received after `timeout` milliseconds, we can treat it as no more messages.\n            `timeout` must be positive.\n          poll_timeout: A `tf.int64` tensor containing the poll timeout in milliseconds. The\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/pulsar_dataset_ops.py"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 38,
                  "endLine": 41,
                  "endColumn": 44,
                  "snippet": {
                    "text": "          topic: A `tf.string` tensor containing the topic name.\n          subscription: A `tf.string` tensor containing the subscription name.\n          ack_grouping_time: A `tf.int64` tensor containing the ack grouping time.\n            If it's non-negative, each time a message was received, the consumer would add it to\n            a batch and acknowledge all pending messages later. `ack_grouping_time` is the interval\n            between two acknowledgements in milliseconds.\n            If it's negative, the message would be acknowledged immediately.\n",
                    "rendered": {
                      "text": "          topic: A `tf.string` tensor containing the topic name.\n          subscription: A `tf.string` tensor containing the subscription name.\n          ack_grouping_time: A `tf.int64` tensor containing the ack grouping time.\n            If it's non-negative, each time a message was received, the consumer would add it to\n            a batch and acknowledge all pending messages later. `ack_grouping_time` is the interval\n            between two acknowledgements in milliseconds.\n            If it's negative, the message would be acknowledged immediately.\n",
                      "markdown": "`          topic: A `tf.string` tensor containing the topic name.\n          subscription: A `tf.string` tensor containing the subscription name.\n          ack_grouping_time: A `tf.int64` tensor containing the ack grouping time.\n            If it's non-negative, each time a message was received, the consumer would add it to\n            a batch and acknowledge all pending messages later. `ack_grouping_time` is the interval\n            between two acknowledgements in milliseconds.\n            If it's negative, the message would be acknowledged immediately.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/pulsar_dataset_ops.py"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 58,
                  "endLine": 36,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        \"\"\"Creates a `PulsarIODataset` from pulsar server with a subscription\n\n        Args:\n          service_url: A `tf.string` tensor containing the service url of pulsar broker.\n            For example: \"pulsar://localhost:6650\".\n          topic: A `tf.string` tensor containing the topic name.\n          subscription: A `tf.string` tensor containing the subscription name.\n",
                    "rendered": {
                      "text": "        \"\"\"Creates a `PulsarIODataset` from pulsar server with a subscription\n\n        Args:\n          service_url: A `tf.string` tensor containing the service url of pulsar broker.\n            For example: \"pulsar://localhost:6650\".\n          topic: A `tf.string` tensor containing the topic name.\n          subscription: A `tf.string` tensor containing the subscription name.\n",
                      "markdown": "`        \"\"\"Creates a `PulsarIODataset` from pulsar server with a subscription\n\n        Args:\n          service_url: A `tf.string` tensor containing the service url of pulsar broker.\n            For example: \"pulsar://localhost:6650\".\n          topic: A `tf.string` tensor containing the topic name.\n          subscription: A `tf.string` tensor containing the subscription name.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/libsvm_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kinesis_dataset_ops.py"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11,
                  "endLine": 44,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n    Since Kinesis is a data streaming service, data may not be available\n    at the time it is being read. The argument `read_indefinitely` is\n    used to control the behavior in this situation. If `read_indefinitely`\n    is `True`, then `KinesisIODataset` will keep retrying to retrieve data\n    from the stream. If `read_indefinitely` is `False`, an `OutOfRangeError`\n    is returned immediately instead.\n",
                    "rendered": {
                      "text": "\n    Since Kinesis is a data streaming service, data may not be available\n    at the time it is being read. The argument `read_indefinitely` is\n    used to control the behavior in this situation. If `read_indefinitely`\n    is `True`, then `KinesisIODataset` will keep retrying to retrieve data\n    from the stream. If `read_indefinitely` is `False`, an `OutOfRangeError`\n    is returned immediately instead.\n",
                      "markdown": "`\n    Since Kinesis is a data streaming service, data may not be available\n    at the time it is being read. The argument `read_indefinitely` is\n    used to control the behavior in this situation. If `read_indefinitely`\n    is `True`, then `KinesisIODataset` will keep retrying to retrieve data\n    from the stream. If `read_indefinitely` is `False`, an `OutOfRangeError`\n    is returned immediately instead.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kinesis_dataset_ops.py"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 3,
                  "endLine": 43,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    ```\n\n    Since Kinesis is a data streaming service, data may not be available\n    at the time it is being read. The argument `read_indefinitely` is\n    used to control the behavior in this situation. If `read_indefinitely`\n    is `True`, then `KinesisIODataset` will keep retrying to retrieve data\n    from the stream. If `read_indefinitely` is `False`, an `OutOfRangeError`\n",
                    "rendered": {
                      "text": "    ```\n\n    Since Kinesis is a data streaming service, data may not be available\n    at the time it is being read. The argument `read_indefinitely` is\n    used to control the behavior in this situation. If `read_indefinitely`\n    is `True`, then `KinesisIODataset` will keep retrying to retrieve data\n    from the stream. If `read_indefinitely` is `False`, an `OutOfRangeError`\n",
                      "markdown": "`    ```\n\n    Since Kinesis is a data streaming service, data may not be available\n    at the time it is being read. The argument `read_indefinitely` is\n    used to control the behavior in this situation. If `read_indefinitely`\n    is `True`, then `KinesisIODataset` will keep retrying to retrieve data\n    from the stream. If `read_indefinitely` is `False`, an `OutOfRangeError`\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kinesis_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kinesis_dataset_ops.py"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 10,
                  "endLine": 43,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    ```\n\n    Since Kinesis is a data streaming service, data may not be available\n    at the time it is being read. The argument `read_indefinitely` is\n    used to control the behavior in this situation. If `read_indefinitely`\n    is `True`, then `KinesisIODataset` will keep retrying to retrieve data\n    from the stream. If `read_indefinitely` is `False`, an `OutOfRangeError`\n",
                    "rendered": {
                      "text": "    ```\n\n    Since Kinesis is a data streaming service, data may not be available\n    at the time it is being read. The argument `read_indefinitely` is\n    used to control the behavior in this situation. If `read_indefinitely`\n    is `True`, then `KinesisIODataset` will keep retrying to retrieve data\n    from the stream. If `read_indefinitely` is `False`, an `OutOfRangeError`\n",
                      "markdown": "`    ```\n\n    Since Kinesis is a data streaming service, data may not be available\n    at the time it is being read. The argument `read_indefinitely` is\n    used to control the behavior in this situation. If `read_indefinitely`\n    is `True`, then `KinesisIODataset` will keep retrying to retrieve data\n    from the stream. If `read_indefinitely` is `False`, an `OutOfRangeError`\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/kinesis_dataset_ops.py"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 24,
                  "endLine": 25,
                  "endColumn": 33,
                  "snippet": {
                    "text": "class KinesisIODataset(tf.data.Dataset):\n    \"\"\"A Kinesis Dataset that consumes the message.\n\n    Kinesis is a managed service provided by AWS for data streaming.\n    This dataset reads messages from Kinesis with each message presented\n    as a `tf.string`.\n\n",
                    "rendered": {
                      "text": "class KinesisIODataset(tf.data.Dataset):\n    \"\"\"A Kinesis Dataset that consumes the message.\n\n    Kinesis is a managed service provided by AWS for data streaming.\n    This dataset reads messages from Kinesis with each message presented\n    as a `tf.string`.\n\n",
                      "markdown": "`class KinesisIODataset(tf.data.Dataset):\n    \"\"\"A Kinesis Dataset that consumes the message.\n\n    Kinesis is a managed service provided by AWS for data streaming.\n    This dataset reads messages from Kinesis with each message presented\n    as a `tf.string`.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/grpc_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/atds/features.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/experimental/text.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/experimental/filter.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/experimental/__init__.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/arrow.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/orc_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/mnist_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/lmdb_io_tensor_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/lmdb_dataset_ops.py"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 29,
                  "endLine": 53,
                  "endColumn": 34,
                  "snippet": {
                    "text": "                container=scope,\n                shared_name=f\"{filename}/{uuid.uuid4().hex}\",\n            )\n            capacity = kwargs.get(\"capacity\", 4096)\n            dataset = tf.compat.v2.data.Dataset.range(0, sys.maxsize, capacity)\n            dataset = dataset.map(\n                lambda index: core_ops.io_lmdb_readable_read(\n",
                    "rendered": {
                      "text": "                container=scope,\n                shared_name=f\"{filename}/{uuid.uuid4().hex}\",\n            )\n            capacity = kwargs.get(\"capacity\", 4096)\n            dataset = tf.compat.v2.data.Dataset.range(0, sys.maxsize, capacity)\n            dataset = dataset.map(\n                lambda index: core_ops.io_lmdb_readable_read(\n",
                      "markdown": "`                container=scope,\n                shared_name=f\"{filename}/{uuid.uuid4().hex}\",\n            )\n            capacity = kwargs.get(\"capacity\", 4096)\n            dataset = tf.compat.v2.data.Dataset.range(0, sys.maxsize, capacity)\n            dataset = dataset.map(\n                lambda index: core_ops.io_lmdb_readable_read(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/lmdb_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/arrow_dataset_ops.py"
                },
                "region": {
                  "startLine": 658,
                  "startColumn": 19,
                  "endLine": 658,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    \"\"\"list_feather_columns\"\"\"\n    if not tf.executing_eagerly():\n        raise NotImplementedError(\"list_feather_columns only support eager mode\")\n    memory = kwargs.get(\"memory\", \"\")\n    columns, dtypes_, shapes = core_ops.io_list_feather_columns(filename, memory=memory)\n    entries = zip(tf.unstack(columns), tf.unstack(dtypes_), tf.unstack(shapes))\n    return {\n",
                    "rendered": {
                      "text": "    \"\"\"list_feather_columns\"\"\"\n    if not tf.executing_eagerly():\n        raise NotImplementedError(\"list_feather_columns only support eager mode\")\n    memory = kwargs.get(\"memory\", \"\")\n    columns, dtypes_, shapes = core_ops.io_list_feather_columns(filename, memory=memory)\n    entries = zip(tf.unstack(columns), tf.unstack(dtypes_), tf.unstack(shapes))\n    return {\n",
                      "markdown": "`    \"\"\"list_feather_columns\"\"\"\n    if not tf.executing_eagerly():\n        raise NotImplementedError(\"list_feather_columns only support eager mode\")\n    memory = kwargs.get(\"memory\", \"\")\n    columns, dtypes_, shapes = core_ops.io_list_feather_columns(filename, memory=memory)\n    entries = zip(tf.unstack(columns), tf.unstack(dtypes_), tf.unstack(shapes))\n    return {\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/arrow_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/archive_ops.py"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 19,
                  "endLine": 32,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    filename, format, entries, **kwargs\n):  # pylint: disable=redefined-builtin\n    \"\"\"read_archive\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    return core_ops.io_read_archive(filename, format, entries, memory=memory)\n",
                    "rendered": {
                      "text": "    filename, format, entries, **kwargs\n):  # pylint: disable=redefined-builtin\n    \"\"\"read_archive\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    return core_ops.io_read_archive(filename, format, entries, memory=memory)\n",
                      "markdown": "`    filename, format, entries, **kwargs\n):  # pylint: disable=redefined-builtin\n    \"\"\"read_archive\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    return core_ops.io_read_archive(filename, format, entries, memory=memory)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/archive_ops.py"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 19,
                  "endLine": 22,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\ndef list_archive_entries(filename, filters, **kwargs):\n    \"\"\"list_archive_entries\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    if not isinstance(filters, list):\n        filters = [filters]\n    return core_ops.io_list_archive_entries(filename, filters=filters, memory=memory)\n",
                    "rendered": {
                      "text": "\ndef list_archive_entries(filename, filters, **kwargs):\n    \"\"\"list_archive_entries\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    if not isinstance(filters, list):\n        filters = [filters]\n    return core_ops.io_list_archive_entries(filename, filters=filters, memory=memory)\n",
                      "markdown": "`\ndef list_archive_entries(filename, filters, **kwargs):\n    \"\"\"list_archive_entries\"\"\"\n    memory = kwargs.get(\"memory\", \"\")\n    if not isinstance(filters, list):\n        filters = [filters]\n    return core_ops.io_list_archive_entries(filename, filters=filters, memory=memory)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/ops/archive_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/openexr_io_tensor_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/numpy_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/image_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/image_dataset_ops.py"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 33,
                  "endLine": 34,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        with tf.name_scope(\"TIFFIODataset\"):\n            content = tf.io.read_file(filename)\n            _, dtype = core_ops.io_decode_tiff_info(content)\n            # use dtype's rank to find out the number of elements\n            dataset = tf.data.Dataset.range(tf.cast(tf.shape(dtype)[0], tf.int64))\n            dataset = dataset.map(lambda index: core_ops.io_decode_tiff(content, index))\n\n",
                    "rendered": {
                      "text": "        with tf.name_scope(\"TIFFIODataset\"):\n            content = tf.io.read_file(filename)\n            _, dtype = core_ops.io_decode_tiff_info(content)\n            # use dtype's rank to find out the number of elements\n            dataset = tf.data.Dataset.range(tf.cast(tf.shape(dtype)[0], tf.int64))\n            dataset = dataset.map(lambda index: core_ops.io_decode_tiff(content, index))\n\n",
                      "markdown": "`        with tf.name_scope(\"TIFFIODataset\"):\n            content = tf.io.read_file(filename)\n            _, dtype = core_ops.io_decode_tiff_info(content)\n            # use dtype's rank to find out the number of elements\n            dataset = tf.data.Dataset.range(tf.cast(tf.shape(dtype)[0], tf.int64))\n            dataset = dataset.map(lambda index: core_ops.io_decode_tiff(content, index))\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/grpc_endpoint.py"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 21,
                  "endLine": 28,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# In case test is done with TFIO_DATAPATH specified, the\n# import path need to be extended to capture generated grpc files:\ngrpcpath = os.path.join(os.path.dirname(__file__), \"..\", \"..\", \"core\", \"grpc\")\ndatapath = os.environ.get(\"TFIO_DATAPATH\")\nif datapath is not None:\n    grpcpath = os.path.join(datapath, \"tensorflow_io\", \"core\", \"grpc\")\nsys.path.append(grpcpath)\n",
                    "rendered": {
                      "text": "# In case test is done with TFIO_DATAPATH specified, the\n# import path need to be extended to capture generated grpc files:\ngrpcpath = os.path.join(os.path.dirname(__file__), \"..\", \"..\", \"core\", \"grpc\")\ndatapath = os.environ.get(\"TFIO_DATAPATH\")\nif datapath is not None:\n    grpcpath = os.path.join(datapath, \"tensorflow_io\", \"core\", \"grpc\")\nsys.path.append(grpcpath)\n",
                      "markdown": "`# In case test is done with TFIO_DATAPATH specified, the\n# import path need to be extended to capture generated grpc files:\ngrpcpath = os.path.join(os.path.dirname(__file__), \"..\", \"..\", \"core\", \"grpc\")\ndatapath = os.environ.get(\"TFIO_DATAPATH\")\nif datapath is not None:\n    grpcpath = os.path.join(datapath, \"tensorflow_io\", \"core\", \"grpc\")\nsys.path.append(grpcpath)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/grpc_endpoint.py"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 14,
                  "endLine": 28,
                  "endColumn": 25,
                  "snippet": {
                    "text": "# In case test is done with TFIO_DATAPATH specified, the\n# import path need to be extended to capture generated grpc files:\ngrpcpath = os.path.join(os.path.dirname(__file__), \"..\", \"..\", \"core\", \"grpc\")\ndatapath = os.environ.get(\"TFIO_DATAPATH\")\nif datapath is not None:\n    grpcpath = os.path.join(datapath, \"tensorflow_io\", \"core\", \"grpc\")\nsys.path.append(grpcpath)\n",
                    "rendered": {
                      "text": "# In case test is done with TFIO_DATAPATH specified, the\n# import path need to be extended to capture generated grpc files:\ngrpcpath = os.path.join(os.path.dirname(__file__), \"..\", \"..\", \"core\", \"grpc\")\ndatapath = os.environ.get(\"TFIO_DATAPATH\")\nif datapath is not None:\n    grpcpath = os.path.join(datapath, \"tensorflow_io\", \"core\", \"grpc\")\nsys.path.append(grpcpath)\n",
                      "markdown": "`# In case test is done with TFIO_DATAPATH specified, the\n# import path need to be extended to capture generated grpc files:\ngrpcpath = os.path.join(os.path.dirname(__file__), \"..\", \"..\", \"core\", \"grpc\")\ndatapath = os.environ.get(\"TFIO_DATAPATH\")\nif datapath is not None:\n    grpcpath = os.path.join(datapath, \"tensorflow_io\", \"core\", \"grpc\")\nsys.path.append(grpcpath)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/grpc_endpoint.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/experimental/file_dataset_ops.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/experimental/mongodb.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/python/api/experimental/columnar.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-tensorflow-io-gcs-filesystem-0.37.1-r0.apk/py3-tensorflow-io-gcs-filesystem-0.37.1-r0/usr/lib/python3.12/site-packages/tensorflow_io/__init__.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}