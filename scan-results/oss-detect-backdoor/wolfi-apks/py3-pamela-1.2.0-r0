{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 563,
                  "startColumn": 34,
                  "endLine": 563,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            password = None\n\n        try:\n            change_password(user, password, o.service)\n        except PAMError as e:\n            sys.exit(e)\n",
                    "rendered": {
                      "text": "            password = None\n\n        try:\n            change_password(user, password, o.service)\n        except PAMError as e:\n            sys.exit(e)\n",
                      "markdown": "`            password = None\n\n        try:\n            change_password(user, password, o.service)\n        except PAMError as e:\n            sys.exit(e)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 563,
                  "startColumn": 19,
                  "endLine": 563,
                  "endColumn": 27,
                  "snippet": {
                    "text": "            password = None\n\n        try:\n            change_password(user, password, o.service)\n        except PAMError as e:\n            sys.exit(e)\n",
                    "rendered": {
                      "text": "            password = None\n\n        try:\n            change_password(user, password, o.service)\n        except PAMError as e:\n            sys.exit(e)\n",
                      "markdown": "`            password = None\n\n        try:\n            change_password(user, password, o.service)\n        except PAMError as e:\n            sys.exit(e)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 560,
                  "startColumn": 12,
                  "endLine": 560,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n\n        try:\n            change_password(user, password, o.service)\n",
                    "rendered": {
                      "text": "        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n\n        try:\n            change_password(user, password, o.service)\n",
                      "markdown": "`        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n\n        try:\n            change_password(user, password, o.service)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 558,
                  "startColumn": 12,
                  "endLine": 558,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n    if o.change_password:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n\n",
                    "rendered": {
                      "text": "\n    if o.change_password:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n\n",
                      "markdown": "`\n    if o.change_password:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 557,
                  "startColumn": 17,
                  "endLine": 557,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            sys.exit(e)\n\n    if o.change_password:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n",
                    "rendered": {
                      "text": "            sys.exit(e)\n\n    if o.change_password:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n",
                      "markdown": "`            sys.exit(e)\n\n    if o.change_password:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 16,
                  "endLine": 556,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        except PAMError as e:\n            sys.exit(e)\n\n    if o.change_password:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n",
                    "rendered": {
                      "text": "        except PAMError as e:\n            sys.exit(e)\n\n    if o.change_password:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n",
                      "markdown": "`        except PAMError as e:\n            sys.exit(e)\n\n    if o.change_password:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 534,
                  "startColumn": 31,
                  "endLine": 534,
                  "endColumn": 39,
                  "snippet": {
                    "text": "            password = None\n\n        try:\n            authenticate(user, password, o.service)\n        except PAMError as e:\n            sys.exit(e)\n\n",
                    "rendered": {
                      "text": "            password = None\n\n        try:\n            authenticate(user, password, o.service)\n        except PAMError as e:\n            sys.exit(e)\n\n",
                      "markdown": "`            password = None\n\n        try:\n            authenticate(user, password, o.service)\n        except PAMError as e:\n            sys.exit(e)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 531,
                  "startColumn": 12,
                  "endLine": 531,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n\n        try:\n            authenticate(user, password, o.service)\n",
                    "rendered": {
                      "text": "        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n\n        try:\n            authenticate(user, password, o.service)\n",
                      "markdown": "`        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n\n        try:\n            authenticate(user, password, o.service)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 529,
                  "startColumn": 12,
                  "endLine": 529,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n    if o.authenticate:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n\n",
                    "rendered": {
                      "text": "\n    if o.authenticate:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n\n",
                      "markdown": "`\n    if o.authenticate:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 528,
                  "startColumn": 17,
                  "endLine": 528,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        user = getpass.getuser()\n\n    if o.authenticate:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n",
                    "rendered": {
                      "text": "        user = getpass.getuser()\n\n    if o.authenticate:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n",
                      "markdown": "`        user = getpass.getuser()\n\n    if o.authenticate:\n        if o.ask_password:\n            password = getpass.getpass()\n        else:\n            password = None\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 518,
                  "startColumn": 20,
                  "endLine": 518,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        or o.open_session\n        or o.close_session\n        or o.validate_account\n        or o.change_password\n    ):\n        parser.error(\"One of -a, -o, -c, -v or -p is mandatory\")\n\n",
                    "rendered": {
                      "text": "        or o.open_session\n        or o.close_session\n        or o.validate_account\n        or o.change_password\n    ):\n        parser.error(\"One of -a, -o, -c, -v or -p is mandatory\")\n\n",
                      "markdown": "`        or o.open_session\n        or o.close_session\n        or o.validate_account\n        or o.change_password\n    ):\n        parser.error(\"One of -a, -o, -c, -v or -p is mandatory\")\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 18,
                  "endLine": 508,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        '--ask-password',\n        dest='ask_password',\n        action='store_true',\n        help=\"own password prompt instead of PAM's\",\n    )\n\n    (o, a) = parser.parse_args()\n",
                    "rendered": {
                      "text": "        '--ask-password',\n        dest='ask_password',\n        action='store_true',\n        help=\"own password prompt instead of PAM's\",\n    )\n\n    (o, a) = parser.parse_args()\n",
                      "markdown": "`        '--ask-password',\n        dest='ask_password',\n        action='store_true',\n        help=\"own password prompt instead of PAM's\",\n    )\n\n    (o, a) = parser.parse_args()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 506,
                  "startColumn": 18,
                  "endLine": 506,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    parser.add_option(\n        '-P',\n        '--ask-password',\n        dest='ask_password',\n        action='store_true',\n        help=\"own password prompt instead of PAM's\",\n    )\n",
                    "rendered": {
                      "text": "    parser.add_option(\n        '-P',\n        '--ask-password',\n        dest='ask_password',\n        action='store_true',\n        help=\"own password prompt instead of PAM's\",\n    )\n",
                      "markdown": "`    parser.add_option(\n        '-P',\n        '--ask-password',\n        dest='ask_password',\n        action='store_true',\n        help=\"own password prompt instead of PAM's\",\n    )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 505,
                  "startColumn": 15,
                  "endLine": 505,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    )\n    parser.add_option(\n        '-P',\n        '--ask-password',\n        dest='ask_password',\n        action='store_true',\n        help=\"own password prompt instead of PAM's\",\n",
                    "rendered": {
                      "text": "    )\n    parser.add_option(\n        '-P',\n        '--ask-password',\n        dest='ask_password',\n        action='store_true',\n        help=\"own password prompt instead of PAM's\",\n",
                      "markdown": "`    )\n    parser.add_option(\n        '-P',\n        '--ask-password',\n        dest='ask_password',\n        action='store_true',\n        help=\"own password prompt instead of PAM's\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 493,
                  "startColumn": 21,
                  "endLine": 493,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        '--change-password',\n        dest='change_password',\n        action='store_true',\n        help='change password',\n    )\n    parser.add_option(\n        '-s',\n",
                    "rendered": {
                      "text": "        '--change-password',\n        dest='change_password',\n        action='store_true',\n        help='change password',\n    )\n    parser.add_option(\n        '-s',\n",
                      "markdown": "`        '--change-password',\n        dest='change_password',\n        action='store_true',\n        help='change password',\n    )\n    parser.add_option(\n        '-s',\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 491,
                  "startColumn": 21,
                  "endLine": 491,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    parser.add_option(\n        '-p',\n        '--change-password',\n        dest='change_password',\n        action='store_true',\n        help='change password',\n    )\n",
                    "rendered": {
                      "text": "    parser.add_option(\n        '-p',\n        '--change-password',\n        dest='change_password',\n        action='store_true',\n        help='change password',\n    )\n",
                      "markdown": "`    parser.add_option(\n        '-p',\n        '--change-password',\n        dest='change_password',\n        action='store_true',\n        help='change password',\n    )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 490,
                  "startColumn": 18,
                  "endLine": 490,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    )\n    parser.add_option(\n        '-p',\n        '--change-password',\n        dest='change_password',\n        action='store_true',\n        help='change password',\n",
                    "rendered": {
                      "text": "    )\n    parser.add_option(\n        '-p',\n        '--change-password',\n        dest='change_password',\n        action='store_true',\n        help='change password',\n",
                      "markdown": "`    )\n    parser.add_option(\n        '-p',\n        '--change-password',\n        dest='change_password',\n        action='store_true',\n        help='change password',\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 450,
                  "startColumn": 56,
                  "endLine": 450,
                  "endColumn": 64,
                  "snippet": {
                    "text": "        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n        conv_func = new_simple_password_conv((password, password), encoding)\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n    return pam_end(handle, PAM_CHAUTHTOK(handle, 0))\n\n",
                    "rendered": {
                      "text": "        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n        conv_func = new_simple_password_conv((password, password), encoding)\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n    return pam_end(handle, PAM_CHAUTHTOK(handle, 0))\n\n",
                      "markdown": "`        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n        conv_func = new_simple_password_conv((password, password), encoding)\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n    return pam_end(handle, PAM_CHAUTHTOK(handle, 0))\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 450,
                  "startColumn": 46,
                  "endLine": 450,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n        conv_func = new_simple_password_conv((password, password), encoding)\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n    return pam_end(handle, PAM_CHAUTHTOK(handle, 0))\n\n",
                    "rendered": {
                      "text": "        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n        conv_func = new_simple_password_conv((password, password), encoding)\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n    return pam_end(handle, PAM_CHAUTHTOK(handle, 0))\n\n",
                      "markdown": "`        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n        conv_func = new_simple_password_conv((password, password), encoding)\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n    return pam_end(handle, PAM_CHAUTHTOK(handle, 0))\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 450,
                  "startColumn": 31,
                  "endLine": 450,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n        conv_func = new_simple_password_conv((password, password), encoding)\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n    return pam_end(handle, PAM_CHAUTHTOK(handle, 0))\n\n",
                    "rendered": {
                      "text": "        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n        conv_func = new_simple_password_conv((password, password), encoding)\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n    return pam_end(handle, PAM_CHAUTHTOK(handle, 0))\n\n",
                      "markdown": "`        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n        conv_func = new_simple_password_conv((password, password), encoding)\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n    return pam_end(handle, PAM_CHAUTHTOK(handle, 0))\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 448,
                  "startColumn": 19,
                  "endLine": 448,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    else:\n        # Password x2 to answer the \"Retype new UNIX password:\" prompt\n        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n        conv_func = new_simple_password_conv((password, password), encoding)\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n",
                    "rendered": {
                      "text": "    else:\n        # Password x2 to answer the \"Retype new UNIX password:\" prompt\n        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n        conv_func = new_simple_password_conv((password, password), encoding)\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n",
                      "markdown": "`    else:\n        # Password x2 to answer the \"Retype new UNIX password:\" prompt\n        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n        conv_func = new_simple_password_conv((password, password), encoding)\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 446,
                  "startColumn": 53,
                  "endLine": 446,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    if password is None:\n        conv_func = default_conv\n    else:\n        # Password x2 to answer the \"Retype new UNIX password:\" prompt\n        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n",
                    "rendered": {
                      "text": "    if password is None:\n        conv_func = default_conv\n    else:\n        # Password x2 to answer the \"Retype new UNIX password:\" prompt\n        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n",
                      "markdown": "`    if password is None:\n        conv_func = default_conv\n    else:\n        # Password x2 to answer the \"Retype new UNIX password:\" prompt\n        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 446,
                  "startColumn": 10,
                  "endLine": 446,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    if password is None:\n        conv_func = default_conv\n    else:\n        # Password x2 to answer the \"Retype new UNIX password:\" prompt\n        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n",
                    "rendered": {
                      "text": "    if password is None:\n        conv_func = default_conv\n    else:\n        # Password x2 to answer the \"Retype new UNIX password:\" prompt\n        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n",
                      "markdown": "`    if password is None:\n        conv_func = default_conv\n    else:\n        # Password x2 to answer the \"Retype new UNIX password:\" prompt\n        # TODO: If we're not running as root the first prompt will be\n        # 'current password' which we will not answer, so this will not work\n        # in that case.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 443,
                  "startColumn": 7,
                  "endLine": 443,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n\ndef change_password(username, password=None, service='login', encoding='utf-8'):\n    if password is None:\n        conv_func = default_conv\n    else:\n        # Password x2 to answer the \"Retype new UNIX password:\" prompt\n",
                    "rendered": {
                      "text": "\n\ndef change_password(username, password=None, service='login', encoding='utf-8'):\n    if password is None:\n        conv_func = default_conv\n    else:\n        # Password x2 to answer the \"Retype new UNIX password:\" prompt\n",
                      "markdown": "`\n\ndef change_password(username, password=None, service='login', encoding='utf-8'):\n    if password is None:\n        conv_func = default_conv\n    else:\n        # Password x2 to answer the \"Retype new UNIX password:\" prompt\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 30,
                  "endLine": 442,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    return pam_end(handle, PAM_ACCT_MGMT(handle, 0))\n\n\ndef change_password(username, password=None, service='login', encoding='utf-8'):\n    if password is None:\n        conv_func = default_conv\n    else:\n",
                    "rendered": {
                      "text": "    return pam_end(handle, PAM_ACCT_MGMT(handle, 0))\n\n\ndef change_password(username, password=None, service='login', encoding='utf-8'):\n    if password is None:\n        conv_func = default_conv\n    else:\n",
                      "markdown": "`    return pam_end(handle, PAM_ACCT_MGMT(handle, 0))\n\n\ndef change_password(username, password=None, service='login', encoding='utf-8'):\n    if password is None:\n        conv_func = default_conv\n    else:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 11,
                  "endLine": 442,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    return pam_end(handle, PAM_ACCT_MGMT(handle, 0))\n\n\ndef change_password(username, password=None, service='login', encoding='utf-8'):\n    if password is None:\n        conv_func = default_conv\n    else:\n",
                    "rendered": {
                      "text": "    return pam_end(handle, PAM_ACCT_MGMT(handle, 0))\n\n\ndef change_password(username, password=None, service='login', encoding='utf-8'):\n    if password is None:\n        conv_func = default_conv\n    else:\n",
                      "markdown": "`    return pam_end(handle, PAM_ACCT_MGMT(handle, 0))\n\n\ndef change_password(username, password=None, service='login', encoding='utf-8'):\n    if password is None:\n        conv_func = default_conv\n    else:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 405,
                  "startColumn": 45,
                  "endLine": 405,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n\n",
                    "rendered": {
                      "text": "    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n\n",
                      "markdown": "`    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 405,
                  "startColumn": 31,
                  "endLine": 405,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n\n",
                    "rendered": {
                      "text": "    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n\n",
                      "markdown": "`    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 24,
                  "endLine": 404,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        conv_func = default_conv\n    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n",
                    "rendered": {
                      "text": "        conv_func = default_conv\n    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n",
                      "markdown": "`        conv_func = default_conv\n    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 12,
                  "endLine": 404,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        conv_func = default_conv\n    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n",
                    "rendered": {
                      "text": "        conv_func = default_conv\n    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n",
                      "markdown": "`        conv_func = default_conv\n    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n    handle = pam_start(service, username, conv_func=conv_func, encoding=encoding)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 403,
                  "startColumn": 22,
                  "endLine": 403,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    if password is None:\n        conv_func = default_conv\n    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n",
                    "rendered": {
                      "text": "    if password is None:\n        conv_func = default_conv\n    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n",
                      "markdown": "`    if password is None:\n        conv_func = default_conv\n    else:\n        if isinstance(password, str):\n            password = (password,)\n        conv_func = new_simple_password_conv(password, encoding)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 7,
                  "endLine": 400,
                  "endColumn": 15,
                  "snippet": {
                    "text": "                   will be returned.\n    \"\"\"\n\n    if password is None:\n        conv_func = default_conv\n    else:\n        if isinstance(password, str):\n",
                    "rendered": {
                      "text": "                   will be returned.\n    \"\"\"\n\n    if password is None:\n        conv_func = default_conv\n    else:\n        if isinstance(password, str):\n",
                      "markdown": "`                   will be returned.\n    \"\"\"\n\n    if password is None:\n        conv_func = default_conv\n    else:\n        if isinstance(password, str):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 18,
                  "endLine": 376,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    ``username``: the username to authenticate\n\n    ``password``: the password in plain text. It can also be an iterable of\n                  passwords when using multifactor authentication.\n                  Defaults to None to use PAM's conversation interface\n\n    ``service``: the PAM service to authenticate against.\n",
                    "rendered": {
                      "text": "    ``username``: the username to authenticate\n\n    ``password``: the password in plain text. It can also be an iterable of\n                  passwords when using multifactor authentication.\n                  Defaults to None to use PAM's conversation interface\n\n    ``service``: the PAM service to authenticate against.\n",
                      "markdown": "`    ``username``: the username to authenticate\n\n    ``password``: the password in plain text. It can also be an iterable of\n                  passwords when using multifactor authentication.\n                  Defaults to None to use PAM's conversation interface\n\n    ``service``: the PAM service to authenticate against.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 375,
                  "startColumn": 22,
                  "endLine": 375,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n    ``username``: the username to authenticate\n\n    ``password``: the password in plain text. It can also be an iterable of\n                  passwords when using multifactor authentication.\n                  Defaults to None to use PAM's conversation interface\n\n",
                    "rendered": {
                      "text": "\n    ``username``: the username to authenticate\n\n    ``password``: the password in plain text. It can also be an iterable of\n                  passwords when using multifactor authentication.\n                  Defaults to None to use PAM's conversation interface\n\n",
                      "markdown": "`\n    ``username``: the username to authenticate\n\n    ``password``: the password in plain text. It can also be an iterable of\n                  passwords when using multifactor authentication.\n                  Defaults to None to use PAM's conversation interface\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 375,
                  "startColumn": 6,
                  "endLine": 375,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n    ``username``: the username to authenticate\n\n    ``password``: the password in plain text. It can also be an iterable of\n                  passwords when using multifactor authentication.\n                  Defaults to None to use PAM's conversation interface\n\n",
                    "rendered": {
                      "text": "\n    ``username``: the username to authenticate\n\n    ``password``: the password in plain text. It can also be an iterable of\n                  passwords when using multifactor authentication.\n                  Defaults to None to use PAM's conversation interface\n\n",
                      "markdown": "`\n    ``username``: the username to authenticate\n\n    ``password``: the password in plain text. It can also be an iterable of\n                  passwords when using multifactor authentication.\n                  Defaults to None to use PAM's conversation interface\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 46,
                  "endLine": 370,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    close=True,\n    check=True,\n):\n    \"\"\"Returns None if the given username and password authenticate for the\n    given service.  Raises PAMError otherwise\n\n    ``username``: the username to authenticate\n",
                    "rendered": {
                      "text": "    close=True,\n    check=True,\n):\n    \"\"\"Returns None if the given username and password authenticate for the\n    given service.  Raises PAMError otherwise\n\n    ``username``: the username to authenticate\n",
                      "markdown": "`    close=True,\n    check=True,\n):\n    \"\"\"Returns None if the given username and password authenticate for the\n    given service.  Raises PAMError otherwise\n\n    ``username``: the username to authenticate\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 363,
                  "startColumn": 4,
                  "endLine": 363,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\ndef authenticate(\n    username,\n    password=None,\n    service='login',\n    encoding='utf-8',\n    resetcred=PAM_REINITIALIZE_CRED,\n",
                    "rendered": {
                      "text": "\ndef authenticate(\n    username,\n    password=None,\n    service='login',\n    encoding='utf-8',\n    resetcred=PAM_REINITIALIZE_CRED,\n",
                      "markdown": "`\ndef authenticate(\n    username,\n    password=None,\n    service='login',\n    encoding='utf-8',\n    resetcred=PAM_REINITIALIZE_CRED,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 33,
                  "endLine": 329,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            if messages[i].contents.msg_style == PAM_PROMPT_ECHO_OFF:\n                if not passwords:\n                    return 1\n                pw_copy = STRDUP(passwords.pop())\n                p_response.contents[i].resp = pw_copy\n                p_response.contents[i].resp_retcode = 0\n        return 0\n",
                    "rendered": {
                      "text": "            if messages[i].contents.msg_style == PAM_PROMPT_ECHO_OFF:\n                if not passwords:\n                    return 1\n                pw_copy = STRDUP(passwords.pop())\n                p_response.contents[i].resp = pw_copy\n                p_response.contents[i].resp_retcode = 0\n        return 0\n",
                      "markdown": "`            if messages[i].contents.msg_style == PAM_PROMPT_ECHO_OFF:\n                if not passwords:\n                    return 1\n                pw_copy = STRDUP(passwords.pop())\n                p_response.contents[i].resp = pw_copy\n                p_response.contents[i].resp_retcode = 0\n        return 0\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 23,
                  "endLine": 327,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        p_response[0] = cast(addr, POINTER(PamResponse))\n        for i in range(n_messages):\n            if messages[i].contents.msg_style == PAM_PROMPT_ECHO_OFF:\n                if not passwords:\n                    return 1\n                pw_copy = STRDUP(passwords.pop())\n                p_response.contents[i].resp = pw_copy\n",
                    "rendered": {
                      "text": "        p_response[0] = cast(addr, POINTER(PamResponse))\n        for i in range(n_messages):\n            if messages[i].contents.msg_style == PAM_PROMPT_ECHO_OFF:\n                if not passwords:\n                    return 1\n                pw_copy = STRDUP(passwords.pop())\n                p_response.contents[i].resp = pw_copy\n",
                      "markdown": "`        p_response[0] = cast(addr, POINTER(PamResponse))\n        for i in range(n_messages):\n            if messages[i].contents.msg_style == PAM_PROMPT_ECHO_OFF:\n                if not passwords:\n                    return 1\n                pw_copy = STRDUP(passwords.pop())\n                p_response.contents[i].resp = pw_copy\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 55,
                  "endLine": 321,
                  "endColumn": 63,
                  "snippet": {
                    "text": "    @CONV_FUNC\n    def conv_func(n_messages, messages, p_response, app_data):\n        \"\"\"Simple conversation function that responds to any\n        prompt where the echo is off with the supplied password\"\"\"\n        # Create an array of n_messages response objects\n        addr = CALLOC(n_messages, sizeof(PamResponse))\n        p_response[0] = cast(addr, POINTER(PamResponse))\n",
                    "rendered": {
                      "text": "    @CONV_FUNC\n    def conv_func(n_messages, messages, p_response, app_data):\n        \"\"\"Simple conversation function that responds to any\n        prompt where the echo is off with the supplied password\"\"\"\n        # Create an array of n_messages response objects\n        addr = CALLOC(n_messages, sizeof(PamResponse))\n        p_response[0] = cast(addr, POINTER(PamResponse))\n",
                      "markdown": "`    @CONV_FUNC\n    def conv_func(n_messages, messages, p_response, app_data):\n        \"\"\"Simple conversation function that responds to any\n        prompt where the echo is off with the supplied password\"\"\"\n        # Create an array of n_messages response objects\n        addr = CALLOC(n_messages, sizeof(PamResponse))\n        p_response[0] = cast(addr, POINTER(PamResponse))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 4,
                  "endLine": 316,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n    def conv_func(n_messages, messages, p_response, app_data):\n",
                    "rendered": {
                      "text": "\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n    def conv_func(n_messages, messages, p_response, app_data):\n",
                      "markdown": "`\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n    def conv_func(n_messages, messages, p_response, app_data):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 65,
                  "endLine": 315,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n",
                    "rendered": {
                      "text": "\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n",
                      "markdown": "`\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 53,
                  "endLine": 315,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n",
                    "rendered": {
                      "text": "\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n",
                      "markdown": "`\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 29,
                  "endLine": 315,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n",
                    "rendered": {
                      "text": "\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n",
                      "markdown": "`\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 4,
                  "endLine": 315,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n",
                    "rendered": {
                      "text": "\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n",
                      "markdown": "`\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n    @CONV_FUNC\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 29,
                  "endLine": 314,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    return 0\n\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n",
                    "rendered": {
                      "text": "    return 0\n\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n",
                      "markdown": "`    return 0\n\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 15,
                  "endLine": 314,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    return 0\n\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n",
                    "rendered": {
                      "text": "    return 0\n\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n",
                      "markdown": "`    return 0\n\n\ndef new_simple_password_conv(passwords, encoding):\n    passwords = [_cast_bytes(password, encoding) for password in passwords]\n    passwords.reverse()\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 12,
                  "endLine": 23,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    'open_session',\n    'close_session',\n    'check_account',\n    'change_password',\n]\n\nimport getpass\n",
                    "rendered": {
                      "text": "    'open_session',\n    'close_session',\n    'check_account',\n    'change_password',\n]\n\nimport getpass\n",
                      "markdown": "`    'open_session',\n    'close_session',\n    'check_account',\n    'change_password',\n]\n\nimport getpass\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 501,
                  "startColumn": 17,
                  "endLine": 501,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        dest='service',\n        action='store',\n        default='login',\n        help='PAM service to use [default: %default]',\n    )\n    parser.add_option(\n        '-P',\n",
                    "rendered": {
                      "text": "        dest='service',\n        action='store',\n        default='login',\n        help='PAM service to use [default: %default]',\n    )\n    parser.add_option(\n        '-P',\n",
                      "markdown": "`        dest='service',\n        action='store',\n        default='login',\n        help='PAM service to use [default: %default]',\n    )\n    parser.add_option(\n        '-P',\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 24,
                  "endLine": 379,
                  "endColumn": 33,
                  "snippet": {
                    "text": "                  passwords when using multifactor authentication.\n                  Defaults to None to use PAM's conversation interface\n\n    ``service``: the PAM service to authenticate against.\n                 Defaults to 'login'\n\n    The above parameters can be strings or bytes.  If they are strings,\n",
                    "rendered": {
                      "text": "                  passwords when using multifactor authentication.\n                  Defaults to None to use PAM's conversation interface\n\n    ``service``: the PAM service to authenticate against.\n                 Defaults to 'login'\n\n    The above parameters can be strings or bytes.  If they are strings,\n",
                      "markdown": "`                  passwords when using multifactor authentication.\n                  Defaults to None to use PAM's conversation interface\n\n    ``service``: the PAM service to authenticate against.\n                 Defaults to 'login'\n\n    The above parameters can be strings or bytes.  If they are strings,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 3,
                  "endLine": 338,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n\ndef pam_start(service, username, conv_func=default_conv, encoding='utf8'):\n    service = _cast_bytes(service, encoding)\n    username = _cast_bytes(username, encoding)\n\n    handle = PamHandle()\n",
                    "rendered": {
                      "text": "\n\ndef pam_start(service, username, conv_func=default_conv, encoding='utf8'):\n    service = _cast_bytes(service, encoding)\n    username = _cast_bytes(username, encoding)\n\n    handle = PamHandle()\n",
                      "markdown": "`\n\ndef pam_start(service, username, conv_func=default_conv, encoding='utf8'):\n    service = _cast_bytes(service, encoding)\n    username = _cast_bytes(username, encoding)\n\n    handle = PamHandle()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 7,
                  "endLine": 268,
                  "endColumn": 31,
                  "snippet": {
                    "text": "PAM_GETENV.restype = c_char_p\nPAM_GETENV.argtypes = [PamHandle, c_char_p]\n\nPAM_GETENVLIST = LIBPAM.pam_getenvlist\nPAM_GETENVLIST.restype = POINTER(c_char_p)\nPAM_GETENVLIST.argtypes = [PamHandle]\n\n",
                    "rendered": {
                      "text": "PAM_GETENV.restype = c_char_p\nPAM_GETENV.argtypes = [PamHandle, c_char_p]\n\nPAM_GETENVLIST = LIBPAM.pam_getenvlist\nPAM_GETENVLIST.restype = POINTER(c_char_p)\nPAM_GETENVLIST.argtypes = [PamHandle]\n\n",
                      "markdown": "`PAM_GETENV.restype = c_char_p\nPAM_GETENV.argtypes = [PamHandle, c_char_p]\n\nPAM_GETENVLIST = LIBPAM.pam_getenvlist\nPAM_GETENVLIST.restype = POINTER(c_char_p)\nPAM_GETENVLIST.argtypes = [PamHandle]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 7,
                  "endLine": 264,
                  "endColumn": 27,
                  "snippet": {
                    "text": "PAM_SETCRED.restype = c_int\nPAM_SETCRED.argtypes = [PamHandle, c_int]\n\nPAM_GETENV = LIBPAM.pam_getenv\nPAM_GETENV.restype = c_char_p\nPAM_GETENV.argtypes = [PamHandle, c_char_p]\n\n",
                    "rendered": {
                      "text": "PAM_SETCRED.restype = c_int\nPAM_SETCRED.argtypes = [PamHandle, c_int]\n\nPAM_GETENV = LIBPAM.pam_getenv\nPAM_GETENV.restype = c_char_p\nPAM_GETENV.argtypes = [PamHandle, c_char_p]\n\n",
                      "markdown": "`PAM_SETCRED.restype = c_int\nPAM_SETCRED.argtypes = [PamHandle, c_int]\n\nPAM_GETENV = LIBPAM.pam_getenv\nPAM_GETENV.restype = c_char_p\nPAM_GETENV.argtypes = [PamHandle, c_char_p]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 12,
                  "endLine": 139,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n    def get_envlist(self, encoding='utf-8'):\n        ret = PAM_GETENVLIST(self)\n        if ret is None:\n            raise PAMError()\n",
                    "rendered": {
                      "text": "        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n    def get_envlist(self, encoding='utf-8'):\n        ret = PAM_GETENVLIST(self)\n        if ret is None:\n            raise PAMError()\n",
                      "markdown": "`        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n    def get_envlist(self, encoding='utf-8'):\n        ret = PAM_GETENVLIST(self)\n        if ret is None:\n            raise PAMError()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 24,
                  "endLine": 135,
                  "endColumn": 46,
                  "snippet": {
                    "text": "            raise PAMError(errno=retval)\n\n    def del_env(self, k, encoding='utf-8'):\n        retval = PAM_PUTENV(self, k.encode(encoding))\n        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n",
                    "rendered": {
                      "text": "            raise PAMError(errno=retval)\n\n    def del_env(self, k, encoding='utf-8'):\n        retval = PAM_PUTENV(self, k.encode(encoding))\n        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n",
                      "markdown": "`            raise PAMError(errno=retval)\n\n    def del_env(self, k, encoding='utf-8'):\n        retval = PAM_PUTENV(self, k.encode(encoding))\n        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 12,
                  "endLine": 134,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n    def del_env(self, k, encoding='utf-8'):\n        retval = PAM_PUTENV(self, k.encode(encoding))\n        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n",
                    "rendered": {
                      "text": "        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n    def del_env(self, k, encoding='utf-8'):\n        retval = PAM_PUTENV(self, k.encode(encoding))\n        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n",
                      "markdown": "`        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n    def del_env(self, k, encoding='utf-8'):\n        retval = PAM_PUTENV(self, k.encode(encoding))\n        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 24,
                  "endLine": 130,
                  "endColumn": 57,
                  "snippet": {
                    "text": "            return ret.decode(encoding)\n\n    def put_env(self, k, v, encoding='utf-8'):\n        retval = PAM_PUTENV(self, (f'{k}={v}').encode(encoding))\n        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n",
                    "rendered": {
                      "text": "            return ret.decode(encoding)\n\n    def put_env(self, k, v, encoding='utf-8'):\n        retval = PAM_PUTENV(self, (f'{k}={v}').encode(encoding))\n        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n",
                      "markdown": "`            return ret.decode(encoding)\n\n    def put_env(self, k, v, encoding='utf-8'):\n        retval = PAM_PUTENV(self, (f'{k}={v}').encode(encoding))\n        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 12,
                  "endLine": 129,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        else:\n            return ret.decode(encoding)\n\n    def put_env(self, k, v, encoding='utf-8'):\n        retval = PAM_PUTENV(self, (f'{k}={v}').encode(encoding))\n        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n",
                    "rendered": {
                      "text": "        else:\n            return ret.decode(encoding)\n\n    def put_env(self, k, v, encoding='utf-8'):\n        retval = PAM_PUTENV(self, (f'{k}={v}').encode(encoding))\n        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n",
                      "markdown": "`        else:\n            return ret.decode(encoding)\n\n    def put_env(self, k, v, encoding='utf-8'):\n        retval = PAM_PUTENV(self, (f'{k}={v}').encode(encoding))\n        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 21,
                  "endLine": 123,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            raise PAMError(errno=retval)\n\n    def get_env(self, var, encoding='utf-8'):\n        ret = PAM_GETENV(self, var.encode(encoding))\n        if ret is None:\n            raise PAMError()\n        else:\n",
                    "rendered": {
                      "text": "            raise PAMError(errno=retval)\n\n    def get_env(self, var, encoding='utf-8'):\n        ret = PAM_GETENV(self, var.encode(encoding))\n        if ret is None:\n            raise PAMError()\n        else:\n",
                      "markdown": "`            raise PAMError(errno=retval)\n\n    def get_env(self, var, encoding='utf-8'):\n        ret = PAM_GETENV(self, var.encode(encoding))\n        if ret is None:\n            raise PAMError()\n        else:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela.py"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 12,
                  "endLine": 122,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n    def get_env(self, var, encoding='utf-8'):\n        ret = PAM_GETENV(self, var.encode(encoding))\n        if ret is None:\n            raise PAMError()\n",
                    "rendered": {
                      "text": "        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n    def get_env(self, var, encoding='utf-8'):\n        ret = PAM_GETENV(self, var.encode(encoding))\n        if ret is None:\n            raise PAMError()\n",
                      "markdown": "`        if retval != PAM_SUCCESS:\n            raise PAMError(errno=retval)\n\n    def get_env(self, var, encoding='utf-8'):\n        ret = PAM_GETENV(self, var.encode(encoding))\n        if ret is None:\n            raise PAMError()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000703"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Username)",
            "id": "BD000703"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela-1.2.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 25,
                  "endLine": 45,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\nTest:\n\n    python -m pamela -a `whoami`\n",
                    "rendered": {
                      "text": "\nTest:\n\n    python -m pamela -a `whoami`\n",
                      "markdown": "`\nTest:\n\n    python -m pamela -a `whoami`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela-1.2.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 84,
                  "endLine": 35,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\n## Why?\n\nBoth projects appear to be abandoned, with no response to issues or pull requests in at least a year, and I need it for [JupyterHub](https://github.com/jupyter/jupyterhub).\n\n## Use it\n\n",
                    "rendered": {
                      "text": "\n## Why?\n\nBoth projects appear to be abandoned, with no response to issues or pull requests in at least a year, and I need it for [JupyterHub](https://github.com/jupyter/jupyterhub).\n\n## Use it\n\n",
                      "markdown": "`\n## Why?\n\nBoth projects appear to be abandoned, with no response to issues or pull requests in at least a year, and I need it for [JupyterHub](https://github.com/jupyter/jupyterhub).\n\n## Use it\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pamela-1.2.0-r0.apk/py3-pamela-1.2.0-r0/usr/lib/python3.12/site-packages/pamela-1.2.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 3,
                  "endLine": 41,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nInstall:\n\n    pip install pamela\n\nTest:\n\n",
                    "rendered": {
                      "text": "\nInstall:\n\n    pip install pamela\n\nTest:\n\n",
                      "markdown": "`\nInstall:\n\n    pip install pamela\n\nTest:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}