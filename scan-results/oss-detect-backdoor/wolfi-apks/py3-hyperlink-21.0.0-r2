{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink-21.0.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 12,
                  "endLine": 37,
                  "endColumn": 16,
                  "snippet": {
                    "text": "Hyperlink is a featureful, pure-Python implementation of the URL, with\nan emphasis on correctness. MIT licensed.\n\nSee the docs at http://hyperlink.readthedocs.io.\n",
                    "rendered": {
                      "text": "Hyperlink is a featureful, pure-Python implementation of the URL, with\nan emphasis on correctness. MIT licensed.\n\nSee the docs at http://hyperlink.readthedocs.io.\n",
                      "markdown": "`Hyperlink is a featureful, pure-Python implementation of the URL, with\nan emphasis on correctness. MIT licensed.\n\nSee the docs at http://hyperlink.readthedocs.io.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 40,
                  "endLine": 440,
                  "endColumn": 82,
                  "snippet": {
                    "text": "        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"cb7004c0a9e39043976c3078de8016bb62f6551e\"\n      }\n    }\n  ],\n",
                    "rendered": {
                      "text": "        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"cb7004c0a9e39043976c3078de8016bb62f6551e\"\n      }\n    }\n  ],\n",
                      "markdown": "`        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"cb7004c0a9e39043976c3078de8016bb62f6551e\"\n      }\n    }\n  ],\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 395,
                  "startColumn": 27,
                  "endLine": 395,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e0d52dd814b2c36112bddf97f01e233c82f5f1a53947de6f285b921b6d511357d97831532da32c7a09a30f31f9eefe41acdb2ede8b016e92349c20c6fbc12088\"\n        }\n      ]\n    }\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e0d52dd814b2c36112bddf97f01e233c82f5f1a53947de6f285b921b6d511357d97831532da32c7a09a30f31f9eefe41acdb2ede8b016e92349c20c6fbc12088\"\n        }\n      ]\n    }\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e0d52dd814b2c36112bddf97f01e233c82f5f1a53947de6f285b921b6d511357d97831532da32c7a09a30f31f9eefe41acdb2ede8b016e92349c20c6fbc12088\"\n        }\n      ]\n    }\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 391,
                  "startColumn": 27,
                  "endLine": 391,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"22cdf6bcecbae58fb10f3171c8daf4a1246212a44010c90e2123a06c5c7f6862\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"22cdf6bcecbae58fb10f3171c8daf4a1246212a44010c90e2123a06c5c7f6862\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"22cdf6bcecbae58fb10f3171c8daf4a1246212a44010c90e2123a06c5c7f6862\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 387,
                  "startColumn": 27,
                  "endLine": 387,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"76abaf95dc77eeebf5badbb5e0d5a9e91b9ffc6f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"76abaf95dc77eeebf5badbb5e0d5a9e91b9ffc6f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"76abaf95dc77eeebf5badbb5e0d5a9e91b9ffc6f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 27,
                  "endLine": 376,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"11448247d53199ca3f04bbce29fa9b0159a005e3db5a8bbc180573957fadee58fad095e351b33b6449bd5528101a2a7df950dc19d117ea0329521ea46cc22eb0\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"11448247d53199ca3f04bbce29fa9b0159a005e3db5a8bbc180573957fadee58fad095e351b33b6449bd5528101a2a7df950dc19d117ea0329521ea46cc22eb0\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"11448247d53199ca3f04bbce29fa9b0159a005e3db5a8bbc180573957fadee58fad095e351b33b6449bd5528101a2a7df950dc19d117ea0329521ea46cc22eb0\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 27,
                  "endLine": 372,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"fd7970daf1c06391cc9025051c72507fb3d933982d189989a07095674368e67c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"fd7970daf1c06391cc9025051c72507fb3d933982d189989a07095674368e67c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"fd7970daf1c06391cc9025051c72507fb3d933982d189989a07095674368e67c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 27,
                  "endLine": 368,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"1bfad4e94ed70ae99ec48f6f0684b71b33645d2f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"1bfad4e94ed70ae99ec48f6f0684b71b33645d2f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"1bfad4e94ed70ae99ec48f6f0684b71b33645d2f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 27,
                  "endLine": 357,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"725fbf055b04258c9e0e3a0df56a5f09c83b49d4ccf89a1f6b8041abc7ed7e7520d2f8faa5bede769219d425e31fa9f5f2b02bf5f81ccbd6a28f22a61a429d85\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"725fbf055b04258c9e0e3a0df56a5f09c83b49d4ccf89a1f6b8041abc7ed7e7520d2f8faa5bede769219d425e31fa9f5f2b02bf5f81ccbd6a28f22a61a429d85\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"725fbf055b04258c9e0e3a0df56a5f09c83b49d4ccf89a1f6b8041abc7ed7e7520d2f8faa5bede769219d425e31fa9f5f2b02bf5f81ccbd6a28f22a61a429d85\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 27,
                  "endLine": 353,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"8c5bf9c4186384956ee356463baa73a7c42f44cd5d2592bf6b526ccd63072081\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"8c5bf9c4186384956ee356463baa73a7c42f44cd5d2592bf6b526ccd63072081\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"8c5bf9c4186384956ee356463baa73a7c42f44cd5d2592bf6b526ccd63072081\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 27,
                  "endLine": 349,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8263b1e320c16cf1f4d14f27a488a7372620bf78\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8263b1e320c16cf1f4d14f27a488a7372620bf78\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"8263b1e320c16cf1f4d14f27a488a7372620bf78\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 27,
                  "endLine": 338,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0afdb1dd9da986e84e538bd269790e11df25e8fef77099bb393b13ea87bbe42b264ea6a9495aef351786812560e2baad2c0a159e9f0f983db5c0a33e55e0d48b\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0afdb1dd9da986e84e538bd269790e11df25e8fef77099bb393b13ea87bbe42b264ea6a9495aef351786812560e2baad2c0a159e9f0f983db5c0a33e55e0d48b\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0afdb1dd9da986e84e538bd269790e11df25e8fef77099bb393b13ea87bbe42b264ea6a9495aef351786812560e2baad2c0a159e9f0f983db5c0a33e55e0d48b\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 27,
                  "endLine": 334,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7a68b3c179754dccc3f221ccc88daa2ed6ef4bdf5c7a9f2ab5484d6ee8066bf3\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7a68b3c179754dccc3f221ccc88daa2ed6ef4bdf5c7a9f2ab5484d6ee8066bf3\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7a68b3c179754dccc3f221ccc88daa2ed6ef4bdf5c7a9f2ab5484d6ee8066bf3\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 27,
                  "endLine": 330,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"083866775f95ccb0200353a15fa980c0caf26718\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"083866775f95ccb0200353a15fa980c0caf26718\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"083866775f95ccb0200353a15fa980c0caf26718\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 27,
                  "endLine": 319,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"31a49ea06251c2336729e4a6e989882b511625e2990a233d58c0cca4355a2b18998b5e137bb9552f5b43cffd9f01b716d05c029653e155479487bb5de869636b\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"31a49ea06251c2336729e4a6e989882b511625e2990a233d58c0cca4355a2b18998b5e137bb9552f5b43cffd9f01b716d05c029653e155479487bb5de869636b\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"31a49ea06251c2336729e4a6e989882b511625e2990a233d58c0cca4355a2b18998b5e137bb9552f5b43cffd9f01b716d05c029653e155479487bb5de869636b\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 27,
                  "endLine": 315,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"2efaa5714d1f210c4b84cca07599eb42db5cef5460077f5ffa449684120b4f4b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"2efaa5714d1f210c4b84cca07599eb42db5cef5460077f5ffa449684120b4f4b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"2efaa5714d1f210c4b84cca07599eb42db5cef5460077f5ffa449684120b4f4b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 27,
                  "endLine": 311,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c67cbe50945411dcd743decfaf5d348d2db20ae4\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c67cbe50945411dcd743decfaf5d348d2db20ae4\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c67cbe50945411dcd743decfaf5d348d2db20ae4\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 27,
                  "endLine": 300,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"113d69865881959c57a1e96ba588946ab214527248f8cdcd106006b2f74d670e6d928c2ed60e30d85d8c9ef5d32d44671f6bcbdc2d2db74615c192da293204a3\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"113d69865881959c57a1e96ba588946ab214527248f8cdcd106006b2f74d670e6d928c2ed60e30d85d8c9ef5d32d44671f6bcbdc2d2db74615c192da293204a3\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"113d69865881959c57a1e96ba588946ab214527248f8cdcd106006b2f74d670e6d928c2ed60e30d85d8c9ef5d32d44671f6bcbdc2d2db74615c192da293204a3\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 27,
                  "endLine": 296,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ab07760b9b19a10a541b8331e7c57ee8dd17827caa054c5bea75e93de719272b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ab07760b9b19a10a541b8331e7c57ee8dd17827caa054c5bea75e93de719272b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"ab07760b9b19a10a541b8331e7c57ee8dd17827caa054c5bea75e93de719272b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 27,
                  "endLine": 292,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c979fc388e7945c262972c290cdf4e4b41c3cb92\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c979fc388e7945c262972c290cdf4e4b41c3cb92\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c979fc388e7945c262972c290cdf4e4b41c3cb92\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 27,
                  "endLine": 281,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"f73f79fe3a46e6b6616b5f1a07a50f409ae1b33810e524e2f986caa93b14ca96f5dd0143e86e5be7b80efb6c0b112de4471faf890765b3bbae061f3f4b10888b\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"f73f79fe3a46e6b6616b5f1a07a50f409ae1b33810e524e2f986caa93b14ca96f5dd0143e86e5be7b80efb6c0b112de4471faf890765b3bbae061f3f4b10888b\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"f73f79fe3a46e6b6616b5f1a07a50f409ae1b33810e524e2f986caa93b14ca96f5dd0143e86e5be7b80efb6c0b112de4471faf890765b3bbae061f3f4b10888b\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 27,
                  "endLine": 277,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"36fad5968612be10b4b1ed09d41f1e224b8c500c00c5aa08653a2dac5f109562\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"36fad5968612be10b4b1ed09d41f1e224b8c500c00c5aa08653a2dac5f109562\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"36fad5968612be10b4b1ed09d41f1e224b8c500c00c5aa08653a2dac5f109562\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 27,
                  "endLine": 273,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"85bb463b3d79c1911fe71751551286e72482bbff\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"85bb463b3d79c1911fe71751551286e72482bbff\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"85bb463b3d79c1911fe71751551286e72482bbff\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 27,
                  "endLine": 262,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c2f7dbfed7eae41d9fc659a09b5afd4e723a601caed46ad28b6ea448752c36b41cbe4628247deb86358eeffa6590d5bc8a13d64b4e1218149020c06648794c93\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c2f7dbfed7eae41d9fc659a09b5afd4e723a601caed46ad28b6ea448752c36b41cbe4628247deb86358eeffa6590d5bc8a13d64b4e1218149020c06648794c93\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c2f7dbfed7eae41d9fc659a09b5afd4e723a601caed46ad28b6ea448752c36b41cbe4628247deb86358eeffa6590d5bc8a13d64b4e1218149020c06648794c93\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 27,
                  "endLine": 258,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"486e1dd008cb0c277a27582af5794a722ab2b7997ec27848a9a0e30edadee68b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"486e1dd008cb0c277a27582af5794a722ab2b7997ec27848a9a0e30edadee68b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"486e1dd008cb0c277a27582af5794a722ab2b7997ec27848a9a0e30edadee68b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 27,
                  "endLine": 254,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"19a56ac7465f3c8846a66d65f7f2ac8685b1e874\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"19a56ac7465f3c8846a66d65f7f2ac8685b1e874\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"19a56ac7465f3c8846a66d65f7f2ac8685b1e874\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 27,
                  "endLine": 243,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2200ada87c3ea516a816d5b7c682f5e86502a594520b3d764be00774745edf897420b3ecfe7620b37ff4365a5949640b1039930e6726a1ef44f5b6123dc3dbcc\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2200ada87c3ea516a816d5b7c682f5e86502a594520b3d764be00774745edf897420b3ecfe7620b37ff4365a5949640b1039930e6726a1ef44f5b6123dc3dbcc\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"2200ada87c3ea516a816d5b7c682f5e86502a594520b3d764be00774745edf897420b3ecfe7620b37ff4365a5949640b1039930e6726a1ef44f5b6123dc3dbcc\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 27,
                  "endLine": 239,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"0bce70aaaac02afc25e83a64f4db3d4929dbcaf227925bf926eec4cc2424a2b2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"0bce70aaaac02afc25e83a64f4db3d4929dbcaf227925bf926eec4cc2424a2b2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"0bce70aaaac02afc25e83a64f4db3d4929dbcaf227925bf926eec4cc2424a2b2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 27,
                  "endLine": 235,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"923b4b4294bf013e9158092a9b4b62bc43a51563\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"923b4b4294bf013e9158092a9b4b62bc43a51563\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"923b4b4294bf013e9158092a9b4b62bc43a51563\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 27,
                  "endLine": 224,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0f16c2e962269d29d8515959a847f155f612d3a4ab940c9afb8f08195afa892901020a797e7cdd54336edebbc10ece20e3832eb803a9b9eebe7f94de80961410\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0f16c2e962269d29d8515959a847f155f612d3a4ab940c9afb8f08195afa892901020a797e7cdd54336edebbc10ece20e3832eb803a9b9eebe7f94de80961410\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0f16c2e962269d29d8515959a847f155f612d3a4ab940c9afb8f08195afa892901020a797e7cdd54336edebbc10ece20e3832eb803a9b9eebe7f94de80961410\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 27,
                  "endLine": 220,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cd2ea50c90d7a23cc5b7bfd91c729cd6bc44c091d580bb75ff500611ec559b7a\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cd2ea50c90d7a23cc5b7bfd91c729cd6bc44c091d580bb75ff500611ec559b7a\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cd2ea50c90d7a23cc5b7bfd91c729cd6bc44c091d580bb75ff500611ec559b7a\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 27,
                  "endLine": 216,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2ab9e041f2754db3d687869a145e07df53e784b4\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2ab9e041f2754db3d687869a145e07df53e784b4\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2ab9e041f2754db3d687869a145e07df53e784b4\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 27,
                  "endLine": 205,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"6608a48142acdb35eb91bff31105fffc5e47cd07bcc68789a60077824b8d09c919457020602e30a22e27764d37ba8c6c6f297e1839e9063be3c139b2710cb8db\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"6608a48142acdb35eb91bff31105fffc5e47cd07bcc68789a60077824b8d09c919457020602e30a22e27764d37ba8c6c6f297e1839e9063be3c139b2710cb8db\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"6608a48142acdb35eb91bff31105fffc5e47cd07bcc68789a60077824b8d09c919457020602e30a22e27764d37ba8c6c6f297e1839e9063be3c139b2710cb8db\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 27,
                  "endLine": 201,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c7f881d3593c8e92081e6eda48f5357df660ab7e9c4d9c7fb496b86c23e2fac6\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c7f881d3593c8e92081e6eda48f5357df660ab7e9c4d9c7fb496b86c23e2fac6\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c7f881d3593c8e92081e6eda48f5357df660ab7e9c4d9c7fb496b86c23e2fac6\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 27,
                  "endLine": 197,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"33d85481ae7d59aecd61207c8e129032fdf76f1b\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"33d85481ae7d59aecd61207c8e129032fdf76f1b\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"33d85481ae7d59aecd61207c8e129032fdf76f1b\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 27,
                  "endLine": 186,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"39dd1a3c02ce3644ca84df319a133420d754f897cce2898e7a5600bc22b3b355b693d20b1f8dc147142767014e69e3292c7071346200580668a2eb64ce437123\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"39dd1a3c02ce3644ca84df319a133420d754f897cce2898e7a5600bc22b3b355b693d20b1f8dc147142767014e69e3292c7071346200580668a2eb64ce437123\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"39dd1a3c02ce3644ca84df319a133420d754f897cce2898e7a5600bc22b3b355b693d20b1f8dc147142767014e69e3292c7071346200580668a2eb64ce437123\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 27,
                  "endLine": 182,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"b8ef7b1c0983daf97f258d59ba84a873a351723594030ba2b1db2bf62792fb1d\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"b8ef7b1c0983daf97f258d59ba84a873a351723594030ba2b1db2bf62792fb1d\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"b8ef7b1c0983daf97f258d59ba84a873a351723594030ba2b1db2bf62792fb1d\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 27,
                  "endLine": 178,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9c4ab879a7eb2580dcf3e7a071ac97b0068062a6\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9c4ab879a7eb2580dcf3e7a071ac97b0068062a6\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9c4ab879a7eb2580dcf3e7a071ac97b0068062a6\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 27,
                  "endLine": 167,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c9ff15f1145eaafa8cc423868d58f2a330703dd1005b53e3d7a7b0bbaf996e0e5f70630d5ebcb4a40402819e29b82f62b215dbe2def6458612325391c60697ac\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c9ff15f1145eaafa8cc423868d58f2a330703dd1005b53e3d7a7b0bbaf996e0e5f70630d5ebcb4a40402819e29b82f62b215dbe2def6458612325391c60697ac\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c9ff15f1145eaafa8cc423868d58f2a330703dd1005b53e3d7a7b0bbaf996e0e5f70630d5ebcb4a40402819e29b82f62b215dbe2def6458612325391c60697ac\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 27,
                  "endLine": 163,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1833e41543d1d780e98a01261bc5a995663bf7ac342abdbc1f35b04b36b91ba2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1833e41543d1d780e98a01261bc5a995663bf7ac342abdbc1f35b04b36b91ba2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"1833e41543d1d780e98a01261bc5a995663bf7ac342abdbc1f35b04b36b91ba2\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 27,
                  "endLine": 159,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"403b1a44b95c793b9922c15b867afcb6535d8f00\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"403b1a44b95c793b9922c15b867afcb6535d8f00\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"403b1a44b95c793b9922c15b867afcb6535d8f00\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 27,
                  "endLine": 148,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7a27fb8874d512497e3526c288b37b726e3d66d2bf28af62b9ae5d31a44366ea38cb09130903af2e1db6db4296a0ed17c1e459a6cde1c77451bdd96b9ea27176\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7a27fb8874d512497e3526c288b37b726e3d66d2bf28af62b9ae5d31a44366ea38cb09130903af2e1db6db4296a0ed17c1e459a6cde1c77451bdd96b9ea27176\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"7a27fb8874d512497e3526c288b37b726e3d66d2bf28af62b9ae5d31a44366ea38cb09130903af2e1db6db4296a0ed17c1e459a6cde1c77451bdd96b9ea27176\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 27,
                  "endLine": 144,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c3e14ba908cc0afbe138f38a0cbded6837e500898a886766a206431537a63166\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c3e14ba908cc0afbe138f38a0cbded6837e500898a886766a206431537a63166\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c3e14ba908cc0afbe138f38a0cbded6837e500898a886766a206431537a63166\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 27,
                  "endLine": 140,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"fcadd32ed0969bdc0d4e6247fbe8f9fd6f069c00\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"fcadd32ed0969bdc0d4e6247fbe8f9fd6f069c00\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"fcadd32ed0969bdc0d4e6247fbe8f9fd6f069c00\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 27,
                  "endLine": 129,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"b66c161811fc7f79993e2bf5f13c998e39b369ba04898c97891bee37104392c10d85617de5295b2659e65f8a8e344348611d5a516a2af5d159c643a5db98d3a3\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"b66c161811fc7f79993e2bf5f13c998e39b369ba04898c97891bee37104392c10d85617de5295b2659e65f8a8e344348611d5a516a2af5d159c643a5db98d3a3\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"b66c161811fc7f79993e2bf5f13c998e39b369ba04898c97891bee37104392c10d85617de5295b2659e65f8a8e344348611d5a516a2af5d159c643a5db98d3a3\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 27,
                  "endLine": 125,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"774e0ebf9fdadd3c03e1d5026b2bcc9509a749cd7fa3064d934cdafd4cfa59dd\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"774e0ebf9fdadd3c03e1d5026b2bcc9509a749cd7fa3064d934cdafd4cfa59dd\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"774e0ebf9fdadd3c03e1d5026b2bcc9509a749cd7fa3064d934cdafd4cfa59dd\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 27,
                  "endLine": 121,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"df897443d1cfd50de6350fa94c03da81ee7644a4\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"df897443d1cfd50de6350fa94c03da81ee7644a4\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"df897443d1cfd50de6350fa94c03da81ee7644a4\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 27,
                  "endLine": 110,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"b63452a320e5afb5c56f5302139f268a0deef743470bb1e5a5ab66b779f88a646f062e1a63124380cbe4f7d63b9a86538c87e5972a4dabf13f7b37051690c404\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"b63452a320e5afb5c56f5302139f268a0deef743470bb1e5a5ab66b779f88a646f062e1a63124380cbe4f7d63b9a86538c87e5972a4dabf13f7b37051690c404\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"b63452a320e5afb5c56f5302139f268a0deef743470bb1e5a5ab66b779f88a646f062e1a63124380cbe4f7d63b9a86538c87e5972a4dabf13f7b37051690c404\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 27,
                  "endLine": 106,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a8ac7d14653fcf10fd986aa216095e35e8df3b80303d8eddba140f699df453f3\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a8ac7d14653fcf10fd986aa216095e35e8df3b80303d8eddba140f699df453f3\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a8ac7d14653fcf10fd986aa216095e35e8df3b80303d8eddba140f699df453f3\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 27,
                  "endLine": 102,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"204013b51d432cb6a5059a150f2a883cbe5cf139\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"204013b51d432cb6a5059a150f2a883cbe5cf139\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"204013b51d432cb6a5059a150f2a883cbe5cf139\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 27,
                  "endLine": 91,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e94864244a1164125b128bd6a5f85cadb6e5ca3f00935772c773c62890a42f93847142677f8b7f1238f27fec3d8d07fc9f94d34bcbb53c9c879777ac90f0199e\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e94864244a1164125b128bd6a5f85cadb6e5ca3f00935772c773c62890a42f93847142677f8b7f1238f27fec3d8d07fc9f94d34bcbb53c9c879777ac90f0199e\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"e94864244a1164125b128bd6a5f85cadb6e5ca3f00935772c773c62890a42f93847142677f8b7f1238f27fec3d8d07fc9f94d34bcbb53c9c879777ac90f0199e\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 27,
                  "endLine": 87,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"89896fe5f5f7e7b3d0c914f6a3ab70d5b37e61c2851472aa07f2f01cee703fe8\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"89896fe5f5f7e7b3d0c914f6a3ab70d5b37e61c2851472aa07f2f01cee703fe8\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"89896fe5f5f7e7b3d0c914f6a3ab70d5b37e61c2851472aa07f2f01cee703fe8\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 27,
                  "endLine": 83,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"751ef8f00944ab171bb93d1d1967442170564c82\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"751ef8f00944ab171bb93d1d1967442170564c82\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"751ef8f00944ab171bb93d1d1967442170564c82\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 27,
                  "endLine": 72,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"31ff5a71e824cc2ce4aa6f90a5a33a06130c903aaab66594b2bd85ec74bd19ec36d4e7612e0074acf0d40aedee16566f6a8a4fe88a03046eba035999e3ee16b3\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"31ff5a71e824cc2ce4aa6f90a5a33a06130c903aaab66594b2bd85ec74bd19ec36d4e7612e0074acf0d40aedee16566f6a8a4fe88a03046eba035999e3ee16b3\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"31ff5a71e824cc2ce4aa6f90a5a33a06130c903aaab66594b2bd85ec74bd19ec36d4e7612e0074acf0d40aedee16566f6a8a4fe88a03046eba035999e3ee16b3\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 27,
                  "endLine": 68,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"590b3dbb74687ba8c6f220930f3ecd2dcf6d4ded1a5d17e02eb44dcba412a043\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"590b3dbb74687ba8c6f220930f3ecd2dcf6d4ded1a5d17e02eb44dcba412a043\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"590b3dbb74687ba8c6f220930f3ecd2dcf6d4ded1a5d17e02eb44dcba412a043\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 27,
                  "endLine": 64,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c16520958e03b6795cd2870b345edc1028233e1b\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c16520958e03b6795cd2870b345edc1028233e1b\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c16520958e03b6795cd2870b345edc1028233e1b\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 27,
                  "endLine": 53,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"638a7cbcd6df6f542692e4ebde0883624109e2d4967a41aaae93083c6412d383553b5cfe1bce0733227a9ba910bf95bfd25bfcebcc4808c10382cb88ba9c1cc9\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"638a7cbcd6df6f542692e4ebde0883624109e2d4967a41aaae93083c6412d383553b5cfe1bce0733227a9ba910bf95bfd25bfcebcc4808c10382cb88ba9c1cc9\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"638a7cbcd6df6f542692e4ebde0883624109e2d4967a41aaae93083c6412d383553b5cfe1bce0733227a9ba910bf95bfd25bfcebcc4808c10382cb88ba9c1cc9\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 27,
                  "endLine": 49,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"d6ad7fb10d1c48108c7802e5e2a99a24e4a40d93fd148a2bf866836ad4cd7115\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"d6ad7fb10d1c48108c7802e5e2a99a24e4a40d93fd148a2bf866836ad4cd7115\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"d6ad7fb10d1c48108c7802e5e2a99a24e4a40d93fd148a2bf866836ad4cd7115\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 27,
                  "endLine": 45,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"4745a0c7a5ee0c62ea6c68e8b5697f186c931212\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"4745a0c7a5ee0c62ea6c68e8b5697f186c931212\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"4745a0c7a5ee0c62ea6c68e8b5697f186c931212\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 27,
                  "endLine": 34,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"f383e2162456a16e3c12f9abdd455fef611783be137b564888b0c3e9f1a6a75a8d0021a4cf66efc1186b14b1799e522a59ff60915e4ac5112b5902d72f475682\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"f383e2162456a16e3c12f9abdd455fef611783be137b564888b0c3e9f1a6a75a8d0021a4cf66efc1186b14b1799e522a59ff60915e4ac5112b5902d72f475682\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"f383e2162456a16e3c12f9abdd455fef611783be137b564888b0c3e9f1a6a75a8d0021a4cf66efc1186b14b1799e522a59ff60915e4ac5112b5902d72f475682\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 27,
                  "endLine": 30,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7468ded55310f64fbf085b8e892df81d1bcc49263bf535d3c2c58b014cfae214\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7468ded55310f64fbf085b8e892df81d1bcc49263bf535d3c2c58b014cfae214\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"7468ded55310f64fbf085b8e892df81d1bcc49263bf535d3c2c58b014cfae214\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/var/lib/db/sbom/py3-hyperlink-21.0.0-r2.spdx.json"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 27,
                  "endLine": 26,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c47bd870b870bce5ce5a0f5bec14b2a77fc4382e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c47bd870b870bce5ce5a0f5bec14b2a77fc4382e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c47bd870b870bce5ce5a0f5bec14b2a77fc4382e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1914,
                  "startColumn": 19,
                  "endLine": 1914,
                  "endColumn": 24,
                  "snippet": {
                    "text": "            >>> url = URL.from_text(u'?x=1&x=2')\n            >>> url.get('x')\n            [u'1', u'2']\n            >>> url.get('y')\n            []\n\n        If the given *name* is not set, an empty list is returned. A\n",
                    "rendered": {
                      "text": "            >>> url = URL.from_text(u'?x=1&x=2')\n            >>> url.get('x')\n            [u'1', u'2']\n            >>> url.get('y')\n            []\n\n        If the given *name* is not set, an empty list is returned. A\n",
                      "markdown": "`            >>> url = URL.from_text(u'?x=1&x=2')\n            >>> url.get('x')\n            [u'1', u'2']\n            >>> url.get('y')\n            []\n\n        If the given *name* is not set, an empty list is returned. A\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1912,
                  "startColumn": 19,
                  "endLine": 1912,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        \"\"\"Get a list of values for the given query parameter, *name*::\n\n            >>> url = URL.from_text(u'?x=1&x=2')\n            >>> url.get('x')\n            [u'1', u'2']\n            >>> url.get('y')\n            []\n",
                    "rendered": {
                      "text": "        \"\"\"Get a list of values for the given query parameter, *name*::\n\n            >>> url = URL.from_text(u'?x=1&x=2')\n            >>> url.get('x')\n            [u'1', u'2']\n            >>> url.get('y')\n            []\n",
                      "markdown": "`        \"\"\"Get a list of values for the given query parameter, *name*::\n\n            >>> url = URL.from_text(u'?x=1&x=2')\n            >>> url.get('x')\n            [u'1', u'2']\n            >>> url.get('y')\n            []\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1214,
                  "startColumn": 39,
                  "endLine": 1214,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            hostport = [\"[\" + host + \"]\"]\n        else:\n            hostport = [self.host]\n        if self.port != SCHEME_PORT_MAP.get(self.scheme):\n            hostport.append(Text(self.port))\n        authority = []\n        if self.userinfo:\n",
                    "rendered": {
                      "text": "            hostport = [\"[\" + host + \"]\"]\n        else:\n            hostport = [self.host]\n        if self.port != SCHEME_PORT_MAP.get(self.scheme):\n            hostport.append(Text(self.port))\n        authority = []\n        if self.userinfo:\n",
                      "markdown": "`            hostport = [\"[\" + host + \"]\"]\n        else:\n            hostport = [self.host]\n        if self.port != SCHEME_PORT_MAP.get(self.scheme):\n            hostport.append(Text(self.port))\n        authority = []\n        if self.userinfo:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1132,
                  "startColumn": 29,
                  "endLine": 1132,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        missing.\n\n        For more operations on the mapping, see\n        :meth:`~hyperlink.URL.get()`, :meth:`~hyperlink.URL.add()`,\n        :meth:`~hyperlink.URL.set()`, and\n        :meth:`~hyperlink.URL.delete()`.\n        \"\"\"\n",
                    "rendered": {
                      "text": "        missing.\n\n        For more operations on the mapping, see\n        :meth:`~hyperlink.URL.get()`, :meth:`~hyperlink.URL.add()`,\n        :meth:`~hyperlink.URL.set()`, and\n        :meth:`~hyperlink.URL.delete()`.\n        \"\"\"\n",
                      "markdown": "`        missing.\n\n        For more operations on the mapping, see\n        :meth:`~hyperlink.URL.get()`, :meth:`~hyperlink.URL.add()`,\n        :meth:`~hyperlink.URL.set()`, and\n        :meth:`~hyperlink.URL.delete()`.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1042,
                  "startColumn": 56,
                  "endLine": 1042,
                  "endColumn": 61,
                  "snippet": {
                    "text": "            \"uses_netloc\", uses_netloc, bool, NoneType\n        )\n        will_have_authority = self._host or (\n            self._port and self._port != SCHEME_PORT_MAP.get(scheme)\n        )\n        if will_have_authority:\n            # fixup for rooted consistency; if there's any 'authority'\n",
                    "rendered": {
                      "text": "            \"uses_netloc\", uses_netloc, bool, NoneType\n        )\n        will_have_authority = self._host or (\n            self._port and self._port != SCHEME_PORT_MAP.get(scheme)\n        )\n        if will_have_authority:\n            # fixup for rooted consistency; if there's any 'authority'\n",
                      "markdown": "`            \"uses_netloc\", uses_netloc, bool, NoneType\n        )\n        will_have_authority = self._host or (\n            self._port and self._port != SCHEME_PORT_MAP.get(scheme)\n        )\n        if will_have_authority:\n            # fixup for rooted consistency; if there's any 'authority'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 990,
                  "startColumn": 34,
                  "endLine": 990,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        if host is not None and scheme is None:\n            scheme = u\"http\"  # TODO: why\n        if port is None and scheme is not None:\n            port = SCHEME_PORT_MAP.get(scheme)\n        if host and query and not path:\n            # per RFC 3986 6.2.3, \"a URI that uses the generic syntax\n            # for authority with an empty path should be normalized to\n",
                    "rendered": {
                      "text": "        if host is not None and scheme is None:\n            scheme = u\"http\"  # TODO: why\n        if port is None and scheme is not None:\n            port = SCHEME_PORT_MAP.get(scheme)\n        if host and query and not path:\n            # per RFC 3986 6.2.3, \"a URI that uses the generic syntax\n            # for authority with an empty path should be normalized to\n",
                      "markdown": "`        if host is not None and scheme is None:\n            scheme = u\"http\"  # TODO: why\n        if port is None and scheme is not None:\n            port = SCHEME_PORT_MAP.get(scheme)\n        if host and query and not path:\n            # per RFC 3986 6.2.3, \"a URI that uses the generic syntax\n            # for authority with an empty path should be normalized to\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 17,
                  "endLine": 11,
                  "endColumn": 22,
                  "snippet": {
                    "text": "   >>> url.host\n   u'github.com'\n   >>> secure_url = url.replace(scheme=u'https')\n   >>> secure_url.get('utm_source')[0]\n   u'docs'\n\nHyperlink's API centers on the :class:`DecodedURL` type, which wraps\n",
                    "rendered": {
                      "text": "   >>> url.host\n   u'github.com'\n   >>> secure_url = url.replace(scheme=u'https')\n   >>> secure_url.get('utm_source')[0]\n   u'docs'\n\nHyperlink's API centers on the :class:`DecodedURL` type, which wraps\n",
                      "markdown": "`   >>> url.host\n   u'github.com'\n   >>> secure_url = url.replace(scheme=u'https')\n   >>> secure_url.get('utm_source')[0]\n   u'docs'\n\nHyperlink's API centers on the :class:`DecodedURL` type, which wraps\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 2403,
                  "startColumn": 33,
                  "endLine": 2403,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    def asText(self, includeSecrets=False):\n        # type: (bool) -> Text\n        return self.to_text(with_password=includeSecrets)\n\n    def __dir__(self):\n        # type: () -> Sequence[Text]\n",
                    "rendered": {
                      "text": "\n    def asText(self, includeSecrets=False):\n        # type: (bool) -> Text\n        return self.to_text(with_password=includeSecrets)\n\n    def __dir__(self):\n        # type: () -> Sequence[Text]\n",
                      "markdown": "`\n    def asText(self, includeSecrets=False):\n        # type: (bool) -> Text\n        return self.to_text(with_password=includeSecrets)\n\n    def __dir__(self):\n        # type: () -> Sequence[Text]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 2279,
                  "startColumn": 32,
                  "endLine": 2279,
                  "endColumn": 40,
                  "snippet": {
                    "text": "            if len(userinfo) > 2:\n                raise ValueError(\n                    'userinfo expected sequence of [\"user\"] or'\n                    ' [\"user\", \"password\"], got %r' % (userinfo,)\n                )\n            userinfo_text = u\":\".join([_encode_reserved(p) for p in userinfo])\n        else:\n",
                    "rendered": {
                      "text": "            if len(userinfo) > 2:\n                raise ValueError(\n                    'userinfo expected sequence of [\"user\"] or'\n                    ' [\"user\", \"password\"], got %r' % (userinfo,)\n                )\n            userinfo_text = u\":\".join([_encode_reserved(p) for p in userinfo])\n        else:\n",
                      "markdown": "`            if len(userinfo) > 2:\n                raise ValueError(\n                    'userinfo expected sequence of [\"user\"] or'\n                    ' [\"user\", \"password\"], got %r' % (userinfo,)\n                )\n            userinfo_text = u\":\".join([_encode_reserved(p) for p in userinfo])\n        else:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 2075,
                  "startColumn": 38,
                  "endLine": 2075,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    def to_text(self, with_password=False):\n        # type: (bool) -> Text\n        \"Passthrough to :meth:`~hyperlink.URL.to_text()`\"\n        return self._url.to_text(with_password)\n\n    def to_uri(self):\n        # type: () -> URL\n",
                    "rendered": {
                      "text": "    def to_text(self, with_password=False):\n        # type: (bool) -> Text\n        \"Passthrough to :meth:`~hyperlink.URL.to_text()`\"\n        return self._url.to_text(with_password)\n\n    def to_uri(self):\n        # type: () -> URL\n",
                      "markdown": "`    def to_text(self, with_password=False):\n        # type: (bool) -> Text\n        \"Passthrough to :meth:`~hyperlink.URL.to_text()`\"\n        return self._url.to_text(with_password)\n\n    def to_uri(self):\n        # type: () -> URL\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 2072,
                  "startColumn": 27,
                  "endLine": 2072,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        \"\"\"\n        return self._url\n\n    def to_text(self, with_password=False):\n        # type: (bool) -> Text\n        \"Passthrough to :meth:`~hyperlink.URL.to_text()`\"\n        return self._url.to_text(with_password)\n",
                    "rendered": {
                      "text": "        \"\"\"\n        return self._url\n\n    def to_text(self, with_password=False):\n        # type: (bool) -> Text\n        \"Passthrough to :meth:`~hyperlink.URL.to_text()`\"\n        return self._url.to_text(with_password)\n",
                      "markdown": "`        \"\"\"\n        return self._url\n\n    def to_text(self, with_password=False):\n        # type: (bool) -> Text\n        \"Passthrough to :meth:`~hyperlink.URL.to_text()`\"\n        return self._url.to_text(with_password)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1842,
                  "startColumn": 33,
                  "endLine": 1842,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    def asText(self, includeSecrets=False):\n        # type: (bool) -> Text\n        return self.to_text(with_password=includeSecrets)\n\n    def __dir__(self):\n        # type: () -> Sequence[Text]\n",
                    "rendered": {
                      "text": "\n    def asText(self, includeSecrets=False):\n        # type: (bool) -> Text\n        return self.to_text(with_password=includeSecrets)\n\n    def __dir__(self):\n        # type: () -> Sequence[Text]\n",
                      "markdown": "`\n    def asText(self, includeSecrets=False):\n        # type: (bool) -> Text\n        return self.to_text(with_password=includeSecrets)\n\n    def __dir__(self):\n        # type: () -> Sequence[Text]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1758,
                  "startColumn": 40,
                  "endLine": 1758,
                  "endColumn": 48,
                  "snippet": {
                    "text": "        .. _section 3.2.1: https://tools.ietf.org/html/rfc3986#section-3.2.1\n        \"\"\"\n        scheme = self.scheme\n        authority = self.authority(with_password)\n        path = \"/\".join(\n            _encode_path_parts(\n                self.path,\n",
                    "rendered": {
                      "text": "        .. _section 3.2.1: https://tools.ietf.org/html/rfc3986#section-3.2.1\n        \"\"\"\n        scheme = self.scheme\n        authority = self.authority(with_password)\n        path = \"/\".join(\n            _encode_path_parts(\n                self.path,\n",
                      "markdown": "`        .. _section 3.2.1: https://tools.ietf.org/html/rfc3986#section-3.2.1\n        \"\"\"\n        scheme = self.scheme\n        authority = self.authority(with_password)\n        path = \"/\".join(\n            _encode_path_parts(\n                self.path,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1746,
                  "startColumn": 57,
                  "endLine": 1746,
                  "endColumn": 65,
                  "snippet": {
                    "text": "            password).\"\n\n        Args (bool):\n            with_password: Whether or not to include the password in the URL\n                text. Defaults to False.\n\n        Returns:\n",
                    "rendered": {
                      "text": "            password).\"\n\n        Args (bool):\n            with_password: Whether or not to include the password in the URL\n                text. Defaults to False.\n\n        Returns:\n",
                      "markdown": "`            password).\"\n\n        Args (bool):\n            with_password: Whether or not to include the password in the URL\n                text. Defaults to False.\n\n        Returns:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1746,
                  "startColumn": 17,
                  "endLine": 1746,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            password).\"\n\n        Args (bool):\n            with_password: Whether or not to include the password in the URL\n                text. Defaults to False.\n\n        Returns:\n",
                    "rendered": {
                      "text": "            password).\"\n\n        Args (bool):\n            with_password: Whether or not to include the password in the URL\n                text. Defaults to False.\n\n        Returns:\n",
                      "markdown": "`            password).\"\n\n        Args (bool):\n            with_password: Whether or not to include the password in the URL\n                text. Defaults to False.\n\n        Returns:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1743,
                  "startColumn": 12,
                  "endLine": 1743,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            \"Applications should not render as clear text any data after the\n            first colon (\":\") character found within a userinfo subcomponent\n            unless the data after the colon is the empty string (indicating no\n            password).\"\n\n        Args (bool):\n            with_password: Whether or not to include the password in the URL\n",
                    "rendered": {
                      "text": "            \"Applications should not render as clear text any data after the\n            first colon (\":\") character found within a userinfo subcomponent\n            unless the data after the colon is the empty string (indicating no\n            password).\"\n\n        Args (bool):\n            with_password: Whether or not to include the password in the URL\n",
                      "markdown": "`            \"Applications should not render as clear text any data after the\n            first colon (\":\") character found within a userinfo subcomponent\n            unless the data after the colon is the empty string (indicating no\n            password).\"\n\n        Args (bool):\n            with_password: Whether or not to include the password in the URL\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1735,
                  "startColumn": 54,
                  "endLine": 1735,
                  "endColumn": 62,
                  "snippet": {
                    "text": "        # type: (bool) -> Text\n        \"\"\"Render this URL to its textual representation.\n\n        By default, the URL text will *not* include a password, if one\n        is set. RFC 3986 considers using URLs to represent such\n        sensitive information as deprecated. Quoting from RFC 3986,\n        `section 3.2.1`:\n",
                    "rendered": {
                      "text": "        # type: (bool) -> Text\n        \"\"\"Render this URL to its textual representation.\n\n        By default, the URL text will *not* include a password, if one\n        is set. RFC 3986 considers using URLs to represent such\n        sensitive information as deprecated. Quoting from RFC 3986,\n        `section 3.2.1`:\n",
                      "markdown": "`        # type: (bool) -> Text\n        \"\"\"Render this URL to its textual representation.\n\n        By default, the URL text will *not* include a password, if one\n        is set. RFC 3986 considers using URLs to represent such\n        sensitive information as deprecated. Quoting from RFC 3986,\n        `section 3.2.1`:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1731,
                  "startColumn": 27,
                  "endLine": 1731,
                  "endColumn": 35,
                  "snippet": {
                    "text": "            fragment=_decode_fragment_part(self.fragment),\n        )\n\n    def to_text(self, with_password=False):\n        # type: (bool) -> Text\n        \"\"\"Render this URL to its textual representation.\n\n",
                    "rendered": {
                      "text": "            fragment=_decode_fragment_part(self.fragment),\n        )\n\n    def to_text(self, with_password=False):\n        # type: (bool) -> Text\n        \"\"\"Render this URL to its textual representation.\n\n",
                      "markdown": "`            fragment=_decode_fragment_part(self.fragment),\n        )\n\n    def to_text(self, with_password=False):\n        # type: (bool) -> Text\n        \"\"\"Render this URL to its textual representation.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1317,
                  "startColumn": 63,
                  "endLine": 1317,
                  "endColumn": 71,
                  "snippet": {
                    "text": "            fragment: The fragment part of the URL.\n            port: The port part of the network location.\n            rooted: Whether or not the path begins with a slash.\n            userinfo: The username or colon-separated username:password pair.\n            uses_netloc: Indicates whether ``://`` (the \"netloc separator\")\n                will appear to separate the scheme from the *path* in cases\n                where no host is present.\n",
                    "rendered": {
                      "text": "            fragment: The fragment part of the URL.\n            port: The port part of the network location.\n            rooted: Whether or not the path begins with a slash.\n            userinfo: The username or colon-separated username:password pair.\n            uses_netloc: Indicates whether ``://`` (the \"netloc separator\")\n                will appear to separate the scheme from the *path* in cases\n                where no host is present.\n",
                      "markdown": "`            fragment: The fragment part of the URL.\n            port: The port part of the network location.\n            rooted: Whether or not the path begins with a slash.\n            userinfo: The username or colon-separated username:password pair.\n            uses_netloc: Indicates whether ``://`` (the \"netloc separator\")\n                will appear to separate the scheme from the *path* in cases\n                where no host is present.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1219,
                  "startColumn": 24,
                  "endLine": 1219,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        authority = []\n        if self.userinfo:\n            userinfo = self.userinfo\n            if not with_password and u\":\" in userinfo:\n                userinfo = userinfo[: userinfo.index(u\":\") + 1]\n            authority.append(userinfo)\n        authority.append(u\":\".join(hostport))\n",
                    "rendered": {
                      "text": "        authority = []\n        if self.userinfo:\n            userinfo = self.userinfo\n            if not with_password and u\":\" in userinfo:\n                userinfo = userinfo[: userinfo.index(u\":\") + 1]\n            authority.append(userinfo)\n        authority.append(u\":\".join(hostport))\n",
                      "markdown": "`        authority = []\n        if self.userinfo:\n            userinfo = self.userinfo\n            if not with_password and u\":\" in userinfo:\n                userinfo = userinfo[: userinfo.index(u\":\") + 1]\n            authority.append(userinfo)\n        authority.append(u\":\".join(hostport))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1206,
                  "startColumn": 54,
                  "endLine": 1206,
                  "endColumn": 62,
                  "snippet": {
                    "text": "                of the URL.\n        \"\"\"\n        # first, a bit of twisted compat\n        with_password = kw.pop(\"includeSecrets\", with_password)\n        if kw:\n            raise TypeError(\"got unexpected keyword arguments: %r\" % kw.keys())\n        host = self.host\n",
                    "rendered": {
                      "text": "                of the URL.\n        \"\"\"\n        # first, a bit of twisted compat\n        with_password = kw.pop(\"includeSecrets\", with_password)\n        if kw:\n            raise TypeError(\"got unexpected keyword arguments: %r\" % kw.keys())\n        host = self.host\n",
                      "markdown": "`                of the URL.\n        \"\"\"\n        # first, a bit of twisted compat\n        with_password = kw.pop(\"includeSecrets\", with_password)\n        if kw:\n            raise TypeError(\"got unexpected keyword arguments: %r\" % kw.keys())\n        host = self.host\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1206,
                  "startColumn": 13,
                  "endLine": 1206,
                  "endColumn": 21,
                  "snippet": {
                    "text": "                of the URL.\n        \"\"\"\n        # first, a bit of twisted compat\n        with_password = kw.pop(\"includeSecrets\", with_password)\n        if kw:\n            raise TypeError(\"got unexpected keyword arguments: %r\" % kw.keys())\n        host = self.host\n",
                    "rendered": {
                      "text": "                of the URL.\n        \"\"\"\n        # first, a bit of twisted compat\n        with_password = kw.pop(\"includeSecrets\", with_password)\n        if kw:\n            raise TypeError(\"got unexpected keyword arguments: %r\" % kw.keys())\n        host = self.host\n",
                      "markdown": "`                of the URL.\n        \"\"\"\n        # first, a bit of twisted compat\n        with_password = kw.pop(\"includeSecrets\", with_password)\n        if kw:\n            raise TypeError(\"got unexpected keyword arguments: %r\" % kw.keys())\n        host = self.host\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1198,
                  "startColumn": 12,
                  "endLine": 1198,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n        Args:\n            with_password: Whether the return value of this method include the\n            password in the URL, if it is set.\n            Defaults to False.\n\n        Returns:\n",
                    "rendered": {
                      "text": "\n        Args:\n            with_password: Whether the return value of this method include the\n            password in the URL, if it is set.\n            Defaults to False.\n\n        Returns:\n",
                      "markdown": "`\n        Args:\n            with_password: Whether the return value of this method include the\n            password in the URL, if it is set.\n            Defaults to False.\n\n        Returns:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1197,
                  "startColumn": 17,
                  "endLine": 1197,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        u'user:pass@localhost:8080'\n\n        Args:\n            with_password: Whether the return value of this method include the\n            password in the URL, if it is set.\n            Defaults to False.\n\n",
                    "rendered": {
                      "text": "        u'user:pass@localhost:8080'\n\n        Args:\n            with_password: Whether the return value of this method include the\n            password in the URL, if it is set.\n            Defaults to False.\n\n",
                      "markdown": "`        u'user:pass@localhost:8080'\n\n        Args:\n            with_password: Whether the return value of this method include the\n            password in the URL, if it is set.\n            Defaults to False.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1193,
                  "startColumn": 31,
                  "endLine": 1193,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        >>> url = URL.from_text(u'http://user:pass@localhost:8080/a/b?x=y')\n        >>> url.authority()\n        u'user:@localhost:8080'\n        >>> url.authority(with_password=True)\n        u'user:pass@localhost:8080'\n\n        Args:\n",
                    "rendered": {
                      "text": "        >>> url = URL.from_text(u'http://user:pass@localhost:8080/a/b?x=y')\n        >>> url.authority()\n        u'user:@localhost:8080'\n        >>> url.authority(with_password=True)\n        u'user:pass@localhost:8080'\n\n        Args:\n",
                      "markdown": "`        >>> url = URL.from_text(u'http://user:pass@localhost:8080/a/b?x=y')\n        >>> url.authority()\n        u'user:@localhost:8080'\n        >>> url.authority(with_password=True)\n        u'user:pass@localhost:8080'\n\n        Args:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1186,
                  "startColumn": 29,
                  "endLine": 1186,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        \"\"\"\n        return self.userinfo.split(u\":\")[0]\n\n    def authority(self, with_password=False, **kw):\n        # type: (bool, Any) -> Text\n        \"\"\"Compute and return the appropriate host/port/userinfo combination.\n\n",
                    "rendered": {
                      "text": "        \"\"\"\n        return self.userinfo.split(u\":\")[0]\n\n    def authority(self, with_password=False, **kw):\n        # type: (bool, Any) -> Text\n        \"\"\"Compute and return the appropriate host/port/userinfo combination.\n\n",
                      "markdown": "`        \"\"\"\n        return self.userinfo.split(u\":\")[0]\n\n    def authority(self, with_password=False, **kw):\n        # type: (bool, Any) -> Text\n        \"\"\"Compute and return the appropriate host/port/userinfo combination.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1164,
                  "startColumn": 59,
                  "endLine": 1164,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    @property\n    def userinfo(self):\n        # type: () -> Text\n        \"\"\"The colon-separated string forming the username-password\n        combination.\n        \"\"\"\n        return self._userinfo\n",
                    "rendered": {
                      "text": "    @property\n    def userinfo(self):\n        # type: () -> Text\n        \"\"\"The colon-separated string forming the username-password\n        combination.\n        \"\"\"\n        return self._userinfo\n",
                      "markdown": "`    @property\n    def userinfo(self):\n        # type: () -> Text\n        \"\"\"The colon-separated string forming the username-password\n        combination.\n        \"\"\"\n        return self._userinfo\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 953,
                  "startColumn": 59,
                  "endLine": 953,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        rooted: A rooted URL is one which indicates an absolute path.\n            This is True on any URL that includes a host, or any relative URL\n            that starts with a slash.\n        userinfo: The username or colon-separated username:password pair.\n        uses_netloc: Indicates whether ``://`` (the \"netloc separator\") will\n            appear to separate the scheme from the *path* in cases where no\n            host is present.\n",
                    "rendered": {
                      "text": "        rooted: A rooted URL is one which indicates an absolute path.\n            This is True on any URL that includes a host, or any relative URL\n            that starts with a slash.\n        userinfo: The username or colon-separated username:password pair.\n        uses_netloc: Indicates whether ``://`` (the \"netloc separator\") will\n            appear to separate the scheme from the *path* in cases where no\n            host is present.\n",
                      "markdown": "`        rooted: A rooted URL is one which indicates an absolute path.\n            This is True on any URL that includes a host, or any relative URL\n            that starts with a slash.\n        userinfo: The username or colon-separated username:password pair.\n        uses_netloc: Indicates whether ``://`` (the \"netloc separator\") will\n            appear to separate the scheme from the *path* in cases where no\n            host is present.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 58,
                  "endLine": 385,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\ndef _encode_userinfo_part(text, maximal=True):\n    # type: (Text, bool) -> Text\n    \"\"\"Quote special characters in either the username or password\n    section of the URL.\n    \"\"\"\n    if maximal:\n",
                    "rendered": {
                      "text": "\ndef _encode_userinfo_part(text, maximal=True):\n    # type: (Text, bool) -> Text\n    \"\"\"Quote special characters in either the username or password\n    section of the URL.\n    \"\"\"\n    if maximal:\n",
                      "markdown": "`\ndef _encode_userinfo_part(text, maximal=True):\n    # type: (Text, bool) -> Text\n    \"\"\"Quote special characters in either the username or password\n    section of the URL.\n    \"\"\"\n    if maximal:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1710,
                  "startColumn": 16,
                  "endLine": 1710,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n        Returns:\n            URL: A new instance with its path segments, query parameters, and\n                hostname decoded for display purposes.\n        \"\"\"  # noqa: E501\n        new_userinfo = u\":\".join(\n            [_decode_userinfo_part(p) for p in self.userinfo.split(\":\", 1)]\n",
                    "rendered": {
                      "text": "\n        Returns:\n            URL: A new instance with its path segments, query parameters, and\n                hostname decoded for display purposes.\n        \"\"\"  # noqa: E501\n        new_userinfo = u\":\".join(\n            [_decode_userinfo_part(p) for p in self.userinfo.split(\":\", 1)]\n",
                      "markdown": "`\n        Returns:\n            URL: A new instance with its path segments, query parameters, and\n                hostname decoded for display purposes.\n        \"\"\"  # noqa: E501\n        new_userinfo = u\":\".join(\n            [_decode_userinfo_part(p) for p in self.userinfo.split(\":\", 1)]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1656,
                  "startColumn": 16,
                  "endLine": 1656,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n        Returns:\n            URL: A new instance with its path segments, query parameters, and\n                hostname encoded, so that they are all in the standard\n                US-ASCII range.\n        \"\"\"\n        new_userinfo = u\":\".join(\n",
                    "rendered": {
                      "text": "\n        Returns:\n            URL: A new instance with its path segments, query parameters, and\n                hostname encoded, so that they are all in the standard\n                US-ASCII range.\n        \"\"\"\n        new_userinfo = u\":\".join(\n",
                      "markdown": "`\n        Returns:\n            URL: A new instance with its path segments, query parameters, and\n                hostname encoded, so that they are all in the standard\n                US-ASCII range.\n        \"\"\"\n        new_userinfo = u\":\".join(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1056,
                  "startColumn": 60,
                  "endLine": 1056,
                  "endColumn": 68,
                  "snippet": {
                    "text": "        if not will_have_authority and self._path and not self._rooted:\n            # If, after fixing up the path, there *is* a path and it *isn't*\n            # rooted, then we are definitely not using a netloc; if we did, it\n            # would make the path (erroneously) look like a hostname.\n            self._uses_netloc = False\n\n    def get_decoded_url(self, lazy=False):\n",
                    "rendered": {
                      "text": "        if not will_have_authority and self._path and not self._rooted:\n            # If, after fixing up the path, there *is* a path and it *isn't*\n            # rooted, then we are definitely not using a netloc; if we did, it\n            # would make the path (erroneously) look like a hostname.\n            self._uses_netloc = False\n\n    def get_decoded_url(self, lazy=False):\n",
                      "markdown": "`        if not will_have_authority and self._path and not self._rooted:\n            # If, after fixing up the path, there *is* a path and it *isn't*\n            # rooted, then we are definitely not using a netloc; if we did, it\n            # would make the path (erroneously) look like a hostname.\n            self._uses_netloc = False\n\n    def get_decoded_url(self, lazy=False):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1300,
                  "startColumn": 41,
                  "endLine": 1300,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    ):\n        # type: (...) -> URL\n        \"\"\":class:`URL` objects are immutable, which means that attributes\n        are designed to be set only once, at construction. Instead of\n        modifying an existing URL, one simply creates a copy with the\n        desired changes.\n\n",
                    "rendered": {
                      "text": "    ):\n        # type: (...) -> URL\n        \"\"\":class:`URL` objects are immutable, which means that attributes\n        are designed to be set only once, at construction. Instead of\n        modifying an existing URL, one simply creates a copy with the\n        desired changes.\n\n",
                      "markdown": "`    ):\n        # type: (...) -> URL\n        \"\"\":class:`URL` objects are immutable, which means that attributes\n        are designed to be set only once, at construction. Instead of\n        modifying an existing URL, one simply creates a copy with the\n        desired changes.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 809,
                  "startColumn": 48,
                  "endLine": 809,
                  "endColumn": 52,
                  "snippet": {
                    "text": "        check_label(label)\n      File \"/home/mahmoud/virtualenvs/hyperlink/local/lib/python2.7/site-packages/idna/core.py\", line 253, in check_label\n        raise InvalidCodepoint('Codepoint {0} at position {1} of {2} not allowed'.format(_unot(cp_value), pos+1, repr(label)))\n    idna.core.InvalidCodepoint: Codepoint U+004D at position 1 of u'Mahm\\xf6ud' not allowed\n    >> idna.encode(u'Mahmoud.io')\n    'Mahmoud.io'\n\n",
                    "rendered": {
                      "text": "        check_label(label)\n      File \"/home/mahmoud/virtualenvs/hyperlink/local/lib/python2.7/site-packages/idna/core.py\", line 253, in check_label\n        raise InvalidCodepoint('Codepoint {0} at position {1} of {2} not allowed'.format(_unot(cp_value), pos+1, repr(label)))\n    idna.core.InvalidCodepoint: Codepoint U+004D at position 1 of u'Mahm\\xf6ud' not allowed\n    >> idna.encode(u'Mahmoud.io')\n    'Mahmoud.io'\n\n",
                      "markdown": "`        check_label(label)\n      File \"/home/mahmoud/virtualenvs/hyperlink/local/lib/python2.7/site-packages/idna/core.py\", line 253, in check_label\n        raise InvalidCodepoint('Codepoint {0} at position {1} of {2} not allowed'.format(_unot(cp_value), pos+1, repr(label)))\n    idna.core.InvalidCodepoint: Codepoint U+004D at position 1 of u'Mahm\\xf6ud' not allowed\n    >> idna.encode(u'Mahmoud.io')\n    'Mahmoud.io'\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 808,
                  "startColumn": 45,
                  "endLine": 808,
                  "endColumn": 49,
                  "snippet": {
                    "text": "      File \"/home/mahmoud/virtualenvs/hyperlink/local/lib/python2.7/site-packages/idna/core.py\", line 276, in alabel\n        check_label(label)\n      File \"/home/mahmoud/virtualenvs/hyperlink/local/lib/python2.7/site-packages/idna/core.py\", line 253, in check_label\n        raise InvalidCodepoint('Codepoint {0} at position {1} of {2} not allowed'.format(_unot(cp_value), pos+1, repr(label)))\n    idna.core.InvalidCodepoint: Codepoint U+004D at position 1 of u'Mahm\\xf6ud' not allowed\n    >> idna.encode(u'Mahmoud.io')\n    'Mahmoud.io'\n",
                    "rendered": {
                      "text": "      File \"/home/mahmoud/virtualenvs/hyperlink/local/lib/python2.7/site-packages/idna/core.py\", line 276, in alabel\n        check_label(label)\n      File \"/home/mahmoud/virtualenvs/hyperlink/local/lib/python2.7/site-packages/idna/core.py\", line 253, in check_label\n        raise InvalidCodepoint('Codepoint {0} at position {1} of {2} not allowed'.format(_unot(cp_value), pos+1, repr(label)))\n    idna.core.InvalidCodepoint: Codepoint U+004D at position 1 of u'Mahm\\xf6ud' not allowed\n    >> idna.encode(u'Mahmoud.io')\n    'Mahmoud.io'\n",
                      "markdown": "`      File \"/home/mahmoud/virtualenvs/hyperlink/local/lib/python2.7/site-packages/idna/core.py\", line 276, in alabel\n        check_label(label)\n      File \"/home/mahmoud/virtualenvs/hyperlink/local/lib/python2.7/site-packages/idna/core.py\", line 253, in check_label\n        raise InvalidCodepoint('Codepoint {0} at position {1} of {2} not allowed'.format(_unot(cp_value), pos+1, repr(label)))\n    idna.core.InvalidCodepoint: Codepoint U+004D at position 1 of u'Mahm\\xf6ud' not allowed\n    >> idna.encode(u'Mahmoud.io')\n    'Mahmoud.io'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 785,
                  "startColumn": 50,
                  "endLine": 785,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    Capital letters are not valid IDNA2008. The idna package will\n    raise an exception like this on capital letters:\n\n    > idna.core.InvalidCodepoint: Codepoint U+004B at position 1 ... not allowed\n\n    However, if a segment of a host (i.e., something in\n    url.host.split('.')) is already ASCII, idna doesn't perform its\n",
                    "rendered": {
                      "text": "    Capital letters are not valid IDNA2008. The idna package will\n    raise an exception like this on capital letters:\n\n    > idna.core.InvalidCodepoint: Codepoint U+004B at position 1 ... not allowed\n\n    However, if a segment of a host (i.e., something in\n    url.host.split('.')) is already ASCII, idna doesn't perform its\n",
                      "markdown": "`    Capital letters are not valid IDNA2008. The idna package will\n    raise an exception like this on capital letters:\n\n    > idna.core.InvalidCodepoint: Codepoint U+004B at position 1 ... not allowed\n\n    However, if a segment of a host (i.e., something in\n    url.host.split('.')) is already ASCII, idna doesn't perform its\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 1083,
                  "startColumn": 7,
                  "endLine": 1083,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        # type: () -> Text\n        \"\"\"The host is a string, and the second standard part of an absolute\n        URL. When present, a valid host must be a domain name, or an\n        IP (v4 or v6). It occurs before the first slash, or the second\n        colon, if a :attr:`~hyperlink.URL.port` is provided.\n        \"\"\"\n        return self._host\n",
                    "rendered": {
                      "text": "        # type: () -> Text\n        \"\"\"The host is a string, and the second standard part of an absolute\n        URL. When present, a valid host must be a domain name, or an\n        IP (v4 or v6). It occurs before the first slash, or the second\n        colon, if a :attr:`~hyperlink.URL.port` is provided.\n        \"\"\"\n        return self._host\n",
                      "markdown": "`        # type: () -> Text\n        \"\"\"The host is a string, and the second standard part of an absolute\n        URL. When present, a valid host must be a domain name, or an\n        IP (v4 or v6). It occurs before the first slash, or the second\n        colon, if a :attr:`~hyperlink.URL.port` is provided.\n        \"\"\"\n        return self._host\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 903,
                  "startColumn": 35,
                  "endLine": 904,
                  "snippet": {
                    "text": "        try:\n            inet_pton(AF_INET, host)\n        except (socket.error, UnicodeEncodeError):\n            family = None  # not an IP\n        else:\n            family = AF_INET\n\n    return family, host\n",
                    "rendered": {
                      "text": "        try:\n            inet_pton(AF_INET, host)\n        except (socket.error, UnicodeEncodeError):\n            family = None  # not an IP\n        else:\n            family = AF_INET\n\n    return family, host\n",
                      "markdown": "`        try:\n            inet_pton(AF_INET, host)\n        except (socket.error, UnicodeEncodeError):\n            family = None  # not an IP\n        else:\n            family = AF_INET\n\n    return family, host\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 872,
                  "startColumn": 6,
                  "endLine": 872,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    # type: (Text) -> Tuple[Optional[AddressFamily], Text]\n    \"\"\"Parse the host into a tuple of ``(family, host)``, where family\n    is the appropriate :mod:`socket` module constant when the host is\n    an IP address. Family is ``None`` when the host is not an IP.\n\n    Will raise :class:`URLParseError` on invalid IPv6 constants.\n\n",
                    "rendered": {
                      "text": "    # type: (Text) -> Tuple[Optional[AddressFamily], Text]\n    \"\"\"Parse the host into a tuple of ``(family, host)``, where family\n    is the appropriate :mod:`socket` module constant when the host is\n    an IP address. Family is ``None`` when the host is not an IP.\n\n    Will raise :class:`URLParseError` on invalid IPv6 constants.\n\n",
                      "markdown": "`    # type: (Text) -> Tuple[Optional[AddressFamily], Text]\n    \"\"\"Parse the host into a tuple of ``(family, host)``, where family\n    is the appropriate :mod:`socket` module constant when the host is\n    an IP address. Family is ``None`` when the host is not an IP.\n\n    Will raise :class:`URLParseError` on invalid IPv6 constants.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/_url.py"
                },
                "region": {
                  "startLine": 779,
                  "startColumn": 52,
                  "endLine": 779,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    the host text is not ASCII, it is returned unchanged, as it is\n    presumed that it is already IDNA-decoded.\n\n    Some technical details: _decode_host is built on top of the \"idna\"\n    package, which has some quirks:\n\n    Capital letters are not valid IDNA2008. The idna package will\n",
                    "rendered": {
                      "text": "    the host text is not ASCII, it is returned unchanged, as it is\n    presumed that it is already IDNA-decoded.\n\n    Some technical details: _decode_host is built on top of the \"idna\"\n    package, which has some quirks:\n\n    Capital letters are not valid IDNA2008. The idna package will\n",
                      "markdown": "`    the host text is not ASCII, it is returned unchanged, as it is\n    presumed that it is already IDNA-decoded.\n\n    Some technical details: _decode_host is built on top of the \"idna\"\n    package, which has some quirks:\n\n    Capital letters are not valid IDNA2008. The idna package will\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 1420,
                  "startColumn": 23,
                  "endLine": 1420,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        assert norm_url.scheme == \"http\"\n        assert norm_url.host == \"example.com\"\n        assert norm_url.path == (\"Aa\",)\n        assert norm_url.get(\"Bb\") == [\"Cc\"]\n        assert norm_url.fragment == \"Dd\"\n        assert norm_url.to_text() == \"http://example.com/Aa?Bb=Cc#Dd\"\n\n",
                    "rendered": {
                      "text": "        assert norm_url.scheme == \"http\"\n        assert norm_url.host == \"example.com\"\n        assert norm_url.path == (\"Aa\",)\n        assert norm_url.get(\"Bb\") == [\"Cc\"]\n        assert norm_url.fragment == \"Dd\"\n        assert norm_url.to_text() == \"http://example.com/Aa?Bb=Cc#Dd\"\n\n",
                      "markdown": "`        assert norm_url.scheme == \"http\"\n        assert norm_url.host == \"example.com\"\n        assert norm_url.path == (\"Aa\",)\n        assert norm_url.get(\"Bb\") == [\"Cc\"]\n        assert norm_url.fragment == \"Dd\"\n        assert norm_url.to_text() == \"http://example.com/Aa?Bb=Cc#Dd\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 1411,
                  "startColumn": 18,
                  "endLine": 1411,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        # type: () -> None\n        url = URL.from_text(\"HTTP://Example.com/A%61/./../A%61?B%62=C%63#D%64\")\n        assert url.get(\"Bb\") == []\n        assert url.get(\"B%62\") == [\"C%63\"]\n        assert len(url.path) == 4\n\n        # test that most expected normalizations happen\n",
                    "rendered": {
                      "text": "        # type: () -> None\n        url = URL.from_text(\"HTTP://Example.com/A%61/./../A%61?B%62=C%63#D%64\")\n        assert url.get(\"Bb\") == []\n        assert url.get(\"B%62\") == [\"C%63\"]\n        assert len(url.path) == 4\n\n        # test that most expected normalizations happen\n",
                      "markdown": "`        # type: () -> None\n        url = URL.from_text(\"HTTP://Example.com/A%61/./../A%61?B%62=C%63#D%64\")\n        assert url.get(\"Bb\") == []\n        assert url.get(\"B%62\") == [\"C%63\"]\n        assert len(url.path) == 4\n\n        # test that most expected normalizations happen\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 1410,
                  "startColumn": 18,
                  "endLine": 1410,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    def test_normalize(self):\n        # type: () -> None\n        url = URL.from_text(\"HTTP://Example.com/A%61/./../A%61?B%62=C%63#D%64\")\n        assert url.get(\"Bb\") == []\n        assert url.get(\"B%62\") == [\"C%63\"]\n        assert len(url.path) == 4\n\n",
                    "rendered": {
                      "text": "    def test_normalize(self):\n        # type: () -> None\n        url = URL.from_text(\"HTTP://Example.com/A%61/./../A%61?B%62=C%63#D%64\")\n        assert url.get(\"Bb\") == []\n        assert url.get(\"B%62\") == [\"C%63\"]\n        assert len(url.path) == 4\n\n",
                      "markdown": "`    def test_normalize(self):\n        # type: () -> None\n        url = URL.from_text(\"HTTP://Example.com/A%61/./../A%61?B%62=C%63#D%64\")\n        assert url.get(\"Bb\") == []\n        assert url.get(\"B%62\") == [\"C%63\"]\n        assert len(url.path) == 4\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 662,
                  "startColumn": 37,
                  "endLine": 662,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        iri = u.to_iri()\n        self.assertEqual(iri.get(\"operator\"), [\"=\"])\n        # assert that the equals is not unnecessarily escaped\n        self.assertEqual(iri.to_uri().get(\"operator\"), [\"=\"])\n\n    def test_empty(self):\n        # type: () -> None\n",
                    "rendered": {
                      "text": "        iri = u.to_iri()\n        self.assertEqual(iri.get(\"operator\"), [\"=\"])\n        # assert that the equals is not unnecessarily escaped\n        self.assertEqual(iri.to_uri().get(\"operator\"), [\"=\"])\n\n    def test_empty(self):\n        # type: () -> None\n",
                      "markdown": "`        iri = u.to_iri()\n        self.assertEqual(iri.get(\"operator\"), [\"=\"])\n        # assert that the equals is not unnecessarily escaped\n        self.assertEqual(iri.to_uri().get(\"operator\"), [\"=\"])\n\n    def test_empty(self):\n        # type: () -> None\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 660,
                  "startColumn": 28,
                  "endLine": 660,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            \"https://example.com/?argument=3&argument=4&operator=%3D\"\n        )\n        iri = u.to_iri()\n        self.assertEqual(iri.get(\"operator\"), [\"=\"])\n        # assert that the equals is not unnecessarily escaped\n        self.assertEqual(iri.to_uri().get(\"operator\"), [\"=\"])\n\n",
                    "rendered": {
                      "text": "            \"https://example.com/?argument=3&argument=4&operator=%3D\"\n        )\n        iri = u.to_iri()\n        self.assertEqual(iri.get(\"operator\"), [\"=\"])\n        # assert that the equals is not unnecessarily escaped\n        self.assertEqual(iri.to_uri().get(\"operator\"), [\"=\"])\n\n",
                      "markdown": "`            \"https://example.com/?argument=3&argument=4&operator=%3D\"\n        )\n        iri = u.to_iri()\n        self.assertEqual(iri.get(\"operator\"), [\"=\"])\n        # assert that the equals is not unnecessarily escaped\n        self.assertEqual(iri.to_uri().get(\"operator\"), [\"=\"])\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 650,
                  "startColumn": 26,
                  "endLine": 650,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        in the value of the parameter.\n        \"\"\"\n        u = URL.from_text(\"http://localhost/?=x=x=x\")\n        self.assertEqual(u.get(\"\"), [\"x=x=x\"])\n        self.assertEqual(u.to_text(), \"http://localhost/?=x=x=x\")\n        u = URL.from_text(\"http://localhost/?foo=x=x=x&bar=y\")\n        self.assertEqual(u.query, ((\"foo\", \"x=x=x\"), (\"bar\", \"y\")))\n",
                    "rendered": {
                      "text": "        in the value of the parameter.\n        \"\"\"\n        u = URL.from_text(\"http://localhost/?=x=x=x\")\n        self.assertEqual(u.get(\"\"), [\"x=x=x\"])\n        self.assertEqual(u.to_text(), \"http://localhost/?=x=x=x\")\n        u = URL.from_text(\"http://localhost/?foo=x=x=x&bar=y\")\n        self.assertEqual(u.query, ((\"foo\", \"x=x=x\"), (\"bar\", \"y\")))\n",
                      "markdown": "`        in the value of the parameter.\n        \"\"\"\n        u = URL.from_text(\"http://localhost/?=x=x=x\")\n        self.assertEqual(u.get(\"\"), [\"x=x=x\"])\n        self.assertEqual(u.to_text(), \"http://localhost/?=x=x=x\")\n        u = URL.from_text(\"http://localhost/?foo=x=x=x&bar=y\")\n        self.assertEqual(u.query, ((\"foo\", \"x=x=x\"), (\"bar\", \"y\")))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 1460,
                  "startColumn": 50,
                  "endLine": 1460,
                  "endColumn": 58,
                  "snippet": {
                    "text": "            == \"ftp://%:%@/%%%/%a%b?%=%%#%\"\n        )\n        assert (\n            percenty_url.normalize().to_text(with_password=True)\n            == \"ftp://%25:%25@/%25%25%25/%25a%25b?%25=%25%25#%25\"\n        )\n\n",
                    "rendered": {
                      "text": "            == \"ftp://%:%@/%%%/%a%b?%=%%#%\"\n        )\n        assert (\n            percenty_url.normalize().to_text(with_password=True)\n            == \"ftp://%25:%25@/%25%25%25/%25a%25b?%25=%25%25#%25\"\n        )\n\n",
                      "markdown": "`            == \"ftp://%:%@/%%%/%a%b?%=%%#%\"\n        )\n        assert (\n            percenty_url.normalize().to_text(with_password=True)\n            == \"ftp://%25:%25@/%25%25%25/%25a%25b?%25=%25%25#%25\"\n        )\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 1456,
                  "startColumn": 38,
                  "endLine": 1456,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        )\n\n        assert (\n            percenty_url.to_text(with_password=True)\n            == \"ftp://%:%@/%%%/%a%b?%=%%#%\"\n        )\n        assert (\n",
                    "rendered": {
                      "text": "        )\n\n        assert (\n            percenty_url.to_text(with_password=True)\n            == \"ftp://%:%@/%%%/%a%b?%=%%#%\"\n        )\n        assert (\n",
                      "markdown": "`        )\n\n        assert (\n            percenty_url.to_text(with_password=True)\n            == \"ftp://%:%@/%%%/%a%b?%=%%#%\"\n        )\n        assert (\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 1276,
                  "startColumn": 38,
                  "endLine": 1276,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        )\n        assert iri.to_text(with_password=False) == \"http://us her:@example.com\"\n        assert (\n            iri.to_uri().to_text(with_password=True)\n            == \"http://us%20her:pass@example.com\"\n        )\n\n",
                    "rendered": {
                      "text": "        )\n        assert iri.to_text(with_password=False) == \"http://us her:@example.com\"\n        assert (\n            iri.to_uri().to_text(with_password=True)\n            == \"http://us%20her:pass@example.com\"\n        )\n\n",
                      "markdown": "`        )\n        assert iri.to_text(with_password=False) == \"http://us her:@example.com\"\n        assert (\n            iri.to_uri().to_text(with_password=True)\n            == \"http://us%20her:pass@example.com\"\n        )\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 1274,
                  "startColumn": 32,
                  "endLine": 1274,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        assert (\n            iri.to_text(with_password=True) == \"http://us her:pass@example.com\"\n        )\n        assert iri.to_text(with_password=False) == \"http://us her:@example.com\"\n        assert (\n            iri.to_uri().to_text(with_password=True)\n            == \"http://us%20her:pass@example.com\"\n",
                    "rendered": {
                      "text": "        assert (\n            iri.to_text(with_password=True) == \"http://us her:pass@example.com\"\n        )\n        assert iri.to_text(with_password=False) == \"http://us her:@example.com\"\n        assert (\n            iri.to_uri().to_text(with_password=True)\n            == \"http://us%20her:pass@example.com\"\n",
                      "markdown": "`        assert (\n            iri.to_text(with_password=True) == \"http://us her:pass@example.com\"\n        )\n        assert iri.to_text(with_password=False) == \"http://us her:@example.com\"\n        assert (\n            iri.to_uri().to_text(with_password=True)\n            == \"http://us%20her:pass@example.com\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 1272,
                  "startColumn": 29,
                  "endLine": 1272,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        url = url.replace(userinfo=\"us%20her:pass\")\n        iri = url.to_iri()\n        assert (\n            iri.to_text(with_password=True) == \"http://us her:pass@example.com\"\n        )\n        assert iri.to_text(with_password=False) == \"http://us her:@example.com\"\n        assert (\n",
                    "rendered": {
                      "text": "        url = url.replace(userinfo=\"us%20her:pass\")\n        iri = url.to_iri()\n        assert (\n            iri.to_text(with_password=True) == \"http://us her:pass@example.com\"\n        )\n        assert iri.to_text(with_password=False) == \"http://us her:@example.com\"\n        assert (\n",
                      "markdown": "`        url = url.replace(userinfo=\"us%20her:pass\")\n        iri = url.to_iri()\n        assert (\n            iri.to_text(with_password=True) == \"http://us her:pass@example.com\"\n        )\n        assert iri.to_text(with_password=False) == \"http://us her:@example.com\"\n        assert (\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 861,
                  "startColumn": 53,
                  "endLine": 861,
                  "endColumn": 61,
                  "snippet": {
                    "text": "            url.authority(True), \"someuser:somepassword@example.com\"\n        )\n        self.assertEqual(url.authority(False), \"someuser:@example.com\")\n        self.assertEqual(url.userinfo, \"someuser:somepassword\")\n        self.assertEqual(url.user, \"someuser\")\n        self.assertEqual(\n            url.to_text(), \"http://someuser:@example.com/some-segment@ignore\"\n",
                    "rendered": {
                      "text": "            url.authority(True), \"someuser:somepassword@example.com\"\n        )\n        self.assertEqual(url.authority(False), \"someuser:@example.com\")\n        self.assertEqual(url.userinfo, \"someuser:somepassword\")\n        self.assertEqual(url.user, \"someuser\")\n        self.assertEqual(\n            url.to_text(), \"http://someuser:@example.com/some-segment@ignore\"\n",
                      "markdown": "`            url.authority(True), \"someuser:somepassword@example.com\"\n        )\n        self.assertEqual(url.authority(False), \"someuser:@example.com\")\n        self.assertEqual(url.userinfo, \"someuser:somepassword\")\n        self.assertEqual(url.user, \"someuser\")\n        self.assertEqual(\n            url.to_text(), \"http://someuser:@example.com/some-segment@ignore\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 858,
                  "startColumn": 47,
                  "endLine": 858,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            \"http://someuser:somepassword@example.com/some-segment@ignore\"\n        )\n        self.assertEqual(\n            url.authority(True), \"someuser:somepassword@example.com\"\n        )\n        self.assertEqual(url.authority(False), \"someuser:@example.com\")\n        self.assertEqual(url.userinfo, \"someuser:somepassword\")\n",
                    "rendered": {
                      "text": "            \"http://someuser:somepassword@example.com/some-segment@ignore\"\n        )\n        self.assertEqual(\n            url.authority(True), \"someuser:somepassword@example.com\"\n        )\n        self.assertEqual(url.authority(False), \"someuser:@example.com\")\n        self.assertEqual(url.userinfo, \"someuser:somepassword\")\n",
                      "markdown": "`            \"http://someuser:somepassword@example.com/some-segment@ignore\"\n        )\n        self.assertEqual(\n            url.authority(True), \"someuser:somepassword@example.com\"\n        )\n        self.assertEqual(url.authority(False), \"someuser:@example.com\")\n        self.assertEqual(url.userinfo, \"someuser:somepassword\")\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 855,
                  "startColumn": 33,
                  "endLine": 855,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        separately from the host and port.\n        \"\"\"\n        url = URL.from_text(\n            \"http://someuser:somepassword@example.com/some-segment@ignore\"\n        )\n        self.assertEqual(\n            url.authority(True), \"someuser:somepassword@example.com\"\n",
                    "rendered": {
                      "text": "        separately from the host and port.\n        \"\"\"\n        url = URL.from_text(\n            \"http://someuser:somepassword@example.com/some-segment@ignore\"\n        )\n        self.assertEqual(\n            url.authority(True), \"someuser:somepassword@example.com\"\n",
                      "markdown": "`        separately from the host and port.\n        \"\"\"\n        url = URL.from_text(\n            \"http://someuser:somepassword@example.com/some-segment@ignore\"\n        )\n        self.assertEqual(\n            url.authority(True), \"someuser:somepassword@example.com\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 54,
                  "endLine": 311,
                  "endColumn": 62,
                  "snippet": {
                    "text": "            assert iri == double_iri\n\n            iri_text = iri.to_text(with_password=True)\n            double_iri_text = double_iri.to_text(with_password=True)\n            assert iri_text == double_iri_text\n        return\n\n",
                    "rendered": {
                      "text": "            assert iri == double_iri\n\n            iri_text = iri.to_text(with_password=True)\n            double_iri_text = double_iri.to_text(with_password=True)\n            assert iri_text == double_iri_text\n        return\n\n",
                      "markdown": "`            assert iri == double_iri\n\n            iri_text = iri.to_text(with_password=True)\n            double_iri_text = double_iri.to_text(with_password=True)\n            assert iri_text == double_iri_text\n        return\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 40,
                  "endLine": 310,
                  "endColumn": 48,
                  "snippet": {
                    "text": "            double_iri = iri.to_iri()\n            assert iri == double_iri\n\n            iri_text = iri.to_text(with_password=True)\n            double_iri_text = double_iri.to_text(with_password=True)\n            assert iri_text == double_iri_text\n        return\n",
                    "rendered": {
                      "text": "            double_iri = iri.to_iri()\n            assert iri == double_iri\n\n            iri_text = iri.to_text(with_password=True)\n            double_iri_text = double_iri.to_text(with_password=True)\n            assert iri_text == double_iri_text\n        return\n",
                      "markdown": "`            double_iri = iri.to_iri()\n            assert iri == double_iri\n\n            iri_text = iri.to_text(with_password=True)\n            double_iri_text = double_iri.to_text(with_password=True)\n            assert iri_text == double_iri_text\n        return\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 54,
                  "endLine": 299,
                  "endColumn": 62,
                  "snippet": {
                    "text": "        L{URL.to_text} should invert L{URL.from_text}.\n        \"\"\"\n        for test in ROUNDTRIP_TESTS:\n            result = URL.from_text(test).to_text(with_password=True)\n            self.assertEqual(test, result)\n\n    def test_roundtrip_double_iri(self):\n",
                    "rendered": {
                      "text": "        L{URL.to_text} should invert L{URL.from_text}.\n        \"\"\"\n        for test in ROUNDTRIP_TESTS:\n            result = URL.from_text(test).to_text(with_password=True)\n            self.assertEqual(test, result)\n\n    def test_roundtrip_double_iri(self):\n",
                      "markdown": "`        L{URL.to_text} should invert L{URL.from_text}.\n        \"\"\"\n        for test in ROUNDTRIP_TESTS:\n            result = URL.from_text(test).to_text(with_password=True)\n            self.assertEqual(test, result)\n\n    def test_roundtrip_double_iri(self):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 54,
                  "endLine": 126,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n    \"https://example.com/%2F/\",  # slash in path\n    \"https://example.com/%3F/\",  # question mark in path\n    \"https://example.com/%23/\",  # hash in path\n",
                    "rendered": {
                      "text": "    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n    \"https://example.com/%2F/\",  # slash in path\n    \"https://example.com/%3F/\",  # question mark in path\n    \"https://example.com/%23/\",  # hash in path\n",
                      "markdown": "`    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n    \"https://example.com/%2F/\",  # slash in path\n    \"https://example.com/%3F/\",  # question mark in path\n    \"https://example.com/%23/\",  # hash in path\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 46,
                  "endLine": 125,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n    \"https://example.com/%2F/\",  # slash in path\n    \"https://example.com/%3F/\",  # question mark in path\n",
                    "rendered": {
                      "text": "    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n    \"https://example.com/%2F/\",  # slash in path\n    \"https://example.com/%3F/\",  # question mark in path\n",
                      "markdown": "`    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n    \"https://example.com/%2F/\",  # slash in path\n    \"https://example.com/%3F/\",  # question mark in path\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 48,
                  "endLine": 124,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    \"https://%40@example.com/\",  # at sign in username\n    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n    \"https://example.com/%2F/\",  # slash in path\n",
                    "rendered": {
                      "text": "    \"https://%40@example.com/\",  # at sign in username\n    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n    \"https://example.com/%2F/\",  # slash in path\n",
                      "markdown": "`    \"https://%40@example.com/\",  # at sign in username\n    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n    \"https://example.com/%2F/\",  # slash in path\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 46,
                  "endLine": 123,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    \"https://%3A@example.com/\",  # colon in username\n    \"https://%40@example.com/\",  # at sign in username\n    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n",
                    "rendered": {
                      "text": "    \"https://%3A@example.com/\",  # colon in username\n    \"https://%40@example.com/\",  # at sign in username\n    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n",
                      "markdown": "`    \"https://%3A@example.com/\",  # colon in username\n    \"https://%40@example.com/\",  # at sign in username\n    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 896,
                  "startColumn": 30,
                  "endLine": 896,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    def test_httpWithoutHost(self):\n        # type: () -> None\n        \"\"\"\n        An HTTP URL without a hostname, but with a path, should also round-trip\n        cleanly.\n        \"\"\"\n        without_host = URL.from_text(\"http:relative-path\")\n",
                    "rendered": {
                      "text": "    def test_httpWithoutHost(self):\n        # type: () -> None\n        \"\"\"\n        An HTTP URL without a hostname, but with a path, should also round-trip\n        cleanly.\n        \"\"\"\n        without_host = URL.from_text(\"http:relative-path\")\n",
                      "markdown": "`    def test_httpWithoutHost(self):\n        # type: () -> None\n        \"\"\"\n        An HTTP URL without a hostname, but with a path, should also round-trip\n        cleanly.\n        \"\"\"\n        without_host = URL.from_text(\"http:relative-path\")\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 1430,
                  "startColumn": 35,
                  "endLine": 1430,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        )\n        assert noop_norm_url == url\n\n        # test that empty paths get at least one slash\n        slashless_url = URL.from_text(\"http://example.io\")\n        slashful_url = slashless_url.normalize()\n        assert slashful_url.to_text() == \"http://example.io/\"\n",
                    "rendered": {
                      "text": "        )\n        assert noop_norm_url == url\n\n        # test that empty paths get at least one slash\n        slashless_url = URL.from_text(\"http://example.io\")\n        slashful_url = slashless_url.normalize()\n        assert slashful_url.to_text() == \"http://example.io/\"\n",
                      "markdown": "`        )\n        assert noop_norm_url == url\n\n        # test that empty paths get at least one slash\n        slashless_url = URL.from_text(\"http://example.io\")\n        slashful_url = slashless_url.normalize()\n        assert slashful_url.to_text() == \"http://example.io/\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 36,
                  "endLine": 124,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    \"https://%40@example.com/\",  # at sign in username\n    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n    \"https://example.com/%2F/\",  # slash in path\n",
                    "rendered": {
                      "text": "    \"https://%40@example.com/\",  # at sign in username\n    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n    \"https://example.com/%2F/\",  # slash in path\n",
                      "markdown": "`    \"https://%40@example.com/\",  # at sign in username\n    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n    \"https://a:%2f@example.com/\",  # slash in password\n    \"https://a:%3f@example.com/\",  # question mark in password\n    \"https://example.com/%2F/\",  # slash in path\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 34,
                  "endLine": 121,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    ),\n    # percent-encoded delimiters in percent-encodable fields\n    \"https://%3A@example.com/\",  # colon in username\n    \"https://%40@example.com/\",  # at sign in username\n    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n",
                    "rendered": {
                      "text": "    ),\n    # percent-encoded delimiters in percent-encodable fields\n    \"https://%3A@example.com/\",  # colon in username\n    \"https://%40@example.com/\",  # at sign in username\n    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n",
                      "markdown": "`    ),\n    # percent-encoded delimiters in percent-encodable fields\n    \"https://%3A@example.com/\",  # colon in username\n    \"https://%40@example.com/\",  # at sign in username\n    \"https://%2f@example.com/\",  # slash in username\n    \"https://a:%3a@example.com/\",  # colon in password\n    \"https://a:%40@example.com/\",  # at sign in password\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 1110,
                  "startColumn": 35,
                  "endLine": 1110,
                  "endColumn": 39,
                  "snippet": {
                    "text": "            \"::256.0.0.1\",\n        ]\n        for ip in invalid_ipv6_ips:\n            url_text = \"http://[\" + ip + \"]\"\n            self.assertRaises(socket.error, inet_pton, socket.AF_INET6, ip)\n            self.assertRaises(URLParseError, URL.from_text, url_text)\n\n",
                    "rendered": {
                      "text": "            \"::256.0.0.1\",\n        ]\n        for ip in invalid_ipv6_ips:\n            url_text = \"http://[\" + ip + \"]\"\n            self.assertRaises(socket.error, inet_pton, socket.AF_INET6, ip)\n            self.assertRaises(URLParseError, URL.from_text, url_text)\n\n",
                      "markdown": "`            \"::256.0.0.1\",\n        ]\n        for ip in invalid_ipv6_ips:\n            url_text = \"http://[\" + ip + \"]\"\n            self.assertRaises(socket.error, inet_pton, socket.AF_INET6, ip)\n            self.assertRaises(URLParseError, URL.from_text, url_text)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_url.py"
                },
                "region": {
                  "startLine": 1109,
                  "startColumn": 11,
                  "endLine": 1109,
                  "endColumn": 15,
                  "snippet": {
                    "text": "            \"::::\",\n            \"::256.0.0.1\",\n        ]\n        for ip in invalid_ipv6_ips:\n            url_text = \"http://[\" + ip + \"]\"\n            self.assertRaises(socket.error, inet_pton, socket.AF_INET6, ip)\n            self.assertRaises(URLParseError, URL.from_text, url_text)\n",
                    "rendered": {
                      "text": "            \"::::\",\n            \"::256.0.0.1\",\n        ]\n        for ip in invalid_ipv6_ips:\n            url_text = \"http://[\" + ip + \"]\"\n            self.assertRaises(socket.error, inet_pton, socket.AF_INET6, ip)\n            self.assertRaises(URLParseError, URL.from_text, url_text)\n",
                      "markdown": "`            \"::::\",\n            \"::256.0.0.1\",\n        ]\n        for ip in invalid_ipv6_ips:\n            url_text = \"http://[\" + ip + \"]\"\n            self.assertRaises(socket.error, inet_pton, socket.AF_INET6, ip)\n            self.assertRaises(URLParseError, URL.from_text, url_text)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_socket.py"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 13,
                  "endLine": 37,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n        def test_inet_pton_bogus_family(self):\n            # type: () -> None\n            # Find an integer not associated with a known address family\n            i = int(socket.AF_INET6)\n            while True:\n                if i != socket.AF_INET and i != socket.AF_INET6:\n",
                    "rendered": {
                      "text": "\n        def test_inet_pton_bogus_family(self):\n            # type: () -> None\n            # Find an integer not associated with a known address family\n            i = int(socket.AF_INET6)\n            while True:\n                if i != socket.AF_INET and i != socket.AF_INET6:\n",
                      "markdown": "`\n        def test_inet_pton_bogus_family(self):\n            # type: () -> None\n            # Find an integer not associated with a known address family\n            i = int(socket.AF_INET6)\n            while True:\n                if i != socket.AF_INET and i != socket.AF_INET6:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_scheme_registration.py"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 28,
                  "endLine": 82,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        )\n        plus_is_space = DecodedURL.from_text(\"https://example.com/?q=a+b\")\n        assert plus_is_not_space.get(\"q\") == [\"a+b\"]\n        assert plus_is_space.get(\"q\") == [\"a b\"]\n",
                    "rendered": {
                      "text": "        )\n        plus_is_space = DecodedURL.from_text(\"https://example.com/?q=a+b\")\n        assert plus_is_not_space.get(\"q\") == [\"a+b\"]\n        assert plus_is_space.get(\"q\") == [\"a b\"]\n",
                      "markdown": "`        )\n        plus_is_space = DecodedURL.from_text(\"https://example.com/?q=a+b\")\n        assert plus_is_not_space.get(\"q\") == [\"a+b\"]\n        assert plus_is_space.get(\"q\") == [\"a b\"]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_scheme_registration.py"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 32,
                  "endLine": 81,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            \"keepplus://example.com/?q=a+b\"\n        )\n        plus_is_space = DecodedURL.from_text(\"https://example.com/?q=a+b\")\n        assert plus_is_not_space.get(\"q\") == [\"a+b\"]\n        assert plus_is_space.get(\"q\") == [\"a b\"]\n",
                    "rendered": {
                      "text": "            \"keepplus://example.com/?q=a+b\"\n        )\n        plus_is_space = DecodedURL.from_text(\"https://example.com/?q=a+b\")\n        assert plus_is_not_space.get(\"q\") == [\"a+b\"]\n        assert plus_is_space.get(\"q\") == [\"a b\"]\n",
                      "markdown": "`            \"keepplus://example.com/?q=a+b\"\n        )\n        plus_is_space = DecodedURL.from_text(\"https://example.com/?q=a+b\")\n        assert plus_is_not_space.get(\"q\") == [\"a+b\"]\n        assert plus_is_space.get(\"q\") == [\"a b\"]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_parse.py"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 20,
                  "endLine": 29,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n        purl2 = parse(TOTAL_URL, decoded=False)\n        assert isinstance(purl2, EncodedURL)\n        assert purl2.get(\"zot\") == [\"23%25\"]\n\n        with self.assertRaises(UnicodeDecodeError):\n            purl3 = parse(UNDECODABLE_FRAG_URL)\n",
                    "rendered": {
                      "text": "\n        purl2 = parse(TOTAL_URL, decoded=False)\n        assert isinstance(purl2, EncodedURL)\n        assert purl2.get(\"zot\") == [\"23%25\"]\n\n        with self.assertRaises(UnicodeDecodeError):\n            purl3 = parse(UNDECODABLE_FRAG_URL)\n",
                      "markdown": "`\n        purl2 = parse(TOTAL_URL, decoded=False)\n        assert isinstance(purl2, EncodedURL)\n        assert purl2.get(\"zot\") == [\"23%25\"]\n\n        with self.assertRaises(UnicodeDecodeError):\n            purl3 = parse(UNDECODABLE_FRAG_URL)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_parse.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 19,
                  "endLine": 24,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        purl = parse(TOTAL_URL)\n        assert isinstance(purl, DecodedURL)\n        assert purl.user == \"user\"\n        assert purl.get(\"zot\") == [\"23%\"]\n        assert purl.fragment == \"frég\"\n\n        purl2 = parse(TOTAL_URL, decoded=False)\n",
                    "rendered": {
                      "text": "        purl = parse(TOTAL_URL)\n        assert isinstance(purl, DecodedURL)\n        assert purl.user == \"user\"\n        assert purl.get(\"zot\") == [\"23%\"]\n        assert purl.fragment == \"frég\"\n\n        purl2 = parse(TOTAL_URL, decoded=False)\n",
                      "markdown": "`        purl = parse(TOTAL_URL)\n        assert isinstance(purl, DecodedURL)\n        assert purl.user == \"user\"\n        assert purl.get(\"zot\") == [\"23%\"]\n        assert purl.fragment == \"frég\"\n\n        purl2 = parse(TOTAL_URL, decoded=False)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 40,
                  "endLine": 183,
                  "endColumn": 48,
                  "snippet": {
                    "text": "            hostnames(allow_leading_digit=False, allow_idn=False) generates\n            ASCII host names without leading digits.\n            \"\"\"\n            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(paths())\n        def test_paths(self, path):\n",
                    "rendered": {
                      "text": "            hostnames(allow_leading_digit=False, allow_idn=False) generates\n            ASCII host names without leading digits.\n            \"\"\"\n            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(paths())\n        def test_paths(self, path):\n",
                      "markdown": "`            hostnames(allow_leading_digit=False, allow_idn=False) generates\n            ASCII host names without leading digits.\n            \"\"\"\n            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(paths())\n        def test_paths(self, path):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 28,
                  "endLine": 183,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            hostnames(allow_leading_digit=False, allow_idn=False) generates\n            ASCII host names without leading digits.\n            \"\"\"\n            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(paths())\n        def test_paths(self, path):\n",
                    "rendered": {
                      "text": "            hostnames(allow_leading_digit=False, allow_idn=False) generates\n            ASCII host names without leading digits.\n            \"\"\"\n            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(paths())\n        def test_paths(self, path):\n",
                      "markdown": "`            hostnames(allow_leading_digit=False, allow_idn=False) generates\n            ASCII host names without leading digits.\n            \"\"\"\n            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(paths())\n        def test_paths(self, path):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 46,
                  "endLine": 177,
                  "endColumn": 54,
                  "snippet": {
                    "text": "                )\n\n        @given(hostnames(allow_leading_digit=False, allow_idn=False))\n        def test_hostnames_ascii_nolead(self, hostname):\n            # type: (Text) -> None\n            \"\"\"\n            hostnames(allow_leading_digit=False, allow_idn=False) generates\n",
                    "rendered": {
                      "text": "                )\n\n        @given(hostnames(allow_leading_digit=False, allow_idn=False))\n        def test_hostnames_ascii_nolead(self, hostname):\n            # type: (Text) -> None\n            \"\"\"\n            hostnames(allow_leading_digit=False, allow_idn=False) generates\n",
                      "markdown": "`                )\n\n        @given(hostnames(allow_leading_digit=False, allow_idn=False))\n        def test_hostnames_ascii_nolead(self, hostname):\n            # type: (Text) -> None\n            \"\"\"\n            hostnames(allow_leading_digit=False, allow_idn=False) generates\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 59,
                  "endLine": 173,
                  "endColumn": 67,
                  "snippet": {
                    "text": "                hostname.encode(\"ascii\")\n            except UnicodeError:  # pragma: no cover\n                raise AssertionError(\n                    \"Invalid ASCII host name: {!r}\".format(hostname)\n                )\n\n        @given(hostnames(allow_leading_digit=False, allow_idn=False))\n",
                    "rendered": {
                      "text": "                hostname.encode(\"ascii\")\n            except UnicodeError:  # pragma: no cover\n                raise AssertionError(\n                    \"Invalid ASCII host name: {!r}\".format(hostname)\n                )\n\n        @given(hostnames(allow_leading_digit=False, allow_idn=False))\n",
                      "markdown": "`                hostname.encode(\"ascii\")\n            except UnicodeError:  # pragma: no cover\n                raise AssertionError(\n                    \"Invalid ASCII host name: {!r}\".format(hostname)\n                )\n\n        @given(hostnames(allow_leading_digit=False, allow_idn=False))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 16,
                  "endLine": 170,
                  "endColumn": 24,
                  "snippet": {
                    "text": "            try:\n                for label in hostname.split(u\".\"):\n                    check_label(label)\n                hostname.encode(\"ascii\")\n            except UnicodeError:  # pragma: no cover\n                raise AssertionError(\n                    \"Invalid ASCII host name: {!r}\".format(hostname)\n",
                    "rendered": {
                      "text": "            try:\n                for label in hostname.split(u\".\"):\n                    check_label(label)\n                hostname.encode(\"ascii\")\n            except UnicodeError:  # pragma: no cover\n                raise AssertionError(\n                    \"Invalid ASCII host name: {!r}\".format(hostname)\n",
                      "markdown": "`            try:\n                for label in hostname.split(u\".\"):\n                    check_label(label)\n                hostname.encode(\"ascii\")\n            except UnicodeError:  # pragma: no cover\n                raise AssertionError(\n                    \"Invalid ASCII host name: {!r}\".format(hostname)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 29,
                  "endLine": 168,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            hostnames() generates a ASCII host names.\n            \"\"\"\n            try:\n                for label in hostname.split(u\".\"):\n                    check_label(label)\n                hostname.encode(\"ascii\")\n            except UnicodeError:  # pragma: no cover\n",
                    "rendered": {
                      "text": "            hostnames() generates a ASCII host names.\n            \"\"\"\n            try:\n                for label in hostname.split(u\".\"):\n                    check_label(label)\n                hostname.encode(\"ascii\")\n            except UnicodeError:  # pragma: no cover\n",
                      "markdown": "`            hostnames() generates a ASCII host names.\n            \"\"\"\n            try:\n                for label in hostname.split(u\".\"):\n                    check_label(label)\n                hostname.encode(\"ascii\")\n            except UnicodeError:  # pragma: no cover\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 39,
                  "endLine": 162,
                  "endColumn": 47,
                  "snippet": {
                    "text": "            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(hostnames(allow_idn=False))\n        def test_hostnames_ascii(self, hostname):\n            # type: (Text) -> None\n            \"\"\"\n            hostnames() generates a ASCII host names.\n",
                    "rendered": {
                      "text": "            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(hostnames(allow_idn=False))\n        def test_hostnames_ascii(self, hostname):\n            # type: (Text) -> None\n            \"\"\"\n            hostnames() generates a ASCII host names.\n",
                      "markdown": "`            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(hostnames(allow_idn=False))\n        def test_hostnames_ascii(self, hostname):\n            # type: (Text) -> None\n            \"\"\"\n            hostnames() generates a ASCII host names.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 40,
                  "endLine": 159,
                  "endColumn": 48,
                  "snippet": {
                    "text": "            hostnames(allow_leading_digit=False) generates a IDN host names\n            without leading digits.\n            \"\"\"\n            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(hostnames(allow_idn=False))\n        def test_hostnames_ascii(self, hostname):\n",
                    "rendered": {
                      "text": "            hostnames(allow_leading_digit=False) generates a IDN host names\n            without leading digits.\n            \"\"\"\n            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(hostnames(allow_idn=False))\n        def test_hostnames_ascii(self, hostname):\n",
                      "markdown": "`            hostnames(allow_leading_digit=False) generates a IDN host names\n            without leading digits.\n            \"\"\"\n            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(hostnames(allow_idn=False))\n        def test_hostnames_ascii(self, hostname):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 28,
                  "endLine": 159,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            hostnames(allow_leading_digit=False) generates a IDN host names\n            without leading digits.\n            \"\"\"\n            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(hostnames(allow_idn=False))\n        def test_hostnames_ascii(self, hostname):\n",
                    "rendered": {
                      "text": "            hostnames(allow_leading_digit=False) generates a IDN host names\n            without leading digits.\n            \"\"\"\n            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(hostnames(allow_idn=False))\n        def test_hostnames_ascii(self, hostname):\n",
                      "markdown": "`            hostnames(allow_leading_digit=False) generates a IDN host names\n            without leading digits.\n            \"\"\"\n            self.assertTrue(hostname == hostname.lstrip(digits))\n\n        @given(hostnames(allow_idn=False))\n        def test_hostnames_ascii(self, hostname):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 44,
                  "endLine": 153,
                  "endColumn": 52,
                  "snippet": {
                    "text": "                )\n\n        @given(hostnames(allow_leading_digit=False))\n        def test_hostnames_idn_nolead(self, hostname):\n            # type: (Text) -> None\n            \"\"\"\n            hostnames(allow_leading_digit=False) generates a IDN host names\n",
                    "rendered": {
                      "text": "                )\n\n        @given(hostnames(allow_leading_digit=False))\n        def test_hostnames_idn_nolead(self, hostname):\n            # type: (Text) -> None\n            \"\"\"\n            hostnames(allow_leading_digit=False) generates a IDN host names\n",
                      "markdown": "`                )\n\n        @given(hostnames(allow_leading_digit=False))\n        def test_hostnames_idn_nolead(self, hostname):\n            # type: (Text) -> None\n            \"\"\"\n            hostnames(allow_leading_digit=False) generates a IDN host names\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 57,
                  "endLine": 149,
                  "endColumn": 65,
                  "snippet": {
                    "text": "                idna_encode(hostname)\n            except UnicodeError:  # pragma: no cover\n                raise AssertionError(\n                    \"Invalid IDN host name: {!r}\".format(hostname)\n                )\n\n        @given(hostnames(allow_leading_digit=False))\n",
                    "rendered": {
                      "text": "                idna_encode(hostname)\n            except UnicodeError:  # pragma: no cover\n                raise AssertionError(\n                    \"Invalid IDN host name: {!r}\".format(hostname)\n                )\n\n        @given(hostnames(allow_leading_digit=False))\n",
                      "markdown": "`                idna_encode(hostname)\n            except UnicodeError:  # pragma: no cover\n                raise AssertionError(\n                    \"Invalid IDN host name: {!r}\".format(hostname)\n                )\n\n        @given(hostnames(allow_leading_digit=False))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 28,
                  "endLine": 146,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            try:\n                for label in hostname.split(u\".\"):\n                    check_label(label)\n                idna_encode(hostname)\n            except UnicodeError:  # pragma: no cover\n                raise AssertionError(\n                    \"Invalid IDN host name: {!r}\".format(hostname)\n",
                    "rendered": {
                      "text": "            try:\n                for label in hostname.split(u\".\"):\n                    check_label(label)\n                idna_encode(hostname)\n            except UnicodeError:  # pragma: no cover\n                raise AssertionError(\n                    \"Invalid IDN host name: {!r}\".format(hostname)\n",
                      "markdown": "`            try:\n                for label in hostname.split(u\".\"):\n                    check_label(label)\n                idna_encode(hostname)\n            except UnicodeError:  # pragma: no cover\n                raise AssertionError(\n                    \"Invalid IDN host name: {!r}\".format(hostname)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 29,
                  "endLine": 144,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            hostnames() generates a IDN host names.\n            \"\"\"\n            try:\n                for label in hostname.split(u\".\"):\n                    check_label(label)\n                idna_encode(hostname)\n            except UnicodeError:  # pragma: no cover\n",
                    "rendered": {
                      "text": "            hostnames() generates a IDN host names.\n            \"\"\"\n            try:\n                for label in hostname.split(u\".\"):\n                    check_label(label)\n                idna_encode(hostname)\n            except UnicodeError:  # pragma: no cover\n",
                      "markdown": "`            hostnames() generates a IDN host names.\n            \"\"\"\n            try:\n                for label in hostname.split(u\".\"):\n                    check_label(label)\n                idna_encode(hostname)\n            except UnicodeError:  # pragma: no cover\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 37,
                  "endLine": 138,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                raise AssertionError(\"Invalid ASCII label: {!r}\".format(label))\n\n        @given(hostnames())\n        def test_hostnames_idn(self, hostname):\n            # type: (Text) -> None\n            \"\"\"\n            hostnames() generates a IDN host names.\n",
                    "rendered": {
                      "text": "                raise AssertionError(\"Invalid ASCII label: {!r}\".format(label))\n\n        @given(hostnames())\n        def test_hostnames_idn(self, hostname):\n            # type: (Text) -> None\n            \"\"\"\n            hostnames() generates a IDN host names.\n",
                      "markdown": "`                raise AssertionError(\"Invalid ASCII label: {!r}\".format(label))\n\n        @given(hostnames())\n        def test_hostnames_idn(self, hostname):\n            # type: (Text) -> None\n            \"\"\"\n            hostnames() generates a IDN host names.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 12,
                  "endLine": 129,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        def test_hostname_labels_valid_ascii(self, label):\n            # type: (Text) -> None\n            \"\"\"\n            hostname_labels() generates a ASCII host name labels.\n            \"\"\"\n            try:\n                check_label(label)\n",
                    "rendered": {
                      "text": "        def test_hostname_labels_valid_ascii(self, label):\n            # type: (Text) -> None\n            \"\"\"\n            hostname_labels() generates a ASCII host name labels.\n            \"\"\"\n            try:\n                check_label(label)\n",
                      "markdown": "`        def test_hostname_labels_valid_ascii(self, label):\n            # type: (Text) -> None\n            \"\"\"\n            hostname_labels() generates a ASCII host name labels.\n            \"\"\"\n            try:\n                check_label(label)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 17,
                  "endLine": 126,
                  "endColumn": 25,
                  "snippet": {
                    "text": "                    )\n\n        @given(hostname_labels(allow_idn=False))\n        def test_hostname_labels_valid_ascii(self, label):\n            # type: (Text) -> None\n            \"\"\"\n            hostname_labels() generates a ASCII host name labels.\n",
                    "rendered": {
                      "text": "                    )\n\n        @given(hostname_labels(allow_idn=False))\n        def test_hostname_labels_valid_ascii(self, label):\n            # type: (Text) -> None\n            \"\"\"\n            hostname_labels() generates a ASCII host name labels.\n",
                      "markdown": "`                    )\n\n        @given(hostname_labels(allow_idn=False))\n        def test_hostname_labels_valid_ascii(self, label):\n            # type: (Text) -> None\n            \"\"\"\n            hostname_labels() generates a ASCII host name labels.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 15,
                  "endLine": 125,
                  "endColumn": 23,
                  "snippet": {
                    "text": "                        \"Invalid IDN label: {!r}\".format(label)\n                    )\n\n        @given(hostname_labels(allow_idn=False))\n        def test_hostname_labels_valid_ascii(self, label):\n            # type: (Text) -> None\n            \"\"\"\n",
                    "rendered": {
                      "text": "                        \"Invalid IDN label: {!r}\".format(label)\n                    )\n\n        @given(hostname_labels(allow_idn=False))\n        def test_hostname_labels_valid_ascii(self, label):\n            # type: (Text) -> None\n            \"\"\"\n",
                      "markdown": "`                        \"Invalid IDN label: {!r}\".format(label)\n                    )\n\n        @given(hostname_labels(allow_idn=False))\n        def test_hostname_labels_valid_ascii(self, label):\n            # type: (Text) -> None\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 34,
                  "endLine": 116,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                return u\"\\N{LATIN SMALL LETTER A WITH ACUTE}\" * max_size\n\n            with patch(\"hyperlink.hypothesis.idna_text\", mock_idna_text):\n                label = data.draw(hostname_labels())\n                try:\n                    check_label(label)\n                    idna_encode(label)\n",
                    "rendered": {
                      "text": "                return u\"\\N{LATIN SMALL LETTER A WITH ACUTE}\" * max_size\n\n            with patch(\"hyperlink.hypothesis.idna_text\", mock_idna_text):\n                label = data.draw(hostname_labels())\n                try:\n                    check_label(label)\n                    idna_encode(label)\n",
                      "markdown": "`                return u\"\\N{LATIN SMALL LETTER A WITH ACUTE}\" * max_size\n\n            with patch(\"hyperlink.hypothesis.idna_text\", mock_idna_text):\n                label = data.draw(hostname_labels())\n                try:\n                    check_label(label)\n                    idna_encode(label)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 12,
                  "endLine": 101,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        def test_hostname_labels_long_idn_punycode(self, data):\n            # type: (SearchStrategy) -> None\n            \"\"\"\n            hostname_labels() handles case where idna_text() generates text\n            that encoded to punycode ends up as longer than allowed.\n            \"\"\"\n\n",
                    "rendered": {
                      "text": "        def test_hostname_labels_long_idn_punycode(self, data):\n            # type: (SearchStrategy) -> None\n            \"\"\"\n            hostname_labels() handles case where idna_text() generates text\n            that encoded to punycode ends up as longer than allowed.\n            \"\"\"\n\n",
                      "markdown": "`        def test_hostname_labels_long_idn_punycode(self, data):\n            # type: (SearchStrategy) -> None\n            \"\"\"\n            hostname_labels() handles case where idna_text() generates text\n            that encoded to punycode ends up as longer than allowed.\n            \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 17,
                  "endLine": 98,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n        @given(data())\n        @settings(max_examples=10)\n        def test_hostname_labels_long_idn_punycode(self, data):\n            # type: (SearchStrategy) -> None\n            \"\"\"\n            hostname_labels() handles case where idna_text() generates text\n",
                    "rendered": {
                      "text": "\n        @given(data())\n        @settings(max_examples=10)\n        def test_hostname_labels_long_idn_punycode(self, data):\n            # type: (SearchStrategy) -> None\n            \"\"\"\n            hostname_labels() handles case where idna_text() generates text\n",
                      "markdown": "`\n        @given(data())\n        @settings(max_examples=10)\n        def test_hostname_labels_long_idn_punycode(self, data):\n            # type: (SearchStrategy) -> None\n            \"\"\"\n            hostname_labels() handles case where idna_text() generates text\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 12,
                  "endLine": 88,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        def test_hostname_labels_valid_idn(self, label):\n            # type: (Text) -> None\n            \"\"\"\n            hostname_labels() generates IDN host name labels.\n            \"\"\"\n            try:\n                check_label(label)\n",
                    "rendered": {
                      "text": "        def test_hostname_labels_valid_idn(self, label):\n            # type: (Text) -> None\n            \"\"\"\n            hostname_labels() generates IDN host name labels.\n            \"\"\"\n            try:\n                check_label(label)\n",
                      "markdown": "`        def test_hostname_labels_valid_idn(self, label):\n            # type: (Text) -> None\n            \"\"\"\n            hostname_labels() generates IDN host name labels.\n            \"\"\"\n            try:\n                check_label(label)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 17,
                  "endLine": 85,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            self.assertLessEqual(port, 65535)\n\n        @given(hostname_labels())\n        def test_hostname_labels_valid_idn(self, label):\n            # type: (Text) -> None\n            \"\"\"\n            hostname_labels() generates IDN host name labels.\n",
                    "rendered": {
                      "text": "            self.assertLessEqual(port, 65535)\n\n        @given(hostname_labels())\n        def test_hostname_labels_valid_idn(self, label):\n            # type: (Text) -> None\n            \"\"\"\n            hostname_labels() generates IDN host name labels.\n",
                      "markdown": "`            self.assertLessEqual(port, 65535)\n\n        @given(hostname_labels())\n        def test_hostname_labels_valid_idn(self, label):\n            # type: (Text) -> None\n            \"\"\"\n            hostname_labels() generates IDN host name labels.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 15,
                  "endLine": 84,
                  "endColumn": 23,
                  "snippet": {
                    "text": "            self.assertGreaterEqual(port, 0)\n            self.assertLessEqual(port, 65535)\n\n        @given(hostname_labels())\n        def test_hostname_labels_valid_idn(self, label):\n            # type: (Text) -> None\n            \"\"\"\n",
                    "rendered": {
                      "text": "            self.assertGreaterEqual(port, 0)\n            self.assertLessEqual(port, 65535)\n\n        @given(hostname_labels())\n        def test_hostname_labels_valid_idn(self, label):\n            # type: (Text) -> None\n            \"\"\"\n",
                      "markdown": "`            self.assertGreaterEqual(port, 0)\n            self.assertLessEqual(port, 65535)\n\n        @given(hostname_labels())\n        def test_hostname_labels_valid_idn(self, label):\n            # type: (Text) -> None\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_hypothesis.py"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 8,
                  "endLine": 33,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        composite,\n        decoded_urls,\n        encoded_urls,\n        hostname_labels,\n        hostnames,\n        idna_text,\n        paths,\n",
                    "rendered": {
                      "text": "        composite,\n        decoded_urls,\n        encoded_urls,\n        hostname_labels,\n        hostnames,\n        idna_text,\n        paths,\n",
                      "markdown": "`        composite,\n        decoded_urls,\n        encoded_urls,\n        hostname_labels,\n        hostnames,\n        idna_text,\n        paths,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_decoded_url.py"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 19,
                  "endLine": 227,
                  "endColumn": 24,
                  "snippet": {
                    "text": "            \"/x+y%2B?a=b+c%2B\", query_plus_is_space=False\n        )\n        assert durl.path == (\"x+y+\",)\n        assert durl.get(\"a\") == [\"b+c+\"]\n        assert durl.query == ((\"a\", \"b+c+\"),)\n",
                    "rendered": {
                      "text": "            \"/x+y%2B?a=b+c%2B\", query_plus_is_space=False\n        )\n        assert durl.path == (\"x+y+\",)\n        assert durl.get(\"a\") == [\"b+c+\"]\n        assert durl.query == ((\"a\", \"b+c+\"),)\n",
                      "markdown": "`            \"/x+y%2B?a=b+c%2B\", query_plus_is_space=False\n        )\n        assert durl.path == (\"x+y+\",)\n        assert durl.get(\"a\") == [\"b+c+\"]\n        assert durl.query == ((\"a\", \"b+c+\"),)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_decoded_url.py"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 19,
                  "endLine": 218,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        # type: () -> None\n        durl = DecodedURL.from_text(\"/x+y%2B?a=b+c%2B\")\n        assert durl.path == (\"x+y+\",)\n        assert durl.get(\"a\") == [\"b c+\"]\n        assert durl.query == ((\"a\", \"b c+\"),)\n\n    def test_decode_nonplussed(self):\n",
                    "rendered": {
                      "text": "        # type: () -> None\n        durl = DecodedURL.from_text(\"/x+y%2B?a=b+c%2B\")\n        assert durl.path == (\"x+y+\",)\n        assert durl.get(\"a\") == [\"b c+\"]\n        assert durl.query == ((\"a\", \"b c+\"),)\n\n    def test_decode_nonplussed(self):\n",
                      "markdown": "`        # type: () -> None\n        durl = DecodedURL.from_text(\"/x+y%2B?a=b+c%2B\")\n        assert durl.path == (\"x+y+\",)\n        assert durl.get(\"a\") == [\"b c+\"]\n        assert durl.query == ((\"a\", \"b c+\"),)\n\n    def test_decode_nonplussed(self):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_decoded_url.py"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 35,
                  "endLine": 100,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        durl = DecodedURL.from_text(\"/?%61rg=b&arg=c\")\n        assert durl.get(\"arg\") == [\"b\", \"c\"]\n\n        assert durl.set(\"arg\", \"d\").get(\"arg\") == [\"d\"]\n\n        durl = DecodedURL.from_text(\n            \"https://example.com/a/b/?fóó=1&bar=2&fóó=3\"\n",
                    "rendered": {
                      "text": "        durl = DecodedURL.from_text(\"/?%61rg=b&arg=c\")\n        assert durl.get(\"arg\") == [\"b\", \"c\"]\n\n        assert durl.set(\"arg\", \"d\").get(\"arg\") == [\"d\"]\n\n        durl = DecodedURL.from_text(\n            \"https://example.com/a/b/?fóó=1&bar=2&fóó=3\"\n",
                      "markdown": "`        durl = DecodedURL.from_text(\"/?%61rg=b&arg=c\")\n        assert durl.get(\"arg\") == [\"b\", \"c\"]\n\n        assert durl.set(\"arg\", \"d\").get(\"arg\") == [\"d\"]\n\n        durl = DecodedURL.from_text(\n            \"https://example.com/a/b/?fóó=1&bar=2&fóó=3\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_decoded_url.py"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 19,
                  "endLine": 98,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        assert durl.get(\" \") == []\n\n        durl = DecodedURL.from_text(\"/?%61rg=b&arg=c\")\n        assert durl.get(\"arg\") == [\"b\", \"c\"]\n\n        assert durl.set(\"arg\", \"d\").get(\"arg\") == [\"d\"]\n\n",
                    "rendered": {
                      "text": "        assert durl.get(\" \") == []\n\n        durl = DecodedURL.from_text(\"/?%61rg=b&arg=c\")\n        assert durl.get(\"arg\") == [\"b\", \"c\"]\n\n        assert durl.set(\"arg\", \"d\").get(\"arg\") == [\"d\"]\n\n",
                      "markdown": "`        assert durl.get(\" \") == []\n\n        durl = DecodedURL.from_text(\"/?%61rg=b&arg=c\")\n        assert durl.get(\"arg\") == [\"b\", \"c\"]\n\n        assert durl.set(\"arg\", \"d\").get(\"arg\") == [\"d\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_decoded_url.py"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 19,
                  "endLine": 95,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        durl = DecodedURL(url=durl.to_uri())\n        assert durl.get(\" \") == [\"spa%ed\"]\n        durl = durl.remove(\" \")\n        assert durl.get(\" \") == []\n\n        durl = DecodedURL.from_text(\"/?%61rg=b&arg=c\")\n        assert durl.get(\"arg\") == [\"b\", \"c\"]\n",
                    "rendered": {
                      "text": "        durl = DecodedURL(url=durl.to_uri())\n        assert durl.get(\" \") == [\"spa%ed\"]\n        durl = durl.remove(\" \")\n        assert durl.get(\" \") == []\n\n        durl = DecodedURL.from_text(\"/?%61rg=b&arg=c\")\n        assert durl.get(\"arg\") == [\"b\", \"c\"]\n",
                      "markdown": "`        durl = DecodedURL(url=durl.to_uri())\n        assert durl.get(\" \") == [\"spa%ed\"]\n        durl = durl.remove(\" \")\n        assert durl.get(\" \") == []\n\n        durl = DecodedURL.from_text(\"/?%61rg=b&arg=c\")\n        assert durl.get(\"arg\") == [\"b\", \"c\"]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_decoded_url.py"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 19,
                  "endLine": 93,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        assert durl.get(\" \") == [\"spa%ed\"]\n\n        durl = DecodedURL(url=durl.to_uri())\n        assert durl.get(\" \") == [\"spa%ed\"]\n        durl = durl.remove(\" \")\n        assert durl.get(\" \") == []\n\n",
                    "rendered": {
                      "text": "        assert durl.get(\" \") == [\"spa%ed\"]\n\n        durl = DecodedURL(url=durl.to_uri())\n        assert durl.get(\" \") == [\"spa%ed\"]\n        durl = durl.remove(\" \")\n        assert durl.get(\" \") == []\n\n",
                      "markdown": "`        assert durl.get(\" \") == [\"spa%ed\"]\n\n        durl = DecodedURL(url=durl.to_uri())\n        assert durl.get(\" \") == [\"spa%ed\"]\n        durl = durl.remove(\" \")\n        assert durl.get(\" \") == []\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_decoded_url.py"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 19,
                  "endLine": 90,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        durl = durl.add(\" \", \"space\")\n        assert durl.get(\" \") == [\"space\"]\n        durl = durl.set(\" \", \"spa%ed\")\n        assert durl.get(\" \") == [\"spa%ed\"]\n\n        durl = DecodedURL(url=durl.to_uri())\n        assert durl.get(\" \") == [\"spa%ed\"]\n",
                    "rendered": {
                      "text": "        durl = durl.add(\" \", \"space\")\n        assert durl.get(\" \") == [\"space\"]\n        durl = durl.set(\" \", \"spa%ed\")\n        assert durl.get(\" \") == [\"spa%ed\"]\n\n        durl = DecodedURL(url=durl.to_uri())\n        assert durl.get(\" \") == [\"spa%ed\"]\n",
                      "markdown": "`        durl = durl.add(\" \", \"space\")\n        assert durl.get(\" \") == [\"space\"]\n        durl = durl.set(\" \", \"spa%ed\")\n        assert durl.get(\" \") == [\"spa%ed\"]\n\n        durl = DecodedURL(url=durl.to_uri())\n        assert durl.get(\" \") == [\"spa%ed\"]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_decoded_url.py"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 19,
                  "endLine": 88,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n        assert durl.get(\"zot\") == [\"23%\"]\n        durl = durl.add(\" \", \"space\")\n        assert durl.get(\" \") == [\"space\"]\n        durl = durl.set(\" \", \"spa%ed\")\n        assert durl.get(\" \") == [\"spa%ed\"]\n\n",
                    "rendered": {
                      "text": "\n        assert durl.get(\"zot\") == [\"23%\"]\n        durl = durl.add(\" \", \"space\")\n        assert durl.get(\" \") == [\"space\"]\n        durl = durl.set(\" \", \"spa%ed\")\n        assert durl.get(\" \") == [\"spa%ed\"]\n\n",
                      "markdown": "`\n        assert durl.get(\"zot\") == [\"23%\"]\n        durl = durl.add(\" \", \"space\")\n        assert durl.get(\" \") == [\"space\"]\n        durl = durl.set(\" \", \"spa%ed\")\n        assert durl.get(\" \") == [\"spa%ed\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_decoded_url.py"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 19,
                  "endLine": 86,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        # type: () -> None\n        durl = DecodedURL.from_text(TOTAL_URL)\n\n        assert durl.get(\"zot\") == [\"23%\"]\n        durl = durl.add(\" \", \"space\")\n        assert durl.get(\" \") == [\"space\"]\n        durl = durl.set(\" \", \"spa%ed\")\n",
                    "rendered": {
                      "text": "        # type: () -> None\n        durl = DecodedURL.from_text(TOTAL_URL)\n\n        assert durl.get(\"zot\") == [\"23%\"]\n        durl = durl.add(\" \", \"space\")\n        assert durl.get(\" \") == [\"space\"]\n        durl = durl.set(\" \", \"spa%ed\")\n",
                      "markdown": "`        # type: () -> None\n        durl = DecodedURL.from_text(TOTAL_URL)\n\n        assert durl.get(\"zot\") == [\"23%\"]\n        durl = durl.add(\" \", \"space\")\n        assert durl.get(\" \") == [\"space\"]\n        durl = durl.set(\" \", \"spa%ed\")\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_decoded_url.py"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 19,
                  "endLine": 34,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        assert durl.port == 8080\n        assert durl.path == (\"a\", \"nice nice\", \".\", \"path\", \"\")\n        assert durl.fragment == \"frég\"\n        assert durl.get(\"zot\") == [\"23%\"]\n\n        assert durl.user == \"user\"\n        assert durl.userinfo == (\"user\", \"\\0\\0\\0\\0\")\n",
                    "rendered": {
                      "text": "        assert durl.port == 8080\n        assert durl.path == (\"a\", \"nice nice\", \".\", \"path\", \"\")\n        assert durl.fragment == \"frég\"\n        assert durl.get(\"zot\") == [\"23%\"]\n\n        assert durl.user == \"user\"\n        assert durl.userinfo == (\"user\", \"\\0\\0\\0\\0\")\n",
                      "markdown": "`        assert durl.port == 8080\n        assert durl.path == (\"a\", \"nice nice\", \".\", \"path\", \"\")\n        assert durl.fragment == \"frég\"\n        assert durl.get(\"zot\") == [\"23%\"]\n\n        assert durl.user == \"user\"\n        assert durl.userinfo == (\"user\", \"\\0\\0\\0\\0\")\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_decoded_url.py"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 33,
                  "endLine": 59,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        assert durl.to_uri().fragment == \"fr%C3%A9g\"\n        assert \" \" in durl.to_iri().path[1]\n\n        assert durl.to_text(with_password=True) == TOTAL_URL\n\n        assert durl.absolute\n        assert durl.rooted\n",
                    "rendered": {
                      "text": "        assert durl.to_uri().fragment == \"fr%C3%A9g\"\n        assert \" \" in durl.to_iri().path[1]\n\n        assert durl.to_text(with_password=True) == TOTAL_URL\n\n        assert durl.absolute\n        assert durl.rooted\n",
                      "markdown": "`        assert durl.to_uri().fragment == \"fr%C3%A9g\"\n        assert \" \" in durl.to_iri().path[1]\n\n        assert durl.to_text(with_password=True) == TOTAL_URL\n\n        assert durl.absolute\n        assert durl.rooted\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/test/test_decoded_url.py"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 9,
                  "endLine": 191,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        # type: () -> None\n\n        # See https://github.com/python-hyper/hyperlink/pull/59 for a\n        # nice discussion of the possibilities\n        assert _percent_decode(\"abcdé%C3%A9éfg\") == \"abcdéééfg\"\n\n        # still allow percent encoding in the case of an error\n",
                    "rendered": {
                      "text": "        # type: () -> None\n\n        # See https://github.com/python-hyper/hyperlink/pull/59 for a\n        # nice discussion of the possibilities\n        assert _percent_decode(\"abcdé%C3%A9éfg\") == \"abcdéééfg\"\n\n        # still allow percent encoding in the case of an error\n",
                      "markdown": "`        # type: () -> None\n\n        # See https://github.com/python-hyper/hyperlink/pull/59 for a\n        # nice discussion of the possibilities\n        assert _percent_decode(\"abcdé%C3%A9éfg\") == \"abcdéééfg\"\n\n        # still allow percent encoding in the case of an error\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2197,
                  "startColumn": 71,
                  "endLine": 2197,
                  "endColumn": 77,
                  "snippet": {
                    "text": "10B73-10B77,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10B78-10B7F,DISALLOWED,INSCRIPTIONAL PAHLAVI NUMBER ONE..INSCRIPTIONAL PAHLAVI NUMBER ONE THOUSAND\r\n10B80-10BFF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10C00-10C48,PVALID,OLD TURKIC LETTER ORKHON A..OLD TURKIC LETTER ORKHON BASH\r\n10C49-10E5F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10E60-10E7E,DISALLOWED,RUMI DIGIT ONE..RUMI FRACTION TWO THIRDS\r\n10E7F-10FFF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                    "rendered": {
                      "text": "10B73-10B77,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10B78-10B7F,DISALLOWED,INSCRIPTIONAL PAHLAVI NUMBER ONE..INSCRIPTIONAL PAHLAVI NUMBER ONE THOUSAND\r\n10B80-10BFF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10C00-10C48,PVALID,OLD TURKIC LETTER ORKHON A..OLD TURKIC LETTER ORKHON BASH\r\n10C49-10E5F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10E60-10E7E,DISALLOWED,RUMI DIGIT ONE..RUMI FRACTION TWO THIRDS\r\n10E7F-10FFF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                      "markdown": "`10B73-10B77,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10B78-10B7F,DISALLOWED,INSCRIPTIONAL PAHLAVI NUMBER ONE..INSCRIPTIONAL PAHLAVI NUMBER ONE THOUSAND\r\n10B80-10BFF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10C00-10C48,PVALID,OLD TURKIC LETTER ORKHON A..OLD TURKIC LETTER ORKHON BASH\r\n10C49-10E5F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10E60-10E7E,DISALLOWED,RUMI DIGIT ONE..RUMI FRACTION TWO THIRDS\r\n10E7F-10FFF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2065,
                  "startColumn": 60,
                  "endLine": 2065,
                  "endColumn": 64,
                  "snippet": {
                    "text": "FE53,UNASSIGNED,<RESERVED>\r\nFE54-FE66,DISALLOWED,SMALL SEMICOLON..SMALL EQUALS SIGN\r\nFE67,UNASSIGNED,<RESERVED>\r\nFE68-FE6B,DISALLOWED,SMALL REVERSE SOLIDUS..SMALL COMMERCIAL AT\r\nFE6C-FE6F,UNASSIGNED,<RESERVED>..<RESERVED>\r\nFE70-FE72,DISALLOWED,ARABIC FATHATAN ISOLATED FORM..ARABIC DAMMATAN ISOLATED FORM\r\nFE73,PVALID,ARABIC TAIL FRAGMENT\r\n",
                    "rendered": {
                      "text": "FE53,UNASSIGNED,<RESERVED>\r\nFE54-FE66,DISALLOWED,SMALL SEMICOLON..SMALL EQUALS SIGN\r\nFE67,UNASSIGNED,<RESERVED>\r\nFE68-FE6B,DISALLOWED,SMALL REVERSE SOLIDUS..SMALL COMMERCIAL AT\r\nFE6C-FE6F,UNASSIGNED,<RESERVED>..<RESERVED>\r\nFE70-FE72,DISALLOWED,ARABIC FATHATAN ISOLATED FORM..ARABIC DAMMATAN ISOLATED FORM\r\nFE73,PVALID,ARABIC TAIL FRAGMENT\r\n",
                      "markdown": "`FE53,UNASSIGNED,<RESERVED>\r\nFE54-FE66,DISALLOWED,SMALL SEMICOLON..SMALL EQUALS SIGN\r\nFE67,UNASSIGNED,<RESERVED>\r\nFE68-FE6B,DISALLOWED,SMALL REVERSE SOLIDUS..SMALL COMMERCIAL AT\r\nFE6C-FE6F,UNASSIGNED,<RESERVED>..<RESERVED>\r\nFE70-FE72,DISALLOWED,ARABIC FATHATAN ISOLATED FORM..ARABIC DAMMATAN ISOLATED FORM\r\nFE73,PVALID,ARABIC TAIL FRAGMENT\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 1876,
                  "startColumn": 37,
                  "endLine": 1876,
                  "endColumn": 47,
                  "snippet": {
                    "text": "A752,DISALLOWED,LATIN CAPITAL LETTER P WITH FLOURISH\r\nA753,PVALID,LATIN SMALL LETTER P WITH FLOURISH\r\nA754,DISALLOWED,LATIN CAPITAL LETTER P WITH SQUIRREL TAIL\r\nA755,PVALID,LATIN SMALL LETTER P WITH SQUIRREL TAIL\r\nA756,DISALLOWED,LATIN CAPITAL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA757,PVALID,LATIN SMALL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA758,DISALLOWED,LATIN CAPITAL LETTER Q WITH DIAGONAL STROKE\r\n",
                    "rendered": {
                      "text": "A752,DISALLOWED,LATIN CAPITAL LETTER P WITH FLOURISH\r\nA753,PVALID,LATIN SMALL LETTER P WITH FLOURISH\r\nA754,DISALLOWED,LATIN CAPITAL LETTER P WITH SQUIRREL TAIL\r\nA755,PVALID,LATIN SMALL LETTER P WITH SQUIRREL TAIL\r\nA756,DISALLOWED,LATIN CAPITAL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA757,PVALID,LATIN SMALL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA758,DISALLOWED,LATIN CAPITAL LETTER Q WITH DIAGONAL STROKE\r\n",
                      "markdown": "`A752,DISALLOWED,LATIN CAPITAL LETTER P WITH FLOURISH\r\nA753,PVALID,LATIN SMALL LETTER P WITH FLOURISH\r\nA754,DISALLOWED,LATIN CAPITAL LETTER P WITH SQUIRREL TAIL\r\nA755,PVALID,LATIN SMALL LETTER P WITH SQUIRREL TAIL\r\nA756,DISALLOWED,LATIN CAPITAL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA757,PVALID,LATIN SMALL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA758,DISALLOWED,LATIN CAPITAL LETTER Q WITH DIAGONAL STROKE\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 1875,
                  "startColumn": 43,
                  "endLine": 1875,
                  "endColumn": 53,
                  "snippet": {
                    "text": "A751,PVALID,LATIN SMALL LETTER P WITH STROKE THROUGH DESCENDER\r\nA752,DISALLOWED,LATIN CAPITAL LETTER P WITH FLOURISH\r\nA753,PVALID,LATIN SMALL LETTER P WITH FLOURISH\r\nA754,DISALLOWED,LATIN CAPITAL LETTER P WITH SQUIRREL TAIL\r\nA755,PVALID,LATIN SMALL LETTER P WITH SQUIRREL TAIL\r\nA756,DISALLOWED,LATIN CAPITAL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA757,PVALID,LATIN SMALL LETTER Q WITH STROKE THROUGH DESCENDER\r\n",
                    "rendered": {
                      "text": "A751,PVALID,LATIN SMALL LETTER P WITH STROKE THROUGH DESCENDER\r\nA752,DISALLOWED,LATIN CAPITAL LETTER P WITH FLOURISH\r\nA753,PVALID,LATIN SMALL LETTER P WITH FLOURISH\r\nA754,DISALLOWED,LATIN CAPITAL LETTER P WITH SQUIRREL TAIL\r\nA755,PVALID,LATIN SMALL LETTER P WITH SQUIRREL TAIL\r\nA756,DISALLOWED,LATIN CAPITAL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA757,PVALID,LATIN SMALL LETTER Q WITH STROKE THROUGH DESCENDER\r\n",
                      "markdown": "`A751,PVALID,LATIN SMALL LETTER P WITH STROKE THROUGH DESCENDER\r\nA752,DISALLOWED,LATIN CAPITAL LETTER P WITH FLOURISH\r\nA753,PVALID,LATIN SMALL LETTER P WITH FLOURISH\r\nA754,DISALLOWED,LATIN CAPITAL LETTER P WITH SQUIRREL TAIL\r\nA755,PVALID,LATIN SMALL LETTER P WITH SQUIRREL TAIL\r\nA756,DISALLOWED,LATIN CAPITAL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA757,PVALID,LATIN SMALL LETTER Q WITH STROKE THROUGH DESCENDER\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 1806,
                  "startColumn": 33,
                  "endLine": 1806,
                  "endColumn": 37,
                  "snippet": {
                    "text": "A688,DISALLOWED,CYRILLIC CAPITAL LETTER DZZE\r\nA689,PVALID,CYRILLIC SMALL LETTER DZZE\r\nA68A,DISALLOWED,CYRILLIC CAPITAL LETTER TE WITH MIDDLE HOOK\r\nA68B,PVALID,CYRILLIC SMALL LETTER TE WITH MIDDLE HOOK\r\nA68C,DISALLOWED,CYRILLIC CAPITAL LETTER TWE\r\nA68D,PVALID,CYRILLIC SMALL LETTER TWE\r\nA68E,DISALLOWED,CYRILLIC CAPITAL LETTER TSWE\r\n",
                    "rendered": {
                      "text": "A688,DISALLOWED,CYRILLIC CAPITAL LETTER DZZE\r\nA689,PVALID,CYRILLIC SMALL LETTER DZZE\r\nA68A,DISALLOWED,CYRILLIC CAPITAL LETTER TE WITH MIDDLE HOOK\r\nA68B,PVALID,CYRILLIC SMALL LETTER TE WITH MIDDLE HOOK\r\nA68C,DISALLOWED,CYRILLIC CAPITAL LETTER TWE\r\nA68D,PVALID,CYRILLIC SMALL LETTER TWE\r\nA68E,DISALLOWED,CYRILLIC CAPITAL LETTER TSWE\r\n",
                      "markdown": "`A688,DISALLOWED,CYRILLIC CAPITAL LETTER DZZE\r\nA689,PVALID,CYRILLIC SMALL LETTER DZZE\r\nA68A,DISALLOWED,CYRILLIC CAPITAL LETTER TE WITH MIDDLE HOOK\r\nA68B,PVALID,CYRILLIC SMALL LETTER TE WITH MIDDLE HOOK\r\nA68C,DISALLOWED,CYRILLIC CAPITAL LETTER TWE\r\nA68D,PVALID,CYRILLIC SMALL LETTER TWE\r\nA68E,DISALLOWED,CYRILLIC CAPITAL LETTER TSWE\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 1805,
                  "startColumn": 39,
                  "endLine": 1805,
                  "endColumn": 43,
                  "snippet": {
                    "text": "A687,PVALID,CYRILLIC SMALL LETTER CCHE\r\nA688,DISALLOWED,CYRILLIC CAPITAL LETTER DZZE\r\nA689,PVALID,CYRILLIC SMALL LETTER DZZE\r\nA68A,DISALLOWED,CYRILLIC CAPITAL LETTER TE WITH MIDDLE HOOK\r\nA68B,PVALID,CYRILLIC SMALL LETTER TE WITH MIDDLE HOOK\r\nA68C,DISALLOWED,CYRILLIC CAPITAL LETTER TWE\r\nA68D,PVALID,CYRILLIC SMALL LETTER TWE\r\n",
                    "rendered": {
                      "text": "A687,PVALID,CYRILLIC SMALL LETTER CCHE\r\nA688,DISALLOWED,CYRILLIC CAPITAL LETTER DZZE\r\nA689,PVALID,CYRILLIC SMALL LETTER DZZE\r\nA68A,DISALLOWED,CYRILLIC CAPITAL LETTER TE WITH MIDDLE HOOK\r\nA68B,PVALID,CYRILLIC SMALL LETTER TE WITH MIDDLE HOOK\r\nA68C,DISALLOWED,CYRILLIC CAPITAL LETTER TWE\r\nA68D,PVALID,CYRILLIC SMALL LETTER TWE\r\n",
                      "markdown": "`A687,PVALID,CYRILLIC SMALL LETTER CCHE\r\nA688,DISALLOWED,CYRILLIC CAPITAL LETTER DZZE\r\nA689,PVALID,CYRILLIC SMALL LETTER DZZE\r\nA68A,DISALLOWED,CYRILLIC CAPITAL LETTER TE WITH MIDDLE HOOK\r\nA68B,PVALID,CYRILLIC SMALL LETTER TE WITH MIDDLE HOOK\r\nA68C,DISALLOWED,CYRILLIC CAPITAL LETTER TWE\r\nA68D,PVALID,CYRILLIC SMALL LETTER TWE\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 35,
                  "endLine": 438,
                  "endColumn": 39,
                  "snippet": {
                    "text": "04B2,DISALLOWED,CYRILLIC CAPITAL LETTER HA WITH DESCENDER\r\n04B3,PVALID,CYRILLIC SMALL LETTER HA WITH DESCENDER\r\n04B4,DISALLOWED,CYRILLIC CAPITAL LIGATURE TE TSE\r\n04B5,PVALID,CYRILLIC SMALL LIGATURE TE TSE\r\n04B6,DISALLOWED,CYRILLIC CAPITAL LETTER CHE WITH DESCENDER\r\n04B7,PVALID,CYRILLIC SMALL LETTER CHE WITH DESCENDER\r\n04B8,DISALLOWED,CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE\r\n",
                    "rendered": {
                      "text": "04B2,DISALLOWED,CYRILLIC CAPITAL LETTER HA WITH DESCENDER\r\n04B3,PVALID,CYRILLIC SMALL LETTER HA WITH DESCENDER\r\n04B4,DISALLOWED,CYRILLIC CAPITAL LIGATURE TE TSE\r\n04B5,PVALID,CYRILLIC SMALL LIGATURE TE TSE\r\n04B6,DISALLOWED,CYRILLIC CAPITAL LETTER CHE WITH DESCENDER\r\n04B7,PVALID,CYRILLIC SMALL LETTER CHE WITH DESCENDER\r\n04B8,DISALLOWED,CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE\r\n",
                      "markdown": "`04B2,DISALLOWED,CYRILLIC CAPITAL LETTER HA WITH DESCENDER\r\n04B3,PVALID,CYRILLIC SMALL LETTER HA WITH DESCENDER\r\n04B4,DISALLOWED,CYRILLIC CAPITAL LIGATURE TE TSE\r\n04B5,PVALID,CYRILLIC SMALL LIGATURE TE TSE\r\n04B6,DISALLOWED,CYRILLIC CAPITAL LETTER CHE WITH DESCENDER\r\n04B7,PVALID,CYRILLIC SMALL LETTER CHE WITH DESCENDER\r\n04B8,DISALLOWED,CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 437,
                  "startColumn": 41,
                  "endLine": 437,
                  "endColumn": 45,
                  "snippet": {
                    "text": "04B1,PVALID,CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE\r\n04B2,DISALLOWED,CYRILLIC CAPITAL LETTER HA WITH DESCENDER\r\n04B3,PVALID,CYRILLIC SMALL LETTER HA WITH DESCENDER\r\n04B4,DISALLOWED,CYRILLIC CAPITAL LIGATURE TE TSE\r\n04B5,PVALID,CYRILLIC SMALL LIGATURE TE TSE\r\n04B6,DISALLOWED,CYRILLIC CAPITAL LETTER CHE WITH DESCENDER\r\n04B7,PVALID,CYRILLIC SMALL LETTER CHE WITH DESCENDER\r\n",
                    "rendered": {
                      "text": "04B1,PVALID,CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE\r\n04B2,DISALLOWED,CYRILLIC CAPITAL LETTER HA WITH DESCENDER\r\n04B3,PVALID,CYRILLIC SMALL LETTER HA WITH DESCENDER\r\n04B4,DISALLOWED,CYRILLIC CAPITAL LIGATURE TE TSE\r\n04B5,PVALID,CYRILLIC SMALL LIGATURE TE TSE\r\n04B6,DISALLOWED,CYRILLIC CAPITAL LETTER CHE WITH DESCENDER\r\n04B7,PVALID,CYRILLIC SMALL LETTER CHE WITH DESCENDER\r\n",
                      "markdown": "`04B1,PVALID,CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE\r\n04B2,DISALLOWED,CYRILLIC CAPITAL LETTER HA WITH DESCENDER\r\n04B3,PVALID,CYRILLIC SMALL LETTER HA WITH DESCENDER\r\n04B4,DISALLOWED,CYRILLIC CAPITAL LIGATURE TE TSE\r\n04B5,PVALID,CYRILLIC SMALL LIGATURE TE TSE\r\n04B6,DISALLOWED,CYRILLIC CAPITAL LETTER CHE WITH DESCENDER\r\n04B7,PVALID,CYRILLIC SMALL LETTER CHE WITH DESCENDER\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 33,
                  "endLine": 430,
                  "endColumn": 37,
                  "snippet": {
                    "text": "04AA,DISALLOWED,CYRILLIC CAPITAL LETTER ES WITH DESCENDER\r\n04AB,PVALID,CYRILLIC SMALL LETTER ES WITH DESCENDER\r\n04AC,DISALLOWED,CYRILLIC CAPITAL LETTER TE WITH DESCENDER\r\n04AD,PVALID,CYRILLIC SMALL LETTER TE WITH DESCENDER\r\n04AE,DISALLOWED,CYRILLIC CAPITAL LETTER STRAIGHT U\r\n04AF,PVALID,CYRILLIC SMALL LETTER STRAIGHT U\r\n04B0,DISALLOWED,CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE\r\n",
                    "rendered": {
                      "text": "04AA,DISALLOWED,CYRILLIC CAPITAL LETTER ES WITH DESCENDER\r\n04AB,PVALID,CYRILLIC SMALL LETTER ES WITH DESCENDER\r\n04AC,DISALLOWED,CYRILLIC CAPITAL LETTER TE WITH DESCENDER\r\n04AD,PVALID,CYRILLIC SMALL LETTER TE WITH DESCENDER\r\n04AE,DISALLOWED,CYRILLIC CAPITAL LETTER STRAIGHT U\r\n04AF,PVALID,CYRILLIC SMALL LETTER STRAIGHT U\r\n04B0,DISALLOWED,CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE\r\n",
                      "markdown": "`04AA,DISALLOWED,CYRILLIC CAPITAL LETTER ES WITH DESCENDER\r\n04AB,PVALID,CYRILLIC SMALL LETTER ES WITH DESCENDER\r\n04AC,DISALLOWED,CYRILLIC CAPITAL LETTER TE WITH DESCENDER\r\n04AD,PVALID,CYRILLIC SMALL LETTER TE WITH DESCENDER\r\n04AE,DISALLOWED,CYRILLIC CAPITAL LETTER STRAIGHT U\r\n04AF,PVALID,CYRILLIC SMALL LETTER STRAIGHT U\r\n04B0,DISALLOWED,CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 39,
                  "endLine": 429,
                  "endColumn": 43,
                  "snippet": {
                    "text": "04A9,PVALID,CYRILLIC SMALL LETTER ABKHASIAN HA\r\n04AA,DISALLOWED,CYRILLIC CAPITAL LETTER ES WITH DESCENDER\r\n04AB,PVALID,CYRILLIC SMALL LETTER ES WITH DESCENDER\r\n04AC,DISALLOWED,CYRILLIC CAPITAL LETTER TE WITH DESCENDER\r\n04AD,PVALID,CYRILLIC SMALL LETTER TE WITH DESCENDER\r\n04AE,DISALLOWED,CYRILLIC CAPITAL LETTER STRAIGHT U\r\n04AF,PVALID,CYRILLIC SMALL LETTER STRAIGHT U\r\n",
                    "rendered": {
                      "text": "04A9,PVALID,CYRILLIC SMALL LETTER ABKHASIAN HA\r\n04AA,DISALLOWED,CYRILLIC CAPITAL LETTER ES WITH DESCENDER\r\n04AB,PVALID,CYRILLIC SMALL LETTER ES WITH DESCENDER\r\n04AC,DISALLOWED,CYRILLIC CAPITAL LETTER TE WITH DESCENDER\r\n04AD,PVALID,CYRILLIC SMALL LETTER TE WITH DESCENDER\r\n04AE,DISALLOWED,CYRILLIC CAPITAL LETTER STRAIGHT U\r\n04AF,PVALID,CYRILLIC SMALL LETTER STRAIGHT U\r\n",
                      "markdown": "`04A9,PVALID,CYRILLIC SMALL LETTER ABKHASIAN HA\r\n04AA,DISALLOWED,CYRILLIC CAPITAL LETTER ES WITH DESCENDER\r\n04AB,PVALID,CYRILLIC SMALL LETTER ES WITH DESCENDER\r\n04AC,DISALLOWED,CYRILLIC CAPITAL LETTER TE WITH DESCENDER\r\n04AD,PVALID,CYRILLIC SMALL LETTER TE WITH DESCENDER\r\n04AE,DISALLOWED,CYRILLIC CAPITAL LETTER STRAIGHT U\r\n04AF,PVALID,CYRILLIC SMALL LETTER STRAIGHT U\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2424,
                  "startColumn": 40,
                  "endLine": 2424,
                  "endColumn": 45,
                  "snippet": {
                    "text": "1F544-1F54F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F550-1F567,DISALLOWED,CLOCK FACE ONE OCLOCK..CLOCK FACE TWELVE-THIRTY\r\n1F568-1F5FA,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F5FB-1F640,DISALLOWED,MOUNT FUJI..WEARY CAT FACE\r\n1F641-1F644,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F645-1F64F,DISALLOWED,FACE WITH NO GOOD GESTURE..PERSON WITH FOLDED HANDS\r\n1F650-1F67F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                    "rendered": {
                      "text": "1F544-1F54F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F550-1F567,DISALLOWED,CLOCK FACE ONE OCLOCK..CLOCK FACE TWELVE-THIRTY\r\n1F568-1F5FA,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F5FB-1F640,DISALLOWED,MOUNT FUJI..WEARY CAT FACE\r\n1F641-1F644,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F645-1F64F,DISALLOWED,FACE WITH NO GOOD GESTURE..PERSON WITH FOLDED HANDS\r\n1F650-1F67F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                      "markdown": "`1F544-1F54F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F550-1F567,DISALLOWED,CLOCK FACE ONE OCLOCK..CLOCK FACE TWELVE-THIRTY\r\n1F568-1F5FA,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F5FB-1F640,DISALLOWED,MOUNT FUJI..WEARY CAT FACE\r\n1F641-1F644,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F645-1F64F,DISALLOWED,FACE WITH NO GOOD GESTURE..PERSON WITH FOLDED HANDS\r\n1F650-1F67F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2418,
                  "startColumn": 69,
                  "endLine": 2418,
                  "endColumn": 74,
                  "snippet": {
                    "text": "1F4F8,UNASSIGNED,<RESERVED>\r\n1F4F9-1F4FC,DISALLOWED,VIDEO CAMERA..VIDEOCASSETTE\r\n1F4FD-1F4FF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F500-1F53D,DISALLOWED,TWISTED RIGHTWARDS ARROWS..DOWN-POINTING SMALL RED TRIANGLE\r\n1F53E-1F53F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F540-1F543,DISALLOWED,CIRCLED CROSS POMMEE..NOTCHED LEFT SEMICIRCLE WITH THREE DOTS\r\n1F544-1F54F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                    "rendered": {
                      "text": "1F4F8,UNASSIGNED,<RESERVED>\r\n1F4F9-1F4FC,DISALLOWED,VIDEO CAMERA..VIDEOCASSETTE\r\n1F4FD-1F4FF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F500-1F53D,DISALLOWED,TWISTED RIGHTWARDS ARROWS..DOWN-POINTING SMALL RED TRIANGLE\r\n1F53E-1F53F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F540-1F543,DISALLOWED,CIRCLED CROSS POMMEE..NOTCHED LEFT SEMICIRCLE WITH THREE DOTS\r\n1F544-1F54F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                      "markdown": "`1F4F8,UNASSIGNED,<RESERVED>\r\n1F4F9-1F4FC,DISALLOWED,VIDEO CAMERA..VIDEOCASSETTE\r\n1F4FD-1F4FF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F500-1F53D,DISALLOWED,TWISTED RIGHTWARDS ARROWS..DOWN-POINTING SMALL RED TRIANGLE\r\n1F53E-1F53F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1F540-1F543,DISALLOWED,CIRCLED CROSS POMMEE..NOTCHED LEFT SEMICIRCLE WITH THREE DOTS\r\n1F544-1F54F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2276,
                  "startColumn": 35,
                  "endLine": 2276,
                  "endColumn": 43,
                  "snippet": {
                    "text": "1D4BC,UNASSIGNED,<RESERVED>\r\n1D4BD-1D4C3,DISALLOWED,MATHEMATICAL SCRIPT SMALL H..MATHEMATICAL SCRIPT SMALL N\r\n1D4C4,UNASSIGNED,<RESERVED>\r\n1D4C5-1D505,DISALLOWED,MATHEMATICAL SCRIPT SMALL P..MATHEMATICAL FRAKTUR CAPITAL B\r\n1D506,UNASSIGNED,<RESERVED>\r\n1D507-1D50A,DISALLOWED,MATHEMATICAL FRAKTUR CAPITAL D..MATHEMATICAL FRAKTUR CAPITAL G\r\n1D50B-1D50C,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                    "rendered": {
                      "text": "1D4BC,UNASSIGNED,<RESERVED>\r\n1D4BD-1D4C3,DISALLOWED,MATHEMATICAL SCRIPT SMALL H..MATHEMATICAL SCRIPT SMALL N\r\n1D4C4,UNASSIGNED,<RESERVED>\r\n1D4C5-1D505,DISALLOWED,MATHEMATICAL SCRIPT SMALL P..MATHEMATICAL FRAKTUR CAPITAL B\r\n1D506,UNASSIGNED,<RESERVED>\r\n1D507-1D50A,DISALLOWED,MATHEMATICAL FRAKTUR CAPITAL D..MATHEMATICAL FRAKTUR CAPITAL G\r\n1D50B-1D50C,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                      "markdown": "`1D4BC,UNASSIGNED,<RESERVED>\r\n1D4BD-1D4C3,DISALLOWED,MATHEMATICAL SCRIPT SMALL H..MATHEMATICAL SCRIPT SMALL N\r\n1D4C4,UNASSIGNED,<RESERVED>\r\n1D4C5-1D505,DISALLOWED,MATHEMATICAL SCRIPT SMALL P..MATHEMATICAL FRAKTUR CAPITAL B\r\n1D506,UNASSIGNED,<RESERVED>\r\n1D507-1D50A,DISALLOWED,MATHEMATICAL FRAKTUR CAPITAL D..MATHEMATICAL FRAKTUR CAPITAL G\r\n1D50B-1D50C,UNASSIGNED,<RESERVED>..<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2274,
                  "startColumn": 64,
                  "endLine": 2274,
                  "endColumn": 72,
                  "snippet": {
                    "text": "1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n1D4BD-1D4C3,DISALLOWED,MATHEMATICAL SCRIPT SMALL H..MATHEMATICAL SCRIPT SMALL N\r\n1D4C4,UNASSIGNED,<RESERVED>\r\n1D4C5-1D505,DISALLOWED,MATHEMATICAL SCRIPT SMALL P..MATHEMATICAL FRAKTUR CAPITAL B\r\n1D506,UNASSIGNED,<RESERVED>\r\n",
                    "rendered": {
                      "text": "1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n1D4BD-1D4C3,DISALLOWED,MATHEMATICAL SCRIPT SMALL H..MATHEMATICAL SCRIPT SMALL N\r\n1D4C4,UNASSIGNED,<RESERVED>\r\n1D4C5-1D505,DISALLOWED,MATHEMATICAL SCRIPT SMALL P..MATHEMATICAL FRAKTUR CAPITAL B\r\n1D506,UNASSIGNED,<RESERVED>\r\n",
                      "markdown": "`1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n1D4BD-1D4C3,DISALLOWED,MATHEMATICAL SCRIPT SMALL H..MATHEMATICAL SCRIPT SMALL N\r\n1D4C4,UNASSIGNED,<RESERVED>\r\n1D4C5-1D505,DISALLOWED,MATHEMATICAL SCRIPT SMALL P..MATHEMATICAL FRAKTUR CAPITAL B\r\n1D506,UNASSIGNED,<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2274,
                  "startColumn": 35,
                  "endLine": 2274,
                  "endColumn": 43,
                  "snippet": {
                    "text": "1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n1D4BD-1D4C3,DISALLOWED,MATHEMATICAL SCRIPT SMALL H..MATHEMATICAL SCRIPT SMALL N\r\n1D4C4,UNASSIGNED,<RESERVED>\r\n1D4C5-1D505,DISALLOWED,MATHEMATICAL SCRIPT SMALL P..MATHEMATICAL FRAKTUR CAPITAL B\r\n1D506,UNASSIGNED,<RESERVED>\r\n",
                    "rendered": {
                      "text": "1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n1D4BD-1D4C3,DISALLOWED,MATHEMATICAL SCRIPT SMALL H..MATHEMATICAL SCRIPT SMALL N\r\n1D4C4,UNASSIGNED,<RESERVED>\r\n1D4C5-1D505,DISALLOWED,MATHEMATICAL SCRIPT SMALL P..MATHEMATICAL FRAKTUR CAPITAL B\r\n1D506,UNASSIGNED,<RESERVED>\r\n",
                      "markdown": "`1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n1D4BD-1D4C3,DISALLOWED,MATHEMATICAL SCRIPT SMALL H..MATHEMATICAL SCRIPT SMALL N\r\n1D4C4,UNASSIGNED,<RESERVED>\r\n1D4C5-1D505,DISALLOWED,MATHEMATICAL SCRIPT SMALL P..MATHEMATICAL FRAKTUR CAPITAL B\r\n1D506,UNASSIGNED,<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2272,
                  "startColumn": 29,
                  "endLine": 2272,
                  "endColumn": 37,
                  "snippet": {
                    "text": "1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n1D4BD-1D4C3,DISALLOWED,MATHEMATICAL SCRIPT SMALL H..MATHEMATICAL SCRIPT SMALL N\r\n1D4C4,UNASSIGNED,<RESERVED>\r\n",
                    "rendered": {
                      "text": "1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n1D4BD-1D4C3,DISALLOWED,MATHEMATICAL SCRIPT SMALL H..MATHEMATICAL SCRIPT SMALL N\r\n1D4C4,UNASSIGNED,<RESERVED>\r\n",
                      "markdown": "`1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n1D4BD-1D4C3,DISALLOWED,MATHEMATICAL SCRIPT SMALL H..MATHEMATICAL SCRIPT SMALL N\r\n1D4C4,UNASSIGNED,<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2270,
                  "startColumn": 66,
                  "endLine": 2270,
                  "endColumn": 74,
                  "snippet": {
                    "text": "1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n",
                    "rendered": {
                      "text": "1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n",
                      "markdown": "`1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2270,
                  "startColumn": 35,
                  "endLine": 2270,
                  "endColumn": 43,
                  "snippet": {
                    "text": "1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n",
                    "rendered": {
                      "text": "1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n",
                      "markdown": "`1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n1D4BB,DISALLOWED,MATHEMATICAL SCRIPT SMALL F\r\n1D4BC,UNASSIGNED,<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2268,
                  "startColumn": 66,
                  "endLine": 2268,
                  "endColumn": 74,
                  "snippet": {
                    "text": "1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n",
                    "rendered": {
                      "text": "1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n",
                      "markdown": "`1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2268,
                  "startColumn": 35,
                  "endLine": 2268,
                  "endColumn": 43,
                  "snippet": {
                    "text": "1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n",
                    "rendered": {
                      "text": "1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n",
                      "markdown": "`1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n1D4AE-1D4B9,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL S..MATHEMATICAL SCRIPT SMALL D\r\n1D4BA,UNASSIGNED,<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2266,
                  "startColumn": 66,
                  "endLine": 2266,
                  "endColumn": 74,
                  "snippet": {
                    "text": "1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n",
                    "rendered": {
                      "text": "1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n",
                      "markdown": "`1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2266,
                  "startColumn": 35,
                  "endLine": 2266,
                  "endColumn": 43,
                  "snippet": {
                    "text": "1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n",
                    "rendered": {
                      "text": "1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n",
                      "markdown": "`1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A9-1D4AC,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL N..MATHEMATICAL SCRIPT CAPITAL Q\r\n1D4AD,UNASSIGNED,<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2264,
                  "startColumn": 29,
                  "endLine": 2264,
                  "endColumn": 37,
                  "snippet": {
                    "text": "1D49D,UNASSIGNED,<RESERVED>\r\n1D49E-1D49F,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL C..MATHEMATICAL SCRIPT CAPITAL D\r\n1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                    "rendered": {
                      "text": "1D49D,UNASSIGNED,<RESERVED>\r\n1D49E-1D49F,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL C..MATHEMATICAL SCRIPT CAPITAL D\r\n1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                      "markdown": "`1D49D,UNASSIGNED,<RESERVED>\r\n1D49E-1D49F,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL C..MATHEMATICAL SCRIPT CAPITAL D\r\n1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A5-1D4A6,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL J..MATHEMATICAL SCRIPT CAPITAL K\r\n1D4A7-1D4A8,UNASSIGNED,<RESERVED>..<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2262,
                  "startColumn": 66,
                  "endLine": 2262,
                  "endColumn": 74,
                  "snippet": {
                    "text": "1D455,UNASSIGNED,<RESERVED>\r\n1D456-1D49C,DISALLOWED,MATHEMATICAL ITALIC SMALL I..MATHEMATICAL SCRIPT CAPITAL A\r\n1D49D,UNASSIGNED,<RESERVED>\r\n1D49E-1D49F,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL C..MATHEMATICAL SCRIPT CAPITAL D\r\n1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                    "rendered": {
                      "text": "1D455,UNASSIGNED,<RESERVED>\r\n1D456-1D49C,DISALLOWED,MATHEMATICAL ITALIC SMALL I..MATHEMATICAL SCRIPT CAPITAL A\r\n1D49D,UNASSIGNED,<RESERVED>\r\n1D49E-1D49F,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL C..MATHEMATICAL SCRIPT CAPITAL D\r\n1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                      "markdown": "`1D455,UNASSIGNED,<RESERVED>\r\n1D456-1D49C,DISALLOWED,MATHEMATICAL ITALIC SMALL I..MATHEMATICAL SCRIPT CAPITAL A\r\n1D49D,UNASSIGNED,<RESERVED>\r\n1D49E-1D49F,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL C..MATHEMATICAL SCRIPT CAPITAL D\r\n1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2262,
                  "startColumn": 35,
                  "endLine": 2262,
                  "endColumn": 43,
                  "snippet": {
                    "text": "1D455,UNASSIGNED,<RESERVED>\r\n1D456-1D49C,DISALLOWED,MATHEMATICAL ITALIC SMALL I..MATHEMATICAL SCRIPT CAPITAL A\r\n1D49D,UNASSIGNED,<RESERVED>\r\n1D49E-1D49F,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL C..MATHEMATICAL SCRIPT CAPITAL D\r\n1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                    "rendered": {
                      "text": "1D455,UNASSIGNED,<RESERVED>\r\n1D456-1D49C,DISALLOWED,MATHEMATICAL ITALIC SMALL I..MATHEMATICAL SCRIPT CAPITAL A\r\n1D49D,UNASSIGNED,<RESERVED>\r\n1D49E-1D49F,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL C..MATHEMATICAL SCRIPT CAPITAL D\r\n1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                      "markdown": "`1D455,UNASSIGNED,<RESERVED>\r\n1D456-1D49C,DISALLOWED,MATHEMATICAL ITALIC SMALL I..MATHEMATICAL SCRIPT CAPITAL A\r\n1D49D,UNASSIGNED,<RESERVED>\r\n1D49E-1D49F,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL C..MATHEMATICAL SCRIPT CAPITAL D\r\n1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D4A2,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL G\r\n1D4A3-1D4A4,UNASSIGNED,<RESERVED>..<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2260,
                  "startColumn": 64,
                  "endLine": 2260,
                  "endColumn": 72,
                  "snippet": {
                    "text": "1D372-1D3FF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D400-1D454,DISALLOWED,MATHEMATICAL BOLD CAPITAL A..MATHEMATICAL ITALIC SMALL G\r\n1D455,UNASSIGNED,<RESERVED>\r\n1D456-1D49C,DISALLOWED,MATHEMATICAL ITALIC SMALL I..MATHEMATICAL SCRIPT CAPITAL A\r\n1D49D,UNASSIGNED,<RESERVED>\r\n1D49E-1D49F,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL C..MATHEMATICAL SCRIPT CAPITAL D\r\n1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                    "rendered": {
                      "text": "1D372-1D3FF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D400-1D454,DISALLOWED,MATHEMATICAL BOLD CAPITAL A..MATHEMATICAL ITALIC SMALL G\r\n1D455,UNASSIGNED,<RESERVED>\r\n1D456-1D49C,DISALLOWED,MATHEMATICAL ITALIC SMALL I..MATHEMATICAL SCRIPT CAPITAL A\r\n1D49D,UNASSIGNED,<RESERVED>\r\n1D49E-1D49F,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL C..MATHEMATICAL SCRIPT CAPITAL D\r\n1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                      "markdown": "`1D372-1D3FF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n1D400-1D454,DISALLOWED,MATHEMATICAL BOLD CAPITAL A..MATHEMATICAL ITALIC SMALL G\r\n1D455,UNASSIGNED,<RESERVED>\r\n1D456-1D49C,DISALLOWED,MATHEMATICAL ITALIC SMALL I..MATHEMATICAL SCRIPT CAPITAL A\r\n1D49D,UNASSIGNED,<RESERVED>\r\n1D49E-1D49F,DISALLOWED,MATHEMATICAL SCRIPT CAPITAL C..MATHEMATICAL SCRIPT CAPITAL D\r\n1D4A0-1D4A1,UNASSIGNED,<RESERVED>..<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2197,
                  "startColumn": 71,
                  "endLine": 2197,
                  "endColumn": 77,
                  "snippet": {
                    "text": "10B73-10B77,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10B78-10B7F,DISALLOWED,INSCRIPTIONAL PAHLAVI NUMBER ONE..INSCRIPTIONAL PAHLAVI NUMBER ONE THOUSAND\r\n10B80-10BFF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10C00-10C48,PVALID,OLD TURKIC LETTER ORKHON A..OLD TURKIC LETTER ORKHON BASH\r\n10C49-10E5F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10E60-10E7E,DISALLOWED,RUMI DIGIT ONE..RUMI FRACTION TWO THIRDS\r\n10E7F-10FFF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                    "rendered": {
                      "text": "10B73-10B77,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10B78-10B7F,DISALLOWED,INSCRIPTIONAL PAHLAVI NUMBER ONE..INSCRIPTIONAL PAHLAVI NUMBER ONE THOUSAND\r\n10B80-10BFF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10C00-10C48,PVALID,OLD TURKIC LETTER ORKHON A..OLD TURKIC LETTER ORKHON BASH\r\n10C49-10E5F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10E60-10E7E,DISALLOWED,RUMI DIGIT ONE..RUMI FRACTION TWO THIRDS\r\n10E7F-10FFF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                      "markdown": "`10B73-10B77,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10B78-10B7F,DISALLOWED,INSCRIPTIONAL PAHLAVI NUMBER ONE..INSCRIPTIONAL PAHLAVI NUMBER ONE THOUSAND\r\n10B80-10BFF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10C00-10C48,PVALID,OLD TURKIC LETTER ORKHON A..OLD TURKIC LETTER ORKHON BASH\r\n10C49-10E5F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n10E60-10E7E,DISALLOWED,RUMI DIGIT ONE..RUMI FRACTION TWO THIRDS\r\n10E7F-10FFF,UNASSIGNED,<RESERVED>..<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 2068,
                  "startColumn": 18,
                  "endLine": 2068,
                  "endColumn": 24,
                  "snippet": {
                    "text": "FE68-FE6B,DISALLOWED,SMALL REVERSE SOLIDUS..SMALL COMMERCIAL AT\r\nFE6C-FE6F,UNASSIGNED,<RESERVED>..<RESERVED>\r\nFE70-FE72,DISALLOWED,ARABIC FATHATAN ISOLATED FORM..ARABIC DAMMATAN ISOLATED FORM\r\nFE73,PVALID,ARABIC TAIL FRAGMENT\r\nFE74,DISALLOWED,ARABIC KASRATAN ISOLATED FORM\r\nFE75,UNASSIGNED,<RESERVED>\r\nFE76-FEFC,DISALLOWED,ARABIC FATHA ISOLATED FORM..ARABIC LIGATURE LAM WITH ALEF FINAL FORM\r\n",
                    "rendered": {
                      "text": "FE68-FE6B,DISALLOWED,SMALL REVERSE SOLIDUS..SMALL COMMERCIAL AT\r\nFE6C-FE6F,UNASSIGNED,<RESERVED>..<RESERVED>\r\nFE70-FE72,DISALLOWED,ARABIC FATHATAN ISOLATED FORM..ARABIC DAMMATAN ISOLATED FORM\r\nFE73,PVALID,ARABIC TAIL FRAGMENT\r\nFE74,DISALLOWED,ARABIC KASRATAN ISOLATED FORM\r\nFE75,UNASSIGNED,<RESERVED>\r\nFE76-FEFC,DISALLOWED,ARABIC FATHA ISOLATED FORM..ARABIC LIGATURE LAM WITH ALEF FINAL FORM\r\n",
                      "markdown": "`FE68-FE6B,DISALLOWED,SMALL REVERSE SOLIDUS..SMALL COMMERCIAL AT\r\nFE6C-FE6F,UNASSIGNED,<RESERVED>..<RESERVED>\r\nFE70-FE72,DISALLOWED,ARABIC FATHATAN ISOLATED FORM..ARABIC DAMMATAN ISOLATED FORM\r\nFE73,PVALID,ARABIC TAIL FRAGMENT\r\nFE74,DISALLOWED,ARABIC KASRATAN ISOLATED FORM\r\nFE75,UNASSIGNED,<RESERVED>\r\nFE76-FEFC,DISALLOWED,ARABIC FATHA ISOLATED FORM..ARABIC LIGATURE LAM WITH ALEF FINAL FORM\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 1948,
                  "startColumn": 36,
                  "endLine": 1948,
                  "endColumn": 42,
                  "snippet": {
                    "text": "A830-A839,DISALLOWED,NORTH INDIC FRACTION ONE QUARTER..NORTH INDIC QUANTITY MARK\r\nA83A-A83F,UNASSIGNED,<RESERVED>..<RESERVED>\r\nA840-A873,PVALID,PHAGS-PA LETTER KA..PHAGS-PA LETTER CANDRABINDU\r\nA874-A877,DISALLOWED,PHAGS-PA SINGLE HEAD MARK..PHAGS-PA MARK DOUBLE SHAD\r\nA878-A87F,UNASSIGNED,<RESERVED>..<RESERVED>\r\nA880-A8C4,PVALID,SAURASHTRA SIGN ANUSVARA..SAURASHTRA SIGN VIRAMA\r\nA8C5-A8CD,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                    "rendered": {
                      "text": "A830-A839,DISALLOWED,NORTH INDIC FRACTION ONE QUARTER..NORTH INDIC QUANTITY MARK\r\nA83A-A83F,UNASSIGNED,<RESERVED>..<RESERVED>\r\nA840-A873,PVALID,PHAGS-PA LETTER KA..PHAGS-PA LETTER CANDRABINDU\r\nA874-A877,DISALLOWED,PHAGS-PA SINGLE HEAD MARK..PHAGS-PA MARK DOUBLE SHAD\r\nA878-A87F,UNASSIGNED,<RESERVED>..<RESERVED>\r\nA880-A8C4,PVALID,SAURASHTRA SIGN ANUSVARA..SAURASHTRA SIGN VIRAMA\r\nA8C5-A8CD,UNASSIGNED,<RESERVED>..<RESERVED>\r\n",
                      "markdown": "`A830-A839,DISALLOWED,NORTH INDIC FRACTION ONE QUARTER..NORTH INDIC QUANTITY MARK\r\nA83A-A83F,UNASSIGNED,<RESERVED>..<RESERVED>\r\nA840-A873,PVALID,PHAGS-PA LETTER KA..PHAGS-PA LETTER CANDRABINDU\r\nA874-A877,DISALLOWED,PHAGS-PA SINGLE HEAD MARK..PHAGS-PA MARK DOUBLE SHAD\r\nA878-A87F,UNASSIGNED,<RESERVED>..<RESERVED>\r\nA880-A8C4,PVALID,SAURASHTRA SIGN ANUSVARA..SAURASHTRA SIGN VIRAMA\r\nA8C5-A8CD,UNASSIGNED,<RESERVED>..<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 1876,
                  "startColumn": 46,
                  "endLine": 1876,
                  "endColumn": 52,
                  "snippet": {
                    "text": "A752,DISALLOWED,LATIN CAPITAL LETTER P WITH FLOURISH\r\nA753,PVALID,LATIN SMALL LETTER P WITH FLOURISH\r\nA754,DISALLOWED,LATIN CAPITAL LETTER P WITH SQUIRREL TAIL\r\nA755,PVALID,LATIN SMALL LETTER P WITH SQUIRREL TAIL\r\nA756,DISALLOWED,LATIN CAPITAL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA757,PVALID,LATIN SMALL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA758,DISALLOWED,LATIN CAPITAL LETTER Q WITH DIAGONAL STROKE\r\n",
                    "rendered": {
                      "text": "A752,DISALLOWED,LATIN CAPITAL LETTER P WITH FLOURISH\r\nA753,PVALID,LATIN SMALL LETTER P WITH FLOURISH\r\nA754,DISALLOWED,LATIN CAPITAL LETTER P WITH SQUIRREL TAIL\r\nA755,PVALID,LATIN SMALL LETTER P WITH SQUIRREL TAIL\r\nA756,DISALLOWED,LATIN CAPITAL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA757,PVALID,LATIN SMALL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA758,DISALLOWED,LATIN CAPITAL LETTER Q WITH DIAGONAL STROKE\r\n",
                      "markdown": "`A752,DISALLOWED,LATIN CAPITAL LETTER P WITH FLOURISH\r\nA753,PVALID,LATIN SMALL LETTER P WITH FLOURISH\r\nA754,DISALLOWED,LATIN CAPITAL LETTER P WITH SQUIRREL TAIL\r\nA755,PVALID,LATIN SMALL LETTER P WITH SQUIRREL TAIL\r\nA756,DISALLOWED,LATIN CAPITAL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA757,PVALID,LATIN SMALL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA758,DISALLOWED,LATIN CAPITAL LETTER Q WITH DIAGONAL STROKE\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 1875,
                  "startColumn": 52,
                  "endLine": 1875,
                  "endColumn": 58,
                  "snippet": {
                    "text": "A751,PVALID,LATIN SMALL LETTER P WITH STROKE THROUGH DESCENDER\r\nA752,DISALLOWED,LATIN CAPITAL LETTER P WITH FLOURISH\r\nA753,PVALID,LATIN SMALL LETTER P WITH FLOURISH\r\nA754,DISALLOWED,LATIN CAPITAL LETTER P WITH SQUIRREL TAIL\r\nA755,PVALID,LATIN SMALL LETTER P WITH SQUIRREL TAIL\r\nA756,DISALLOWED,LATIN CAPITAL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA757,PVALID,LATIN SMALL LETTER Q WITH STROKE THROUGH DESCENDER\r\n",
                    "rendered": {
                      "text": "A751,PVALID,LATIN SMALL LETTER P WITH STROKE THROUGH DESCENDER\r\nA752,DISALLOWED,LATIN CAPITAL LETTER P WITH FLOURISH\r\nA753,PVALID,LATIN SMALL LETTER P WITH FLOURISH\r\nA754,DISALLOWED,LATIN CAPITAL LETTER P WITH SQUIRREL TAIL\r\nA755,PVALID,LATIN SMALL LETTER P WITH SQUIRREL TAIL\r\nA756,DISALLOWED,LATIN CAPITAL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA757,PVALID,LATIN SMALL LETTER Q WITH STROKE THROUGH DESCENDER\r\n",
                      "markdown": "`A751,PVALID,LATIN SMALL LETTER P WITH STROKE THROUGH DESCENDER\r\nA752,DISALLOWED,LATIN CAPITAL LETTER P WITH FLOURISH\r\nA753,PVALID,LATIN SMALL LETTER P WITH FLOURISH\r\nA754,DISALLOWED,LATIN CAPITAL LETTER P WITH SQUIRREL TAIL\r\nA755,PVALID,LATIN SMALL LETTER P WITH SQUIRREL TAIL\r\nA756,DISALLOWED,LATIN CAPITAL LETTER Q WITH STROKE THROUGH DESCENDER\r\nA757,PVALID,LATIN SMALL LETTER Q WITH STROKE THROUGH DESCENDER\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 1686,
                  "startColumn": 41,
                  "endLine": 1686,
                  "endColumn": 47,
                  "snippet": {
                    "text": "2DE0-2DFF,PVALID,COMBINING CYRILLIC LETTER BE..COMBINING CYRILLIC LETTER IOTIFIED BIG YUS\r\n2E00-2E2E,DISALLOWED,RIGHT ANGLE SUBSTITUTION MARKER..REVERSED QUESTION MARK\r\n2E2F,PVALID,VERTICAL TILDE\r\n2E30-2E3B,DISALLOWED,RING POINT..THREE-EM DASH\r\n2E3C-2E7F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n2E80-2E99,DISALLOWED,CJK RADICAL REPEAT..CJK RADICAL RAP\r\n2E9A,UNASSIGNED,<RESERVED>\r\n",
                    "rendered": {
                      "text": "2DE0-2DFF,PVALID,COMBINING CYRILLIC LETTER BE..COMBINING CYRILLIC LETTER IOTIFIED BIG YUS\r\n2E00-2E2E,DISALLOWED,RIGHT ANGLE SUBSTITUTION MARKER..REVERSED QUESTION MARK\r\n2E2F,PVALID,VERTICAL TILDE\r\n2E30-2E3B,DISALLOWED,RING POINT..THREE-EM DASH\r\n2E3C-2E7F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n2E80-2E99,DISALLOWED,CJK RADICAL REPEAT..CJK RADICAL RAP\r\n2E9A,UNASSIGNED,<RESERVED>\r\n",
                      "markdown": "`2DE0-2DFF,PVALID,COMBINING CYRILLIC LETTER BE..COMBINING CYRILLIC LETTER IOTIFIED BIG YUS\r\n2E00-2E2E,DISALLOWED,RIGHT ANGLE SUBSTITUTION MARKER..REVERSED QUESTION MARK\r\n2E2F,PVALID,VERTICAL TILDE\r\n2E30-2E3B,DISALLOWED,RING POINT..THREE-EM DASH\r\n2E3C-2E7F,UNASSIGNED,<RESERVED>..<RESERVED>\r\n2E80-2E99,DISALLOWED,CJK RADICAL REPEAT..CJK RADICAL RAP\r\n2E9A,UNASSIGNED,<RESERVED>\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 1544,
                  "startColumn": 74,
                  "endLine": 1544,
                  "endColumn": 80,
                  "snippet": {
                    "text": "2C6D-2C70,DISALLOWED,LATIN CAPITAL LETTER ALPHA..LATIN CAPITAL LETTER TURNED ALPHA\r\n2C71,PVALID,LATIN SMALL LETTER V WITH RIGHT HOOK\r\n2C72,DISALLOWED,LATIN CAPITAL LETTER W WITH HOOK\r\n2C73-2C74,PVALID,LATIN SMALL LETTER W WITH HOOK..LATIN SMALL LETTER V WITH CURL\r\n2C75,DISALLOWED,LATIN CAPITAL LETTER HALF H\r\n2C76-2C7B,PVALID,LATIN SMALL LETTER HALF H..LATIN LETTER SMALL CAPITAL TURNED E\r\n2C7C-2C80,DISALLOWED,LATIN SUBSCRIPT SMALL LETTER J..COPTIC CAPITAL LETTER ALFA\r\n",
                    "rendered": {
                      "text": "2C6D-2C70,DISALLOWED,LATIN CAPITAL LETTER ALPHA..LATIN CAPITAL LETTER TURNED ALPHA\r\n2C71,PVALID,LATIN SMALL LETTER V WITH RIGHT HOOK\r\n2C72,DISALLOWED,LATIN CAPITAL LETTER W WITH HOOK\r\n2C73-2C74,PVALID,LATIN SMALL LETTER W WITH HOOK..LATIN SMALL LETTER V WITH CURL\r\n2C75,DISALLOWED,LATIN CAPITAL LETTER HALF H\r\n2C76-2C7B,PVALID,LATIN SMALL LETTER HALF H..LATIN LETTER SMALL CAPITAL TURNED E\r\n2C7C-2C80,DISALLOWED,LATIN SUBSCRIPT SMALL LETTER J..COPTIC CAPITAL LETTER ALFA\r\n",
                      "markdown": "`2C6D-2C70,DISALLOWED,LATIN CAPITAL LETTER ALPHA..LATIN CAPITAL LETTER TURNED ALPHA\r\n2C71,PVALID,LATIN SMALL LETTER V WITH RIGHT HOOK\r\n2C72,DISALLOWED,LATIN CAPITAL LETTER W WITH HOOK\r\n2C73-2C74,PVALID,LATIN SMALL LETTER W WITH HOOK..LATIN SMALL LETTER V WITH CURL\r\n2C75,DISALLOWED,LATIN CAPITAL LETTER HALF H\r\n2C76-2C7B,PVALID,LATIN SMALL LETTER HALF H..LATIN LETTER SMALL CAPITAL TURNED E\r\n2C7C-2C80,DISALLOWED,LATIN SUBSCRIPT SMALL LETTER J..COPTIC CAPITAL LETTER ALFA\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 1533,
                  "startColumn": 90,
                  "endLine": 1533,
                  "endColumn": 96,
                  "snippet": {
                    "text": "2C5F,UNASSIGNED,<RESERVED>\r\n2C60,DISALLOWED,LATIN CAPITAL LETTER L WITH DOUBLE BAR\r\n2C61,PVALID,LATIN SMALL LETTER L WITH DOUBLE BAR\r\n2C62-2C64,DISALLOWED,LATIN CAPITAL LETTER L WITH MIDDLE TILDE..LATIN CAPITAL LETTER R WITH TAIL\r\n2C65-2C66,PVALID,LATIN SMALL LETTER A WITH STROKE..LATIN SMALL LETTER T WITH DIAGONAL STROKE\r\n2C67,DISALLOWED,LATIN CAPITAL LETTER H WITH DESCENDER\r\n2C68,PVALID,LATIN SMALL LETTER H WITH DESCENDER\r\n",
                    "rendered": {
                      "text": "2C5F,UNASSIGNED,<RESERVED>\r\n2C60,DISALLOWED,LATIN CAPITAL LETTER L WITH DOUBLE BAR\r\n2C61,PVALID,LATIN SMALL LETTER L WITH DOUBLE BAR\r\n2C62-2C64,DISALLOWED,LATIN CAPITAL LETTER L WITH MIDDLE TILDE..LATIN CAPITAL LETTER R WITH TAIL\r\n2C65-2C66,PVALID,LATIN SMALL LETTER A WITH STROKE..LATIN SMALL LETTER T WITH DIAGONAL STROKE\r\n2C67,DISALLOWED,LATIN CAPITAL LETTER H WITH DESCENDER\r\n2C68,PVALID,LATIN SMALL LETTER H WITH DESCENDER\r\n",
                      "markdown": "`2C5F,UNASSIGNED,<RESERVED>\r\n2C60,DISALLOWED,LATIN CAPITAL LETTER L WITH DOUBLE BAR\r\n2C61,PVALID,LATIN SMALL LETTER L WITH DOUBLE BAR\r\n2C62-2C64,DISALLOWED,LATIN CAPITAL LETTER L WITH MIDDLE TILDE..LATIN CAPITAL LETTER R WITH TAIL\r\n2C65-2C66,PVALID,LATIN SMALL LETTER A WITH STROKE..LATIN SMALL LETTER T WITH DIAGONAL STROKE\r\n2C67,DISALLOWED,LATIN CAPITAL LETTER H WITH DESCENDER\r\n2C68,PVALID,LATIN SMALL LETTER H WITH DESCENDER\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 461,
                  "startColumn": 47,
                  "endLine": 461,
                  "endColumn": 53,
                  "snippet": {
                    "text": "04CA,PVALID,CYRILLIC SMALL LETTER EN WITH TAIL\r\n04CB,DISALLOWED,CYRILLIC CAPITAL LETTER KHAKASSIAN CHE\r\n04CC,PVALID,CYRILLIC SMALL LETTER KHAKASSIAN CHE\r\n04CD,DISALLOWED,CYRILLIC CAPITAL LETTER EM WITH TAIL\r\n04CE-04CF,PVALID,CYRILLIC SMALL LETTER EM WITH TAIL..CYRILLIC SMALL LETTER PALOCHKA\r\n04D0,DISALLOWED,CYRILLIC CAPITAL LETTER A WITH BREVE\r\n04D1,PVALID,CYRILLIC SMALL LETTER A WITH BREVE\r\n",
                    "rendered": {
                      "text": "04CA,PVALID,CYRILLIC SMALL LETTER EN WITH TAIL\r\n04CB,DISALLOWED,CYRILLIC CAPITAL LETTER KHAKASSIAN CHE\r\n04CC,PVALID,CYRILLIC SMALL LETTER KHAKASSIAN CHE\r\n04CD,DISALLOWED,CYRILLIC CAPITAL LETTER EM WITH TAIL\r\n04CE-04CF,PVALID,CYRILLIC SMALL LETTER EM WITH TAIL..CYRILLIC SMALL LETTER PALOCHKA\r\n04D0,DISALLOWED,CYRILLIC CAPITAL LETTER A WITH BREVE\r\n04D1,PVALID,CYRILLIC SMALL LETTER A WITH BREVE\r\n",
                      "markdown": "`04CA,PVALID,CYRILLIC SMALL LETTER EN WITH TAIL\r\n04CB,DISALLOWED,CYRILLIC CAPITAL LETTER KHAKASSIAN CHE\r\n04CC,PVALID,CYRILLIC SMALL LETTER KHAKASSIAN CHE\r\n04CD,DISALLOWED,CYRILLIC CAPITAL LETTER EM WITH TAIL\r\n04CE-04CF,PVALID,CYRILLIC SMALL LETTER EM WITH TAIL..CYRILLIC SMALL LETTER PALOCHKA\r\n04D0,DISALLOWED,CYRILLIC CAPITAL LETTER A WITH BREVE\r\n04D1,PVALID,CYRILLIC SMALL LETTER A WITH BREVE\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 458,
                  "startColumn": 41,
                  "endLine": 458,
                  "endColumn": 47,
                  "snippet": {
                    "text": "04C7,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH HOOK\r\n04C8,PVALID,CYRILLIC SMALL LETTER EN WITH HOOK\r\n04C9,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH TAIL\r\n04CA,PVALID,CYRILLIC SMALL LETTER EN WITH TAIL\r\n04CB,DISALLOWED,CYRILLIC CAPITAL LETTER KHAKASSIAN CHE\r\n04CC,PVALID,CYRILLIC SMALL LETTER KHAKASSIAN CHE\r\n04CD,DISALLOWED,CYRILLIC CAPITAL LETTER EM WITH TAIL\r\n",
                    "rendered": {
                      "text": "04C7,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH HOOK\r\n04C8,PVALID,CYRILLIC SMALL LETTER EN WITH HOOK\r\n04C9,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH TAIL\r\n04CA,PVALID,CYRILLIC SMALL LETTER EN WITH TAIL\r\n04CB,DISALLOWED,CYRILLIC CAPITAL LETTER KHAKASSIAN CHE\r\n04CC,PVALID,CYRILLIC SMALL LETTER KHAKASSIAN CHE\r\n04CD,DISALLOWED,CYRILLIC CAPITAL LETTER EM WITH TAIL\r\n",
                      "markdown": "`04C7,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH HOOK\r\n04C8,PVALID,CYRILLIC SMALL LETTER EN WITH HOOK\r\n04C9,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH TAIL\r\n04CA,PVALID,CYRILLIC SMALL LETTER EN WITH TAIL\r\n04CB,DISALLOWED,CYRILLIC CAPITAL LETTER KHAKASSIAN CHE\r\n04CC,PVALID,CYRILLIC SMALL LETTER KHAKASSIAN CHE\r\n04CD,DISALLOWED,CYRILLIC CAPITAL LETTER EM WITH TAIL\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 457,
                  "startColumn": 47,
                  "endLine": 457,
                  "endColumn": 53,
                  "snippet": {
                    "text": "04C6,PVALID,CYRILLIC SMALL LETTER EL WITH TAIL\r\n04C7,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH HOOK\r\n04C8,PVALID,CYRILLIC SMALL LETTER EN WITH HOOK\r\n04C9,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH TAIL\r\n04CA,PVALID,CYRILLIC SMALL LETTER EN WITH TAIL\r\n04CB,DISALLOWED,CYRILLIC CAPITAL LETTER KHAKASSIAN CHE\r\n04CC,PVALID,CYRILLIC SMALL LETTER KHAKASSIAN CHE\r\n",
                    "rendered": {
                      "text": "04C6,PVALID,CYRILLIC SMALL LETTER EL WITH TAIL\r\n04C7,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH HOOK\r\n04C8,PVALID,CYRILLIC SMALL LETTER EN WITH HOOK\r\n04C9,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH TAIL\r\n04CA,PVALID,CYRILLIC SMALL LETTER EN WITH TAIL\r\n04CB,DISALLOWED,CYRILLIC CAPITAL LETTER KHAKASSIAN CHE\r\n04CC,PVALID,CYRILLIC SMALL LETTER KHAKASSIAN CHE\r\n",
                      "markdown": "`04C6,PVALID,CYRILLIC SMALL LETTER EL WITH TAIL\r\n04C7,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH HOOK\r\n04C8,PVALID,CYRILLIC SMALL LETTER EN WITH HOOK\r\n04C9,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH TAIL\r\n04CA,PVALID,CYRILLIC SMALL LETTER EN WITH TAIL\r\n04CB,DISALLOWED,CYRILLIC CAPITAL LETTER KHAKASSIAN CHE\r\n04CC,PVALID,CYRILLIC SMALL LETTER KHAKASSIAN CHE\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 454,
                  "startColumn": 41,
                  "endLine": 454,
                  "endColumn": 47,
                  "snippet": {
                    "text": "04C3,DISALLOWED,CYRILLIC CAPITAL LETTER KA WITH HOOK\r\n04C4,PVALID,CYRILLIC SMALL LETTER KA WITH HOOK\r\n04C5,DISALLOWED,CYRILLIC CAPITAL LETTER EL WITH TAIL\r\n04C6,PVALID,CYRILLIC SMALL LETTER EL WITH TAIL\r\n04C7,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH HOOK\r\n04C8,PVALID,CYRILLIC SMALL LETTER EN WITH HOOK\r\n04C9,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH TAIL\r\n",
                    "rendered": {
                      "text": "04C3,DISALLOWED,CYRILLIC CAPITAL LETTER KA WITH HOOK\r\n04C4,PVALID,CYRILLIC SMALL LETTER KA WITH HOOK\r\n04C5,DISALLOWED,CYRILLIC CAPITAL LETTER EL WITH TAIL\r\n04C6,PVALID,CYRILLIC SMALL LETTER EL WITH TAIL\r\n04C7,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH HOOK\r\n04C8,PVALID,CYRILLIC SMALL LETTER EN WITH HOOK\r\n04C9,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH TAIL\r\n",
                      "markdown": "`04C3,DISALLOWED,CYRILLIC CAPITAL LETTER KA WITH HOOK\r\n04C4,PVALID,CYRILLIC SMALL LETTER KA WITH HOOK\r\n04C5,DISALLOWED,CYRILLIC CAPITAL LETTER EL WITH TAIL\r\n04C6,PVALID,CYRILLIC SMALL LETTER EL WITH TAIL\r\n04C7,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH HOOK\r\n04C8,PVALID,CYRILLIC SMALL LETTER EN WITH HOOK\r\n04C9,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH TAIL\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 453,
                  "startColumn": 47,
                  "endLine": 453,
                  "endColumn": 53,
                  "snippet": {
                    "text": "04C2,PVALID,CYRILLIC SMALL LETTER ZHE WITH BREVE\r\n04C3,DISALLOWED,CYRILLIC CAPITAL LETTER KA WITH HOOK\r\n04C4,PVALID,CYRILLIC SMALL LETTER KA WITH HOOK\r\n04C5,DISALLOWED,CYRILLIC CAPITAL LETTER EL WITH TAIL\r\n04C6,PVALID,CYRILLIC SMALL LETTER EL WITH TAIL\r\n04C7,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH HOOK\r\n04C8,PVALID,CYRILLIC SMALL LETTER EN WITH HOOK\r\n",
                    "rendered": {
                      "text": "04C2,PVALID,CYRILLIC SMALL LETTER ZHE WITH BREVE\r\n04C3,DISALLOWED,CYRILLIC CAPITAL LETTER KA WITH HOOK\r\n04C4,PVALID,CYRILLIC SMALL LETTER KA WITH HOOK\r\n04C5,DISALLOWED,CYRILLIC CAPITAL LETTER EL WITH TAIL\r\n04C6,PVALID,CYRILLIC SMALL LETTER EL WITH TAIL\r\n04C7,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH HOOK\r\n04C8,PVALID,CYRILLIC SMALL LETTER EN WITH HOOK\r\n",
                      "markdown": "`04C2,PVALID,CYRILLIC SMALL LETTER ZHE WITH BREVE\r\n04C3,DISALLOWED,CYRILLIC CAPITAL LETTER KA WITH HOOK\r\n04C4,PVALID,CYRILLIC SMALL LETTER KA WITH HOOK\r\n04C5,DISALLOWED,CYRILLIC CAPITAL LETTER EL WITH TAIL\r\n04C6,PVALID,CYRILLIC SMALL LETTER EL WITH TAIL\r\n04C7,DISALLOWED,CYRILLIC CAPITAL LETTER EN WITH HOOK\r\n04C8,PVALID,CYRILLIC SMALL LETTER EN WITH HOOK\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 396,
                  "startColumn": 46,
                  "endLine": 396,
                  "endColumn": 52,
                  "snippet": {
                    "text": "0482,DISALLOWED,CYRILLIC THOUSANDS SIGN\r\n0483-0487,PVALID,COMBINING CYRILLIC TITLO..COMBINING CYRILLIC POKRYTIE\r\n0488-048A,DISALLOWED,COMBINING CYRILLIC HUNDRED THOUSANDS SIGN..CYRILLIC CAPITAL LETTER SHORT I WITH TAIL\r\n048B,PVALID,CYRILLIC SMALL LETTER SHORT I WITH TAIL\r\n048C,DISALLOWED,CYRILLIC CAPITAL LETTER SEMISOFT SIGN\r\n048D,PVALID,CYRILLIC SMALL LETTER SEMISOFT SIGN\r\n048E,DISALLOWED,CYRILLIC CAPITAL LETTER ER WITH TICK\r\n",
                    "rendered": {
                      "text": "0482,DISALLOWED,CYRILLIC THOUSANDS SIGN\r\n0483-0487,PVALID,COMBINING CYRILLIC TITLO..COMBINING CYRILLIC POKRYTIE\r\n0488-048A,DISALLOWED,COMBINING CYRILLIC HUNDRED THOUSANDS SIGN..CYRILLIC CAPITAL LETTER SHORT I WITH TAIL\r\n048B,PVALID,CYRILLIC SMALL LETTER SHORT I WITH TAIL\r\n048C,DISALLOWED,CYRILLIC CAPITAL LETTER SEMISOFT SIGN\r\n048D,PVALID,CYRILLIC SMALL LETTER SEMISOFT SIGN\r\n048E,DISALLOWED,CYRILLIC CAPITAL LETTER ER WITH TICK\r\n",
                      "markdown": "`0482,DISALLOWED,CYRILLIC THOUSANDS SIGN\r\n0483-0487,PVALID,COMBINING CYRILLIC TITLO..COMBINING CYRILLIC POKRYTIE\r\n0488-048A,DISALLOWED,COMBINING CYRILLIC HUNDRED THOUSANDS SIGN..CYRILLIC CAPITAL LETTER SHORT I WITH TAIL\r\n048B,PVALID,CYRILLIC SMALL LETTER SHORT I WITH TAIL\r\n048C,DISALLOWED,CYRILLIC CAPITAL LETTER SEMISOFT SIGN\r\n048D,PVALID,CYRILLIC SMALL LETTER SEMISOFT SIGN\r\n048E,DISALLOWED,CYRILLIC CAPITAL LETTER ER WITH TICK\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 395,
                  "startColumn": 100,
                  "endLine": 395,
                  "endColumn": 106,
                  "snippet": {
                    "text": "0481,PVALID,CYRILLIC SMALL LETTER KOPPA\r\n0482,DISALLOWED,CYRILLIC THOUSANDS SIGN\r\n0483-0487,PVALID,COMBINING CYRILLIC TITLO..COMBINING CYRILLIC POKRYTIE\r\n0488-048A,DISALLOWED,COMBINING CYRILLIC HUNDRED THOUSANDS SIGN..CYRILLIC CAPITAL LETTER SHORT I WITH TAIL\r\n048B,PVALID,CYRILLIC SMALL LETTER SHORT I WITH TAIL\r\n048C,DISALLOWED,CYRILLIC CAPITAL LETTER SEMISOFT SIGN\r\n048D,PVALID,CYRILLIC SMALL LETTER SEMISOFT SIGN\r\n",
                    "rendered": {
                      "text": "0481,PVALID,CYRILLIC SMALL LETTER KOPPA\r\n0482,DISALLOWED,CYRILLIC THOUSANDS SIGN\r\n0483-0487,PVALID,COMBINING CYRILLIC TITLO..COMBINING CYRILLIC POKRYTIE\r\n0488-048A,DISALLOWED,COMBINING CYRILLIC HUNDRED THOUSANDS SIGN..CYRILLIC CAPITAL LETTER SHORT I WITH TAIL\r\n048B,PVALID,CYRILLIC SMALL LETTER SHORT I WITH TAIL\r\n048C,DISALLOWED,CYRILLIC CAPITAL LETTER SEMISOFT SIGN\r\n048D,PVALID,CYRILLIC SMALL LETTER SEMISOFT SIGN\r\n",
                      "markdown": "`0481,PVALID,CYRILLIC SMALL LETTER KOPPA\r\n0482,DISALLOWED,CYRILLIC THOUSANDS SIGN\r\n0483-0487,PVALID,COMBINING CYRILLIC TITLO..COMBINING CYRILLIC POKRYTIE\r\n0488-048A,DISALLOWED,COMBINING CYRILLIC HUNDRED THOUSANDS SIGN..CYRILLIC CAPITAL LETTER SHORT I WITH TAIL\r\n048B,PVALID,CYRILLIC SMALL LETTER SHORT I WITH TAIL\r\n048C,DISALLOWED,CYRILLIC CAPITAL LETTER SEMISOFT SIGN\r\n048D,PVALID,CYRILLIC SMALL LETTER SEMISOFT SIGN\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 96,
                  "endLine": 285,
                  "endColumn": 102,
                  "snippet": {
                    "text": "024C,DISALLOWED,LATIN CAPITAL LETTER R WITH STROKE\r\n024D,PVALID,LATIN SMALL LETTER R WITH STROKE\r\n024E,DISALLOWED,LATIN CAPITAL LETTER Y WITH STROKE\r\n024F-02AF,PVALID,LATIN SMALL LETTER Y WITH STROKE..LATIN SMALL LETTER TURNED H WITH FISHHOOK AND TAIL\r\n02B0-02B8,DISALLOWED,MODIFIER LETTER SMALL H..MODIFIER LETTER SMALL Y\r\n02B9-02C1,PVALID,MODIFIER LETTER PRIME..MODIFIER LETTER REVERSED GLOTTAL STOP\r\n02C2-02C5,DISALLOWED,MODIFIER LETTER LEFT ARROWHEAD..MODIFIER LETTER DOWN ARROWHEAD\r\n",
                    "rendered": {
                      "text": "024C,DISALLOWED,LATIN CAPITAL LETTER R WITH STROKE\r\n024D,PVALID,LATIN SMALL LETTER R WITH STROKE\r\n024E,DISALLOWED,LATIN CAPITAL LETTER Y WITH STROKE\r\n024F-02AF,PVALID,LATIN SMALL LETTER Y WITH STROKE..LATIN SMALL LETTER TURNED H WITH FISHHOOK AND TAIL\r\n02B0-02B8,DISALLOWED,MODIFIER LETTER SMALL H..MODIFIER LETTER SMALL Y\r\n02B9-02C1,PVALID,MODIFIER LETTER PRIME..MODIFIER LETTER REVERSED GLOTTAL STOP\r\n02C2-02C5,DISALLOWED,MODIFIER LETTER LEFT ARROWHEAD..MODIFIER LETTER DOWN ARROWHEAD\r\n",
                      "markdown": "`024C,DISALLOWED,LATIN CAPITAL LETTER R WITH STROKE\r\n024D,PVALID,LATIN SMALL LETTER R WITH STROKE\r\n024E,DISALLOWED,LATIN CAPITAL LETTER Y WITH STROKE\r\n024F-02AF,PVALID,LATIN SMALL LETTER Y WITH STROKE..LATIN SMALL LETTER TURNED H WITH FISHHOOK AND TAIL\r\n02B0-02B8,DISALLOWED,MODIFIER LETTER SMALL H..MODIFIER LETTER SMALL Y\r\n02B9-02C1,PVALID,MODIFIER LETTER PRIME..MODIFIER LETTER REVERSED GLOTTAL STOP\r\n02C2-02C5,DISALLOWED,MODIFIER LETTER LEFT ARROWHEAD..MODIFIER LETTER DOWN ARROWHEAD\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 42,
                  "endLine": 281,
                  "endColumn": 48,
                  "snippet": {
                    "text": "0248,DISALLOWED,LATIN CAPITAL LETTER J WITH STROKE\r\n0249,PVALID,LATIN SMALL LETTER J WITH STROKE\r\n024A,DISALLOWED,LATIN CAPITAL LETTER SMALL Q WITH HOOK TAIL\r\n024B,PVALID,LATIN SMALL LETTER Q WITH HOOK TAIL\r\n024C,DISALLOWED,LATIN CAPITAL LETTER R WITH STROKE\r\n024D,PVALID,LATIN SMALL LETTER R WITH STROKE\r\n024E,DISALLOWED,LATIN CAPITAL LETTER Y WITH STROKE\r\n",
                    "rendered": {
                      "text": "0248,DISALLOWED,LATIN CAPITAL LETTER J WITH STROKE\r\n0249,PVALID,LATIN SMALL LETTER J WITH STROKE\r\n024A,DISALLOWED,LATIN CAPITAL LETTER SMALL Q WITH HOOK TAIL\r\n024B,PVALID,LATIN SMALL LETTER Q WITH HOOK TAIL\r\n024C,DISALLOWED,LATIN CAPITAL LETTER R WITH STROKE\r\n024D,PVALID,LATIN SMALL LETTER R WITH STROKE\r\n024E,DISALLOWED,LATIN CAPITAL LETTER Y WITH STROKE\r\n",
                      "markdown": "`0248,DISALLOWED,LATIN CAPITAL LETTER J WITH STROKE\r\n0249,PVALID,LATIN SMALL LETTER J WITH STROKE\r\n024A,DISALLOWED,LATIN CAPITAL LETTER SMALL Q WITH HOOK TAIL\r\n024B,PVALID,LATIN SMALL LETTER Q WITH HOOK TAIL\r\n024C,DISALLOWED,LATIN CAPITAL LETTER R WITH STROKE\r\n024D,PVALID,LATIN SMALL LETTER R WITH STROKE\r\n024E,DISALLOWED,LATIN CAPITAL LETTER Y WITH STROKE\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 54,
                  "endLine": 280,
                  "endColumn": 60,
                  "snippet": {
                    "text": "0247,PVALID,LATIN SMALL LETTER E WITH STROKE\r\n0248,DISALLOWED,LATIN CAPITAL LETTER J WITH STROKE\r\n0249,PVALID,LATIN SMALL LETTER J WITH STROKE\r\n024A,DISALLOWED,LATIN CAPITAL LETTER SMALL Q WITH HOOK TAIL\r\n024B,PVALID,LATIN SMALL LETTER Q WITH HOOK TAIL\r\n024C,DISALLOWED,LATIN CAPITAL LETTER R WITH STROKE\r\n024D,PVALID,LATIN SMALL LETTER R WITH STROKE\r\n",
                    "rendered": {
                      "text": "0247,PVALID,LATIN SMALL LETTER E WITH STROKE\r\n0248,DISALLOWED,LATIN CAPITAL LETTER J WITH STROKE\r\n0249,PVALID,LATIN SMALL LETTER J WITH STROKE\r\n024A,DISALLOWED,LATIN CAPITAL LETTER SMALL Q WITH HOOK TAIL\r\n024B,PVALID,LATIN SMALL LETTER Q WITH HOOK TAIL\r\n024C,DISALLOWED,LATIN CAPITAL LETTER R WITH STROKE\r\n024D,PVALID,LATIN SMALL LETTER R WITH STROKE\r\n",
                      "markdown": "`0247,PVALID,LATIN SMALL LETTER E WITH STROKE\r\n0248,DISALLOWED,LATIN CAPITAL LETTER J WITH STROKE\r\n0249,PVALID,LATIN SMALL LETTER J WITH STROKE\r\n024A,DISALLOWED,LATIN CAPITAL LETTER SMALL Q WITH HOOK TAIL\r\n024B,PVALID,LATIN SMALL LETTER Q WITH HOOK TAIL\r\n024C,DISALLOWED,LATIN CAPITAL LETTER R WITH STROKE\r\n024D,PVALID,LATIN SMALL LETTER R WITH STROKE\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 86,
                  "endLine": 273,
                  "endColumn": 92,
                  "snippet": {
                    "text": "023A-023B,DISALLOWED,LATIN CAPITAL LETTER A WITH STROKE..LATIN CAPITAL LETTER C WITH STROKE\r\n023C,PVALID,LATIN SMALL LETTER C WITH STROKE\r\n023D-023E,DISALLOWED,LATIN CAPITAL LETTER L WITH BAR..LATIN CAPITAL LETTER T WITH DIAGONAL STROKE\r\n023F-0240,PVALID,LATIN SMALL LETTER S WITH SWASH TAIL..LATIN SMALL LETTER Z WITH SWASH TAIL\r\n0241,DISALLOWED,LATIN CAPITAL LETTER GLOTTAL STOP\r\n0242,PVALID,LATIN SMALL LETTER GLOTTAL STOP\r\n0243-0246,DISALLOWED,LATIN CAPITAL LETTER B WITH STROKE..LATIN CAPITAL LETTER E WITH STROKE\r\n",
                    "rendered": {
                      "text": "023A-023B,DISALLOWED,LATIN CAPITAL LETTER A WITH STROKE..LATIN CAPITAL LETTER C WITH STROKE\r\n023C,PVALID,LATIN SMALL LETTER C WITH STROKE\r\n023D-023E,DISALLOWED,LATIN CAPITAL LETTER L WITH BAR..LATIN CAPITAL LETTER T WITH DIAGONAL STROKE\r\n023F-0240,PVALID,LATIN SMALL LETTER S WITH SWASH TAIL..LATIN SMALL LETTER Z WITH SWASH TAIL\r\n0241,DISALLOWED,LATIN CAPITAL LETTER GLOTTAL STOP\r\n0242,PVALID,LATIN SMALL LETTER GLOTTAL STOP\r\n0243-0246,DISALLOWED,LATIN CAPITAL LETTER B WITH STROKE..LATIN CAPITAL LETTER E WITH STROKE\r\n",
                      "markdown": "`023A-023B,DISALLOWED,LATIN CAPITAL LETTER A WITH STROKE..LATIN CAPITAL LETTER C WITH STROKE\r\n023C,PVALID,LATIN SMALL LETTER C WITH STROKE\r\n023D-023E,DISALLOWED,LATIN CAPITAL LETTER L WITH BAR..LATIN CAPITAL LETTER T WITH DIAGONAL STROKE\r\n023F-0240,PVALID,LATIN SMALL LETTER S WITH SWASH TAIL..LATIN SMALL LETTER Z WITH SWASH TAIL\r\n0241,DISALLOWED,LATIN CAPITAL LETTER GLOTTAL STOP\r\n0242,PVALID,LATIN SMALL LETTER GLOTTAL STOP\r\n0243-0246,DISALLOWED,LATIN CAPITAL LETTER B WITH STROKE..LATIN CAPITAL LETTER E WITH STROKE\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/idna-tables-properties.csv.gz/idna-tables-properties.csv"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 37,
                  "endLine": 251,
                  "endColumn": 43,
                  "snippet": {
                    "text": "021E,DISALLOWED,LATIN CAPITAL LETTER H WITH CARON\r\n021F,PVALID,LATIN SMALL LETTER H WITH CARON\r\n0220,DISALLOWED,LATIN CAPITAL LETTER N WITH LONG RIGHT LEG\r\n0221,PVALID,LATIN SMALL LETTER D WITH CURL\r\n0222,DISALLOWED,LATIN CAPITAL LETTER OU\r\n0223,PVALID,LATIN SMALL LETTER OU\r\n0224,DISALLOWED,LATIN CAPITAL LETTER Z WITH HOOK\r\n",
                    "rendered": {
                      "text": "021E,DISALLOWED,LATIN CAPITAL LETTER H WITH CARON\r\n021F,PVALID,LATIN SMALL LETTER H WITH CARON\r\n0220,DISALLOWED,LATIN CAPITAL LETTER N WITH LONG RIGHT LEG\r\n0221,PVALID,LATIN SMALL LETTER D WITH CURL\r\n0222,DISALLOWED,LATIN CAPITAL LETTER OU\r\n0223,PVALID,LATIN SMALL LETTER OU\r\n0224,DISALLOWED,LATIN CAPITAL LETTER Z WITH HOOK\r\n",
                      "markdown": "`021E,DISALLOWED,LATIN CAPITAL LETTER H WITH CARON\r\n021F,PVALID,LATIN SMALL LETTER H WITH CARON\r\n0220,DISALLOWED,LATIN CAPITAL LETTER N WITH LONG RIGHT LEG\r\n0221,PVALID,LATIN SMALL LETTER D WITH CURL\r\n0222,DISALLOWED,LATIN CAPITAL LETTER OU\r\n0223,PVALID,LATIN SMALL LETTER OU\r\n0224,DISALLOWED,LATIN CAPITAL LETTER Z WITH HOOK\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/hypothesis.py"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 20,
                  "endLine": 235,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            List[Text],\n            draw(\n                lists(\n                    hostname_labels(allow_idn=allow_idn),\n                    min_size=1,\n                    max_size=4,\n                )\n",
                    "rendered": {
                      "text": "            List[Text],\n            draw(\n                lists(\n                    hostname_labels(allow_idn=allow_idn),\n                    min_size=1,\n                    max_size=4,\n                )\n",
                      "markdown": "`            List[Text],\n            draw(\n                lists(\n                    hostname_labels(allow_idn=allow_idn),\n                    min_size=1,\n                    max_size=4,\n                )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/hypothesis.py"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 20,
                  "endLine": 222,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            cast(\n                Text,\n                draw(\n                    hostname_labels(allow_idn=allow_idn).filter(\n                        lambda l: (\n                            True if allow_leading_digit else l[0] not in digits\n                        )\n",
                    "rendered": {
                      "text": "            cast(\n                Text,\n                draw(\n                    hostname_labels(allow_idn=allow_idn).filter(\n                        lambda l: (\n                            True if allow_leading_digit else l[0] not in digits\n                        )\n",
                      "markdown": "`            cast(\n                Text,\n                draw(\n                    hostname_labels(allow_idn=allow_idn).filter(\n                        lambda l: (\n                            True if allow_leading_digit else l[0] not in digits\n                        )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/hypothesis.py"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 8,
                  "endLine": 160,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        return cast(int, draw(integers(min_value=min_value, max_value=65535)))\n\n    @composite\n    def hostname_labels(draw, allow_idn=True):\n        # type: (DrawCallable, bool) -> Text\n        \"\"\"\n        A strategy which generates host name labels.\n",
                    "rendered": {
                      "text": "        return cast(int, draw(integers(min_value=min_value, max_value=65535)))\n\n    @composite\n    def hostname_labels(draw, allow_idn=True):\n        # type: (DrawCallable, bool) -> Text\n        \"\"\"\n        A strategy which generates host name labels.\n",
                      "markdown": "`        return cast(int, draw(integers(min_value=min_value, max_value=65535)))\n\n    @composite\n    def hostname_labels(draw, allow_idn=True):\n        # type: (DrawCallable, bool) -> Text\n        \"\"\"\n        A strategy which generates host name labels.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-hyperlink-21.0.0-r2.apk/py3-hyperlink-21.0.0-r2/usr/lib/python3.12/site-packages/hyperlink/hypothesis.py"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 9,
                  "endLine": 48,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    __all__ = (\n        \"decoded_urls\",\n        \"encoded_urls\",\n        \"hostname_labels\",\n        \"hostnames\",\n        \"idna_text\",\n        \"paths\",\n",
                    "rendered": {
                      "text": "    __all__ = (\n        \"decoded_urls\",\n        \"encoded_urls\",\n        \"hostname_labels\",\n        \"hostnames\",\n        \"idna_text\",\n        \"paths\",\n",
                      "markdown": "`    __all__ = (\n        \"decoded_urls\",\n        \"encoded_urls\",\n        \"hostname_labels\",\n        \"hostnames\",\n        \"idna_text\",\n        \"paths\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}