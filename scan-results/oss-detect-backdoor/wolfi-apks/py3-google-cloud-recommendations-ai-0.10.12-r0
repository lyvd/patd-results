{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google_cloud_recommendations_ai-0.10.12.dist-info/METADATA"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 40,
                  "endLine": 103,
                  "endColumn": 48,
                  "snippet": {
                    "text": "Python <= 3.6\n\nIf you are using an `end-of-life`_\nversion of Python, we recommend that you update as soon as possible to an actively supported version.\n\n.. _end-of-life: https://devguide.python.org/devcycle/#end-of-life-branches\n\n",
                    "rendered": {
                      "text": "Python <= 3.6\n\nIf you are using an `end-of-life`_\nversion of Python, we recommend that you update as soon as possible to an actively supported version.\n\n.. _end-of-life: https://devguide.python.org/devcycle/#end-of-life-branches\n\n",
                      "markdown": "`Python <= 3.6\n\nIf you are using an `end-of-life`_\nversion of Python, we recommend that you update as soon as possible to an actively supported version.\n\n.. _end-of-life: https://devguide.python.org/devcycle/#end-of-life-branches\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google_cloud_recommendations_ai-0.10.12.dist-info/METADATA"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 75,
                  "endLine": 35,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n|preview| |pypi| |versions|\n\n`Recommendations AI`_: delivers highly personalized product recommendations at scale.\n\n- `Client Library Documentation`_\n- `Product Documentation`_\n",
                    "rendered": {
                      "text": "\n|preview| |pypi| |versions|\n\n`Recommendations AI`_: delivers highly personalized product recommendations at scale.\n\n- `Client Library Documentation`_\n- `Product Documentation`_\n",
                      "markdown": "`\n|preview| |pypi| |versions|\n\n`Recommendations AI`_: delivers highly personalized product recommendations at scale.\n\n- `Client Library Documentation`_\n- `Product Documentation`_\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google_cloud_recommendations_ai-0.10.12.dist-info/METADATA"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 3,
                  "endLine": 124,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    py -m venv <your-env>\n    .\\<your-env>\\Scripts\\activate\n    pip install google-cloud-recommendations-ai\n\nNext Steps\n~~~~~~~~~~\n",
                    "rendered": {
                      "text": "\n    py -m venv <your-env>\n    .\\<your-env>\\Scripts\\activate\n    pip install google-cloud-recommendations-ai\n\nNext Steps\n~~~~~~~~~~\n",
                      "markdown": "`\n    py -m venv <your-env>\n    .\\<your-env>\\Scripts\\activate\n    pip install google-cloud-recommendations-ai\n\nNext Steps\n~~~~~~~~~~\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google_cloud_recommendations_ai-0.10.12.dist-info/METADATA"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 3,
                  "endLine": 114,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    python3 -m venv <your-env>\n    source <your-env>/bin/activate\n    pip install google-cloud-recommendations-ai\n\n\nWindows\n",
                    "rendered": {
                      "text": "\n    python3 -m venv <your-env>\n    source <your-env>/bin/activate\n    pip install google-cloud-recommendations-ai\n\n\nWindows\n",
                      "markdown": "`\n    python3 -m venv <your-env>\n    source <your-env>/bin/activate\n    pip install google-cloud-recommendations-ai\n\n\nWindows\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/user_event_service."
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/user_event_service."
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 14,
                  "endLine": 224,
                  "endColumn": 22,
                  "snippet": {
                    "text": "            eventsMissingCatalogItems\n            eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n\n            We expect only 3 types of fields:\n\n            ::\n\n",
                    "rendered": {
                      "text": "            eventsMissingCatalogItems\n            eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n\n            We expect only 3 types of fields:\n\n            ::\n\n",
                      "markdown": "`            eventsMissingCatalogItems\n            eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n\n            We expect only 3 types of fields:\n\n            ::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/user_event_service."
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 20,
                  "endLine": 219,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            returned events. This is a sequence of terms, where each\n            term applies some kind of a restriction to the returned user\n            events. Use this expression to restrict results to a\n            specific time range, or filter events by eventType. eg:\n            eventTime > \"2012-04-23T18:25:43.511Z\"\n            eventsMissingCatalogItems\n            eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n",
                    "rendered": {
                      "text": "            returned events. This is a sequence of terms, where each\n            term applies some kind of a restriction to the returned user\n            events. Use this expression to restrict results to a\n            specific time range, or filter events by eventType. eg:\n            eventTime > \"2012-04-23T18:25:43.511Z\"\n            eventsMissingCatalogItems\n            eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n",
                      "markdown": "`            returned events. This is a sequence of terms, where each\n            term applies some kind of a restriction to the returned user\n            events. Use this expression to restrict results to a\n            specific time range, or filter events by eventType. eg:\n            eventTime > \"2012-04-23T18:25:43.511Z\"\n            eventsMissingCatalogItems\n            eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/user_event_service."
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 34,
                  "endLine": 209,
                  "endColumn": 43,
                  "snippet": {
                    "text": "            ``projects/*/locations/*/catalogs/default_catalog/eventStores/default_event_store``.\n        page_size (int):\n            Optional. Maximum number of results to return\n            per page. If zero, the service will choose a\n            reasonable default.\n        page_token (str):\n            Optional. The previous\n",
                    "rendered": {
                      "text": "            ``projects/*/locations/*/catalogs/default_catalog/eventStores/default_event_store``.\n        page_size (int):\n            Optional. Maximum number of results to return\n            per page. If zero, the service will choose a\n            reasonable default.\n        page_token (str):\n            Optional. The previous\n",
                      "markdown": "`            ``projects/*/locations/*/catalogs/default_catalog/eventStores/default_event_store``.\n        page_size (int):\n            Optional. Maximum number of results to return\n            per page. If zero, the service will choose a\n            reasonable default.\n        page_token (str):\n            Optional. The previous\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/user_event_service."
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 56,
                  "endLine": 61,
                  "endColumn": 62,
                  "snippet": {
                    "text": "               delete all events associated with a user. Example 1:\n               Deleting all events in a time range.\n               ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n               Example 2: Deleting specific eventType in time range.\n               ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n               Example 3: Deleting all events for a specific visitor\n               ``visitorId = visitor1024`` The filtering fields are\n",
                    "rendered": {
                      "text": "               delete all events associated with a user. Example 1:\n               Deleting all events in a time range.\n               ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n               Example 2: Deleting specific eventType in time range.\n               ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n               Example 3: Deleting all events for a specific visitor\n               ``visitorId = visitor1024`` The filtering fields are\n",
                      "markdown": "`               delete all events associated with a user. Example 1:\n               Deleting all events in a time range.\n               ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n               Example 2: Deleting specific eventType in time range.\n               ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n               Example 3: Deleting all events for a specific visitor\n               ``visitorId = visitor1024`` The filtering fields are\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/user_event_service."
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 39,
                  "endLine": 59,
                  "endColumn": 45,
                  "snippet": {
                    "text": "               delete all events associated with a visitor.\n            -  userId - field of type string. Specifying this will\n               delete all events associated with a user. Example 1:\n               Deleting all events in a time range.\n               ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n               Example 2: Deleting specific eventType in time range.\n               ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n",
                    "rendered": {
                      "text": "               delete all events associated with a visitor.\n            -  userId - field of type string. Specifying this will\n               delete all events associated with a user. Example 1:\n               Deleting all events in a time range.\n               ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n               Example 2: Deleting specific eventType in time range.\n               ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n",
                      "markdown": "`               delete all events associated with a visitor.\n            -  userId - field of type string. Specifying this will\n               delete all events associated with a user. Example 1:\n               Deleting all events in a time range.\n               ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n               Example 2: Deleting specific eventType in time range.\n               ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/catalog_service.py"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 19,
                  "endLine": 152,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Optional. Indicates which fields in the\n            provided 'item' to update. If not set, will by\n            default update all fields.\n    \"\"\"\n\n    name: str = proto.Field(\n",
                    "rendered": {
                      "text": "        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Optional. Indicates which fields in the\n            provided 'item' to update. If not set, will by\n            default update all fields.\n    \"\"\"\n\n    name: str = proto.Field(\n",
                      "markdown": "`        update_mask (google.protobuf.field_mask_pb2.FieldMask):\n            Optional. Indicates which fields in the\n            provided 'item' to update. If not set, will by\n            default update all fields.\n    \"\"\"\n\n    name: str = proto.Field(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/catalog_service.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/catalog_service.py"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 34,
                  "endLine": 84,
                  "endColumn": 43,
                  "snippet": {
                    "text": "            ``projects/*/locations/global/catalogs/default_catalog``.\n        page_size (int):\n            Optional. Maximum number of results to return\n            per page. If zero, the service will choose a\n            reasonable default.\n        page_token (str):\n            Optional. The previous\n",
                    "rendered": {
                      "text": "            ``projects/*/locations/global/catalogs/default_catalog``.\n        page_size (int):\n            Optional. Maximum number of results to return\n            per page. If zero, the service will choose a\n            reasonable default.\n        page_token (str):\n            Optional. The previous\n",
                      "markdown": "`            ``projects/*/locations/global/catalogs/default_catalog``.\n        page_size (int):\n            Optional. Maximum number of results to return\n            per page. If zero, the service will choose a\n            reasonable default.\n        page_token (str):\n            Optional. The previous\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/user_event.py"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 34,
                  "endLine": 274,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n            For product recommendation, an example of extra user\n            information is traffic_channel, i.e. how user arrives at the\n            site. Users can arrive at the site by coming to the site\n            directly, or coming through Google search, and etc.\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "\n            For product recommendation, an example of extra user\n            information is traffic_channel, i.e. how user arrives at the\n            site. Users can arrive at the site by coming to the site\n            directly, or coming through Google search, and etc.\n    \"\"\"\n\n",
                      "markdown": "`\n            For product recommendation, an example of extra user\n            information is traffic_channel, i.e. how user arrives at the\n            site. Users can arrive at the site by coming to the site\n            directly, or coming through Google search, and etc.\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/user_event.py"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 65,
                  "endLine": 273,
                  "endColumn": 69,
                  "snippet": {
                    "text": "            recommendation model.\n\n            For product recommendation, an example of extra user\n            information is traffic_channel, i.e. how user arrives at the\n            site. Users can arrive at the site by coming to the site\n            directly, or coming through Google search, and etc.\n    \"\"\"\n",
                    "rendered": {
                      "text": "            recommendation model.\n\n            For product recommendation, an example of extra user\n            information is traffic_channel, i.e. how user arrives at the\n            site. Users can arrive at the site by coming to the site\n            directly, or coming through Google search, and etc.\n    \"\"\"\n",
                      "markdown": "`            recommendation model.\n\n            For product recommendation, an example of extra user\n            information is traffic_channel, i.e. how user arrives at the\n            site. Users can arrive at the site by coming to the site\n            directly, or coming through Google search, and etc.\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/user_event.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/user_event.py"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 21,
                  "endLine": 177,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            user with a length limit of 128 bytes. Required\n            only for logged-in users.\n        ip_address (str):\n            Optional. IP address of the user. This could be either IPv4\n            (e.g. 104.133.9.80) or IPv6 (e.g.\n            2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not*\n            be set when using the javascript pixel or if\n",
                    "rendered": {
                      "text": "            user with a length limit of 128 bytes. Required\n            only for logged-in users.\n        ip_address (str):\n            Optional. IP address of the user. This could be either IPv4\n            (e.g. 104.133.9.80) or IPv6 (e.g.\n            2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not*\n            be set when using the javascript pixel or if\n",
                      "markdown": "`            user with a length limit of 128 bytes. Required\n            only for logged-in users.\n        ip_address (str):\n            Optional. IP address of the user. This could be either IPv4\n            (e.g. 104.133.9.80) or IPv6 (e.g.\n            2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not*\n            be set when using the javascript pixel or if\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/recommendationengin"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/catalog.py"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 55,
                  "endLine": 172,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    products.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    products.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    products.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/catalog.py"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 19,
                  "endLine": 172,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    products.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    products.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    products.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/catalog.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 19,
                  "endLine": 123,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n",
                    "rendered": {
                      "text": "        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n",
                      "markdown": "`        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 21,
                  "endLine": 63,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 32,
                  "endLine": 112,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n",
                    "rendered": {
                      "text": "                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n",
                      "markdown": "`                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 27,
                  "endLine": 81,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 29,
                  "endLine": 178,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n",
                    "rendered": {
                      "text": "        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n",
                      "markdown": "`        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 21,
                  "endLine": 143,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 36,
                  "endLine": 229,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                    The request object. Request message for Predict method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request message for Predict method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request message for Predict method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 15,
                  "endLine": 229,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                    The request object. Request message for Predict method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request message for Predict method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request message for Predict method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 27,
                  "endLine": 166,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n",
                      "markdown": "`                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 3,
                  "endLine": 114,
                  "endColumn": 12,
                  "snippet": {
                    "text": "class PredictionServiceRestTransport(PredictionServiceTransport):\n    \"\"\"REST backend transport for PredictionService.\n\n    Service for making recommendation prediction.\n\n    This class defines the same methods as the primary client, so the\n    primary client can load the underlying transport implementation\n",
                    "rendered": {
                      "text": "class PredictionServiceRestTransport(PredictionServiceTransport):\n    \"\"\"REST backend transport for PredictionService.\n\n    Service for making recommendation prediction.\n\n    This class defines the same methods as the primary client, so the\n    primary client can load the underlying transport implementation\n",
                      "markdown": "`class PredictionServiceRestTransport(PredictionServiceTransport):\n    \"\"\"REST backend transport for PredictionService.\n\n    Service for making recommendation prediction.\n\n    This class defines the same methods as the primary client, so the\n    primary client can load the underlying transport implementation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 37,
                  "endLine": 58,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n",
                    "rendered": {
                      "text": "    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n",
                      "markdown": "`    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 48,
                  "endLine": 194,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                    "rendered": {
                      "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                      "markdown": "`                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 48,
                  "endLine": 185,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                    "rendered": {
                      "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                      "markdown": "`                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 21,
                  "endLine": 112,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 27,
                  "endLine": 152,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 3,
                  "endLine": 43,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n",
                    "rendered": {
                      "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n",
                      "markdown": "`    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 12,
                  "snippet": {
                    "text": "class PredictionServiceGrpcAsyncIOTransport(PredictionServiceTransport):\n    \"\"\"gRPC AsyncIO backend transport for PredictionService.\n\n    Service for making recommendation prediction.\n\n    This class defines the same methods as the primary client, so the\n    primary client can load the underlying transport implementation\n",
                    "rendered": {
                      "text": "class PredictionServiceGrpcAsyncIOTransport(PredictionServiceTransport):\n    \"\"\"gRPC AsyncIO backend transport for PredictionService.\n\n    Service for making recommendation prediction.\n\n    This class defines the same methods as the primary client, so the\n    primary client can load the underlying transport implementation\n",
                      "markdown": "`class PredictionServiceGrpcAsyncIOTransport(PredictionServiceTransport):\n    \"\"\"gRPC AsyncIO backend transport for PredictionService.\n\n    Service for making recommendation prediction.\n\n    This class defines the same methods as the primary client, so the\n    primary client can load the underlying transport implementation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 19,
                  "endLine": 119,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n",
                    "rendered": {
                      "text": "        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n",
                      "markdown": "`        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 21,
                  "endLine": 59,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 32,
                  "endLine": 108,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n",
                    "rendered": {
                      "text": "                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n",
                      "markdown": "`                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 27,
                  "endLine": 77,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 29,
                  "endLine": 332,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n",
                    "rendered": {
                      "text": "        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n",
                      "markdown": "`        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 21,
                  "endLine": 297,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 873,
                  "startColumn": 24,
                  "endLine": 873,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> catalog.CatalogItem:\n            r\"\"\"Call the update catalog item method over HTTP.\n\n            Args:\n                request (~.catalog_service.UpdateCatalogItemRequest):\n",
                    "rendered": {
                      "text": "            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> catalog.CatalogItem:\n            r\"\"\"Call the update catalog item method over HTTP.\n\n            Args:\n                request (~.catalog_service.UpdateCatalogItemRequest):\n",
                      "markdown": "`            timeout: Optional[float] = None,\n            metadata: Sequence[Tuple[str, str]] = (),\n        ) -> catalog.CatalogItem:\n            r\"\"\"Call the update catalog item method over HTTP.\n\n            Args:\n                request (~.catalog_service.UpdateCatalogItemRequest):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 881,
                  "startColumn": 36,
                  "endLine": 881,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 881,
                  "startColumn": 15,
                  "endLine": 881,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 791,
                  "startColumn": 36,
                  "endLine": 791,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 791,
                  "startColumn": 15,
                  "endLine": 791,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 695,
                  "startColumn": 36,
                  "endLine": 695,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                    The request object. Request message for Import methods.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request message for Import methods.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request message for Import methods.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 695,
                  "startColumn": 15,
                  "endLine": 695,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                    The request object. Request message for Import methods.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    The request object. Request message for Import methods.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                    The request object. Request message for Import methods.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 606,
                  "startColumn": 36,
                  "endLine": 606,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 606,
                  "startColumn": 15,
                  "endLine": 606,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 530,
                  "startColumn": 36,
                  "endLine": 530,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 530,
                  "startColumn": 15,
                  "endLine": 530,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 433,
                  "startColumn": 36,
                  "endLine": 433,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 433,
                  "startColumn": 15,
                  "endLine": 433,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 320,
                  "startColumn": 27,
                  "endLine": 320,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n",
                      "markdown": "`                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 3,
                  "endLine": 267,
                  "endColumn": 12,
                  "snippet": {
                    "text": "class CatalogServiceRestTransport(CatalogServiceTransport):\n    \"\"\"REST backend transport for CatalogService.\n\n    Service for ingesting catalog information of the customer's\n    website.\n\n    This class defines the same methods as the primary client, so the\n",
                    "rendered": {
                      "text": "class CatalogServiceRestTransport(CatalogServiceTransport):\n    \"\"\"REST backend transport for CatalogService.\n\n    Service for ingesting catalog information of the customer's\n    website.\n\n    This class defines the same methods as the primary client, so the\n",
                      "markdown": "`class CatalogServiceRestTransport(CatalogServiceTransport):\n    \"\"\"REST backend transport for CatalogService.\n\n    Service for ingesting catalog information of the customer's\n    website.\n\n    This class defines the same methods as the primary client, so the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 37,
                  "endLine": 71,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n",
                    "rendered": {
                      "text": "    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n",
                      "markdown": "`    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 699,
                  "startColumn": 36,
                  "endLine": 699,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Optional. Indicates which fields in\n                the provided 'item' to update. If not\n                set, will by default update all fields.\n\n                This corresponds to the ``update_mask`` field\n                on the ``request`` instance; if ``request`` is provided, this\n",
                    "rendered": {
                      "text": "            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Optional. Indicates which fields in\n                the provided 'item' to update. If not\n                set, will by default update all fields.\n\n                This corresponds to the ``update_mask`` field\n                on the ``request`` instance; if ``request`` is provided, this\n",
                      "markdown": "`            update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n                Optional. Indicates which fields in\n                the provided 'item' to update. If not\n                set, will by default update all fields.\n\n                This corresponds to the ``update_mask`` field\n                on the ``request`` instance; if ``request`` is provided, this\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 33,
                  "endLine": 161,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                    "rendered": {
                      "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                      "markdown": "`        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 989,
                  "startColumn": 50,
                  "endLine": 989,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if errors_config is not None:\n            request.errors_config = errors_config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.import_catalog_items\n",
                    "rendered": {
                      "text": "        if errors_config is not None:\n            request.errors_config = errors_config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.import_catalog_items\n",
                      "markdown": "`        if errors_config is not None:\n            request.errors_config = errors_config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.import_catalog_items\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 949,
                  "startColumn": 32,
                  "endLine": 949,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 949,
                  "startColumn": 11,
                  "endLine": 949,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 886,
                  "startColumn": 78,
                  "endLine": 887,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 837,
                  "startColumn": 50,
                  "endLine": 837,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.delete_catalog_item\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.delete_catalog_item\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.delete_catalog_item\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 813,
                  "startColumn": 32,
                  "endLine": 813,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 813,
                  "startColumn": 11,
                  "endLine": 813,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 783,
                  "startColumn": 78,
                  "endLine": 784,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 740,
                  "startColumn": 50,
                  "endLine": 740,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.update_catalog_item\n",
                    "rendered": {
                      "text": "        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.update_catalog_item\n",
                      "markdown": "`        if update_mask is not None:\n            request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.update_catalog_item\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 706,
                  "startColumn": 32,
                  "endLine": 706,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 706,
                  "startColumn": 11,
                  "endLine": 706,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 652,
                  "startColumn": 78,
                  "endLine": 653,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 595,
                  "startColumn": 50,
                  "endLine": 595,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if filter is not None:\n            request.filter = filter\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.list_catalog_items\n",
                    "rendered": {
                      "text": "        if filter is not None:\n            request.filter = filter\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.list_catalog_items\n",
                      "markdown": "`        if filter is not None:\n            request.filter = filter\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.list_catalog_items\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 560,
                  "startColumn": 32,
                  "endLine": 560,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 560,
                  "startColumn": 11,
                  "endLine": 560,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 519,
                  "startColumn": 78,
                  "endLine": 520,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 475,
                  "startColumn": 50,
                  "endLine": 475,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.get_catalog_item\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.get_catalog_item\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.get_catalog_item\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 445,
                  "startColumn": 32,
                  "endLine": 445,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 445,
                  "startColumn": 11,
                  "endLine": 445,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 78,
                  "endLine": 413,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 50,
                  "endLine": 369,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if catalog_item is not None:\n            request.catalog_item = catalog_item\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.create_catalog_item\n",
                    "rendered": {
                      "text": "        if catalog_item is not None:\n            request.catalog_item = catalog_item\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.create_catalog_item\n",
                      "markdown": "`        if catalog_item is not None:\n            request.catalog_item = catalog_item\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.create_catalog_item\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 32,
                  "endLine": 337,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 11,
                  "endLine": 337,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 78,
                  "endLine": 294,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 35,
                  "endLine": 219,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        client_options: Optional[ClientOptions] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the catalog service async client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                    "rendered": {
                      "text": "        client_options: Optional[ClientOptions] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the catalog service async client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                      "markdown": "`        client_options: Optional[ClientOptions] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the catalog service async client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 43,
                  "endLine": 129,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                    "rendered": {
                      "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                      "markdown": "`            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 28,
                  "endLine": 114,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                    "rendered": {
                      "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                      "markdown": "`            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 48,
                  "endLine": 148,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                    "rendered": {
                      "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                      "markdown": "`                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 48,
                  "endLine": 139,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                    "rendered": {
                      "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                      "markdown": "`                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 21,
                  "endLine": 66,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 27,
                  "endLine": 105,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 3,
                  "endLine": 40,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n",
                    "rendered": {
                      "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n",
                      "markdown": "`    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 3,
                  "endLine": 33,
                  "endColumn": 12,
                  "snippet": {
                    "text": "class PredictionServiceGrpcTransport(PredictionServiceTransport):\n    \"\"\"gRPC backend transport for PredictionService.\n\n    Service for making recommendation prediction.\n\n    This class defines the same methods as the primary client, so the\n    primary client can load the underlying transport implementation\n",
                    "rendered": {
                      "text": "class PredictionServiceGrpcTransport(PredictionServiceTransport):\n    \"\"\"gRPC backend transport for PredictionService.\n\n    Service for making recommendation prediction.\n\n    This class defines the same methods as the primary client, so the\n    primary client can load the underlying transport implementation\n",
                      "markdown": "`class PredictionServiceGrpcTransport(PredictionServiceTransport):\n    \"\"\"gRPC backend transport for PredictionService.\n\n    Service for making recommendation prediction.\n\n    This class defines the same methods as the primary client, so the\n    primary client can load the underlying transport implementation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/gapic_version.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/prediction_service."
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 23,
                  "endLine": 76,
                  "endColumn": 27,
                  "snippet": {
                    "text": "            https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard\n        user_event (google.cloud.recommendationengine_v1beta1.types.UserEvent):\n            Required. Context about the user, what they\n            are looking at and what action they took to\n            trigger the predict request. Note that this user\n            event detail won't be ingested to userEvent\n            logs. Thus, a separate userEvent write request\n",
                    "rendered": {
                      "text": "            https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard\n        user_event (google.cloud.recommendationengine_v1beta1.types.UserEvent):\n            Required. Context about the user, what they\n            are looking at and what action they took to\n            trigger the predict request. Note that this user\n            event detail won't be ingested to userEvent\n            logs. Thus, a separate userEvent write request\n",
                      "markdown": "`            https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard\n        user_event (google.cloud.recommendationengine_v1beta1.types.UserEvent):\n            Required. Context about the user, what they\n            are looking at and what action they took to\n            trigger the predict request. Note that this user\n            event detail won't be ingested to userEvent\n            logs. Thus, a separate userEvent write request\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/prediction_service."
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 61,
                  "endLine": 73,
                  "snippet": {
                    "text": "               neither of them has viewed any items yet. For example -\n               Recently viewed.\n\n            The full list of available placements can be seen at\n            https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard\n        user_event (google.cloud.recommendationengine_v1beta1.types.UserEvent):\n            Required. Context about the user, what they\n            are looking at and what action they took to\n",
                    "rendered": {
                      "text": "               neither of them has viewed any items yet. For example -\n               Recently viewed.\n\n            The full list of available placements can be seen at\n            https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard\n        user_event (google.cloud.recommendationengine_v1beta1.types.UserEvent):\n            Required. Context about the user, what they\n            are looking at and what action they took to\n",
                      "markdown": "`               neither of them has viewed any items yet. For example -\n               Recently viewed.\n\n            The full list of available placements can be seen at\n            https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard\n        user_event (google.cloud.recommendationengine_v1beta1.types.UserEvent):\n            Required. Context about the user, what they\n            are looking at and what action they took to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/prediction_service."
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/prediction_service."
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 11,
                  "endLine": 85,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            Optional. Maximum number of results to return\n            per page. Set this property to the number of\n            prediction results required. If zero, the\n            service will choose a reasonable default.\n        page_token (str):\n            Optional. The previous PredictResponse.next_page_token.\n        filter (str):\n",
                    "rendered": {
                      "text": "            Optional. Maximum number of results to return\n            per page. Set this property to the number of\n            prediction results required. If zero, the\n            service will choose a reasonable default.\n        page_token (str):\n            Optional. The previous PredictResponse.next_page_token.\n        filter (str):\n",
                      "markdown": "`            Optional. Maximum number of results to return\n            per page. Set this property to the number of\n            prediction results required. If zero, the\n            service will choose a reasonable default.\n        page_token (str):\n            Optional. The previous PredictResponse.next_page_token.\n        filter (str):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/prediction_apikey_r"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 28,
                  "endLine": 111,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        next_page_token (str):\n            If empty, the list is complete. If nonempty, pass the token\n            to the next request's\n            ``ListPredictionApiKeysRegistrationsRequest.pageToken``.\n    \"\"\"\n\n    @property\n",
                    "rendered": {
                      "text": "        next_page_token (str):\n            If empty, the list is complete. If nonempty, pass the token\n            to the next request's\n            ``ListPredictionApiKeysRegistrationsRequest.pageToken``.\n    \"\"\"\n\n    @property\n",
                      "markdown": "`        next_page_token (str):\n            If empty, the list is complete. If nonempty, pass the token\n            to the next request's\n            ``ListPredictionApiKeysRegistrationsRequest.pageToken``.\n    \"\"\"\n\n    @property\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/prediction_apikey_r"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 8,
                  "endLine": 29,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        \"CreatePredictionApiKeyRegistrationRequest\",\n        \"ListPredictionApiKeyRegistrationsRequest\",\n        \"ListPredictionApiKeyRegistrationsResponse\",\n        \"DeletePredictionApiKeyRegistrationRequest\",\n    },\n)\n\n",
                    "rendered": {
                      "text": "        \"CreatePredictionApiKeyRegistrationRequest\",\n        \"ListPredictionApiKeyRegistrationsRequest\",\n        \"ListPredictionApiKeyRegistrationsResponse\",\n        \"DeletePredictionApiKeyRegistrationRequest\",\n    },\n)\n\n",
                      "markdown": "`        \"CreatePredictionApiKeyRegistrationRequest\",\n        \"ListPredictionApiKeyRegistrationsRequest\",\n        \"ListPredictionApiKeyRegistrationsResponse\",\n        \"DeletePredictionApiKeyRegistrationRequest\",\n    },\n)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/prediction_apikey_r"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 8,
                  "endLine": 28,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        \"PredictionApiKeyRegistration\",\n        \"CreatePredictionApiKeyRegistrationRequest\",\n        \"ListPredictionApiKeyRegistrationsRequest\",\n        \"ListPredictionApiKeyRegistrationsResponse\",\n        \"DeletePredictionApiKeyRegistrationRequest\",\n    },\n)\n",
                    "rendered": {
                      "text": "        \"PredictionApiKeyRegistration\",\n        \"CreatePredictionApiKeyRegistrationRequest\",\n        \"ListPredictionApiKeyRegistrationsRequest\",\n        \"ListPredictionApiKeyRegistrationsResponse\",\n        \"DeletePredictionApiKeyRegistrationRequest\",\n    },\n)\n",
                      "markdown": "`        \"PredictionApiKeyRegistration\",\n        \"CreatePredictionApiKeyRegistrationRequest\",\n        \"ListPredictionApiKeyRegistrationsRequest\",\n        \"ListPredictionApiKeyRegistrationsResponse\",\n        \"DeletePredictionApiKeyRegistrationRequest\",\n    },\n)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/prediction_apikey_r"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 8,
                  "endLine": 27,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    manifest={\n        \"PredictionApiKeyRegistration\",\n        \"CreatePredictionApiKeyRegistrationRequest\",\n        \"ListPredictionApiKeyRegistrationsRequest\",\n        \"ListPredictionApiKeyRegistrationsResponse\",\n        \"DeletePredictionApiKeyRegistrationRequest\",\n    },\n",
                    "rendered": {
                      "text": "    manifest={\n        \"PredictionApiKeyRegistration\",\n        \"CreatePredictionApiKeyRegistrationRequest\",\n        \"ListPredictionApiKeyRegistrationsRequest\",\n        \"ListPredictionApiKeyRegistrationsResponse\",\n        \"DeletePredictionApiKeyRegistrationRequest\",\n    },\n",
                      "markdown": "`    manifest={\n        \"PredictionApiKeyRegistration\",\n        \"CreatePredictionApiKeyRegistrationRequest\",\n        \"ListPredictionApiKeyRegistrationsRequest\",\n        \"ListPredictionApiKeyRegistrationsResponse\",\n        \"DeletePredictionApiKeyRegistrationRequest\",\n    },\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/prediction_apikey_r"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 8,
                  "endLine": 26,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    package=\"google.cloud.recommendationengine.v1beta1\",\n    manifest={\n        \"PredictionApiKeyRegistration\",\n        \"CreatePredictionApiKeyRegistrationRequest\",\n        \"ListPredictionApiKeyRegistrationsRequest\",\n        \"ListPredictionApiKeyRegistrationsResponse\",\n        \"DeletePredictionApiKeyRegistrationRequest\",\n",
                    "rendered": {
                      "text": "    package=\"google.cloud.recommendationengine.v1beta1\",\n    manifest={\n        \"PredictionApiKeyRegistration\",\n        \"CreatePredictionApiKeyRegistrationRequest\",\n        \"ListPredictionApiKeyRegistrationsRequest\",\n        \"ListPredictionApiKeyRegistrationsResponse\",\n        \"DeletePredictionApiKeyRegistrationRequest\",\n",
                      "markdown": "`    package=\"google.cloud.recommendationengine.v1beta1\",\n    manifest={\n        \"PredictionApiKeyRegistration\",\n        \"CreatePredictionApiKeyRegistrationRequest\",\n        \"ListPredictionApiKeyRegistrationsRequest\",\n        \"ListPredictionApiKeyRegistrationsResponse\",\n        \"DeletePredictionApiKeyRegistrationRequest\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/prediction_apikey_r"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/prediction_apikey_r"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 35,
                  "endLine": 81,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            ``projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store``\n        page_size (int):\n            Optional. Maximum number of results to return\n            per page. If unset, the service will choose a\n            reasonable default.\n        page_token (str):\n            Optional. The previous\n",
                    "rendered": {
                      "text": "            ``projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store``\n        page_size (int):\n            Optional. Maximum number of results to return\n            per page. If unset, the service will choose a\n            reasonable default.\n        page_token (str):\n            Optional. The previous\n",
                      "markdown": "`            ``projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store``\n        page_size (int):\n            Optional. Maximum number of results to return\n            per page. If unset, the service will choose a\n            reasonable default.\n        page_token (str):\n            Optional. The previous\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/import_.py"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 26,
                  "endLine": 278,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            Count of entries that encountered errors\n            while processing.\n        update_time (google.protobuf.timestamp_pb2.Timestamp):\n            Operation last update time. If the operation\n            is done, this is also the finish time.\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "            Count of entries that encountered errors\n            while processing.\n        update_time (google.protobuf.timestamp_pb2.Timestamp):\n            Operation last update time. If the operation\n            is done, this is also the finish time.\n    \"\"\"\n\n",
                      "markdown": "`            Count of entries that encountered errors\n            while processing.\n        update_time (google.protobuf.timestamp_pb2.Timestamp):\n            Operation last update time. If the operation\n            is done, this is also the finish time.\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/import_.py"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 55,
                  "endLine": 213,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    r\"\"\"The input config source.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"The input config source.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"The input config source.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/import_.py"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 19,
                  "endLine": 213,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    r\"\"\"The input config source.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                    "rendered": {
                      "text": "    r\"\"\"The input config source.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n",
                      "markdown": "`    r\"\"\"The input config source.\n\n    This message has `oneof`_ fields (mutually exclusive fields).\n    For each oneof, at most one member field can be set at the same time.\n    Setting any member of the oneof automatically clears all other\n    members.\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/import_.py"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 33,
                  "endLine": 55,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            object path (for example,\n            ``gs://bucket/directory/object.json``) or a pattern matching\n            one or more files, such as ``gs://bucket/directory/*.json``.\n            A request can contain at most 100 files, and each file can\n            be up to 2 GB. See `Importing catalog\n            information </recommendations-ai/docs/upload-catalog>`__ for\n            the expected file format and setup instructions.\n",
                    "rendered": {
                      "text": "            object path (for example,\n            ``gs://bucket/directory/object.json``) or a pattern matching\n            one or more files, such as ``gs://bucket/directory/*.json``.\n            A request can contain at most 100 files, and each file can\n            be up to 2 GB. See `Importing catalog\n            information </recommendations-ai/docs/upload-catalog>`__ for\n            the expected file format and setup instructions.\n",
                      "markdown": "`            object path (for example,\n            ``gs://bucket/directory/object.json``) or a pattern matching\n            one or more files, such as ``gs://bucket/directory/*.json``.\n            A request can contain at most 100 files, and each file can\n            be up to 2 GB. See `Importing catalog\n            information </recommendations-ai/docs/upload-catalog>`__ for\n            the expected file format and setup instructions.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/import_.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/common.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/__init__.py"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 4,
                  "endLine": 90,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n    \"PredictRequest\",\n    \"PredictResponse\",\n",
                    "rendered": {
                      "text": "    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n    \"PredictRequest\",\n    \"PredictResponse\",\n",
                      "markdown": "`    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n    \"PredictRequest\",\n    \"PredictResponse\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/__init__.py"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 4,
                  "endLine": 89,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n    \"PredictRequest\",\n",
                    "rendered": {
                      "text": "    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n    \"PredictRequest\",\n",
                      "markdown": "`    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n    \"PredictRequest\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/__init__.py"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 4,
                  "endLine": 88,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    \"UserEventImportSummary\",\n    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n",
                    "rendered": {
                      "text": "    \"UserEventImportSummary\",\n    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n",
                      "markdown": "`    \"UserEventImportSummary\",\n    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/__init__.py"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 4,
                  "endLine": 87,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    \"InputConfig\",\n    \"UserEventImportSummary\",\n    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n",
                    "rendered": {
                      "text": "    \"InputConfig\",\n    \"UserEventImportSummary\",\n    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n",
                      "markdown": "`    \"InputConfig\",\n    \"UserEventImportSummary\",\n    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/types/__init__.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 29,
                  "endLine": 314,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n",
                    "rendered": {
                      "text": "        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n",
                      "markdown": "`        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 21,
                  "endLine": 279,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 836,
                  "startColumn": 36,
                  "endLine": 836,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 836,
                  "startColumn": 15,
                  "endLine": 836,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 740,
                  "startColumn": 36,
                  "endLine": 740,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 740,
                  "startColumn": 15,
                  "endLine": 740,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 650,
                  "startColumn": 36,
                  "endLine": 650,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 650,
                  "startColumn": 15,
                  "endLine": 650,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 554,
                  "startColumn": 36,
                  "endLine": 554,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                ImportUserEvents request.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                ImportUserEvents request.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                ImportUserEvents request.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 554,
                  "startColumn": 15,
                  "endLine": 554,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                ImportUserEvents request.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                ImportUserEvents request.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                ImportUserEvents request.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 461,
                  "startColumn": 19,
                  "endLine": 461,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n                ::\n\n                    service CaldavService {\n                      rpc GetCalendar(stream google.api.HttpBody)\n                        returns (stream google.api.HttpBody);\n                      rpc UpdateCalendar(stream google.api.HttpBody)\n",
                    "rendered": {
                      "text": "\n                ::\n\n                    service CaldavService {\n                      rpc GetCalendar(stream google.api.HttpBody)\n                        returns (stream google.api.HttpBody);\n                      rpc UpdateCalendar(stream google.api.HttpBody)\n",
                      "markdown": "`\n                ::\n\n                    service CaldavService {\n                      rpc GetCalendar(stream google.api.HttpBody)\n                        returns (stream google.api.HttpBody);\n                      rpc UpdateCalendar(stream google.api.HttpBody)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 19,
                  "endLine": 449,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n                    }\n\n                    service ResourceService {\n                      rpc GetResource(GetResourceRequest)\n                        returns (google.api.HttpBody);\n                      rpc UpdateResource(google.api.HttpBody)\n",
                    "rendered": {
                      "text": "\n                    }\n\n                    service ResourceService {\n                      rpc GetResource(GetResourceRequest)\n                        returns (google.api.HttpBody);\n                      rpc UpdateResource(google.api.HttpBody)\n",
                      "markdown": "`\n                    }\n\n                    service ResourceService {\n                      rpc GetResource(GetResourceRequest)\n                        returns (google.api.HttpBody);\n                      rpc UpdateResource(google.api.HttpBody)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 417,
                  "startColumn": 36,
                  "endLine": 417,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 417,
                  "startColumn": 15,
                  "endLine": 417,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n",
                      "markdown": "`                method.\n                retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                    should be retried.\n                timeout (float): The timeout for this request.\n                metadata (Sequence[Tuple[str, str]]): Strings which should be\n                    sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 27,
                  "endLine": 302,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n",
                      "markdown": "`                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 3,
                  "endLine": 249,
                  "endColumn": 12,
                  "snippet": {
                    "text": "class UserEventServiceRestTransport(UserEventServiceTransport):\n    \"\"\"REST backend transport for UserEventService.\n\n    Service for ingesting end user actions on the customer\n    website.\n\n    This class defines the same methods as the primary client, so the\n",
                    "rendered": {
                      "text": "class UserEventServiceRestTransport(UserEventServiceTransport):\n    \"\"\"REST backend transport for UserEventService.\n\n    Service for ingesting end user actions on the customer\n    website.\n\n    This class defines the same methods as the primary client, so the\n",
                      "markdown": "`class UserEventServiceRestTransport(UserEventServiceTransport):\n    \"\"\"REST backend transport for UserEventService.\n\n    Service for ingesting end user actions on the customer\n    website.\n\n    This class defines the same methods as the primary client, so the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 37,
                  "endLine": 69,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n",
                    "rendered": {
                      "text": "    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n",
                      "markdown": "`    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 48,
                  "endLine": 200,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                    "rendered": {
                      "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                      "markdown": "`                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 48,
                  "endLine": 191,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                    "rendered": {
                      "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                      "markdown": "`                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 21,
                  "endLine": 117,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 43,
                  "endLine": 334,
                  "endColumn": 49,
                  "snippet": {
                    "text": "    ]:\n        r\"\"\"Return a callable for the list user events method over gRPC.\n\n        Gets a list of user events within a time range, with\n        potential filtering.\n\n        Returns:\n",
                    "rendered": {
                      "text": "    ]:\n        r\"\"\"Return a callable for the list user events method over gRPC.\n\n        Gets a list of user events within a time range, with\n        potential filtering.\n\n        Returns:\n",
                      "markdown": "`    ]:\n        r\"\"\"Return a callable for the list user events method over gRPC.\n\n        Gets a list of user events within a time range, with\n        potential filtering.\n\n        Returns:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 27,
                  "endLine": 157,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 3,
                  "endLine": 48,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n",
                    "rendered": {
                      "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n",
                      "markdown": "`    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 3,
                  "endLine": 40,
                  "endColumn": 12,
                  "snippet": {
                    "text": "class UserEventServiceGrpcAsyncIOTransport(UserEventServiceTransport):\n    \"\"\"gRPC AsyncIO backend transport for UserEventService.\n\n    Service for ingesting end user actions on the customer\n    website.\n\n    This class defines the same methods as the primary client, so the\n",
                    "rendered": {
                      "text": "class UserEventServiceGrpcAsyncIOTransport(UserEventServiceTransport):\n    \"\"\"gRPC AsyncIO backend transport for UserEventService.\n\n    Service for ingesting end user actions on the customer\n    website.\n\n    This class defines the same methods as the primary client, so the\n",
                      "markdown": "`class UserEventServiceGrpcAsyncIOTransport(UserEventServiceTransport):\n    \"\"\"gRPC AsyncIO backend transport for UserEventService.\n\n    Service for ingesting end user actions on the customer\n    website.\n\n    This class defines the same methods as the primary client, so the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 48,
                  "endLine": 154,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                    "rendered": {
                      "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                      "markdown": "`                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 48,
                  "endLine": 145,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                    "rendered": {
                      "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                      "markdown": "`                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 21,
                  "endLine": 71,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 324,
                  "startColumn": 43,
                  "endLine": 324,
                  "endColumn": 49,
                  "snippet": {
                    "text": "    ]:\n        r\"\"\"Return a callable for the list user events method over gRPC.\n\n        Gets a list of user events within a time range, with\n        potential filtering.\n\n        Returns:\n",
                    "rendered": {
                      "text": "    ]:\n        r\"\"\"Return a callable for the list user events method over gRPC.\n\n        Gets a list of user events within a time range, with\n        potential filtering.\n\n        Returns:\n",
                      "markdown": "`    ]:\n        r\"\"\"Return a callable for the list user events method over gRPC.\n\n        Gets a list of user events within a time range, with\n        potential filtering.\n\n        Returns:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 27,
                  "endLine": 110,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 3,
                  "endLine": 45,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n",
                    "rendered": {
                      "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n",
                      "markdown": "`    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 3,
                  "endLine": 37,
                  "endColumn": 12,
                  "snippet": {
                    "text": "class UserEventServiceGrpcTransport(UserEventServiceTransport):\n    \"\"\"gRPC backend transport for UserEventService.\n\n    Service for ingesting end user actions on the customer\n    website.\n\n    This class defines the same methods as the primary client, so the\n",
                    "rendered": {
                      "text": "class UserEventServiceGrpcTransport(UserEventServiceTransport):\n    \"\"\"gRPC backend transport for UserEventService.\n\n    Service for ingesting end user actions on the customer\n    website.\n\n    This class defines the same methods as the primary client, so the\n",
                      "markdown": "`class UserEventServiceGrpcTransport(UserEventServiceTransport):\n    \"\"\"gRPC backend transport for UserEventService.\n\n    Service for ingesting end user actions on the customer\n    website.\n\n    This class defines the same methods as the primary client, so the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 23,
                  "endLine": 166,
                  "snippet": {
                    "text": "        self._request = prediction_service.PredictRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                    "rendered": {
                      "text": "        self._request = prediction_service.PredictRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                      "markdown": "`        self._request = prediction_service.PredictRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 32,
                  "endLine": 157,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 11,
                  "endLine": 157,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 23,
                  "endLine": 92,
                  "snippet": {
                    "text": "        self._request = prediction_service.PredictRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                    "rendered": {
                      "text": "        self._request = prediction_service.PredictRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                      "markdown": "`        self._request = prediction_service.PredictRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 32,
                  "endLine": 83,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 11,
                  "endLine": 83,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 24,
                  "endLine": 380,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            \"GOOGLE_API_USE_CLIENT_CERTIFICATE\", \"false\"\n        ).lower()\n        use_mtls_endpoint = os.getenv(\"GOOGLE_API_USE_MTLS_ENDPOINT\", \"auto\").lower()\n        universe_domain_env = os.getenv(\"GOOGLE_CLOUD_UNIVERSE_DOMAIN\")\n        if use_client_cert not in (\"true\", \"false\"):\n            raise ValueError(\n                \"Environment variable `GOOGLE_API_USE_CLIENT_CERTIFICATE` must be either `true` or `false`\"\n",
                    "rendered": {
                      "text": "            \"GOOGLE_API_USE_CLIENT_CERTIFICATE\", \"false\"\n        ).lower()\n        use_mtls_endpoint = os.getenv(\"GOOGLE_API_USE_MTLS_ENDPOINT\", \"auto\").lower()\n        universe_domain_env = os.getenv(\"GOOGLE_CLOUD_UNIVERSE_DOMAIN\")\n        if use_client_cert not in (\"true\", \"false\"):\n            raise ValueError(\n                \"Environment variable `GOOGLE_API_USE_CLIENT_CERTIFICATE` must be either `true` or `false`\"\n",
                      "markdown": "`            \"GOOGLE_API_USE_CLIENT_CERTIFICATE\", \"false\"\n        ).lower()\n        use_mtls_endpoint = os.getenv(\"GOOGLE_API_USE_MTLS_ENDPOINT\", \"auto\").lower()\n        universe_domain_env = os.getenv(\"GOOGLE_CLOUD_UNIVERSE_DOMAIN\")\n        if use_client_cert not in (\"true\", \"false\"):\n            raise ValueError(\n                \"Environment variable `GOOGLE_API_USE_CLIENT_CERTIFICATE` must be either `true` or `false`\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 785,
                  "startColumn": 37,
                  "endLine": 785,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            user_event (google.cloud.recommendationengine_v1beta1.types.UserEvent):\n                Required. Context about the user,\n                what they are looking at and what action\n                they took to trigger the predict\n                request. Note that this user event\n                detail won't be ingested to userEvent\n",
                    "rendered": {
                      "text": "                should not be set.\n            user_event (google.cloud.recommendationengine_v1beta1.types.UserEvent):\n                Required. Context about the user,\n                what they are looking at and what action\n                they took to trigger the predict\n                request. Note that this user event\n                detail won't be ingested to userEvent\n",
                      "markdown": "`                should not be set.\n            user_event (google.cloud.recommendationengine_v1beta1.types.UserEvent):\n                Required. Context about the user,\n                what they are looking at and what action\n                they took to trigger the predict\n                request. Note that this user event\n                detail won't be ingested to userEvent\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 777,
                  "startColumn": 65,
                  "endLine": 778,
                  "snippet": {
                    "text": "                   nothing if neither of them has viewed any items yet.\n                   For example - Recently viewed.\n\n                The full list of available placements can be seen at\n                https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard\n\n                This corresponds to the ``name`` field\n                on the ``request`` instance; if ``request`` is provided, this\n",
                    "rendered": {
                      "text": "                   nothing if neither of them has viewed any items yet.\n                   For example - Recently viewed.\n\n                The full list of available placements can be seen at\n                https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard\n\n                This corresponds to the ``name`` field\n                on the ``request`` instance; if ``request`` is provided, this\n",
                      "markdown": "`                   nothing if neither of them has viewed any items yet.\n                   For example - Recently viewed.\n\n                The full list of available placements can be seen at\n                https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard\n\n                This corresponds to the ``name`` field\n                on the ``request`` instance; if ``request`` is provided, this\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 33,
                  "endLine": 310,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                    "rendered": {
                      "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                      "markdown": "`        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 831,
                  "startColumn": 50,
                  "endLine": 831,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if user_event is not None:\n                request.user_event = user_event\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.predict]\n\n",
                    "rendered": {
                      "text": "            if user_event is not None:\n                request.user_event = user_event\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.predict]\n\n",
                      "markdown": "`            if user_event is not None:\n                request.user_event = user_event\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.predict]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 797,
                  "startColumn": 32,
                  "endLine": 797,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 797,
                  "startColumn": 11,
                  "endLine": 797,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 712,
                  "startColumn": 78,
                  "endLine": 713,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 548,
                  "startColumn": 38,
                  "endLine": 548,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        client_options: Optional[Union[client_options_lib.ClientOptions, dict]] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the prediction service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                    "rendered": {
                      "text": "        client_options: Optional[Union[client_options_lib.ClientOptions, dict]] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the prediction service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                      "markdown": "`        client_options: Optional[Union[client_options_lib.ClientOptions, dict]] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the prediction service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 43,
                  "endLine": 163,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                    "rendered": {
                      "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                      "markdown": "`            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 28,
                  "endLine": 146,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                    "rendered": {
                      "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                      "markdown": "`            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 37,
                  "endLine": 360,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            user_event (:class:`google.cloud.recommendationengine_v1beta1.types.UserEvent`):\n                Required. Context about the user,\n                what they are looking at and what action\n                they took to trigger the predict\n                request. Note that this user event\n                detail won't be ingested to userEvent\n",
                    "rendered": {
                      "text": "                should not be set.\n            user_event (:class:`google.cloud.recommendationengine_v1beta1.types.UserEvent`):\n                Required. Context about the user,\n                what they are looking at and what action\n                they took to trigger the predict\n                request. Note that this user event\n                detail won't be ingested to userEvent\n",
                      "markdown": "`                should not be set.\n            user_event (:class:`google.cloud.recommendationengine_v1beta1.types.UserEvent`):\n                Required. Context about the user,\n                what they are looking at and what action\n                they took to trigger the predict\n                request. Note that this user event\n                detail won't be ingested to userEvent\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 65,
                  "endLine": 353,
                  "snippet": {
                    "text": "                   nothing if neither of them has viewed any items yet.\n                   For example - Recently viewed.\n\n                The full list of available placements can be seen at\n                https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard\n\n                This corresponds to the ``name`` field\n                on the ``request`` instance; if ``request`` is provided, this\n",
                    "rendered": {
                      "text": "                   nothing if neither of them has viewed any items yet.\n                   For example - Recently viewed.\n\n                The full list of available placements can be seen at\n                https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard\n\n                This corresponds to the ``name`` field\n                on the ``request`` instance; if ``request`` is provided, this\n",
                      "markdown": "`                   nothing if neither of them has viewed any items yet.\n                   For example - Recently viewed.\n\n                The full list of available placements can be seen at\n                https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard\n\n                This corresponds to the ``name`` field\n                on the ``request`` instance; if ``request`` is provided, this\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 33,
                  "endLine": 147,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                    "rendered": {
                      "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                      "markdown": "`        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 50,
                  "endLine": 407,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if user_event is not None:\n            request.user_event = user_event\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[self._client._transport.predict]\n\n",
                    "rendered": {
                      "text": "        if user_event is not None:\n            request.user_event = user_event\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[self._client._transport.predict]\n\n",
                      "markdown": "`        if user_event is not None:\n            request.user_event = user_event\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[self._client._transport.predict]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 32,
                  "endLine": 372,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 11,
                  "endLine": 372,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 78,
                  "endLine": 288,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 38,
                  "endLine": 209,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        client_options: Optional[ClientOptions] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the prediction service async client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                    "rendered": {
                      "text": "        client_options: Optional[ClientOptions] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the prediction service async client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                      "markdown": "`        client_options: Optional[ClientOptions] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the prediction service async client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 43,
                  "endLine": 115,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                    "rendered": {
                      "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                      "markdown": "`            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 28,
                  "endLine": 100,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                    "rendered": {
                      "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                      "markdown": "`            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 23,
                  "endLine": 190,
                  "snippet": {
                    "text": "        )\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                    "rendered": {
                      "text": "        )\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                      "markdown": "`        )\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 32,
                  "endLine": 177,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 11,
                  "endLine": 177,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 23,
                  "endLine": 101,
                  "snippet": {
                    "text": "        )\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                    "rendered": {
                      "text": "        )\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                      "markdown": "`        )\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 32,
                  "endLine": 88,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 11,
                  "endLine": 88,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 868,
                  "startColumn": 32,
                  "endLine": 868,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        timeout: Union[float, object] = gapic_v1.method.DEFAULT,\n        metadata: Sequence[Tuple[str, str]] = (),\n    ) -> pagers.ListPredictionApiKeyRegistrationsPager:\n        r\"\"\"List the registered apiKeys for use with predict\n        method.\n\n        .. code-block:: python\n",
                    "rendered": {
                      "text": "        timeout: Union[float, object] = gapic_v1.method.DEFAULT,\n        metadata: Sequence[Tuple[str, str]] = (),\n    ) -> pagers.ListPredictionApiKeyRegistrationsPager:\n        r\"\"\"List the registered apiKeys for use with predict\n        method.\n\n        .. code-block:: python\n",
                      "markdown": "`        timeout: Union[float, object] = gapic_v1.method.DEFAULT,\n        metadata: Sequence[Tuple[str, str]] = (),\n    ) -> pagers.ListPredictionApiKeyRegistrationsPager:\n        r\"\"\"List the registered apiKeys for use with predict\n        method.\n\n        .. code-block:: python\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 413,
                  "startColumn": 24,
                  "endLine": 413,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            \"GOOGLE_API_USE_CLIENT_CERTIFICATE\", \"false\"\n        ).lower()\n        use_mtls_endpoint = os.getenv(\"GOOGLE_API_USE_MTLS_ENDPOINT\", \"auto\").lower()\n        universe_domain_env = os.getenv(\"GOOGLE_CLOUD_UNIVERSE_DOMAIN\")\n        if use_client_cert not in (\"true\", \"false\"):\n            raise ValueError(\n                \"Environment variable `GOOGLE_API_USE_CLIENT_CERTIFICATE` must be either `true` or `false`\"\n",
                    "rendered": {
                      "text": "            \"GOOGLE_API_USE_CLIENT_CERTIFICATE\", \"false\"\n        ).lower()\n        use_mtls_endpoint = os.getenv(\"GOOGLE_API_USE_MTLS_ENDPOINT\", \"auto\").lower()\n        universe_domain_env = os.getenv(\"GOOGLE_CLOUD_UNIVERSE_DOMAIN\")\n        if use_client_cert not in (\"true\", \"false\"):\n            raise ValueError(\n                \"Environment variable `GOOGLE_API_USE_CLIENT_CERTIFICATE` must be either `true` or `false`\"\n",
                      "markdown": "`            \"GOOGLE_API_USE_CLIENT_CERTIFICATE\", \"false\"\n        ).lower()\n        use_mtls_endpoint = os.getenv(\"GOOGLE_API_USE_MTLS_ENDPOINT\", \"auto\").lower()\n        universe_domain_env = os.getenv(\"GOOGLE_CLOUD_UNIVERSE_DOMAIN\")\n        if use_client_cert not in (\"true\", \"false\"):\n            raise ValueError(\n                \"Environment variable `GOOGLE_API_USE_CLIENT_CERTIFICATE` must be either `true` or `false`\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 33,
                  "endLine": 343,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                    "rendered": {
                      "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                      "markdown": "`        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 1066,
                  "startColumn": 50,
                  "endLine": 1066,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.delete_prediction_api_key_registration\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.delete_prediction_api_key_registration\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.delete_prediction_api_key_registration\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 1038,
                  "startColumn": 32,
                  "endLine": 1038,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 1038,
                  "startColumn": 11,
                  "endLine": 1038,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 1007,
                  "startColumn": 78,
                  "endLine": 1008,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 948,
                  "startColumn": 50,
                  "endLine": 948,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.list_prediction_api_key_registrations\n",
                    "rendered": {
                      "text": "            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.list_prediction_api_key_registrations\n",
                      "markdown": "`            if parent is not None:\n                request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.list_prediction_api_key_registrations\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 911,
                  "startColumn": 32,
                  "endLine": 911,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 911,
                  "startColumn": 11,
                  "endLine": 911,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 877,
                  "startColumn": 78,
                  "endLine": 878,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 828,
                  "startColumn": 50,
                  "endLine": 828,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                    prediction_api_key_registration\n                )\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.create_prediction_api_key_registration\n",
                    "rendered": {
                      "text": "                    prediction_api_key_registration\n                )\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.create_prediction_api_key_registration\n",
                      "markdown": "`                    prediction_api_key_registration\n                )\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[\n            self._transport.create_prediction_api_key_registration\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 792,
                  "startColumn": 32,
                  "endLine": 792,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 792,
                  "startColumn": 11,
                  "endLine": 792,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 752,
                  "startColumn": 78,
                  "endLine": 753,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 43,
                  "endLine": 172,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                    "rendered": {
                      "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                      "markdown": "`            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 28,
                  "endLine": 155,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                    "rendered": {
                      "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                      "markdown": "`            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 48,
                  "endLine": 202,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                    "rendered": {
                      "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                      "markdown": "`                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 48,
                  "endLine": 193,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                    "rendered": {
                      "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                      "markdown": "`                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 21,
                  "endLine": 119,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 356,
                  "startColumn": 37,
                  "endLine": 356,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    ) -> Callable[\n        [catalog_service.UpdateCatalogItemRequest], Awaitable[catalog.CatalogItem]\n    ]:\n        r\"\"\"Return a callable for the update catalog item method over gRPC.\n\n        Updates a catalog item. Partial updating is\n        supported. Non-existing items will be created.\n",
                    "rendered": {
                      "text": "    ) -> Callable[\n        [catalog_service.UpdateCatalogItemRequest], Awaitable[catalog.CatalogItem]\n    ]:\n        r\"\"\"Return a callable for the update catalog item method over gRPC.\n\n        Updates a catalog item. Partial updating is\n        supported. Non-existing items will be created.\n",
                      "markdown": "`    ) -> Callable[\n        [catalog_service.UpdateCatalogItemRequest], Awaitable[catalog.CatalogItem]\n    ]:\n        r\"\"\"Return a callable for the update catalog item method over gRPC.\n\n        Updates a catalog item. Partial updating is\n        supported. Non-existing items will be created.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 27,
                  "endLine": 159,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 3,
                  "endLine": 50,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n",
                    "rendered": {
                      "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n",
                      "markdown": "`    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 3,
                  "endLine": 42,
                  "endColumn": 12,
                  "snippet": {
                    "text": "class CatalogServiceGrpcAsyncIOTransport(CatalogServiceTransport):\n    \"\"\"gRPC AsyncIO backend transport for CatalogService.\n\n    Service for ingesting catalog information of the customer's\n    website.\n\n    This class defines the same methods as the primary client, so the\n",
                    "rendered": {
                      "text": "class CatalogServiceGrpcAsyncIOTransport(CatalogServiceTransport):\n    \"\"\"gRPC AsyncIO backend transport for CatalogService.\n\n    Service for ingesting catalog information of the customer's\n    website.\n\n    This class defines the same methods as the primary client, so the\n",
                      "markdown": "`class CatalogServiceGrpcAsyncIOTransport(CatalogServiceTransport):\n    \"\"\"gRPC AsyncIO backend transport for CatalogService.\n\n    Service for ingesting catalog information of the customer's\n    website.\n\n    This class defines the same methods as the primary client, so the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 48,
                  "endLine": 156,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                    "rendered": {
                      "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                      "markdown": "`                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 48,
                  "endLine": 147,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                    "rendered": {
                      "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                      "markdown": "`                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 21,
                  "endLine": 73,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 37,
                  "endLine": 344,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    def update_catalog_item(\n        self,\n    ) -> Callable[[catalog_service.UpdateCatalogItemRequest], catalog.CatalogItem]:\n        r\"\"\"Return a callable for the update catalog item method over gRPC.\n\n        Updates a catalog item. Partial updating is\n        supported. Non-existing items will be created.\n",
                    "rendered": {
                      "text": "    def update_catalog_item(\n        self,\n    ) -> Callable[[catalog_service.UpdateCatalogItemRequest], catalog.CatalogItem]:\n        r\"\"\"Return a callable for the update catalog item method over gRPC.\n\n        Updates a catalog item. Partial updating is\n        supported. Non-existing items will be created.\n",
                      "markdown": "`    def update_catalog_item(\n        self,\n    ) -> Callable[[catalog_service.UpdateCatalogItemRequest], catalog.CatalogItem]:\n        r\"\"\"Return a callable for the update catalog item method over gRPC.\n\n        Updates a catalog item. Partial updating is\n        supported. Non-existing items will be created.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 27,
                  "endLine": 112,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 3,
                  "endLine": 47,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n",
                    "rendered": {
                      "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n",
                      "markdown": "`    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 3,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "class CatalogServiceGrpcTransport(CatalogServiceTransport):\n    \"\"\"gRPC backend transport for CatalogService.\n\n    Service for ingesting catalog information of the customer's\n    website.\n\n    This class defines the same methods as the primary client, so the\n",
                    "rendered": {
                      "text": "class CatalogServiceGrpcTransport(CatalogServiceTransport):\n    \"\"\"gRPC backend transport for CatalogService.\n\n    Service for ingesting catalog information of the customer's\n    website.\n\n    This class defines the same methods as the primary client, so the\n",
                      "markdown": "`class CatalogServiceGrpcTransport(CatalogServiceTransport):\n    \"\"\"gRPC backend transport for CatalogService.\n\n    Service for ingesting catalog information of the customer's\n    website.\n\n    This class defines the same methods as the primary client, so the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 19,
                  "endLine": 125,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n",
                    "rendered": {
                      "text": "        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n",
                      "markdown": "`        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 21,
                  "endLine": 65,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 32,
                  "endLine": 114,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n",
                    "rendered": {
                      "text": "                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n",
                      "markdown": "`                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 27,
                  "endLine": 83,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/__init__.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/__init__.py"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 4,
                  "endLine": 111,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    \"ListCatalogItemsRequest\",\n    \"ListCatalogItemsResponse\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"ListUserEventsRequest\",\n    \"ListUserEventsResponse\",\n    \"PredictRequest\",\n",
                    "rendered": {
                      "text": "    \"ListCatalogItemsRequest\",\n    \"ListCatalogItemsResponse\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"ListUserEventsRequest\",\n    \"ListUserEventsResponse\",\n    \"PredictRequest\",\n",
                      "markdown": "`    \"ListCatalogItemsRequest\",\n    \"ListCatalogItemsResponse\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"ListUserEventsRequest\",\n    \"ListUserEventsResponse\",\n    \"PredictRequest\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/__init__.py"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 4,
                  "endLine": 110,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    \"InputConfig\",\n    \"ListCatalogItemsRequest\",\n    \"ListCatalogItemsResponse\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"ListUserEventsRequest\",\n    \"ListUserEventsResponse\",\n",
                    "rendered": {
                      "text": "    \"InputConfig\",\n    \"ListCatalogItemsRequest\",\n    \"ListCatalogItemsResponse\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"ListUserEventsRequest\",\n    \"ListUserEventsResponse\",\n",
                      "markdown": "`    \"InputConfig\",\n    \"ListCatalogItemsRequest\",\n    \"ListCatalogItemsResponse\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"ListUserEventsRequest\",\n    \"ListUserEventsResponse\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/__init__.py"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 4,
                  "endLine": 95,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    \"CreateCatalogItemRequest\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeleteCatalogItemRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"EventDetail\",\n    \"FeatureMap\",\n    \"GcsSource\",\n",
                    "rendered": {
                      "text": "    \"CreateCatalogItemRequest\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeleteCatalogItemRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"EventDetail\",\n    \"FeatureMap\",\n    \"GcsSource\",\n",
                      "markdown": "`    \"CreateCatalogItemRequest\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeleteCatalogItemRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"EventDetail\",\n    \"FeatureMap\",\n    \"GcsSource\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/__init__.py"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 4,
                  "endLine": 93,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    \"CatalogServiceClient\",\n    \"CollectUserEventRequest\",\n    \"CreateCatalogItemRequest\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeleteCatalogItemRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"EventDetail\",\n",
                    "rendered": {
                      "text": "    \"CatalogServiceClient\",\n    \"CollectUserEventRequest\",\n    \"CreateCatalogItemRequest\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeleteCatalogItemRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"EventDetail\",\n",
                      "markdown": "`    \"CatalogServiceClient\",\n    \"CollectUserEventRequest\",\n    \"CreateCatalogItemRequest\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeleteCatalogItemRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"EventDetail\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/__init__.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine/__init__.py"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 4,
                  "endLine": 134,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n    \"PredictRequest\",\n    \"PredictResponse\",\n",
                    "rendered": {
                      "text": "    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n    \"PredictRequest\",\n    \"PredictResponse\",\n",
                      "markdown": "`    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n    \"PredictRequest\",\n    \"PredictResponse\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine/__init__.py"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 4,
                  "endLine": 133,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n    \"PredictRequest\",\n",
                    "rendered": {
                      "text": "    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n    \"PredictRequest\",\n",
                      "markdown": "`    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n    \"PredictRequest\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine/__init__.py"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 4,
                  "endLine": 132,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    \"UserEventImportSummary\",\n    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n",
                    "rendered": {
                      "text": "    \"UserEventImportSummary\",\n    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n",
                      "markdown": "`    \"UserEventImportSummary\",\n    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n    \"PredictionApiKeyRegistration\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine/__init__.py"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 4,
                  "endLine": 131,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    \"InputConfig\",\n    \"UserEventImportSummary\",\n    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n",
                    "rendered": {
                      "text": "    \"InputConfig\",\n    \"UserEventImportSummary\",\n    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n",
                      "markdown": "`    \"InputConfig\",\n    \"UserEventImportSummary\",\n    \"UserEventInlineSource\",\n    \"CreatePredictionApiKeyRegistrationRequest\",\n    \"DeletePredictionApiKeyRegistrationRequest\",\n    \"ListPredictionApiKeyRegistrationsRequest\",\n    \"ListPredictionApiKeyRegistrationsResponse\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine/__init__.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 23,
                  "endLine": 169,
                  "snippet": {
                    "text": "        self._request = user_event_service.ListUserEventsRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                    "rendered": {
                      "text": "        self._request = user_event_service.ListUserEventsRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                      "markdown": "`        self._request = user_event_service.ListUserEventsRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 32,
                  "endLine": 160,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 11,
                  "endLine": 160,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 23,
                  "endLine": 95,
                  "snippet": {
                    "text": "        self._request = user_event_service.ListUserEventsRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                    "rendered": {
                      "text": "        self._request = user_event_service.ListUserEventsRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                      "markdown": "`        self._request = user_event_service.ListUserEventsRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 32,
                  "endLine": 86,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 11,
                  "endLine": 86,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 388,
                  "startColumn": 24,
                  "endLine": 388,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            \"GOOGLE_API_USE_CLIENT_CERTIFICATE\", \"false\"\n        ).lower()\n        use_mtls_endpoint = os.getenv(\"GOOGLE_API_USE_MTLS_ENDPOINT\", \"auto\").lower()\n        universe_domain_env = os.getenv(\"GOOGLE_CLOUD_UNIVERSE_DOMAIN\")\n        if use_client_cert not in (\"true\", \"false\"):\n            raise ValueError(\n                \"Environment variable `GOOGLE_API_USE_CLIENT_CERTIFICATE` must be either `true` or `false`\"\n",
                    "rendered": {
                      "text": "            \"GOOGLE_API_USE_CLIENT_CERTIFICATE\", \"false\"\n        ).lower()\n        use_mtls_endpoint = os.getenv(\"GOOGLE_API_USE_MTLS_ENDPOINT\", \"auto\").lower()\n        universe_domain_env = os.getenv(\"GOOGLE_CLOUD_UNIVERSE_DOMAIN\")\n        if use_client_cert not in (\"true\", \"false\"):\n            raise ValueError(\n                \"Environment variable `GOOGLE_API_USE_CLIENT_CERTIFICATE` must be either `true` or `false`\"\n",
                      "markdown": "`            \"GOOGLE_API_USE_CLIENT_CERTIFICATE\", \"false\"\n        ).lower()\n        use_mtls_endpoint = os.getenv(\"GOOGLE_API_USE_MTLS_ENDPOINT\", \"auto\").lower()\n        universe_domain_env = os.getenv(\"GOOGLE_CLOUD_UNIVERSE_DOMAIN\")\n        if use_client_cert not in (\"true\", \"false\"):\n            raise ValueError(\n                \"Environment variable `GOOGLE_API_USE_CLIENT_CERTIFICATE` must be either `true` or `false`\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 33,
                  "endLine": 318,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                    "rendered": {
                      "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                      "markdown": "`        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1468,
                  "startColumn": 50,
                  "endLine": 1468,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if errors_config is not None:\n                request.errors_config = errors_config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.import_user_events]\n\n",
                    "rendered": {
                      "text": "            if errors_config is not None:\n                request.errors_config = errors_config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.import_user_events]\n\n",
                      "markdown": "`            if errors_config is not None:\n                request.errors_config = errors_config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.import_user_events]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1428,
                  "startColumn": 32,
                  "endLine": 1428,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1428,
                  "startColumn": 11,
                  "endLine": 1428,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1365,
                  "startColumn": 78,
                  "endLine": 1366,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1306,
                  "startColumn": 50,
                  "endLine": 1306,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if force is not None:\n                request.force = force\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.purge_user_events]\n\n",
                    "rendered": {
                      "text": "            if force is not None:\n                request.force = force\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.purge_user_events]\n\n",
                      "markdown": "`            if force is not None:\n                request.force = force\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.purge_user_events]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1270,
                  "startColumn": 32,
                  "endLine": 1270,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1270,
                  "startColumn": 11,
                  "endLine": 1270,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1249,
                  "startColumn": 60,
                  "endLine": 1249,
                  "endColumn": 66,
                  "snippet": {
                    "text": "                   delete all events associated with a user. Example 1:\n                   Deleting all events in a time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n                   Example 2: Deleting specific eventType in time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n                   Example 3: Deleting all events for a specific visitor\n                   ``visitorId = visitor1024`` The filtering fields are\n",
                    "rendered": {
                      "text": "                   delete all events associated with a user. Example 1:\n                   Deleting all events in a time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n                   Example 2: Deleting specific eventType in time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n                   Example 3: Deleting all events for a specific visitor\n                   ``visitorId = visitor1024`` The filtering fields are\n",
                      "markdown": "`                   delete all events associated with a user. Example 1:\n                   Deleting all events in a time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n                   Example 2: Deleting specific eventType in time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n                   Example 3: Deleting all events for a specific visitor\n                   ``visitorId = visitor1024`` The filtering fields are\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1247,
                  "startColumn": 43,
                  "endLine": 1247,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                   will delete all events associated with a visitor.\n                -  userId - field of type string. Specifying this will\n                   delete all events associated with a user. Example 1:\n                   Deleting all events in a time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n                   Example 2: Deleting specific eventType in time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n",
                    "rendered": {
                      "text": "                   will delete all events associated with a visitor.\n                -  userId - field of type string. Specifying this will\n                   delete all events associated with a user. Example 1:\n                   Deleting all events in a time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n                   Example 2: Deleting specific eventType in time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n",
                      "markdown": "`                   will delete all events associated with a visitor.\n                -  userId - field of type string. Specifying this will\n                   delete all events associated with a user. Example 1:\n                   Deleting all events in a time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n                   Example 2: Deleting specific eventType in time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1197,
                  "startColumn": 78,
                  "endLine": 1198,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1137,
                  "startColumn": 50,
                  "endLine": 1137,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if filter is not None:\n                request.filter = filter\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_user_events]\n\n",
                    "rendered": {
                      "text": "            if filter is not None:\n                request.filter = filter\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_user_events]\n\n",
                      "markdown": "`            if filter is not None:\n                request.filter = filter\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_user_events]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1103,
                  "startColumn": 32,
                  "endLine": 1103,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1103,
                  "startColumn": 11,
                  "endLine": 1103,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1070,
                  "startColumn": 18,
                  "endLine": 1070,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                eventsMissingCatalogItems\n                eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n\n                We expect only 3 types of fields:\n\n                ::\n\n",
                    "rendered": {
                      "text": "                eventsMissingCatalogItems\n                eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n\n                We expect only 3 types of fields:\n\n                ::\n\n",
                      "markdown": "`                eventsMissingCatalogItems\n                eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n\n                We expect only 3 types of fields:\n\n                ::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1065,
                  "startColumn": 37,
                  "endLine": 1065,
                  "endColumn": 43,
                  "snippet": {
                    "text": "                over returned events. This is a sequence of terms, where\n                each term applies some kind of a restriction to the\n                returned user events. Use this expression to restrict\n                results to a specific time range, or filter events by\n                eventType. eg: eventTime > \"2012-04-23T18:25:43.511Z\"\n                eventsMissingCatalogItems\n                eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n",
                    "rendered": {
                      "text": "                over returned events. This is a sequence of terms, where\n                each term applies some kind of a restriction to the\n                returned user events. Use this expression to restrict\n                results to a specific time range, or filter events by\n                eventType. eg: eventTime > \"2012-04-23T18:25:43.511Z\"\n                eventsMissingCatalogItems\n                eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n",
                      "markdown": "`                over returned events. This is a sequence of terms, where\n                each term applies some kind of a restriction to the\n                returned user events. Use this expression to restrict\n                results to a specific time range, or filter events by\n                eventType. eg: eventTime > \"2012-04-23T18:25:43.511Z\"\n                eventsMissingCatalogItems\n                eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1028,
                  "startColumn": 78,
                  "endLine": 1029,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1019,
                  "startColumn": 47,
                  "endLine": 1019,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        timeout: Union[float, object] = gapic_v1.method.DEFAULT,\n        metadata: Sequence[Tuple[str, str]] = (),\n    ) -> pagers.ListUserEventsPager:\n        r\"\"\"Gets a list of user events within a time range, with\n        potential filtering.\n\n        .. code-block:: python\n",
                    "rendered": {
                      "text": "        timeout: Union[float, object] = gapic_v1.method.DEFAULT,\n        metadata: Sequence[Tuple[str, str]] = (),\n    ) -> pagers.ListUserEventsPager:\n        r\"\"\"Gets a list of user events within a time range, with\n        potential filtering.\n\n        .. code-block:: python\n",
                      "markdown": "`        timeout: Union[float, object] = gapic_v1.method.DEFAULT,\n        metadata: Sequence[Tuple[str, str]] = (),\n    ) -> pagers.ListUserEventsPager:\n        r\"\"\"Gets a list of user events within a time range, with\n        potential filtering.\n\n        .. code-block:: python\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 985,
                  "startColumn": 50,
                  "endLine": 985,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if ets is not None:\n                request.ets = ets\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.collect_user_event]\n\n",
                    "rendered": {
                      "text": "            if ets is not None:\n                request.ets = ets\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.collect_user_event]\n\n",
                      "markdown": "`            if ets is not None:\n                request.ets = ets\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.collect_user_event]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 946,
                  "startColumn": 21,
                  "endLine": 946,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n                   Example with streaming methods:\n\n                      service CaldavService {\n                         rpc GetCalendar(stream google.api.HttpBody)\n                            returns (stream google.api.HttpBody);\n\n",
                    "rendered": {
                      "text": "\n                   Example with streaming methods:\n\n                      service CaldavService {\n                         rpc GetCalendar(stream google.api.HttpBody)\n                            returns (stream google.api.HttpBody);\n\n",
                      "markdown": "`\n                   Example with streaming methods:\n\n                      service CaldavService {\n                         rpc GetCalendar(stream google.api.HttpBody)\n                            returns (stream google.api.HttpBody);\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 935,
                  "startColumn": 21,
                  "endLine": 935,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n                      }\n\n                      service ResourceService {\n                         rpc GetResource(GetResourceRequest)\n                            returns (google.api.HttpBody);\n\n",
                    "rendered": {
                      "text": "\n                      }\n\n                      service ResourceService {\n                         rpc GetResource(GetResourceRequest)\n                            returns (google.api.HttpBody);\n\n",
                      "markdown": "`\n                      }\n\n                      service ResourceService {\n                         rpc GetResource(GetResourceRequest)\n                            returns (google.api.HttpBody);\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 906,
                  "startColumn": 32,
                  "endLine": 906,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 906,
                  "startColumn": 11,
                  "endLine": 906,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 842,
                  "startColumn": 78,
                  "endLine": 843,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 790,
                  "startColumn": 50,
                  "endLine": 790,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if user_event is not None:\n                request.user_event = user_event\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.write_user_event]\n\n",
                    "rendered": {
                      "text": "            if user_event is not None:\n                request.user_event = user_event\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.write_user_event]\n\n",
                      "markdown": "`            if user_event is not None:\n                request.user_event = user_event\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.write_user_event]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 757,
                  "startColumn": 32,
                  "endLine": 757,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 757,
                  "startColumn": 11,
                  "endLine": 757,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 714,
                  "startColumn": 78,
                  "endLine": 715,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 554,
                  "startColumn": 38,
                  "endLine": 554,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        client_options: Optional[Union[client_options_lib.ClientOptions, dict]] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the user event service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                    "rendered": {
                      "text": "        client_options: Optional[Union[client_options_lib.ClientOptions, dict]] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the user event service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                      "markdown": "`        client_options: Optional[Union[client_options_lib.ClientOptions, dict]] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the user event service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 43,
                  "endLine": 173,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                    "rendered": {
                      "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                      "markdown": "`            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 28,
                  "endLine": 156,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                    "rendered": {
                      "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                      "markdown": "`            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 33,
                  "endLine": 157,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                    "rendered": {
                      "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                      "markdown": "`        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1058,
                  "startColumn": 50,
                  "endLine": 1058,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if errors_config is not None:\n            request.errors_config = errors_config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.import_user_events\n",
                    "rendered": {
                      "text": "        if errors_config is not None:\n            request.errors_config = errors_config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.import_user_events\n",
                      "markdown": "`        if errors_config is not None:\n            request.errors_config = errors_config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.import_user_events\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1017,
                  "startColumn": 32,
                  "endLine": 1017,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 1017,
                  "startColumn": 11,
                  "endLine": 1017,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 954,
                  "startColumn": 78,
                  "endLine": 955,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 893,
                  "startColumn": 50,
                  "endLine": 893,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if force is not None:\n            request.force = force\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.purge_user_events\n",
                    "rendered": {
                      "text": "        if force is not None:\n            request.force = force\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.purge_user_events\n",
                      "markdown": "`        if force is not None:\n            request.force = force\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.purge_user_events\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 856,
                  "startColumn": 32,
                  "endLine": 856,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 856,
                  "startColumn": 11,
                  "endLine": 856,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 835,
                  "startColumn": 60,
                  "endLine": 835,
                  "endColumn": 66,
                  "snippet": {
                    "text": "                   delete all events associated with a user. Example 1:\n                   Deleting all events in a time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n                   Example 2: Deleting specific eventType in time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n                   Example 3: Deleting all events for a specific visitor\n                   ``visitorId = visitor1024`` The filtering fields are\n",
                    "rendered": {
                      "text": "                   delete all events associated with a user. Example 1:\n                   Deleting all events in a time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n                   Example 2: Deleting specific eventType in time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n                   Example 3: Deleting all events for a specific visitor\n                   ``visitorId = visitor1024`` The filtering fields are\n",
                      "markdown": "`                   delete all events associated with a user. Example 1:\n                   Deleting all events in a time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n                   Example 2: Deleting specific eventType in time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n                   Example 3: Deleting all events for a specific visitor\n                   ``visitorId = visitor1024`` The filtering fields are\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 833,
                  "startColumn": 43,
                  "endLine": 833,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                   will delete all events associated with a visitor.\n                -  userId - field of type string. Specifying this will\n                   delete all events associated with a user. Example 1:\n                   Deleting all events in a time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n                   Example 2: Deleting specific eventType in time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n",
                    "rendered": {
                      "text": "                   will delete all events associated with a visitor.\n                -  userId - field of type string. Specifying this will\n                   delete all events associated with a user. Example 1:\n                   Deleting all events in a time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n                   Example 2: Deleting specific eventType in time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n",
                      "markdown": "`                   will delete all events associated with a visitor.\n                -  userId - field of type string. Specifying this will\n                   delete all events associated with a user. Example 1:\n                   Deleting all events in a time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"``\n                   Example 2: Deleting specific eventType in time range.\n                   ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"``\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 783,
                  "startColumn": 78,
                  "endLine": 784,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 721,
                  "startColumn": 50,
                  "endLine": 721,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if filter is not None:\n            request.filter = filter\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.list_user_events\n",
                    "rendered": {
                      "text": "        if filter is not None:\n            request.filter = filter\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.list_user_events\n",
                      "markdown": "`        if filter is not None:\n            request.filter = filter\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.list_user_events\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 686,
                  "startColumn": 32,
                  "endLine": 686,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 686,
                  "startColumn": 11,
                  "endLine": 686,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 653,
                  "startColumn": 18,
                  "endLine": 653,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                eventsMissingCatalogItems\n                eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n\n                We expect only 3 types of fields:\n\n                ::\n\n",
                    "rendered": {
                      "text": "                eventsMissingCatalogItems\n                eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n\n                We expect only 3 types of fields:\n\n                ::\n\n",
                      "markdown": "`                eventsMissingCatalogItems\n                eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n\n                We expect only 3 types of fields:\n\n                ::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 648,
                  "startColumn": 37,
                  "endLine": 648,
                  "endColumn": 43,
                  "snippet": {
                    "text": "                over returned events. This is a sequence of terms, where\n                each term applies some kind of a restriction to the\n                returned user events. Use this expression to restrict\n                results to a specific time range, or filter events by\n                eventType. eg: eventTime > \"2012-04-23T18:25:43.511Z\"\n                eventsMissingCatalogItems\n                eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n",
                    "rendered": {
                      "text": "                over returned events. This is a sequence of terms, where\n                each term applies some kind of a restriction to the\n                returned user events. Use this expression to restrict\n                results to a specific time range, or filter events by\n                eventType. eg: eventTime > \"2012-04-23T18:25:43.511Z\"\n                eventsMissingCatalogItems\n                eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n",
                      "markdown": "`                over returned events. This is a sequence of terms, where\n                each term applies some kind of a restriction to the\n                returned user events. Use this expression to restrict\n                results to a specific time range, or filter events by\n                eventType. eg: eventTime > \"2012-04-23T18:25:43.511Z\"\n                eventsMissingCatalogItems\n                eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 611,
                  "startColumn": 78,
                  "endLine": 612,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 602,
                  "startColumn": 47,
                  "endLine": 602,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        timeout: Union[float, object] = gapic_v1.method.DEFAULT,\n        metadata: Sequence[Tuple[str, str]] = (),\n    ) -> pagers.ListUserEventsAsyncPager:\n        r\"\"\"Gets a list of user events within a time range, with\n        potential filtering.\n\n        .. code-block:: python\n",
                    "rendered": {
                      "text": "        timeout: Union[float, object] = gapic_v1.method.DEFAULT,\n        metadata: Sequence[Tuple[str, str]] = (),\n    ) -> pagers.ListUserEventsAsyncPager:\n        r\"\"\"Gets a list of user events within a time range, with\n        potential filtering.\n\n        .. code-block:: python\n",
                      "markdown": "`        timeout: Union[float, object] = gapic_v1.method.DEFAULT,\n        metadata: Sequence[Tuple[str, str]] = (),\n    ) -> pagers.ListUserEventsAsyncPager:\n        r\"\"\"Gets a list of user events within a time range, with\n        potential filtering.\n\n        .. code-block:: python\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 566,
                  "startColumn": 50,
                  "endLine": 566,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if ets is not None:\n            request.ets = ets\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.collect_user_event\n",
                    "rendered": {
                      "text": "        if ets is not None:\n            request.ets = ets\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.collect_user_event\n",
                      "markdown": "`        if ets is not None:\n            request.ets = ets\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.collect_user_event\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 526,
                  "startColumn": 21,
                  "endLine": 526,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n                   Example with streaming methods:\n\n                      service CaldavService {\n                         rpc GetCalendar(stream google.api.HttpBody)\n                            returns (stream google.api.HttpBody);\n\n",
                    "rendered": {
                      "text": "\n                   Example with streaming methods:\n\n                      service CaldavService {\n                         rpc GetCalendar(stream google.api.HttpBody)\n                            returns (stream google.api.HttpBody);\n\n",
                      "markdown": "`\n                   Example with streaming methods:\n\n                      service CaldavService {\n                         rpc GetCalendar(stream google.api.HttpBody)\n                            returns (stream google.api.HttpBody);\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 515,
                  "startColumn": 21,
                  "endLine": 515,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n                      }\n\n                      service ResourceService {\n                         rpc GetResource(GetResourceRequest)\n                            returns (google.api.HttpBody);\n\n",
                    "rendered": {
                      "text": "\n                      }\n\n                      service ResourceService {\n                         rpc GetResource(GetResourceRequest)\n                            returns (google.api.HttpBody);\n\n",
                      "markdown": "`\n                      }\n\n                      service ResourceService {\n                         rpc GetResource(GetResourceRequest)\n                            returns (google.api.HttpBody);\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 32,
                  "endLine": 486,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 11,
                  "endLine": 486,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 422,
                  "startColumn": 78,
                  "endLine": 423,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 50,
                  "endLine": 368,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if user_event is not None:\n            request.user_event = user_event\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.write_user_event\n",
                    "rendered": {
                      "text": "        if user_event is not None:\n            request.user_event = user_event\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.write_user_event\n",
                      "markdown": "`        if user_event is not None:\n            request.user_event = user_event\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.write_user_event\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 32,
                  "endLine": 334,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 11,
                  "endLine": 334,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 291,
                  "startColumn": 78,
                  "endLine": 292,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 38,
                  "endLine": 217,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        client_options: Optional[ClientOptions] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the user event service async client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                    "rendered": {
                      "text": "        client_options: Optional[ClientOptions] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the user event service async client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                      "markdown": "`        client_options: Optional[ClientOptions] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the user event service async client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 43,
                  "endLine": 125,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                    "rendered": {
                      "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                      "markdown": "`            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 28,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                    "rendered": {
                      "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                      "markdown": "`            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/user_event_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_servi"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 29,
                  "endLine": 244,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n",
                    "rendered": {
                      "text": "        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n",
                      "markdown": "`        maybe_url_match = re.match(\"^(?P<scheme>http(?:s)?://)?(?P<host>.*)$\", host)\n        if maybe_url_match is None:\n            raise ValueError(\n                f\"Unexpected hostname structure: {host}\"\n            )  # pragma: NO COVER\n\n        url_match_items = maybe_url_match.groupdict()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 21,
                  "endLine": 209,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 484,
                  "startColumn": 40,
                  "endLine": 484,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                    ``ListPredictionApiKeyRegistrations``.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    ``ListPredictionApiKeyRegistrations``.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                      "markdown": "`                    ``ListPredictionApiKeyRegistrations``.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 484,
                  "startColumn": 19,
                  "endLine": 484,
                  "endColumn": 28,
                  "snippet": {
                    "text": "                    ``ListPredictionApiKeyRegistrations``.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    ``ListPredictionApiKeyRegistrations``.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                      "markdown": "`                    ``ListPredictionApiKeyRegistrations``.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 40,
                  "endLine": 400,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                    ``DeletePredictionApiKeyRegistration`` method.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                    ``DeletePredictionApiKeyRegistration`` method.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                    ``DeletePredictionApiKeyRegistration`` method.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 19,
                  "endLine": 400,
                  "endColumn": 28,
                  "snippet": {
                    "text": "                    ``DeletePredictionApiKeyRegistration`` method.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n            \"\"\"\n",
                    "rendered": {
                      "text": "                    ``DeletePredictionApiKeyRegistration`` method.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n            \"\"\"\n",
                      "markdown": "`                    ``DeletePredictionApiKeyRegistration`` method.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n            \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 40,
                  "endLine": 297,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                    ``CreatePredictionApiKeyRegistration`` method.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    ``CreatePredictionApiKeyRegistration`` method.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                      "markdown": "`                    ``CreatePredictionApiKeyRegistration`` method.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 19,
                  "endLine": 297,
                  "endColumn": 28,
                  "snippet": {
                    "text": "                    ``CreatePredictionApiKeyRegistration`` method.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                    ``CreatePredictionApiKeyRegistration`` method.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n",
                      "markdown": "`                    ``CreatePredictionApiKeyRegistration`` method.\n                    retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                        should be retried.\n                    timeout (float): The timeout for this request.\n                    metadata (Sequence[Tuple[str, str]]): Strings which should be\n                        sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 27,
                  "endLine": 232,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n",
                      "markdown": "`                Generally, you only need to set this if you are developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n            url_scheme: the protocol scheme for the API endpoint.  Normally\n                \"https\", but for testing or local servers,\n                \"http\" can be specified.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 3,
                  "endLine": 175,
                  "endColumn": 12,
                  "snippet": {
                    "text": "class PredictionApiKeyRegistryRestTransport(PredictionApiKeyRegistryTransport):\n    \"\"\"REST backend transport for PredictionApiKeyRegistry.\n\n    Service for registering API keys for use with the ``predict``\n    method. If you use an API key to request predictions, you must first\n    register the API key. Otherwise, your prediction request is\n    rejected. If you use OAuth to authenticate your ``predict`` method\n",
                    "rendered": {
                      "text": "class PredictionApiKeyRegistryRestTransport(PredictionApiKeyRegistryTransport):\n    \"\"\"REST backend transport for PredictionApiKeyRegistry.\n\n    Service for registering API keys for use with the ``predict``\n    method. If you use an API key to request predictions, you must first\n    register the API key. Otherwise, your prediction request is\n    rejected. If you use OAuth to authenticate your ``predict`` method\n",
                      "markdown": "`class PredictionApiKeyRegistryRestTransport(PredictionApiKeyRegistryTransport):\n    \"\"\"REST backend transport for PredictionApiKeyRegistry.\n\n    Service for registering API keys for use with the ``predict``\n    method. If you use an API key to request predictions, you must first\n    register the API key. Otherwise, your prediction request is\n    rejected. If you use OAuth to authenticate your ``predict`` method\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 37,
                  "endLine": 62,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n",
                    "rendered": {
                      "text": "    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n",
                      "markdown": "`    in arbitrary ways.\n    Example use cases include:\n    * Logging\n    * Verifying requests according to service or custom semantics\n    * Stripping extraneous information from responses\n\n    These use cases and more can be enabled by injecting an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 28,
                  "endLine": 293,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        r\"\"\"Return a callable for the list prediction api key\n        registrations method over gRPC.\n\n        List the registered apiKeys for use with predict\n        method.\n\n        Returns:\n",
                    "rendered": {
                      "text": "        r\"\"\"Return a callable for the list prediction api key\n        registrations method over gRPC.\n\n        List the registered apiKeys for use with predict\n        method.\n\n        Returns:\n",
                      "markdown": "`        r\"\"\"Return a callable for the list prediction api key\n        registrations method over gRPC.\n\n        List the registered apiKeys for use with predict\n        method.\n\n        Returns:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 48,
                  "endLine": 202,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                    "rendered": {
                      "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                      "markdown": "`                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 48,
                  "endLine": 193,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                    "rendered": {
                      "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                      "markdown": "`                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 21,
                  "endLine": 120,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 11,
                  "endLine": 402,
                  "endColumn": 57,
                  "snippet": {
                    "text": "        return self.grpc_channel.close()\n\n\n__all__ = (\"PredictionApiKeyRegistryGrpcAsyncIOTransport\",)\n",
                    "rendered": {
                      "text": "        return self.grpc_channel.close()\n\n\n__all__ = (\"PredictionApiKeyRegistryGrpcAsyncIOTransport\",)\n",
                      "markdown": "`        return self.grpc_channel.close()\n\n\n__all__ = (\"PredictionApiKeyRegistryGrpcAsyncIOTransport\",)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 27,
                  "endLine": 160,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n            google.auth.exceptions.MutualTlsChannelError: If mutual TLS transport\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 3,
                  "endLine": 51,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n",
                    "rendered": {
                      "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n",
                      "markdown": "`    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _grpc_channel: aio.Channel\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 3,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "class PredictionApiKeyRegistryGrpcAsyncIOTransport(PredictionApiKeyRegistryTransport):\n    \"\"\"gRPC AsyncIO backend transport for PredictionApiKeyRegistry.\n\n    Service for registering API keys for use with the ``predict``\n    method. If you use an API key to request predictions, you must first\n    register the API key. Otherwise, your prediction request is\n    rejected. If you use OAuth to authenticate your ``predict`` method\n",
                    "rendered": {
                      "text": "class PredictionApiKeyRegistryGrpcAsyncIOTransport(PredictionApiKeyRegistryTransport):\n    \"\"\"gRPC AsyncIO backend transport for PredictionApiKeyRegistry.\n\n    Service for registering API keys for use with the ``predict``\n    method. If you use an API key to request predictions, you must first\n    register the API key. Otherwise, your prediction request is\n    rejected. If you use OAuth to authenticate your ``predict`` method\n",
                      "markdown": "`class PredictionApiKeyRegistryGrpcAsyncIOTransport(PredictionApiKeyRegistryTransport):\n    \"\"\"gRPC AsyncIO backend transport for PredictionApiKeyRegistry.\n\n    Service for registering API keys for use with the ``predict``\n    method. If you use an API key to request predictions, you must first\n    register the API key. Otherwise, your prediction request is\n    rejected. If you use OAuth to authenticate your ``predict`` method\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 28,
                  "endLine": 287,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        r\"\"\"Return a callable for the list prediction api key\n        registrations method over gRPC.\n\n        List the registered apiKeys for use with predict\n        method.\n\n        Returns:\n",
                    "rendered": {
                      "text": "        r\"\"\"Return a callable for the list prediction api key\n        registrations method over gRPC.\n\n        List the registered apiKeys for use with predict\n        method.\n\n        Returns:\n",
                      "markdown": "`        r\"\"\"Return a callable for the list prediction api key\n        registrations method over gRPC.\n\n        List the registered apiKeys for use with predict\n        method.\n\n        Returns:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 48,
                  "endLine": 156,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                    "rendered": {
                      "text": "                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n",
                      "markdown": "`                if client_cert_source_for_mtls and not ssl_channel_credentials:\n                    cert, key = client_cert_source_for_mtls()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n\n        # The base transport sets the host, credentials and scopes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 48,
                  "endLine": 147,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                    "rendered": {
                      "text": "                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n",
                      "markdown": "`                if client_cert_source:\n                    cert, key = client_cert_source()\n                    self._ssl_channel_credentials = grpc.ssl_channel_credentials(\n                        certificate_chain=cert, private_key=key\n                    )\n                else:\n                    self._ssl_channel_credentials = SslCredentials().ssl_credentials\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 21,
                  "endLine": 74,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 27,
                  "endLine": 113,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n\n        Raises:\n          google.auth.exceptions.MutualTLSChannelError: If mutual TLS transport\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 3,
                  "endLine": 48,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n",
                    "rendered": {
                      "text": "    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n",
                      "markdown": "`    and call it.\n\n    It sends protocol buffers over the wire using gRPC (which is built on\n    top of HTTP/2); the ``grpcio`` package must be installed.\n    \"\"\"\n\n    _stubs: Dict[str, Callable]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 12,
                  "snippet": {
                    "text": "class PredictionApiKeyRegistryGrpcTransport(PredictionApiKeyRegistryTransport):\n    \"\"\"gRPC backend transport for PredictionApiKeyRegistry.\n\n    Service for registering API keys for use with the ``predict``\n    method. If you use an API key to request predictions, you must first\n    register the API key. Otherwise, your prediction request is\n    rejected. If you use OAuth to authenticate your ``predict`` method\n",
                    "rendered": {
                      "text": "class PredictionApiKeyRegistryGrpcTransport(PredictionApiKeyRegistryTransport):\n    \"\"\"gRPC backend transport for PredictionApiKeyRegistry.\n\n    Service for registering API keys for use with the ``predict``\n    method. If you use an API key to request predictions, you must first\n    register the API key. Otherwise, your prediction request is\n    rejected. If you use OAuth to authenticate your ``predict`` method\n",
                      "markdown": "`class PredictionApiKeyRegistryGrpcTransport(PredictionApiKeyRegistryTransport):\n    \"\"\"gRPC backend transport for PredictionApiKeyRegistry.\n\n    Service for registering API keys for use with the ``predict``\n    method. If you use an API key to request predictions, you must first\n    register the API key. Otherwise, your prediction request is\n    rejected. If you use OAuth to authenticate your ``predict`` method\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 19,
                  "endLine": 122,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n",
                    "rendered": {
                      "text": "        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n",
                      "markdown": "`        # Save the credentials.\n        self._credentials = credentials\n\n        # Save the hostname. Default to port 443 (HTTPS) if none is specified.\n        if \":\" not in host:\n            host += \":443\"\n        self._host = host\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 21,
                  "endLine": 62,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                    "rendered": {
                      "text": "\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n",
                      "markdown": "`\n        Args:\n            host (Optional[str]):\n                 The hostname to connect to (default: 'recommendationengine.googleapis.com').\n            credentials (Optional[google.auth.credentials.Credentials]): The\n                authorization credentials to attach to requests. These\n                credentials identify the application to the service; if none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 32,
                  "endLine": 111,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n",
                    "rendered": {
                      "text": "                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n",
                      "markdown": "`                    api_audience if api_audience else host\n                )\n\n        # If the credentials are service account credentials, then always try to use self signed JWT.\n        if (\n            always_use_jwt_access\n            and isinstance(credentials, service_account.Credentials)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 27,
                  "endLine": 80,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n",
                    "rendered": {
                      "text": "                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n",
                      "markdown": "`                Generally, you only need to set this if you're developing\n                your own client library.\n            always_use_jwt_access (Optional[bool]): Whether self signed JWT should\n                be used for service account credentials.\n        \"\"\"\n\n        scopes_kwargs = {\"scopes\": scopes, \"default_scopes\": self.AUTH_SCOPES}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 4,
                  "endLine": 38,
                  "endColumn": 50,
                  "snippet": {
                    "text": "__all__ = (\n    \"PredictionApiKeyRegistryTransport\",\n    \"PredictionApiKeyRegistryGrpcTransport\",\n    \"PredictionApiKeyRegistryGrpcAsyncIOTransport\",\n    \"PredictionApiKeyRegistryRestTransport\",\n    \"PredictionApiKeyRegistryRestInterceptor\",\n)\n",
                    "rendered": {
                      "text": "__all__ = (\n    \"PredictionApiKeyRegistryTransport\",\n    \"PredictionApiKeyRegistryGrpcTransport\",\n    \"PredictionApiKeyRegistryGrpcAsyncIOTransport\",\n    \"PredictionApiKeyRegistryRestTransport\",\n    \"PredictionApiKeyRegistryRestInterceptor\",\n)\n",
                      "markdown": "`__all__ = (\n    \"PredictionApiKeyRegistryTransport\",\n    \"PredictionApiKeyRegistryGrpcTransport\",\n    \"PredictionApiKeyRegistryGrpcAsyncIOTransport\",\n    \"PredictionApiKeyRegistryRestTransport\",\n    \"PredictionApiKeyRegistryRestInterceptor\",\n)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 32,
                  "endLine": 429,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        timeout: Union[float, object] = gapic_v1.method.DEFAULT,\n        metadata: Sequence[Tuple[str, str]] = (),\n    ) -> pagers.ListPredictionApiKeyRegistrationsAsyncPager:\n        r\"\"\"List the registered apiKeys for use with predict\n        method.\n\n        .. code-block:: python\n",
                    "rendered": {
                      "text": "        timeout: Union[float, object] = gapic_v1.method.DEFAULT,\n        metadata: Sequence[Tuple[str, str]] = (),\n    ) -> pagers.ListPredictionApiKeyRegistrationsAsyncPager:\n        r\"\"\"List the registered apiKeys for use with predict\n        method.\n\n        .. code-block:: python\n",
                      "markdown": "`        timeout: Union[float, object] = gapic_v1.method.DEFAULT,\n        metadata: Sequence[Tuple[str, str]] = (),\n    ) -> pagers.ListPredictionApiKeyRegistrationsAsyncPager:\n        r\"\"\"List the registered apiKeys for use with predict\n        method.\n\n        .. code-block:: python\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 33,
                  "endLine": 170,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                    "rendered": {
                      "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                      "markdown": "`        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 629,
                  "startColumn": 50,
                  "endLine": 629,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.delete_prediction_api_key_registration\n",
                    "rendered": {
                      "text": "        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.delete_prediction_api_key_registration\n",
                      "markdown": "`        if name is not None:\n            request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.delete_prediction_api_key_registration\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 600,
                  "startColumn": 32,
                  "endLine": 600,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 600,
                  "startColumn": 11,
                  "endLine": 600,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 569,
                  "startColumn": 78,
                  "endLine": 570,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 510,
                  "startColumn": 50,
                  "endLine": 510,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.list_prediction_api_key_registrations\n",
                    "rendered": {
                      "text": "        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.list_prediction_api_key_registrations\n",
                      "markdown": "`        if parent is not None:\n            request.parent = parent\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.list_prediction_api_key_registrations\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 32,
                  "endLine": 472,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 11,
                  "endLine": 472,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 78,
                  "endLine": 439,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 389,
                  "startColumn": 50,
                  "endLine": 389,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        if prediction_api_key_registration is not None:\n            request.prediction_api_key_registration = prediction_api_key_registration\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.create_prediction_api_key_registration\n",
                    "rendered": {
                      "text": "        if prediction_api_key_registration is not None:\n            request.prediction_api_key_registration = prediction_api_key_registration\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.create_prediction_api_key_registration\n",
                      "markdown": "`        if prediction_api_key_registration is not None:\n            request.prediction_api_key_registration = prediction_api_key_registration\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._client._transport._wrapped_methods[\n            self._client._transport.create_prediction_api_key_registration\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 32,
                  "endLine": 354,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 11,
                  "endLine": 354,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 78,
                  "endLine": 315,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 43,
                  "endLine": 138,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                    "rendered": {
                      "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                      "markdown": "`            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 28,
                  "endLine": 123,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                    "rendered": {
                      "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                      "markdown": "`            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/prediction_api_k"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 23,
                  "endLine": 166,
                  "snippet": {
                    "text": "        self._request = catalog_service.ListCatalogItemsRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                    "rendered": {
                      "text": "        self._request = catalog_service.ListCatalogItemsRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                      "markdown": "`        self._request = catalog_service.ListCatalogItemsRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 32,
                  "endLine": 157,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 11,
                  "endLine": 157,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.AsyncRetry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 23,
                  "endLine": 92,
                  "snippet": {
                    "text": "        self._request = catalog_service.ListCatalogItemsRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                    "rendered": {
                      "text": "        self._request = catalog_service.ListCatalogItemsRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n",
                      "markdown": "`        self._request = catalog_service.ListCatalogItemsRequest(request)\n        self._response = response\n        self._retry = retry\n        self._timeout = timeout\n        self._metadata = metadata\n\n    def __getattr__(self, name: str) -> Any:\n        return getattr(self._response, name)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 32,
                  "endLine": 83,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 11,
                  "endLine": 83,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                The initial response object.\n            retry (google.api_core.retry.Retry): Designation of what errors,\n                if any, should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 24,
                  "endLine": 410,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            \"GOOGLE_API_USE_CLIENT_CERTIFICATE\", \"false\"\n        ).lower()\n        use_mtls_endpoint = os.getenv(\"GOOGLE_API_USE_MTLS_ENDPOINT\", \"auto\").lower()\n        universe_domain_env = os.getenv(\"GOOGLE_CLOUD_UNIVERSE_DOMAIN\")\n        if use_client_cert not in (\"true\", \"false\"):\n            raise ValueError(\n                \"Environment variable `GOOGLE_API_USE_CLIENT_CERTIFICATE` must be either `true` or `false`\"\n",
                    "rendered": {
                      "text": "            \"GOOGLE_API_USE_CLIENT_CERTIFICATE\", \"false\"\n        ).lower()\n        use_mtls_endpoint = os.getenv(\"GOOGLE_API_USE_MTLS_ENDPOINT\", \"auto\").lower()\n        universe_domain_env = os.getenv(\"GOOGLE_CLOUD_UNIVERSE_DOMAIN\")\n        if use_client_cert not in (\"true\", \"false\"):\n            raise ValueError(\n                \"Environment variable `GOOGLE_API_USE_CLIENT_CERTIFICATE` must be either `true` or `false`\"\n",
                      "markdown": "`            \"GOOGLE_API_USE_CLIENT_CERTIFICATE\", \"false\"\n        ).lower()\n        use_mtls_endpoint = os.getenv(\"GOOGLE_API_USE_MTLS_ENDPOINT\", \"auto\").lower()\n        universe_domain_env = os.getenv(\"GOOGLE_CLOUD_UNIVERSE_DOMAIN\")\n        if use_client_cert not in (\"true\", \"false\"):\n            raise ValueError(\n                \"Environment variable `GOOGLE_API_USE_CLIENT_CERTIFICATE` must be either `true` or `false`\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 1130,
                  "startColumn": 36,
                  "endLine": 1130,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Optional. Indicates which fields in\n                the provided 'item' to update. If not\n                set, will by default update all fields.\n\n                This corresponds to the ``update_mask`` field\n                on the ``request`` instance; if ``request`` is provided, this\n",
                    "rendered": {
                      "text": "            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Optional. Indicates which fields in\n                the provided 'item' to update. If not\n                set, will by default update all fields.\n\n                This corresponds to the ``update_mask`` field\n                on the ``request`` instance; if ``request`` is provided, this\n",
                      "markdown": "`            update_mask (google.protobuf.field_mask_pb2.FieldMask):\n                Optional. Indicates which fields in\n                the provided 'item' to update. If not\n                set, will by default update all fields.\n\n                This corresponds to the ``update_mask`` field\n                on the ``request`` instance; if ``request`` is provided, this\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 340,
                  "startColumn": 33,
                  "endLine": 340,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                    "rendered": {
                      "text": "        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n",
                      "markdown": "`        endpoint; otherwise if client cert source exists, use the default mTLS endpoint, otherwise\n        use the default API endpoint.\n\n        More details can be found at https://google.aip.dev/auth/4114.\n\n        Args:\n            client_options (google.api_core.client_options.ClientOptions): Custom options for the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 1413,
                  "startColumn": 50,
                  "endLine": 1413,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if errors_config is not None:\n                request.errors_config = errors_config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.import_catalog_items]\n\n",
                    "rendered": {
                      "text": "            if errors_config is not None:\n                request.errors_config = errors_config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.import_catalog_items]\n\n",
                      "markdown": "`            if errors_config is not None:\n                request.errors_config = errors_config\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.import_catalog_items]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 1374,
                  "startColumn": 32,
                  "endLine": 1374,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 1374,
                  "startColumn": 11,
                  "endLine": 1374,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 1311,
                  "startColumn": 78,
                  "endLine": 1312,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 1264,
                  "startColumn": 50,
                  "endLine": 1264,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_catalog_item]\n\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_catalog_item]\n\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.delete_catalog_item]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 1241,
                  "startColumn": 32,
                  "endLine": 1241,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 1241,
                  "startColumn": 11,
                  "endLine": 1241,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 1211,
                  "startColumn": 78,
                  "endLine": 1212,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 1170,
                  "startColumn": 50,
                  "endLine": 1170,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.update_catalog_item]\n\n",
                    "rendered": {
                      "text": "            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.update_catalog_item]\n\n",
                      "markdown": "`            if update_mask is not None:\n                request.update_mask = update_mask\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.update_catalog_item]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 1137,
                  "startColumn": 32,
                  "endLine": 1137,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 1137,
                  "startColumn": 11,
                  "endLine": 1137,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 1083,
                  "startColumn": 78,
                  "endLine": 1084,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 1028,
                  "startColumn": 50,
                  "endLine": 1028,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if filter is not None:\n                request.filter = filter\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_catalog_items]\n\n",
                    "rendered": {
                      "text": "            if filter is not None:\n                request.filter = filter\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_catalog_items]\n\n",
                      "markdown": "`            if filter is not None:\n                request.filter = filter\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.list_catalog_items]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 994,
                  "startColumn": 32,
                  "endLine": 994,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 994,
                  "startColumn": 11,
                  "endLine": 994,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 953,
                  "startColumn": 78,
                  "endLine": 954,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 911,
                  "startColumn": 50,
                  "endLine": 911,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_catalog_item]\n\n",
                    "rendered": {
                      "text": "            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_catalog_item]\n\n",
                      "markdown": "`            if name is not None:\n                request.name = name\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.get_catalog_item]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 882,
                  "startColumn": 32,
                  "endLine": 882,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 882,
                  "startColumn": 11,
                  "endLine": 882,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 849,
                  "startColumn": 78,
                  "endLine": 850,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 808,
                  "startColumn": 50,
                  "endLine": 808,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            if catalog_item is not None:\n                request.catalog_item = catalog_item\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_catalog_item]\n\n",
                    "rendered": {
                      "text": "            if catalog_item is not None:\n                request.catalog_item = catalog_item\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_catalog_item]\n\n",
                      "markdown": "`            if catalog_item is not None:\n                request.catalog_item = catalog_item\n\n        # Wrap the RPC method; this adds retry and timeout information,\n        # and friendly error handling.\n        rpc = self._transport._wrapped_methods[self._transport.create_catalog_item]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 777,
                  "startColumn": 32,
                  "endLine": 777,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 777,
                  "startColumn": 11,
                  "endLine": 777,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                    "rendered": {
                      "text": "                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n",
                      "markdown": "`                should not be set.\n            retry (google.api_core.retry.Retry): Designation of what errors, if any,\n                should be retried.\n            timeout (float): The timeout for this request.\n            metadata (Sequence[Tuple[str, str]]): Strings which should be\n                sent along with the request as metadata.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 733,
                  "startColumn": 78,
                  "endLine": 734,
                  "snippet": {
                    "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                    "rendered": {
                      "text": "            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n",
                      "markdown": "`            # code template only.\n            # It will require modifications to work:\n            # - It may require correct/in-range values for request initialization.\n            # - It may require specifying regional endpoints when creating the service\n            #   client as shown in:\n            #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n            from google.cloud import recommendationengine_v1beta1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 574,
                  "startColumn": 35,
                  "endLine": 574,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        client_options: Optional[Union[client_options_lib.ClientOptions, dict]] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the catalog service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                    "rendered": {
                      "text": "        client_options: Optional[Union[client_options_lib.ClientOptions, dict]] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the catalog service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n",
                      "markdown": "`        client_options: Optional[Union[client_options_lib.ClientOptions, dict]] = None,\n        client_info: gapic_v1.client_info.ClientInfo = DEFAULT_CLIENT_INFO,\n    ) -> None:\n        \"\"\"Instantiates the catalog service client.\n\n        Args:\n            credentials (Optional[google.auth.credentials.Credentials]): The\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 43,
                  "endLine": 173,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                    "rendered": {
                      "text": "            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n",
                      "markdown": "`            file.\n\n        Args:\n            filename (str): The path to the service account private key json\n                file.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 28,
                  "endLine": 156,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                    "rendered": {
                      "text": "            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n",
                      "markdown": "`            info.\n\n        Args:\n            info (dict): The service account private key info.\n            args: Additional arguments to pass to the constructor.\n            kwargs: Additional arguments to pass to the constructor.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine_v1beta1/services/catalog_service"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-google-cloud-recommendations-ai-0.10.12-r0.apk/py3-google-cloud-recommendations-ai-0.10.12-r0/usr/lib/python3.12/site-packages/google/cloud/recommendationengine/gapic_version.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}