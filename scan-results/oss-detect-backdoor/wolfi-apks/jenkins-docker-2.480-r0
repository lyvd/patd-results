{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/.PKGINFO"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 8,
                  "endLine": 13,
                  "snippet": {
                    "text": "commit = 83a1ee80d0c3fe41977c187fc4b7d9a5e43b4028\nbuilddate = 1728407041\nlicense = MIT\ndepend = bash\ndepend = cmd:bash\ndepend = coreutils\ndepend = curl\ndepend = git\n",
                    "rendered": {
                      "text": "commit = 83a1ee80d0c3fe41977c187fc4b7d9a5e43b4028\nbuilddate = 1728407041\nlicense = MIT\ndepend = bash\ndepend = cmd:bash\ndepend = coreutils\ndepend = curl\ndepend = git\n",
                      "markdown": "`commit = 83a1ee80d0c3fe41977c187fc4b7d9a5e43b4028\nbuilddate = 1728407041\nlicense = MIT\ndepend = bash\ndepend = cmd:bash\ndepend = coreutils\ndepend = curl\ndepend = git\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/.PKGINFO"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 8,
                  "endLine": 17,
                  "snippet": {
                    "text": "depend = cmd:bash\ndepend = coreutils\ndepend = curl\ndepend = git\ndepend = git-lfs\ndepend = gnupg\ndepend = jenkins-plugin-manager-compat\ndepend = openssh-client\n",
                    "rendered": {
                      "text": "depend = cmd:bash\ndepend = coreutils\ndepend = curl\ndepend = git\ndepend = git-lfs\ndepend = gnupg\ndepend = jenkins-plugin-manager-compat\ndepend = openssh-client\n",
                      "markdown": "`depend = cmd:bash\ndepend = coreutils\ndepend = curl\ndepend = git\ndepend = git-lfs\ndepend = gnupg\ndepend = jenkins-plugin-manager-compat\ndepend = openssh-client\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/.PKGINFO"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 16,
                  "snippet": {
                    "text": "depend = bash\ndepend = cmd:bash\ndepend = coreutils\ndepend = curl\ndepend = git\ndepend = git-lfs\ndepend = gnupg\ndepend = jenkins-plugin-manager-compat\n",
                    "rendered": {
                      "text": "depend = bash\ndepend = cmd:bash\ndepend = coreutils\ndepend = curl\ndepend = git\ndepend = git-lfs\ndepend = gnupg\ndepend = jenkins-plugin-manager-compat\n",
                      "markdown": "`depend = bash\ndepend = cmd:bash\ndepend = coreutils\ndepend = curl\ndepend = git\ndepend = git-lfs\ndepend = gnupg\ndepend = jenkins-plugin-manager-compat\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/.PKGINFO"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 8,
                  "endLine": 13,
                  "snippet": {
                    "text": "commit = 83a1ee80d0c3fe41977c187fc4b7d9a5e43b4028\nbuilddate = 1728407041\nlicense = MIT\ndepend = bash\ndepend = cmd:bash\ndepend = coreutils\ndepend = curl\ndepend = git\n",
                    "rendered": {
                      "text": "commit = 83a1ee80d0c3fe41977c187fc4b7d9a5e43b4028\nbuilddate = 1728407041\nlicense = MIT\ndepend = bash\ndepend = cmd:bash\ndepend = coreutils\ndepend = curl\ndepend = git\n",
                      "markdown": "`commit = 83a1ee80d0c3fe41977c187fc4b7d9a5e43b4028\nbuilddate = 1728407041\nlicense = MIT\ndepend = bash\ndepend = cmd:bash\ndepend = coreutils\ndepend = curl\ndepend = git\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/.PKGINFO"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 9,
                  "endLine": 7,
                  "endColumn": 17,
                  "snippet": {
                    "text": "arch = x86_64\nsize = 47636\norigin = jenkins-docker\npkgdesc = Docker compatbility scripts and tooling for Jenkins\nurl = \ncommit = 83a1ee80d0c3fe41977c187fc4b7d9a5e43b4028\nbuilddate = 1728407041\n",
                    "rendered": {
                      "text": "arch = x86_64\nsize = 47636\norigin = jenkins-docker\npkgdesc = Docker compatbility scripts and tooling for Jenkins\nurl = \ncommit = 83a1ee80d0c3fe41977c187fc4b7d9a5e43b4028\nbuilddate = 1728407041\n",
                      "markdown": "`arch = x86_64\nsize = 47636\norigin = jenkins-docker\npkgdesc = Docker compatbility scripts and tooling for Jenkins\nurl = \ncommit = 83a1ee80d0c3fe41977c187fc4b7d9a5e43b4028\nbuilddate = 1728407041\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/bin/jenkins-plugin-cli"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 28,
                  "endLine": 7,
                  "endColumn": 35,
                  "snippet": {
                    "text": "java_opts_array=()\nwhile IFS= read -r -d '' item; do\n\tjava_opts_array+=( \"$item\" )\ndone < <([[ $JAVA_OPTS ]] && xargs printf '%s\\0' <<<\"$JAVA_OPTS\")\n\nexec java \"${java_opts_array[@]}\" -jar /opt/jenkins-plugin-manager.jar \"$@\"\n",
                    "rendered": {
                      "text": "java_opts_array=()\nwhile IFS= read -r -d '' item; do\n\tjava_opts_array+=( \"$item\" )\ndone < <([[ $JAVA_OPTS ]] && xargs printf '%s\\0' <<<\"$JAVA_OPTS\")\n\nexec java \"${java_opts_array[@]}\" -jar /opt/jenkins-plugin-manager.jar \"$@\"\n",
                      "markdown": "`java_opts_array=()\nwhile IFS= read -r -d '' item; do\n\tjava_opts_array+=( \"$item\" )\ndone < <([[ $JAVA_OPTS ]] && xargs printf '%s\\0' <<<\"$JAVA_OPTS\")\n\nexec java \"${java_opts_array[@]}\" -jar /opt/jenkins-plugin-manager.jar \"$@\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 31,
                  "endLine": 14,
                  "endColumn": 35,
                  "snippet": {
                    "text": "touch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n# if `docker run` first argument start with `--` the user is passing jenkins launcher arguments\nif [[ $# -lt 1 ]] || [[ \"$1\" == \"--\"* ]]; then\n",
                    "rendered": {
                      "text": "touch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n# if `docker run` first argument start with `--` the user is passing jenkins launcher arguments\nif [[ $# -lt 1 ]] || [[ \"$1\" == \"--\"* ]]; then\n",
                      "markdown": "`touch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n# if `docker run` first argument start with `--` the user is passing jenkins launcher arguments\nif [[ $# -lt 1 ]] || [[ \"$1\" == \"--\"* ]]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 44,
                  "endLine": 13,
                  "endColumn": 50,
                  "snippet": {
                    "text": "fi\ntouch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n# if `docker run` first argument start with `--` the user is passing jenkins launcher arguments\n",
                    "rendered": {
                      "text": "fi\ntouch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n# if `docker run` first argument start with `--` the user is passing jenkins launcher arguments\n",
                      "markdown": "`fi\ntouch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n# if `docker run` first argument start with `--` the user is passing jenkins launcher arguments\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 23,
                  "endLine": 12,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        echo \"INSTALL WARNING: User: ${USER} missing rw permissions on JENKINS_HOME: ${JENKINS_HOME}\"\nfi\ntouch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n",
                    "rendered": {
                      "text": "        echo \"INSTALL WARNING: User: ${USER} missing rw permissions on JENKINS_HOME: ${JENKINS_HOME}\"\nfi\ntouch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n",
                      "markdown": "`        echo \"INSTALL WARNING: User: ${USER} missing rw permissions on JENKINS_HOME: ${JENKINS_HOME}\"\nfi\ntouch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins.sh"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 33,
                  "endLine": 48,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  jenkins_opts_array=( )\n  while IFS= read -r -d '' item; do\n    jenkins_opts_array+=( \"$item\" )\n  done < <([[ $JENKINS_OPTS ]] && xargs printf '%s\\0' <<<\"$JENKINS_OPTS\")\n\n  exec java -Duser.home=\"$JENKINS_HOME\" \"${java_opts_array[@]}\" -jar \"${JENKINS_WAR}\" \"${jenkins_opts_array[@]}\" \"$@\"\nfi\n",
                    "rendered": {
                      "text": "  jenkins_opts_array=( )\n  while IFS= read -r -d '' item; do\n    jenkins_opts_array+=( \"$item\" )\n  done < <([[ $JENKINS_OPTS ]] && xargs printf '%s\\0' <<<\"$JENKINS_OPTS\")\n\n  exec java -Duser.home=\"$JENKINS_HOME\" \"${java_opts_array[@]}\" -jar \"${JENKINS_WAR}\" \"${jenkins_opts_array[@]}\" \"$@\"\nfi\n",
                      "markdown": "`  jenkins_opts_array=( )\n  while IFS= read -r -d '' item; do\n    jenkins_opts_array+=( \"$item\" )\n  done < <([[ $JENKINS_OPTS ]] && xargs printf '%s\\0' <<<\"$JENKINS_OPTS\")\n\n  exec java -Duser.home=\"$JENKINS_HOME\" \"${java_opts_array[@]}\" -jar \"${JENKINS_WAR}\" \"${jenkins_opts_array[@]}\" \"$@\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins.sh"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 40,
                  "endLine": 26,
                  "endColumn": 47,
                  "snippet": {
                    "text": "  java_opts_array=()\n  while IFS= read -r -d '' item; do\n    java_opts_array+=( \"$item\" )\n  done < <([[ $effective_java_opts ]] && xargs printf '%s\\0' <<<\"$effective_java_opts\")\n\n  readonly agent_port_property='jenkins.model.Jenkins.slaveAgentPort'\n  if [ -n \"${JENKINS_SLAVE_AGENT_PORT:-}\" ] && [[ \"${effective_java_opts:-}\" != *\"${agent_port_property}\"* ]]; then\n",
                    "rendered": {
                      "text": "  java_opts_array=()\n  while IFS= read -r -d '' item; do\n    java_opts_array+=( \"$item\" )\n  done < <([[ $effective_java_opts ]] && xargs printf '%s\\0' <<<\"$effective_java_opts\")\n\n  readonly agent_port_property='jenkins.model.Jenkins.slaveAgentPort'\n  if [ -n \"${JENKINS_SLAVE_AGENT_PORT:-}\" ] && [[ \"${effective_java_opts:-}\" != *\"${agent_port_property}\"* ]]; then\n",
                      "markdown": "`  java_opts_array=()\n  while IFS= read -r -d '' item; do\n    java_opts_array+=( \"$item\" )\n  done < <([[ $effective_java_opts ]] && xargs printf '%s\\0' <<<\"$effective_java_opts\")\n\n  readonly agent_port_property='jenkins.model.Jenkins.slaveAgentPort'\n  if [ -n \"${JENKINS_SLAVE_AGENT_PORT:-}\" ] && [[ \"${effective_java_opts:-}\" != *\"${agent_port_property}\"* ]]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 44,
                  "endLine": 13,
                  "endColumn": 50,
                  "snippet": {
                    "text": "fi\ntouch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n# if `docker run` first argument start with `--` the user is passing jenkins launcher arguments\n",
                    "rendered": {
                      "text": "fi\ntouch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n# if `docker run` first argument start with `--` the user is passing jenkins launcher arguments\n",
                      "markdown": "`fi\ntouch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n# if `docker run` first argument start with `--` the user is passing jenkins launcher arguments\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 65,
                  "endLine": 13,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n        echo \"INSTALL WARNING: User: ${USER} missing rw permissions on JENKINS_HOME: ${JENKINS_HOME}\"\nfi\ntouch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n# if `docker run` first argument start with `--` the user is passing jenkins launcher arg",
                    "rendered": {
                      "text": "\n        echo \"INSTALL WARNING: User: ${USER} missing rw permissions on JENKINS_HOME: ${JENKINS_HOME}\"\nfi\ntouch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n# if `docker run` first argument start with `--` the user is passing jenkins launcher arg",
                      "markdown": "`\n        echo \"INSTALL WARNING: User: ${USER} missing rw permissions on JENKINS_HOME: ${JENKINS_HOME}\"\nfi\ntouch \"${COPY_REFERENCE_FILE_LOG}\" || { echo \"Can not write to ${COPY_REFERENCE_FILE_LOG}. Wrong volume permissions?\"; exit 1; }\necho \"--- Copying files at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\nfind \"${REF}\" \\( -type f -o -type l \\) -exec bash -c '. /usr/local/bin/jenkins-support; for arg; do copy_reference_file \"$arg\"; done' _ {} +\necho \"--- Copied files finished at $(date)\" >> \"$COPY_REFERENCE_FILE_LOG\"\n\n# if `docker run` first argument start with `--` the user is passing jenkins launcher arg`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 15,
                  "endLine": 174,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    sleep \"$timeout\"\n    success_attempt=0\n    attempt=$(( attempt + 1 ))\n    timeout=$(( timeout ))\n  done\n\n  if [[ $exitCode != 0 ]]\n",
                    "rendered": {
                      "text": "    sleep \"$timeout\"\n    success_attempt=0\n    attempt=$(( attempt + 1 ))\n    timeout=$(( timeout ))\n  done\n\n  if [[ $exitCode != 0 ]]\n",
                      "markdown": "`    sleep \"$timeout\"\n    success_attempt=0\n    attempt=$(( attempt + 1 ))\n    timeout=$(( timeout ))\n  done\n\n  if [[ $exitCode != 0 ]]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 21,
                  "endLine": 140,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# Retries a command a configurable number of times with backoff.\n#\n# The retry count is given by ATTEMPTS (default 60), the initial backoff\n# timeout is given by TIMEOUT in seconds (default 1.)\n#\nfunction retry_command() {\n  local max_attempts=${ATTEMPTS-3}\n",
                    "rendered": {
                      "text": "# Retries a command a configurable number of times with backoff.\n#\n# The retry count is given by ATTEMPTS (default 60), the initial backoff\n# timeout is given by TIMEOUT in seconds (default 1.)\n#\nfunction retry_command() {\n  local max_attempts=${ATTEMPTS-3}\n",
                      "markdown": "`# Retries a command a configurable number of times with backoff.\n#\n# The retry count is given by ATTEMPTS (default 60), the initial backoff\n# timeout is given by TIMEOUT in seconds (default 1.)\n#\nfunction retry_command() {\n  local max_attempts=${ATTEMPTS-3}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 1,
                  "endLine": 140,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# Retries a command a configurable number of times with backoff.\n#\n# The retry count is given by ATTEMPTS (default 60), the initial backoff\n# timeout is given by TIMEOUT in seconds (default 1.)\n#\nfunction retry_command() {\n  local max_attempts=${ATTEMPTS-3}\n",
                    "rendered": {
                      "text": "# Retries a command a configurable number of times with backoff.\n#\n# The retry count is given by ATTEMPTS (default 60), the initial backoff\n# timeout is given by TIMEOUT in seconds (default 1.)\n#\nfunction retry_command() {\n  local max_attempts=${ATTEMPTS-3}\n",
                      "markdown": "`# Retries a command a configurable number of times with backoff.\n#\n# The retry count is given by ATTEMPTS (default 60), the initial backoff\n# timeout is given by TIMEOUT in seconds (default 1.)\n#\nfunction retry_command() {\n  local max_attempts=${ATTEMPTS-3}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 11,
                  "endLine": 123,
                  "endColumn": 15,
                  "snippet": {
                    "text": "            action=\"INSTALLED\"\n            log=true\n            mkdir -p \"$JENKINS_HOME/${dir}\"\n            cp -pr \"$(realpath \"${f}\")\" \"$JENKINS_HOME/${rel}\";\n        else\n            action=\"SKIPPED\"\n        fi\n",
                    "rendered": {
                      "text": "            action=\"INSTALLED\"\n            log=true\n            mkdir -p \"$JENKINS_HOME/${dir}\"\n            cp -pr \"$(realpath \"${f}\")\" \"$JENKINS_HOME/${rel}\";\n        else\n            action=\"SKIPPED\"\n        fi\n",
                      "markdown": "`            action=\"INSTALLED\"\n            log=true\n            mkdir -p \"$JENKINS_HOME/${dir}\"\n            cp -pr \"$(realpath \"${f}\")\" \"$JENKINS_HOME/${rel}\";\n        else\n            action=\"SKIPPED\"\n        fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 11,
                  "endLine": 109,
                  "endColumn": 15,
                  "snippet": {
                    "text": "            action=${action:-\"INSTALLED\"}\n            log=true\n            mkdir -p \"$JENKINS_HOME/${dir}\"\n            cp -pr \"${f}\" \"$JENKINS_HOME/${rel}\";\n            # pin plugins on initial copy\n            touch \"$JENKINS_HOME/${rel}.pinned\"\n            echo \"$image_version\" > \"$JENKINS_HOME/${version_marker}\"\n",
                    "rendered": {
                      "text": "            action=${action:-\"INSTALLED\"}\n            log=true\n            mkdir -p \"$JENKINS_HOME/${dir}\"\n            cp -pr \"${f}\" \"$JENKINS_HOME/${rel}\";\n            # pin plugins on initial copy\n            touch \"$JENKINS_HOME/${rel}.pinned\"\n            echo \"$image_version\" > \"$JENKINS_HOME/${version_marker}\"\n",
                      "markdown": "`            action=${action:-\"INSTALLED\"}\n            log=true\n            mkdir -p \"$JENKINS_HOME/${dir}\"\n            cp -pr \"${f}\" \"$JENKINS_HOME/${rel}\";\n            # pin plugins on initial copy\n            touch \"$JENKINS_HOME/${rel}.pinned\"\n            echo \"$image_version\" > \"$JENKINS_HOME/${version_marker}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 41,
                  "endLine": 91,
                  "snippet": {
                    "text": "                if [[ \"$image_version\" == \"$container_version\" ]]; then\n                    action=\"SKIPPED\"\n                    reason=\"Version from image is the same as the installed version $image_version (no marker found)\"\n                    # Add marker for next time\n                    echo \"$image_version\" > \"$JENKINS_HOME/${version_marker}\"\n                else\n                    if versionLT \"$image_version\" \"$container_version\"; then\n                        action=\"SKIPPED\"\n",
                    "rendered": {
                      "text": "                if [[ \"$image_version\" == \"$container_version\" ]]; then\n                    action=\"SKIPPED\"\n                    reason=\"Version from image is the same as the installed version $image_version (no marker found)\"\n                    # Add marker for next time\n                    echo \"$image_version\" > \"$JENKINS_HOME/${version_marker}\"\n                else\n                    if versionLT \"$image_version\" \"$container_version\"; then\n                        action=\"SKIPPED\"\n",
                      "markdown": "`                if [[ \"$image_version\" == \"$container_version\" ]]; then\n                    action=\"SKIPPED\"\n                    reason=\"Version from image is the same as the installed version $image_version (no marker found)\"\n                    # Add marker for next time\n                    echo \"$image_version\" > \"$JENKINS_HOME/${version_marker}\"\n                else\n                    if versionLT \"$image_version\" \"$container_version\"; then\n                        action=\"SKIPPED\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 98,
                  "endLine": 33,
                  "endColumn": 103,
                  "snippet": {
                    "text": "# returns a plugin version from a plugin archive\nget_plugin_version() {\n    local archive; archive=$1\n    local version; version=$(unzip -p \"$archive\" META-INF/MANIFEST.MF | grep \"^Plugin-Version: \" | sed -e 's#^Plugin-Version: ##')\n    version=${version%%[[:space:]]}\n    echo \"$version\"\n}\n",
                    "rendered": {
                      "text": "# returns a plugin version from a plugin archive\nget_plugin_version() {\n    local archive; archive=$1\n    local version; version=$(unzip -p \"$archive\" META-INF/MANIFEST.MF | grep \"^Plugin-Version: \" | sed -e 's#^Plugin-Version: ##')\n    version=${version%%[[:space:]]}\n    echo \"$version\"\n}\n",
                      "markdown": "`# returns a plugin version from a plugin archive\nget_plugin_version() {\n    local archive; archive=$1\n    local version; version=$(unzip -p \"$archive\" META-INF/MANIFEST.MF | grep \"^Plugin-Version: \" | sed -e 's#^Plugin-Version: ##')\n    version=${version%%[[:space:]]}\n    echo \"$version\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 71,
                  "endLine": 33,
                  "endColumn": 77,
                  "snippet": {
                    "text": "# returns a plugin version from a plugin archive\nget_plugin_version() {\n    local archive; archive=$1\n    local version; version=$(unzip -p \"$archive\" META-INF/MANIFEST.MF | grep \"^Plugin-Version: \" | sed -e 's#^Plugin-Version: ##')\n    version=${version%%[[:space:]]}\n    echo \"$version\"\n}\n",
                    "rendered": {
                      "text": "# returns a plugin version from a plugin archive\nget_plugin_version() {\n    local archive; archive=$1\n    local version; version=$(unzip -p \"$archive\" META-INF/MANIFEST.MF | grep \"^Plugin-Version: \" | sed -e 's#^Plugin-Version: ##')\n    version=${version%%[[:space:]]}\n    echo \"$version\"\n}\n",
                      "markdown": "`# returns a plugin version from a plugin archive\nget_plugin_version() {\n    local archive; archive=$1\n    local version; version=$(unzip -p \"$archive\" META-INF/MANIFEST.MF | grep \"^Plugin-Version: \" | sed -e 's#^Plugin-Version: ##')\n    version=${version%%[[:space:]]}\n    echo \"$version\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 52,
                  "endLine": 26,
                  "endColumn": 58,
                  "snippet": {
                    "text": "            fi\n        fi\n    else\n        [  \"$v1\" = \"$(echo -e \"$v1\\n$v2\" | sort -V | head -n1)\" ]\n    fi\n}\n\n",
                    "rendered": {
                      "text": "            fi\n        fi\n    else\n        [  \"$v1\" = \"$(echo -e \"$v1\\n$v2\" | sort -V | head -n1)\" ]\n    fi\n}\n\n",
                      "markdown": "`            fi\n        fi\n    else\n        [  \"$v1\" = \"$(echo -e \"$v1\\n$v2\" | sort -V | head -n1)\" ]\n    fi\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 42,
                  "endLine": 26,
                  "endColumn": 48,
                  "snippet": {
                    "text": "            fi\n        fi\n    else\n        [  \"$v1\" = \"$(echo -e \"$v1\\n$v2\" | sort -V | head -n1)\" ]\n    fi\n}\n\n",
                    "rendered": {
                      "text": "            fi\n        fi\n    else\n        [  \"$v1\" = \"$(echo -e \"$v1\\n$v2\" | sort -V | head -n1)\" ]\n    fi\n}\n\n",
                      "markdown": "`            fi\n        fi\n    else\n        [  \"$v1\" = \"$(echo -e \"$v1\\n$v2\" | sort -V | head -n1)\" ]\n    fi\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 64,
                  "endLine": 21,
                  "endColumn": 70,
                  "snippet": {
                    "text": "                if [ -z \"$q2\" ]; then\n                    return 0\n                else\n                    [  \"$q1\" = \"$(echo -e \"$q1\\n$q2\" | sort -V | head -n1)\" ]\n                fi\n            fi\n        fi\n",
                    "rendered": {
                      "text": "                if [ -z \"$q2\" ]; then\n                    return 0\n                else\n                    [  \"$q1\" = \"$(echo -e \"$q1\\n$q2\" | sort -V | head -n1)\" ]\n                fi\n            fi\n        fi\n",
                      "markdown": "`                if [ -z \"$q2\" ]; then\n                    return 0\n                else\n                    [  \"$q1\" = \"$(echo -e \"$q1\\n$q2\" | sort -V | head -n1)\" ]\n                fi\n            fi\n        fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 54,
                  "endLine": 21,
                  "endColumn": 60,
                  "snippet": {
                    "text": "                if [ -z \"$q2\" ]; then\n                    return 0\n                else\n                    [  \"$q1\" = \"$(echo -e \"$q1\\n$q2\" | sort -V | head -n1)\" ]\n                fi\n            fi\n        fi\n",
                    "rendered": {
                      "text": "                if [ -z \"$q2\" ]; then\n                    return 0\n                else\n                    [  \"$q1\" = \"$(echo -e \"$q1\\n$q2\" | sort -V | head -n1)\" ]\n                fi\n            fi\n        fi\n",
                      "markdown": "`                if [ -z \"$q2\" ]; then\n                    return 0\n                else\n                    [  \"$q1\" = \"$(echo -e \"$q1\\n$q2\" | sort -V | head -n1)\" ]\n                fi\n            fi\n        fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 30,
                  "endLine": 10,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    local v1; v1=$(echo \"$1\" | cut -d '-' -f 1 )\n    local q1; q1=$(echo \"$1\" | cut -s -d '-' -f 2- )\n    local v2; v2=$(echo \"$2\" | cut -d '-' -f 1 )\n    local q2; q2=$(echo \"$2\" | cut -s -d '-' -f 2- )\n    if [ \"$v1\" = \"$v2\" ]; then\n        if [ \"$q1\" = \"$q2\" ]; then\n            return 1\n",
                    "rendered": {
                      "text": "    local v1; v1=$(echo \"$1\" | cut -d '-' -f 1 )\n    local q1; q1=$(echo \"$1\" | cut -s -d '-' -f 2- )\n    local v2; v2=$(echo \"$2\" | cut -d '-' -f 1 )\n    local q2; q2=$(echo \"$2\" | cut -s -d '-' -f 2- )\n    if [ \"$v1\" = \"$v2\" ]; then\n        if [ \"$q1\" = \"$q2\" ]; then\n            return 1\n",
                      "markdown": "`    local v1; v1=$(echo \"$1\" | cut -d '-' -f 1 )\n    local q1; q1=$(echo \"$1\" | cut -s -d '-' -f 2- )\n    local v2; v2=$(echo \"$2\" | cut -d '-' -f 1 )\n    local q2; q2=$(echo \"$2\" | cut -s -d '-' -f 2- )\n    if [ \"$v1\" = \"$v2\" ]; then\n        if [ \"$q1\" = \"$q2\" ]; then\n            return 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 35,
                  "snippet": {
                    "text": "versionLT() {\n    local v1; v1=$(echo \"$1\" | cut -d '-' -f 1 )\n    local q1; q1=$(echo \"$1\" | cut -s -d '-' -f 2- )\n    local v2; v2=$(echo \"$2\" | cut -d '-' -f 1 )\n    local q2; q2=$(echo \"$2\" | cut -s -d '-' -f 2- )\n    if [ \"$v1\" = \"$v2\" ]; then\n        if [ \"$q1\" = \"$q2\" ]; then\n",
                    "rendered": {
                      "text": "versionLT() {\n    local v1; v1=$(echo \"$1\" | cut -d '-' -f 1 )\n    local q1; q1=$(echo \"$1\" | cut -s -d '-' -f 2- )\n    local v2; v2=$(echo \"$2\" | cut -d '-' -f 1 )\n    local q2; q2=$(echo \"$2\" | cut -s -d '-' -f 2- )\n    if [ \"$v1\" = \"$v2\" ]; then\n        if [ \"$q1\" = \"$q2\" ]; then\n",
                      "markdown": "`versionLT() {\n    local v1; v1=$(echo \"$1\" | cut -d '-' -f 1 )\n    local q1; q1=$(echo \"$1\" | cut -s -d '-' -f 2- )\n    local v2; v2=$(echo \"$2\" | cut -d '-' -f 1 )\n    local q2; q2=$(echo \"$2\" | cut -s -d '-' -f 2- )\n    if [ \"$v1\" = \"$v2\" ]; then\n        if [ \"$q1\" = \"$q2\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 30,
                  "endLine": 8,
                  "endColumn": 35,
                  "snippet": {
                    "text": "# compare if version1 < version2\nversionLT() {\n    local v1; v1=$(echo \"$1\" | cut -d '-' -f 1 )\n    local q1; q1=$(echo \"$1\" | cut -s -d '-' -f 2- )\n    local v2; v2=$(echo \"$2\" | cut -d '-' -f 1 )\n    local q2; q2=$(echo \"$2\" | cut -s -d '-' -f 2- )\n    if [ \"$v1\" = \"$v2\" ]; then\n",
                    "rendered": {
                      "text": "# compare if version1 < version2\nversionLT() {\n    local v1; v1=$(echo \"$1\" | cut -d '-' -f 1 )\n    local q1; q1=$(echo \"$1\" | cut -s -d '-' -f 2- )\n    local v2; v2=$(echo \"$2\" | cut -d '-' -f 1 )\n    local q2; q2=$(echo \"$2\" | cut -s -d '-' -f 2- )\n    if [ \"$v1\" = \"$v2\" ]; then\n",
                      "markdown": "`# compare if version1 < version2\nversionLT() {\n    local v1; v1=$(echo \"$1\" | cut -d '-' -f 1 )\n    local q1; q1=$(echo \"$1\" | cut -s -d '-' -f 2- )\n    local v2; v2=$(echo \"$2\" | cut -d '-' -f 1 )\n    local q2; q2=$(echo \"$2\" | cut -s -d '-' -f 2- )\n    if [ \"$v1\" = \"$v2\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/jenkins-docker-2.480-r0.apk/jenkins-docker-2.480-r0/usr/local/bin/jenkins-support"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 30,
                  "endLine": 7,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n# compare if version1 < version2\nversionLT() {\n    local v1; v1=$(echo \"$1\" | cut -d '-' -f 1 )\n    local q1; q1=$(echo \"$1\" | cut -s -d '-' -f 2- )\n    local v2; v2=$(echo \"$2\" | cut -d '-' -f 1 )\n    local q2; q2=$(echo \"$2\" | cut -s -d '-' -f 2- )\n",
                    "rendered": {
                      "text": "\n# compare if version1 < version2\nversionLT() {\n    local v1; v1=$(echo \"$1\" | cut -d '-' -f 1 )\n    local q1; q1=$(echo \"$1\" | cut -s -d '-' -f 2- )\n    local v2; v2=$(echo \"$2\" | cut -d '-' -f 1 )\n    local q2; q2=$(echo \"$2\" | cut -s -d '-' -f 2- )\n",
                      "markdown": "`\n# compare if version1 < version2\nversionLT() {\n    local v1; v1=$(echo \"$1\" | cut -d '-' -f 1 )\n    local q1; q1=$(echo \"$1\" | cut -s -d '-' -f 2- )\n    local v2; v2=$(echo \"$2\" | cut -d '-' -f 1 )\n    local q2; q2=$(echo \"$2\" | cut -s -d '-' -f 2- )\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}