{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 57,
                  "endLine": 101,
                  "endColumn": 65,
                  "snippet": {
                    "text": "m Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep+ -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ugrep+ -s U",
                    "rendered": {
                      "text": "m Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep+ -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ugrep+ -s U",
                      "markdown": "`m Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep+ -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ugrep+ -s U`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 121,
                  "endLine": 77,
                  "endColumn": 125,
                  "snippet": {
                    "text": "-l mmap -d 'Use memory maps to search files'\ncomplete -c ugrep+ -s N -r -l neg-regexp -d 'Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern'\ncomplete -c ugrep+ -s n -l line-number -d 'Each output line is preceded by its relative line number in the file, starting at line 1'\ncomplete -c ugrep+ -l not -d 'Specifies that PATTERN should not match'\ncomplete -c ugrep+ -s O -r -l file-extension -d 'Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each'\ncomplete -c ugrep+ -s o -l only-matching -d '",
                    "rendered": {
                      "text": "-l mmap -d 'Use memory maps to search files'\ncomplete -c ugrep+ -s N -r -l neg-regexp -d 'Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern'\ncomplete -c ugrep+ -s n -l line-number -d 'Each output line is preceded by its relative line number in the file, starting at line 1'\ncomplete -c ugrep+ -l not -d 'Specifies that PATTERN should not match'\ncomplete -c ugrep+ -s O -r -l file-extension -d 'Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each'\ncomplete -c ugrep+ -s o -l only-matching -d '",
                      "markdown": "`-l mmap -d 'Use memory maps to search files'\ncomplete -c ugrep+ -s N -r -l neg-regexp -d 'Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern'\ncomplete -c ugrep+ -s n -l line-number -d 'Each output line is preceded by its relative line number in the file, starting at line 1'\ncomplete -c ugrep+ -l not -d 'Specifies that PATTERN should not match'\ncomplete -c ugrep+ -s O -r -l file-extension -d 'Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each'\ncomplete -c ugrep+ -s o -l only-matching -d '`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 144,
                  "endLine": 65,
                  "endColumn": 148,
                  "snippet": {
                    "text": "'Output file matches in JSON'\ncomplete -c ugrep+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep+ -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to standard output'\ncomplete -c ugrep+ -s l -l files-with-matches -d 'Only the names of files containing selected lines are written to standard output'\ncomplete -c ugrep+ -l",
                    "rendered": {
                      "text": "'Output file matches in JSON'\ncomplete -c ugrep+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep+ -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to standard output'\ncomplete -c ugrep+ -s l -l files-with-matches -d 'Only the names of files containing selected lines are written to standard output'\ncomplete -c ugrep+ -l",
                      "markdown": "`'Output file matches in JSON'\ncomplete -c ugrep+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep+ -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to standard output'\ncomplete -c ugrep+ -s l -l files-with-matches -d 'Only the names of files containing selected lines are written to standard output'\ncomplete -c ugrep+ -l`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 97,
                  "endLine": 64,
                  "endColumn": 101,
                  "snippet": {
                    "text": "lete -c ugrep+ -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ugrep+ -l json -d 'Output file matches in JSON'\ncomplete -c ugrep+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep+ -s L -l files-without-match -d 'Only the names of files not containing selected lines are written ",
                    "rendered": {
                      "text": "lete -c ugrep+ -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ugrep+ -l json -d 'Output file matches in JSON'\ncomplete -c ugrep+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep+ -s L -l files-without-match -d 'Only the names of files not containing selected lines are written ",
                      "markdown": "`lete -c ugrep+ -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ugrep+ -l json -d 'Output file matches in JSON'\ncomplete -c ugrep+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep+ -s L -l files-without-match -d 'Only the names of files not containing selected lines are written `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 79,
                  "endLine": 64,
                  "endColumn": 83,
                  "snippet": {
                    "text": "search files'\ncomplete -c ugrep+ -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ugrep+ -l json -d 'Output file matches in JSON'\ncomplete -c ugrep+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep+ -s L -l files-without-match -d 'Only the names of files not containing selected ",
                    "rendered": {
                      "text": "search files'\ncomplete -c ugrep+ -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ugrep+ -l json -d 'Output file matches in JSON'\ncomplete -c ugrep+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep+ -s L -l files-without-match -d 'Only the names of files not containing selected ",
                      "markdown": "`search files'\ncomplete -c ugrep+ -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ugrep+ -l json -d 'Output file matches in JSON'\ncomplete -c ugrep+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep+ -s L -l files-without-match -d 'Only the names of files not containing selected `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 57,
                  "endLine": 101,
                  "endColumn": 65,
                  "snippet": {
                    "text": "m Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep+ -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ugrep+ -s U",
                    "rendered": {
                      "text": "m Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep+ -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ugrep+ -s U",
                      "markdown": "`m Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep+ -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ugrep+ -s U`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 548,
                  "endLine": 100,
                  "endColumn": 553,
                  "snippet": {
                    "text": " js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep+ -l tree -s '^'",
                    "rendered": {
                      "text": " js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep+ -l tree -s '^'",
                      "markdown": "` js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep+ -l tree -s '^'`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 434,
                  "endLine": 100,
                  "endColumn": 440,
                  "snippet": {
                    "text": "csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to expand tabs for option",
                    "rendered": {
                      "text": "csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to expand tabs for option",
                      "markdown": "`csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to expand tabs for option`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 414,
                  "endLine": 100,
                  "endColumn": 419,
                  "snippet": {
                    "text": "n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to e",
                    "rendered": {
                      "text": "n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to e",
                      "markdown": "`n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -l tabs -d 'Set the tab size to NUM to e`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 375,
                  "endLine": 100,
                  "endColumn": 380,
                  "snippet": {
                    "text": "oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -",
                    "rendered": {
                      "text": "oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -",
                      "markdown": "`oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep+ -`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 365,
                  "endLine": 100,
                  "endColumn": 371,
                  "snippet": {
                    "text": "p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c",
                    "rendered": {
                      "text": "p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c",
                      "markdown": "`p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 315,
                  "endLine": 100,
                  "endColumn": 321,
                  "snippet": {
                    "text": "ep+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES,",
                    "rendered": {
                      "text": "ep+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES,",
                      "markdown": "`ep+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES,`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 287,
                  "endLine": 100,
                  "endColumn": 292,
                  "snippet": {
                    "text": "atched line'\ncomplete -c ugrep+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only",
                    "rendered": {
                      "text": "atched line'\ncomplete -c ugrep+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only",
                      "markdown": "`atched line'\ncomplete -c ugrep+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 89,
                  "endLine": 100,
                  "endColumn": 94,
                  "snippet": {
                    "text": "rched and the inclusion and exclusion constraints applied'\ncomplete -c ugrep+ -s T -l initial-tab -d 'Add a tab space to separate the file name, line number, column number and byte offset with the matched line'\ncomplete -c ugrep+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr",
                    "rendered": {
                      "text": "rched and the inclusion and exclusion constraints applied'\ncomplete -c ugrep+ -s T -l initial-tab -d 'Add a tab space to separate the file name, line number, column number and byte offset with the matched line'\ncomplete -c ugrep+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr",
                      "markdown": "`rched and the inclusion and exclusion constraints applied'\ncomplete -c ugrep+ -s T -l initial-tab -d 'Add a tab space to separate the file name, line number, column number and byte offset with the matched line'\ncomplete -c ugrep+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 21,
                  "endLine": 97,
                  "endColumn": 27,
                  "snippet": {
                    "text": " configuration FILE to include OPTIONS'\ncomplete -c ugrep+ -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ugrep+ -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ugrep+ -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ugrep+ -l stats -d 'Output statistics on the number of files and directories searched and the inclusion and exclusion const",
                    "rendered": {
                      "text": " configuration FILE to include OPTIONS'\ncomplete -c ugrep+ -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ugrep+ -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ugrep+ -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ugrep+ -l stats -d 'Output statistics on the number of files and directories searched and the inclusion and exclusion const",
                      "markdown": "` configuration FILE to include OPTIONS'\ncomplete -c ugrep+ -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ugrep+ -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ugrep+ -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ugrep+ -l stats -d 'Output statistics on the number of files and directories searched and the inclusion and exclusion const`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 54,
                  "endLine": 96,
                  "endColumn": 62,
                  "snippet": {
                    "text": "omplete -c ugrep+ -l save-config -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ugrep+ -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ugrep+ -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ugrep+ -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ugrep+ -l stats -d 'Output statistics on the number of files and directories searche",
                    "rendered": {
                      "text": "omplete -c ugrep+ -l save-config -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ugrep+ -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ugrep+ -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ugrep+ -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ugrep+ -l stats -d 'Output statistics on the number of files and directories searche",
                      "markdown": "`omplete -c ugrep+ -l save-config -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ugrep+ -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ugrep+ -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ugrep+ -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ugrep+ -l stats -d 'Output statistics on the number of files and directories searche`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep+.fish"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 65,
                  "endLine": 83,
                  "endColumn": 71,
                  "snippet": {
                    "text": "the matching part of a pattern match is output'\ncomplete -c ugrep+ -l only-line-number -d 'Only the line number of a matching line is output'\ncomplete -c ugrep+ -l files -o '%%' -d 'Boolean file matching mode, the opposite of --lines'\ncomplete -c ugrep+ -s P -l perl-regexp -d 'Interpret PATTERN as a Perl regular expression using PCRE2'\ncomplete -c ugrep+ -s p -l no-dereference -d 'If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line'\ncomplete -c ugrep+ -l pager -d 'When output is sent to the terminal, uses COMMAND to page through the outp",
                    "rendered": {
                      "text": "the matching part of a pattern match is output'\ncomplete -c ugrep+ -l only-line-number -d 'Only the line number of a matching line is output'\ncomplete -c ugrep+ -l files -o '%%' -d 'Boolean file matching mode, the opposite of --lines'\ncomplete -c ugrep+ -s P -l perl-regexp -d 'Interpret PATTERN as a Perl regular expression using PCRE2'\ncomplete -c ugrep+ -s p -l no-dereference -d 'If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line'\ncomplete -c ugrep+ -l pager -d 'When output is sent to the terminal, uses COMMAND to page through the outp",
                      "markdown": "`the matching part of a pattern match is output'\ncomplete -c ugrep+ -l only-line-number -d 'Only the line number of a matching line is output'\ncomplete -c ugrep+ -l files -o '%%' -d 'Boolean file matching mode, the opposite of --lines'\ncomplete -c ugrep+ -s P -l perl-regexp -d 'Interpret PATTERN as a Perl regular expression using PCRE2'\ncomplete -c ugrep+ -s p -l no-dereference -d 'If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line'\ncomplete -c ugrep+ -l pager -d 'When output is sent to the terminal, uses COMMAND to page through the outp`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 39,
                  "endLine": 323,
                  "endColumn": 47,
                  "snippet": {
                    "text": "usion constraints applied.\n-T, --initial-tab Add a tab space to separate the file name, line number, column number and byte offset with the matched line.\n-t TYPES, --file-type=TYPES Search only files associated with TYPES, a comma-separated list of file types.\n--tabs[=NUM] Set the tab size to NUM to expand tabs for option -k.\n--tag[=TAG[,END]] Disables colors to mark up matches with TAG.\n--tree, -^ Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match.\n-U, --ascii, --binary Disables Unicode matching for ASCII and ",
                    "rendered": {
                      "text": "usion constraints applied.\n-T, --initial-tab Add a tab space to separate the file name, line number, column number and byte offset with the matched line.\n-t TYPES, --file-type=TYPES Search only files associated with TYPES, a comma-separated list of file types.\n--tabs[=NUM] Set the tab size to NUM to expand tabs for option -k.\n--tag[=TAG[,END]] Disables colors to mark up matches with TAG.\n--tree, -^ Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match.\n-U, --ascii, --binary Disables Unicode matching for ASCII and ",
                      "markdown": "`usion constraints applied.\n-T, --initial-tab Add a tab space to separate the file name, line number, column number and byte offset with the matched line.\n-t TYPES, --file-type=TYPES Search only files associated with TYPES, a comma-separated list of file types.\n--tabs[=NUM] Set the tab size to NUM to expand tabs for option -k.\n--tag[=TAG[,END]] Disables colors to mark up matches with TAG.\n--tree, -^ Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match.\n-U, --ascii, --binary Disables Unicode matching for ASCII and `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 96,
                  "endLine": 299,
                  "endColumn": 100,
                  "snippet": {
                    "text": "the number of files matched to NUM.\n--mmap[=MAX] Use memory maps to search files.\n-N PATTERN, --neg-regexp=PATTERN Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern.\n-n, --line-number Each output line is preceded by its relative line number in the file, starting at line 1.\n--not [-e] PATTERN Specifies that PATTERN should not match.\n-O EXTENSIONS, --file-extension=EXTENSIONS Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each\n-o, --only-matching Only the matching part of a pattern match i",
                    "rendered": {
                      "text": "the number of files matched to NUM.\n--mmap[=MAX] Use memory maps to search files.\n-N PATTERN, --neg-regexp=PATTERN Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern.\n-n, --line-number Each output line is preceded by its relative line number in the file, starting at line 1.\n--not [-e] PATTERN Specifies that PATTERN should not match.\n-O EXTENSIONS, --file-extension=EXTENSIONS Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each\n-o, --only-matching Only the matching part of a pattern match i",
                      "markdown": "`the number of files matched to NUM.\n--mmap[=MAX] Use memory maps to search files.\n-N PATTERN, --neg-regexp=PATTERN Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern.\n-n, --line-number Each output line is preceded by its relative line number in the file, starting at line 1.\n--not [-e] PATTERN Specifies that PATTERN should not match.\n-O EXTENSIONS, --file-extension=EXTENSIONS Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each\n-o, --only-matching Only the matching part of a pattern match i`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 119,
                  "endLine": 287,
                  "endColumn": 123,
                  "snippet": {
                    "text": " ASCII letter.\n--json Output file matches in JSON.\n-K [MIN,][MAX], --range=[MIN,][MAX], --min-line=MIN, --max-line=MAX Start searching at line MIN, stop at line MAX when specified.\n-k, --column-number The column number of a pattern match is displayed in front of the respective matched line, starting at column 1.\n-L, --files-without-match Only the names of files not containing selected lines are written to standard output.\n-l, --files-with-matches Only the names of files containing selected lines are written to standard output.\n--label=LABEL Displays the LABEL value when input is read from standard",
                    "rendered": {
                      "text": " ASCII letter.\n--json Output file matches in JSON.\n-K [MIN,][MAX], --range=[MIN,][MAX], --min-line=MIN, --max-line=MAX Start searching at line MIN, stop at line MAX when specified.\n-k, --column-number The column number of a pattern match is displayed in front of the respective matched line, starting at column 1.\n-L, --files-without-match Only the names of files not containing selected lines are written to standard output.\n-l, --files-with-matches Only the names of files containing selected lines are written to standard output.\n--label=LABEL Displays the LABEL value when input is read from standard",
                      "markdown": "` ASCII letter.\n--json Output file matches in JSON.\n-K [MIN,][MAX], --range=[MIN,][MAX], --min-line=MIN, --max-line=MAX Start searching at line MIN, stop at line MAX when specified.\n-k, --column-number The column number of a pattern match is displayed in front of the respective matched line, starting at column 1.\n-L, --files-without-match Only the names of files not containing selected lines are written to standard output.\n-l, --files-with-matches Only the names of files containing selected lines are written to standard output.\n--label=LABEL Displays the LABEL value when input is read from standard`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 101,
                  "endLine": 286,
                  "endColumn": 105,
                  "snippet": {
                    "text": "mber of threads spawned to search files.\n-j, --smart-case Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter.\n--json Output file matches in JSON.\n-K [MIN,][MAX], --range=[MIN,][MAX], --min-line=MIN, --max-line=MAX Start searching at line MIN, stop at line MAX when specified.\n-k, --column-number The column number of a pattern match is displayed in front of the respective matched line, starting at column 1.\n-L, --files-without-match Only the names of files not containing selected lines are written to standard output.\n-l, --files-with-matches Only ",
                    "rendered": {
                      "text": "mber of threads spawned to search files.\n-j, --smart-case Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter.\n--json Output file matches in JSON.\n-K [MIN,][MAX], --range=[MIN,][MAX], --min-line=MIN, --max-line=MAX Start searching at line MIN, stop at line MAX when specified.\n-k, --column-number The column number of a pattern match is displayed in front of the respective matched line, starting at column 1.\n-L, --files-without-match Only the names of files not containing selected lines are written to standard output.\n-l, --files-with-matches Only ",
                      "markdown": "`mber of threads spawned to search files.\n-j, --smart-case Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter.\n--json Output file matches in JSON.\n-K [MIN,][MAX], --range=[MIN,][MAX], --min-line=MIN, --max-line=MAX Start searching at line MIN, stop at line MAX when specified.\n-k, --column-number The column number of a pattern match is displayed in front of the respective matched line, starting at column 1.\n-L, --files-without-match Only the names of files not containing selected lines are written to standard output.\n-l, --files-with-matches Only `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 83,
                  "endLine": 286,
                  "endColumn": 87,
                  "snippet": {
                    "text": "M Specifies the number of threads spawned to search files.\n-j, --smart-case Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter.\n--json Output file matches in JSON.\n-K [MIN,][MAX], --range=[MIN,][MAX], --min-line=MIN, --max-line=MAX Start searching at line MIN, stop at line MAX when specified.\n-k, --column-number The column number of a pattern match is displayed in front of the respective matched line, starting at column 1.\n-L, --files-without-match Only the names of files not containing selected lines are written to standard output.\n-l, --files-",
                    "rendered": {
                      "text": "M Specifies the number of threads spawned to search files.\n-j, --smart-case Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter.\n--json Output file matches in JSON.\n-K [MIN,][MAX], --range=[MIN,][MAX], --min-line=MIN, --max-line=MAX Start searching at line MIN, stop at line MAX when specified.\n-k, --column-number The column number of a pattern match is displayed in front of the respective matched line, starting at column 1.\n-L, --files-without-match Only the names of files not containing selected lines are written to standard output.\n-l, --files-",
                      "markdown": "`M Specifies the number of threads spawned to search files.\n-j, --smart-case Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter.\n--json Output file matches in JSON.\n-K [MIN,][MAX], --range=[MIN,][MAX], --min-line=MIN, --max-line=MAX Start searching at line MIN, stop at line MAX when specified.\n-k, --column-number The column number of a pattern match is displayed in front of the respective matched line, starting at column 1.\n-L, --files-without-match Only the names of files not containing selected lines are written to standard output.\n-l, --files-`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# bash completion for ug and ugrep\n# recommended: add the following lines to ~/.inputrc\n# set colored-stats on\n# set colored-completion-prefix on\n",
                    "rendered": {
                      "text": "# bash completion for ug and ugrep\n# recommended: add the following lines to ~/.inputrc\n# set colored-stats on\n# set colored-completion-prefix on\n",
                      "markdown": "`# bash completion for ug and ugrep\n# recommended: add the following lines to ~/.inputrc\n# set colored-stats on\n# set colored-completion-prefix on\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 536,
                  "endLine": 348,
                  "endColumn": 541,
                  "snippet": {
                    "text": " js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen -W \"-tactionscript -tada -tasm -tasp -taspx -tautoconf -tautomake -tawk -tAwk -tbasic -tbatch -tbison -tc -tc++ -tclojure -tcpp -tcsharp -tcss -tcsv -tdart -tDart -tdelphi -telisp -t",
                    "rendered": {
                      "text": " js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen -W \"-tactionscript -tada -tasm -tasp -taspx -tautoconf -tautomake -tawk -tAwk -tbasic -tbatch -tbison -tc -tc++ -tclojure -tcpp -tcsharp -tcss -tcsv -tdart -tDart -tdelphi -telisp -t",
                      "markdown": "` js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen -W \"-tactionscript -tada -tasm -tasp -taspx -tautoconf -tautomake -tawk -tAwk -tbasic -tbatch -tbison -tc -tc++ -tclojure -tcpp -tcsharp -tcss -tcsv -tdart -tDart -tdelphi -telisp -t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 422,
                  "endLine": 348,
                  "endColumn": 428,
                  "snippet": {
                    "text": "csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen -W \"-tactionscript -tada -tasm -tasp -taspx -tautoconf -tautomake -ta",
                    "rendered": {
                      "text": "csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen -W \"-tactionscript -tada -tasm -tasp -taspx -tautoconf -tautomake -ta",
                      "markdown": "`csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen -W \"-tactionscript -tada -tasm -tasp -taspx -tautoconf -tautomake -ta`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 402,
                  "endLine": 348,
                  "endColumn": 407,
                  "snippet": {
                    "text": "n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen -W \"-tactionscript -tada -tasm -tasp -taspx -tau",
                    "rendered": {
                      "text": "n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen -W \"-tactionscript -tada -tasm -tasp -taspx -tau",
                      "markdown": "`n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen -W \"-tactionscript -tada -tasm -tasp -taspx -tau`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 363,
                  "endLine": 348,
                  "endColumn": 368,
                  "snippet": {
                    "text": "oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen -W \"-tact",
                    "rendered": {
                      "text": "oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen -W \"-tact",
                      "markdown": "`oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen -W \"-tact`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 353,
                  "endLine": 348,
                  "endColumn": 359,
                  "snippet": {
                    "text": "p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen ",
                    "rendered": {
                      "text": "p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen ",
                      "markdown": "`p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cmd_ugrep_file_type_t()\n{\n    COMPREPLY=( $(compgen `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 303,
                  "endLine": 348,
                  "endColumn": 309,
                  "snippet": {
                    "text": " COMPREPLY=( $(compgen -W \"actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cm",
                    "rendered": {
                      "text": " COMPREPLY=( $(compgen -W \"actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cm",
                      "markdown": "` COMPREPLY=( $(compgen -W \"actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    compopt +o nospace\n}\n\n_comp_cm`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 275,
                  "endLine": 348,
                  "endColumn": 280,
                  "snippet": {
                    "text": "_cmd_ugrep_file_type()\n{\n    COMPREPLY=( $(compgen -W \"actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    c",
                    "rendered": {
                      "text": "_cmd_ugrep_file_type()\n{\n    COMPREPLY=( $(compgen -W \"actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    c",
                      "markdown": "`_cmd_ugrep_file_type()\n{\n    COMPREPLY=( $(compgen -W \"actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig\" -- $cur) )\n    c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 77,
                  "endLine": 348,
                  "endColumn": 82,
                  "snippet": {
                    "text": " -z (--decompress), searches the contents of compressed files and archives stored within archives by up to NUM expansion stages.\n-0, --null Output a zero-byte (NUL) after the file name.\nEND\n}\n\n_comp_cmd_ugrep_file_type()\n{\n    COMPREPLY=( $(compgen -W \"actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr",
                    "rendered": {
                      "text": " -z (--decompress), searches the contents of compressed files and archives stored within archives by up to NUM expansion stages.\n-0, --null Output a zero-byte (NUL) after the file name.\nEND\n}\n\n_comp_cmd_ugrep_file_type()\n{\n    COMPREPLY=( $(compgen -W \"actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr",
                      "markdown": "` -z (--decompress), searches the contents of compressed files and archives stored within archives by up to NUM expansion stages.\n-0, --null Output a zero-byte (NUL) after the file name.\nEND\n}\n\n_comp_cmd_ugrep_file_type()\n{\n    COMPREPLY=( $(compgen -W \"actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 39,
                  "endLine": 323,
                  "endColumn": 47,
                  "snippet": {
                    "text": "usion constraints applied.\n-T, --initial-tab Add a tab space to separate the file name, line number, column number and byte offset with the matched line.\n-t TYPES, --file-type=TYPES Search only files associated with TYPES, a comma-separated list of file types.\n--tabs[=NUM] Set the tab size to NUM to expand tabs for option -k.\n--tag[=TAG[,END]] Disables colors to mark up matches with TAG.\n--tree, -^ Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match.\n-U, --ascii, --binary Disables Unicode matching for ASCII and ",
                    "rendered": {
                      "text": "usion constraints applied.\n-T, --initial-tab Add a tab space to separate the file name, line number, column number and byte offset with the matched line.\n-t TYPES, --file-type=TYPES Search only files associated with TYPES, a comma-separated list of file types.\n--tabs[=NUM] Set the tab size to NUM to expand tabs for option -k.\n--tag[=TAG[,END]] Disables colors to mark up matches with TAG.\n--tree, -^ Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match.\n-U, --ascii, --binary Disables Unicode matching for ASCII and ",
                      "markdown": "`usion constraints applied.\n-T, --initial-tab Add a tab space to separate the file name, line number, column number and byte offset with the matched line.\n-t TYPES, --file-type=TYPES Search only files associated with TYPES, a comma-separated list of file types.\n--tabs[=NUM] Set the tab size to NUM to expand tabs for option -k.\n--tag[=TAG[,END]] Disables colors to mark up matches with TAG.\n--tree, -^ Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match.\n-U, --ascii, --binary Disables Unicode matching for ASCII and `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 30,
                  "endLine": 318,
                  "endColumn": 38,
                  "snippet": {
                    "text": "error messages and warnings are suppressed.\n--save-config[=FILE] [OPTIONS] Save configuration FILE to include OPTIONS.\n--separator[=SEP], --context-separator=SEP Use SEP as field separator between file name, line number, column number, byte offset and the matched line.\n--split Split the -Q query TUI screen on startup.\n--sort[=KEY] Displays matching files in the order specified by KEY in recursive searches.\n--stats Output statistics on the number of files and directories searched and the inclusion and exclusion constraints applied.\n-T, --initial-tab Add a tab space to separate the file name, line numbe",
                    "rendered": {
                      "text": "error messages and warnings are suppressed.\n--save-config[=FILE] [OPTIONS] Save configuration FILE to include OPTIONS.\n--separator[=SEP], --context-separator=SEP Use SEP as field separator between file name, line number, column number, byte offset and the matched line.\n--split Split the -Q query TUI screen on startup.\n--sort[=KEY] Displays matching files in the order specified by KEY in recursive searches.\n--stats Output statistics on the number of files and directories searched and the inclusion and exclusion constraints applied.\n-T, --initial-tab Add a tab space to separate the file name, line numbe",
                      "markdown": "`error messages and warnings are suppressed.\n--save-config[=FILE] [OPTIONS] Save configuration FILE to include OPTIONS.\n--separator[=SEP], --context-separator=SEP Use SEP as field separator between file name, line number, column number, byte offset and the matched line.\n--split Split the -Q query TUI screen on startup.\n--sort[=KEY] Displays matching files in the order specified by KEY in recursive searches.\n--stats Output statistics on the number of files and directories searched and the inclusion and exclusion constraints applied.\n-T, --initial-tab Add a tab space to separate the file name, line numbe`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 40,
                  "endLine": 305,
                  "endColumn": 46,
                  "snippet": {
                    "text": "ated list of EXTENSIONS, same as -g *.ext for each\n-o, --only-matching Only the matching part of a pattern match is output.\n--only-line-number Only the line number of a matching line is output.\n--files, -%% Boolean file matching mode, the opposite of --lines.\n-P, --perl-regexp Interpret PATTERN as a Perl regular expression using PCRE2.\n-p, --no-dereference If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line.\n--pager[=COMMAND] When output is sent to the terminal, uses COMMAND to page through the output.\n--pretty[=WHEN] When output is sent",
                    "rendered": {
                      "text": "ated list of EXTENSIONS, same as -g *.ext for each\n-o, --only-matching Only the matching part of a pattern match is output.\n--only-line-number Only the line number of a matching line is output.\n--files, -%% Boolean file matching mode, the opposite of --lines.\n-P, --perl-regexp Interpret PATTERN as a Perl regular expression using PCRE2.\n-p, --no-dereference If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line.\n--pager[=COMMAND] When output is sent to the terminal, uses COMMAND to page through the output.\n--pretty[=WHEN] When output is sent",
                      "markdown": "`ated list of EXTENSIONS, same as -g *.ext for each\n-o, --only-matching Only the matching part of a pattern match is output.\n--only-line-number Only the line number of a matching line is output.\n--files, -%% Boolean file matching mode, the opposite of --lines.\n-P, --perl-regexp Interpret PATTERN as a Perl regular expression using PCRE2.\n-p, --no-dereference If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line.\n--pager[=COMMAND] When output is sent to the terminal, uses COMMAND to page through the output.\n--pretty[=WHEN] When output is sent`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 1,
                  "endLine": 224,
                  "endColumn": 4,
                  "snippet": {
                    "text": "}\n\n_comp_cmd_ugrep_help()\n{\ncat <<'END'\n-A NUM, --after-context=NUM Output NUM lines of trailing context after matching lines.\n-a, --text Process a binary file as if it were text.\n--all, -@ Search all files except hidden: cancel previous file and directory search restrictions and cancel --ignore-binary and --ignore-files when specified.\n",
                    "rendered": {
                      "text": "}\n\n_comp_cmd_ugrep_help()\n{\ncat <<'END'\n-A NUM, --after-context=NUM Output NUM lines of trailing context after matching lines.\n-a, --text Process a binary file as if it were text.\n--all, -@ Search all files except hidden: cancel previous file and directory search restrictions and cancel --ignore-binary and --ignore-files when specified.\n",
                      "markdown": "`}\n\n_comp_cmd_ugrep_help()\n{\ncat <<'END'\n-A NUM, --after-context=NUM Output NUM lines of trailing context after matching lines.\n-a, --text Process a binary file as if it were text.\n--all, -@ Search all files except hidden: cancel previous file and directory search restrictions and cancel --ignore-binary and --ignore-files when specified.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 25,
                  "endLine": 204,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        # generate list of options, concat the first sentence to them\n        usage[0]=\"Usage:\"\n        while read -r line; do\n            # truncate to screen width\n            (( ++i ))\n            usage[$i]=${line:0:$COLUMNS}\n        done < <(_comp_cmd_ugrep_help)\n",
                    "rendered": {
                      "text": "        # generate list of options, concat the first sentence to them\n        usage[0]=\"Usage:\"\n        while read -r line; do\n            # truncate to screen width\n            (( ++i ))\n            usage[$i]=${line:0:$COLUMNS}\n        done < <(_comp_cmd_ugrep_help)\n",
                      "markdown": "`        # generate list of options, concat the first sentence to them\n        usage[0]=\"Usage:\"\n        while read -r line; do\n            # truncate to screen width\n            (( ++i ))\n            usage[$i]=${line:0:$COLUMNS}\n        done < <(_comp_cmd_ugrep_help)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 18,
                  "endLine": 105,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        return\n        ;;\n    --sort=*)\n        # complete sort key\n        COMPREPLY=( $(compgen -W \"best changed created name size used rbest rchanged rcreated rname rsize rused\" -- $cur) )\n        compopt +o nospace\n        return\n",
                    "rendered": {
                      "text": "        return\n        ;;\n    --sort=*)\n        # complete sort key\n        COMPREPLY=( $(compgen -W \"best changed created name size used rbest rchanged rcreated rname rsize rused\" -- $cur) )\n        compopt +o nospace\n        return\n",
                      "markdown": "`        return\n        ;;\n    --sort=*)\n        # complete sort key\n        COMPREPLY=( $(compgen -W \"best changed created name size used rbest rchanged rcreated rname rsize rused\" -- $cur) )\n        compopt +o nospace\n        return\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ug"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# bash completion for ug and ugrep\n# recommended: add the following lines to ~/.inputrc\n# set colored-stats on\n# set colored-completion-prefix on\n",
                    "rendered": {
                      "text": "# bash completion for ug and ugrep\n# recommended: add the following lines to ~/.inputrc\n# set colored-stats on\n# set colored-completion-prefix on\n",
                      "markdown": "`# bash completion for ug and ugrep\n# recommended: add the following lines to ~/.inputrc\n# set colored-stats on\n# set colored-completion-prefix on\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 34,
                  "endLine": 108,
                  "endColumn": 42,
                  "snippet": {
                    "text": "lab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match]'\n{-U,--ascii,--binary}'[Disables Unicode matching for ASCII and binar",
                    "rendered": {
                      "text": "lab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match]'\n{-U,--ascii,--binary}'[Disables Unicode matching for ASCII and binar",
                      "markdown": "`lab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match]'\n{-U,--ascii,--binary}'[Disables Unicode matching for ASCII and binar`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 98,
                  "endLine": 84,
                  "endColumn": 102,
                  "snippet": {
                    "text": "the number of files matched to NUM]'\n--mmap'[Use memory maps to search files]'\n{-N,--neg-regexp=-}'[Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern]:PATTERN:( )'\n{-n,--line-number}'[Each output line is preceded by its relative line number in the file, starting at line 1]'\n--not'[Specifies that PATTERN should not match]'\n'(1)*'{-O,--file-extension=-}'[Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each]:EXT:( )'\n{-o,--only-matching}'[Only the matching part of a pattern match is output]'",
                    "rendered": {
                      "text": "the number of files matched to NUM]'\n--mmap'[Use memory maps to search files]'\n{-N,--neg-regexp=-}'[Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern]:PATTERN:( )'\n{-n,--line-number}'[Each output line is preceded by its relative line number in the file, starting at line 1]'\n--not'[Specifies that PATTERN should not match]'\n'(1)*'{-O,--file-extension=-}'[Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each]:EXT:( )'\n{-o,--only-matching}'[Only the matching part of a pattern match is output]'",
                      "markdown": "`the number of files matched to NUM]'\n--mmap'[Use memory maps to search files]'\n{-N,--neg-regexp=-}'[Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern]:PATTERN:( )'\n{-n,--line-number}'[Each output line is preceded by its relative line number in the file, starting at line 1]'\n--not'[Specifies that PATTERN should not match]'\n'(1)*'{-O,--file-extension=-}'[Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each]:EXT:( )'\n{-o,--only-matching}'[Only the matching part of a pattern match is output]'`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 121,
                  "endLine": 72,
                  "endColumn": 125,
                  "snippet": {
                    "text": "per case ASCII letter]'\n--json'[Output file matches in JSON]'\n{-K,--range=-,--min-line=-,--max-line=-}'[Start searching at line MIN, stop at line MAX when specified]:MIN,MAX:( )'\n{-k,--column-number}'[The column number of a pattern match is displayed in front of the respective matched line, starting at column 1]'\n{-L,--files-without-match}'[Only the names of files not containing selected lines are written to standard output]'\n{-l,--files-with-matches}'[Only the names of files containing selected lines are written to standard output]'\n--label=-'[Displays the LABEL value when input is read from stan",
                    "rendered": {
                      "text": "per case ASCII letter]'\n--json'[Output file matches in JSON]'\n{-K,--range=-,--min-line=-,--max-line=-}'[Start searching at line MIN, stop at line MAX when specified]:MIN,MAX:( )'\n{-k,--column-number}'[The column number of a pattern match is displayed in front of the respective matched line, starting at column 1]'\n{-L,--files-without-match}'[Only the names of files not containing selected lines are written to standard output]'\n{-l,--files-with-matches}'[Only the names of files containing selected lines are written to standard output]'\n--label=-'[Displays the LABEL value when input is read from stan",
                      "markdown": "`per case ASCII letter]'\n--json'[Output file matches in JSON]'\n{-K,--range=-,--min-line=-,--max-line=-}'[Start searching at line MIN, stop at line MAX when specified]:MIN,MAX:( )'\n{-k,--column-number}'[The column number of a pattern match is displayed in front of the respective matched line, starting at column 1]'\n{-L,--files-without-match}'[Only the names of files not containing selected lines are written to standard output]'\n{-l,--files-with-matches}'[Only the names of files containing selected lines are written to standard output]'\n--label=-'[Displays the LABEL value when input is read from stan`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 75,
                  "endLine": 71,
                  "endColumn": 79,
                  "snippet": {
                    "text": "ifies the number of threads spawned to search files]:NUM:( )'\n{-j,--smart-case}'[Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter]'\n--json'[Output file matches in JSON]'\n{-K,--range=-,--min-line=-,--max-line=-}'[Start searching at line MIN, stop at line MAX when specified]:MIN,MAX:( )'\n{-k,--column-number}'[The column number of a pattern match is displayed in front of the respective matched line, starting at column 1]'\n{-L,--files-without-match}'[Only the names of files not containing selected lines are written to standard output]'\n{-l,--files",
                    "rendered": {
                      "text": "ifies the number of threads spawned to search files]:NUM:( )'\n{-j,--smart-case}'[Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter]'\n--json'[Output file matches in JSON]'\n{-K,--range=-,--min-line=-,--max-line=-}'[Start searching at line MIN, stop at line MAX when specified]:MIN,MAX:( )'\n{-k,--column-number}'[The column number of a pattern match is displayed in front of the respective matched line, starting at column 1]'\n{-L,--files-without-match}'[Only the names of files not containing selected lines are written to standard output]'\n{-l,--files",
                      "markdown": "`ifies the number of threads spawned to search files]:NUM:( )'\n{-j,--smart-case}'[Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter]'\n--json'[Output file matches in JSON]'\n{-K,--range=-,--min-line=-,--max-line=-}'[Start searching at line MIN, stop at line MAX when specified]:MIN,MAX:( )'\n{-k,--column-number}'[The column number of a pattern match is displayed in front of the respective matched line, starting at column 1]'\n{-L,--files-without-match}'[Only the names of files not containing selected lines are written to standard output]'\n{-l,--files`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 57,
                  "endLine": 71,
                  "endColumn": 61,
                  "snippet": {
                    "text": "-J,--jobs=-}'[Specifies the number of threads spawned to search files]:NUM:( )'\n{-j,--smart-case}'[Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter]'\n--json'[Output file matches in JSON]'\n{-K,--range=-,--min-line=-,--max-line=-}'[Start searching at line MIN, stop at line MAX when specified]:MIN,MAX:( )'\n{-k,--column-number}'[The column number of a pattern match is displayed in front of the respective matched line, starting at column 1]'\n{-L,--files-without-match}'[Only the names of files not containing selected lines are written to standard ou",
                    "rendered": {
                      "text": "-J,--jobs=-}'[Specifies the number of threads spawned to search files]:NUM:( )'\n{-j,--smart-case}'[Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter]'\n--json'[Output file matches in JSON]'\n{-K,--range=-,--min-line=-,--max-line=-}'[Start searching at line MIN, stop at line MAX when specified]:MIN,MAX:( )'\n{-k,--column-number}'[The column number of a pattern match is displayed in front of the respective matched line, starting at column 1]'\n{-L,--files-without-match}'[Only the names of files not containing selected lines are written to standard ou",
                      "markdown": "`-J,--jobs=-}'[Specifies the number of threads spawned to search files]:NUM:( )'\n{-j,--smart-case}'[Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter]'\n--json'[Output file matches in JSON]'\n{-K,--range=-,--min-line=-,--max-line=-}'[Start searching at line MIN, stop at line MAX when specified]:MIN,MAX:( )'\n{-k,--column-number}'[The column number of a pattern match is displayed in front of the respective matched line, starting at column 1]'\n{-L,--files-without-match}'[Only the names of files not containing selected lines are written to standard ou`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 34,
                  "endLine": 108,
                  "endColumn": 42,
                  "snippet": {
                    "text": "lab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match]'\n{-U,--ascii,--binary}'[Disables Unicode matching for ASCII and binar",
                    "rendered": {
                      "text": "lab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match]'\n{-U,--ascii,--binary}'[Disables Unicode matching for ASCII and binar",
                      "markdown": "`lab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match]'\n{-U,--ascii,--binary}'[Disables Unicode matching for ASCII and binar`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 618,
                  "endLine": 107,
                  "endColumn": 623,
                  "snippet": {
                    "text": " js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match]'\n{",
                    "rendered": {
                      "text": " js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match]'\n{",
                      "markdown": "` js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match]'\n{`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 504,
                  "endLine": 107,
                  "endColumn": 510,
                  "snippet": {
                    "text": "csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output directories with matching ",
                    "rendered": {
                      "text": "csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output directories with matching ",
                      "markdown": "`csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output directories with matching `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 484,
                  "endLine": 107,
                  "endColumn": 489,
                  "snippet": {
                    "text": "n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output direc",
                    "rendered": {
                      "text": "n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output direc",
                      "markdown": "`n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up matches with TAG]'\n{--tree,-^}'[Output direc`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 445,
                  "endLine": 107,
                  "endColumn": 450,
                  "snippet": {
                    "text": "oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up match",
                    "rendered": {
                      "text": "oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up match",
                      "markdown": "`oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark up match`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 435,
                  "endLine": 107,
                  "endColumn": 441,
                  "snippet": {
                    "text": "p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark",
                    "rendered": {
                      "text": "p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark",
                      "markdown": "`p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand tabs for option -k]'\n--tag'[Disables colors to mark`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 385,
                  "endLine": 107,
                  "endColumn": 391,
                  "snippet": {
                    "text": "list of file types]:TYPES:(actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand t",
                    "rendered": {
                      "text": "list of file types]:TYPES:(actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand t",
                      "markdown": "`list of file types]:TYPES:(actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set the tab size to NUM to expand t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 357,
                  "endLine": 107,
                  "endColumn": 362,
                  "snippet": {
                    "text": "th TYPES, a comma-separated list of file types]:TYPES:(actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set th",
                    "rendered": {
                      "text": "th TYPES, a comma-separated list of file types]:TYPES:(actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set th",
                      "markdown": "`th TYPES, a comma-separated list of file types]:TYPES:(actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig )'\n--tabs'[Set th`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 159,
                  "endLine": 107,
                  "endColumn": 164,
                  "snippet": {
                    "text": " applied]'\n{-T,--initial-tab}'[Add a tab space to separate the file name, line number, column number and byte offset with the matched line]'\n'(1)*'{-t,--file-type=-}'[Search only files associated with TYPES, a comma-separated list of file types]:TYPES:(actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr",
                    "rendered": {
                      "text": " applied]'\n{-T,--initial-tab}'[Add a tab space to separate the file name, line number, column number and byte offset with the matched line]'\n'(1)*'{-t,--file-type=-}'[Search only files associated with TYPES, a comma-separated list of file types]:TYPES:(actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr",
                      "markdown": "` applied]'\n{-T,--initial-tab}'[Add a tab space to separate the file name, line number, column number and byte offset with the matched line]'\n'(1)*'{-t,--file-type=-}'[Search only files associated with TYPES, a comma-separated list of file types]:TYPES:(actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 31,
                  "endLine": 103,
                  "endColumn": 39,
                  "snippet": {
                    "text": "ignored and their error messages and warnings are suppressed]'\n--save-config'[Save configuration FILE to include OPTIONS]'\n{--separator,--context-separator=-}'[Use SEP as field separator between file name, line number, column number, byte offset and the matched line]'\n--split'[Split the -Q query TUI screen on startup]'\n--sort=-'[Displays matching files in the order specified by KEY in recursive searches]:KEY:(name best size changed created used rname rbest rsize rchanged rcreated rused)'\n--stats'[Output statistics on the number of files and directories searched and the inclusion and exclusion constrai",
                    "rendered": {
                      "text": "ignored and their error messages and warnings are suppressed]'\n--save-config'[Save configuration FILE to include OPTIONS]'\n{--separator,--context-separator=-}'[Use SEP as field separator between file name, line number, column number, byte offset and the matched line]'\n--split'[Split the -Q query TUI screen on startup]'\n--sort=-'[Displays matching files in the order specified by KEY in recursive searches]:KEY:(name best size changed created used rname rbest rsize rchanged rcreated rused)'\n--stats'[Output statistics on the number of files and directories searched and the inclusion and exclusion constrai",
                      "markdown": "`ignored and their error messages and warnings are suppressed]'\n--save-config'[Save configuration FILE to include OPTIONS]'\n{--separator,--context-separator=-}'[Use SEP as field separator between file name, line number, column number, byte offset and the matched line]'\n--split'[Split the -Q query TUI screen on startup]'\n--sort=-'[Displays matching files in the order specified by KEY in recursive searches]:KEY:(name best size changed created used rname rbest rsize rchanged rcreated rused)'\n--stats'[Output statistics on the number of files and directories searched and the inclusion and exclusion constrai`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 51,
                  "endLine": 90,
                  "endColumn": 57,
                  "snippet": {
                    "text": " as -g *.ext for each]:EXT:( )'\n{-o,--only-matching}'[Only the matching part of a pattern match is output]'\n--only-line-number'[Only the line number of a matching line is output]'\n{--files,-%%}'[Boolean file matching mode, the opposite of --lines]'\n$matchers{-P,--perl-regexp}'[Interpret PATTERN as a Perl regular expression using PCRE2]'\n{-p,--no-dereference}'[If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line]'\n--pager'[When output is sent to the terminal, uses COMMAND to page through the output]'\n--pretty'[When output is sent to a term",
                    "rendered": {
                      "text": " as -g *.ext for each]:EXT:( )'\n{-o,--only-matching}'[Only the matching part of a pattern match is output]'\n--only-line-number'[Only the line number of a matching line is output]'\n{--files,-%%}'[Boolean file matching mode, the opposite of --lines]'\n$matchers{-P,--perl-regexp}'[Interpret PATTERN as a Perl regular expression using PCRE2]'\n{-p,--no-dereference}'[If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line]'\n--pager'[When output is sent to the terminal, uses COMMAND to page through the output]'\n--pretty'[When output is sent to a term",
                      "markdown": "` as -g *.ext for each]:EXT:( )'\n{-o,--only-matching}'[Only the matching part of a pattern match is output]'\n--only-line-number'[Only the line number of a matching line is output]'\n{--files,-%%}'[Boolean file matching mode, the opposite of --lines]'\n$matchers{-P,--perl-regexp}'[Interpret PATTERN as a Perl regular expression using PCRE2]'\n{-p,--no-dereference}'[If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line]'\n--pager'[When output is sent to the terminal, uses COMMAND to page through the output]'\n--pretty'[When output is sent to a term`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ug"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 6,
                  "snippet": {
                    "text": "#compdef ug ug+ ugrep ugrep+\n\n# zsh completions for 'ugrep'\n# Autogenerated from ugrep --help\n\nlocal matchers='(--extended-regexp --fixed-strings --basic-regexp --perl-regexp --fuzzy -E -F -G -P -Z)'\n",
                    "rendered": {
                      "text": "#compdef ug ug+ ugrep ugrep+\n\n# zsh completions for 'ugrep'\n# Autogenerated from ugrep --help\n\nlocal matchers='(--extended-regexp --fixed-strings --basic-regexp --perl-regexp --fuzzy -E -F -G -P -Z)'\n",
                      "markdown": "`#compdef ug ug+ ugrep ugrep+\n\n# zsh completions for 'ugrep'\n# Autogenerated from ugrep --help\n\nlocal matchers='(--extended-regexp --fixed-strings --basic-regexp --perl-regexp --fuzzy -E -F -G -P -Z)'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/ugrep/patterns/README.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 43,
                  "endLine": 26,
                  "endColumn": 47,
                  "snippet": {
                    "text": "`(?u:X)`, just in case to prevent ugrep option `-U` from disabling them.\n\nSome programming languages permit nested comments, e.g. rust, scala, and swift.\nComments with nested comments are truncated at the first nested `*/` when\nmatched with a regex pattern, because of the fundamental limitations of regular\nexpression matching.\n\n",
                    "rendered": {
                      "text": "`(?u:X)`, just in case to prevent ugrep option `-U` from disabling them.\n\nSome programming languages permit nested comments, e.g. rust, scala, and swift.\nComments with nested comments are truncated at the first nested `*/` when\nmatched with a regex pattern, because of the fundamental limitations of regular\nexpression matching.\n\n",
                      "markdown": "``(?u:X)`, just in case to prevent ugrep option `-U` from disabling them.\n\nSome programming languages permit nested comments, e.g. rust, scala, and swift.\nComments with nested comments are truncated at the first nested `*/` when\nmatched with a regex pattern, because of the fundamental limitations of regular\nexpression matching.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/ugrep/patterns/README.md"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 51,
                  "endLine": 8,
                  "endColumn": 59,
                  "snippet": {
                    "text": "source code files.  Use ugrep option `-f` to specify one or more pattern files\nto use for searching these patterns in files.\n\nThe list of patterns defined in this directory will expand over time.\n\nFor example, to display class definitions in C++ files in the working directory\n\n",
                    "rendered": {
                      "text": "source code files.  Use ugrep option `-f` to specify one or more pattern files\nto use for searching these patterns in files.\n\nThe list of patterns defined in this directory will expand over time.\n\nFor example, to display class definitions in C++ files in the working directory\n\n",
                      "markdown": "`source code files.  Use ugrep option `-f` to specify one or more pattern files\nto use for searching these patterns in files.\n\nThe list of patterns defined in this directory will expand over time.\n\nFor example, to display class definitions in C++ files in the working directory\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/ugrep/patterns/README.md"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 51,
                  "endLine": 8,
                  "endColumn": 59,
                  "snippet": {
                    "text": "source code files.  Use ugrep option `-f` to specify one or more pattern files\nto use for searching these patterns in files.\n\nThe list of patterns defined in this directory will expand over time.\n\nFor example, to display class definitions in C++ files in the working directory\n\n",
                    "rendered": {
                      "text": "source code files.  Use ugrep option `-f` to specify one or more pattern files\nto use for searching these patterns in files.\n\nThe list of patterns defined in this directory will expand over time.\n\nFor example, to display class definitions in C++ files in the working directory\n\n",
                      "markdown": "`source code files.  Use ugrep option `-f` to specify one or more pattern files\nto use for searching these patterns in files.\n\nThe list of patterns defined in this directory will expand over time.\n\nFor example, to display class definitions in C++ files in the working directory\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 53,
                  "endLine": 101,
                  "endColumn": 61,
                  "snippet": {
                    "text": "r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ug -s U -l ascii -l",
                    "rendered": {
                      "text": "r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ug -s U -l ascii -l",
                      "markdown": "`r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ug -s U -l ascii -l`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 117,
                  "endLine": 77,
                  "endColumn": 121,
                  "snippet": {
                    "text": "e -c ug -l mmap -d 'Use memory maps to search files'\ncomplete -c ug -s N -r -l neg-regexp -d 'Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern'\ncomplete -c ug -s n -l line-number -d 'Each output line is preceded by its relative line number in the file, starting at line 1'\ncomplete -c ug -l not -d 'Specifies that PATTERN should not match'\ncomplete -c ug -s O -r -l file-extension -d 'Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each'\ncomplete -c ug -s o -l only-matching -d 'Only the mat",
                    "rendered": {
                      "text": "e -c ug -l mmap -d 'Use memory maps to search files'\ncomplete -c ug -s N -r -l neg-regexp -d 'Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern'\ncomplete -c ug -s n -l line-number -d 'Each output line is preceded by its relative line number in the file, starting at line 1'\ncomplete -c ug -l not -d 'Specifies that PATTERN should not match'\ncomplete -c ug -s O -r -l file-extension -d 'Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each'\ncomplete -c ug -s o -l only-matching -d 'Only the mat",
                      "markdown": "`e -c ug -l mmap -d 'Use memory maps to search files'\ncomplete -c ug -s N -r -l neg-regexp -d 'Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern'\ncomplete -c ug -s n -l line-number -d 'Each output line is preceded by its relative line number in the file, starting at line 1'\ncomplete -c ug -l not -d 'Specifies that PATTERN should not match'\ncomplete -c ug -s O -r -l file-extension -d 'Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each'\ncomplete -c ug -s o -l only-matching -d 'Only the mat`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 140,
                  "endLine": 65,
                  "endColumn": 144,
                  "snippet": {
                    "text": "json -d 'Output file matches in JSON'\ncomplete -c ug -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to standard output'\ncomplete -c ug -s l -l files-with-matches -d 'Only the names of files containing selected lines are written to standard output'\ncomplete -c ug -l label -d 'D",
                    "rendered": {
                      "text": "json -d 'Output file matches in JSON'\ncomplete -c ug -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to standard output'\ncomplete -c ug -s l -l files-with-matches -d 'Only the names of files containing selected lines are written to standard output'\ncomplete -c ug -l label -d 'D",
                      "markdown": "`json -d 'Output file matches in JSON'\ncomplete -c ug -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to standard output'\ncomplete -c ug -s l -l files-with-matches -d 'Only the names of files containing selected lines are written to standard output'\ncomplete -c ug -l label -d 'D`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 93,
                  "endLine": 64,
                  "endColumn": 97,
                  "snippet": {
                    "text": " files'\ncomplete -c ug -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ug -l json -d 'Output file matches in JSON'\ncomplete -c ug -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to stand",
                    "rendered": {
                      "text": " files'\ncomplete -c ug -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ug -l json -d 'Output file matches in JSON'\ncomplete -c ug -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to stand",
                      "markdown": "` files'\ncomplete -c ug -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ug -l json -d 'Output file matches in JSON'\ncomplete -c ug -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to stand`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 75,
                  "endLine": 64,
                  "endColumn": 79,
                  "snippet": {
                    "text": " spawned to search files'\ncomplete -c ug -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ug -l json -d 'Output file matches in JSON'\ncomplete -c ug -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug -s L -l files-without-match -d 'Only the names of files not containing selected lines ar",
                    "rendered": {
                      "text": " spawned to search files'\ncomplete -c ug -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ug -l json -d 'Output file matches in JSON'\ncomplete -c ug -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug -s L -l files-without-match -d 'Only the names of files not containing selected lines ar",
                      "markdown": "` spawned to search files'\ncomplete -c ug -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ug -l json -d 'Output file matches in JSON'\ncomplete -c ug -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug -s L -l files-without-match -d 'Only the names of files not containing selected lines ar`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 53,
                  "endLine": 101,
                  "endColumn": 61,
                  "snippet": {
                    "text": "r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ug -s U -l ascii -l",
                    "rendered": {
                      "text": "r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ug -s U -l ascii -l",
                      "markdown": "`r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ug -s U -l ascii -l`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 544,
                  "endLine": 100,
                  "endColumn": 549,
                  "snippet": {
                    "text": " js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug -l tree -s '^' -d 'Output ",
                    "rendered": {
                      "text": " js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug -l tree -s '^' -d 'Output ",
                      "markdown": "` js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug -l tree -s '^' -d 'Output `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 430,
                  "endLine": 100,
                  "endColumn": 436,
                  "snippet": {
                    "text": "csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'",
                    "rendered": {
                      "text": "csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'",
                      "markdown": "`csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 410,
                  "endLine": 100,
                  "endColumn": 415,
                  "snippet": {
                    "text": "n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expan",
                    "rendered": {
                      "text": "n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expan",
                      "markdown": "`n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l tabs -d 'Set the tab size to NUM to expan`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 371,
                  "endLine": 100,
                  "endColumn": 376,
                  "snippet": {
                    "text": "oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l ta",
                    "rendered": {
                      "text": "oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l ta",
                      "markdown": "`oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug -l ta`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 361,
                  "endLine": 100,
                  "endColumn": 367,
                  "snippet": {
                    "text": "p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c",
                    "rendered": {
                      "text": "p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c",
                      "markdown": "`p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 311,
                  "endLine": 100,
                  "endColumn": 317,
                  "snippet": {
                    "text": " ug -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES,",
                    "rendered": {
                      "text": " ug -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES,",
                      "markdown": "` ug -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES,`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 283,
                  "endLine": 100,
                  "endColumn": 288,
                  "snippet": {
                    "text": "he matched line'\ncomplete -c ug -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only",
                    "rendered": {
                      "text": "he matched line'\ncomplete -c ug -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only",
                      "markdown": "`he matched line'\ncomplete -c ug -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 85,
                  "endLine": 100,
                  "endColumn": 90,
                  "snippet": {
                    "text": "ries searched and the inclusion and exclusion constraints applied'\ncomplete -c ug -s T -l initial-tab -d 'Add a tab space to separate the file name, line number, column number and byte offset with the matched line'\ncomplete -c ug -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr",
                    "rendered": {
                      "text": "ries searched and the inclusion and exclusion constraints applied'\ncomplete -c ug -s T -l initial-tab -d 'Add a tab space to separate the file name, line number, column number and byte offset with the matched line'\ncomplete -c ug -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr",
                      "markdown": "`ries searched and the inclusion and exclusion constraints applied'\ncomplete -c ug -s T -l initial-tab -d 'Add a tab space to separate the file name, line number, column number and byte offset with the matched line'\ncomplete -c ug -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 17,
                  "endLine": 97,
                  "endColumn": 23,
                  "snippet": {
                    "text": "fig -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ug -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ug -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ug -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ug -l stats -d 'Output statistics on the number of files and directories searched and the inclusion and exclusion constrain",
                    "rendered": {
                      "text": "fig -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ug -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ug -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ug -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ug -l stats -d 'Output statistics on the number of files and directories searched and the inclusion and exclusion constrain",
                      "markdown": "`fig -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ug -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ug -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ug -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ug -l stats -d 'Output statistics on the number of files and directories searched and the inclusion and exclusion constrain`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 50,
                  "endLine": 96,
                  "endColumn": 58,
                  "snippet": {
                    "text": "uppressed'\ncomplete -c ug -l save-config -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ug -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ug -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ug -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ug -l stats -d 'Output statistics on the number of files and directories searched and th",
                    "rendered": {
                      "text": "uppressed'\ncomplete -c ug -l save-config -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ug -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ug -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ug -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ug -l stats -d 'Output statistics on the number of files and directories searched and th",
                      "markdown": "`uppressed'\ncomplete -c ug -l save-config -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ug -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ug -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ug -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ug -l stats -d 'Output statistics on the number of files and directories searched and th`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug.fish"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 61,
                  "endLine": 83,
                  "endColumn": 67,
                  "snippet": {
                    "text": "ng -d 'Only the matching part of a pattern match is output'\ncomplete -c ug -l only-line-number -d 'Only the line number of a matching line is output'\ncomplete -c ug -l files -o '%%' -d 'Boolean file matching mode, the opposite of --lines'\ncomplete -c ug -s P -l perl-regexp -d 'Interpret PATTERN as a Perl regular expression using PCRE2'\ncomplete -c ug -s p -l no-dereference -d 'If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line'\ncomplete -c ug -l pager -d 'When output is sent to the terminal, uses COMMAND to page through the output'\ncomp",
                    "rendered": {
                      "text": "ng -d 'Only the matching part of a pattern match is output'\ncomplete -c ug -l only-line-number -d 'Only the line number of a matching line is output'\ncomplete -c ug -l files -o '%%' -d 'Boolean file matching mode, the opposite of --lines'\ncomplete -c ug -s P -l perl-regexp -d 'Interpret PATTERN as a Perl regular expression using PCRE2'\ncomplete -c ug -s p -l no-dereference -d 'If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line'\ncomplete -c ug -l pager -d 'When output is sent to the terminal, uses COMMAND to page through the output'\ncomp",
                      "markdown": "`ng -d 'Only the matching part of a pattern match is output'\ncomplete -c ug -l only-line-number -d 'Only the line number of a matching line is output'\ncomplete -c ug -l files -o '%%' -d 'Boolean file matching mode, the opposite of --lines'\ncomplete -c ug -s P -l perl-regexp -d 'Interpret PATTERN as a Perl regular expression using PCRE2'\ncomplete -c ug -s p -l no-dereference -d 'If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line'\ncomplete -c ug -l pager -d 'When output is sent to the terminal, uses COMMAND to page through the output'\ncomp`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ugrep-indexer"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# bash completion for ugrep-indexer\n# recommended: add the following lines to ~/.inputrc\n# set colored-stats on\n# set colored-completion-prefix on\n",
                    "rendered": {
                      "text": "# bash completion for ugrep-indexer\n# recommended: add the following lines to ~/.inputrc\n# set colored-stats on\n# set colored-completion-prefix on\n",
                      "markdown": "`# bash completion for ugrep-indexer\n# recommended: add the following lines to ~/.inputrc\n# set colored-stats on\n# set colored-completion-prefix on\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ugrep-indexer"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 1,
                  "endLine": 88,
                  "endColumn": 4,
                  "snippet": {
                    "text": "}\n\n_comp_cmd_ugrep_indexer_help()\n{\ncat <<'END'\n--accuracy=DIGIT, -0, -1, -2, -3, -4, -5, -6, -7, -8, -9 Specifies indexing accuracy.\n-., --hidden Index hidden files and directories.\n-?, --help Display a help message and exit.\n",
                    "rendered": {
                      "text": "}\n\n_comp_cmd_ugrep_indexer_help()\n{\ncat <<'END'\n--accuracy=DIGIT, -0, -1, -2, -3, -4, -5, -6, -7, -8, -9 Specifies indexing accuracy.\n-., --hidden Index hidden files and directories.\n-?, --help Display a help message and exit.\n",
                      "markdown": "`}\n\n_comp_cmd_ugrep_indexer_help()\n{\ncat <<'END'\n--accuracy=DIGIT, -0, -1, -2, -3, -4, -5, -6, -7, -8, -9 Specifies indexing accuracy.\n-., --hidden Index hidden files and directories.\n-?, --help Display a help message and exit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ugrep-indexer"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 25,
                  "endLine": 68,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        # generate list of options, concat the first sentence to them\n        usage[0]=\"Usage:\"\n        while read -r line; do\n            # truncate to screen width\n            (( ++i ))\n            usage[$i]=${line:0:$COLUMNS}\n        done < <(_comp_cmd_ugrep_indexer_help)\n",
                    "rendered": {
                      "text": "        # generate list of options, concat the first sentence to them\n        usage[0]=\"Usage:\"\n        while read -r line; do\n            # truncate to screen width\n            (( ++i ))\n            usage[$i]=${line:0:$COLUMNS}\n        done < <(_comp_cmd_ugrep_indexer_help)\n",
                      "markdown": "`        # generate list of options, concat the first sentence to them\n        usage[0]=\"Usage:\"\n        while read -r line; do\n            # truncate to screen width\n            (( ++i ))\n            usage[$i]=${line:0:$COLUMNS}\n        done < <(_comp_cmd_ugrep_indexer_help)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/bash-completion/completions/ugrep-indexer"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# bash completion for ugrep-indexer\n# recommended: add the following lines to ~/.inputrc\n# set colored-stats on\n# set colored-completion-prefix on\n",
                    "rendered": {
                      "text": "# bash completion for ugrep-indexer\n# recommended: add the following lines to ~/.inputrc\n# set colored-stats on\n# set colored-completion-prefix on\n",
                      "markdown": "`# bash completion for ugrep-indexer\n# recommended: add the following lines to ~/.inputrc\n# set colored-stats on\n# set colored-completion-prefix on\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/zsh/site-functions/_ugrep-indexer"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 6,
                  "snippet": {
                    "text": "#compdef ugrep-indexer\n\n# zsh completions for 'ugrep-indexer'\n\nlocal arguments=(\n{--accuracy=-,-0,-1,-2,-3,-4,-5,-6,-7,-8,-9}'[Specifies indexing accuracy, the default is 4]'\n",
                    "rendered": {
                      "text": "#compdef ugrep-indexer\n\n# zsh completions for 'ugrep-indexer'\n\nlocal arguments=(\n{--accuracy=-,-0,-1,-2,-3,-4,-5,-6,-7,-8,-9}'[Specifies indexing accuracy, the default is 4]'\n",
                      "markdown": "`#compdef ugrep-indexer\n\n# zsh completions for 'ugrep-indexer'\n\nlocal arguments=(\n{--accuracy=-,-0,-1,-2,-3,-4,-5,-6,-7,-8,-9}'[Specifies indexing accuracy, the default is 4]'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 56,
                  "endLine": 101,
                  "endColumn": 64,
                  "snippet": {
                    "text": "pm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ugrep -s U -l",
                    "rendered": {
                      "text": "pm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ugrep -s U -l",
                      "markdown": "`pm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ugrep -s U -l`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 120,
                  "endLine": 77,
                  "endColumn": 124,
                  "snippet": {
                    "text": "p -l mmap -d 'Use memory maps to search files'\ncomplete -c ugrep -s N -r -l neg-regexp -d 'Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern'\ncomplete -c ugrep -s n -l line-number -d 'Each output line is preceded by its relative line number in the file, starting at line 1'\ncomplete -c ugrep -l not -d 'Specifies that PATTERN should not match'\ncomplete -c ugrep -s O -r -l file-extension -d 'Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each'\ncomplete -c ugrep -s o -l only-matching -d 'Onl",
                    "rendered": {
                      "text": "p -l mmap -d 'Use memory maps to search files'\ncomplete -c ugrep -s N -r -l neg-regexp -d 'Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern'\ncomplete -c ugrep -s n -l line-number -d 'Each output line is preceded by its relative line number in the file, starting at line 1'\ncomplete -c ugrep -l not -d 'Specifies that PATTERN should not match'\ncomplete -c ugrep -s O -r -l file-extension -d 'Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each'\ncomplete -c ugrep -s o -l only-matching -d 'Onl",
                      "markdown": "`p -l mmap -d 'Use memory maps to search files'\ncomplete -c ugrep -s N -r -l neg-regexp -d 'Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern'\ncomplete -c ugrep -s n -l line-number -d 'Each output line is preceded by its relative line number in the file, starting at line 1'\ncomplete -c ugrep -l not -d 'Specifies that PATTERN should not match'\ncomplete -c ugrep -s O -r -l file-extension -d 'Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each'\ncomplete -c ugrep -s o -l only-matching -d 'Onl`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 143,
                  "endLine": 65,
                  "endColumn": 147,
                  "snippet": {
                    "text": "d 'Output file matches in JSON'\ncomplete -c ugrep -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to standard output'\ncomplete -c ugrep -s l -l files-with-matches -d 'Only the names of files containing selected lines are written to standard output'\ncomplete -c ugrep -l la",
                    "rendered": {
                      "text": "d 'Output file matches in JSON'\ncomplete -c ugrep -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to standard output'\ncomplete -c ugrep -s l -l files-with-matches -d 'Only the names of files containing selected lines are written to standard output'\ncomplete -c ugrep -l la",
                      "markdown": "`d 'Output file matches in JSON'\ncomplete -c ugrep -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to standard output'\ncomplete -c ugrep -s l -l files-with-matches -d 'Only the names of files containing selected lines are written to standard output'\ncomplete -c ugrep -l la`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 96,
                  "endLine": 64,
                  "endColumn": 100,
                  "snippet": {
                    "text": "omplete -c ugrep -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ugrep -l json -d 'Output file matches in JSON'\ncomplete -c ugrep -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to",
                    "rendered": {
                      "text": "omplete -c ugrep -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ugrep -l json -d 'Output file matches in JSON'\ncomplete -c ugrep -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to",
                      "markdown": "`omplete -c ugrep -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ugrep -l json -d 'Output file matches in JSON'\ncomplete -c ugrep -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 78,
                  "endLine": 64,
                  "endColumn": 82,
                  "snippet": {
                    "text": "to search files'\ncomplete -c ugrep -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ugrep -l json -d 'Output file matches in JSON'\ncomplete -c ugrep -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep -s L -l files-without-match -d 'Only the names of files not containing selected li",
                    "rendered": {
                      "text": "to search files'\ncomplete -c ugrep -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ugrep -l json -d 'Output file matches in JSON'\ncomplete -c ugrep -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep -s L -l files-without-match -d 'Only the names of files not containing selected li",
                      "markdown": "`to search files'\ncomplete -c ugrep -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ugrep -l json -d 'Output file matches in JSON'\ncomplete -c ugrep -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ugrep -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ugrep -s L -l files-without-match -d 'Only the names of files not containing selected li`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 56,
                  "endLine": 101,
                  "endColumn": 64,
                  "snippet": {
                    "text": "pm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ugrep -s U -l",
                    "rendered": {
                      "text": "pm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ugrep -s U -l",
                      "markdown": "`pm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ugrep -s U -l`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 547,
                  "endLine": 100,
                  "endColumn": 552,
                  "snippet": {
                    "text": " js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep -l tree -s '^' -d",
                    "rendered": {
                      "text": " js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep -l tree -s '^' -d",
                      "markdown": "` js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ugrep -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ugrep -l tree -s '^' -d`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 433,
                  "endLine": 100,
                  "endColumn": 439,
                  "snippet": {
                    "text": "csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to expand tabs for option ",
                    "rendered": {
                      "text": "csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to expand tabs for option ",
                      "markdown": "`csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to expand tabs for option `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 413,
                  "endLine": 100,
                  "endColumn": 418,
                  "snippet": {
                    "text": "n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to ex",
                    "rendered": {
                      "text": "n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to ex",
                      "markdown": "`n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l tabs -d 'Set the tab size to NUM to ex`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 374,
                  "endLine": 100,
                  "endColumn": 379,
                  "snippet": {
                    "text": "oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l",
                    "rendered": {
                      "text": "oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l",
                      "markdown": "`oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ugrep -l`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 364,
                  "endLine": 100,
                  "endColumn": 370,
                  "snippet": {
                    "text": "p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c",
                    "rendered": {
                      "text": "p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c",
                      "markdown": "`p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 314,
                  "endLine": 100,
                  "endColumn": 320,
                  "snippet": {
                    "text": "rep -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES,",
                    "rendered": {
                      "text": "rep -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES,",
                      "markdown": "`rep -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES,`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 286,
                  "endLine": 100,
                  "endColumn": 291,
                  "snippet": {
                    "text": "matched line'\ncomplete -c ugrep -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only",
                    "rendered": {
                      "text": "matched line'\ncomplete -c ugrep -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only",
                      "markdown": "`matched line'\ncomplete -c ugrep -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 88,
                  "endLine": 100,
                  "endColumn": 93,
                  "snippet": {
                    "text": "earched and the inclusion and exclusion constraints applied'\ncomplete -c ugrep -s T -l initial-tab -d 'Add a tab space to separate the file name, line number, column number and byte offset with the matched line'\ncomplete -c ugrep -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr",
                    "rendered": {
                      "text": "earched and the inclusion and exclusion constraints applied'\ncomplete -c ugrep -s T -l initial-tab -d 'Add a tab space to separate the file name, line number, column number and byte offset with the matched line'\ncomplete -c ugrep -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr",
                      "markdown": "`earched and the inclusion and exclusion constraints applied'\ncomplete -c ugrep -s T -l initial-tab -d 'Add a tab space to separate the file name, line number, column number and byte offset with the matched line'\ncomplete -c ugrep -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 20,
                  "endLine": 97,
                  "endColumn": 26,
                  "snippet": {
                    "text": "ave configuration FILE to include OPTIONS'\ncomplete -c ugrep -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ugrep -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ugrep -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ugrep -l stats -d 'Output statistics on the number of files and directories searched and the inclusion and exclusion constr",
                    "rendered": {
                      "text": "ave configuration FILE to include OPTIONS'\ncomplete -c ugrep -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ugrep -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ugrep -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ugrep -l stats -d 'Output statistics on the number of files and directories searched and the inclusion and exclusion constr",
                      "markdown": "`ave configuration FILE to include OPTIONS'\ncomplete -c ugrep -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ugrep -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ugrep -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ugrep -l stats -d 'Output statistics on the number of files and directories searched and the inclusion and exclusion constr`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 53,
                  "endLine": 96,
                  "endColumn": 61,
                  "snippet": {
                    "text": "'\ncomplete -c ugrep -l save-config -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ugrep -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ugrep -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ugrep -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ugrep -l stats -d 'Output statistics on the number of files and directories searched ",
                    "rendered": {
                      "text": "'\ncomplete -c ugrep -l save-config -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ugrep -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ugrep -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ugrep -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ugrep -l stats -d 'Output statistics on the number of files and directories searched ",
                      "markdown": "`'\ncomplete -c ugrep -l save-config -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ugrep -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ugrep -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ugrep -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ugrep -l stats -d 'Output statistics on the number of files and directories searched `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ugrep.fish"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 64,
                  "endLine": 83,
                  "endColumn": 70,
                  "snippet": {
                    "text": "ly the matching part of a pattern match is output'\ncomplete -c ugrep -l only-line-number -d 'Only the line number of a matching line is output'\ncomplete -c ugrep -l files -o '%%' -d 'Boolean file matching mode, the opposite of --lines'\ncomplete -c ugrep -s P -l perl-regexp -d 'Interpret PATTERN as a Perl regular expression using PCRE2'\ncomplete -c ugrep -s p -l no-dereference -d 'If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line'\ncomplete -c ugrep -l pager -d 'When output is sent to the terminal, uses COMMAND to page through the output",
                    "rendered": {
                      "text": "ly the matching part of a pattern match is output'\ncomplete -c ugrep -l only-line-number -d 'Only the line number of a matching line is output'\ncomplete -c ugrep -l files -o '%%' -d 'Boolean file matching mode, the opposite of --lines'\ncomplete -c ugrep -s P -l perl-regexp -d 'Interpret PATTERN as a Perl regular expression using PCRE2'\ncomplete -c ugrep -s p -l no-dereference -d 'If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line'\ncomplete -c ugrep -l pager -d 'When output is sent to the terminal, uses COMMAND to page through the output",
                      "markdown": "`ly the matching part of a pattern match is output'\ncomplete -c ugrep -l only-line-number -d 'Only the line number of a matching line is output'\ncomplete -c ugrep -l files -o '%%' -d 'Boolean file matching mode, the opposite of --lines'\ncomplete -c ugrep -s P -l perl-regexp -d 'Interpret PATTERN as a Perl regular expression using PCRE2'\ncomplete -c ugrep -s p -l no-dereference -d 'If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line'\ncomplete -c ugrep -l pager -d 'When output is sent to the terminal, uses COMMAND to page through the output`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 54,
                  "endLine": 101,
                  "endColumn": 62,
                  "snippet": {
                    "text": " rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug+ -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ug+ -s U -l ascii",
                    "rendered": {
                      "text": " rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug+ -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ug+ -s U -l ascii",
                      "markdown": "` rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug+ -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ug+ -s U -l ascii`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 118,
                  "endLine": 77,
                  "endColumn": 122,
                  "snippet": {
                    "text": "c ug+ -l mmap -d 'Use memory maps to search files'\ncomplete -c ug+ -s N -r -l neg-regexp -d 'Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern'\ncomplete -c ug+ -s n -l line-number -d 'Each output line is preceded by its relative line number in the file, starting at line 1'\ncomplete -c ug+ -l not -d 'Specifies that PATTERN should not match'\ncomplete -c ug+ -s O -r -l file-extension -d 'Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each'\ncomplete -c ug+ -s o -l only-matching -d 'Only the ",
                    "rendered": {
                      "text": "c ug+ -l mmap -d 'Use memory maps to search files'\ncomplete -c ug+ -s N -r -l neg-regexp -d 'Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern'\ncomplete -c ug+ -s n -l line-number -d 'Each output line is preceded by its relative line number in the file, starting at line 1'\ncomplete -c ug+ -l not -d 'Specifies that PATTERN should not match'\ncomplete -c ug+ -s O -r -l file-extension -d 'Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each'\ncomplete -c ug+ -s o -l only-matching -d 'Only the ",
                      "markdown": "`c ug+ -l mmap -d 'Use memory maps to search files'\ncomplete -c ug+ -s N -r -l neg-regexp -d 'Specify a negative PATTERN to reject specific -e PATTERN matches with a counter pattern'\ncomplete -c ug+ -s n -l line-number -d 'Each output line is preceded by its relative line number in the file, starting at line 1'\ncomplete -c ug+ -l not -d 'Specifies that PATTERN should not match'\ncomplete -c ug+ -s O -r -l file-extension -d 'Only search files whose filename extensions match the specified comma-separated list of EXTENSIONS, same as -g *.ext for each'\ncomplete -c ug+ -s o -l only-matching -d 'Only the `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 141,
                  "endLine": 65,
                  "endColumn": 145,
                  "snippet": {
                    "text": "on -d 'Output file matches in JSON'\ncomplete -c ug+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug+ -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to standard output'\ncomplete -c ug+ -s l -l files-with-matches -d 'Only the names of files containing selected lines are written to standard output'\ncomplete -c ug+ -l label -d",
                    "rendered": {
                      "text": "on -d 'Output file matches in JSON'\ncomplete -c ug+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug+ -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to standard output'\ncomplete -c ug+ -s l -l files-with-matches -d 'Only the names of files containing selected lines are written to standard output'\ncomplete -c ug+ -l label -d",
                      "markdown": "`on -d 'Output file matches in JSON'\ncomplete -c ug+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug+ -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to standard output'\ncomplete -c ug+ -s l -l files-with-matches -d 'Only the names of files containing selected lines are written to standard output'\ncomplete -c ug+ -l label -d`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 94,
                  "endLine": 64,
                  "endColumn": 98,
                  "snippet": {
                    "text": "les'\ncomplete -c ug+ -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ug+ -l json -d 'Output file matches in JSON'\ncomplete -c ug+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug+ -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to sta",
                    "rendered": {
                      "text": "les'\ncomplete -c ug+ -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ug+ -l json -d 'Output file matches in JSON'\ncomplete -c ug+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug+ -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to sta",
                      "markdown": "`les'\ncomplete -c ug+ -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ug+ -l json -d 'Output file matches in JSON'\ncomplete -c ug+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug+ -s L -l files-without-match -d 'Only the names of files not containing selected lines are written to sta`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 76,
                  "endLine": 64,
                  "endColumn": 80,
                  "snippet": {
                    "text": "awned to search files'\ncomplete -c ug+ -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ug+ -l json -d 'Output file matches in JSON'\ncomplete -c ug+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug+ -s L -l files-without-match -d 'Only the names of files not containing selected lines ",
                    "rendered": {
                      "text": "awned to search files'\ncomplete -c ug+ -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ug+ -l json -d 'Output file matches in JSON'\ncomplete -c ug+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug+ -s L -l files-without-match -d 'Only the names of files not containing selected lines ",
                      "markdown": "`awned to search files'\ncomplete -c ug+ -s j -l smart-case -d 'Perform case insensitive matching, unless a pattern is specified with a literal upper case ASCII letter'\ncomplete -c ug+ -l json -d 'Output file matches in JSON'\ncomplete -c ug+ -s K -r -l range -l min-line -l max-line -d 'Start searching at line MIN, stop at line MAX when specified'\ncomplete -c ug+ -s k -l column-number -d 'The column number of a pattern match is displayed in front of the respective matched line, starting at column 1'\ncomplete -c ug+ -s L -l files-without-match -d 'Only the names of files not containing selected lines `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 54,
                  "endLine": 101,
                  "endColumn": 62,
                  "snippet": {
                    "text": " rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug+ -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ug+ -s U -l ascii",
                    "rendered": {
                      "text": " rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug+ -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ug+ -s U -l ascii",
                      "markdown": "` rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug+ -l tree -s '^' -d 'Output directories with matching files in a tree-like format for option -c or --count, -l or --files-with-matches, -L or --files-without-match'\ncomplete -c ug+ -s U -l ascii`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 545,
                  "endLine": 100,
                  "endColumn": 550,
                  "snippet": {
                    "text": " js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug+ -l tree -s '^' -d 'Outp",
                    "rendered": {
                      "text": " js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug+ -l tree -s '^' -d 'Outp",
                      "markdown": "` js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k'\ncomplete -c ug+ -l tag -d 'Disables colors to mark up matches with TAG'\ncomplete -c ug+ -l tree -s '^' -d 'Outp`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 431,
                  "endLine": 100,
                  "endColumn": 437,
                  "snippet": {
                    "text": "csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k",
                    "rendered": {
                      "text": "csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k",
                      "markdown": "`csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expand tabs for option -k`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 411,
                  "endLine": 100,
                  "endColumn": 416,
                  "snippet": {
                    "text": "n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expa",
                    "rendered": {
                      "text": "n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expa",
                      "markdown": "`n c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l tabs -d 'Set the tab size to NUM to expa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 372,
                  "endLine": 100,
                  "endColumn": 377,
                  "snippet": {
                    "text": "oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l t",
                    "rendered": {
                      "text": "oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l t",
                      "markdown": "`oconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c ug+ -l t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 362,
                  "endLine": 100,
                  "endColumn": 368,
                  "snippet": {
                    "text": "p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c",
                    "rendered": {
                      "text": "p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c",
                      "markdown": "`p aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES, a comma-separated list of file types'\ncomplete -c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 312,
                  "endLine": 100,
                  "endColumn": 318,
                  "snippet": {
                    "text": "ug+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES,",
                    "rendered": {
                      "text": "ug+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES,",
                      "markdown": "`ug+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only files associated with TYPES,`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 284,
                  "endLine": 100,
                  "endColumn": 289,
                  "snippet": {
                    "text": "e matched line'\ncomplete -c ug+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only",
                    "rendered": {
                      "text": "e matched line'\ncomplete -c ug+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only",
                      "markdown": "`e matched line'\ncomplete -c ug+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png prolog python Python r rpm Rpm rst rtf Rtf ruby Ruby rust scala scheme shell Shell smalltalk sql svg swift tcl tex text tiff Tiff tt typescript verilog vhdl vim xml Xml yacc yaml zig ' -d 'Search only`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 86,
                  "endLine": 100,
                  "endColumn": 91,
                  "snippet": {
                    "text": "es searched and the inclusion and exclusion constraints applied'\ncomplete -c ug+ -s T -l initial-tab -d 'Add a tab space to separate the file name, line number, column number and byte offset with the matched line'\ncomplete -c ug+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr",
                    "rendered": {
                      "text": "es searched and the inclusion and exclusion constraints applied'\ncomplete -c ug+ -s T -l initial-tab -d 'Add a tab space to separate the file name, line number, column number and byte offset with the matched line'\ncomplete -c ug+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr",
                      "markdown": "`es searched and the inclusion and exclusion constraints applied'\ncomplete -c ug+ -s T -l initial-tab -d 'Add a tab space to separate the file name, line number, column number and byte offset with the matched line'\ncomplete -c ug+ -s t -l file-type -xa 'actionscript ada asm asp aspx autoconf automake awk Awk basic batch bison c c++ clojure cpp csharp css csv dart Dart delphi elisp elixir erlang fortran gif Gif go groovy gsp haskell html jade java jpeg Jpeg js json jsp julia kotlin less lex lisp lua m4 make markdown matlab node Node objc objc++ ocaml parrot pascal pdf Pdf perl Perl php Php png Png pr`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 18,
                  "endLine": 97,
                  "endColumn": 24,
                  "snippet": {
                    "text": " -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ug+ -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ug+ -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ug+ -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ug+ -l stats -d 'Output statistics on the number of files and directories searched and the inclusion and exclusion constrai",
                    "rendered": {
                      "text": " -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ug+ -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ug+ -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ug+ -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ug+ -l stats -d 'Output statistics on the number of files and directories searched and the inclusion and exclusion constrai",
                      "markdown": "` -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ug+ -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ug+ -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ug+ -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ug+ -l stats -d 'Output statistics on the number of files and directories searched and the inclusion and exclusion constrai`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 51,
                  "endLine": 96,
                  "endColumn": 59,
                  "snippet": {
                    "text": "ressed'\ncomplete -c ug+ -l save-config -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ug+ -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ug+ -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ug+ -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ug+ -l stats -d 'Output statistics on the number of files and directories searched and ",
                    "rendered": {
                      "text": "ressed'\ncomplete -c ug+ -l save-config -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ug+ -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ug+ -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ug+ -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ug+ -l stats -d 'Output statistics on the number of files and directories searched and ",
                      "markdown": "`ressed'\ncomplete -c ug+ -l save-config -d 'Save configuration FILE to include OPTIONS'\ncomplete -c ug+ -l separator -l context-separator -d 'Use SEP as field separator between file name, line number, column number, byte offset and the matched line'\ncomplete -c ug+ -l split -d 'Split the -Q query TUI screen on startup'\ncomplete -c ug+ -l sort -xa 'name best size changed created used rname rbest rsize rchanged rcreated rused' -d 'Displays matching files in the order specified by KEY in recursive searches'\ncomplete -c ug+ -l stats -d 'Output statistics on the number of files and directories searched and `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/usr/share/fish/vendor_completions.d/ug+.fish"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 62,
                  "endLine": 83,
                  "endColumn": 68,
                  "snippet": {
                    "text": "-d 'Only the matching part of a pattern match is output'\ncomplete -c ug+ -l only-line-number -d 'Only the line number of a matching line is output'\ncomplete -c ug+ -l files -o '%%' -d 'Boolean file matching mode, the opposite of --lines'\ncomplete -c ug+ -s P -l perl-regexp -d 'Interpret PATTERN as a Perl regular expression using PCRE2'\ncomplete -c ug+ -s p -l no-dereference -d 'If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line'\ncomplete -c ug+ -l pager -d 'When output is sent to the terminal, uses COMMAND to page through the output'\nco",
                    "rendered": {
                      "text": "-d 'Only the matching part of a pattern match is output'\ncomplete -c ug+ -l only-line-number -d 'Only the line number of a matching line is output'\ncomplete -c ug+ -l files -o '%%' -d 'Boolean file matching mode, the opposite of --lines'\ncomplete -c ug+ -s P -l perl-regexp -d 'Interpret PATTERN as a Perl regular expression using PCRE2'\ncomplete -c ug+ -s p -l no-dereference -d 'If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line'\ncomplete -c ug+ -l pager -d 'When output is sent to the terminal, uses COMMAND to page through the output'\nco",
                      "markdown": "`-d 'Only the matching part of a pattern match is output'\ncomplete -c ug+ -l only-line-number -d 'Only the line number of a matching line is output'\ncomplete -c ug+ -l files -o '%%' -d 'Boolean file matching mode, the opposite of --lines'\ncomplete -c ug+ -s P -l perl-regexp -d 'Interpret PATTERN as a Perl regular expression using PCRE2'\ncomplete -c ug+ -s p -l no-dereference -d 'If -R or -r is specified, do not follow symbolic links, even when symbolic links are specified on the command line'\ncomplete -c ug+ -l pager -d 'When output is sent to the terminal, uses COMMAND to page through the output'\nco`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/ugrep-6.5.0-r0.apk/ugrep-6.5.0-r0/.PKGINFO"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 20,
                  "endLine": 7,
                  "endColumn": 26,
                  "snippet": {
                    "text": "arch = x86_64\nsize = 3446988\norigin = ugrep\npkgdesc = Ultra fast grep with interactive query UI and fuzzy search\nurl = \ncommit = 1cfcf3f7a85223ae6994dbf5e14d4cba8f4c50df\nbuilddate = 1724470072\n",
                    "rendered": {
                      "text": "arch = x86_64\nsize = 3446988\norigin = ugrep\npkgdesc = Ultra fast grep with interactive query UI and fuzzy search\nurl = \ncommit = 1cfcf3f7a85223ae6994dbf5e14d4cba8f4c50df\nbuilddate = 1724470072\n",
                      "markdown": "`arch = x86_64\nsize = 3446988\norigin = ugrep\npkgdesc = Ultra fast grep with interactive query UI and fuzzy search\nurl = \ncommit = 1cfcf3f7a85223ae6994dbf5e14d4cba8f4c50df\nbuilddate = 1724470072\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}